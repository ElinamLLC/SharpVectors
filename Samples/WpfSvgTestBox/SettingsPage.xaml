<Page x:Class="WpfSvgTestBox.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:local="clr-namespace:WpfSvgTestBox"
      mc:Ignorable="d" 
      d:DesignHeight="960" d:DesignWidth="960" Background="White" Title="SettingsPage">
    <Page.Resources>
        <Style TargetType="GroupBox">
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="Margin" Value="5,1,5,5"/>
        </Style>
    </Page.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <StackPanel Margin="20 10 20 10" ToolTipService.ShowDuration="10000">
            <GroupBox HorizontalAlignment="Stretch" FontSize="14">
                <GroupBox.Header>
                    <TextBlock Text="Svg Input Settings" FontWeight="Bold" FontSize="18"/>
                </GroupBox.Header>
                <StackPanel Orientation="Vertical" Margin="20 6 6 3">
                    <CheckBox x:Name="chkTextAsGeometry" Click="OnSettingsChanged">
                        <TextBlock Text="Convert text as path geometry" FontWeight="Bold"/>
                    </CheckBox>
                    <TextBlock Padding="32 3 3 10" TextWrapping="Wrap">
                        <Run>All SVG text elements will be converted to paths.</Run>                    
                        <LineBreak/>
                        <Bold>NOTE:&#160;</Bold>
                        <Run>      
                            Depending on the styling (eg. text with both stroke and fill), the text may still be converted to paths.
                            Also, text on paths are converted to path geometries.
                        </Run>
                    </TextBlock>
                    <CheckBox x:Name="chkIncludeRuntime" Click="OnSettingsChanged">
                        <TextBlock Text="Include support for SharpVectors Runtime library" FontWeight="Bold"/>
                    </CheckBox>
                    <TextBlock Padding="32 3 3 10" TextWrapping="Wrap">
                        <Run>                    
                            Select this if you want to link to the SharpVectors Runtime library.
                        </Run>
                        <LineBreak/>
                        <Bold>NOTE:&#160;</Bold>
                        <Run>      
                            If this option is not selected, then select the option to render
                            text as geometric paths; otherwise, font locations may not be resolved
                            properly on the end-user system.
                        </Run>
                    </TextBlock>

                    <CheckBox x:Name="chkIgnoreRootViewbox" Click="OnSettingsChanged">
                        <TextBlock Text="Ignore SVG Root Viewbox" FontWeight="Bold"/>
                    </CheckBox>
                    <TextBlock Padding="32 3 3 3">
                        Indicates turning off viewbox at the root of the drawing.
                    </TextBlock>
                    <CheckBox x:Name="chkEnsureViewboxSize" Click="OnSettingsChanged">
                        <TextBlock Text="Ensure Viewbox Size" FontWeight="Bold"/>
                    </CheckBox>
                    <TextBlock Padding="32 3 3 3">
                        Indicate preserving the original viewbox size when saving images.
                    </TextBlock>
                    <CheckBox x:Name="chkEnsureViewboxPosition" Click="OnSettingsChanged">
                        <TextBlock Text="Ensure Viewbox Position" FontWeight="Bold"/>
                    </CheckBox>
                    <TextBlock Padding="32 3 3 3">
                        Indicate applying a translate transform to the viewbox to ensure it is visible when rendered.
                    </TextBlock>
                </StackPanel>            
            </GroupBox>
            
            <GroupBox HorizontalAlignment="Stretch" FontSize="14">
                <GroupBox.Header>
                    <TextBlock Text="Resource Dictionary Settings" FontWeight="Bold" FontSize="18"/>
                </GroupBox.Header>
                <StackPanel Orientation="Vertical" Margin="20 6 6 3">
                    <GroupBox>
                        <GroupBox.Header>
                            <TextBlock Text="Conversions (SVG to WPF)" FontWeight="Bold" FontSize="16"/>
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical" Margin="10 6 6 3">
                            <CheckBox x:Name="chkResourceTextAsGeometry" Click="OnConversionSettingsChanged" IsChecked="True">
                                <TextBlock>
                                    <Run>Convert text as path geometry</Run>
                                    <Run Foreground="Blue">(Checked Recommended)</Run>
                                </TextBlock>
                            </CheckBox>
                            <CheckBox x:Name="chkResourceIncludeRuntime" Click="OnConversionSettingsChanged" IsChecked="False">
                                <TextBlock>
                                    <Run>Include support for SharpVectors Runtime library</Run>
                                    <Run Foreground="Blue"> (Unchecked Recommended)</Run>
                                </TextBlock>
                            </CheckBox>

                            <CheckBox x:Name="chkResourceIgnoreRootViewbox" Click="OnConversionSettingsChanged">
                                <TextBlock Text="Ignore SVG Root Viewbox"/>
                            </CheckBox>
                            <CheckBox x:Name="chkResourceEnsureViewboxSize" Click="OnConversionSettingsChanged">
                                <TextBlock Text="Ensure Viewbox Size"/>
                            </CheckBox>
                            <CheckBox x:Name="chkResourceEnsureViewboxPosition" Click="OnConversionSettingsChanged">
                                <TextBlock Text="Ensure Viewbox Position"/>
                            </CheckBox>

                            <GroupBox HorizontalAlignment="Left">
                                <GroupBox.Header>
                                    <TextBlock Text="Image or Drawing Pixel Size" FontWeight="Bold" FontSize="14"/>
                                </GroupBox.Header>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="20 3 3 3">
                                    <StackPanel Orientation="Horizontal">
                                        <Label>Width</Label>
                                        <TextBox x:Name="txtResourcePixelWidth" Width="50" VerticalContentAlignment="Center" Text="0" TextChanged="OnConversionSettingsChanged"></TextBox>
                                        <TextBlock Text="px" VerticalAlignment="Center" Margin="3 0 20 0"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">                            
                                        <Label HorizontalContentAlignment="Right">Height</Label>
                                        <TextBox x:Name="txtResourcePixelHeight" Width="50" VerticalContentAlignment="Center" Text="0" TextChanged="OnConversionSettingsChanged"></TextBox>
                                        <TextBlock Text="px" VerticalAlignment="Center" Margin="3 0 6 0"/>
                                        <TextBlock VerticalAlignment="Center" Foreground="Blue" Margin="3 0 6 0"> (Values less than or equal to zero (0) are not applied.)</TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox>
                        <GroupBox.Header>
                            <TextBlock Text="Resources (WPF to XAML)" FontWeight="Bold" FontSize="16"/>
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical" Margin="10 6 6 3">
                            <CheckBox x:Name="chkResourceFreeze" Click="OnResourceSettingsChanged" IsChecked="True">
                                <TextBlock>
                                    <Run>Freeze resources</Run>
                                    <Run Foreground="Blue"> (checked, will freeze selected top-level resource mode: DrawingGroup or DrawingImage)</Run>
                                </TextBlock>
                            </CheckBox>
                            
                            <CheckBox x:Name="chkResourceUseIndex" Click="OnResourceSettingsChanged" IsChecked="False">
                                <TextBlock>
                                    <Run>Use index for numbering</Run>
                                    <Run Foreground="Blue"> (checked, numbering will be zero-based: Pen0, Pen1, Pen2 etc)</Run>
                                </TextBlock>
                            </CheckBox>
                            
                            <StackPanel Orientation="Horizontal" Margin="0 3 3 3">
                                <Label HorizontalContentAlignment="Left" Width="160">Color Name Format</Label>
                                <TextBox x:Name="txtResourceColorNameFormat" Width="250" VerticalContentAlignment="Center" Text="Color{0}" TextChanged="OnResourceSettingsChanged" LostFocus="OnLostFocusHandler" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 3 3 3">
                                <Label HorizontalContentAlignment="Left" Width="160">Brush Name Format</Label>
                                <TextBox x:Name="txtResourceBrushNameFormat" Width="250" VerticalContentAlignment="Center" Text="Brush{0}" TextChanged="OnResourceSettingsChanged" LostFocus="OnLostFocusHandler" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 3 3 3">
                                <Label HorizontalContentAlignment="Left" Width="160">Pen Name Format</Label>
                                <TextBox x:Name="txtResourcePenNameFormat" Width="250" VerticalContentAlignment="Center" Text="Pen{0}" TextChanged="OnResourceSettingsChanged" LostFocus="OnLostFocusHandler" />
                            </StackPanel>

                            <StackPanel Orientation="Vertical" Margin="0 3 3 3">
                                <StackPanel Orientation="Horizontal" Margin="0 3 3 3">
                                    <StackPanel.ToolTip>
                                        <TextBlock TextWrapping="Wrap" MaxWidth="500">
                                            Key name resolver is used to provide the names of the resources in the ResourceDictionary.
                                        </TextBlock>
                                    </StackPanel.ToolTip>
                                    <Label HorizontalContentAlignment="Left" Width="160">Resource Key Resolver</Label>
                                    <ComboBox x:Name="cboResourceKeyResolver" Width="250" IsEditable="False" SelectedIndex="0" SelectionChanged="OnResourceKeyResolverChanged">
                                        <ComboBox.Resources>
                                            <DataTemplate DataType="{x:Type sys:String}">
                                                <TextBlock x:Name="text" Text="{Binding}" />
                                            </DataTemplate>
                                        </ComboBox.Resources>
                                        <sys:String>Default</sys:String>
                                        <sys:String>Dictionary</sys:String>
                                        <sys:String>CodeSnippet</sys:String>
                                        <sys:String>Custom</sys:String>
                                    </ComboBox>
                                    <Button x:Name="btnKeyDictionary" Visibility="Collapsed" Content="Define Dictionary" Width="250" Margin="6 0 0 0" Click="OnDictionaryKeyClicked"/>
                                    <Button x:Name="btnKeyCodeSnippet" Visibility="Collapsed" Content="Edit Code Snippet" Width="250" Margin="6 0 0 0" Click="OnCodeSnippetClicked"/>
                                    <Button x:Name="btnKeyCustom" Visibility="Collapsed" IsEnabled="False" Content="SvgTestResourceKeyResolver is used" Width="250" Margin="6 0 0 0" />
                                </StackPanel>
                                <TextBlock x:Name="txtResourceKeyResolver" Foreground="Blue" Margin="40 0 0 0" Visibility="Collapsed"> </TextBlock>
                            </StackPanel>

                            <StackPanel Orientation="Vertical" Margin="0 0 3 6" x:Name="panelDefault">
                                <StackPanel Orientation="Horizontal" Margin="0 3 3 0">
                                    <Label HorizontalContentAlignment="Left" Width="160">Resource Name Format</Label>
                                    <TextBox x:Name="txtResourceNameFormat" Width="250" VerticalContentAlignment="Center" Text="" TextChanged="OnResourceSettingsChanged" LostFocus="OnLostFocusHandler" />
                                    <TextBlock Margin="3 0 0 0" VerticalAlignment="Center" Foreground="Blue">String template format. If not provided, the SVG file name without extension is used.</TextBlock>
                                </StackPanel>
                                <TextBlock Foreground="Blue" Margin="40 0 0 0" >Supported tags are ${name} for file name without extension and ${number} for resource number. Eg: Icon_${name}, Icon_${number}</TextBlock>
                            </StackPanel>
                            
                            <StackPanel Orientation="Horizontal" Margin="0 3 3 3">
                                <StackPanel.ToolTip>
                                    <TextBlock TextWrapping="Wrap" MaxWidth="500">
                                        Currently only DrawingGroup and DrawingImage are supported as resource root element.
                                        Other possible root elements are DrawingBrush and Style.
                                    </TextBlock>
                                </StackPanel.ToolTip>
                                <Label HorizontalContentAlignment="Left" Width="160">Resource Mode</Label>
                                <ComboBox x:Name="cboResourceMode" Width="250" IsEditable="False" SelectedIndex="0" SelectionChanged="OnResourceSettingsChanged">
                                    <ComboBox.Resources>
                                        <DataTemplate DataType="{x:Type sys:String}">
                                            <TextBlock x:Name="text" Text="{Binding}" />
                                        </DataTemplate>
                                    </ComboBox.Resources>
                                    <sys:String>DrawingGroup</sys:String>
                                    <sys:String>DrawingImage</sys:String>
                                </ComboBox>
                            </StackPanel>
                            
                            <StackPanel Orientation="Horizontal" Margin="0 3 3 3">
                                <StackPanel.ToolTip>
                                    <TextBlock TextWrapping="Wrap" MaxWidth="500">
                                        Supports the DynamicResource and StaticResource resource access types.
                                    </TextBlock>
                                </StackPanel.ToolTip>
                                <Label HorizontalContentAlignment="Left" Width="160">Resource Access</Label>
                                <ComboBox x:Name="cboResourceAccess" Width="250" IsEditable="False" SelectedIndex="0" SelectionChanged="OnResourceSettingsChanged">
                                    <ComboBox.Resources>
                                        <DataTemplate DataType="{x:Type sys:String}">
                                            <TextBlock x:Name="text" Text="{Binding}" />
                                        </DataTemplate>
                                    </ComboBox.Resources>
                                    <sys:String>DynamicResource</sys:String>
                                    <sys:String>StaticResource</sys:String>
                                </ComboBox>
                            </StackPanel>

                            <GroupBox Margin="0 10 10 10" HorizontalAlignment="Left">
                                <GroupBox.Header>
                                    <CheckBox x:Name="chkResourceBindToResources" Click="OnResourceSettingsChanged" IsChecked="True">
                                        <TextBlock Text="Resource Binding" FontWeight="Bold" FontSize="14"/>
                                    </CheckBox>
                                </GroupBox.Header>
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Margin="20 10 10 10">
                                    <CheckBox x:Name="chkResourceBindToColors" Click="OnResourceSettingsChanged" IsChecked="True" Margin="3">
                                        <TextBlock>
                                            <Run>Bind to resource colors</Run>
                                            <Run Foreground="Blue"> (checked, will collect color of brushes for &lt;SolidColorBrush Color="{DynamicResource Color0}" /&gt;)</Run>
                                        </TextBlock>
                                    </CheckBox>
                                    <CheckBox x:Name="chkResourceBindPenToBrushes" Click="OnResourceSettingsChanged" IsChecked="True" Margin="3">
                                        <TextBlock>
                                            <Run>Bind pens to resource brushes</Run>
                                            <Run Foreground="Blue"> (checked, will collect brushes of pens for &lt;Pen Brush="{DynamicResource Brush0}" /&gt;)</Run>
                                        </TextBlock>
                                    </CheckBox>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </GroupBox>
                    
                    <GroupBox>
                        <GroupBox.Header>
                            <TextBlock Text="Formatting (WPF to XAML)" FontWeight="Bold" FontSize="16"/>
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical" Margin="10 6 6 3">
                            <StackPanel Margin="0,0,0,8" Orientation="Horizontal" Background="Transparent" >
                                <StackPanel.ToolTip>
                                    <TextBlock TextWrapping="Wrap" MaxWidth="500">
                                        Specify the numeric precision to control the number of decimal places in XAML outputs.
                                        Any number less than zero (0) will disable the precision settings.
                                    </TextBlock>
                                </StackPanel.ToolTip>
                                <TextBlock Width="150" VerticalAlignment="Center">Numeric Precision</TextBlock>
                                <ComboBox Width="100" x:Name="cboNumericPrecision" SelectedIndex="4" VerticalAlignment="Center" SelectionChanged="OnResourceSettingsChanged">
                                    <ComboBox.Resources>
                                        <DataTemplate DataType="{x:Type sys:Int32}">
                                            <TextBlock x:Name="text" Text="{Binding}" />
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding}" Value="-1">
                                                    <Setter TargetName="text" Property="Text" Value="Disabled" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ComboBox.Resources>
                                    <sys:Int32>0</sys:Int32>
                                    <sys:Int32>1</sys:Int32>
                                    <sys:Int32>2</sys:Int32>
                                    <sys:Int32>3</sys:Int32>
                                    <sys:Int32>4</sys:Int32>
                                    <sys:Int32>5</sys:Int32>
                                    <sys:Int32>10</sys:Int32>
                                    <sys:Int32>-1</sys:Int32>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Margin="0,0,0,12" Orientation="Horizontal" Background="Transparent" >
                                <StackPanel.ToolTip>
                                    <TextBlock TextWrapping="Wrap" MaxWidth="500">
                                        Specify the number of indent spaces, indentation is on by default.
                                    </TextBlock>
                                </StackPanel.ToolTip>
                                <TextBlock Width="150" Text="Indent Spaces"/>
                                <ComboBox Width="100" x:Name="cboIndentSpaces" SelectedIndex="3" VerticalAlignment="Center" SelectionChanged="OnResourceSettingsChanged">
                                    <ComboBox.Resources>
                                        <DataTemplate DataType="{x:Type sys:Int32}">
                                            <TextBlock>
                                            <TextBlock Text="{Binding}" />
                                            <TextBlock Text="spaces" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </ComboBox.Resources>
                                    <sys:Int32>1</sys:Int32>
                                    <sys:Int32>2</sys:Int32>
                                    <sys:Int32>3</sys:Int32>
                                    <sys:Int32>4</sys:Int32>
                                    <sys:Int32>5</sys:Int32>
                                    <sys:Int32>6</sys:Int32>
                                    <sys:Int32>8</sys:Int32>
                                </ComboBox>
                            </StackPanel>                            
                        </StackPanel>
                    </GroupBox>
                </StackPanel>            
            </GroupBox>
        </StackPanel>
        
    </ScrollViewer>
</Page>
