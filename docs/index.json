{
  "api/index.html": {
    "href": "api/index.html",
    "title": "SharpVectors.Converters | SharpVectors Documentation",
    "keywords": "SharpVectors.Converters Use the table of contents to browse API documentation for the SharpVectors.Converters library."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.html",
    "title": "Class DirectorySvgConverter | SharpVectors Documentation",
    "keywords": "Class DirectorySvgConverter This converts a directory (and optionally the sub-directories) of SVG files to XAML files in a specified directory, maintaining the original directory structure. It uses FileSvgConverter or ImageSvgConverter converter to process each SVG file in the specified directory. Inheritance Object DispatcherObject DependencyObject SvgConverter DirectorySvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter._saveXaml SvgConverter._saveZaml SvgConverter._useFrameXamlWriter SvgConverter._isEmbedded SvgConverter._dpiX SvgConverter._dpiY SvgConverter._background SvgConverter._wpfSettings SvgConverter._wpfWindow SvgConverter._wpfRenderer SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.BeginProcessing(WpfDrawingDocument) SvgConverter.EndProcessing() SvgConverter.GetBitmapEncoder(ImageEncoderType) SvgConverter.GetImageFileExtention(ImageEncoderType) SvgConverter.Dispose() SvgConverter.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class DirectorySvgConverter : SvgConverter, IDisposable Constructors DirectorySvgConverter(WpfDrawingSettings) Initializes a new instance of the WpfDrawingSettings class with the specified drawing or rendering settings. Declaration public DirectorySvgConverter(WpfDrawingSettings settings) Parameters Type Name Description WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Properties DestinationDir Gets the destination directory of the converted XAML files. Declaration public DirectoryInfo DestinationDir { get; } Property Value Type Description DirectoryInfo A DirectoryInfo specifying the destination directory of the converted XAML files. Encoder Gets or sets a custom bitmap encoder to use in encoding the drawing to an image file. Declaration public BitmapEncoder Encoder { get; set; } Property Value Type Description BitmapEncoder A derived BitmapEncoder object specifying the bitmap encoder for encoding the images. The default is null , and the EncoderType property determines the encoder used. Remarks If the value of this is set, it must match the MIME type or file extension defined by the EncoderType property for it to be used. EncoderType Gets or set the bitmap encoder type to use in encoding the drawing to an image file. Declaration public ImageEncoderType EncoderType { get; set; } Property Value Type Description ImageEncoderType An enumeration of the type ImageEncoderType specifying the bitmap encoder. The default is the PngBitmap . ErrorFile Gets the full path of the last SVG file not successfully converted. Declaration public string ErrorFile { get; } Property Value Type Description String A string containing the full path of the last SVG file not successfully converted to the XAML Remarks Whenever an error occurred in the conversion of a file, the conversion process will stop. Use this property to retrieve the full path of the SVG file causing the error. FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework XAML writer when an error occurred in using the custom writer. Declaration public bool FallbackOnWriterError { get; set; } Property Value Type Description Boolean This is true if the converter falls back to using the system XAML writer when an error occurred in using the custom writer; otherwise, it is false . If false , an exception, which occurred in using the custom writer will be thrown. The default is false . IncludeHidden Gets or sets a value indicating whether the copy operation includes hidden directories and files. Declaration public bool IncludeHidden { get; set; } Property Value Type Description Boolean This property is true if hidden directories and files are included in the copy operation; otherwise, it is false . The default is false . IncludeSecurity Gets or sets a value indicating whether the security settings of the copied file is retained. Declaration public bool IncludeSecurity { get; set; } Property Value Type Description Boolean This property is true if the security settings of the file is also copied; otherwise, it is false . The default is false . Overwrite Gets or sets a value indicating whether an existing file is overwritten. Declaration public bool Overwrite { get; set; } Property Value Type Description Boolean This property is true if existing file is overwritten; otherwise, it is false . The default is true . Recursive Gets or sets a value indicating whether the directory copying is recursive, that is includes the sub-directories. Declaration public bool Recursive { get; set; } Property Value Type Description Boolean This property is true if the sub-directories are included in the directory copy; otherwise, it is false . The default is true . SaveImage Gets or sets a value indicating whether to save static or bitmap image output. Declaration public bool SaveImage { get; set; } Property Value Type Description Boolean This is true if the conversion saves static or bitmap image file; otherwise, it is false . The default value is false . SourceDir Gets the source directory of the SVG files to be converted. Declaration public DirectoryInfo SourceDir { get; } Property Value Type Description DirectoryInfo A DirectoryInfo specifying the source directory of the SVG files. WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom XAML writer. Declaration public bool WriterErrorOccurred { get; } Property Value Type Description Boolean This is true if an error occurred when using the custom XAML writer; otherwise, it is false . Methods Convert(DirectoryInfo, DirectoryInfo) Convert the SVG files in the specified source directory, saving the results in the specified destination directory. Declaration public void Convert(DirectoryInfo sourceInfo, DirectoryInfo destInfo) Parameters Type Name Description DirectoryInfo sourceInfo A DirectoryInfo specifying the source directory of the SVG files. DirectoryInfo destInfo A DirectoryInfo specifying the source directory of the SVG files. Exceptions Type Condition ArgumentNullException If the sourceInfo is null . -or- If the destInfo is null . ArgumentException If the directory specified by sourceInfo does not exists. Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.html",
    "title": "Class EmbeddedImageSerializerArgs | SharpVectors Documentation",
    "keywords": "Class EmbeddedImageSerializerArgs Inheritance Object EventArgs EmbeddedImageSerializerArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class EmbeddedImageSerializerArgs : EventArgs Constructors EmbeddedImageSerializerArgs(String, BitmapImage) Declaration public EmbeddedImageSerializerArgs(string imagePath, BitmapImage image) Parameters Type Name Description String imagePath BitmapImage image Properties Image Declaration public BitmapImage Image { get; } Property Value Type Description BitmapImage ImagePath Declaration public string ImagePath { get; } Property Value Type Description String"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.html",
    "title": "Class EmbeddedImageSerializerVisitor | SharpVectors Documentation",
    "keywords": "Class EmbeddedImageSerializerVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfEmbeddedImageVisitor EmbeddedImageSerializerVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class EmbeddedImageSerializerVisitor : WpfEmbeddedImageVisitor, IDisposable Constructors EmbeddedImageSerializerVisitor(Boolean) Declaration public EmbeddedImageSerializerVisitor(bool converterFallback) Parameters Type Name Description Boolean converterFallback EmbeddedImageSerializerVisitor(Boolean, String) Declaration public EmbeddedImageSerializerVisitor(bool saveImages, string saveDirectory) Parameters Type Name Description Boolean saveImages String saveDirectory EmbeddedImageSerializerVisitor(String) Declaration public EmbeddedImageSerializerVisitor(string saveDirectory) Parameters Type Name Description String saveDirectory Fields ImageExt Declaration public const string ImageExt = \".png\" Field Value Type Description String Properties ConverterFallback Declaration public bool ConverterFallback { get; set; } Property Value Type Description Boolean ImageNamePrefix Declaration public string ImageNamePrefix { get; set; } Property Value Type Description String SaveDirectory Declaration public string SaveDirectory { get; set; } Property Value Type Description String SaveImages Declaration public bool SaveImages { get; set; } Property Value Type Description Boolean Methods Initialize(WpfDrawingContext) Declaration public override void Initialize(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context Overrides WpfVisitor.Initialize(WpfDrawingContext) Uninitialize() Declaration public override void Uninitialize() Overrides WpfVisitor.Uninitialize() Visit(SvgImageElement, WpfDrawingContext) Declaration public override ImageSource Visit(SvgImageElement element, WpfDrawingContext context) Parameters Type Name Description SvgImageElement element WpfDrawingContext context Returns Type Description ImageSource Overrides WpfEmbeddedImageVisitor.Visit(SvgImageElement, WpfDrawingContext) Events ImageCreated Declaration public event EventHandler<EmbeddedImageSerializerArgs> ImageCreated Event Type Type Description EventHandler < EmbeddedImageSerializerArgs > Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.EmbeddedImageVisitor.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageVisitor.html",
    "title": "Class EmbeddedImageVisitor | SharpVectors Documentation",
    "keywords": "Class EmbeddedImageVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfEmbeddedImageVisitor EmbeddedImageVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class EmbeddedImageVisitor : WpfEmbeddedImageVisitor, IDisposable Constructors EmbeddedImageVisitor() Declaration public EmbeddedImageVisitor() Methods Initialize(WpfDrawingContext) Declaration public override void Initialize(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context Overrides WpfVisitor.Initialize(WpfDrawingContext) Uninitialize() Declaration public override void Uninitialize() Overrides WpfVisitor.Uninitialize() Visit(SvgImageElement, WpfDrawingContext) Declaration public override ImageSource Visit(SvgImageElement element, WpfDrawingContext context) Parameters Type Name Description SvgImageElement element WpfDrawingContext context Returns Type Description ImageSource Overrides WpfEmbeddedImageVisitor.Visit(SvgImageElement, WpfDrawingContext) Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.FileSvgConverter.html": {
    "href": "api/SharpVectors.Converters.FileSvgConverter.html",
    "title": "Class FileSvgConverter | SharpVectors Documentation",
    "keywords": "Class FileSvgConverter This converts an SVG file to the corresponding XAML file, which can be viewed in WPF application. The root object in the converted file is DrawingGroup . Inheritance Object DispatcherObject DependencyObject SvgConverter FileSvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter._saveXaml SvgConverter._saveZaml SvgConverter._useFrameXamlWriter SvgConverter._isEmbedded SvgConverter._dpiX SvgConverter._dpiY SvgConverter._background SvgConverter._wpfSettings SvgConverter._wpfWindow SvgConverter._wpfRenderer SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.BeginProcessing(WpfDrawingDocument) SvgConverter.EndProcessing() SvgConverter.GetBitmapEncoder(ImageEncoderType) SvgConverter.GetImageFileExtention(ImageEncoderType) SvgConverter.Dispose() SvgConverter.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class FileSvgConverter : SvgConverter, IDisposable Constructors FileSvgConverter(WpfDrawingSettings) Initializes a new instance of the FileSvgConverter class with the specified drawing or rendering settings. Declaration public FileSvgConverter(WpfDrawingSettings settings) Parameters Type Name Description WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. FileSvgConverter(Boolean, Boolean, WpfDrawingSettings) Initializes a new instance of the FileSvgConverter class with the specified drawing or rendering settings and the saving options. Declaration public FileSvgConverter(bool saveXaml, bool saveZaml, WpfDrawingSettings settings) Parameters Type Name Description Boolean saveXaml This specifies whether to save result object tree in XAML file. Boolean saveZaml This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed XAML format, similar to the SVGZ. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Properties Drawing Gets the last created drawing. Declaration public DrawingGroup Drawing { get; } Property Value Type Description DrawingGroup A DrawingGroup specifying the last converted drawing. FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework XAML writer when an error occurred in using the custom writer. Declaration public bool FallbackOnWriterError { get; set; } Property Value Type Description Boolean This is true if the converter falls back to using the system XAML writer when an error occurred in using the custom writer; otherwise, it is false . If false , an exception, which occurred in using the custom writer will be thrown. The default is false . WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom XAML writer. Declaration public bool WriterErrorOccurred { get; } Property Value Type Description Boolean This is true if an error occurred when using the custom XAML writer; otherwise, it is false . XamlFile Gets the output XAML file path if generated. Declaration public string XamlFile { get; } Property Value Type Description String A string containing the full path to the XAML if generated; otherwise, it is null . ZamlFile Gets the output ZAML file path if generated. Declaration public string ZamlFile { get; } Property Value Type Description String A string containing the full path to the ZAML if generated; otherwise, it is null . Methods Convert(Stream, String) This performs the conversion of the specified SVG source, and saves the output to the specified XAML file. Declaration public bool Convert(Stream svgStream, string xamlFileName) Parameters Type Name Description Stream svgStream A stream providing access to the SVG source data. String xamlFileName The output XAML file. This is optional. If not specified, an XAML file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the xamlFileName is null . -or- If the svgStream is null . ArgumentException If the xamlFileName is empty. Convert(TextReader, String) This performs the conversion of the specified SVG source, and saves the output to the specified XAML file. Declaration public bool Convert(TextReader svgTextReader, string xamlFileName) Parameters Type Name Description TextReader svgTextReader A text reader providing access to the SVG source data. String xamlFileName The output XAML file. This is optional. If not specified, an XAML file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the xamlFileName is null . -or- If the svgTextReader is null . ArgumentException If the xamlFileName is empty. Convert(String) This performs the conversion of the specified SVG file, and saves the output to an XAML file with the same file name. Declaration public bool Convert(string svgFileName) Parameters Type Name Description String svgFileName The full path of the SVG source file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the svgFileName is null . ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(String, String) This performs the conversion of the specified SVG file, and saves the output to the specified XAML file. Declaration public bool Convert(string svgFileName, string xamlFileName) Parameters Type Name Description String svgFileName The full path of the SVG source file. String xamlFileName The output XAML file. This is optional. If not specified, an XAML file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the svgFileName is null . ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(XmlReader, String) This performs the conversion of the specified SVG source, and saves the output to the specified XAML file. Declaration public bool Convert(XmlReader svgXmlReader, string xamlFileName) Parameters Type Name Description XmlReader svgXmlReader An XML reader providing access to the SVG source data. String xamlFileName The output XAML file. This is optional. If not specified, an XAML file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the xamlFileName is null . -or- If the svgXmlReader is null . ArgumentException If the xamlFileName is empty. Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.FileSvgReader.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.html",
    "title": "Class FileSvgReader | SharpVectors Documentation",
    "keywords": "Class FileSvgReader This converts a SVG file to DrawingGroup object, and can optionally save the result to a file as XAML. Inheritance Object DispatcherObject DependencyObject SvgConverter FileSvgReader Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter._saveXaml SvgConverter._saveZaml SvgConverter._useFrameXamlWriter SvgConverter._isEmbedded SvgConverter._dpiX SvgConverter._dpiY SvgConverter._background SvgConverter._wpfSettings SvgConverter._wpfWindow SvgConverter._wpfRenderer SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.BeginProcessing(WpfDrawingDocument) SvgConverter.EndProcessing() SvgConverter.GetBitmapEncoder(ImageEncoderType) SvgConverter.GetImageFileExtention(ImageEncoderType) SvgConverter.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class FileSvgReader : SvgConverter, IDisposable Constructors FileSvgReader(WpfDrawingSettings, Boolean) Initializes a new instance of the FileSvgReader class with the specified drawing or rendering settings. Declaration public FileSvgReader(WpfDrawingSettings settings, bool isEmbedded = false) Parameters Type Name Description WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Boolean isEmbedded A value indicating whether this converter is embedded or not. FileSvgReader(Boolean, Boolean, DirectoryInfo, WpfDrawingSettings, Boolean) Initializes a new instance of the FileSvgConverter class with the specified drawing or rendering settings, the saving options and the working directory. Declaration public FileSvgReader(bool saveXaml, bool saveZaml, DirectoryInfo workingDir, WpfDrawingSettings settings, bool isEmbedded = false) Parameters Type Name Description Boolean saveXaml This specifies whether to save result object tree in XAML file. Boolean saveZaml This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed XAML format, similar to the SVGZ. DirectoryInfo workingDir The working directory, where converted outputs are saved. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Boolean isEmbedded Properties Drawing Gets or sets the last created drawing. Declaration public DrawingGroup Drawing { get; set; } Property Value Type Description DrawingGroup A DrawingGroup specifying the last converted drawing. DrawingDocument Declaration public WpfDrawingDocument DrawingDocument { get; } Property Value Type Description WpfDrawingDocument FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework XAML writer when an error occurred in using the custom writer. Declaration public bool FallbackOnWriterError { get; set; } Property Value Type Description Boolean This is true if the converter falls back to using the system XAML writer when an error occurred in using the custom writer; otherwise, it is false . If false , an exception, which occurred in using the custom writer will be thrown. The default is false . ImageFile Gets the output image file path if generated. Declaration public string ImageFile { get; } Property Value Type Description String A string containing the full path to the image if generated; otherwise, it is null . WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom XAML writer. Declaration public bool WriterErrorOccurred { get; } Property Value Type Description Boolean This is true if an error occurred when using the custom XAML writer; otherwise, it is false . XamlFile Gets the output XAML file path if generated. Declaration public string XamlFile { get; } Property Value Type Description String A string containing the full path to the XAML if generated; otherwise, it is null . ZamlFile Gets the output ZAML file path if generated. Declaration public string ZamlFile { get; } Property Value Type Description String A string containing the full path to the ZAML if generated; otherwise, it is null . Methods Dispose(Boolean) This releases the unmanaged resources used by the SvgConverter and optionally releases the managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing This is true if managed resources should be disposed; otherwise, false . Overrides SvgConverter.Dispose(Boolean) Read(Stream) Reads in the specified SVG file stream and converts it to WPF drawing. Declaration public DrawingGroup Read(Stream svgStream) Parameters Type Name Description Stream svgStream The source SVG file stream. Returns Type Description DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null . Exceptions Type Condition ArgumentNullException If the svgStream is null . Read(TextReader) Reads in the specified source from the SVG file reader and converts it to WPF drawing. Declaration public DrawingGroup Read(TextReader svgTextReader) Parameters Type Name Description TextReader svgTextReader A text reader providing access to the SVG file data. Returns Type Description DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null . Exceptions Type Condition ArgumentNullException If the svgTextReader is null . Read(String) Reads in the specified SVG file and converts it to WPF drawing. Declaration public DrawingGroup Read(string svgFileName) Parameters Type Name Description String svgFileName The full path of the SVG source file. Returns Type Description DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null . Exceptions Type Condition ArgumentNullException If the svgFileName is null . ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Read(String, DirectoryInfo) Reads in the specified SVG file, converting it to WPF drawing and saving the results to the specified directory if successful. Declaration public DrawingGroup Read(string svgFileName, DirectoryInfo destinationDir) Parameters Type Name Description String svgFileName The full path of the SVG source file. DirectoryInfo destinationDir The destination of the output XAML file, if the saving properties are enabled. Returns Type Description DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null . Exceptions Type Condition ArgumentNullException If the svgFileName is null . ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Read(Uri) Reads in the specified SVG file and converts it to WPF drawing. Declaration public DrawingGroup Read(Uri svgUri) Parameters Type Name Description Uri svgUri A Uri specifying the path to the SVG file. Returns Type Description DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null . Exceptions Type Condition ArgumentNullException If the svgUri is null . Read(XmlReader) Reads in the specified source SVG file reader and converts it to WPF drawing. Declaration public DrawingGroup Read(XmlReader svgXmlReader) Parameters Type Name Description XmlReader svgXmlReader An XML reader providing access to the SVG file data. Returns Type Description DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null . Exceptions Type Condition ArgumentNullException If the svgXmlReader is null . Save(Stream) Declaration public bool Save(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Boolean Save(TextWriter) Declaration public bool Save(TextWriter textWriter) Parameters Type Name Description TextWriter textWriter Returns Type Description Boolean Save(String, Boolean, Boolean) Saves the last converted file to the specified file name. Declaration public bool Save(string fileName, bool asXaml, bool asZaml) Parameters Type Name Description String fileName The full path of the output file. Boolean asXaml A value indicating whether to save the output to XAML file. Boolean asZaml A value indicating whether to save the output to ZAML file, which is a G-zip compression of the XAML file. Returns Type Description Boolean This returns true if either asXaml or asZaml is true and the operation is successful. Remarks If the output serialization properties are not enabled, this method can be used to save the output to a file. This will not change the output serialization properties of this object. Exceptions Type Condition InvalidOperationException If there is no converted drawing from a previous conversion process to be saved. SaveImage(String, DirectoryInfo, ImageEncoderType) Declaration public bool SaveImage(string fileName, DirectoryInfo imageFileDir, ImageEncoderType encoderType) Parameters Type Name Description String fileName DirectoryInfo imageFileDir ImageEncoderType encoderType Returns Type Description Boolean SaveImage(String, FileInfo, ImageEncoderType) Declaration public bool SaveImage(string fileName, FileInfo imageFileName, ImageEncoderType encoderType) Parameters Type Name Description String fileName FileInfo imageFileName ImageEncoderType encoderType Returns Type Description Boolean Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.FontFamilyVisitor.html": {
    "href": "api/SharpVectors.Converters.FontFamilyVisitor.html",
    "title": "Class FontFamilyVisitor | SharpVectors Documentation",
    "keywords": "Class FontFamilyVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfFontFamilyVisitor FontFamilyVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class FontFamilyVisitor : WpfFontFamilyVisitor, IDisposable Constructors FontFamilyVisitor() Declaration public FontFamilyVisitor() Methods Visit(String, WpfFontFamilyInfo, WpfDrawingContext) Declaration public override WpfFontFamilyInfo Visit(string fontName, WpfFontFamilyInfo familyInfo, WpfDrawingContext context) Parameters Type Name Description String fontName WpfFontFamilyInfo familyInfo WpfDrawingContext context Returns Type Description WpfFontFamilyInfo Overrides WpfFontFamilyVisitor.Visit(String, WpfFontFamilyInfo, WpfDrawingContext) Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.html": {
    "href": "api/SharpVectors.Converters.html",
    "title": "Namespace SharpVectors.Converters | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Converters Classes DirectorySvgConverter This converts a directory (and optionally the sub-directories) of SVG files to XAML files in a specified directory, maintaining the original directory structure. It uses FileSvgConverter or ImageSvgConverter converter to process each SVG file in the specified directory. EmbeddedImageSerializerArgs EmbeddedImageSerializerVisitor EmbeddedImageVisitor FileSvgConverter This converts an SVG file to the corresponding XAML file, which can be viewed in WPF application. The root object in the converted file is DrawingGroup . FileSvgReader This converts a SVG file to DrawingGroup object, and can optionally save the result to a file as XAML. FontFamilyVisitor ImageSvgConverter This converts the SVG file to static or bitmap image, which is saved to a file. LinkVisitor ResourceSvgConverter ResourceSvgConverter.ResourceItem ShapeSvgCanvas Component that visualizes svg document contents. StreamSvgConverter This converts the SVG file to static or bitmap image, which is saved to a file. SvgCanvas This is a Canvas control for viewing SVG file in WPF applications. SvgControl SvgConverter This is the abstract base class for all SVG to WPF converters. SvgImageBase This is an abstract implementation of a markup extension that enables the creation of DrawingImage from SVG sources. SvgImageConverterExtension This implements a markup extension that enables the creation of DrawingImage from SVG sources. SvgImageExtension This implements a markup extension that enables the creation of DrawingImage from SVG sources. SvgViewbox This is a Viewbox control for viewing SVG file in WPF applications. XmlXamlWriter This is a customized XAML writer, which provides Extensible Application Markup Language (XAML) serialization of provided runtime objects into XAML. Enums ImageEncoderType This specifies the encoder type used to encode a collection of bitmap frame objects to an image stream. This is used by the ImageSvgConverter converter. SvgControlSizeMode"
  },
  "api/SharpVectors.Converters.ImageEncoderType.html": {
    "href": "api/SharpVectors.Converters.ImageEncoderType.html",
    "title": "Enum ImageEncoderType | SharpVectors Documentation",
    "keywords": "Enum ImageEncoderType This specifies the encoder type used to encode a collection of bitmap frame objects to an image stream. This is used by the ImageSvgConverter converter. Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public enum ImageEncoderType Fields BmpBitmap GifBitmap JpegBitmap PngBitmap TiffBitmap WmpBitmap Name Description BmpBitmap Specifies an encoder that is used to encode bitmap (BMP) format images, that is BmpBitmapEncoder . GifBitmap Specifies an encoder that is used to encode Graphics Interchange Format (GIF) images, that is GifBitmapEncoder . JpegBitmap Specifies an encoder that is used to encode Joint Photographics Experts Group (JPEG) format images, that is JpegBitmapEncoder . PngBitmap Specifies an encoder that is used to encode Portable Network Graphics (PNG) format images, that is PngBitmapEncoder . TiffBitmap Specifies an encoder that is used to encode Tagged Image File Format (TIFF) images, that is TiffBitmapEncoder . WmpBitmap Specifies an encoder that is used to Microsoft Windows Media Photo (WDP) images, that is WmpBitmapEncoder . See Also ImageSvgConverter"
  },
  "api/SharpVectors.Converters.ImageSvgConverter.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.html",
    "title": "Class ImageSvgConverter | SharpVectors Documentation",
    "keywords": "Class ImageSvgConverter This converts the SVG file to static or bitmap image, which is saved to a file. Inheritance Object DispatcherObject DependencyObject SvgConverter ImageSvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter._saveXaml SvgConverter._saveZaml SvgConverter._useFrameXamlWriter SvgConverter._isEmbedded SvgConverter._dpiX SvgConverter._dpiY SvgConverter._background SvgConverter._wpfSettings SvgConverter._wpfWindow SvgConverter._wpfRenderer SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.BeginProcessing(WpfDrawingDocument) SvgConverter.EndProcessing() SvgConverter.GetBitmapEncoder(ImageEncoderType) SvgConverter.GetImageFileExtention(ImageEncoderType) SvgConverter.Dispose() SvgConverter.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class ImageSvgConverter : SvgConverter, IDisposable Remarks The image is save with the Pbgra32 format, since that is the only pixel format which does not throw an exception with the RenderTargetBitmap . The DPI used is 96. Constructors ImageSvgConverter(WpfDrawingSettings) Initializes a new instance of the ImageSvgConverter class with the specified drawing or rendering settings. Declaration public ImageSvgConverter(WpfDrawingSettings settings) Parameters Type Name Description WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. ImageSvgConverter(Boolean, Boolean, WpfDrawingSettings) Initializes a new instance of the ImageSvgConverter class with the specified drawing or rendering settings and the saving options. Declaration public ImageSvgConverter(bool saveXaml, bool saveZaml, WpfDrawingSettings settings) Parameters Type Name Description Boolean saveXaml This specifies whether to save result object tree in image file. Boolean saveZaml This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed image format, similar to the SVGZ. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Properties Drawing Gets the last created drawing. Declaration public DrawingGroup Drawing { get; } Property Value Type Description DrawingGroup A DrawingGroup specifying the last converted drawing. Encoder Gets or sets a custom bitmap encoder to use in encoding the drawing to an image file. Declaration public BitmapEncoder Encoder { get; set; } Property Value Type Description BitmapEncoder A derived BitmapEncoder object specifying the bitmap encoder for encoding the images. The default is null , and the EncoderType property determines the encoder used. Remarks If the value of this is set, it must match the MIME type or file extension defined by the EncoderType property for it to be used. EncoderType Gets or set the bitmap encoder type to use in encoding the drawing to an image file. Declaration public ImageEncoderType EncoderType { get; set; } Property Value Type Description ImageEncoderType An enumeration of the type ImageEncoderType specifying the bitmap encoder. The default is the PngBitmap . FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework image writer when an error occurred in using the custom writer. Declaration public bool FallbackOnWriterError { get; set; } Property Value Type Description Boolean This is true if the converter falls back to using the system image writer when an error occurred in using the custom writer; otherwise, it is false . If false , an exception, which occurred in using the custom writer will be thrown. The default is false . WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom image writer. Declaration public bool WriterErrorOccurred { get; } Property Value Type Description Boolean This is true if an error occurred when using the custom image writer; otherwise, it is false . XamlFile Gets the output XAML file path if generated. Declaration public string XamlFile { get; } Property Value Type Description String A string containing the full path to the XAML if generated; otherwise, it is null . ZamlFile Gets the output ZAML file path if generated. Declaration public string ZamlFile { get; } Property Value Type Description String A string containing the full path to the ZAML if generated; otherwise, it is null . Methods Convert(Stream, String) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Declaration public bool Convert(Stream svgStream, string imageFileName) Parameters Type Name Description Stream svgStream A stream providing access to the SVG source data. String imageFileName The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the imageFileName is null . -or- If the svgStream is null . ArgumentException If the imageFileName is empty. Convert(TextReader, String) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Declaration public bool Convert(TextReader svgTextReader, string imageFileName) Parameters Type Name Description TextReader svgTextReader A text reader providing access to the SVG source data. String imageFileName The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the imageFileName is null . -or- If the svgTextReader is null . ArgumentException If the imageFileName is empty. Convert(String) This performs the conversion of the specified SVG file, and saves the output to an image file with the same file name. Declaration public bool Convert(string svgFileName) Parameters Type Name Description String svgFileName The full path of the SVG source file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the svgFileName is null . ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(String, String) This performs the conversion of the specified SVG file, and saves the output to the specified image file. Declaration public bool Convert(string svgFileName, string imageFileName) Parameters Type Name Description String svgFileName The full path of the SVG source file. String imageFileName The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the svgFileName is null . ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(XmlReader, String) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Declaration public bool Convert(XmlReader svgXmlReader, string imageFileName) Parameters Type Name Description XmlReader svgXmlReader An XML reader providing access to the SVG source data. String imageFileName The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the imageFileName is null . -or- If the svgXmlReader is null . ArgumentException If the imageFileName is empty. Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.LinkVisitor.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.html",
    "title": "Class LinkVisitor | SharpVectors Documentation",
    "keywords": "Class LinkVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfLinkVisitor LinkVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class LinkVisitor : WpfLinkVisitor, IDisposable Constructors LinkVisitor() Declaration public LinkVisitor() Properties AggregatedLayerName Declaration public override string AggregatedLayerName { get; } Property Value Type Description String Overrides WpfLinkVisitor.AggregatedLayerName Aggregates Declaration public override bool Aggregates { get; } Property Value Type Description Boolean Overrides WpfLinkVisitor.Aggregates IsAggregate Declaration public override bool IsAggregate { get; } Property Value Type Description Boolean Overrides WpfLinkVisitor.IsAggregate Methods Exists(String) Declaration public override bool Exists(string linkId) Parameters Type Name Description String linkId Returns Type Description Boolean Overrides WpfLinkVisitor.Exists(String) GetElementName(SvgElement) Declaration public static string GetElementName(SvgElement element) Parameters Type Name Description SvgElement element Returns Type Description String Initialize(DrawingGroup, WpfDrawingContext) Declaration public override void Initialize(DrawingGroup linkGroup, WpfDrawingContext context) Parameters Type Name Description DrawingGroup linkGroup WpfDrawingContext context Overrides WpfLinkVisitor.Initialize(DrawingGroup, WpfDrawingContext) Visit(DrawingGroup, SvgAElement, WpfDrawingContext, Single) Declaration public override void Visit(DrawingGroup group, SvgAElement element, WpfDrawingContext context, float opacity) Parameters Type Name Description DrawingGroup group SvgAElement element WpfDrawingContext context Single opacity Overrides WpfLinkVisitor.Visit(DrawingGroup, SvgAElement, WpfDrawingContext, Single) Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.html",
    "title": "Class ResourceSvgConverter | SharpVectors Documentation",
    "keywords": "Class ResourceSvgConverter Inheritance Object DispatcherObject DependencyObject SvgConverter ResourceSvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter._saveXaml SvgConverter._saveZaml SvgConverter._useFrameXamlWriter SvgConverter._isEmbedded SvgConverter._dpiX SvgConverter._dpiY SvgConverter._background SvgConverter._wpfSettings SvgConverter._wpfWindow SvgConverter._wpfRenderer SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.BeginProcessing(WpfDrawingDocument) SvgConverter.EndProcessing() SvgConverter.GetBitmapEncoder(ImageEncoderType) SvgConverter.GetImageFileExtention(ImageEncoderType) SvgConverter.Dispose() SvgConverter.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class ResourceSvgConverter : SvgConverter, IDisposable Constructors ResourceSvgConverter(WpfDrawingSettings) Initializes a new instance of the ResourceSvgConverter class with the specified drawing or rendering settings. Declaration public ResourceSvgConverter(WpfDrawingSettings drawingSettings) Parameters Type Name Description WpfDrawingSettings drawingSettings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. ResourceSvgConverter(WpfDrawingSettings, WpfResourceSettings) Declaration public ResourceSvgConverter(WpfDrawingSettings drawingSettings, WpfResourceSettings resourceSettings) Parameters Type Name Description WpfDrawingSettings drawingSettings WpfResourceSettings resourceSettings ResourceSvgConverter(WpfResourceSettings) Declaration public ResourceSvgConverter(WpfResourceSettings resourceSettings) Parameters Type Name Description WpfResourceSettings resourceSettings Properties IsResolverRegistered Declaration public bool IsResolverRegistered { get; } Property Value Type Description Boolean ResourceSettings Declaration public WpfResourceSettings ResourceSettings { get; set; } Property Value Type Description WpfResourceSettings SourceCount Declaration public int SourceCount { get; } Property Value Type Description Int32 Methods AddSource(String) Declaration public bool AddSource(string sourcePath) Parameters Type Name Description String sourcePath Returns Type Description Boolean ClearSources() Declaration public void ClearSources() Convert() Declaration public string Convert() Returns Type Description String Convert(Stream) Declaration public void Convert(Stream outputStream) Parameters Type Name Description Stream outputStream Convert(TextWriter) Declaration public void Convert(TextWriter outputWriter) Parameters Type Name Description TextWriter outputWriter Convert(String) Declaration public void Convert(string outputPath) Parameters Type Name Description String outputPath RegisterResolver(IResourceKeyResolver) Declaration public void RegisterResolver(IResourceKeyResolver keyResolver) Parameters Type Name Description IResourceKeyResolver keyResolver RegisterResolver(Func<IResourceKeyResolver>) Declaration public void RegisterResolver(Func<IResourceKeyResolver> keyResolver) Parameters Type Name Description Func < IResourceKeyResolver > keyResolver RemoveSource(String) Declaration public bool RemoveSource(string sourcePath) Parameters Type Name Description String sourcePath Returns Type Description Boolean RetrieveResolver() Declaration public IResourceKeyResolver RetrieveResolver() Returns Type Description IResourceKeyResolver Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.html",
    "title": "Class ResourceSvgConverter.ResourceItem | SharpVectors Documentation",
    "keywords": "Class ResourceSvgConverter.ResourceItem Inheritance Object ResourceSvgConverter.ResourceItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class ResourceItem Constructors ResourceItem() Declaration public ResourceItem() ResourceItem(Int32, DrawingGroup, String) Declaration public ResourceItem(int index, DrawingGroup drawing, string fileName) Parameters Type Name Description Int32 index DrawingGroup drawing String fileName Properties Drawing Declaration public DrawingGroup Drawing { get; } Property Value Type Description DrawingGroup FileName Declaration public string FileName { get; } Property Value Type Description String Image Declaration public DrawingImage Image { get; } Property Value Type Description DrawingImage Index Declaration public int Index { get; } Property Value Type Description Int32 Name Declaration public string Name { get; } Property Value Type Description String ResourceName Declaration public string ResourceName { get; set; } Property Value Type Description String"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.html",
    "title": "Class ShapeSvgCanvas | SharpVectors Documentation",
    "keywords": "Class ShapeSvgCanvas Component that visualizes svg document contents. Inheritance Object DispatcherObject DependencyObject Visual UIElement FrameworkElement Panel Canvas ShapeSvgCanvas Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild Inherited Members Canvas.LeftProperty Canvas.TopProperty Canvas.RightProperty Canvas.BottomProperty Canvas.GetLeft(UIElement) Canvas.SetLeft(UIElement, Double) Canvas.GetTop(UIElement) Canvas.SetTop(UIElement, Double) Canvas.GetRight(UIElement) Canvas.SetRight(UIElement, Double) Canvas.GetBottom(UIElement) Canvas.SetBottom(UIElement, Double) Canvas.ArrangeOverride(Size) Canvas.GetLayoutClip(Size) Panel.BackgroundProperty Panel.IsItemsHostProperty Panel.ZIndexProperty Panel.OnRender(DrawingContext) Panel.IAddChild.AddChild(Object) Panel.IAddChild.AddText(String) Panel.OnIsItemsHostChanged(Boolean, Boolean) Panel.GetVisualChild(Int32) Panel.CreateUIElementCollection(FrameworkElement) Panel.OnVisualChildrenChanged(DependencyObject, DependencyObject) Panel.SetZIndex(UIElement, Int32) Panel.GetZIndex(UIElement) Panel.Background Panel.LogicalChildren Panel.Children Panel.IsItemsHost Panel.LogicalOrientation Panel.HasLogicalOrientation Panel.InternalChildren Panel.VisualChildrenCount FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean) FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable(String) FrameworkElement.GetTemplateChild(String) FrameworkElement.FindResource(Object) FrameworkElement.TryFindResource(Object) FrameworkElement.SetResourceReference(DependencyProperty, Object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, String) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(String, Object) FrameworkElement.UnregisterName(String) FrameworkElement.FindName(String) FrameworkElement.AddLogicalChild(Object) FrameworkElement.RemoveLogicalChild(Object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, Boolean) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public class ShapeSvgCanvas : Canvas, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild Constructors ShapeSvgCanvas() Declaration public ShapeSvgCanvas() Fields ItemStyleProperty Declaration public static readonly DependencyProperty ItemStyleProperty Field Value Type Description DependencyProperty SourceProperty Declaration public static readonly DependencyProperty SourceProperty Field Value Type Description DependencyProperty Properties Bounds Gets the bounding box of the svg document. Declaration public Rect Bounds { get; } Property Value Type Description Rect Drawing Declaration public Canvas Drawing { get; } Property Value Type Description Canvas ItemStyle Gets or sets an item style that will be applied to all svg elements. Declaration public Style ItemStyle { get; set; } Property Value Type Description Style Remarks This style will be used as a BasedOn style for all shapes created from svg elements. Source Gets or sets svg document source. Declaration public string Source { get; set; } Property Value Type Description String Methods MeasureOverride(Size) Declaration protected override Size MeasureOverride(Size constraint) Parameters Type Name Description Size constraint Returns Type Description Size Overrides Canvas.MeasureOverride(Size) RenderDiagrams(String) Declaration public bool RenderDiagrams(string sourceUri) Parameters Type Name Description String sourceUri Returns Type Description Boolean UnloadDiagrams() Unloads loaded svg. Declaration public void UnloadDiagrams() Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient System.Windows.Markup.IAddChild"
  },
  "api/SharpVectors.Converters.StreamSvgConverter.html": {
    "href": "api/SharpVectors.Converters.StreamSvgConverter.html",
    "title": "Class StreamSvgConverter | SharpVectors Documentation",
    "keywords": "Class StreamSvgConverter This converts the SVG file to static or bitmap image, which is saved to a file. Inheritance Object DispatcherObject DependencyObject SvgConverter StreamSvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter._saveXaml SvgConverter._saveZaml SvgConverter._useFrameXamlWriter SvgConverter._isEmbedded SvgConverter._dpiX SvgConverter._dpiY SvgConverter._background SvgConverter._wpfSettings SvgConverter._wpfWindow SvgConverter._wpfRenderer SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.BeginProcessing(WpfDrawingDocument) SvgConverter.EndProcessing() SvgConverter.GetBitmapEncoder(ImageEncoderType) SvgConverter.GetImageFileExtention(ImageEncoderType) SvgConverter.Dispose() SvgConverter.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class StreamSvgConverter : SvgConverter, IDisposable Remarks The image is save with the Pbgra32 format, since that is the only pixel format which does not throw an exception with the RenderTargetBitmap . The DPI used is 96. Constructors StreamSvgConverter(WpfDrawingSettings) Initializes a new instance of the StreamSvgConverter class with the specified drawing or rendering settings. Declaration public StreamSvgConverter(WpfDrawingSettings settings) Parameters Type Name Description WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. StreamSvgConverter(Boolean, Boolean, WpfDrawingSettings) Initializes a new instance of the StreamSvgConverter class with the specified drawing or rendering settings and the saving options. Declaration public StreamSvgConverter(bool saveXaml, bool saveZaml, WpfDrawingSettings settings) Parameters Type Name Description Boolean saveXaml This specifies whether to save result object tree in image file. Boolean saveZaml This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed image format, similar to the SVGZ. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Properties Drawing Gets the last created drawing. Declaration public DrawingGroup Drawing { get; } Property Value Type Description DrawingGroup A DrawingGroup specifying the last converted drawing. Encoder Gets or sets a custom bitmap encoder to use in encoding the drawing to an image file. Declaration public BitmapEncoder Encoder { get; set; } Property Value Type Description BitmapEncoder A derived BitmapEncoder object specifying the bitmap encoder for encoding the images. The default is null , and the EncoderType property determines the encoder used. Remarks If the value of this is set, it must match the MIME type or file extension defined by the EncoderType property for it to be used. EncoderType Gets or set the bitmap encoder type to use in encoding the drawing to an image file. Declaration public ImageEncoderType EncoderType { get; set; } Property Value Type Description ImageEncoderType An enumeration of the type ImageEncoderType specifying the bitmap encoder. The default is the PngBitmap . FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework image writer when an error occurred in using the custom writer. Declaration public bool FallbackOnWriterError { get; set; } Property Value Type Description Boolean This is true if the converter falls back to using the system image writer when an error occurred in using the custom writer; otherwise, it is false . If false , an exception, which occurred in using the custom writer will be thrown. The default is false . WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom image writer. Declaration public bool WriterErrorOccurred { get; } Property Value Type Description Boolean This is true if an error occurred when using the custom image writer; otherwise, it is false . Methods Convert(Stream, Stream) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Declaration public bool Convert(Stream svgStream, Stream imageStream) Parameters Type Name Description Stream svgStream A stream providing access to the SVG source data. Stream imageStream The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the imageStream is null . -or- If the svgStream is null . ArgumentException If the imageStream is empty. Convert(TextReader, Stream) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Declaration public bool Convert(TextReader svgTextReader, Stream imageStream) Parameters Type Name Description TextReader svgTextReader A text reader providing access to the SVG source data. Stream imageStream The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the imageStream is null . -or- If the svgTextReader is null . ArgumentException If the imageStream is empty. Convert(String, Stream) This performs the conversion of the specified SVG file, and saves the output to the specified image file. Declaration public bool Convert(string svgFileName, Stream imageStream) Parameters Type Name Description String svgFileName The full path of the SVG source file. Stream imageStream The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the svgFileName is null . ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(XmlReader, Stream) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Declaration public bool Convert(XmlReader svgXmlReader, Stream imageStream) Parameters Type Name Description XmlReader svgXmlReader An XML reader providing access to the SVG source data. Stream imageStream The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns Type Description Boolean This returns true if the conversion is successful; otherwise, it return false . Exceptions Type Condition ArgumentNullException If the imageStream is null . -or- If the svgXmlReader is null . ArgumentException If the imageStream is empty. Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.SvgCanvas.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.html",
    "title": "Class SvgCanvas | SharpVectors Documentation",
    "keywords": "Class SvgCanvas This is a Canvas control for viewing SVG file in WPF applications. Inheritance Object DispatcherObject DependencyObject Visual UIElement FrameworkElement Panel Canvas SvgDrawingCanvas SvgCanvas Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild ISvgControl IUriContext Inherited Members SvgDrawingCanvas.AppTitle SvgDrawingCanvas.DesignMode SvgDrawingCanvas.Bounds SvgDrawingCanvas.AnimationCanvas SvgDrawingCanvas.DisplayTransform SvgDrawingCanvas.DisplayOffset SvgDrawingCanvas.DrawObjects SvgDrawingCanvas.LinkObjects SvgDrawingCanvas.HostVisual SvgDrawingCanvas.InteractiveMode SvgDrawingCanvas.Alert SvgDrawingCanvas.Error SvgDrawingCanvas.VisualChildrenCount SvgDrawingCanvas.LoadDiagrams(String) SvgDrawingCanvas.LoadDiagrams(DrawingGroup, DrawingGroup, DrawingGroup) SvgDrawingCanvas.UnloadDiagrams() SvgDrawingCanvas.RenderDiagrams(SvgImageNameScope) SvgDrawingCanvas.RenderDiagrams(DrawingGroup) SvgDrawingCanvas.GetVisualChild(Int32) SvgDrawingCanvas.MeasureOverride(Size) SvgDrawingCanvas.OnMouseDown(MouseButtonEventArgs) SvgDrawingCanvas.OnMouseMove(MouseEventArgs) SvgDrawingCanvas.OnMouseUp(MouseButtonEventArgs) SvgDrawingCanvas.OnMouseLeave(MouseEventArgs) SvgDrawingCanvas.OnHandleAlert(String) SvgDrawingCanvas.OnHandleError(String, Exception) Canvas.LeftProperty Canvas.TopProperty Canvas.RightProperty Canvas.BottomProperty Canvas.GetLeft(UIElement) Canvas.SetLeft(UIElement, Double) Canvas.GetTop(UIElement) Canvas.SetTop(UIElement, Double) Canvas.GetRight(UIElement) Canvas.SetRight(UIElement, Double) Canvas.GetBottom(UIElement) Canvas.SetBottom(UIElement, Double) Canvas.ArrangeOverride(Size) Canvas.GetLayoutClip(Size) Panel.BackgroundProperty Panel.IsItemsHostProperty Panel.ZIndexProperty Panel.OnRender(DrawingContext) Panel.IAddChild.AddChild(Object) Panel.IAddChild.AddText(String) Panel.OnIsItemsHostChanged(Boolean, Boolean) Panel.CreateUIElementCollection(FrameworkElement) Panel.OnVisualChildrenChanged(DependencyObject, DependencyObject) Panel.SetZIndex(UIElement, Int32) Panel.GetZIndex(UIElement) Panel.Background Panel.LogicalChildren Panel.Children Panel.IsItemsHost Panel.LogicalOrientation Panel.HasLogicalOrientation Panel.InternalChildren FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean) FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable(String) FrameworkElement.GetTemplateChild(String) FrameworkElement.FindResource(Object) FrameworkElement.TryFindResource(Object) FrameworkElement.SetResourceReference(DependencyProperty, Object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, String) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(String, Object) FrameworkElement.UnregisterName(String) FrameworkElement.FindName(String) FrameworkElement.AddLogicalChild(Object) FrameworkElement.RemoveLogicalChild(Object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, Boolean) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public class SvgCanvas : SvgDrawingCanvas, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild, ISvgControl, IUriContext Remarks It extends the drawing canvas, SvgDrawingCanvas , instead of generic Canvas control, therefore any interactivity support implemented in the drawing canvas will be available in the Canvas . Constructors SvgCanvas() Initializes a new instance of the SvgCanvas class. Declaration public SvgCanvas() Fields MessageBackgroundProperty The DependencyProperty for the MessageBackground property. Flags: Can be used in style rules Default Value: PapayaWhip Declaration public static readonly DependencyProperty MessageBackgroundProperty Field Value Type Description DependencyProperty MessageFillBrushProperty The DependencyProperty for the MessageFillBrush property. Flags: Can be used in style rules Default Value: Gold Declaration public static readonly DependencyProperty MessageFillBrushProperty Field Value Type Description DependencyProperty MessageFontFamilyProperty The DependencyProperty for the MessageFontFamily property. Flags: Can be used in style rules Default Value: System Dialog Font Declaration public static readonly DependencyProperty MessageFontFamilyProperty Field Value Type Description DependencyProperty MessageFontSizeProperty The DependencyProperty for the MessageFontSize property. Flags: Can be used in style rules Default Value: 48 pixels Declaration public static readonly DependencyProperty MessageFontSizeProperty Field Value Type Description DependencyProperty MessageOpacityProperty The DependencyProperty for the MessageOpacity property. Flags: Can be used in style rules Default Value: 1 (full opacity) Declaration public static readonly DependencyProperty MessageOpacityProperty Field Value Type Description DependencyProperty MessageStrokeBrushProperty The DependencyProperty for the MessageStrokeBrush property. Flags: Can be used in style rules Default Value: Maroon Declaration public static readonly DependencyProperty MessageStrokeBrushProperty Field Value Type Description DependencyProperty MessageTextProperty The DependencyProperty for the MessageText property. Flags: Can be used in style rules Default Value: \"Loading...\" Declaration public static readonly DependencyProperty MessageTextProperty Field Value Type Description DependencyProperty SourceProperty Identifies the Source dependency property. Declaration public static readonly DependencyProperty SourceProperty Field Value Type Description DependencyProperty StreamSourceProperty Identifies the StreamSource dependency property. Declaration public static readonly DependencyProperty StreamSourceProperty Field Value Type Description DependencyProperty SvgSourceProperty Identifies the SvgSource dependency property. Declaration public static readonly DependencyProperty SvgSourceProperty Field Value Type Description DependencyProperty UriSourceProperty Identifies the UriSource dependency property. Declaration public static readonly DependencyProperty UriSourceProperty Field Value Type Description DependencyProperty Properties AutoSize Gets or sets a value indicating whether to automatically resize this Canvas based on the size of the loaded drawing. Declaration public bool AutoSize { get; set; } Property Value Type Description Boolean This is true if this Canvas is automatically resized based on the size of the loaded drawing; otherwise, it is false . The default is false , and the user-defined size or the parent assigned layout size is used. BaseUri Gets or sets the base URI of the current application context. Declaration public Uri BaseUri { get; set; } Property Value Type Description Uri The base URI of the application context. CultureInfo Gets or sets the main culture information used for rendering texts. Declaration public CultureInfo CultureInfo { get; set; } Property Value Type Description CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts. Drawings Gets the drawing from the SVG file conversion. Declaration public DrawingGroup Drawings { get; } Property Value Type Description DrawingGroup An instance of the DrawingGroup specifying the converted drawings which is rendered in this canvas. EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. Declaration public bool EnsureViewboxPosition { get; set; } Property Value Type Description Boolean This determines whether a transformation is applied to the rendered drawing. For drawings where the top-left position of the viewbox is off the screen, due to negative values, this will ensure the drawing is visible. The default value is true . Set this value to false if you wish to apply your own transformations to the drawings. EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. Declaration public bool EnsureViewboxSize { get; set; } Property Value Type Description Boolean For image outputs, this will force the original size to be saved. The default value is false . However, the ImageSvgConverter converted sets this to true by default. Remarks Setting this to true will cause the rendering process to draw a transparent box around the output, if a viewbox is defined. This will ensure that the original image size is saved. IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. Declaration public bool IgnoreRootViewbox { get; set; } Property Value Type Description Boolean For image outputs, this will force the original size to be saved. The default value is false . Remarks There are reported cases where are diagrams displayed in Inkscape program, but will not show when converted. These are diagrams on the drawing canvas of Inkspace but outside the svg viewbox. When converted the drawings are also converted but not displayed due to clipping. Setting this property to true will clear the clipping region on conversion. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. Declaration public bool IncludeRuntime { get; set; } Property Value Type Description Boolean This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false . The default is true . Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc. MessageBackground Gets or sets a brush that describes the background of a message text. Declaration public Brush MessageBackground { get; set; } Property Value Type Description Brush A Brush specifying the brush that is used to fill the background of the message text. The default is PapayaWhip . If set to null , the background will not be drawn. MessageFillBrush Gets or sets the brush with which to fill the message text. This is optional, and can be null . If the brush is null , no fill is drawn. Declaration public Brush MessageFillBrush { get; set; } Property Value Type Description Brush A Brush specifying the fill of the message text. The default is Gold . Remarks If both the fill and stroke brushes of the message text are null , no text is drawn. MessageFontFamily Gets or sets the font family of the desired font for the message text. Declaration public FontFamily MessageFontFamily { get; set; } Property Value Type Description FontFamily A FontFamily specifying the font for the message text. The default value is MessageFontFamily . MessageFontSize Gets or sets the size of the desired font for the message text. Declaration public double MessageFontSize { get; set; } Property Value Type Description Double A value specifying the font size of the message text. The default is 48 pixels. The font size must be a positive number. MessageOpacity Gets or sets the opacity factor applied to the entire message text when it is rendered in the user interface (UI). Declaration public double MessageOpacity { get; set; } Property Value Type Description Double The opacity factor. Default opacity is 1.0. Expected values are between 0.0 and 1.0. MessageStrokeBrush Gets or sets the brush of the Pen with which to stroke the message text. This is optional, and can be null . If the brush is null , no stroke is drawn. Declaration public Brush MessageStrokeBrush { get; set; } Property Value Type Description Brush A Brush specifying the brush of the Pen for stroking the message text. The default is Maroon . Remarks If both the fill and stroke brushes of the message text are null , no text is drawn. MessageText Gets or sets the content of the message. Declaration public string MessageText { get; set; } Property Value Type Description String A String specifying the content of the message text. The default is \"Loading...\". This value can be overriden in the Unload(Boolean, String) method. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry . Declaration public bool OptimizePath { get; set; } Property Value Type Description Boolean This is true if the path geometry is optimized using the StreamGeometry ; otherwise, it is false . The default is true . Source Gets or sets the path to the SVG file to load into this Canvas . Declaration public Uri Source { get; set; } Property Value Type Description Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any opened diagram. See Also UriSource StreamSource StreamSource Gets or sets the Stream to the SVG source to load into this Canvas . Declaration public Stream StreamSource { get; set; } Property Value Type Description Stream A Stream specifying the stream to the SVG source. Settings this to null will close any opened diagram. Remarks The stream source has precedence over the Uri Source property. If set (not null ), the stream source will be rendered instead of the Uri source. WPF controls do not implement the IDisposable interface and cannot properly dispose any stream set to it. To avoid this issue and also any problem of the user accidentally closing the stream, this control makes a copy of the stream to memory stream. See Also Source SvgSource Gets or sets the SVG contents to load into this Canvas . Declaration public string SvgSource { get; set; } Property Value Type Description String A String specifying the embedded SVG contents. Settings this to null will close any opened diagram. See Also UriSource StreamSource TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. Declaration public bool TextAsGeometry { get; set; } Property Value Type Description Boolean This is true if texts are rendered as path geometries; otherwise, this is false . The default is false . UriSource Gets or sets the path to the SVG file to load into this Canvas . Declaration public Uri UriSource { get; set; } Property Value Type Description Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any opened diagram. Remarks This is the same as the Source property, and added for consistency. See Also UriSource StreamSource Methods CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing() Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . CreateDrawing(Stream, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing(Stream svgStream, WpfDrawingSettings settings) Parameters Type Name Description Stream svgStream A stream providing access to the SVG source data. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . CreateDrawing(String, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing(string svgSource, WpfDrawingSettings settings) Parameters Type Name Description String svgSource WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing(Uri svgSource, WpfDrawingSettings settings) Parameters Type Name Description Uri svgSource A Uri defining the path to the SVG source. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . GetDrawingSettings() Declaration protected virtual WpfDrawingSettings GetDrawingSettings() Returns Type Description WpfDrawingSettings Load(Stream, Boolean, Boolean) This sets the source SVG for a SvgCanvas by accessing a stream and optionally processing the result asynchronously. Declaration public bool Load(Stream streamSource, bool useCopyStream = true, bool useAsync = false) Parameters Type Name Description Stream streamSource The stream source that sets the SVG source value. Boolean useCopyStream A value specifying whether to use a copy of the stream. The default is true , the SVG source stream is copied, rendered and stored. Boolean useAsync A value indicating whether to process the result asynchronously. The default value is false , the SVG conversion is processed synchronously. Returns Type Description Boolean A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy. Load(String, Boolean) This sets the source SVG for a SvgCanvas by accessing text content and optionally processing the result asynchronously. Declaration public bool Load(string svgSource, bool useAsync = false) Parameters Type Name Description String svgSource The stream source that sets the SVG source value. Boolean useAsync A value indicating whether to process the result asynchronously. The default value is false , the SVG conversion is processed synchronously. Returns Type Description Boolean A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . Load(Uri, Boolean) This sets the source SVG for a SvgCanvas by using the supplied Uniform Resource Identifier (URI) and optionally processing the result asynchronously. Declaration public bool Load(Uri uriSource, bool useAsync = false) Parameters Type Name Description Uri uriSource A reference to the SVG source file. Boolean useAsync A value indicating whether to process the result asynchronously. The default value is false , the SVG conversion is processed synchronously. Returns Type Description Boolean A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . LoadAsync(Stream, Boolean) This sets the source SVG for a SvgCanvas by accessing a stream and processing the result asynchronously. Declaration public Task<bool> LoadAsync(Stream streamSource, bool useCopyStream = true) Parameters Type Name Description Stream streamSource The stream source that sets the SVG source value. Boolean useCopyStream A value specifying whether to use a copy of the stream. The default is true , the SVG source stream is copied, rendered and stored. Returns Type Description Task < Boolean > A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy. LoadAsync(String) This sets the source SVG for a SvgCanvas by accessing text contents and processing the result asynchronously. Declaration public Task<bool> LoadAsync(string svgSource) Parameters Type Name Description String svgSource The stream source that sets the SVG source value. Returns Type Description Task < Boolean > A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . LoadAsync(Uri) This sets the source SVG for a SvgCanvas by using the supplied Uniform Resource Identifier (URI) and processing the result asynchronously. Declaration public Task<bool> LoadAsync(Uri uriSource) Parameters Type Name Description Uri uriSource A reference to the SVG source file. Returns Type Description Task < Boolean > A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . OnAutoSizeChanged() This handles changes in the automatic resizing property of this control. Declaration protected virtual void OnAutoSizeChanged() OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. Declaration protected override void OnInitialized(EventArgs e) Parameters Type Name Description EventArgs e Event data for the event. Overrides FrameworkElement.OnInitialized(EventArgs) OnSettingsChanged() This handles changes in the rendering settings of this control. Declaration protected virtual void OnSettingsChanged() Unload(Boolean, String) This clears the SvgCanvas of any drawn diagram and optionally displays a message. Declaration public void Unload(bool displayMessage = false, string message = \"\") Parameters Type Name Description Boolean displayMessage A value indicating whether to display a message after clearing the SVG rendered diagram. The value is false , not message is displayed. String message This specifies the message to be displayed after clearing the diagram. Setting this parameter to a non-empty text will override any message set in the MessageText . The default value is Empty . Explicit Interface Implementations ISvgControl.HandleAlert(String) Declaration void ISvgControl.HandleAlert(string message) Parameters Type Name Description String message ISvgControl.HandleError(Exception) Declaration void ISvgControl.HandleError(Exception exception) Parameters Type Name Description Exception exception ISvgControl.HandleError(String) Declaration void ISvgControl.HandleError(string message) Parameters Type Name Description String message ISvgControl.HandleError(String, Exception) Declaration void ISvgControl.HandleError(string message, Exception exception) Parameters Type Name Description String message Exception exception ISvgControl.Height Declaration int ISvgControl.Height { get; } Returns Type Description Int32 ISvgControl.Width Declaration int ISvgControl.Width { get; } Returns Type Description Int32 Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient System.Windows.Markup.IAddChild ISvgControl System.Windows.Markup.IUriContext"
  },
  "api/SharpVectors.Converters.SvgControl.html": {
    "href": "api/SharpVectors.Converters.SvgControl.html",
    "title": "Class SvgControl | SharpVectors Documentation",
    "keywords": "Class SvgControl Inheritance Object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control SvgControl Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IUriContext Inherited Members Control.BorderBrushProperty Control.BorderThicknessProperty Control.BackgroundProperty Control.ForegroundProperty Control.FontFamilyProperty Control.FontSizeProperty Control.FontStretchProperty Control.FontStyleProperty Control.FontWeightProperty Control.HorizontalContentAlignmentProperty Control.VerticalContentAlignmentProperty Control.TabIndexProperty Control.IsTabStopProperty Control.PaddingProperty Control.TemplateProperty Control.PreviewMouseDoubleClickEvent Control.MouseDoubleClickEvent Control.OnTemplateChanged(ControlTemplate, ControlTemplate) Control.ToString() Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs) Control.OnMouseDoubleClick(MouseButtonEventArgs) Control.BorderBrush Control.BorderThickness Control.Background Control.Foreground Control.FontFamily Control.FontSize Control.FontStretch Control.FontStyle Control.FontWeight Control.HorizontalContentAlignment Control.VerticalContentAlignment Control.TabIndex Control.IsTabStop Control.Padding Control.Template Control.HandlesScrolling Control.PreviewMouseDoubleClick Control.MouseDoubleClick FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean) FrameworkElement.GetVisualChild(Int32) FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable(String) FrameworkElement.GetTemplateChild(String) FrameworkElement.FindResource(Object) FrameworkElement.TryFindResource(Object) FrameworkElement.SetResourceReference(DependencyProperty, Object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, String) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(String, Object) FrameworkElement.UnregisterName(String) FrameworkElement.FindName(String) FrameworkElement.AddLogicalChild(Object) FrameworkElement.RemoveLogicalChild(Object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.LogicalChildren FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, Boolean) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public class SvgControl : Control, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IUriContext Constructors SvgControl() Declaration public SvgControl() Fields MessageBackgroundProperty The DependencyProperty for the MessageBackground property. Flags: Can be used in style rules Default Value: PapayaWhip Declaration public static readonly DependencyProperty MessageBackgroundProperty Field Value Type Description DependencyProperty MessageFillBrushProperty The DependencyProperty for the MessageFillBrush property. Flags: Can be used in style rules Default Value: Gold Declaration public static readonly DependencyProperty MessageFillBrushProperty Field Value Type Description DependencyProperty MessageFontFamilyProperty The DependencyProperty for the MessageFontFamily property. Flags: Can be used in style rules Default Value: System Dialog Font Declaration public static readonly DependencyProperty MessageFontFamilyProperty Field Value Type Description DependencyProperty MessageFontSizeProperty The DependencyProperty for the MessageFontSize property. Flags: Can be used in style rules Default Value: 48 pixels Declaration public static readonly DependencyProperty MessageFontSizeProperty Field Value Type Description DependencyProperty MessageOpacityProperty The DependencyProperty for the MessageOpacity property. Flags: Can be used in style rules Default Value: 1 (full opacity) Declaration public static readonly DependencyProperty MessageOpacityProperty Field Value Type Description DependencyProperty MessageStrokeBrushProperty The DependencyProperty for the MessageStrokeBrush property. Flags: Can be used in style rules Default Value: Maroon Declaration public static readonly DependencyProperty MessageStrokeBrushProperty Field Value Type Description DependencyProperty MessageTextProperty The DependencyProperty for the MessageText property. Flags: Can be used in style rules Default Value: \"Loading...\" Declaration public static readonly DependencyProperty MessageTextProperty Field Value Type Description DependencyProperty SizeModeProperty Declaration public static DependencyProperty SizeModeProperty Field Value Type Description DependencyProperty SourceProperty Identifies the Source dependency property. Declaration public static readonly DependencyProperty SourceProperty Field Value Type Description DependencyProperty StreamSourceProperty Identifies the StreamSource dependency property. Declaration public static readonly DependencyProperty StreamSourceProperty Field Value Type Description DependencyProperty Properties AutoSize Gets or sets a value indicating whether to automatically resize this Canvas based on the size of the loaded drawing. Declaration public bool AutoSize { get; set; } Property Value Type Description Boolean This is true if this Canvas is automatically resized based on the size of the loaded drawing; otherwise, it is false . The default is false , and the user-defined size or the parent assigned layout size is used. BaseUri Gets or sets the base URI of the current application context. Declaration public Uri BaseUri { get; set; } Property Value Type Description Uri The base URI of the application context. CultureInfo Gets or sets the main culture information used for rendering texts. Declaration public CultureInfo CultureInfo { get; set; } Property Value Type Description CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts. Drawings Gets the drawing from the SVG file conversion. Declaration public DrawingGroup Drawings { get; } Property Value Type Description DrawingGroup An instance of the DrawingGroup specifying the converted drawings which is rendered in this canvas. EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. Declaration public bool EnsureViewboxPosition { get; set; } Property Value Type Description Boolean This determines whether a transformation is applied to the rendered drawing. For drawings where the top-left position of the viewbox is off the screen, due to negative values, this will ensure the drawing is visible. The default value is true . Set this value to false if you wish to apply your own transformations to the drawings. EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. Declaration public bool EnsureViewboxSize { get; set; } Property Value Type Description Boolean For image outputs, this will force the original size to be saved. The default value is false . However, the ImageSvgConverter converted sets this to true by default. Remarks Setting this to true will cause the rendering process to draw a transparent box around the output, if a viewbox is defined. This will ensure that the original image size is saved. IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. Declaration public bool IgnoreRootViewbox { get; set; } Property Value Type Description Boolean For image outputs, this will force the original size to be saved. The default value is false . Remarks There are reported cases where are diagrams displayed in Inkscape program, but will not show when converted. These are diagrams on the drawing canvas of Inkspace but outside the svg viewbox. When converted the drawings are also converted but not displayed due to clipping. Setting this property to true will clear the clipping region on conversion. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. Declaration public bool IncludeRuntime { get; set; } Property Value Type Description Boolean This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false . The default is true . Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc. MessageBackground Gets or sets a brush that describes the background of a message text. Declaration public Brush MessageBackground { get; set; } Property Value Type Description Brush A Brush specifying the brush that is used to fill the background of the message text. The default is PapayaWhip . If set to null , the background will not be drawn. MessageFillBrush Gets or sets the brush with which to fill the message text. This is optional, and can be null . If the brush is null , no fill is drawn. Declaration public Brush MessageFillBrush { get; set; } Property Value Type Description Brush A Brush specifying the fill of the message text. The default is Gold . Remarks If both the fill and stroke brushes of the message text are null , no text is drawn. MessageFontFamily Gets or sets the font family of the desired font for the message text. Declaration public FontFamily MessageFontFamily { get; set; } Property Value Type Description FontFamily A FontFamily specifying the font for the message text. The default value is MessageFontFamily . MessageFontSize Gets or sets the size of the desired font for the message text. Declaration public double MessageFontSize { get; set; } Property Value Type Description Double A value specifying the font size of the message text. The default is 48 pixels. The font size must be a positive number. MessageOpacity Gets or sets the opacity factor applied to the entire message text when it is rendered in the user interface (UI). Declaration public double MessageOpacity { get; set; } Property Value Type Description Double The opacity factor. Default opacity is 1.0. Expected values are between 0.0 and 1.0. MessageStrokeBrush Gets or sets the brush of the Pen with which to stroke the message text. This is optional, and can be null . If the brush is null , no stroke is drawn. Declaration public Brush MessageStrokeBrush { get; set; } Property Value Type Description Brush A Brush specifying the brush of the Pen for stroking the message text. The default is Maroon . Remarks If both the fill and stroke brushes of the message text are null , no text is drawn. MessageText Gets or sets the content of the message. Declaration public string MessageText { get; set; } Property Value Type Description String A String specifying the content of the message text. The default is \"Loading...\". This value can be overriden in the Unload(Boolean, String) method. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry . Declaration public bool OptimizePath { get; set; } Property Value Type Description Boolean This is true if the path geometry is optimized using the StreamGeometry ; otherwise, it is false . The default is true . RenderedDrawing Declaration public DrawingGroup RenderedDrawing { get; protected set; } Property Value Type Description DrawingGroup SizeMode Declaration public SvgControlSizeMode SizeMode { get; set; } Property Value Type Description SvgControlSizeMode Source Gets or sets the path to the SVG file to load into this Canvas . Declaration public Uri Source { get; set; } Property Value Type Description Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any opened diagram. See Also StreamSource StreamSource Gets or sets the Stream to the SVG source to load into this Canvas . Declaration public Stream StreamSource { get; set; } Property Value Type Description Stream A Stream specifying the stream to the SVG source. Settings this to null will close any opened diagram. Remarks The stream source has precedence over the Uri Source property. If set (not null ), the stream source will be rendered instead of the Uri source. WPF controls do not implement the IDisposable interface and cannot properly dispose any stream set to it. To avoid this issue and also any problem of the user accidentally closing the stream, this control makes a copy of the stream to memory stream. See Also Source TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. Declaration public bool TextAsGeometry { get; set; } Property Value Type Description Boolean This is true if texts are rendered as path geometries; otherwise, this is false . The default is false . Methods ArrangeOverride(Size) Declaration protected override Size ArrangeOverride(Size arrangeBounds) Parameters Type Name Description Size arrangeBounds Returns Type Description Size Overrides Control.ArrangeOverride(Size) CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing() Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . CreateDrawing(Stream, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing(Stream svgStream, WpfDrawingSettings settings) Parameters Type Name Description Stream svgStream A stream providing access to the SVG source data. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing(Uri svgSource, WpfDrawingSettings settings) Parameters Type Name Description Uri svgSource A Uri defining the path to the SVG source. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . GetDrawingSettings() Declaration protected virtual WpfDrawingSettings GetDrawingSettings() Returns Type Description WpfDrawingSettings Load(Stream, Boolean, Boolean) This sets the source SVG for a SvgControl by accessing a stream and optionally processing the result asynchronously. Declaration public bool Load(Stream streamSource, bool useCopyStream = true, bool useAsync = false) Parameters Type Name Description Stream streamSource The stream source that sets the SVG source value. Boolean useCopyStream A value specifying whether to use a copy of the stream. The default is true , the SVG source stream is copied, rendered and stored. Boolean useAsync A value indicating whether to process the result asynchronously. The default value is false , the SVG conversion is processed synchronously. Returns Type Description Boolean A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy. Load(Uri, Boolean) This sets the source SVG for a SvgControl by using the supplied Uniform Resource Identifier (URI) and optionally processing the result asynchronously. Declaration public bool Load(Uri uriSource, bool useAsync = false) Parameters Type Name Description Uri uriSource A reference to the SVG source file. Boolean useAsync A value indicating whether to process the result asynchronously. The default value is false , the SVG conversion is processed synchronously. Returns Type Description Boolean A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . LoadAsync(Stream, Boolean) This sets the source SVG for a SvgControl by accessing a stream and processing the result asynchronously. Declaration public Task<bool> LoadAsync(Stream streamSource, bool useCopyStream = true) Parameters Type Name Description Stream streamSource The stream source that sets the SVG source value. Boolean useCopyStream A value specifying whether to use a copy of the stream. The default is true , the SVG source stream is copied, rendered and stored. Returns Type Description Task < Boolean > A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy. LoadAsync(Uri) This sets the source SVG for a SvgControl by using the supplied Uniform Resource Identifier (URI) and processing the result asynchronously. Declaration public Task<bool> LoadAsync(Uri uriSource) Parameters Type Name Description Uri uriSource A reference to the SVG source file. Returns Type Description Task < Boolean > A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . MeasureOverride(Size) Declaration protected override Size MeasureOverride(Size constraint) Parameters Type Name Description Size constraint Returns Type Description Size Overrides Control.MeasureOverride(Size) OnAutoSizeChanged() This handles changes in the automatic resizing property of this control. Declaration protected virtual void OnAutoSizeChanged() OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. Declaration protected override void OnInitialized(EventArgs e) Parameters Type Name Description EventArgs e Event data for the event. Overrides FrameworkElement.OnInitialized(EventArgs) OnRender(DrawingContext) Declaration protected override void OnRender(DrawingContext drawingContext) Parameters Type Name Description DrawingContext drawingContext Overrides UIElement.OnRender(DrawingContext) OnRenderSizeChanged(SizeChangedInfo) Declaration protected override void OnRenderSizeChanged(SizeChangedInfo sizeInfo) Parameters Type Name Description SizeChangedInfo sizeInfo Overrides FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) OnSettingsChanged() This handles changes in the rendering settings of this control. Declaration protected virtual void OnSettingsChanged() RenderDiagrams(DrawingGroup) Declaration public void RenderDiagrams(DrawingGroup renderedGroup) Parameters Type Name Description DrawingGroup renderedGroup Unload(Boolean, String) This clears the SvgControl of any drawn diagram and optionally displays a message. Declaration public void Unload(bool displayMessage = false, string message = \"\") Parameters Type Name Description Boolean displayMessage A value indicating whether to display a message after clearing the SVG rendered diagram. The value is false , not message is displayed. String message This specifies the message to be displayed after clearing the diagram. Setting this parameter to a non-empty text will override any message set in the MessageText . The default value is Empty . Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient System.Windows.Markup.IUriContext"
  },
  "api/SharpVectors.Converters.SvgControlSizeMode.html": {
    "href": "api/SharpVectors.Converters.SvgControlSizeMode.html",
    "title": "Enum SvgControlSizeMode | SharpVectors Documentation",
    "keywords": "Enum SvgControlSizeMode Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public enum SvgControlSizeMode Fields ContentToSizeNoStretch ContentToSizeStretch None SizeToContent Name Description ContentToSizeNoStretch ContentToSizeStretch None SizeToContent"
  },
  "api/SharpVectors.Converters.SvgConverter.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.html",
    "title": "Class SvgConverter | SharpVectors Documentation",
    "keywords": "Class SvgConverter This is the abstract base class for all SVG to WPF converters. Inheritance Object DispatcherObject DependencyObject SvgConverter DirectorySvgConverter FileSvgConverter FileSvgReader ImageSvgConverter ResourceSvgConverter StreamSvgConverter Implements IDisposable Inherited Members DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public abstract class SvgConverter : DependencyObject, IDisposable Constructors SvgConverter() Initializes a new instance of the SvgConverter class with the default parameters and settings. Declaration protected SvgConverter() SvgConverter(WpfDrawingSettings) Initializes a new instance of the SvgConverter class with the specified drawing or rendering settings. Declaration protected SvgConverter(WpfDrawingSettings settings) Parameters Type Name Description WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. SvgConverter(Boolean, Boolean, WpfDrawingSettings) Initializes a new instance of the SvgConverter class with the specified drawing or rendering settings and the saving options. Declaration protected SvgConverter(bool saveXaml, bool saveZaml, WpfDrawingSettings settings) Parameters Type Name Description Boolean saveXaml This specifies whether to save result object tree in XAML file. Boolean saveZaml This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed XAML format, similar to the SVGZ. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Fields _background Declaration protected SolidColorBrush _background Field Value Type Description SolidColorBrush _dpiX Declaration protected double _dpiX Field Value Type Description Double _dpiY Declaration protected double _dpiY Field Value Type Description Double _isEmbedded Declaration protected bool _isEmbedded Field Value Type Description Boolean _saveXaml Declaration protected bool _saveXaml Field Value Type Description Boolean _saveZaml Declaration protected bool _saveZaml Field Value Type Description Boolean _useFrameXamlWriter Declaration protected bool _useFrameXamlWriter Field Value Type Description Boolean _wpfRenderer Declaration protected WpfDrawingRenderer _wpfRenderer Field Value Type Description WpfDrawingRenderer _wpfSettings Declaration protected WpfDrawingSettings _wpfSettings Field Value Type Description WpfDrawingSettings _wpfWindow Required designer variable. Declaration protected WpfSvgWindow _wpfWindow Field Value Type Description WpfSvgWindow BackupExt Declaration public const string BackupExt = \".bak\" Field Value Type Description String CompressedSvgExt Declaration public const string CompressedSvgExt = \".svgz\" Field Value Type Description String CompressedXamlExt Declaration public const string CompressedXamlExt = \".zaml\" Field Value Type Description String SvgExt Declaration public const string SvgExt = \".svg\" Field Value Type Description String XamlExt Declaration public const string XamlExt = \".xaml\" Field Value Type Description String Properties Background Gets or sets a brush that describes the background of a image. Declaration public SolidColorBrush Background { get; set; } Property Value Type Description SolidColorBrush The brush that is used to fill the background of the control. The default is null or transparent. DpiX Gets the horizontal dots per inch (dpi) of the static image. Declaration public double DpiX { get; set; } Property Value Type Description Double The horizontal dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the x-axis. DpiY Gets the vertical dots per inch (dpi) of the static image. Declaration public double DpiY { get; set; } Property Value Type Description Double The vertical dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the y-axis. DrawingSettings Gets the settings used by the rendering or drawing engine. Declaration public WpfDrawingSettings DrawingSettings { get; } Property Value Type Description WpfDrawingSettings An instance of WpfDrawingSettings specifying all the options for rendering or drawing. SaveXaml Gets or sets a value indicating whether to save the conversion output to the XAML file. Declaration public bool SaveXaml { get; set; } Property Value Type Description Boolean This is true if the conversion output is saved to the XAML file; otherwise, it is false . The default depends on the converter. SaveZaml Gets or sets a value indicating whether to save the conversion output to the ZAML file. Declaration public bool SaveZaml { get; set; } Property Value Type Description Boolean This is true if the conversion output is saved to the ZAML file; otherwise, it is false . The default depends on the converter. Remarks The ZAML is simply a G-Zip compressed XAML format, similar to the SVGZ . SvgDocument Gets the current SVG Document created by this converter. Declaration public SvgDocument SvgDocument { get; } Property Value Type Description SvgDocument An instance of SvgDocument specifying the SVG DOM currently opened by the converter; or null if no SVG document is currently opened. SvgWindow Gets the SVG Window object created by this converter. Declaration public WpfSvgWindow SvgWindow { get; } Property Value Type Description WpfSvgWindow An instance of WpfSvgWindow specifying the WPF implementation of the ISvgWindow . UseFrameXamlWriter Gets or sets a value indicating whether to use the .NET framework version of the XAML writer. Declaration public bool UseFrameXamlWriter { get; set; } Property Value Type Description Boolean This is true if the .NET framework version of the XAML writer is used; otherwise, a customized XAML writer, XmlXamlWriter , is used. The default is false . Remarks The customized XAML writer is optimized for the conversion process, and it is recommended as the writer, unless in cases where it fails to produce accurate result. Methods BeginProcessing(WpfDrawingDocument) Declaration protected virtual void BeginProcessing(WpfDrawingDocument drawingDocument = null) Parameters Type Name Description WpfDrawingDocument drawingDocument Dispose() This releases all resources used by the SvgConverter object. Declaration public void Dispose() Dispose(Boolean) This releases the unmanaged resources used by the SvgConverter and optionally releases the managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing This is true if managed resources should be disposed; otherwise, false . EndProcessing() Declaration protected virtual void EndProcessing() Finalize() This allows a converter to attempt to free resources and perform other cleanup operations before the converter is reclaimed by garbage collection. Declaration protected void Finalize() GetBitmapEncoder(ImageEncoderType) Declaration protected static BitmapEncoder GetBitmapEncoder(ImageEncoderType encoderType) Parameters Type Name Description ImageEncoderType encoderType Returns Type Description BitmapEncoder GetImageFileExtention(ImageEncoderType) Declaration protected static string GetImageFileExtention(ImageEncoderType encoderType) Parameters Type Name Description ImageEncoderType encoderType Returns Type Description String Implements System.IDisposable"
  },
  "api/SharpVectors.Converters.SvgImageBase.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.html",
    "title": "Class SvgImageBase | SharpVectors Documentation",
    "keywords": "Class SvgImageBase This is an abstract implementation of a markup extension that enables the creation of DrawingImage from SVG sources. Inheritance Object MarkupExtension SvgImageBase SvgImageConverterExtension SvgImageExtension Inherited Members MarkupExtension.ProvideValue(IServiceProvider) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public abstract class SvgImageBase : MarkupExtension Constructors SvgImageBase() Initializes a new instance of the SvgImageBase class with the default parameters. Declaration protected SvgImageBase() Fields _appName Declaration protected string _appName Field Value Type Description String _culture Declaration protected CultureInfo _culture Field Value Type Description CultureInfo _includeRuntime Declaration protected bool _includeRuntime Field Value Type Description Boolean _optimizePath Declaration protected bool _optimizePath Field Value Type Description Boolean _textAsGeometry Declaration protected bool _textAsGeometry Field Value Type Description Boolean Properties AppName Gets or sets the project or application name of the target assembly. Declaration public string AppName { get; set; } Property Value Type Description String A string specifying the application project name. Remarks This is optional and is only used to resolve the resource Uri at the design time. CultureInfo Gets or sets the main culture information used for rendering texts. Declaration public CultureInfo CultureInfo { get; set; } Property Value Type Description CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. Declaration public bool IncludeRuntime { get; set; } Property Value Type Description Boolean This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false . The default is true . Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry . Declaration public bool OptimizePath { get; set; } Property Value Type Description Boolean This is true if the path geometry is optimized using the StreamGeometry ; otherwise, it is false . The default is true . TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. Declaration public bool TextAsGeometry { get; set; } Property Value Type Description Boolean This is true if texts are rendered as path geometries; otherwise, this is false . The default is false . Methods GetAppName() Declaration protected void GetAppName() GetDrawing(Uri) This converts the SVG resource specified by the Uri to DrawingGroup . Declaration protected virtual DrawingGroup GetDrawing(Uri svgSource) Parameters Type Name Description Uri svgSource A Uri specifying the source of the SVG resource. Returns Type Description DrawingGroup A DrawingGroup of the converted SVG resource. GetEntryAssembly() Declaration protected Assembly GetEntryAssembly() Returns Type Description Assembly GetExecutingAssembly() Declaration protected Assembly GetExecutingAssembly() Returns Type Description Assembly GetImage(Uri) This converts the SVG resource specified by the Uri to DrawingImage . Declaration protected virtual DrawingImage GetImage(Uri svgSource) Parameters Type Name Description Uri svgSource A Uri specifying the source of the SVG resource. Returns Type Description DrawingImage A DrawingImage of the converted SVG resource. Remarks This uses the GetDrawing(Uri) method to convert the SVG resource to DrawingGroup , which is then wrapped in DrawingImage ."
  },
  "api/SharpVectors.Converters.SvgImageConverterExtension.html": {
    "href": "api/SharpVectors.Converters.SvgImageConverterExtension.html",
    "title": "Class SvgImageConverterExtension | SharpVectors Documentation",
    "keywords": "Class SvgImageConverterExtension This implements a markup extension that enables the creation of DrawingImage from SVG sources. Inheritance Object MarkupExtension SvgImageBase SvgImageConverterExtension Implements IValueConverter Inherited Members SvgImageBase._textAsGeometry SvgImageBase._includeRuntime SvgImageBase._optimizePath SvgImageBase._appName SvgImageBase._culture SvgImageBase.OptimizePath SvgImageBase.TextAsGeometry SvgImageBase.IncludeRuntime SvgImageBase.CultureInfo SvgImageBase.AppName SvgImageBase.GetDrawing(Uri) SvgImageBase.GetImage(Uri) SvgImageBase.GetAppName() SvgImageBase.GetEntryAssembly() SvgImageBase.GetExecutingAssembly() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class SvgImageConverterExtension : SvgImageBase, IValueConverter Remarks The SVG source file can be: From the web From the local computer (relative or absolute paths) From the resources. The rendering settings are provided as properties for customizations. Constructors SvgImageConverterExtension() Initializes a new instance of the SvgImageConverterExtension class with the default parameters. Declaration public SvgImageConverterExtension() SvgImageConverterExtension(Uri) Declaration public SvgImageConverterExtension(Uri baseUri) Parameters Type Name Description Uri baseUri Methods Convert(Object, Type, Object, CultureInfo) Declaration public object Convert(object value, Type targetType, object parameter, CultureInfo culture) Parameters Type Name Description Object value Type targetType Object parameter CultureInfo culture Returns Type Description Object ConvertBack(Object, Type, Object, CultureInfo) Declaration public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) Parameters Type Name Description Object value Type targetType Object parameter CultureInfo culture Returns Type Description Object ProvideValue(IServiceProvider) Performs the conversion of a valid SVG source file to the DrawingImage that is set as the value of the target property for this markup extension. Declaration public override object ProvideValue(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Object that can provide services for the markup extension. Returns Type Description Object This returns DrawingImage if successful; otherwise, it returns null . Overrides MarkupExtension.ProvideValue(IServiceProvider) Implements System.Windows.Data.IValueConverter"
  },
  "api/SharpVectors.Converters.SvgImageExtension.html": {
    "href": "api/SharpVectors.Converters.SvgImageExtension.html",
    "title": "Class SvgImageExtension | SharpVectors Documentation",
    "keywords": "Class SvgImageExtension This implements a markup extension that enables the creation of DrawingImage from SVG sources. Inheritance Object MarkupExtension SvgImageBase SvgImageExtension Inherited Members SvgImageBase._textAsGeometry SvgImageBase._includeRuntime SvgImageBase._optimizePath SvgImageBase._appName SvgImageBase._culture SvgImageBase.OptimizePath SvgImageBase.TextAsGeometry SvgImageBase.IncludeRuntime SvgImageBase.CultureInfo SvgImageBase.AppName SvgImageBase.GetDrawing(Uri) SvgImageBase.GetImage(Uri) SvgImageBase.GetAppName() SvgImageBase.GetEntryAssembly() SvgImageBase.GetExecutingAssembly() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class SvgImageExtension : SvgImageBase Remarks The SVG source file can be: From the web From the local computer (relative or absolute paths) From the resources. The rendering settings are provided as properties for customizations. Constructors SvgImageExtension() Initializes a new instance of the SvgImageExtension class with the default parameters. Declaration public SvgImageExtension() SvgImageExtension(String) Initializes a new instance of the SvgImageExtension class with the specified SVG file path. Declaration public SvgImageExtension(string svgPath) Parameters Type Name Description String svgPath Properties Source Gets or sets the SVG source file. Declaration public string Source { get; set; } Property Value Type Description String A string specifying the path of the SVG source file. The default is null . Methods ProvideValue(IServiceProvider) Performs the conversion of a valid SVG source file to the DrawingImage that is set as the value of the target property for this markup extension. Declaration public override object ProvideValue(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Object that can provide services for the markup extension. Returns Type Description Object This returns DrawingImage if successful; otherwise, it returns null . Overrides MarkupExtension.ProvideValue(IServiceProvider)"
  },
  "api/SharpVectors.Converters.SvgViewbox.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.html",
    "title": "Class SvgViewbox | SharpVectors Documentation",
    "keywords": "Class SvgViewbox This is a Viewbox control for viewing SVG file in WPF applications. Inheritance Object DispatcherObject DependencyObject Visual UIElement FrameworkElement Decorator Viewbox SvgViewbox Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild ISvgControl IUriContext Inherited Members Viewbox.StretchProperty Viewbox.StretchDirectionProperty Viewbox.GetVisualChild(Int32) Viewbox.MeasureOverride(Size) Viewbox.ArrangeOverride(Size) Viewbox.Child Viewbox.VisualChildrenCount Viewbox.LogicalChildren Viewbox.Stretch Viewbox.StretchDirection Decorator.IAddChild.AddChild(Object) Decorator.IAddChild.AddText(String) FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean) FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable(String) FrameworkElement.GetTemplateChild(String) FrameworkElement.FindResource(Object) FrameworkElement.TryFindResource(Object) FrameworkElement.SetResourceReference(DependencyProperty, Object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, String) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(String, Object) FrameworkElement.UnregisterName(String) FrameworkElement.FindName(String) FrameworkElement.AddLogicalChild(Object) FrameworkElement.RemoveLogicalChild(Object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, Boolean) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.OnRender(DrawingContext) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public class SvgViewbox : Viewbox, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild, ISvgControl, IUriContext Remarks It wraps the drawing canvas, SvgDrawingCanvas , instead of image control, therefore any interactivity support implemented in the drawing canvas will be available in the Viewbox . Constructors SvgViewbox() Initializes a new instance of the SvgViewbox class. Declaration public SvgViewbox() Fields MessageBackgroundProperty The DependencyProperty for the MessageBackground property. Flags: Can be used in style rules Default Value: PapayaWhip Declaration public static readonly DependencyProperty MessageBackgroundProperty Field Value Type Description DependencyProperty MessageFillBrushProperty The DependencyProperty for the MessageFillBrush property. Flags: Can be used in style rules Default Value: Gold Declaration public static readonly DependencyProperty MessageFillBrushProperty Field Value Type Description DependencyProperty MessageFontFamilyProperty The DependencyProperty for the MessageFontFamily property. Flags: Can be used in style rules Default Value: System Dialog Font Declaration public static readonly DependencyProperty MessageFontFamilyProperty Field Value Type Description DependencyProperty MessageFontSizeProperty The DependencyProperty for the MessageFontSize property. Flags: Can be used in style rules Default Value: 48 pixels Declaration public static readonly DependencyProperty MessageFontSizeProperty Field Value Type Description DependencyProperty MessageOpacityProperty The DependencyProperty for the MessageOpacity property. Flags: Can be used in style rules Default Value: 1 (full opacity) Declaration public static readonly DependencyProperty MessageOpacityProperty Field Value Type Description DependencyProperty MessageStrokeBrushProperty The DependencyProperty for the MessageStrokeBrush property. Flags: Can be used in style rules Default Value: Maroon Declaration public static readonly DependencyProperty MessageStrokeBrushProperty Field Value Type Description DependencyProperty MessageTextProperty The DependencyProperty for the MessageText property. Flags: Can be used in style rules Default Value: \"Loading...\" Declaration public static readonly DependencyProperty MessageTextProperty Field Value Type Description DependencyProperty SourceProperty Identifies the Source dependency property. Declaration public static readonly DependencyProperty SourceProperty Field Value Type Description DependencyProperty StreamSourceProperty Identifies the StreamSource dependency property. Declaration public static readonly DependencyProperty StreamSourceProperty Field Value Type Description DependencyProperty SvgSourceProperty Identifies the SvgSource dependency property. Declaration public static readonly DependencyProperty SvgSourceProperty Field Value Type Description DependencyProperty UriSourceProperty Identifies the UriSource dependency property. Declaration public static readonly DependencyProperty UriSourceProperty Field Value Type Description DependencyProperty Properties AppTitle Gets or sets the application title, which is used to display the alert and error messages not handled by the user. Declaration public string AppTitle { get; set; } Property Value Type Description String A string containg the application title. This cannot be null or empty. The default is SharpVectors . AutoSize Gets or sets a value indicating whether to automatically resize this Viewbox based on the size of the loaded drawing. Declaration public bool AutoSize { get; set; } Property Value Type Description Boolean This is true if this Viewbox is automatically resized based on the size of the loaded drawing; otherwise, it is false . The default is false , and the user-defined size or the parent assigned layout size is used. BaseUri Gets or sets the base URI of the current application context. Declaration public Uri BaseUri { get; set; } Property Value Type Description Uri The base URI of the application context. CultureInfo Gets or sets the main culture information used for rendering texts. Declaration public CultureInfo CultureInfo { get; set; } Property Value Type Description CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts. DesignMode Declaration public bool DesignMode { get; } Property Value Type Description Boolean DrawingCanvas Gets the drawing canvas, which is the child of this Viewbox . Declaration public SvgDrawingCanvas DrawingCanvas { get; } Property Value Type Description SvgDrawingCanvas An instance of the SvgDrawingCanvas specifying the child of this Viewbox , which handles the rendering. Drawings Gets the drawing from the SVG file conversion. Declaration public DrawingGroup Drawings { get; } Property Value Type Description DrawingGroup An instance of the DrawingGroup specifying the converted drawings which is rendered in the canvas and displayed in the this viewbox. EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. Declaration public bool EnsureViewboxPosition { get; set; } Property Value Type Description Boolean This determines whether a transformation is applied to the rendered drawing. For drawings where the top-left position of the viewbox is off the screen, due to negative values, this will ensure the drawing is visible. The default value is true . Set this value to false if you wish to apply your own transformations to the drawings. EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. Declaration public bool EnsureViewboxSize { get; set; } Property Value Type Description Boolean For image outputs, this will force the original size to be saved. The default value is false . However, the ImageSvgConverter converted sets this to true by default. Remarks Setting this to true will cause the rendering process to draw a transparent box around the output, if a viewbox is defined. This will ensure that the original image size is saved. IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. Declaration public bool IgnoreRootViewbox { get; set; } Property Value Type Description Boolean For image outputs, this will force the original size to be saved. The default value is false . Remarks There are reported cases where are diagrams displayed in Inkscape program, but will not show when converted. These are diagrams on the drawing canvas of Inkspace but outside the svg viewbox. When converted the drawings are also converted but not displayed due to clipping. Setting this property to true will clear the clipping region on conversion. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. Declaration public bool IncludeRuntime { get; set; } Property Value Type Description Boolean This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false . The default is true . Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc. InteractiveMode Gets or sets a value specifying the interactive mode, which controls the level of information attached to the generated drawing. Declaration public SvgInteractiveModes InteractiveMode { get; set; } Property Value Type Description SvgInteractiveModes An enumeration of the type SvgInteractiveModes specifying the interactive mode. The default is None ; no interactivity and may change in the future. MessageBackground Gets or sets a brush that describes the background of a message text. Declaration public Brush MessageBackground { get; set; } Property Value Type Description Brush A Brush specifying the brush that is used to fill the background of the message text. The default is PapayaWhip . If set to null , the background will not be drawn. MessageFillBrush Gets or sets the brush with which to fill the message text. This is optional, and can be null . If the brush is null , no fill is drawn. Declaration public Brush MessageFillBrush { get; set; } Property Value Type Description Brush A Brush specifying the fill of the message text. The default is Gold . Remarks If both the fill and stroke brushes of the message text are null , no text is drawn. MessageFontFamily Gets or sets the font family of the desired font for the message text. Declaration public FontFamily MessageFontFamily { get; set; } Property Value Type Description FontFamily A FontFamily specifying the font for the message text. The default value is MessageFontFamily . MessageFontSize Gets or sets the size of the desired font for the message text. Declaration public double MessageFontSize { get; set; } Property Value Type Description Double A value specifying the font size of the message text. The default is 48 pixels. The font size must be a positive number. MessageOpacity Gets or sets the opacity factor applied to the entire message text when it is rendered in the user interface (UI). Declaration public double MessageOpacity { get; set; } Property Value Type Description Double The opacity factor. Default opacity is 1.0. Expected values are between 0.0 and 1.0. MessageStrokeBrush Gets or sets the brush of the Pen with which to stroke the message text. This is optional, and can be null . If the brush is null , no stroke is drawn. Declaration public Brush MessageStrokeBrush { get; set; } Property Value Type Description Brush A Brush specifying the brush of the Pen for stroking the message text. The default is Maroon . Remarks If both the fill and stroke brushes of the message text are null , no text is drawn. MessageText Gets or sets the content of the message. Declaration public string MessageText { get; set; } Property Value Type Description String A String specifying the content of the message text. The default is \"Loading...\". This value can be overriden in the Unload(Boolean, String) method. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry . Declaration public bool OptimizePath { get; set; } Property Value Type Description Boolean This is true if the path geometry is optimized using the StreamGeometry ; otherwise, it is false . The default is true . Source Gets or sets the path to the SVG file to load into this Viewbox . Declaration public Uri Source { get; set; } Property Value Type Description Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any opened diagram. See Also StreamSource StreamSource Gets or sets the Stream to the SVG source to load into this Canvas . Declaration public Stream StreamSource { get; set; } Property Value Type Description Stream A Stream specifying the stream to the SVG source. Settings this to null will close any opened diagram. Remarks The stream source has precedence over the Uri Source property. If set (not null ), the stream source will be rendered instead of the Uri source. WPF controls do not implement the IDisposable interface and cannot properly dispose any stream set to it. To avoid this issue and also any problem of the user accidentally closing the stream, this control makes a copy of the stream to memory stream. See Also Source SvgSource Gets or sets the SVG contents to load into this Canvas . Declaration public string SvgSource { get; set; } Property Value Type Description String A String specifying the embedded SVG contents. Settings this to null will close any opened diagram. See Also UriSource StreamSource TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. Declaration public bool TextAsGeometry { get; set; } Property Value Type Description Boolean This is true if texts are rendered as path geometries; otherwise, this is false . The default is false . UriSource Gets or sets the path to the SVG file to load into this Canvas . Declaration public Uri UriSource { get; set; } Property Value Type Description Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any opened diagram. Remarks This is the same as the Source property, and added for consistency. See Also UriSource StreamSource Methods CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing() Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . CreateDrawing(Stream, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing(Stream svgStream, WpfDrawingSettings settings) Parameters Type Name Description Stream svgStream A stream providing access to the SVG source data. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . CreateDrawing(String, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing(string svgSource, WpfDrawingSettings settings) Parameters Type Name Description String svgSource WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup . Declaration protected virtual DrawingGroup CreateDrawing(Uri svgSource, WpfDrawingSettings settings) Parameters Type Name Description Uri svgSource A Uri defining the path to the SVG source. WpfDrawingSettings settings This specifies the settings used by the rendering or drawing engine. If this is null , the default settings is used. Returns Type Description DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null . GetDrawingSettings() Declaration protected virtual WpfDrawingSettings GetDrawingSettings() Returns Type Description WpfDrawingSettings Load(Stream, Boolean, Boolean) This sets the source SVG for a SvgViewbox by accessing a stream and optionally processing the result asynchronously. Declaration public bool Load(Stream streamSource, bool useCopyStream = true, bool useAsync = false) Parameters Type Name Description Stream streamSource The stream source that sets the SVG source value. Boolean useCopyStream A value specifying whether to use a copy of the stream. The default is true , the SVG source stream is copied, rendered and stored. Boolean useAsync A value indicating whether to process the result asynchronously. The default value is false , the SVG conversion is processed synchronously. Returns Type Description Boolean A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy. Load(String, Boolean) This sets the source SVG for a SvgViewbox by accessing text contents and optionally processing the result asynchronously. Declaration public bool Load(string svgSource, bool useAsync = false) Parameters Type Name Description String svgSource The stream source that sets the SVG source value. Boolean useAsync A value indicating whether to process the result asynchronously. The default value is false , the SVG conversion is processed synchronously. Returns Type Description Boolean A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . Load(Uri, Boolean) This sets the source SVG for a SvgViewbox by using the supplied Uniform Resource Identifier (URI) and optionally processing the result asynchronously. Declaration public bool Load(Uri uriSource, bool useAsync = false) Parameters Type Name Description Uri uriSource A reference to the SVG source file. Boolean useAsync A value indicating whether to process the result asynchronously. The default value is false , the SVG conversion is processed synchronously. Returns Type Description Boolean A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . LoadAsync(Stream, Boolean) This sets the source SVG for a SvgViewbox by accessing a stream and processing the result asynchronously. Declaration public Task<bool> LoadAsync(Stream streamSource, bool useCopyStream = true) Parameters Type Name Description Stream streamSource The stream source that sets the SVG source value. Boolean useCopyStream A value specifying whether to use a copy of the stream. The default is true , the SVG source stream is copied, rendered and stored. Returns Type Description Task < Boolean > A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy. LoadAsync(String) This sets the source SVG for a SvgViewbox by accessing text contents and processing the result asynchronously. Declaration public Task<bool> LoadAsync(string svgSource) Parameters Type Name Description String svgSource The stream source that sets the SVG source value. Returns Type Description Task < Boolean > A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . LoadAsync(Uri) This sets the source SVG for a SvgViewbox by using the supplied Uniform Resource Identifier (URI) and processing the result asynchronously. Declaration public Task<bool> LoadAsync(Uri uriSource) Parameters Type Name Description Uri uriSource A reference to the SVG source file. Returns Type Description Task < Boolean > A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false . OnAutoSizeChanged() This handles changes in the automatic resizing property of this control. Declaration protected virtual void OnAutoSizeChanged() OnHandleAlert(String) Declaration protected virtual void OnHandleAlert(string message) Parameters Type Name Description String message OnHandleError(String, Exception) Declaration protected virtual void OnHandleError(string message, Exception exception) Parameters Type Name Description String message Exception exception OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. Declaration protected override void OnInitialized(EventArgs e) Parameters Type Name Description EventArgs e Event data for the event. Overrides FrameworkElement.OnInitialized(EventArgs) OnSettingsChanged() This handles changes in the rendering settings of this control. Declaration protected virtual void OnSettingsChanged() Unload(Boolean, String) This clears the SvgViewbox of any drawn diagram and optionally displays a message. Declaration public void Unload(bool displayMessage = false, string message = \"\") Parameters Type Name Description Boolean displayMessage A value indicating whether to display a message after clearing the SVG rendered diagram. The value is false , not message is displayed. String message This specifies the message to be displayed after clearing the diagram. Setting this parameter to a non-empty text will override any message set in the MessageText . The default value is Empty . Events Alert This event occurs when an alert message needs to be displayed. Declaration public event EventHandler<SvgAlertArgs> Alert Event Type Type Description EventHandler < SvgAlertArgs > Remarks If this event is not handled, the control may display the alert message using the standard message dialog. If you do not want to display the alert messages, handle this event and set Handled property to true . Error This event occurs when an error message needs to be displayed. Declaration public event EventHandler<SvgErrorArgs> Error Event Type Type Description EventHandler < SvgErrorArgs > Remarks If this event is not handled, the control may display the error message using the standard message dialog. If you do not want to display the error messages, handle this event and set Handled property to true . Explicit Interface Implementations ISvgControl.HandleAlert(String) Declaration void ISvgControl.HandleAlert(string message) Parameters Type Name Description String message ISvgControl.HandleError(Exception) Declaration void ISvgControl.HandleError(Exception exception) Parameters Type Name Description Exception exception ISvgControl.HandleError(String) Declaration void ISvgControl.HandleError(string message) Parameters Type Name Description String message ISvgControl.HandleError(String, Exception) Declaration void ISvgControl.HandleError(string message, Exception exception) Parameters Type Name Description String message Exception exception ISvgControl.Height Declaration int ISvgControl.Height { get; } Returns Type Description Int32 ISvgControl.Width Declaration int ISvgControl.Width { get; } Returns Type Description Int32 Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient System.Windows.Markup.IAddChild ISvgControl System.Windows.Markup.IUriContext"
  },
  "api/SharpVectors.Converters.XmlXamlWriter.html": {
    "href": "api/SharpVectors.Converters.XmlXamlWriter.html",
    "title": "Class XmlXamlWriter | SharpVectors Documentation",
    "keywords": "Class XmlXamlWriter This is a customized XAML writer, which provides Extensible Application Markup Language (XAML) serialization of provided runtime objects into XAML. Inheritance Object XmlXamlWriter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Converters Assembly : SharpVectors.Converters.Wpf.dll Syntax public sealed class XmlXamlWriter Remarks This is designed to be used by the SVG to XAML converters, and may not be useful in general applications. https://social.msdn.microsoft.com/Forums/vstudio/en-US/c9225e3d-298d-4012-b6c4-663973c426ed/xaml-serialization-replacement?forum=wpf https://social.msdn.microsoft.com/Forums/vstudio/en-us/aa271e51-5e56-4e5c-995c-c91804ea55d1/saving-and-loading-of-interface-in-xaml-format-seems-to-have-problems?forum=wpf https://social.msdn.microsoft.com/Forums/vstudio/en-US/08aebbf1-0a61-4305-83b2-a0a37bb24002/xamlwriter-markupobject-how-to-?forum=wpf Constructors XmlXamlWriter() Initializes a new instance of the XmlXamlWriter class with the default settings. Declaration public XmlXamlWriter() XmlXamlWriter(WpfDrawingSettings) Initializes a new instance of the XmlXamlWriter class with the specified settings. Declaration public XmlXamlWriter(WpfDrawingSettings settings) Parameters Type Name Description WpfDrawingSettings settings An instance of WpfDrawingSettings specifying the rendering options. Properties IncludeNullExtension Gets or sets a value indicating whether to include a null markup extension in the output XAML. Declaration public bool IncludeNullExtension { get; set; } Property Value Type Description Boolean This is true if the null markup extension is included in the output XAML; otherwise, it is false . The default is false . IndentSpaces Gets or sets the number of character string to use when indenting. Declaration public int IndentSpaces { get; set; } Property Value Type Description Int32 A non-negative value (from 0 to 8) specifying the number of character string. The default is 2 or two spaces. NumberDecimalDigits Declaration public int NumberDecimalDigits { get; set; } Property Value Type Description Int32 Methods Convert(Object) Returns a Extensible Application Markup Language (XAML) string that serializes the provided object. Declaration public static string Convert(object obj) Parameters Type Name Description Object obj The element to be serialized. Typically, this is the root element of a page or application. Returns Type Description String Extensible Application Markup Language (XAML) string that can be written to a stream or file. The logical tree of all elements that fall under the provided obj element will be serialized. Save(Object) Returns a Extensible Application Markup Language (XAML) string that serializes the provided object. Declaration public string Save(object obj) Parameters Type Name Description Object obj The element to be serialized. Typically, this is the root element of a page or application. Returns Type Description String Extensible Application Markup Language (XAML) string that can be written to a stream or file. The logical tree of all elements that fall under the provided obj element will be serialized. Save(Object, Stream) Saves Extensible Application Markup Language (XAML) information into a provided stream to serialize the provided object. Declaration public void Save(object obj, Stream stream) Parameters Type Name Description Object obj The element to be serialized. Typically, this is the root element of a page or application. Stream stream Destination stream for the serialized XAML information. Save(Object, TextWriter) Saves Extensible Application Markup Language (XAML) information as the source for a provided text writer object. The output of the text writer can then be used to serialize the provided object. Declaration public void Save(object obj, TextWriter writer) Parameters Type Name Description Object obj The element to be serialized. Typically, this is the root element of a page or application. TextWriter writer TextWriter instance to use to write the serialized XAML information. Save(Object, XmlWriter) Saves Extensible Application Markup Language (XAML) information as the source for a provided XML writer object. The output of the XML writer can then be used to serialize the provided object. Declaration public void Save(object obj, XmlWriter xmlWriter) Parameters Type Name Description Object obj The element to be serialized. Typically, this is the root element of a page or application. XmlWriter xmlWriter Writer to use to write the serialized XAML information."
  },
  "api/SharpVectors.Dom.Attribute.html": {
    "href": "api/SharpVectors.Dom.Attribute.html",
    "title": "Class Attribute | SharpVectors Documentation",
    "keywords": "Class Attribute Summary description for Attribute. Inheritance Object XmlNode XmlAttribute Attribute Implements ICloneable IEnumerable IXPathNavigable IAttribute INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlAttribute.CloneNode(Boolean) XmlAttribute.InsertBefore(XmlNode, XmlNode) XmlAttribute.InsertAfter(XmlNode, XmlNode) XmlAttribute.ReplaceChild(XmlNode, XmlNode) XmlAttribute.RemoveChild(XmlNode) XmlAttribute.PrependChild(XmlNode) XmlAttribute.AppendChild(XmlNode) XmlAttribute.WriteTo(XmlWriter) XmlAttribute.WriteContentTo(XmlWriter) XmlAttribute.ParentNode XmlAttribute.Name XmlAttribute.LocalName XmlAttribute.NamespaceURI XmlAttribute.Prefix XmlAttribute.NodeType XmlAttribute.OwnerDocument XmlAttribute.Value XmlAttribute.SchemaInfo XmlAttribute.InnerText XmlAttribute.Specified XmlAttribute.OwnerElement XmlAttribute.InnerXml XmlAttribute.BaseURI XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class Attribute : XmlAttribute, ICloneable, IEnumerable, IXPathNavigable, IAttribute, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors Attribute(String, String, String, Document) Declaration public Attribute(string prefix, string localName, string namespaceUri, Document document) Parameters Type Name Description String prefix String localName String namespaceUri Document document Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IAttribute INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.CDataSection.html": {
    "href": "api/SharpVectors.Dom.CDataSection.html",
    "title": "Class CDataSection | SharpVectors Documentation",
    "keywords": "Class CDataSection Summary description for CDataSection. Inheritance Object XmlNode XmlLinkedNode XmlCharacterData XmlCDataSection CDataSection Implements ICloneable IEnumerable IXPathNavigable ICDataSection ICharacterData INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlCDataSection.CloneNode(Boolean) XmlCDataSection.WriteTo(XmlWriter) XmlCDataSection.WriteContentTo(XmlWriter) XmlCDataSection.Name XmlCDataSection.LocalName XmlCDataSection.NodeType XmlCDataSection.ParentNode XmlCharacterData.Substring(Int32, Int32) XmlCharacterData.AppendData(String) XmlCharacterData.InsertData(Int32, String) XmlCharacterData.DeleteData(Int32, Int32) XmlCharacterData.ReplaceData(Int32, Int32, String) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class CDataSection : XmlCDataSection, ICloneable, IEnumerable, IXPathNavigable, ICDataSection, ICharacterData, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors CDataSection(String, Document) Declaration public CDataSection(string data, Document document) Parameters Type Name Description String data Document document Properties Value Declaration public override string Value { get; set; } Property Value Type Description String Overrides XmlCharacterData.Value Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable ICDataSection ICharacterData INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.Comment.html": {
    "href": "api/SharpVectors.Dom.Comment.html",
    "title": "Class Comment | SharpVectors Documentation",
    "keywords": "Class Comment Summary description for Comment. Inheritance Object XmlNode XmlLinkedNode XmlCharacterData XmlComment Comment Implements ICloneable IEnumerable IXPathNavigable IComment ICharacterData INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlComment.CloneNode(Boolean) XmlComment.WriteTo(XmlWriter) XmlComment.WriteContentTo(XmlWriter) XmlComment.Name XmlComment.LocalName XmlComment.NodeType XmlCharacterData.Substring(Int32, Int32) XmlCharacterData.AppendData(String) XmlCharacterData.InsertData(Int32, String) XmlCharacterData.DeleteData(Int32, Int32) XmlCharacterData.ReplaceData(Int32, Int32, String) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class Comment : XmlComment, ICloneable, IEnumerable, IXPathNavigable, IComment, ICharacterData, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors Comment(String, Document) Declaration public Comment(string comment, Document document) Parameters Type Name Description String comment Document document Properties Value Declaration public override string Value { get; set; } Property Value Type Description String Overrides XmlCharacterData.Value Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IComment ICharacterData INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.html",
    "title": "Class CssAbsPrimitiveLengthValue | SharpVectors Documentation",
    "keywords": "Class CssAbsPrimitiveLengthValue Inheritance Object CssValue CssPrimitiveValue CssPrimitiveLengthValue CssAbsPrimitiveLengthValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveLengthValue.Dpi CssPrimitiveLengthValue.CmPerIn CssPrimitiveLengthValue.CssText CssPrimitiveLengthValue.GetAbsoluteValue(String, XmlElement) CssPrimitiveLengthValue.OnSetCssText(String) CssPrimitiveValue._floatValue CssPrimitiveValue._colorValue CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, Boolean) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, Double) CssPrimitiveValue.SetFloatValue(String) CssPrimitiveValue.SetFloatValue(Double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, String) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.SetPrimitiveType(CssPrimitiveType) CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(String, Boolean) CssValue.CssValueType CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssAbsPrimitiveLengthValue : CssPrimitiveLengthValue, ICssPrimitiveValue, ICssValue Constructors CssAbsPrimitiveLengthValue(CssPrimitiveValue, String, XmlElement) Declaration public CssAbsPrimitiveLengthValue(CssPrimitiveValue cssValue, string propertyName, XmlElement element) Parameters Type Name Description CssPrimitiveValue cssValue String propertyName XmlElement element Properties CssValue Declaration public CssPrimitiveValue CssValue { get; } Property Value Type Description CssPrimitiveValue IsAbsolute Declaration public override bool IsAbsolute { get; } Property Value Type Description Boolean Overrides CssValue.IsAbsolute PropertyName Declaration public string PropertyName { get; } Property Value Type Description String ReadOnly Declaration public override bool ReadOnly { get; } Property Value Type Description Boolean Overrides CssValue.ReadOnly Methods GetFloatValue(CssPrimitiveType) Declaration public override double GetFloatValue(CssPrimitiveType unitType) Parameters Type Name Description CssPrimitiveType unitType Returns Type Description Double Overrides CssPrimitiveLengthValue.GetFloatValue(CssPrimitiveType) Implements ICssPrimitiveValue ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.html",
    "title": "Class CssAbsPrimitiveValue | SharpVectors Documentation",
    "keywords": "Class CssAbsPrimitiveValue Inheritance Object CssValue CssPrimitiveValue CssAbsPrimitiveValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue._floatValue CssPrimitiveValue._colorValue CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, Boolean) CssPrimitiveValue.GetAbsoluteValue(String, XmlElement) CssPrimitiveValue.OnSetCssText(String) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, Double) CssPrimitiveValue.SetFloatValue(String) CssPrimitiveValue.SetFloatValue(Double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, String) CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.SetPrimitiveType(CssPrimitiveType) CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssAbsPrimitiveValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Constructors CssAbsPrimitiveValue(CssPrimitiveValue, String, XmlElement) Declaration public CssAbsPrimitiveValue(CssPrimitiveValue cssValue, string propertyName, XmlElement element) Parameters Type Name Description CssPrimitiveValue cssValue String propertyName XmlElement element Properties CssText Declaration public override string CssText { get; } Property Value Type Description String Overrides CssPrimitiveValue.CssText CssValue Declaration public CssPrimitiveValue CssValue { get; } Property Value Type Description CssPrimitiveValue IsAbsolute Declaration public override bool IsAbsolute { get; } Property Value Type Description Boolean Overrides CssValue.IsAbsolute PrimitiveType Declaration public override CssPrimitiveType PrimitiveType { get; } Property Value Type Description CssPrimitiveType Overrides CssPrimitiveValue.PrimitiveType Methods GetFloatValue(CssPrimitiveType) Declaration public override double GetFloatValue(CssPrimitiveType unitType) Parameters Type Name Description CssPrimitiveType unitType Returns Type Description Double Overrides CssPrimitiveValue.GetFloatValue(CssPrimitiveType) GetRectValue() Declaration public override ICssRect GetRectValue() Returns Type Description ICssRect Overrides CssPrimitiveValue.GetRectValue() GetRgbColorValue() Declaration public override ICssColor GetRgbColorValue() Returns Type Description ICssColor Overrides CssPrimitiveValue.GetRgbColorValue() GetStringValue() Declaration public override string GetStringValue() Returns Type Description String Overrides CssPrimitiveValue.GetStringValue() Implements ICssPrimitiveValue ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssAbsValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsValue.html",
    "title": "Class CssAbsValue | SharpVectors Documentation",
    "keywords": "Class CssAbsValue Inheritance Object CssValue CssAbsValue Implements ICssValue Inherited Members CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetAbsoluteValue(String, XmlElement) CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssAbsValue : CssValue, ICssValue Constructors CssAbsValue(CssValue, String, XmlElement) Declaration public CssAbsValue(CssValue cssValue, string propertyName, XmlElement element) Parameters Type Name Description CssValue cssValue String propertyName XmlElement element Properties CssText Declaration public override string CssText { get; } Property Value Type Description String Overrides CssValue.CssText CssValueType Declaration public override CssValueType CssValueType { get; } Property Value Type Description CssValueType Overrides CssValue.CssValueType IsAbsolute Declaration public override bool IsAbsolute { get; } Property Value Type Description Boolean Overrides CssValue.IsAbsolute Implements ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssChangeHandler.html": {
    "href": "api/SharpVectors.Dom.Css.CssChangeHandler.html",
    "title": "Delegate CssChangeHandler | SharpVectors Documentation",
    "keywords": "Delegate CssChangeHandler Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public delegate void CssChangeHandler();"
  },
  "api/SharpVectors.Dom.Css.CssCharsetRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssCharsetRule.html",
    "title": "Class CssCharsetRule | SharpVectors Documentation",
    "keywords": "Class CssCharsetRule The CSSCharsetRule interface represents a @charset rule in a CSS style sheet. The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no CSSCharsetRule is created. The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet. The value of the @charset rule (and therefore of the CSSCharsetRule) may not correspond to the encoding the document actually came in; character encoding information e.g. in an HTTP header, has priority (see CSS document representation) but this is not reflected in the CSSCharsetRule. Inheritance Object CssRule CssCharsetRule Implements ICssCharsetRule ICssRule Inherited Members CssRule._origin CssRule._isReadOnly CssRule.GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssCharsetRule : CssRule, ICssCharsetRule, ICssRule Properties Encoding The encoding information used in this @charset rule Declaration public string Encoding { get; set; } Property Value Type Description String Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Declaration public override CssRuleType Type { get; } Property Value Type Description CssRuleType Overrides CssRule.Type Implements ICssCharsetRule ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssCollectedProperty.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedProperty.html",
    "title": "Class CssCollectedProperty | SharpVectors Documentation",
    "keywords": "Class CssCollectedProperty Used internally to store collected properties. Inheritance Object CssCollectedProperty Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssCollectedProperty Constructors CssCollectedProperty(String, Int32, CssValue, CssStyleSheetType, String) Declaration public CssCollectedProperty(string name, int specificity, CssValue cssValue, CssStyleSheetType origin, string priority) Parameters Type Name Description String name Int32 specificity CssValue cssValue CssStyleSheetType origin String priority Properties CssValue Declaration public CssValue CssValue { get; set; } Property Value Type Description CssValue Name Declaration public string Name { get; set; } Property Value Type Description String Origin Declaration public CssStyleSheetType Origin { get; set; } Property Value Type Description CssStyleSheetType Priority Declaration public string Priority { get; set; } Property Value Type Description String Specificity Declaration public int Specificity { get; set; } Property Value Type Description Int32"
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.html",
    "title": "Class CssCollectedStyleDeclaration | SharpVectors Documentation",
    "keywords": "Class CssCollectedStyleDeclaration Used internally for collection of styles for a specific element Inheritance Object CssStyleDeclaration CssCollectedStyleDeclaration Implements ICssStyleDeclaration Inherited Members CssStyleDeclaration.ReadOnly CssStyleDeclaration.Origin CssStyleDeclaration.GetStylesForElement(CssCollectedStyleDeclaration, Int32) CssStyleDeclaration.GetValidUrlFromCSS(String, String) CssStyleDeclaration.GetValidUrlsFromCSS(String) CssStyleDeclaration.SetProperty(String, String, String) CssStyleDeclaration.SetPropertyValue(String, String) CssStyleDeclaration.RemoveProperty(String) CssStyleDeclaration.GetPropertyValue(String[]) CssStyleDeclaration.ParentRule Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssCollectedStyleDeclaration : CssStyleDeclaration, ICssStyleDeclaration Constructors CssCollectedStyleDeclaration(XmlElement) Declaration public CssCollectedStyleDeclaration(XmlElement elm) Parameters Type Name Description XmlElement elm Properties CssText The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties. Declaration public override string CssText { get; set; } Property Value Type Description String Overrides CssStyleDeclaration.CssText Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or a property is readonly. Item[UInt64] Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block. The name of the property at this ordinal position. The empty string if no property exists at this position. Declaration public override string this[ulong index] { get; } Parameters Type Name Description UInt64 index Property Value Type Description String Overrides CssStyleDeclaration.Item[UInt64] Length The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive. Declaration public override ulong Length { get; } Property Value Type Description UInt64 Overrides CssStyleDeclaration.Length Methods CollectProperty(String, Int32, CssValue, CssStyleSheetType, String) Declaration public void CollectProperty(string name, int specificity, CssValue cssValue, CssStyleSheetType origin, string priority) Parameters Type Name Description String name Int32 specificity CssValue cssValue CssStyleSheetType origin String priority GetPropertyCssValue(String) Declaration public override ICssValue GetPropertyCssValue(string propertyName) Parameters Type Name Description String propertyName Returns Type Description ICssValue Overrides CssStyleDeclaration.GetPropertyCssValue(String) GetPropertyOrigin(String) Returns the origin type of the collected property Declaration public CssStyleSheetType GetPropertyOrigin(string propertyName) Parameters Type Name Description String propertyName The name of the property Returns Type Description CssStyleSheetType The origin type GetPropertyPriority(String) Used to retrieve the priority of a CSS property (e.g. the \"important\" qualifier) if the property has been explicitly set in this declaration block. Declaration public override string GetPropertyPriority(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description String A string representing the priority (e.g. \"important\") if one exists. The empty string if none exists. Overrides CssStyleDeclaration.GetPropertyPriority(String) GetPropertyValue(String) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. Declaration public override string GetPropertyValue(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description String Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set. Overrides CssStyleDeclaration.GetPropertyValue(String) Implements ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.CssColor.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.html",
    "title": "Class CssColor | SharpVectors Documentation",
    "keywords": "Class CssColor The RGB-Color interface is used to represent any RGB color value. Inheritance Object CssColor Implements ICssColor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssColor : ICssColor Remarks This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property. A specified RGB color is not clipped (even if the number is outside the range 0-255 or 0%-100%). A computed RGB color is clipped depending on the device. Even if a style sheet can only contain an integer for a color value, the internal storage of this integer is a float, and this can be used as a float in the specified or the computed style. A color percentage value can always be converted to a number and vice versa. Constructors CssColor(Int32, Int32, Int32) Constructs a RgbColor based on the GDI color Declaration public CssColor(int red, int green, int blue) Parameters Type Name Description Int32 red Int32 green Int32 blue CssColor(Int32, Int32, Int32, Int32) Constructs a RgbColor based on the GDI color Declaration public CssColor(int red, int green, int blue, int alpha) Parameters Type Name Description Int32 red Int32 green Int32 blue Int32 alpha CssColor(String) Parses a constructs a RgbColor Declaration public CssColor(string str) Parameters Type Name Description String str String to parse to find the color Properties Alpha Declaration public ICssPrimitiveValue Alpha { get; } Property Value Type Description ICssPrimitiveValue Blue This attribute is used for the blue value of the RGB color Declaration public ICssPrimitiveValue Blue { get; } Property Value Type Description ICssPrimitiveValue CssText Declaration public string CssText { get; } Property Value Type Description String Green This attribute is used for the green value of the RGB color. Declaration public ICssPrimitiveValue Green { get; } Property Value Type Description ICssPrimitiveValue HasAlpha Declaration public bool HasAlpha { get; } Property Value Type Description Boolean IsSystemColor Declaration public bool IsSystemColor { get; } Property Value Type Description Boolean IsVarColor Gets a value which indicates whether the color is defined by custom properties. Declaration public bool IsVarColor { get; } Property Value Type Description Boolean Name Declaration public string Name { get; } Property Value Type Description String Red This attribute is used for the red value of the RGB color Declaration public ICssPrimitiveValue Red { get; } Property Value Type Description ICssPrimitiveValue Implements ICssColor"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.html",
    "title": "Class CssFontFaceRule | SharpVectors Documentation",
    "keywords": "Class CssFontFaceRule The ICssFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions. Inheritance Object CssRule CssFontFaceRule Implements ICssFontFaceRule ICssRule Inherited Members CssRule._origin CssRule._isReadOnly CssRule.GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssFontFaceRule : CssRule, ICssFontFaceRule, ICssRule Properties CssText The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value. Declaration public override string CssText { get; set; } Property Value Type Description String Overrides CssRule.CssText EmbeddedData Declaration public string EmbeddedData { get; } Property Value Type Description String EmbeddedEncoding Declaration public string EmbeddedEncoding { get; } Property Value Type Description String EmbeddedMimeType Declaration public string EmbeddedMimeType { get; } Property Value Type Description String FeatureSettings Declaration public string FeatureSettings { get; set; } Property Value Type Description String FontFamily Declaration public string FontFamily { get; set; } Property Value Type Description String FontStyle Declaration public string FontStyle { get; set; } Property Value Type Description String FontUrl Declaration public string FontUrl { get; } Property Value Type Description String FontVariant Declaration public string FontVariant { get; set; } Property Value Type Description String FontWeight Declaration public string FontWeight { get; set; } Property Value Type Description String IsEmbedded Declaration public bool IsEmbedded { get; } Property Value Type Description Boolean Src Declaration public string Src { get; set; } Property Value Type Description String Stretch Declaration public string Stretch { get; set; } Property Value Type Description String Style The declaration-block of this rule. Declaration public ICssStyleDeclaration Style { get; } Property Value Type Description ICssStyleDeclaration Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Declaration public override CssRuleType Type { get; } Property Value Type Description CssRuleType Overrides CssRule.Type UnicodeRange Declaration public string UnicodeRange { get; set; } Property Value Type Description String Implements ICssFontFaceRule ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssImportRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssImportRule.html",
    "title": "Class CssImportRule | SharpVectors Documentation",
    "keywords": "Class CssImportRule The CSSImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets. Inheritance Object CssRule CssImportRule Implements ICssImportRule ICssRule Inherited Members CssRule._origin CssRule._isReadOnly CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssImportRule : CssRule, ICssImportRule, ICssRule Properties Href The location of the style sheet to be imported. The attribute will not contain the \"url(...)\" specifier around the URI Declaration public string Href { get; } Property Value Type Description String Media A list of media types for which this style sheet may be used. Declaration public IMediaList Media { get; } Property Value Type Description IMediaList StyleSheet The style sheet referred to by this rule, if it has been loaded. The value of this attribute is null if the style sheet has not yet been loaded or if it will not be loaded (e.g. if the style sheet is for a media type not supported by the user agent). Declaration public ICssStyleSheet StyleSheet { get; } Property Value Type Description ICssStyleSheet Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Declaration public override CssRuleType Type { get; } Property Value Type Description CssRuleType Overrides CssRule.Type Methods GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order Declaration protected override void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters Type Name Description XmlElement elt The element to find styles for String pseudoElt The pseudo-element to find styles for MediaList ml The medialist that the document is using CssCollectedStyleDeclaration csd A CssStyleDeclaration that holds the collected styles Overrides CssRule.GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) Implements ICssImportRule ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssMediaRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssMediaRule.html",
    "title": "Class CssMediaRule | SharpVectors Documentation",
    "keywords": "Class CssMediaRule The CSSMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types. Inheritance Object CssRule CssMediaRule Implements ICssMediaRule ICssRule Inherited Members CssRule._origin CssRule._isReadOnly CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public class CssMediaRule : CssRule, ICssMediaRule, ICssRule Constructors CssMediaRule(String, Object, Boolean, IList<String>, CssStyleSheetType) Declaration public CssMediaRule(string cssText, object parent, bool readOnly, IList<string> replacedStrings, CssStyleSheetType origin) Parameters Type Name Description String cssText Object parent Boolean readOnly IList < String > replacedStrings CssStyleSheetType origin Properties CssRules A list of all CSS rules contained within the media block. Declaration public ICssRuleList CssRules { get; } Property Value Type Description ICssRuleList Media A list of media types for this rule Declaration public IMediaList Media { get; } Property Value Type Description IMediaList Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Declaration public override CssRuleType Type { get; } Property Value Type Description CssRuleType Overrides CssRule.Type Methods DeleteRule(UInt64) Used to delete a rule from the media block. Declaration public void DeleteRule(ulong index) Parameters Type Name Description UInt64 index The index within the media block's rule collection of the rule to remove. Exceptions Type Condition DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the media rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is readonly. GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order Declaration protected override void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters Type Name Description XmlElement elt The element to find styles for String pseudoElt The pseudo-element to find styles for MediaList ml The medialist that the document is using CssCollectedStyleDeclaration csd A CssStyleDeclaration that holds the collected styles Overrides CssRule.GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) InsertRule(String, UInt64) Used to insert a new rule into the media block Declaration public ulong InsertRule(string rule, ulong index) Parameters Type Name Description String rule The parsable text representing the rule. For rule sets this contains both the selector and the style declaration. For at-rules, this specifies both the at-identifier and the rule content. UInt64 index The index within the media block's rule collection of the rule before which to insert the specified rule. If the specified index is equal to the length of the media blocks's rule collection, the rule will be added to the end of the media block. Returns Type Description UInt64 The index within the media block's rule collection of the newly inserted rule. Exceptions Type Condition DomException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the specified index, e.g., if an @import rule is inserted after a standard rule set or other at-rule. DomException INDEX_SIZE_ERR: Raised if the specified index is not a valid insertion point. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is readonly DomException SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable Implements ICssMediaRule ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssNumber.html": {
    "href": "api/SharpVectors.Dom.Css.CssNumber.html",
    "title": "Class CssNumber | SharpVectors Documentation",
    "keywords": "Class CssNumber Inheritance Object CssNumber Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public static class CssNumber Properties Format Declaration public static NumberFormatInfo Format { get; } Property Value Type Description NumberFormatInfo"
  },
  "api/SharpVectors.Dom.Css.CssPageRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssPageRule.html",
    "title": "Class CssPageRule | SharpVectors Documentation",
    "keywords": "Class CssPageRule The CSSPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media. Inheritance Object CssRule CssPageRule Implements ICssPageRule ICssRule Inherited Members CssRule._origin CssRule._isReadOnly CssRule.GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssPageRule : CssRule, ICssPageRule, ICssRule Properties SelectorText The parsable textual representation of the page selector for the rule. Declaration public string SelectorText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly. Style The declaration-block of this rule. Declaration public ICssStyleDeclaration Style { get; } Property Value Type Description ICssStyleDeclaration Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Declaration public override CssRuleType Type { get; } Property Value Type Description CssRuleType Overrides CssRule.Type Implements ICssPageRule ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.html",
    "title": "Class CssPrimitiveAngleValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveAngleValue Inheritance Object CssValue CssPrimitiveValue CssPrimitiveAngleValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue._floatValue CssPrimitiveValue._colorValue CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, Boolean) CssPrimitiveValue.GetAbsoluteValue(String, XmlElement) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, Double) CssPrimitiveValue.SetFloatValue(String) CssPrimitiveValue.SetFloatValue(Double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, String) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.SetPrimitiveType(CssPrimitiveType) CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssPrimitiveAngleValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Constructors CssPrimitiveAngleValue(Double, String, Boolean) Declaration public CssPrimitiveAngleValue(double number, string unit, bool readOnly) Parameters Type Name Description Double number String unit Boolean readOnly CssPrimitiveAngleValue(String, Boolean) Declaration public CssPrimitiveAngleValue(string cssText, bool readOnly) Parameters Type Name Description String cssText Boolean readOnly CssPrimitiveAngleValue(String, String, Boolean) Declaration public CssPrimitiveAngleValue(string number, string unit, bool readOnly) Parameters Type Name Description String number String unit Boolean readOnly Properties CssText Declaration public override string CssText { get; } Property Value Type Description String Overrides CssPrimitiveValue.CssText Methods GetFloatValue(CssPrimitiveType) Declaration public override double GetFloatValue(CssPrimitiveType unitType) Parameters Type Name Description CssPrimitiveType unitType Returns Type Description Double Overrides CssPrimitiveValue.GetFloatValue(CssPrimitiveType) OnSetCssText(String) Declaration protected override void OnSetCssText(string cssText) Parameters Type Name Description String cssText Overrides CssPrimitiveValue.OnSetCssText(String) Implements ICssPrimitiveValue ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.html",
    "title": "Class CssPrimitiveColorValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveColorValue Inheritance Object CssValue CssPrimitiveValue CssPrimitiveColorValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue._floatValue CssPrimitiveValue._colorValue CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, Boolean) CssPrimitiveValue.GetAbsoluteValue(String, XmlElement) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, Double) CssPrimitiveValue.SetFloatValue(String) CssPrimitiveValue.SetFloatValue(Double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, String) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.SetPrimitiveType(CssPrimitiveType) CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssPrimitiveColorValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Constructors CssPrimitiveColorValue(Int32, Boolean) Declaration public CssPrimitiveColorValue(int color, bool readOnly) Parameters Type Name Description Int32 color Boolean readOnly CssPrimitiveColorValue(String, Boolean) Declaration public CssPrimitiveColorValue(string cssText, bool readOnly) Parameters Type Name Description String cssText Boolean readOnly Properties CssText Declaration public override string CssText { get; } Property Value Type Description String Overrides CssPrimitiveValue.CssText Methods GetFloatValue(CssPrimitiveType) Declaration public override double GetFloatValue(CssPrimitiveType unitType) Parameters Type Name Description CssPrimitiveType unitType Returns Type Description Double Overrides CssPrimitiveValue.GetFloatValue(CssPrimitiveType) OnSetCssText(String) Declaration protected override void OnSetCssText(string cssText) Parameters Type Name Description String cssText Overrides CssPrimitiveValue.OnSetCssText(String) Implements ICssPrimitiveValue ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.html",
    "title": "Class CssPrimitiveLengthValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveLengthValue Inheritance Object CssValue CssPrimitiveValue CssPrimitiveLengthValue CssAbsPrimitiveLengthValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue._floatValue CssPrimitiveValue._colorValue CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, Boolean) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, Double) CssPrimitiveValue.SetFloatValue(String) CssPrimitiveValue.SetFloatValue(Double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, String) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.SetPrimitiveType(CssPrimitiveType) CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public class CssPrimitiveLengthValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Constructors CssPrimitiveLengthValue() Declaration protected CssPrimitiveLengthValue() CssPrimitiveLengthValue(Double, String, Boolean) Declaration public CssPrimitiveLengthValue(double number, string unit, bool readOnly) Parameters Type Name Description Double number String unit Boolean readOnly CssPrimitiveLengthValue(String, Boolean) Declaration public CssPrimitiveLengthValue(string cssText, bool readOnly) Parameters Type Name Description String cssText Boolean readOnly CssPrimitiveLengthValue(String, String, Boolean) Declaration public CssPrimitiveLengthValue(string number, string unit, bool readOnly) Parameters Type Name Description String number String unit Boolean readOnly Fields CmPerIn Declaration protected const double CmPerIn = 2.54 Field Value Type Description Double Dpi Declaration protected const double Dpi = 96 Field Value Type Description Double Properties CssText Declaration public override string CssText { get; } Property Value Type Description String Overrides CssPrimitiveValue.CssText Methods GetAbsoluteValue(String, XmlElement) Declaration public override CssValue GetAbsoluteValue(string propertyName, XmlElement elm) Parameters Type Name Description String propertyName XmlElement elm Returns Type Description CssValue Overrides CssPrimitiveValue.GetAbsoluteValue(String, XmlElement) GetFloatValue(CssPrimitiveType) Declaration public override double GetFloatValue(CssPrimitiveType unitType) Parameters Type Name Description CssPrimitiveType unitType Returns Type Description Double Overrides CssPrimitiveValue.GetFloatValue(CssPrimitiveType) OnSetCssText(String) Declaration protected override void OnSetCssText(string cssText) Parameters Type Name Description String cssText Overrides CssPrimitiveValue.OnSetCssText(String) Implements ICssPrimitiveValue ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.html",
    "title": "Class CssPrimitiveRgbValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveRgbValue Inheritance Object CssValue CssPrimitiveValue CssPrimitiveRgbValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue._floatValue CssPrimitiveValue._colorValue CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, Boolean) CssPrimitiveValue.GetAbsoluteValue(String, XmlElement) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, Double) CssPrimitiveValue.SetFloatValue(String) CssPrimitiveValue.SetFloatValue(Double) CssPrimitiveValue.GetFloatValue(CssPrimitiveType) CssPrimitiveValue.SetStringValue(CssPrimitiveType, String) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.SetPrimitiveType(CssPrimitiveType) CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssPrimitiveRgbValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Constructors CssPrimitiveRgbValue(String, Boolean) Declaration public CssPrimitiveRgbValue(string cssText, bool readOnly) Parameters Type Name Description String cssText Boolean readOnly Properties CssText Declaration public override string CssText { get; set; } Property Value Type Description String Overrides CssPrimitiveValue.CssText Methods IsColorName(String) Declaration public static bool IsColorName(string cssText) Parameters Type Name Description String cssText Returns Type Description Boolean OnSetCssText(String) Declaration protected override void OnSetCssText(string cssText) Parameters Type Name Description String cssText Overrides CssPrimitiveValue.OnSetCssText(String) Implements ICssPrimitiveValue ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveType.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveType.html",
    "title": "Enum CssPrimitiveType | SharpVectors Documentation",
    "keywords": "Enum CssPrimitiveType The CssPrimitiveType enumeration contains the list of possible primitive value types in CSS. This class is an extension of the CSS spec. The CSS spec has a list of constants instead of an enum class. Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public enum CssPrimitiveType Fields Attr Cm Counter Deg Dimension Ems Exs Grad Hz Ident In KHz Mm Ms Number Pc Percentage Pt Px Rad Rect RgbColor S String Unknown Uri Vars Name Description Attr The value is a attribute function. The value can be obtained by using the getStringValue method. Cm The value is a length (cm). The value can be obtained by using the getFloatValue method. Counter The value is a counter or counters function. The value can be obtained by using the getCounterValue method. Deg The value is an angle (deg). The value can be obtained by using the getFloatValue method. Dimension The value is a number with an unknown dimension. The value can be obtained by using the getFloatValue method. Ems The value is a length (ems). The value can be obtained by using the getFloatValue method. Exs The value is a length (exs). The value can be obtained by using the getFloatValue method. Grad The value is an angle (grad). The value can be obtained by using the getFloatValue method. Hz The value is a frequency (Hz). The value can be obtained by using the getFloatValue method. Ident The value is an identifier. The value can be obtained by using the getStringValue method. In The value is a length (in). The value can be obtained by using the getFloatValue method. KHz The value is a frequency (kHz). The value can be obtained by using the getFloatValue method. Mm The value is a length (mm). The value can be obtained by using the getFloatValue method. Ms The value is a time (ms). The value can be obtained by using the getFloatValue method. Number The value is a simple number. The value can be obtained by using the getFloatValue method. Pc The value is a length (pc). The value can be obtained by using the getFloatValue method. Percentage The value is a percentage. The value can be obtained by using the getFloatValue method. Pt The value is a length (pt). The value can be obtained by using the getFloatValue method. Px The value is a length (px). The value can be obtained by using the getFloatValue method. Rad The value is an angle (rad). The value can be obtained by using the getFloatValue method. Rect The value is a rect function. The value can be obtained by using the getRectValue method. RgbColor The value is a RGB color. The value can be obtained by using the getRGBColorValue method. S The value is a time (s). The value can be obtained by using the getFloatValue method. String The value is a STRING. The value can be obtained by using the getStringValue method. Unknown The value is not a recognized CSS2 value. The value can only be obtained by using the cssText attribute. Uri The value is a URI. The value can be obtained by using the getStringValue method. Vars The value is a var() or custom properties."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.html",
    "title": "Class CssPrimitiveValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveValue This implements the ICssPrimitiveValue interface which represents a single CSS value. Inheritance Object CssValue CssPrimitiveValue CssAbsPrimitiveValue CssPrimitiveAngleValue CssPrimitiveColorValue CssPrimitiveLengthValue CssPrimitiveRgbValue CssPrimitiveVarsValue Implements ICssPrimitiveValue ICssValue Inherited Members CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public class CssPrimitiveValue : CssValue, ICssPrimitiveValue, ICssValue Remarks This interface may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the getPropertyCSSValue method of the CSSStyleDeclaration interface. A CSSPrimitiveValue object only occurs in a context of a CSS property. Conversions are allowed between absolute values (from millimeters to centimeters, from degrees to radians, and so on) but not between relative values. (For example, a pixel value cannot be converted to a centimeter value.) Percentage values can't be converted since they are relative to the parent value (or another property value). There is one exception for color percentage values: since a color percentage value is relative to the range 0-255, a color percentage value can be converted to a number; (see also the RGBColor interface). Constructors CssPrimitiveValue() Only for internal use Declaration protected CssPrimitiveValue() CssPrimitiveValue(String, Boolean) Declaration protected CssPrimitiveValue(string cssText, bool readOnly) Parameters Type Name Description String cssText Boolean readOnly Fields _colorValue Declaration protected CssColor _colorValue Field Value Type Description CssColor _floatValue Declaration protected double _floatValue Field Value Type Description Double Properties CssText Declaration public override string CssText { get; set; } Property Value Type Description String Overrides CssValue.CssText PrimitiveType The type of the value as defined by the constants specified above. Declaration public virtual CssPrimitiveType PrimitiveType { get; protected set; } Property Value Type Description CssPrimitiveType PrimitiveTypeAsString Declaration public string PrimitiveTypeAsString { get; } Property Value Type Description String Methods Create(Match, Boolean) Declaration public static CssPrimitiveValue Create(Match match, bool readOnly) Parameters Type Name Description Match match Boolean readOnly Returns Type Description CssPrimitiveValue GetAbsoluteValue(String, XmlElement) Declaration public override CssValue GetAbsoluteValue(string propertyName, XmlElement elm) Parameters Type Name Description String propertyName XmlElement elm Returns Type Description CssValue Overrides CssValue.GetAbsoluteValue(String, XmlElement) GetCounterValue() This method is used to get the Counter value. If this CSS value doesn't contain a counter value, a DomException is raised. Modification to the corresponding style property can be achieved using the Counter interface Declaration public virtual ICssCounter GetCounterValue() Returns Type Description ICssCounter The Counter value. Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Counter value (e.g. this is not CSS_COUNTER). GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised Declaration public virtual double GetFloatValue(CssPrimitiveType unitType) Parameters Type Name Description CssPrimitiveType unitType A unit code to get the float value. The unit code can only be a float unit type (i.e. CSS_NUMBER, CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION). Returns Type Description Double The float value in the specified unit. Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value. GetRectValue() This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a DomException is raised. Modification to the corresponding style property can be achieved using the Rect interface. Declaration public virtual ICssRect GetRectValue() Returns Type Description ICssRect The Rect value. Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a rect value. GetRgbColorValue() This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DomException is raised. Modification to the corresponding style property can be achieved using the RGBColor interface. Declaration public virtual ICssColor GetRgbColorValue() Returns Type Description ICssColor the RGB color value. Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a rgb value. GetStringValue() This method is used to get the string value. If the CSS value doesn't contain a string value, a DomException is raised. Note: Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string. Declaration public virtual string GetStringValue() Returns Type Description String The string value in the current unit. The current primitiveType can only be a string unit type (i.e. CSS_STRING, CSS_URI, CSS_IDENT and CSS_ATTR). Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value. OnSetCssText(String) Declaration protected virtual void OnSetCssText(string cssText) Parameters Type Name Description String cssText SetFloatValue(CssPrimitiveType, Double) A method to set the float value with a specified unit. If the property attached with this value can not accept the specified unit or the float value, the value will be unchanged and a DomException will be raised. Declaration public virtual void SetFloatValue(CssPrimitiveType unitType, double floatValue) Parameters Type Name Description CssPrimitiveType unitType A unit code as defined above. The unit code can only be a float unit type (i.e. CSS_NUMBER, CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION). Double floatValue The new float value. Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly. SetFloatValue(Double) Declaration protected void SetFloatValue(double floatValue) Parameters Type Name Description Double floatValue SetFloatValue(String) Declaration protected void SetFloatValue(string floatValue) Parameters Type Name Description String floatValue SetPrimitiveType(CssPrimitiveType) Declaration protected void SetPrimitiveType(CssPrimitiveType type) Parameters Type Name Description CssPrimitiveType type SetStringValue(CssPrimitiveType, String) A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a DomException will be raised. Declaration public virtual void SetStringValue(CssPrimitiveType stringType, string stringValue) Parameters Type Name Description CssPrimitiveType stringType A string code as defined above. The string code can only be a string unit type (i.e. CSS_STRING, CSS_URI, CSS_IDENT, and CSS_ATTR). String stringValue The new string value Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly. Implements ICssPrimitiveValue ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.html",
    "title": "Class CssPrimitiveVarsValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveVarsValue Inheritance Object CssValue CssPrimitiveValue CssPrimitiveVarsValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue._floatValue CssPrimitiveValue._colorValue CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.CssText CssPrimitiveValue.Create(Match, Boolean) CssPrimitiveValue.GetAbsoluteValue(String, XmlElement) CssPrimitiveValue.OnSetCssText(String) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, Double) CssPrimitiveValue.SetFloatValue(String) CssPrimitiveValue.SetFloatValue(Double) CssPrimitiveValue.GetFloatValue(CssPrimitiveType) CssPrimitiveValue.SetStringValue(CssPrimitiveType, String) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.SetPrimitiveType(CssPrimitiveType) CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssPrimitiveVarsValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Constructors CssPrimitiveVarsValue(String, Boolean) Declaration public CssPrimitiveVarsValue(string cssText, bool readOnly) Parameters Type Name Description String cssText Boolean readOnly Properties VarName Declaration public string VarName { get; set; } Property Value Type Description String VarValue Declaration public string VarValue { get; set; } Property Value Type Description String Implements ICssPrimitiveValue ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.html",
    "title": "Class CssPropertyProfile | SharpVectors Documentation",
    "keywords": "Class CssPropertyProfile Inheritance Object CssPropertyProfile Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssPropertyProfile Constructors CssPropertyProfile() Declaration public CssPropertyProfile() Properties Length Declaration public int Length { get; } Property Value Type Description Int32 SvgProfile Declaration public static CssPropertyProfile SvgProfile { get; } Property Value Type Description CssPropertyProfile Methods Add(String, Boolean, String) Declaration public void Add(string propertyName, bool isInheritable, string initialValue) Parameters Type Name Description String propertyName Boolean isInheritable String initialValue GetAllPropertyNames() Declaration public ICollection<string> GetAllPropertyNames() Returns Type Description ICollection < String > GetInitialCssValue(String) Declaration public CssValue GetInitialCssValue(string propertyName) Parameters Type Name Description String propertyName Returns Type Description CssValue GetInitialValue(String) Declaration public string GetInitialValue(string propertyName) Parameters Type Name Description String propertyName Returns Type Description String IsInheritable(String) Declaration public bool IsInheritable(string propertyName) Parameters Type Name Description String propertyName Returns Type Description Boolean"
  },
  "api/SharpVectors.Dom.Css.CssRect.html": {
    "href": "api/SharpVectors.Dom.Css.CssRect.html",
    "title": "Class CssRect | SharpVectors Documentation",
    "keywords": "Class CssRect The Rect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property. Inheritance Object CssRect Implements ICssRect Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssRect : ICssRect Constructors CssRect(String, Boolean) Constructs a new Rect Declaration public CssRect(string rectString, bool readOnly) Parameters Type Name Description String rectString Boolean readOnly Specifies if the Rect should be read-only Properties Bottom This attribute is used for the bottom of the rect. Declaration public ICssPrimitiveValue Bottom { get; } Property Value Type Description ICssPrimitiveValue Left This attribute is used for the left of the rect. Declaration public ICssPrimitiveValue Left { get; } Property Value Type Description ICssPrimitiveValue Right This attribute is used for the right of the rect. Declaration public ICssPrimitiveValue Right { get; } Property Value Type Description ICssPrimitiveValue Top This attribute is used for the top of the rect. Declaration public ICssPrimitiveValue Top { get; } Property Value Type Description ICssPrimitiveValue Implements ICssRect"
  },
  "api/SharpVectors.Dom.Css.CssRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule.html",
    "title": "Class CssRule | SharpVectors Documentation",
    "keywords": "Class CssRule Inheritance Object CssRule CssCharsetRule CssFontFaceRule CssImportRule CssMediaRule CssPageRule CssStyleRule CssUnknownRule Implements ICssRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public abstract class CssRule : ICssRule Constructors CssRule(Object, Boolean, IList<String>, CssStyleSheetType) Declaration protected CssRule(object parent, bool readOnly, IList<string> replacedStrings, CssStyleSheetType origin) Parameters Type Name Description Object parent Boolean readOnly IList < String > replacedStrings CssStyleSheetType origin Fields _isReadOnly Specifies the read/write state of the instance Declaration protected bool _isReadOnly Field Value Type Description Boolean _origin The origin stylesheet type of this rule Declaration protected CssStyleSheetType _origin Field Value Type Description CssStyleSheetType Properties CssText The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value. Declaration public virtual string CssText { get; set; } Property Value Type Description String ParentRule If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule. If this rule is not nested inside any other rules, this returns null Declaration public ICssRule ParentRule { get; } Property Value Type Description ICssRule ParentStyleSheet The style sheet that contains this rule Declaration public ICssStyleSheet ParentStyleSheet { get; } Property Value Type Description ICssStyleSheet Type The type of the rule, as defined above. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Declaration public abstract CssRuleType Type { get; } Property Value Type Description CssRuleType Methods GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order Declaration protected virtual void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters Type Name Description XmlElement elt The element to find styles for String pseudoElt The pseudo-element to find styles for MediaList ml The medialist that the document is using CssCollectedStyleDeclaration csd A CssStyleDeclaration that holds the collected styles ResolveOwnerNode() Finds the owner node of this rule Declaration public XmlNode ResolveOwnerNode() Returns Type Description XmlNode The owner XmlNode Implements ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssRuleList.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.html",
    "title": "Class CssRuleList | SharpVectors Documentation",
    "keywords": "Class CssRuleList The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules. The items in the CSSRuleList are accessible via an integral index, starting from 0. Inheritance Object CssRuleList Implements ICssRuleList IList < ICssRule > ICollection < ICssRule > IEnumerable < ICssRule > IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssRuleList : ICssRuleList, IList<ICssRule>, ICollection<ICssRule>, IEnumerable<ICssRule>, IEnumerable Constructors CssRuleList(ref String, Object, IList<String>, Boolean, CssStyleSheetType) Constructor for CssRuleList Declaration public CssRuleList(ref string cssText, object parent, IList<string> replacedStrings, bool readOnly, CssStyleSheetType origin) Parameters Type Name Description String cssText The CSS text containing the rules that will be in this list Object parent The parent rule or parent stylesheet IList < String > replacedStrings An array of strings that have been replaced in the string used for matching. These needs to be put back use the DereplaceStrings method. Boolean readOnly True if this instance is readonly CssStyleSheetType origin The type of CssStyleSheet Properties Count Declaration public int Count { get; } Property Value Type Description Int32 HasFontRule Declaration public bool HasFontRule { get; } Property Value Type Description Boolean IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Item[Int32] Declaration public ICssRule this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description ICssRule Item[UInt64] Used to retrieve a CSS rule by ordinal index. The order in this collection represents the order of the rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, this returns null. Declaration public ICssRule this[ulong index] { get; set; } Parameters Type Name Description UInt64 index Property Value Type Description ICssRule Length The number of CSSRules in the list. The range of valid child rule indices is 0 to length-1 inclusive. Declaration public ulong Length { get; } Property Value Type Description UInt64 Methods Add(ICssRule) Declaration public void Add(ICssRule item) Parameters Type Name Description ICssRule item Clear() Declaration public void Clear() Contains(ICssRule) Declaration public bool Contains(ICssRule item) Parameters Type Name Description ICssRule item Returns Type Description Boolean CopyTo(ICssRule[], Int32) Declaration public void CopyTo(ICssRule[] array, int arrayIndex) Parameters Type Name Description ICssRule [] array Int32 arrayIndex GetEnumerator() Declaration public IEnumerator<ICssRule> GetEnumerator() Returns Type Description IEnumerator < ICssRule > IndexOf(ICssRule) Declaration public int IndexOf(ICssRule item) Parameters Type Name Description ICssRule item Returns Type Description Int32 Insert(Int32, ICssRule) Declaration public void Insert(int index, ICssRule item) Parameters Type Name Description Int32 index ICssRule item Remove(ICssRule) Declaration public bool Remove(ICssRule item) Parameters Type Name Description ICssRule item Returns Type Description Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index Explicit Interface Implementations IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements ICssRuleList System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/SharpVectors.Dom.Css.CssRuleType.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleType.html",
    "title": "Enum CssRuleType | SharpVectors Documentation",
    "keywords": "Enum CssRuleType The CssRuleType Enum contains the possible Rule Type Values. This is an extension of the CSS specification. The spec contains only a list of contstant in the ICssRule interface. Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public enum CssRuleType Fields CharsetRule FontFaceRule ImportRule MediaRule PageRule StyleRule UnknownRule Name Description CharsetRule The rule is a CSSCharsetRule. FontFaceRule The rule is a CSSFontFaceRule. ImportRule The rule is a CSSImportRule. MediaRule The rule is a CSSMediaRule. PageRule The rule is a CSSPageRule. StyleRule The rule is a CSSStyleRule. UnknownRule The rule is a CSSUnknownRule."
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.html",
    "title": "Class CssStyleDeclaration | SharpVectors Documentation",
    "keywords": "Class CssStyleDeclaration The ICssStyleDeclaration interface represents a single CSS declaration block. This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block. While an implementation may not recognize all CSS properties within a CSS declaration block, it is expected to provide access to all specified properties in the style sheet through the ICssStyleDeclaration interface. Furthermore, implementations that support a specific level of CSS should correctly handle CSS shorthand properties for that level. For a further discussion of shorthand properties, see the CSS2Properties interface. This interface is also used to provide a read-only access to the computed values of an element. See also the ViewCSS interface. Note: The CSS Object Model doesn't provide an access to the specified or actual values of the CSS cascade Inheritance Object CssStyleDeclaration CssCollectedStyleDeclaration Implements ICssStyleDeclaration Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public class CssStyleDeclaration : ICssStyleDeclaration Constructors CssStyleDeclaration() The constructor used internally when collecting styles for a specified element Declaration protected CssStyleDeclaration() CssStyleDeclaration(String, CssRule, Boolean, CssStyleSheetType) Declaration public CssStyleDeclaration(string css, CssRule parentRule, bool readOnly, CssStyleSheetType origin) Parameters Type Name Description String css CssRule parentRule Boolean readOnly CssStyleSheetType origin CssStyleDeclaration(ref String, CssRule, Boolean, CssStyleSheetType) The constructor for CssStyleDeclaration Declaration public CssStyleDeclaration(ref string css, CssRule parentRule, bool readOnly, CssStyleSheetType origin) Parameters Type Name Description String css The string to parse for CSS CssRule parentRule The parent rule or parent stylesheet Boolean readOnly True if this instance is readonly CssStyleSheetType origin The type of CssStyleSheet Properties CssText The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties. Declaration public virtual string CssText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or a property is readonly. Item[UInt64] Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block. The name of the property at this ordinal position. The empty string if no property exists at this position. Declaration public virtual string this[ulong index] { get; } Parameters Type Name Description UInt64 index Property Value Type Description String Length The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive. Declaration public virtual ulong Length { get; } Property Value Type Description UInt64 Origin Declaration public CssStyleSheetType Origin { get; } Property Value Type Description CssStyleSheetType ParentRule The CSS rule that contains this declaration block or null if this CSSStyleDeclaration is not attached to a CSSRule. Declaration public ICssRule ParentRule { get; } Property Value Type Description ICssRule ReadOnly Declaration public bool ReadOnly { get; } Property Value Type Description Boolean Methods GetPropertyCssValue(String) Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the getPropertyValue and setProperty methods. Declaration public virtual ICssValue GetPropertyCssValue(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description ICssValue Returns the value of the property if it has been explicitly set for this declaration block. Returns null if the property has not been set. GetPropertyPriority(String) Used to retrieve the priority of a CSS property (e.g. the \"important\" qualifier) if the property has been explicitly set in this declaration block. Declaration public virtual string GetPropertyPriority(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description String A string representing the priority (e.g. \"important\") if one exists. The empty string if none exists. GetPropertyValue(String) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. Declaration public virtual string GetPropertyValue(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description String Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set. GetPropertyValue(String[]) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. Declaration public virtual string GetPropertyValue(string[] propertyNames) Parameters Type Name Description String [] propertyNames The name of the CSS property. See the CSS property index. Returns Type Description String Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set. GetStylesForElement(CssCollectedStyleDeclaration, Int32) Used to find matching style rules in the cascading order Declaration public void GetStylesForElement(CssCollectedStyleDeclaration csd, int specificity) Parameters Type Name Description CssCollectedStyleDeclaration csd Int32 specificity GetValidUrlFromCSS(String, String) Parsing CSS in C#: extracting all URLs Declaration public static string GetValidUrlFromCSS(string cssStr, string validProperty) Parameters Type Name Description String cssStr String validProperty Returns Type Description String Remarks https://stackoverflow.com/questions/18262390/parsing-css-in-c-extracting-all-urls GetValidUrlsFromCSS(String) Declaration public static IList<string> GetValidUrlsFromCSS(string cssStr) Parameters Type Name Description String cssStr Returns Type Description IList < String > RemoveProperty(String) Used to remove a CSS property if it has been explicitly set within this declaration block. Declaration public string RemoveProperty(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description String Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set or the property name does not correspond to a known CSS property. Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly. SetProperty(String, String, String) Used to set a property value and priority within this declaration block Declaration public void SetProperty(string propertyName, string value, string priority) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. String value The new value of the property. String priority The new priority of the property (e.g. \"important\"). Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly. SetPropertyValue(String, String) Used to set a property value and priority within this declaration block Declaration public void SetPropertyValue(string propertyName, string value) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. String value The new value of the property. Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly. Implements ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.CssStyleRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleRule.html",
    "title": "Class CssStyleRule | SharpVectors Documentation",
    "keywords": "Class CssStyleRule The CSSStyleRule interface represents a single rule set in a CSS style sheet. Inheritance Object CssRule CssStyleRule Implements ICssStyleRule ICssRule Inherited Members CssRule._origin CssRule._isReadOnly CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public class CssStyleRule : CssRule, ICssStyleRule, ICssRule Properties CssText The entire text of the CssStyleRule Declaration public override string CssText { get; } Property Value Type Description String Overrides CssRule.CssText SelectorText The textual representation of the selector for the rule set. The implementation may have stripped out insignificant whitespace while parsing the selector. Declaration public string SelectorText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly Style The declaration-block of this rule set. Declaration public ICssStyleDeclaration Style { get; } Property Value Type Description ICssStyleDeclaration Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Declaration public override CssRuleType Type { get; } Property Value Type Description CssRuleType Overrides CssRule.Type Methods GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order Declaration protected override void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters Type Name Description XmlElement elt The element to find styles for String pseudoElt The pseudo-element to find styles for MediaList ml The medialist that the document is using CssCollectedStyleDeclaration csd A CssStyleDeclaration that holds the collected styles Overrides CssRule.GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) Implements ICssStyleRule ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheet.html",
    "title": "Class CssStyleSheet | SharpVectors Documentation",
    "keywords": "Class CssStyleSheet The ICssStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is \"text/css\". Inheritance Object StyleSheet CssStyleSheet Implements ICssStyleSheet IStyleSheet Inherited Members StyleSheet.SheetContent StyleSheet.Media StyleSheet.Title StyleSheet.Href StyleSheet.AbsoluteHref StyleSheet.ParentStyleSheet StyleSheet.OwnerNode StyleSheet.Disabled StyleSheet.Type Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public class CssStyleSheet : StyleSheet, ICssStyleSheet, IStyleSheet Constructors CssStyleSheet(XmlNode, String, String, String, CssRule, CssStyleSheetType) Constructor for CssStyleSheet Declaration public CssStyleSheet(XmlNode ownerNode, string href, string title, string media, CssRule ownerRule, CssStyleSheetType origin) Parameters Type Name Description XmlNode ownerNode The node that owns this stylesheet. E.g. used for getting the BaseUri String href The URL of the stylesheet String title The title of the stylesheet String media List of medias for the stylesheet CssRule ownerRule The rule (e.g. ImportRule) that referenced this stylesheet CssStyleSheetType origin The type of stylesheet Properties CssRules The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules. Declaration public ICssRuleList CssRules { get; } Property Value Type Description ICssRuleList OwnerRule If this style sheet comes from an @import rule, the ownerRule attribute will contain the CSSImportRule. In that case, the ownerNode attribute in the StyleSheet interface will be null. If the style sheet comes from an element or a processing instruction, the ownerRule attribute will be null and the ownerNode attribute will contain the Node. Declaration public ICssRule OwnerRule { get; } Property Value Type Description ICssRule Methods DeleteRule(UInt64) Used to delete a rule from the style sheet. Declaration public void DeleteRule(ulong index) Parameters Type Name Description UInt64 index The index within the style sheet's rule list of the rule to remove. Exceptions Type Condition DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the style sheet's rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly. GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order Declaration protected override void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters Type Name Description XmlElement elt The element to find styles for String pseudoElt The pseudo-element to find styles for MediaList ml The medialist that the document is using CssCollectedStyleDeclaration csd A CssStyleDeclaration that holds the collected styles Overrides StyleSheet.GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) InsertRule(String, UInt64) Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade. Declaration public ulong InsertRule(string rule, ulong index) Parameters Type Name Description String rule The parsable text representing the rule. For rule sets this contains both the selector and the style declaration. For at-rules, this specifies both the at-identifier and the rule content. UInt64 index The index within the style sheet's rule list of the rule before which to insert the specified rule. If the specified index is equal to the length of the style sheet's rule collection, the rule will be added to the end of the style sheet. Returns Type Description UInt64 The index within the style sheet's rule collection of the newly inserted rule. Exceptions Type Condition DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the style sheet's rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly. DomException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the specified index e.g. if an @import rule is inserted after a standard rule set or other at-rule. DomException SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable. Implements ICssStyleSheet IStyleSheet"
  },
  "api/SharpVectors.Dom.Css.CssStyleSheetType.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheetType.html",
    "title": "Enum CssStyleSheetType | SharpVectors Documentation",
    "keywords": "Enum CssStyleSheetType The different types of CssStyleSheets Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public enum CssStyleSheetType Fields Author Collector Inline NonCssPresentationalHints Unknown User UserAgent Name Description Author The stylesheet is a author stylesheet Collector Used internally for collection of styles for an element Inline The styles comes from a inline style attribute NonCssPresentationalHints Unknown Used internally for unknown properties User The stylesheet is a user stylesheet UserAgent The stylesheet is a user agent stylesheet"
  },
  "api/SharpVectors.Dom.Css.CssUnknownRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssUnknownRule.html",
    "title": "Class CssUnknownRule | SharpVectors Documentation",
    "keywords": "Class CssUnknownRule The CSSUnknownRule interface represents an at-rule not supported by this user agent. Inheritance Object CssRule CssUnknownRule Implements ICssUnknownRule ICssRule Inherited Members CssRule._origin CssRule._isReadOnly CssRule.GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssUnknownRule : CssRule, ICssUnknownRule, ICssRule Properties Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Declaration public override CssRuleType Type { get; } Property Value Type Description CssRuleType Overrides CssRule.Type Implements ICssUnknownRule ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.html",
    "title": "Class CssValue | SharpVectors Documentation",
    "keywords": "Class CssValue This implements the ICssValue interface, which represents a simple or a complex value. A ICssValue object only occurs in a context of a CSS property. Inheritance Object CssValue CssAbsValue CssPrimitiveValue SvgColor Implements ICssValue Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public class CssValue : ICssValue Constructors CssValue() Only for internal use Declaration protected CssValue() CssValue(CssValueType, String, Boolean) Constructor for CssValue Declaration public CssValue(CssValueType type, string cssText, bool readOnly) Parameters Type Name Description CssValueType type The type of value String cssText The entire content of the value Boolean readOnly Specifies if the instance is read-only Fields _cssValueType Declaration protected CssValueType _cssValueType Field Value Type Description CssValueType AnglePattern Declaration public static readonly string AnglePattern Field Value Type Description String AngleUnitPattern Declaration public static readonly string AngleUnitPattern Field Value Type Description String LengthPattern Declaration public static readonly string LengthPattern Field Value Type Description String LengthUnitPattern Declaration public static readonly string LengthUnitPattern Field Value Type Description String Properties CssText A string representation of the current value. Declaration public virtual string CssText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly. CssValueType A code defining the type of the value as defined above Declaration public virtual CssValueType CssValueType { get; } Property Value Type Description CssValueType IsAbsolute Declaration public virtual bool IsAbsolute { get; } Property Value Type Description Boolean ReadOnly Declaration public virtual bool ReadOnly { get; } Property Value Type Description Boolean Methods GetAbsoluteValue(String, XmlElement) Declaration public virtual CssValue GetAbsoluteValue(string propertyName, XmlElement elm) Parameters Type Name Description String propertyName XmlElement elm Returns Type Description CssValue GetCssValue(String, Boolean) Detects what kind of value cssText contains and returns an instance of the correct CssValue class Declaration public static CssValue GetCssValue(string cssText, bool readOnly) Parameters Type Name Description String cssText The text to parse for a CSS value Boolean readOnly Specifies if this instance is read-only Returns Type Description CssValue The correct type of CSS value ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssValueType.html": {
    "href": "api/SharpVectors.Dom.Css.CssValueType.html",
    "title": "Enum CssValueType | SharpVectors Documentation",
    "keywords": "Enum CssValueType The CssValueType Enum contains the possible CSS Value Types. This is an extension to the CSS specification. The specification has a list of constants defined within the ICssValue Interface Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public enum CssValueType Fields Custom Inherit PrimitiveValue ValueList Name Description Custom The value is a custom value. Inherit The value is inherited and the cssText contains \"inherit\". PrimitiveValue The value is a primitive value and an instance of the ICssPrimitiveValue interface can be obtained by using binding-specific casting methods on this instance of the ICssValue interface. ValueList The value is a ICssValue list and an instance of the ICssValueList interface can be obtained by using binding-specific casting methods on this instance of the ICssValue interface."
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.html",
    "title": "Class CssXmlDocument | SharpVectors Documentation",
    "keywords": "Class CssXmlDocument A XmlDocument with CSS support Inheritance Object XmlNode XmlDocument Document CssXmlDocument SvgDocument Implements ICloneable IEnumerable IXPathNavigable IDocument INode IXmlNode IEventTargetSupport IEventTarget IDocumentEvent IDocumentCss IDocumentStyle ICssView IAbstractView Inherited Members Document.MutationEvents Document.ReplacedText(INode) Document.DeletedText(INode, Int32, Int32) Document.InsertedText(INode, Int32, Int32) Document.ModifyingCharacterData(INode) Document.ModifiedCharacterData(INode, String, String) Document.InsertingNode(INode, Boolean) Document.InsertedNode(INode, INode, Boolean) Document.RemovingNode(INode, INode, Boolean) Document.RemovedNode(INode, Boolean) Document.replacingNode(INode) Document.ReplacedNode(INode) Document.ModifiedAttrValue(IAttribute, String) Document.SetAttrNode(IAttribute, IAttribute) Document.RemovedAttrNode(IAttribute, INode, String) Document.RenamedAttrNode(IAttribute, IAttribute) Document.RenamedElement(IElement, IElement) Document.CreateAttribute(String, String, String) Document.CreateCDataSection(String) Document.CreateComment(String) Document.CreateDocumentFragment() Document.CreateDocumentType(String, String, String, String) Document.CreateEntityReference(String) Document.CreateProcessingInstruction(String, String) Document.CreateSignificantWhitespace(String) Document.CreateTextNode(String) Document.CreateWhitespace(String) Document.CreateXmlDeclaration(String, String, String) Document.IEventTarget.AddEventListener(String, EventListener, Boolean) Document.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Document.IEventTarget.DispatchEvent(IEvent) Document.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Document.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Document.IEventTarget.WillTriggerNs(String, String) Document.IEventTarget.HasEventListenerNs(String, String) Document.IDocument.Doctype Document.IDocument.Implementation Document.IDocument.DocumentElement Document.IDocument.CreateElement(String) Document.IDocument.CreateDocumentFragment() Document.IDocument.CreateTextNode(String) Document.IDocument.CreateComment(String) Document.IDocument.CreateCDataSection(String) Document.IDocument.CreateProcessingInstruction(String, String) Document.IDocument.CreateAttribute(String) Document.IDocument.CreateEntityReference(String) Document.IDocument.GetElementsByTagName(String) Document.IDocument.ImportNode(INode, Boolean) Document.IDocument.CreateElementNs(String, String) Document.IDocument.CreateAttributeNs(String, String) Document.IDocument.GetElementsByTagNameNs(String, String) Document.IDocument.GetElementById(String) Document.CreateEvent(String) Document.CanDispatch(String, String) Document.IEventTargetSupport.FireEvent(IEvent) XmlDocument.CloneNode(Boolean) XmlDocument.CreateAttribute(String) XmlDocument.CreateElement(String) XmlDocument.CreateNavigator() XmlDocument.CreateNavigator(XmlNode) XmlDocument.GetElementsByTagName(String) XmlDocument.CreateAttribute(String, String) XmlDocument.CreateElement(String, String) XmlDocument.GetElementsByTagName(String, String) XmlDocument.GetElementById(String) XmlDocument.ImportNode(XmlNode, Boolean) XmlDocument.CreateDefaultAttribute(String, String, String) XmlDocument.CreateNode(XmlNodeType, String, String, String) XmlDocument.CreateNode(String, String, String) XmlDocument.CreateNode(XmlNodeType, String, String) XmlDocument.ReadNode(XmlReader) XmlDocument.Load(TextReader) XmlDocument.Save(String) XmlDocument.Save(Stream) XmlDocument.Save(TextWriter) XmlDocument.Save(XmlWriter) XmlDocument.WriteTo(XmlWriter) XmlDocument.WriteContentTo(XmlWriter) XmlDocument.Validate(ValidationEventHandler) XmlDocument.Validate(ValidationEventHandler, XmlNode) XmlDocument.NodeType XmlDocument.ParentNode XmlDocument.DocumentType XmlDocument.Implementation XmlDocument.Name XmlDocument.LocalName XmlDocument.DocumentElement XmlDocument.OwnerDocument XmlDocument.Schemas XmlDocument.XmlResolver XmlDocument.NameTable XmlDocument.PreserveWhitespace XmlDocument.IsReadOnly XmlDocument.InnerText XmlDocument.InnerXml XmlDocument.SchemaInfo XmlDocument.BaseURI XmlDocument.NodeInserting XmlDocument.NodeInserted XmlDocument.NodeRemoving XmlDocument.NodeRemoved XmlDocument.NodeChanging XmlDocument.NodeChanged XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.OuterXml XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public class CssXmlDocument : Document, ICloneable, IEnumerable, IXPathNavigable, IDocument, INode, IXmlNode, IEventTargetSupport, IEventTarget, IDocumentEvent, IDocumentCss, IDocumentStyle, ICssView, IAbstractView Constructors CssXmlDocument() Initializes a new instance of CssXmlDocument Declaration public CssXmlDocument() CssXmlDocument(XmlNameTable) Initializes a new instance of CssXmlDocument Declaration public CssXmlDocument(XmlNameTable nt) Parameters Type Name Description XmlNameTable nt The name table to use Properties CssPropertyProfile Declaration public CssPropertyProfile CssPropertyProfile { get; set; } Property Value Type Description CssPropertyProfile Document Declaration public IDocumentView Document { get; } Property Value Type Description IDocumentView IsLoaded Declaration public bool IsLoaded { get; } Property Value Type Description Boolean Media Declaration public MediaList Media { get; set; } Property Value Type Description MediaList Static Gets or sets a value indicating whether this CssXmlDocument handles DOM dynamic changes. Sometimes (when loading or rendering) this needs to be disabled. See StaticSection for more information about use Declaration public bool Static { get; set; } Property Value Type Description Boolean true if static; otherwise, false . StyleSheets All the stylesheets associated with this document Declaration public IStyleSheetList StyleSheets { get; } Property Value Type Description IStyleSheetList Url Declaration public string Url { get; } Property Value Type Description String UserAgentStyleSheet Declaration public CssStyleSheet UserAgentStyleSheet { get; set; } Property Value Type Description CssStyleSheet UserStyleSheet Declaration public CssStyleSheet UserStyleSheet { get; set; } Property Value Type Description CssStyleSheet Methods AddStyleElement(String, String) Adds a element type to be used as style elements (e.g. as in the HTML style element) Declaration public void AddStyleElement(string ns, string localName) Parameters Type Name Description String ns The namespace URI of the element String localName The local-name of the element AddStyleSheet(String) Declaration public void AddStyleSheet(string href) Parameters Type Name Description String href CreateElement(String, String, String) Declaration public override XmlElement CreateElement(string prefix, string localName, string ns) Parameters Type Name Description String prefix String localName String ns Returns Type Description XmlElement Overrides Document.CreateElement(String, String, String) GetComputedStyle(XmlElement, String) This method is used to get the computed style as it is defined in [CSS2]. Declaration public ICssStyleDeclaration GetComputedStyle(XmlElement elt, string pseudoElt) Parameters Type Name Description XmlElement elt The element whose style is to be computed. This parameter cannot be null. String pseudoElt The pseudo-element or null if none. Returns Type Description ICssStyleDeclaration The computed style. The CSSStyleDeclaration is read-only and contains only absolute values. GetOverrideStyle(XmlElement, String) This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element. Declaration public ICssStyleDeclaration GetOverrideStyle(XmlElement elt, string pseudoElt) Parameters Type Name Description XmlElement elt The element whose style is to be modified. This parameter cannot be null. String pseudoElt The pseudo-element or null if none. Returns Type Description ICssStyleDeclaration The override style declaration. GetResource(Uri) Declaration public WebResponse GetResource(Uri absoluteUri) Parameters Type Name Description Uri absoluteUri Returns Type Description WebResponse Load(Stream) Declaration public override void Load(Stream inStream) Parameters Type Name Description Stream inStream Overrides XmlDocument.Load(Stream) Load(String) Loads a XML document, compare to XmlDocument.Load() Declaration public override void Load(string filename) Parameters Type Name Description String filename Overrides XmlDocument.Load(String) Load(XmlReader) Declaration public override void Load(XmlReader reader) Parameters Type Name Description XmlReader reader Overrides XmlDocument.Load(XmlReader) LoadXml(String) Declaration public override void LoadXml(string xml) Parameters Type Name Description String xml Overrides XmlDocument.LoadXml(String) NodeChangedEvent(Object, XmlNodeChangedEventArgs) Declaration public void NodeChangedEvent(object src, XmlNodeChangedEventArgs args) Parameters Type Name Description Object src XmlNodeChangedEventArgs args OnLoaded() Declaration protected virtual void OnLoaded() SetUserAgentStyleSheet(String) Sets the user agent stylesheet for this document Declaration public void SetUserAgentStyleSheet(string href) Parameters Type Name Description String href The URI to the stylesheet SetUserStyleSheet(String) Sets the user stylesheet for this document Declaration public void SetUserStyleSheet(string href) Parameters Type Name Description String href The URI to the stylesheet Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IDocument INode IXmlNode IEventTargetSupport IEventTarget IDocumentEvent IDocumentCss IDocumentStyle ICssView IAbstractView"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.html",
    "title": "Class CssXmlElement | SharpVectors Documentation",
    "keywords": "Class CssXmlElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget IElementCssInlineStyle Inherited Members Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public class CssXmlElement : Element, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget, IElementCssInlineStyle Constructors CssXmlElement(String, String, String, CssXmlDocument) Declaration public CssXmlElement(string prefix, string localname, string ns, CssXmlDocument doc) Parameters Type Name Description String prefix String localname String ns CssXmlDocument doc Fields _cachedCSD Declaration protected ICssStyleDeclaration _cachedCSD Field Value Type Description ICssStyleDeclaration _importDocument Declaration protected CssXmlDocument _importDocument Field Value Type Description CssXmlDocument _importNode Declaration protected CssXmlElement _importNode Field Value Type Description CssXmlElement _isImported Declaration protected bool _isImported Field Value Type Description Boolean Properties Imported Declaration public bool Imported { get; set; } Property Value Type Description Boolean OwnerDocument Declaration public CssXmlDocument OwnerDocument { get; } Property Value Type Description CssXmlDocument Style Declaration public ICssStyleDeclaration Style { get; } Property Value Type Description ICssStyleDeclaration Methods AttributeChange(Object, XmlNodeChangedEventArgs) Called when any attribute is changing. This is typically triggered by calls to setAttribute() and should only be called from the CssXmlDocument. Declaration public virtual void AttributeChange(object src, XmlNodeChangedEventArgs args) Parameters Type Name Description Object src XmlNodeChangedEventArgs args ChildNodeChange(Object, XmlNodeChangedEventArgs) Called when any child node is changing. If an element is moved the CSS heirarchy for that element will need to change. This is mainly useful when one of the child nodes parent is a referenced node (for example in a <use> element. Declaration public virtual void ChildNodeChange(object src, XmlNodeChangedEventArgs args) Parameters Type Name Description Object src XmlNodeChangedEventArgs args CssInvalidate() Declaration public virtual void CssInvalidate() ElementChange(Object, XmlNodeChangedEventArgs) Called when this element is changing in one of the following ways Declaration public virtual void ElementChange(object src, XmlNodeChangedEventArgs args) Parameters Type Name Description Object src XmlNodeChangedEventArgs args FireAttributeChange(Object, XmlNodeChangedEventArgs) Declaration protected void FireAttributeChange(object src, XmlNodeChangedEventArgs args) Parameters Type Name Description Object src XmlNodeChangedEventArgs args FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) Declaration protected void FireChildNodeChange(object src, XmlNodeChangedEventArgs args, bool fireEvent) Parameters Type Name Description Object src XmlNodeChangedEventArgs args Boolean fireEvent FireCssChange() Declaration protected void FireCssChange() FireElementChange(Object, XmlNodeChangedEventArgs) Declaration protected void FireElementChange(object src, XmlNodeChangedEventArgs args) Parameters Type Name Description Object src XmlNodeChangedEventArgs args FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) Declaration protected void FireParentNodeChange(object src, XmlNodeChangedEventArgs args, bool fireEvent) Parameters Type Name Description Object src XmlNodeChangedEventArgs args Boolean fireEvent GetComputedCssValue(String, String) Declaration public virtual ICssValue GetComputedCssValue(string propertyName, string pseudoElt) Parameters Type Name Description String propertyName String pseudoElt Returns Type Description ICssValue GetComputedStringValue(String, String) Declaration public virtual string GetComputedStringValue(string propertyName, string pseudoElt) Parameters Type Name Description String propertyName String pseudoElt Returns Type Description String GetComputedStyle(String) Declaration public virtual ICssStyleDeclaration GetComputedStyle(string pseudoElt) Parameters Type Name Description String pseudoElt Returns Type Description ICssStyleDeclaration HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. Declaration public virtual void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute The attribute that is changing. ParentNodeChange(Object, XmlNodeChangedEventArgs) Called when any parent element is changing. If an element is moved the CSS heirarchy for that element will need to change. Declaration public virtual void ParentNodeChange(object src, XmlNodeChangedEventArgs args) Parameters Type Name Description Object src XmlNodeChangedEventArgs args Supports(String, String) Declaration public override bool Supports(string feature, string version) Parameters Type Name Description String feature String version Returns Type Description Boolean Overrides XmlNode.Supports(String, String) Events attributeChangeHandler Declaration public virtual event NodeChangeHandler attributeChangeHandler Event Type Type Description NodeChangeHandler childNodeChangeHandler Declaration public virtual event NodeChangeHandler childNodeChangeHandler Event Type Type Description NodeChangeHandler cssChangeHandler Declaration public virtual event CssChangeHandler cssChangeHandler Event Type Type Description CssChangeHandler elementChangeHandler Declaration public virtual event NodeChangeHandler elementChangeHandler Event Type Type Description NodeChangeHandler parentNodeChangeHandler Declaration public virtual event NodeChangeHandler parentNodeChangeHandler Event Type Type Description NodeChangeHandler Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget IElementCssInlineStyle"
  },
  "api/SharpVectors.Dom.Css.CssXPathSelector.html": {
    "href": "api/SharpVectors.Dom.Css.CssXPathSelector.html",
    "title": "Class CssXPathSelector | SharpVectors Documentation",
    "keywords": "Class CssXPathSelector Inheritance Object CssXPathSelector Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class CssXPathSelector Constructors CssXPathSelector(String) Declaration public CssXPathSelector(string selector) Parameters Type Name Description String selector CssXPathSelector(String, IDictionary<String, String>) Declaration public CssXPathSelector(string selector, IDictionary<string, string> namespaceTable) Parameters Type Name Description String selector IDictionary < String , String > namespaceTable Properties CssSelector Declaration public string CssSelector { get; } Property Value Type Description String Specificity Declaration public int Specificity { get; } Property Value Type Description Int32 XPath Only used for testing! Declaration public string XPath { get; } Property Value Type Description String Methods Matches(XPathNavigator) Declaration public bool Matches(XPathNavigator nav) Parameters Type Name Description XPathNavigator nav Returns Type Description Boolean"
  },
  "api/SharpVectors.Dom.Css.html": {
    "href": "api/SharpVectors.Dom.Css.html",
    "title": "Namespace SharpVectors.Dom.Css | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom.Css Classes CssAbsPrimitiveLengthValue CssAbsPrimitiveValue CssAbsValue CssCharsetRule The CSSCharsetRule interface represents a @charset rule in a CSS style sheet. The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no CSSCharsetRule is created. The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet. The value of the @charset rule (and therefore of the CSSCharsetRule) may not correspond to the encoding the document actually came in; character encoding information e.g. in an HTTP header, has priority (see CSS document representation) but this is not reflected in the CSSCharsetRule. CssCollectedProperty Used internally to store collected properties. CssCollectedStyleDeclaration Used internally for collection of styles for a specific element CssColor The RGB-Color interface is used to represent any RGB color value. CssFontFaceRule The ICssFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions. CssImportRule The CSSImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets. CssMediaRule The CSSMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types. CssNumber CssPageRule The CSSPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media. CssPrimitiveAngleValue CssPrimitiveColorValue CssPrimitiveLengthValue CssPrimitiveRgbValue CssPrimitiveValue This implements the ICssPrimitiveValue interface which represents a single CSS value. CssPrimitiveVarsValue CssPropertyProfile CssRect The Rect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property. CssRule CssRuleList The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules. The items in the CSSRuleList are accessible via an integral index, starting from 0. CssStyleDeclaration The ICssStyleDeclaration interface represents a single CSS declaration block. This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block. While an implementation may not recognize all CSS properties within a CSS declaration block, it is expected to provide access to all specified properties in the style sheet through the ICssStyleDeclaration interface. Furthermore, implementations that support a specific level of CSS should correctly handle CSS shorthand properties for that level. For a further discussion of shorthand properties, see the CSS2Properties interface. This interface is also used to provide a read-only access to the computed values of an element. See also the ViewCSS interface. Note: The CSS Object Model doesn't provide an access to the specified or actual values of the CSS cascade CssStyleRule The CSSStyleRule interface represents a single rule set in a CSS style sheet. CssStyleSheet The ICssStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is \"text/css\". CssUnknownRule The CSSUnknownRule interface represents an at-rule not supported by this user agent. CssValue This implements the ICssValue interface, which represents a simple or a complex value. A ICssValue object only occurs in a context of a CSS property. CssXmlDocument A XmlDocument with CSS support CssXmlElement CssXPathSelector StaticSection Creates a static section for a CssXmlDocument. Typical use: using(StaticSection.Use(doc)) { // blah blah } Interfaces ICssCharsetRule The ICssCharsetRule interface represents a @charset rule in a CSS style sheet. The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no ICssCharsetRule is created. The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet. ICssColor The RGB-Color interface is used to represent any RGB color value. This interface reflects the values in the underlying style property. Hence, modifications made to the ICssPrimitiveValue objects modify the style property. ICssCounter The Counter interface is used to represent any counter or counters function value. This interface reflects the values in the underlying style property. ICssFontFaceRule The ICssFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions. ICssImportRule The ICssImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets. ICssMediaRule The ICssMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types ICssPageRule The ICssPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media. ICssPrimitiveValue The ICssPrimitiveValue interface represents a single CSS value. ICssRect The ICssRect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the ICssPrimitiveValue objects modify the style property. ICssRule The ICssRule interface is the abstract base interface for any type of CSS statement. This includes both rule sets and at-rules. An implementation is expected to preserve all rules specified in a CSS style sheet, even if the rule is not recognized by the parser. Unrecognized rules are represented using the ICssUnknownRule interface. ICssRuleList The ICssRuleList interface provides the abstraction of an ordered collection of CSS rules. ICssStyleDeclaration The ICssStyleDeclaration interface represents a single CSS declaration block. ICssStyleRule The ICssStyleRule interface represents a single rule set in a CSS style sheet. ICssStyleSheet The ICssStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is text/css . ICssUnknownRule The ICssUnknownRule interface represents an at-rule not supported by this user agent. ICssValue The ICssValue interface represents the current computed value of a CSS property. ICssValueList The ICssValueList interface provides the abstraction of an ordered collection of CSS values. ICssView This interface represents a CSS view. The GetComputedStyle(XmlElement, String) method provides a read only access to the computed values of an element. IDocumentCss This interface represents a document with a CSS view. IDomImplementationCss This interface allows the DOM user to create a ICssStyleSheet outside the context of a document. There is no way to associate the new ICssStyleSheet with a document in DOM Level 2. IElementCssInlineStyle Inline style information attached to elements is exposed through the style attribute. Enums CssPrimitiveType The CssPrimitiveType enumeration contains the list of possible primitive value types in CSS. This class is an extension of the CSS spec. The CSS spec has a list of constants instead of an enum class. CssRuleType The CssRuleType Enum contains the possible Rule Type Values. This is an extension of the CSS specification. The spec contains only a list of contstant in the ICssRule interface. CssStyleSheetType The different types of CssStyleSheets CssValueType The CssValueType Enum contains the possible CSS Value Types. This is an extension to the CSS specification. The specification has a list of constants defined within the ICssValue Interface Delegates CssChangeHandler NodeChangeHandler"
  },
  "api/SharpVectors.Dom.Css.ICssCharsetRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssCharsetRule.html",
    "title": "Interface ICssCharsetRule | SharpVectors Documentation",
    "keywords": "Interface ICssCharsetRule The ICssCharsetRule interface represents a @charset rule in a CSS style sheet. The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no ICssCharsetRule is created. The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet. Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssCharsetRule : ICssRule Properties Encoding The encoding information used in this @charset rule. Declaration string Encoding { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR : Raised if the specified encoding value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR : Raised if this encoding rule is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssColor.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.html",
    "title": "Interface ICssColor | SharpVectors Documentation",
    "keywords": "Interface ICssColor The RGB-Color interface is used to represent any RGB color value. This interface reflects the values in the underlying style property. Hence, modifications made to the ICssPrimitiveValue objects modify the style property. Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssColor Properties Alpha This attribute is used for the alpha value of the RGBA color Declaration ICssPrimitiveValue Alpha { get; } Property Value Type Description ICssPrimitiveValue Blue This attribute is used for the blue value of the RGB color Declaration ICssPrimitiveValue Blue { get; } Property Value Type Description ICssPrimitiveValue Green This attribute is used for the green value of the RGB color. Declaration ICssPrimitiveValue Green { get; } Property Value Type Description ICssPrimitiveValue HasAlpha Gets a value which indicates whether the color value has alpha value or not. Declaration bool HasAlpha { get; } Property Value Type Description Boolean IsSystemColor Gets a value which indicates whether the color is system-defined color. Declaration bool IsSystemColor { get; } Property Value Type Description Boolean IsVarColor Gets a value which indicates whether the color is defined by custom properties. Declaration bool IsVarColor { get; } Property Value Type Description Boolean Name Gets the name of the color, if available. Declaration string Name { get; } Property Value Type Description String Red This attribute is used for the red value of the RGB color Declaration ICssPrimitiveValue Red { get; } Property Value Type Description ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssCounter.html": {
    "href": "api/SharpVectors.Dom.Css.ICssCounter.html",
    "title": "Interface ICssCounter | SharpVectors Documentation",
    "keywords": "Interface ICssCounter The Counter interface is used to represent any counter or counters function value. This interface reflects the values in the underlying style property. Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssCounter Properties Identifier This attribute is used for the identifier of the counter. Declaration string Identifier { get; } Property Value Type Description String ListStyle This attribute is used for the style of the list. Declaration string ListStyle { get; } Property Value Type Description String Separator This attribute is used for the separator of the nested counters. Declaration string Separator { get; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Css.ICssFontFaceRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssFontFaceRule.html",
    "title": "Interface ICssFontFaceRule | SharpVectors Documentation",
    "keywords": "Interface ICssFontFaceRule The ICssFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions. Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssFontFaceRule : ICssRule Properties Style The declaration-block of this rule. Declaration ICssStyleDeclaration Style { get; } Property Value Type Description ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.ICssImportRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssImportRule.html",
    "title": "Interface ICssImportRule | SharpVectors Documentation",
    "keywords": "Interface ICssImportRule The ICssImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets. Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssImportRule : ICssRule Properties Href The location of the style sheet to be imported. The attribute will not contain the \"url(...)\" specifier around the URI. Declaration string Href { get; } Property Value Type Description String Media A list of media types for which this style sheet may be used. Declaration IMediaList Media { get; } Property Value Type Description IMediaList StyleSheet The style sheet referred to by this rule, if it has been loaded. The value of this attribute is null if the style sheet has not yet been loaded or if it will not be loaded (e.g. if the style sheet is for a media type not supported by the user agent). Declaration ICssStyleSheet StyleSheet { get; } Property Value Type Description ICssStyleSheet"
  },
  "api/SharpVectors.Dom.Css.ICssMediaRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssMediaRule.html",
    "title": "Interface ICssMediaRule | SharpVectors Documentation",
    "keywords": "Interface ICssMediaRule The ICssMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssMediaRule : ICssRule Properties CssRules A list of all CSS rules contained within the media block. Declaration ICssRuleList CssRules { get; } Property Value Type Description ICssRuleList Media A list of media types for this rule Declaration IMediaList Media { get; } Property Value Type Description IMediaList Methods DeleteRule(UInt64) Used to delete a rule from the media block. Declaration void DeleteRule(ulong index) Parameters Type Name Description UInt64 index The index within the media block's rule collection of the rule to remove. Exceptions Type Condition DomException INDEX_SIZE_ERR : Raised if the specified index does not correspond to a rule in the media rule list. DomException NO_MODIFICATION_ALLOWED_ERR : Raised if this media rule is readonly InsertRule(String, UInt64) Used to insert a new rule into the media block. Declaration ulong InsertRule(string rule, ulong index) Parameters Type Name Description String rule The parsable text representing the rule. For rule sets this contains both the selector and the style declaration. For at-rules, this specifies both the at-identifier and the rule content. UInt64 index The index within the media block's rule collection of the rule before which to insert the specified rule. If the specified index is equal to the length of the media blocks's rule collection, the rule will be added to the end of the media block. Returns Type Description UInt64 The index within the media block's rule collection of the newly inserted rule"
  },
  "api/SharpVectors.Dom.Css.ICssPageRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPageRule.html",
    "title": "Interface ICssPageRule | SharpVectors Documentation",
    "keywords": "Interface ICssPageRule The ICssPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media. Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssPageRule : ICssRule Properties SelectorText The parsable textual representation of the page selector for the rule. Declaration string SelectorText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR : Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR : Raised if this rule is readonly. Style The declaration-block of this rule. Declaration ICssStyleDeclaration Style { get; } Property Value Type Description ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.html",
    "title": "Interface ICssPrimitiveValue | SharpVectors Documentation",
    "keywords": "Interface ICssPrimitiveValue The ICssPrimitiveValue interface represents a single CSS value. Inherited Members ICssValue.CssText ICssValue.CssValueType ICssValue.IsAbsolute Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssPrimitiveValue : ICssValue Remarks This interface may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the GetPropertyCssValue(String) method of the ICssStyleDeclaration interface. A ICssPrimitiveValue object only occurs in a context of a CSS property. Properties PrimitiveType The type of the value as defined by the constants specified above. Declaration CssPrimitiveType PrimitiveType { get; } Property Value Type Description CssPrimitiveType Methods GetCounterValue() This method is used to get the ICssCounter value. If this CSS value doesn't contain a counter value, a DomException is raised. Modification to the corresponding style property can be achieved using the ICssCounter interface Declaration ICssCounter GetCounterValue() Returns Type Description ICssCounter The Counter value Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Counter value (e.g. this is not COUNTER ). GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised. Declaration double GetFloatValue(CssPrimitiveType unitType) Parameters Type Name Description CssPrimitiveType unitType A unit code to get the float value. The unit code can only be a float unit type (i.e. NUMBER , PERCENTAGE , EMS , EXS , PX , CM , MM , IN , PT , PC , DEG , RAD , GRAD , MS , S , HZ , KHZ , DIMENSION ). Returns Type Description Double The float value in the specified unit. Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value or if the float value can't be converted into the specified unit. GetRectValue() This method is used to get the ICssRect value. If this CSS value doesn't contain a rect value, a DomException is raised. Modification to the corresponding style property can be achieved using the ICssRect interface. Declaration ICssRect GetRectValue() Returns Type Description ICssRect The Rect value Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Rect value. (e.g. this is not RECT ). GetRgbColorValue() This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DomException is raised. Modification to the corresponding style property can be achieved using the ICssColor interface. Declaration ICssColor GetRgbColorValue() Returns Type Description ICssColor the RGB color value. Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the attached property can't return a RGB color value (e.g. this is not RGBCOLOR ). GetStringValue() This method is used to get the string value. If the CSS value doesn't contain a string value, a DomException is raised. Note: Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string. Declaration string GetStringValue() Returns Type Description String The string value in the current unit. The current primitiveType can only be a string unit type (i.e. STRING , URI , IDENT , and ATTR ). Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value. SetFloatValue(CssPrimitiveType, Double) A method to set the float value with a specified unit. If the property attached with this value cannot accept the specified unit or the float value, the value will be unchanged and a DomException will be raised. Declaration void SetFloatValue(CssPrimitiveType unitType, double floatValue) Parameters Type Name Description CssPrimitiveType unitType A unit code as defined above. The unit code can only be a float unit type (i.e. NUMBER , PERCENTAGE , EMS , EXS , PX , CM , MM , IN , PT , PC , DEG , RAD , GRAD , MS , S , HZ , KHZ , DIMENSION ). Double floatValue The new float value. Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the attached property doesn't support the float value or the unit type. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly. SetStringValue(CssPrimitiveType, String) A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a DomException will be raised. Declaration void SetStringValue(CssPrimitiveType stringType, string stringValue) Parameters Type Name Description CssPrimitiveType stringType A string code as defined above. The string code can only be a string unit type (i.e. STRING , URI , IDENT , and ATTR ). String stringValue The new string value. Exceptions Type Condition DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value or if the string value can't be converted into the specified unit. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssRect.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRect.html",
    "title": "Interface ICssRect | SharpVectors Documentation",
    "keywords": "Interface ICssRect The ICssRect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the ICssPrimitiveValue objects modify the style property. Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssRect Properties Bottom This attribute is used for the bottom of the rect. Declaration ICssPrimitiveValue Bottom { get; } Property Value Type Description ICssPrimitiveValue Left This attribute is used for the left of the rect. Declaration ICssPrimitiveValue Left { get; } Property Value Type Description ICssPrimitiveValue Right This attribute is used for the right of the rect. Declaration ICssPrimitiveValue Right { get; } Property Value Type Description ICssPrimitiveValue Top This attribute is used for the top of the rect. Declaration ICssPrimitiveValue Top { get; } Property Value Type Description ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRule.html",
    "title": "Interface ICssRule | SharpVectors Documentation",
    "keywords": "Interface ICssRule The ICssRule interface is the abstract base interface for any type of CSS statement. This includes both rule sets and at-rules. An implementation is expected to preserve all rules specified in a CSS style sheet, even if the rule is not recognized by the parser. Unrecognized rules are represented using the ICssUnknownRule interface. Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssRule Properties CssText The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value. Declaration string CssText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of rule than the current one. DomException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at this point in the style sheet. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if the rule is readonly. ParentRule The style sheet that contains this rule. Declaration ICssRule ParentRule { get; } Property Value Type Description ICssRule ParentStyleSheet The type of the rule, as defined above. The expectation is that binding-specific casting methods can be used to cast down from an instance of the ICssRule interface to the specific derived interface implied by the type. Declaration ICssStyleSheet ParentStyleSheet { get; } Property Value Type Description ICssStyleSheet Type If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule. If this rule is not nested inside any other rules, this returns null Declaration CssRuleType Type { get; } Property Value Type Description CssRuleType"
  },
  "api/SharpVectors.Dom.Css.ICssRuleList.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRuleList.html",
    "title": "Interface ICssRuleList | SharpVectors Documentation",
    "keywords": "Interface ICssRuleList The ICssRuleList interface provides the abstraction of an ordered collection of CSS rules. Inherited Members IList<ICssRule>.IndexOf(ICssRule) IList<ICssRule>.Insert(Int32, ICssRule) IList<ICssRule>.RemoveAt(Int32) IList<ICssRule>.Item[Int32] ICollection<ICssRule>.Add(ICssRule) ICollection<ICssRule>.Clear() ICollection<ICssRule>.Contains(ICssRule) ICollection<ICssRule>.CopyTo(ICssRule[], Int32) ICollection<ICssRule>.Remove(ICssRule) ICollection<ICssRule>.Count ICollection<ICssRule>.IsReadOnly IEnumerable<ICssRule>.GetEnumerator() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssRuleList : IList<ICssRule>, ICollection<ICssRule>, IEnumerable<ICssRule>, IEnumerable Properties HasFontRule Gets a value specifying whether the contents of this list includes a font rule. This is an implementation extension, not CSS specification. Declaration bool HasFontRule { get; } Property Value Type Description Boolean Item[UInt64] Used to retrieve a CSS rule by ordinal index. The order in this collection represents the order of the rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, this returns null. Declaration ICssRule this[ulong Item] { get; } Parameters Type Name Description UInt64 Item Property Value Type Description ICssRule Length The number of CSS rules in the list. The range of valid child rule indices is 0 to length-1 inclusive. Declaration ulong Length { get; } Property Value Type Description UInt64"
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.html",
    "title": "Interface ICssStyleDeclaration | SharpVectors Documentation",
    "keywords": "Interface ICssStyleDeclaration The ICssStyleDeclaration interface represents a single CSS declaration block. Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssStyleDeclaration Remarks This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block. Properties CssText The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties. Declaration string CssText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or a property is readonly. Item[UInt64] Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block. Declaration string this[ulong index] { get; } Parameters Type Name Description UInt64 index Property Value Type Description String Length The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive. Declaration ulong Length { get; } Property Value Type Description UInt64 ParentRule The CSS rule that contains this declaration block or null if this ICssStyleDeclaration is not attached to a ICssRule . Declaration ICssRule ParentRule { get; } Property Value Type Description ICssRule Methods GetPropertyCssValue(String) Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the GetPropertyValue(String) and SetProperty(String, String, String) methods. Declaration ICssValue GetPropertyCssValue(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description ICssValue Returns the value of the property if it has been explicitly set for this declaration block. Returns null if the property has not been set. GetPropertyPriority(String) Used to retrieve the priority of a CSS property (e.g. the \"important\" qualifier) if the property has been explicitly set in this declaration block. Declaration string GetPropertyPriority(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description String A string representing the priority (e.g. \"important\") if one exists. The empty string if none exists. GetPropertyValue(String) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. Declaration string GetPropertyValue(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description String Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set. GetPropertyValue(String[]) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. Declaration string GetPropertyValue(string[] propertyNames) Parameters Type Name Description String [] propertyNames The name of the CSS property. See the CSS property index. Returns Type Description String Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set. RemoveProperty(String) Used to remove a CSS property if it has been explicitly set within this declaration block. Declaration string RemoveProperty(string propertyName) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. Returns Type Description String Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set or the property name does not correspond to a known CSS property. Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly. SetProperty(String, String, String) Used to set a property value and priority within this declaration block. Declaration void SetProperty(string propertyName, string value, string priority) Parameters Type Name Description String propertyName The name of the CSS property. See the CSS property index. String value The new value of the property. String priority The new priority of the property (e.g. \"important\"). Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssStyleRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleRule.html",
    "title": "Interface ICssStyleRule | SharpVectors Documentation",
    "keywords": "Interface ICssStyleRule The ICssStyleRule interface represents a single rule set in a CSS style sheet. Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssStyleRule : ICssRule Properties SelectorText The textual representation of the selector for the rule set. The implementation may have stripped out insignificant whitespace while parsing the selector. Declaration string SelectorText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly. Style The declaration-block of this rule set. Declaration ICssStyleDeclaration Style { get; } Property Value Type Description ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.ICssStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleSheet.html",
    "title": "Interface ICssStyleSheet | SharpVectors Documentation",
    "keywords": "Interface ICssStyleSheet The ICssStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is text/css . Inherited Members IStyleSheet.Media IStyleSheet.Title IStyleSheet.Href IStyleSheet.ParentStyleSheet IStyleSheet.OwnerNode IStyleSheet.Disabled IStyleSheet.Type Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssStyleSheet : IStyleSheet Properties CssRules The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules. Declaration ICssRuleList CssRules { get; } Property Value Type Description ICssRuleList OwnerRule If this style sheet comes from an @import rule, the ownerRule attribute will contain the ICssImportRule . Declaration ICssRule OwnerRule { get; } Property Value Type Description ICssRule Remarks In that case, the attribute in the IStyleSheet interface will be null . If the style sheet comes from an element or a processing instruction, the OwnerRule attribute will be null and the attribute will contain the node. Methods DeleteRule(UInt64) Used to delete a rule from the style sheet. Declaration void DeleteRule(ulong index) Parameters Type Name Description UInt64 index The index within the style sheet's rule list of the rule to remove. Exceptions Type Condition DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the style sheet's rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly. InsertRule(String, UInt64) Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade. Declaration ulong InsertRule(string rule, ulong index) Parameters Type Name Description String rule The parsable text representing the rule. For rule sets this contains both the selector and the style declaration. For at-rules, this specifies both the at-identifier and the rule content. UInt64 index The index within the style sheet's rule list of the rule before which to insert the specified rule. If the specified index is equal to the length of the style sheet's rule collection, the rule will be added to the end of the style sheet. Returns Type Description UInt64 The index within the style sheet's rule collection of the newly inserted rule. Exceptions Type Condition DomException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the specified index e.g. if an @import rule is inserted after a standard rule set or other at-rule. DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the style sheet's rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly. DomException SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable."
  },
  "api/SharpVectors.Dom.Css.ICssUnknownRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssUnknownRule.html",
    "title": "Interface ICssUnknownRule | SharpVectors Documentation",
    "keywords": "Interface ICssUnknownRule The ICssUnknownRule interface represents an at-rule not supported by this user agent. Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssUnknownRule : ICssRule"
  },
  "api/SharpVectors.Dom.Css.ICssValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssValue.html",
    "title": "Interface ICssValue | SharpVectors Documentation",
    "keywords": "Interface ICssValue The ICssValue interface represents the current computed value of a CSS property. Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssValue Properties CssText A string representation of the current value. Declaration string CssText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly. CssValueType An enumeration code defining the type of the value. Declaration CssValueType CssValueType { get; } Property Value Type Description CssValueType IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification. Declaration bool IsAbsolute { get; } Property Value Type Description Boolean"
  },
  "api/SharpVectors.Dom.Css.ICssValueList.html": {
    "href": "api/SharpVectors.Dom.Css.ICssValueList.html",
    "title": "Interface ICssValueList | SharpVectors Documentation",
    "keywords": "Interface ICssValueList The ICssValueList interface provides the abstraction of an ordered collection of CSS values. Inherited Members ICssValue.CssText ICssValue.CssValueType ICssValue.IsAbsolute Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssValueList : ICssValue Properties Item[UInt64] Used to retrieve a ICssValue by ordinal index. The order in this collection represents the order of the values in the CSS style property. If index is greater than or equal to the number of values in the list, this returns null. Declaration ICssValue this[ulong index] { get; } Parameters Type Name Description UInt64 index Property Value Type Description ICssValue Length The number of CSS Values in the list. The range of valid values of the indices is 0 to length-1 inclusive. Declaration ulong Length { get; } Property Value Type Description UInt64"
  },
  "api/SharpVectors.Dom.Css.ICssView.html": {
    "href": "api/SharpVectors.Dom.Css.ICssView.html",
    "title": "Interface ICssView | SharpVectors Documentation",
    "keywords": "Interface ICssView This interface represents a CSS view. The GetComputedStyle(XmlElement, String) method provides a read only access to the computed values of an element. Inherited Members IAbstractView.Document Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface ICssView : IAbstractView Methods GetComputedStyle(XmlElement, String) This method is used to get the computed style as it is defined in [CSS2]. Declaration ICssStyleDeclaration GetComputedStyle(XmlElement elt, string pseudoElt) Parameters Type Name Description XmlElement elt The element whose style is to be computed. This parameter cannot be null. String pseudoElt The pseudo-element or null if none Returns Type Description ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.IDocumentCss.html": {
    "href": "api/SharpVectors.Dom.Css.IDocumentCss.html",
    "title": "Interface IDocumentCss | SharpVectors Documentation",
    "keywords": "Interface IDocumentCss This interface represents a document with a CSS view. Inherited Members IDocumentStyle.StyleSheets Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface IDocumentCss : IDocumentStyle Methods GetOverrideStyle(XmlElement, String) This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element. Declaration ICssStyleDeclaration GetOverrideStyle(XmlElement elt, string pseudoElt) Parameters Type Name Description XmlElement elt String pseudoElt Returns Type Description ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.IDomImplementationCss.html": {
    "href": "api/SharpVectors.Dom.Css.IDomImplementationCss.html",
    "title": "Interface IDomImplementationCss | SharpVectors Documentation",
    "keywords": "Interface IDomImplementationCss This interface allows the DOM user to create a ICssStyleSheet outside the context of a document. There is no way to associate the new ICssStyleSheet with a document in DOM Level 2. Inherited Members IDomImplementation.HasFeature(String, String) IDomImplementation.CreateDocumentType(String, String, String) IDomImplementation.CreateDocument(String, String, IDocumentType) Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface IDomImplementationCss : IDomImplementation Remarks This interface should inherit from IDomImplementation but System.Xml does not have this interface, just a class. You can not inherit from a class in an interface. Methods CreateCssStyleSheet(String, String) Creates a new ICssStyleSheet . Declaration ICssStyleSheet CreateCssStyleSheet(string title, string media) Parameters Type Name Description String title The advisory title. See also the Style Sheet Interfaces section. String media The comma-separated list of media associated with the new style sheet. See also the Style Sheet Interfaces section. Returns Type Description ICssStyleSheet A new CSS style sheet."
  },
  "api/SharpVectors.Dom.Css.IElementCssInlineStyle.html": {
    "href": "api/SharpVectors.Dom.Css.IElementCssInlineStyle.html",
    "title": "Interface IElementCssInlineStyle | SharpVectors Documentation",
    "keywords": "Interface IElementCssInlineStyle Inline style information attached to elements is exposed through the style attribute. Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Core.dll Syntax public interface IElementCssInlineStyle Remarks This represents the contents of the STYLE attribute for HTML elements (or elements in other schemas or DTDs which use the STYLE attribute in the same way). The expectation is that an instance of the IElementCssInlineStyle interface can be obtained by using binding-specific casting methods on an instance of the Element interface when the element supports inline CSS style informations. Properties Style The style attribute Declaration ICssStyleDeclaration Style { get; } Property Value Type Description ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.NodeChangeHandler.html": {
    "href": "api/SharpVectors.Dom.Css.NodeChangeHandler.html",
    "title": "Delegate NodeChangeHandler | SharpVectors Documentation",
    "keywords": "Delegate NodeChangeHandler Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public delegate void NodeChangeHandler(object src, XmlNodeChangedEventArgs args); Parameters Type Name Description Object src XmlNodeChangedEventArgs args"
  },
  "api/SharpVectors.Dom.Css.StaticSection.html": {
    "href": "api/SharpVectors.Dom.Css.StaticSection.html",
    "title": "Class StaticSection | SharpVectors Documentation",
    "keywords": "Class StaticSection Creates a static section for a CssXmlDocument. Typical use: using(StaticSection.Use(doc)) { // blah blah } Inheritance Object StaticSection Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Css Assembly : SharpVectors.Css.dll Syntax public sealed class StaticSection : IDisposable Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Use(CssXmlDocument) Uses the specified CSS XML document with Static state to true. Declaration public static IDisposable Use(CssXmlDocument cssXmlDocument) Parameters Type Name Description CssXmlDocument cssXmlDocument The CSS XML document. Returns Type Description IDisposable Implements System.IDisposable"
  },
  "api/SharpVectors.Dom.CssConstants.html": {
    "href": "api/SharpVectors.Dom.CssConstants.html",
    "title": "Class CssConstants | SharpVectors Documentation",
    "keywords": "Class CssConstants This interface defines constants for CSS. Inheritance Object CssConstants Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public static class CssConstants Fields MimeType Declaration public const string MimeType = \"text/css\" Field Value Type Description String PropAlignmentBaseline Declaration public const string PropAlignmentBaseline = \"alignment-baseline\" Field Value Type Description String PropBaselineShift Declaration public const string PropBaselineShift = \"baseline-shift\" Field Value Type Description String PropClip Declaration public const string PropClip = \"clip\" Field Value Type Description String PropClipPath Declaration public const string PropClipPath = \"clip-path\" Field Value Type Description String PropClipRule Declaration public const string PropClipRule = \"clip-rule\" Field Value Type Description String PropColor Declaration public const string PropColor = \"color\" Field Value Type Description String PropColorInterpolation Declaration public const string PropColorInterpolation = \"color-interpolation\" Field Value Type Description String PropColorInterpolationFilters Declaration public const string PropColorInterpolationFilters = \"color-interpolation-filters\" Field Value Type Description String PropColorProfile Declaration public const string PropColorProfile = \"color-profile\" Field Value Type Description String PropColorRendering Declaration public const string PropColorRendering = \"color-rendering\" Field Value Type Description String PropCursor Declaration public const string PropCursor = \"cursor\" Field Value Type Description String PropDirection Declaration public const string PropDirection = \"direction\" Field Value Type Description String PropDisplay Declaration public const string PropDisplay = \"display\" Field Value Type Description String PropDominantBaseline Declaration public const string PropDominantBaseline = \"dominant-baseline\" Field Value Type Description String PropEnableBackground Declaration public const string PropEnableBackground = \"enable-background\" Field Value Type Description String PropFill Declaration public const string PropFill = \"fill\" Field Value Type Description String PropFillOpacity Declaration public const string PropFillOpacity = \"fill-opacity\" Field Value Type Description String PropFillRule Declaration public const string PropFillRule = \"fill-rule\" Field Value Type Description String PropFilter Declaration public const string PropFilter = \"filter\" Field Value Type Description String PropFloodColor Declaration public const string PropFloodColor = \"flood-color\" Field Value Type Description String PropFloodOpacity Declaration public const string PropFloodOpacity = \"flood-opacity\" Field Value Type Description String PropFont Declaration public const string PropFont = \"font\" Field Value Type Description String PropFontFamily Declaration public const string PropFontFamily = \"font-family\" Field Value Type Description String PropFontSize Declaration public const string PropFontSize = \"font-size\" Field Value Type Description String PropFontSizeAdjust Declaration public const string PropFontSizeAdjust = \"font-size-adjust\" Field Value Type Description String PropFontStretch Declaration public const string PropFontStretch = \"font-stretch\" Field Value Type Description String PropFontStyle Declaration public const string PropFontStyle = \"font-style\" Field Value Type Description String PropFontVariant Declaration public const string PropFontVariant = \"font-variant\" Field Value Type Description String PropFontWeight Declaration public const string PropFontWeight = \"font-weight\" Field Value Type Description String PropGlyphOrientationHorizontal Declaration public const string PropGlyphOrientationHorizontal = \"glyph-orientation-horizontal\" Field Value Type Description String PropGlyphOrientationVertical Declaration public const string PropGlyphOrientationVertical = \"glyph-orientation-vertical\" Field Value Type Description String PropImageRendering Declaration public const string PropImageRendering = \"image-rendering\" Field Value Type Description String PropKerning Declaration public const string PropKerning = \"kerning\" Field Value Type Description String PropLetterSpacing Declaration public const string PropLetterSpacing = \"letter-spacing\" Field Value Type Description String PropLightingColor Declaration public const string PropLightingColor = \"lighting-color\" Field Value Type Description String PropLineHeight Declaration public const string PropLineHeight = \"line-height\" Field Value Type Description String PropMarker Declaration public const string PropMarker = \"marker\" Field Value Type Description String PropMarkerEnd Declaration public const string PropMarkerEnd = \"marker-end\" Field Value Type Description String PropMarkerMid Declaration public const string PropMarkerMid = \"marker-mid\" Field Value Type Description String PropMarkerStart Declaration public const string PropMarkerStart = \"marker-start\" Field Value Type Description String PropMask Declaration public const string PropMask = \"mask\" Field Value Type Description String PropOpacity Declaration public const string PropOpacity = \"opacity\" Field Value Type Description String PropOverflow Declaration public const string PropOverflow = \"overflow\" Field Value Type Description String PropPointerEvents Declaration public const string PropPointerEvents = \"pointer-events\" Field Value Type Description String PropShapeRendering Declaration public const string PropShapeRendering = \"shape-rendering\" Field Value Type Description String PropSrc Declaration public const string PropSrc = \"src\" Field Value Type Description String PropStopColor Declaration public const string PropStopColor = \"stop-color\" Field Value Type Description String PropStopOpacity Declaration public const string PropStopOpacity = \"stop-opacity\" Field Value Type Description String PropStroke Declaration public const string PropStroke = \"stroke\" Field Value Type Description String PropStrokeDasharray Declaration public const string PropStrokeDasharray = \"stroke-dasharray\" Field Value Type Description String PropStrokeDashoffset Declaration public const string PropStrokeDashoffset = \"stroke-dashoffset\" Field Value Type Description String PropStrokeLinecap Declaration public const string PropStrokeLinecap = \"stroke-linecap\" Field Value Type Description String PropStrokeLinejoin Declaration public const string PropStrokeLinejoin = \"stroke-linejoin\" Field Value Type Description String PropStrokeMiterlimit Declaration public const string PropStrokeMiterlimit = \"stroke-miterlimit\" Field Value Type Description String PropStrokeOpacity Declaration public const string PropStrokeOpacity = \"stroke-opacity\" Field Value Type Description String PropStrokeWidth Declaration public const string PropStrokeWidth = \"stroke-width\" Field Value Type Description String PropTextAnchor Declaration public const string PropTextAnchor = \"text-anchor\" Field Value Type Description String PropTextDecoration Declaration public const string PropTextDecoration = \"text-decoration\" Field Value Type Description String PropTextRendering Declaration public const string PropTextRendering = \"text-rendering\" Field Value Type Description String PropUnicodeBidi Declaration public const string PropUnicodeBidi = \"unicode-bidi\" Field Value Type Description String PropVisibility Declaration public const string PropVisibility = \"visibility\" Field Value Type Description String PropWordSpacing Declaration public const string PropWordSpacing = \"word-spacing\" Field Value Type Description String PropWritingMode Declaration public const string PropWritingMode = \"writing-mode\" Field Value Type Description String TrimUri Declaration public static readonly char[] TrimUri Field Value Type Description Char [] ValAccumulate Declaration public const string ValAccumulate = \"accumulate\" Field Value Type Description String ValActiveborder Declaration public const string ValActiveborder = \"activeborder\" Field Value Type Description String ValActivecaption Declaration public const string ValActivecaption = \"activecaption\" Field Value Type Description String ValAfterEdge Declaration public const string ValAfterEdge = \"after-edge\" Field Value Type Description String ValAliceblue Declaration public const string ValAliceblue = \"aliceblue\" Field Value Type Description String ValAll Declaration public const string ValAll = \"all\" Field Value Type Description String ValAlphabetic Declaration public const string ValAlphabetic = \"alphabetic\" Field Value Type Description String ValAntiquewhite Declaration public const string ValAntiquewhite = \"antiquewhite\" Field Value Type Description String ValAppworkspace Declaration public const string ValAppworkspace = \"appworkspace\" Field Value Type Description String ValAqua Declaration public const string ValAqua = \"aqua\" Field Value Type Description String ValAquamarine Declaration public const string ValAquamarine = \"aquamarine\" Field Value Type Description String ValAuto Declaration public const string ValAuto = \"auto\" Field Value Type Description String ValAutosenseScript Declaration public const string ValAutosenseScript = \"autosense-script\" Field Value Type Description String ValAzure Declaration public const string ValAzure = \"azure\" Field Value Type Description String ValBackground Declaration public const string ValBackground = \"background\" Field Value Type Description String ValBaseline Declaration public const string ValBaseline = \"baseline\" Field Value Type Description String ValBeforeEdge Declaration public const string ValBeforeEdge = \"before-edge\" Field Value Type Description String ValBeige Declaration public const string ValBeige = \"beige\" Field Value Type Description String ValBevel Declaration public const string ValBevel = \"bevel\" Field Value Type Description String ValBidiOverride Declaration public const string ValBidiOverride = \"bidi-override\" Field Value Type Description String ValBisque Declaration public const string ValBisque = \"bisque\" Field Value Type Description String ValBlack Declaration public const string ValBlack = \"black\" Field Value Type Description String ValBlanchedalmond Declaration public const string ValBlanchedalmond = \"blanchedalmond\" Field Value Type Description String ValBlink Declaration public const string ValBlink = \"blink\" Field Value Type Description String ValBlock Declaration public const string ValBlock = \"block\" Field Value Type Description String ValBlue Declaration public const string ValBlue = \"blue\" Field Value Type Description String ValBlueviolet Declaration public const string ValBlueviolet = \"blueviolet\" Field Value Type Description String ValBold Declaration public const string ValBold = \"bold\" Field Value Type Description String ValBolder Declaration public const string ValBolder = \"bolder\" Field Value Type Description String ValBottom Declaration public const string ValBottom = \"bottom\" Field Value Type Description String ValBrown Declaration public const string ValBrown = \"brown\" Field Value Type Description String ValBurlywood Declaration public const string ValBurlywood = \"burlywood\" Field Value Type Description String ValButt Declaration public const string ValButt = \"butt\" Field Value Type Description String ValButtonface Declaration public const string ValButtonface = \"buttonface\" Field Value Type Description String ValButtonhighlight Declaration public const string ValButtonhighlight = \"buttonhighlight\" Field Value Type Description String ValButtonshadow Declaration public const string ValButtonshadow = \"buttonshadow\" Field Value Type Description String ValButtontext Declaration public const string ValButtontext = \"buttontext\" Field Value Type Description String ValCadetblue Declaration public const string ValCadetblue = \"cadetblue\" Field Value Type Description String ValCaption Declaration public const string ValCaption = \"caption\" Field Value Type Description String ValCaptiontext Declaration public const string ValCaptiontext = \"captiontext\" Field Value Type Description String ValCenter Declaration public const string ValCenter = \"center\" Field Value Type Description String ValCentral Declaration public const string ValCentral = \"central\" Field Value Type Description String ValChartreuse Declaration public const string ValChartreuse = \"chartreuse\" Field Value Type Description String ValChocolate Declaration public const string ValChocolate = \"chocolate\" Field Value Type Description String ValCollapse Declaration public const string ValCollapse = \"collapse\" Field Value Type Description String ValCompact Declaration public const string ValCompact = \"compact\" Field Value Type Description String ValCondensed Declaration public const string ValCondensed = \"condensed\" Field Value Type Description String ValCoral Declaration public const string ValCoral = \"coral\" Field Value Type Description String ValCornflowerblue Declaration public const string ValCornflowerblue = \"cornflowerblue\" Field Value Type Description String ValCornsilk Declaration public const string ValCornsilk = \"cornsilk\" Field Value Type Description String ValCrimson Declaration public const string ValCrimson = \"crimson\" Field Value Type Description String ValCrispedges Declaration public const string ValCrispedges = \"crispedges\" Field Value Type Description String ValCrosshair Declaration public const string ValCrosshair = \"crosshair\" Field Value Type Description String ValCurrentcolor Declaration public const string ValCurrentcolor = \"currentcolor\" Field Value Type Description String ValCursive Declaration public const string ValCursive = \"cursive\" Field Value Type Description String ValCyan Declaration public const string ValCyan = \"cyan\" Field Value Type Description String ValDarkblue Declaration public const string ValDarkblue = \"darkblue\" Field Value Type Description String ValDarkcyan Declaration public const string ValDarkcyan = \"darkcyan\" Field Value Type Description String ValDarkgoldenrod Declaration public const string ValDarkgoldenrod = \"darkgoldenrod\" Field Value Type Description String ValDarkgray Declaration public const string ValDarkgray = \"darkgray\" Field Value Type Description String ValDarkgreen Declaration public const string ValDarkgreen = \"darkgreen\" Field Value Type Description String ValDarkgrey Declaration public const string ValDarkgrey = \"darkgrey\" Field Value Type Description String ValDarkkhaki Declaration public const string ValDarkkhaki = \"darkkhaki\" Field Value Type Description String ValDarkmagenta Declaration public const string ValDarkmagenta = \"darkmagenta\" Field Value Type Description String ValDarkolivegreen Declaration public const string ValDarkolivegreen = \"darkolivegreen\" Field Value Type Description String ValDarkorange Declaration public const string ValDarkorange = \"darkorange\" Field Value Type Description String ValDarkorchid Declaration public const string ValDarkorchid = \"darkorchid\" Field Value Type Description String ValDarkred Declaration public const string ValDarkred = \"darkred\" Field Value Type Description String ValDarksalmon Declaration public const string ValDarksalmon = \"darksalmon\" Field Value Type Description String ValDarkseagreen Declaration public const string ValDarkseagreen = \"darkseagreen\" Field Value Type Description String ValDarkslateblue Declaration public const string ValDarkslateblue = \"darkslateblue\" Field Value Type Description String ValDarkslategray Declaration public const string ValDarkslategray = \"darkslategray\" Field Value Type Description String ValDarkslategrey Declaration public const string ValDarkslategrey = \"darkslategrey\" Field Value Type Description String ValDarkturquoise Declaration public const string ValDarkturquoise = \"darkturquoise\" Field Value Type Description String ValDarkviolet Declaration public const string ValDarkviolet = \"darkviolet\" Field Value Type Description String ValDeeppink Declaration public const string ValDeeppink = \"deeppink\" Field Value Type Description String ValDeepskyblue Declaration public const string ValDeepskyblue = \"deepskyblue\" Field Value Type Description String ValDefault Declaration public const string ValDefault = \"default\" Field Value Type Description String ValDimgray Declaration public const string ValDimgray = \"dimgray\" Field Value Type Description String ValDimgrey Declaration public const string ValDimgrey = \"dimgrey\" Field Value Type Description String ValDodgerblue Declaration public const string ValDodgerblue = \"dodgerblue\" Field Value Type Description String ValEmbed Declaration public const string ValEmbed = \"embed\" Field Value Type Description String ValEnd Declaration public const string ValEnd = \"end\" Field Value Type Description String ValEResize Declaration public const string ValEResize = \"e-resize\" Field Value Type Description String ValEvenodd Declaration public const string ValEvenodd = \"evenodd\" Field Value Type Description String ValExpanded Declaration public const string ValExpanded = \"expanded\" Field Value Type Description String ValExtraCondensed Declaration public const string ValExtraCondensed = \"extra-condensed\" Field Value Type Description String ValExtraExpanded Declaration public const string ValExtraExpanded = \"extra-expanded\" Field Value Type Description String ValFantasy Declaration public const string ValFantasy = \"fantasy\" Field Value Type Description String ValFill Declaration public const string ValFill = \"fill\" Field Value Type Description String ValFillstroke Declaration public const string ValFillstroke = \"fillstroke\" Field Value Type Description String ValFirebrick Declaration public const string ValFirebrick = \"firebrick\" Field Value Type Description String ValFloralwhite Declaration public const string ValFloralwhite = \"floralwhite\" Field Value Type Description String ValForestgreen Declaration public const string ValForestgreen = \"forestgreen\" Field Value Type Description String ValFuchsia Declaration public const string ValFuchsia = \"fuchsia\" Field Value Type Description String ValGainsboro Declaration public const string ValGainsboro = \"gainsboro\" Field Value Type Description String ValGeometricprecision Declaration public const string ValGeometricprecision = \"geometricprecision\" Field Value Type Description String ValGhostwhite Declaration public const string ValGhostwhite = \"ghostwhite\" Field Value Type Description String ValGold Declaration public const string ValGold = \"gold\" Field Value Type Description String ValGoldenrod Declaration public const string ValGoldenrod = \"goldenrod\" Field Value Type Description String ValGray Declaration public const string ValGray = \"gray\" Field Value Type Description String ValGraytext Declaration public const string ValGraytext = \"graytext\" Field Value Type Description String ValGreen Declaration public const string ValGreen = \"green\" Field Value Type Description String ValGreenyellow Declaration public const string ValGreenyellow = \"greenyellow\" Field Value Type Description String ValGrey Declaration public const string ValGrey = \"grey\" Field Value Type Description String ValHanging Declaration public const string ValHanging = \"hanging\" Field Value Type Description String ValHelp Declaration public const string ValHelp = \"help\" Field Value Type Description String ValHidden Declaration public const string ValHidden = \"hidden\" Field Value Type Description String ValHighlight Declaration public const string ValHighlight = \"highlight\" Field Value Type Description String ValHighlighttext Declaration public const string ValHighlighttext = \"highlighttext\" Field Value Type Description String ValHoneydew Declaration public const string ValHoneydew = \"honeydew\" Field Value Type Description String ValHotpink Declaration public const string ValHotpink = \"hotpink\" Field Value Type Description String ValIcon Declaration public const string ValIcon = \"icon\" Field Value Type Description String ValIdeographic Declaration public const string ValIdeographic = \"ideographic\" Field Value Type Description String ValInactiveborder Declaration public const string ValInactiveborder = \"inactiveborder\" Field Value Type Description String ValInactivecaption Declaration public const string ValInactivecaption = \"inactivecaption\" Field Value Type Description String ValInactivecaptiontext Declaration public const string ValInactivecaptiontext = \"inactivecaptiontext\" Field Value Type Description String ValIndianred Declaration public const string ValIndianred = \"indianred\" Field Value Type Description String ValIndigo Declaration public const string ValIndigo = \"indigo\" Field Value Type Description String ValInfobackground Declaration public const string ValInfobackground = \"infobackground\" Field Value Type Description String ValInfotext Declaration public const string ValInfotext = \"infotext\" Field Value Type Description String ValInline Declaration public const string ValInline = \"inline\" Field Value Type Description String ValInlineTable Declaration public const string ValInlineTable = \"inline-table\" Field Value Type Description String ValItalic Declaration public const string ValItalic = \"italic\" Field Value Type Description String ValIvory Declaration public const string ValIvory = \"ivory\" Field Value Type Description String ValKhaki Declaration public const string ValKhaki = \"khaki\" Field Value Type Description String ValLarge Declaration public const string ValLarge = \"large\" Field Value Type Description String ValLarger Declaration public const string ValLarger = \"larger\" Field Value Type Description String ValLavender Declaration public const string ValLavender = \"lavender\" Field Value Type Description String ValLavenderblush Declaration public const string ValLavenderblush = \"lavenderblush\" Field Value Type Description String ValLawngreen Declaration public const string ValLawngreen = \"lawngreen\" Field Value Type Description String ValLemonchiffon Declaration public const string ValLemonchiffon = \"lemonchiffon\" Field Value Type Description String ValLightblue Declaration public const string ValLightblue = \"lightblue\" Field Value Type Description String ValLightcoral Declaration public const string ValLightcoral = \"lightcoral\" Field Value Type Description String ValLightcyan Declaration public const string ValLightcyan = \"lightcyan\" Field Value Type Description String ValLighter Declaration public const string ValLighter = \"lighter\" Field Value Type Description String ValLightgoldenrodyellow Declaration public const string ValLightgoldenrodyellow = \"lightgoldenrodyellow\" Field Value Type Description String ValLightgray Declaration public const string ValLightgray = \"lightgray\" Field Value Type Description String ValLightgreen Declaration public const string ValLightgreen = \"lightgreen\" Field Value Type Description String ValLightgrey Declaration public const string ValLightgrey = \"lightgrey\" Field Value Type Description String ValLightpink Declaration public const string ValLightpink = \"lightpink\" Field Value Type Description String ValLightsalmon Declaration public const string ValLightsalmon = \"lightsalmon\" Field Value Type Description String ValLightseagreen Declaration public const string ValLightseagreen = \"lightseagreen\" Field Value Type Description String ValLightskyblue Declaration public const string ValLightskyblue = \"lightskyblue\" Field Value Type Description String ValLightslategray Declaration public const string ValLightslategray = \"lightslategray\" Field Value Type Description String ValLightslategrey Declaration public const string ValLightslategrey = \"lightslategrey\" Field Value Type Description String ValLightsteelblue Declaration public const string ValLightsteelblue = \"lightsteelblue\" Field Value Type Description String ValLightyellow Declaration public const string ValLightyellow = \"lightyellow\" Field Value Type Description String ValLime Declaration public const string ValLime = \"lime\" Field Value Type Description String ValLimegreen Declaration public const string ValLimegreen = \"limegreen\" Field Value Type Description String ValLinearRgb Declaration public const string ValLinearRgb = \"linearRGB\" Field Value Type Description String ValLinen Declaration public const string ValLinen = \"linen\" Field Value Type Description String ValLineThrough Declaration public const string ValLineThrough = \"line-through\" Field Value Type Description String ValListItem Declaration public const string ValListItem = \"list-item\" Field Value Type Description String ValLower Declaration public const string ValLower = \"lower\" Field Value Type Description String ValLr Declaration public const string ValLr = \"lr\" Field Value Type Description String ValLrTb Declaration public const string ValLrTb = \"lr-tb\" Field Value Type Description String ValLtr Declaration public const string ValLtr = \"ltr\" Field Value Type Description String ValMagenta Declaration public const string ValMagenta = \"magenta\" Field Value Type Description String ValMarker Declaration public const string ValMarker = \"marker\" Field Value Type Description String ValMaroon Declaration public const string ValMaroon = \"maroon\" Field Value Type Description String ValMathematical Declaration public const string ValMathematical = \"mathematical\" Field Value Type Description String ValMedium Declaration public const string ValMedium = \"medium\" Field Value Type Description String ValMediumaquamarine Declaration public const string ValMediumaquamarine = \"mediumaquamarine\" Field Value Type Description String ValMediumblue Declaration public const string ValMediumblue = \"mediumblue\" Field Value Type Description String ValMediumorchid Declaration public const string ValMediumorchid = \"mediumorchid\" Field Value Type Description String ValMediumpurple Declaration public const string ValMediumpurple = \"mediumpurple\" Field Value Type Description String ValMediumseagreen Declaration public const string ValMediumseagreen = \"mediumseagreen\" Field Value Type Description String ValMediumslateblue Declaration public const string ValMediumslateblue = \"mediumslateblue\" Field Value Type Description String ValMediumspringgreen Declaration public const string ValMediumspringgreen = \"mediumspringgreen\" Field Value Type Description String ValMediumturquoise Declaration public const string ValMediumturquoise = \"mediumturquoise\" Field Value Type Description String ValMediumvioletred Declaration public const string ValMediumvioletred = \"mediumvioletred\" Field Value Type Description String ValMenu Declaration public const string ValMenu = \"menu\" Field Value Type Description String ValMenutext Declaration public const string ValMenutext = \"menutext\" Field Value Type Description String ValMessageBox Declaration public const string ValMessageBox = \"message-box\" Field Value Type Description String ValMiddle Declaration public const string ValMiddle = \"middle\" Field Value Type Description String ValMidnightblue Declaration public const string ValMidnightblue = \"midnightblue\" Field Value Type Description String ValMintcream Declaration public const string ValMintcream = \"mintcream\" Field Value Type Description String ValMistyrose Declaration public const string ValMistyrose = \"mistyrose\" Field Value Type Description String ValMiter Declaration public const string ValMiter = \"miter\" Field Value Type Description String ValMoccasin Declaration public const string ValMoccasin = \"moccasin\" Field Value Type Description String ValMonospace Declaration public const string ValMonospace = \"monospace\" Field Value Type Description String ValMove Declaration public const string ValMove = \"move\" Field Value Type Description String ValNarrower Declaration public const string ValNarrower = \"narrower\" Field Value Type Description String ValNavajowhite Declaration public const string ValNavajowhite = \"navajowhite\" Field Value Type Description String ValNavy Declaration public const string ValNavy = \"navy\" Field Value Type Description String ValNeResize Declaration public const string ValNeResize = \"ne-resize\" Field Value Type Description String ValNew Declaration public const string ValNew = \"new\" Field Value Type Description String ValNoChange Declaration public const string ValNoChange = \"no-change\" Field Value Type Description String ValNone Declaration public const string ValNone = \"none\" Field Value Type Description String ValNonzero Declaration public const string ValNonzero = \"nonzero\" Field Value Type Description String ValNormal Declaration public const string ValNormal = \"normal\" Field Value Type Description String ValNResize Declaration public const string ValNResize = \"n-resize\" Field Value Type Description String ValNwResize Declaration public const string ValNwResize = \"nw-resize\" Field Value Type Description String ValOblique Declaration public const string ValOblique = \"oblique\" Field Value Type Description String ValOldlace Declaration public const string ValOldlace = \"oldlace\" Field Value Type Description String ValOlive Declaration public const string ValOlive = \"olive\" Field Value Type Description String ValOlivedrab Declaration public const string ValOlivedrab = \"olivedrab\" Field Value Type Description String ValOptimizelegibility Declaration public const string ValOptimizelegibility = \"optimizelegibility\" Field Value Type Description String ValOptimizequality Declaration public const string ValOptimizequality = \"optimizequality\" Field Value Type Description String ValOptimizespeed Declaration public const string ValOptimizespeed = \"optimizespeed\" Field Value Type Description String ValOrange Declaration public const string ValOrange = \"orange\" Field Value Type Description String ValOrangered Declaration public const string ValOrangered = \"orangered\" Field Value Type Description String ValOrchid Declaration public const string ValOrchid = \"orchid\" Field Value Type Description String ValOverline Declaration public const string ValOverline = \"overline\" Field Value Type Description String ValPainted Declaration public const string ValPainted = \"painted\" Field Value Type Description String ValPalegoldenrod Declaration public const string ValPalegoldenrod = \"palegoldenrod\" Field Value Type Description String ValPalegreen Declaration public const string ValPalegreen = \"palegreen\" Field Value Type Description String ValPaleturquoise Declaration public const string ValPaleturquoise = \"paleturquoise\" Field Value Type Description String ValPalevioletred Declaration public const string ValPalevioletred = \"palevioletred\" Field Value Type Description String ValPapayawhip Declaration public const string ValPapayawhip = \"papayawhip\" Field Value Type Description String ValPeachpuff Declaration public const string ValPeachpuff = \"peachpuff\" Field Value Type Description String ValPeru Declaration public const string ValPeru = \"peru\" Field Value Type Description String ValPink Declaration public const string ValPink = \"pink\" Field Value Type Description String ValPlum Declaration public const string ValPlum = \"plum\" Field Value Type Description String ValPointer Declaration public const string ValPointer = \"pointer\" Field Value Type Description String ValPowderblue Declaration public const string ValPowderblue = \"powderblue\" Field Value Type Description String ValPurple Declaration public const string ValPurple = \"purple\" Field Value Type Description String ValRed Declaration public const string ValRed = \"red\" Field Value Type Description String ValReset Declaration public const string ValReset = \"reset\" Field Value Type Description String ValResetSize Declaration public const string ValResetSize = \"reset-size\" Field Value Type Description String ValRl Declaration public const string ValRl = \"rl\" Field Value Type Description String ValRlTb Declaration public const string ValRlTb = \"rl-tb\" Field Value Type Description String ValRosybrown Declaration public const string ValRosybrown = \"rosybrown\" Field Value Type Description String ValRound Declaration public const string ValRound = \"round\" Field Value Type Description String ValRoyalblue Declaration public const string ValRoyalblue = \"royalblue\" Field Value Type Description String ValRtl Declaration public const string ValRtl = \"rtl\" Field Value Type Description String ValRunIn Declaration public const string ValRunIn = \"run-in\" Field Value Type Description String ValSaddlebrown Declaration public const string ValSaddlebrown = \"saddlebrown\" Field Value Type Description String ValSalmon Declaration public const string ValSalmon = \"salmon\" Field Value Type Description String ValSandybrown Declaration public const string ValSandybrown = \"sandybrown\" Field Value Type Description String ValSansSerif Declaration public const string ValSansSerif = \"sans-serif\" Field Value Type Description String ValScroll Declaration public const string ValScroll = \"scroll\" Field Value Type Description String ValScrollbar Declaration public const string ValScrollbar = \"scrollbar\" Field Value Type Description String ValSeagreen Declaration public const string ValSeagreen = \"seagreen\" Field Value Type Description String ValSeashell Declaration public const string ValSeashell = \"seashell\" Field Value Type Description String ValSemiCondensed Declaration public const string ValSemiCondensed = \"semi-condensed\" Field Value Type Description String ValSemiExpanded Declaration public const string ValSemiExpanded = \"semi-expanded\" Field Value Type Description String ValSeResize Declaration public const string ValSeResize = \"se-resize\" Field Value Type Description String ValSerif Declaration public const string ValSerif = \"serif\" Field Value Type Description String ValSienna Declaration public const string ValSienna = \"sienna\" Field Value Type Description String ValSilver Declaration public const string ValSilver = \"silver\" Field Value Type Description String ValSkyblue Declaration public const string ValSkyblue = \"skyblue\" Field Value Type Description String ValSlateblue Declaration public const string ValSlateblue = \"slateblue\" Field Value Type Description String ValSlategray Declaration public const string ValSlategray = \"slategray\" Field Value Type Description String ValSlategrey Declaration public const string ValSlategrey = \"slategrey\" Field Value Type Description String ValSmall Declaration public const string ValSmall = \"small\" Field Value Type Description String ValSmallCaps Declaration public const string ValSmallCaps = \"small-caps\" Field Value Type Description String ValSmallCaption Declaration public const string ValSmallCaption = \"small-caption\" Field Value Type Description String ValSmaller Declaration public const string ValSmaller = \"smaller\" Field Value Type Description String ValSnow Declaration public const string ValSnow = \"snow\" Field Value Type Description String ValSpringgreen Declaration public const string ValSpringgreen = \"springgreen\" Field Value Type Description String ValSquare Declaration public const string ValSquare = \"square\" Field Value Type Description String ValSResize Declaration public const string ValSResize = \"s-resize\" Field Value Type Description String ValSrgb Declaration public const string ValSrgb = \"srgb\" Field Value Type Description String ValStart Declaration public const string ValStart = \"start\" Field Value Type Description String ValStatusBar Declaration public const string ValStatusBar = \"status-bar\" Field Value Type Description String ValSteelblue Declaration public const string ValSteelblue = \"steelblue\" Field Value Type Description String ValStroke Declaration public const string ValStroke = \"stroke\" Field Value Type Description String ValSub Declaration public const string ValSub = \"sub\" Field Value Type Description String ValSuper Declaration public const string ValSuper = \"super\" Field Value Type Description String ValSwResize Declaration public const string ValSwResize = \"sw-resize\" Field Value Type Description String ValTable Declaration public const string ValTable = \"table\" Field Value Type Description String ValTableCaption Declaration public const string ValTableCaption = \"table-caption\" Field Value Type Description String ValTableCell Declaration public const string ValTableCell = \"table-cell\" Field Value Type Description String ValTableColumn Declaration public const string ValTableColumn = \"table-column\" Field Value Type Description String ValTableColumnGroup Declaration public const string ValTableColumnGroup = \"table-column-group\" Field Value Type Description String ValTableFooterGroup Declaration public const string ValTableFooterGroup = \"table-footer-group\" Field Value Type Description String ValTableHeaderGroup Declaration public const string ValTableHeaderGroup = \"table-header-group\" Field Value Type Description String ValTableRow Declaration public const string ValTableRow = \"table-row\" Field Value Type Description String ValTableRowGroup Declaration public const string ValTableRowGroup = \"table-row-group\" Field Value Type Description String ValTan Declaration public const string ValTan = \"tan\" Field Value Type Description String ValTb Declaration public const string ValTb = \"tb\" Field Value Type Description String ValTbRl Declaration public const string ValTbRl = \"tb-rl\" Field Value Type Description String ValTeal Declaration public const string ValTeal = \"teal\" Field Value Type Description String ValText Declaration public const string ValText = \"text\" Field Value Type Description String ValTextAfterEdge Declaration public const string ValTextAfterEdge = \"text-after-edge\" Field Value Type Description String ValTextBeforeEdge Declaration public const string ValTextBeforeEdge = \"text-before-edge\" Field Value Type Description String ValTextBottom Declaration public const string ValTextBottom = \"text-bottom\" Field Value Type Description String ValTextTop Declaration public const string ValTextTop = \"text-top\" Field Value Type Description String ValThistle Declaration public const string ValThistle = \"thistle\" Field Value Type Description String ValThreeddarkshadow Declaration public const string ValThreeddarkshadow = \"threeddarkshadow\" Field Value Type Description String ValThreedface Declaration public const string ValThreedface = \"threedface\" Field Value Type Description String ValThreedhighlight Declaration public const string ValThreedhighlight = \"threedhighlight\" Field Value Type Description String ValThreedlightshadow Declaration public const string ValThreedlightshadow = \"threedlightshadow\" Field Value Type Description String ValThreedshadow Declaration public const string ValThreedshadow = \"threedshadow\" Field Value Type Description String ValTomato Declaration public const string ValTomato = \"tomato\" Field Value Type Description String ValTop Declaration public const string ValTop = \"top\" Field Value Type Description String ValTriangle Declaration public const string ValTriangle = \"triangle\" Field Value Type Description String ValTurquoise Declaration public const string ValTurquoise = \"turquoise\" Field Value Type Description String ValUltraCondensed Declaration public const string ValUltraCondensed = \"ultra-condensed\" Field Value Type Description String ValUltraExpanded Declaration public const string ValUltraExpanded = \"ultra-expanded\" Field Value Type Description String ValUnderline Declaration public const string ValUnderline = \"underline\" Field Value Type Description String ValUseScript Declaration public const string ValUseScript = \"use-script\" Field Value Type Description String ValViolet Declaration public const string ValViolet = \"violet\" Field Value Type Description String ValVisible Declaration public const string ValVisible = \"visible\" Field Value Type Description String ValVisiblefill Declaration public const string ValVisiblefill = \"visiblefill\" Field Value Type Description String ValVisiblefillstroke Declaration public const string ValVisiblefillstroke = \"visiblefillstroke\" Field Value Type Description String ValVisiblepainted Declaration public const string ValVisiblepainted = \"visiblepainted\" Field Value Type Description String ValVisiblestroke Declaration public const string ValVisiblestroke = \"visiblestroke\" Field Value Type Description String ValWait Declaration public const string ValWait = \"wait\" Field Value Type Description String ValWheat Declaration public const string ValWheat = \"wheat\" Field Value Type Description String ValWhite Declaration public const string ValWhite = \"white\" Field Value Type Description String ValWhitesmoke Declaration public const string ValWhitesmoke = \"whitesmoke\" Field Value Type Description String ValWider Declaration public const string ValWider = \"wider\" Field Value Type Description String ValWindow Declaration public const string ValWindow = \"window\" Field Value Type Description String ValWindowframe Declaration public const string ValWindowframe = \"windowframe\" Field Value Type Description String ValWindowtext Declaration public const string ValWindowtext = \"windowtext\" Field Value Type Description String ValWResize Declaration public const string ValWResize = \"w-resize\" Field Value Type Description String ValXLarge Declaration public const string ValXLarge = \"x-large\" Field Value Type Description String ValXSmall Declaration public const string ValXSmall = \"x-small\" Field Value Type Description String ValXxLarge Declaration public const string ValXxLarge = \"xx-large\" Field Value Type Description String ValXxSmall Declaration public const string ValXxSmall = \"xx-small\" Field Value Type Description String ValYellow Declaration public const string ValYellow = \"yellow\" Field Value Type Description String ValYellowgreen Declaration public const string ValYellowgreen = \"yellowgreen\" Field Value Type Description String"
  },
  "api/SharpVectors.Dom.Declaration.html": {
    "href": "api/SharpVectors.Dom.Declaration.html",
    "title": "Class Declaration | SharpVectors Documentation",
    "keywords": "Class Declaration Summary description for Declaration. Inheritance Object XmlNode XmlLinkedNode XmlDeclaration Declaration Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlDeclaration.CloneNode(Boolean) XmlDeclaration.WriteTo(XmlWriter) XmlDeclaration.WriteContentTo(XmlWriter) XmlDeclaration.Version XmlDeclaration.Encoding XmlDeclaration.Standalone XmlDeclaration.Value XmlDeclaration.InnerText XmlDeclaration.Name XmlDeclaration.LocalName XmlDeclaration.NodeType XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class Declaration : XmlDeclaration, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors Declaration(String, String, String, Document) Declaration protected Declaration(string version, string encoding, string standAlone, Document document) Parameters Type Name Description String version String encoding String standAlone Document document Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.Document.html": {
    "href": "api/SharpVectors.Dom.Document.html",
    "title": "Class Document | SharpVectors Documentation",
    "keywords": "Class Document Summary description for Document. Inheritance Object XmlNode XmlDocument Document CssXmlDocument Implements ICloneable IEnumerable IXPathNavigable IDocument INode IXmlNode IEventTargetSupport IEventTarget IDocumentEvent Inherited Members XmlDocument.CloneNode(Boolean) XmlDocument.CreateAttribute(String) XmlDocument.CreateElement(String) XmlDocument.CreateNavigator() XmlDocument.CreateNavigator(XmlNode) XmlDocument.GetElementsByTagName(String) XmlDocument.CreateAttribute(String, String) XmlDocument.CreateElement(String, String) XmlDocument.GetElementsByTagName(String, String) XmlDocument.GetElementById(String) XmlDocument.ImportNode(XmlNode, Boolean) XmlDocument.CreateDefaultAttribute(String, String, String) XmlDocument.CreateNode(XmlNodeType, String, String, String) XmlDocument.CreateNode(String, String, String) XmlDocument.CreateNode(XmlNodeType, String, String) XmlDocument.ReadNode(XmlReader) XmlDocument.Load(String) XmlDocument.Load(Stream) XmlDocument.Load(TextReader) XmlDocument.Load(XmlReader) XmlDocument.LoadXml(String) XmlDocument.Save(String) XmlDocument.Save(Stream) XmlDocument.Save(TextWriter) XmlDocument.Save(XmlWriter) XmlDocument.WriteTo(XmlWriter) XmlDocument.WriteContentTo(XmlWriter) XmlDocument.Validate(ValidationEventHandler) XmlDocument.Validate(ValidationEventHandler, XmlNode) XmlDocument.NodeType XmlDocument.ParentNode XmlDocument.DocumentType XmlDocument.Implementation XmlDocument.Name XmlDocument.LocalName XmlDocument.DocumentElement XmlDocument.OwnerDocument XmlDocument.Schemas XmlDocument.XmlResolver XmlDocument.NameTable XmlDocument.PreserveWhitespace XmlDocument.IsReadOnly XmlDocument.InnerText XmlDocument.InnerXml XmlDocument.SchemaInfo XmlDocument.BaseURI XmlDocument.NodeInserting XmlDocument.NodeInserted XmlDocument.NodeRemoving XmlDocument.NodeRemoved XmlDocument.NodeChanging XmlDocument.NodeChanged XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.OuterXml XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class Document : XmlDocument, ICloneable, IEnumerable, IXPathNavigable, IDocument, INode, IXmlNode, IEventTargetSupport, IEventTarget, IDocumentEvent Constructors Document() Declaration public Document() Document(DomImplementation) Declaration protected Document(DomImplementation domImplementation) Parameters Type Name Description DomImplementation domImplementation Document(XmlNameTable) Declaration public Document(XmlNameTable nameTable) Parameters Type Name Description XmlNameTable nameTable Properties MutationEvents Enables or disables mutation events. Declaration public bool MutationEvents { get; set; } Property Value Type Description Boolean Methods CanDispatch(String, String) Declaration public virtual bool CanDispatch(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean CreateAttribute(String, String, String) Declaration public override XmlAttribute CreateAttribute(string prefix, string localName, string namespaceURI) Parameters Type Name Description String prefix String localName String namespaceURI Returns Type Description XmlAttribute Overrides XmlDocument.CreateAttribute(String, String, String) CreateCDataSection(String) Declaration public override XmlCDataSection CreateCDataSection(string data) Parameters Type Name Description String data Returns Type Description XmlCDataSection Overrides XmlDocument.CreateCDataSection(String) CreateComment(String) Declaration public override XmlComment CreateComment(string data) Parameters Type Name Description String data Returns Type Description XmlComment Overrides XmlDocument.CreateComment(String) CreateDocumentFragment() Declaration public override XmlDocumentFragment CreateDocumentFragment() Returns Type Description XmlDocumentFragment Overrides XmlDocument.CreateDocumentFragment() CreateDocumentType(String, String, String, String) Declaration public override XmlDocumentType CreateDocumentType(string name, string publicId, string systemId, string internalSubset) Parameters Type Name Description String name String publicId String systemId String internalSubset Returns Type Description XmlDocumentType Overrides XmlDocument.CreateDocumentType(String, String, String, String) CreateElement(String, String, String) Declaration public override XmlElement CreateElement(string prefix, string localName, string namespaceURI) Parameters Type Name Description String prefix String localName String namespaceURI Returns Type Description XmlElement Overrides XmlDocument.CreateElement(String, String, String) CreateEntityReference(String) Declaration public override XmlEntityReference CreateEntityReference(string name) Parameters Type Name Description String name Returns Type Description XmlEntityReference Overrides XmlDocument.CreateEntityReference(String) CreateEvent(String) Declaration public virtual IEvent CreateEvent(string eventType) Parameters Type Name Description String eventType Returns Type Description IEvent CreateProcessingInstruction(String, String) Declaration public override XmlProcessingInstruction CreateProcessingInstruction(string target, string data) Parameters Type Name Description String target String data Returns Type Description XmlProcessingInstruction Overrides XmlDocument.CreateProcessingInstruction(String, String) CreateSignificantWhitespace(String) Declaration public override XmlSignificantWhitespace CreateSignificantWhitespace(string text) Parameters Type Name Description String text Returns Type Description XmlSignificantWhitespace Overrides XmlDocument.CreateSignificantWhitespace(String) CreateTextNode(String) Declaration public override XmlText CreateTextNode(string text) Parameters Type Name Description String text Returns Type Description XmlText Overrides XmlDocument.CreateTextNode(String) CreateWhitespace(String) Declaration public override XmlWhitespace CreateWhitespace(string text) Parameters Type Name Description String text Returns Type Description XmlWhitespace Overrides XmlDocument.CreateWhitespace(String) CreateXmlDeclaration(String, String, String) Declaration public override XmlDeclaration CreateXmlDeclaration(string version, string encoding, string standalone) Parameters Type Name Description String version String encoding String standalone Returns Type Description XmlDeclaration Overrides XmlDocument.CreateXmlDeclaration(String, String, String) DeletedText(INode, Int32, Int32) A method to be called when some text was deleted from a text node, so that live objects can be notified. Declaration protected virtual void DeletedText(INode node, int offset, int count) Parameters Type Name Description INode node Int32 offset Int32 count InsertedNode(INode, INode, Boolean) A method to be called when a node has been inserted in the tree. Declaration protected virtual void InsertedNode(INode node, INode newInternal, bool replace) Parameters Type Name Description INode node INode newInternal Boolean replace InsertedText(INode, Int32, Int32) A method to be called when some text was inserted into a text node, so that live objects can be notified. Declaration protected virtual void InsertedText(INode node, int offset, int count) Parameters Type Name Description INode node Int32 offset Int32 count InsertingNode(INode, Boolean) A method to be called when a node is about to be inserted in the tree. Declaration protected virtual void InsertingNode(INode node, bool replace) Parameters Type Name Description INode node Boolean replace ModifiedAttrValue(IAttribute, String) A method to be called when an attribute value has been modified. Declaration protected virtual void ModifiedAttrValue(IAttribute attr, string oldvalue) Parameters Type Name Description IAttribute attr String oldvalue ModifiedCharacterData(INode, String, String) A method to be called when a character data node has been modified. Declaration protected virtual void ModifiedCharacterData(INode node, string oldvalue, string value) Parameters Type Name Description INode node String oldvalue String value ModifyingCharacterData(INode) A method to be called when a character data node has been modified. Declaration protected virtual void ModifyingCharacterData(INode node) Parameters Type Name Description INode node RemovedAttrNode(IAttribute, INode, String) A method to be called when an attribute node has been removed. Declaration protected virtual void RemovedAttrNode(IAttribute attribute, INode oldOwner, string name) Parameters Type Name Description IAttribute attribute INode oldOwner String name RemovedNode(INode, Boolean) A method to be called when a node has been removed from the tree. Declaration protected virtual void RemovedNode(INode node, bool replace) Parameters Type Name Description INode node Boolean replace RemovingNode(INode, INode, Boolean) A method to be called when a node is about to be removed from the tree. Declaration protected virtual void RemovingNode(INode node, INode oldChild, bool replace) Parameters Type Name Description INode node INode oldChild Boolean replace RenamedAttrNode(IAttribute, IAttribute) A method to be called when an attribute node has been renamed. Declaration protected virtual void RenamedAttrNode(IAttribute oldAttribute, IAttribute newAttribute) Parameters Type Name Description IAttribute oldAttribute IAttribute newAttribute RenamedElement(IElement, IElement) A method to be called when an element has been renamed. Declaration protected virtual void RenamedElement(IElement oldElement, IElement newElement) Parameters Type Name Description IElement oldElement IElement newElement ReplacedNode(INode) A method to be called when a node has been replaced in the tree. Declaration protected virtual void ReplacedNode(INode node) Parameters Type Name Description INode node ReplacedText(INode) A method to be called when some text was changed in a text node, so that live objects can be notified. Declaration protected virtual void ReplacedText(INode node) Parameters Type Name Description INode node replacingNode(INode) A method to be called when a node is about to be replaced in the tree. Declaration protected virtual void replacingNode(INode node) Parameters Type Name Description INode node SetAttrNode(IAttribute, IAttribute) A method to be called when an attribute node has been set. Declaration protected virtual void SetAttrNode(IAttribute attribute, IAttribute previous) Parameters Type Name Description IAttribute attribute IAttribute previous Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs IDocument.CreateAttribute(String) Declaration IAttribute IDocument.CreateAttribute(string name) Parameters Type Name Description String name Returns Type Description IAttribute IDocument.CreateAttributeNs(String, String) Declaration IAttribute IDocument.CreateAttributeNs(string namespaceUri, string qualifiedName) Parameters Type Name Description String namespaceUri String qualifiedName Returns Type Description IAttribute IDocument.CreateCDataSection(String) Declaration ICDataSection IDocument.CreateCDataSection(string data) Parameters Type Name Description String data Returns Type Description ICDataSection IDocument.CreateComment(String) Declaration IComment IDocument.CreateComment(string data) Parameters Type Name Description String data Returns Type Description IComment IDocument.CreateDocumentFragment() Declaration IDocumentFragment IDocument.CreateDocumentFragment() Returns Type Description IDocumentFragment IDocument.CreateElement(String) Declaration IElement IDocument.CreateElement(string tagName) Parameters Type Name Description String tagName Returns Type Description IElement IDocument.CreateElementNs(String, String) Declaration IElement IDocument.CreateElementNs(string namespaceUri, string qualifiedName) Parameters Type Name Description String namespaceUri String qualifiedName Returns Type Description IElement IDocument.CreateEntityReference(String) Declaration IEntityReference IDocument.CreateEntityReference(string name) Parameters Type Name Description String name Returns Type Description IEntityReference IDocument.CreateProcessingInstruction(String, String) Declaration IProcessingInstruction IDocument.CreateProcessingInstruction(string target, string data) Parameters Type Name Description String target String data Returns Type Description IProcessingInstruction IDocument.CreateTextNode(String) Declaration IText IDocument.CreateTextNode(string data) Parameters Type Name Description String data Returns Type Description IText IDocument.Doctype Declaration IDocumentType IDocument.Doctype { get; } Returns Type Description IDocumentType IDocument.DocumentElement Declaration IElement IDocument.DocumentElement { get; } Returns Type Description IElement IDocument.GetElementById(String) Declaration IElement IDocument.GetElementById(string elementId) Parameters Type Name Description String elementId Returns Type Description IElement IDocument.GetElementsByTagName(String) Declaration INodeList IDocument.GetElementsByTagName(string tagname) Parameters Type Name Description String tagname Returns Type Description INodeList IDocument.GetElementsByTagNameNs(String, String) Declaration INodeList IDocument.GetElementsByTagNameNs(string namespaceUri, string localName) Parameters Type Name Description String namespaceUri String localName Returns Type Description INodeList IDocument.Implementation Declaration IDomImplementation IDocument.Implementation { get; } Returns Type Description IDomImplementation IDocument.ImportNode(INode, Boolean) Declaration INode IDocument.ImportNode(INode importedNode, bool deep) Parameters Type Name Description INode importedNode Boolean deep Returns Type Description INode Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IDocument INode IXmlNode IEventTargetSupport IEventTarget IDocumentEvent"
  },
  "api/SharpVectors.Dom.DocumentFragment.html": {
    "href": "api/SharpVectors.Dom.DocumentFragment.html",
    "title": "Class DocumentFragment | SharpVectors Documentation",
    "keywords": "Class DocumentFragment Summary description for DocumentFragment. Inheritance Object XmlNode XmlDocumentFragment DocumentFragment Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlDocumentFragment.CloneNode(Boolean) XmlDocumentFragment.WriteTo(XmlWriter) XmlDocumentFragment.WriteContentTo(XmlWriter) XmlDocumentFragment.Name XmlDocumentFragment.LocalName XmlDocumentFragment.NodeType XmlDocumentFragment.ParentNode XmlDocumentFragment.OwnerDocument XmlDocumentFragment.InnerXml XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.InnerText XmlNode.OuterXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class DocumentFragment : XmlDocumentFragment, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors DocumentFragment(Document) Declaration protected DocumentFragment(Document document) Parameters Type Name Description Document document Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.DocumentType.html": {
    "href": "api/SharpVectors.Dom.DocumentType.html",
    "title": "Class DocumentType | SharpVectors Documentation",
    "keywords": "Class DocumentType Summary description for DocumentType. Inheritance Object XmlNode XmlLinkedNode XmlDocumentType DocumentType Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlDocumentType.CloneNode(Boolean) XmlDocumentType.WriteTo(XmlWriter) XmlDocumentType.WriteContentTo(XmlWriter) XmlDocumentType.Name XmlDocumentType.LocalName XmlDocumentType.NodeType XmlDocumentType.IsReadOnly XmlDocumentType.Entities XmlDocumentType.Notations XmlDocumentType.PublicId XmlDocumentType.SystemId XmlDocumentType.InternalSubset XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.InnerText XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class DocumentType : XmlDocumentType, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors DocumentType(String, String, String, String, Document) Declaration public DocumentType(string name, string publicId, string systemId, string internalSubset, Document document) Parameters Type Name Description String name String publicId String systemId String internalSubset Document document Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.DomException.html": {
    "href": "api/SharpVectors.Dom.DomException.html",
    "title": "Class DomException | SharpVectors Documentation",
    "keywords": "Class DomException Represents errors that occur during DOM operation execution. Inheritance Object Exception DomException SvgException SvgExternalResourcesRequiredException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax [Serializable] public class DomException : Exception, ISerializable, _Exception Remarks DOM operations only raise exceptions in \"exceptional\" circumstances, i.e., when an operation is impossible to perform (either for logical reasons, because data is lost, or because the implementation has become unstable). In general, DOM methods return specific error values in ordinary processing situations, such as out-of-bound errors when using INodeList . Implementations should raise other exceptions under other circumstances. For example, implementations should raise an implementation-dependent exception if a null argument is passed. Some languages and object systems do not support the concept of exceptions. For such systems, error conditions may be indicated using native error reporting mechanisms. For some bindings, for example, methods may return error codes similar to those listed in the corresponding method descriptions. Constructors DomException() Initializes a new instance of the System.Exception class. Declaration public DomException() DomException(DomExceptionType) Initializes a new instance of the System.Exception class with a specified error code. Declaration public DomException(DomExceptionType code) Parameters Type Name Description DomExceptionType code The DOM exception code. DomException(DomExceptionType, String) Initializes a new instance of the System.Exception class with a specified error message and error code. Declaration public DomException(DomExceptionType code, string msg) Parameters Type Name Description DomExceptionType code The DOM exception code. String msg The message that describes the error. DomException(DomExceptionType, String, Exception) Initializes a new instance of the System.Exception class with a specified error message, error code and a reference to the inner exception that is the cause of this exception. Declaration public DomException(DomExceptionType code, string msg, Exception innerException) Parameters Type Name Description DomExceptionType code The DOM exception code. String msg The message that describes the error. Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. DomException(SerializationInfo, StreamingContext) Initializes a new instance of the System.Exception class with serialized data. Declaration protected DomException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The StreamingContext that contains contextual information about the source or destination. DomException(String, Exception) Initializes a new instance of the System.Exception class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration protected DomException(string msg, Exception innerException) Parameters Type Name Description String msg The message that describes the error. Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. Properties Code Gets or sets a code specifying the type of the error. Declaration public DomExceptionType Code { get; protected set; } Property Value Type Description DomExceptionType An enumeration of the type DomExceptionType specifying the code defining the error. Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.DomExceptionType.html": {
    "href": "api/SharpVectors.Dom.DomExceptionType.html",
    "title": "Enum DomExceptionType | SharpVectors Documentation",
    "keywords": "Enum DomExceptionType DOM exception code types. Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public enum DomExceptionType Fields DomstringSizeErr HierarchyRequestErr IndexSizeErr InuseAttributeErr InvalidAccessErr InvalidCharacterErr InvalidModificationErr InvalidStateErr NamespaceErr NoDataAllowedErr NoModificationAllowedErr NotFoundErr NotSupportedErr SyntaxErr UnknowError WrongDocumentErr Name Description DomstringSizeErr If the specified range of text does not fit into a string. HierarchyRequestErr If any node is inserted somewhere it doesn't belong. IndexSizeErr If index or size is negative, or greater than the allowed value. InuseAttributeErr If an attempt is made to add an attribute that is already in use elsewhere. InvalidAccessErr If a parameter or an operation is not supported by the underlying object. InvalidCharacterErr If an invalid or illegal character is specified, such as in a name. See production 2 in the XML specification for the definition of a legal character, and production 5 for the definition of a legal name character. InvalidModificationErr If an attempt is made to modify the type of the underlying object. InvalidStateErr If an attempt is made to use an object that is not, or is no longer, usable. NamespaceErr If an attempt is made to create or change an object in a way which is incorrect with regard to namespaces. NoDataAllowedErr If data is specified for a node which does not support data. NoModificationAllowedErr If an attempt is made to modify an object where modifications are not allowed. NotFoundErr If an attempt is made to reference a node in a context where it does not exist. NotSupportedErr If the implementation does not support the requested type of object or operation. SyntaxErr If an invalid or illegal string is specified. UnknowError If there is no defined error code for this exception or the exception is unknown. WrongDocumentErr If a node is used in a different document than the one that created it (that doesn't support it)."
  },
  "api/SharpVectors.Dom.DomImplementation.html": {
    "href": "api/SharpVectors.Dom.DomImplementation.html",
    "title": "Class DomImplementation | SharpVectors Documentation",
    "keywords": "Class DomImplementation Summary description for DomImplementation. Inheritance Object XmlImplementation DomImplementation Inherited Members XmlImplementation.HasFeature(String, String) XmlImplementation.CreateDocument() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class DomImplementation : XmlImplementation Constructors DomImplementation() Declaration public DomImplementation()"
  },
  "api/SharpVectors.Dom.Element.html": {
    "href": "api/SharpVectors.Dom.Element.html",
    "title": "Class Element | SharpVectors Documentation",
    "keywords": "Class Element Summary description for Element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.OwnerDocument XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class Element : XmlElement, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors Element(String, String, String, Document) Declaration public Element(string prefix, string localName, string namespaceUri, Document document) Parameters Type Name Description String prefix String localName String namespaceUri Document document Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent evt) Parameters Type Name Description IEvent evt Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent evt) Parameters Type Name Description IEvent evt Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.EntityReference.html": {
    "href": "api/SharpVectors.Dom.EntityReference.html",
    "title": "Class EntityReference | SharpVectors Documentation",
    "keywords": "Class EntityReference Summary description for EntityReference. Inheritance Object XmlNode XmlLinkedNode XmlEntityReference EntityReference Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlEntityReference.CloneNode(Boolean) XmlEntityReference.WriteTo(XmlWriter) XmlEntityReference.WriteContentTo(XmlWriter) XmlEntityReference.Name XmlEntityReference.LocalName XmlEntityReference.Value XmlEntityReference.NodeType XmlEntityReference.IsReadOnly XmlEntityReference.BaseURI XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.InnerText XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class EntityReference : XmlEntityReference, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors EntityReference(String, Document) Declaration protected EntityReference(string name, Document document) Parameters Type Name Description String name Document document Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.Events.AttrChangeType.html": {
    "href": "api/SharpVectors.Dom.Events.AttrChangeType.html",
    "title": "Enum AttrChangeType | SharpVectors Documentation",
    "keywords": "Enum AttrChangeType An integer indicating in which way the attribute was changed. Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public enum AttrChangeType : ushort Fields Addition Modification None Removal Name Description Addition The attribute was just added. Modification The attribute was modified in place. None No attribute was modified, added nor removed. Removal The attribute was just removed."
  },
  "api/SharpVectors.Dom.Events.Event.html": {
    "href": "api/SharpVectors.Dom.Events.Event.html",
    "title": "Class Event | SharpVectors Documentation",
    "keywords": "Class Event Summary description for Event. Inheritance Object Event MutationEvent UiEvent Implements IEvent Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class Event : IEvent Constructors Event() Declaration public Event() Event(String, Boolean, Boolean) Declaration public Event(string eventType, bool bubbles, bool cancelable) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable Event(String, String, Boolean, Boolean) Declaration public Event(string namespaceUri, string eventType, bool bubbles, bool cancelable) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable Fields _eventType Declaration protected string _eventType Field Value Type Description String Properties Bubbles Declaration public bool Bubbles { get; } Property Value Type Description Boolean Cancelable Declaration public bool Cancelable { get; } Property Value Type Description Boolean CurrentTarget Declaration public IEventTarget CurrentTarget { get; } Property Value Type Description IEventTarget EventPhase Declaration public EventPhase EventPhase { get; } Property Value Type Description EventPhase IsCustom Declaration public bool IsCustom { get; } Property Value Type Description Boolean IsDefaultPrevented Declaration public bool IsDefaultPrevented { get; } Property Value Type Description Boolean NamespaceUri Declaration public string NamespaceUri { get; } Property Value Type Description String Target Declaration public IEventTarget Target { get; } Property Value Type Description IEventTarget TimeStamp Declaration public DateTime TimeStamp { get; } Property Value Type Description DateTime Type Declaration public string Type { get; } Property Value Type Description String Methods InitEvent(String, Boolean, Boolean) Declaration public void InitEvent(string eventType, bool bubbles, bool cancelable) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable InitEventNs(String, String, Boolean, Boolean) Declaration public void InitEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable PreventDefault() Declaration public void PreventDefault() StopImmediatePropagation() Declaration public void StopImmediatePropagation() StopPropagation() Declaration public void StopPropagation() Implements IEvent"
  },
  "api/SharpVectors.Dom.Events.EventClasses.html": {
    "href": "api/SharpVectors.Dom.Events.EventClasses.html",
    "title": "Class EventClasses | SharpVectors Documentation",
    "keywords": "Class EventClasses Summary description for EventClasses. Inheritance Object EventClasses Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public static class EventClasses Fields XmlEvents2001 Declaration public static readonly string XmlEvents2001 Field Value Type Description String"
  },
  "api/SharpVectors.Dom.Events.EventException.html": {
    "href": "api/SharpVectors.Dom.Events.EventException.html",
    "title": "Class EventException | SharpVectors Documentation",
    "keywords": "Class EventException Event operations may throw an EventException as specified in their method descriptions. Inheritance Object Exception EventException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax [Serializable] public class EventException : Exception, ISerializable, _Exception Constructors EventException(EventExceptionCode) Initializes a new instance of the EventException class with event exception code. Declaration public EventException(EventExceptionCode code) Parameters Type Name Description EventExceptionCode code An instance of EventExceptionCode defining the event exception code. EventException(SerializationInfo, StreamingContext) Initializes a new instance of the EventException class with serialized data. Declaration protected EventException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The StreamingContext that contains contextual information about the source or destination. Properties Code An integer indicating the type of error generated. Declaration public EventExceptionCode Code { get; } Property Value Type Description EventExceptionCode An enumeration of the type EventExceptionCode specifying the type of error generated. Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/SharpVectors.Dom.Events.EventExceptionCode.html": {
    "href": "api/SharpVectors.Dom.Events.EventExceptionCode.html",
    "title": "Enum EventExceptionCode | SharpVectors Documentation",
    "keywords": "Enum EventExceptionCode An integer indicating the type of error generated. Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public enum EventExceptionCode Fields DispatchRequestErr UnspecifiedEventTypeErr Name Description DispatchRequestErr If the IEvent object is already dispatched in the tree. UnspecifiedEventTypeErr If the IEvent.Type was not specified by initializing the event before the method was called. Specification of the IEvent.Type as null or an empty string will also trigger this exception."
  },
  "api/SharpVectors.Dom.Events.EventListener.html": {
    "href": "api/SharpVectors.Dom.Events.EventListener.html",
    "title": "Delegate EventListener | SharpVectors Documentation",
    "keywords": "Delegate EventListener The EventListener delegate is the primary way for handling events. Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public delegate void EventListener(IEvent e); Parameters Type Name Description IEvent e Remarks Users register their event listener on an IEventTarget . The users should also remove their EventListener from its IEventTarget after they have completed using the listener. Copying a INode does not copy the event listeners attached to it. Event listeners must be attached to the newly created INode afterwards if so desired. Therefore, INode s are copied using INode.CloneNode or IRange.CloneContents , the EventListener s attached to the source INode s are not attached to their copies. Moving a INode does not affect the event listeners attached to it. Therefore, when INode s are moved using IDocument.AdoptNode , INode.AppendChild , or IRange.ExtractContents , the EventListener s attached to the moved INode s stay attached to them."
  },
  "api/SharpVectors.Dom.Events.EventListenerMap.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMap.html",
    "title": "Class EventListenerMap | SharpVectors Documentation",
    "keywords": "Class EventListenerMap Summary description for EventListenerMap. Inheritance Object EventListenerMap Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class EventListenerMap Constructors EventListenerMap() Declaration public EventListenerMap() Methods AddEventListener(String, String, Object, EventListener) Declaration public void AddEventListener(string namespaceUri, string eventType, object eventGroup, EventListener listener) Parameters Type Name Description String namespaceUri String eventType Object eventGroup EventListener listener FireEvent(IEvent) Declaration public void FireEvent(IEvent eventArg) Parameters Type Name Description IEvent eventArg HasEventListenerNs(String, String) Declaration public bool HasEventListenerNs(string namespaceUri, string eventType) Parameters Type Name Description String namespaceUri String eventType Returns Type Description Boolean Lock() Declaration public void Lock() RemoveEventListener(String, String, EventListener) Declaration public void RemoveEventListener(string namespaceUri, string eventType, EventListener listener) Parameters Type Name Description String namespaceUri String eventType EventListener listener Unlock() Declaration public void Unlock()"
  },
  "api/SharpVectors.Dom.Events.EventListenerMapEntry.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMapEntry.html",
    "title": "Class EventListenerMapEntry | SharpVectors Documentation",
    "keywords": "Class EventListenerMapEntry Summary description for EventListenerMapEntry. Inheritance Object EventListenerMapEntry Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class EventListenerMapEntry Constructors EventListenerMapEntry() Declaration public EventListenerMapEntry() EventListenerMapEntry(String, String, Object, EventListener, Boolean) Declaration public EventListenerMapEntry(string namespaceUri, string type, object group, EventListener listener, bool locked) Parameters Type Name Description String namespaceUri String type Object group EventListener listener Boolean locked Properties Group Declaration public object Group { get; set; } Property Value Type Description Object Listener Declaration public EventListener Listener { get; set; } Property Value Type Description EventListener Locked Declaration public bool Locked { get; set; } Property Value Type Description Boolean NamespaceUri Declaration public string NamespaceUri { get; set; } Property Value Type Description String Type Declaration public string Type { get; set; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Events.EventPhase.html": {
    "href": "api/SharpVectors.Dom.Events.EventPhase.html",
    "title": "Enum EventPhase | SharpVectors Documentation",
    "keywords": "Enum EventPhase An integer indicating which phase of the event flow is being processed as defined in DOM event flow . Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public enum EventPhase Fields AtTarget BubblingPhase CapturingPhase Name Description AtTarget (DOM Level 2) The current event is in the target phase , i.e. it is being evaluated at the event target . BubblingPhase (DOM Level 2) The current event phase is the bubbling phase . CapturingPhase (DOM Level 2) The current event phase is the capture phase ."
  },
  "api/SharpVectors.Dom.Events.EventTarget.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.html",
    "title": "Class EventTarget | SharpVectors Documentation",
    "keywords": "Class EventTarget Summary description for EventTarget. Inheritance Object EventTarget Implements IEventTargetSupport IEventTarget Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class EventTarget : IEventTargetSupport, IEventTarget Constructors EventTarget(IEventTargetSupport) Declaration public EventTarget(IEventTargetSupport eventTarget) Parameters Type Name Description IEventTargetSupport eventTarget Methods AddEventListener(String, EventListener, Boolean) Declaration public void AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration public void AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object evtGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object evtGroup DispatchEvent(IEvent) Declaration public bool DispatchEvent(IEvent eventInfo) Parameters Type Name Description IEvent eventInfo Returns Type Description Boolean FireEvent(IEvent) Declaration public void FireEvent(IEvent eventInfo) Parameters Type Name Description IEvent eventInfo HasEventListenerNs(String, String) Declaration public bool HasEventListenerNs(string namespaceUri, string eventType) Parameters Type Name Description String namespaceUri String eventType Returns Type Description Boolean RemoveEventListener(String, EventListener, Boolean) Declaration public void RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration public void RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture WillTriggerNs(String, String) Declaration public bool WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean Events OnMouseMove Declaration public event EventListener OnMouseMove Event Type Type Description EventListener Implements IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.Events.EventType.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.html",
    "title": "Class EventType | SharpVectors Documentation",
    "keywords": "Class EventType Summary description for MutationEventType. Inheritance Object EventType Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public sealed class EventType Fields Abort Declaration public static readonly EventType Abort Field Value Type Description EventType Change Declaration public static readonly EventType Change Field Value Type Description EventType Click Declaration public static readonly EventType Click Field Value Type Description EventType DomActivate Declaration public static readonly EventType DomActivate Field Value Type Description EventType DomAttributeNameChanged Declaration public static readonly EventType DomAttributeNameChanged Field Value Type Description EventType DomAttrModified Declaration public static readonly EventType DomAttrModified Field Value Type Description EventType DomCharacterDataModified Declaration public static readonly EventType DomCharacterDataModified Field Value Type Description EventType DomElementNameChanged Declaration public static readonly EventType DomElementNameChanged Field Value Type Description EventType DomFocusIn Declaration public static readonly EventType DomFocusIn Field Value Type Description EventType DomFocusOut Declaration public static readonly EventType DomFocusOut Field Value Type Description EventType DomNodeInserted Declaration public static readonly EventType DomNodeInserted Field Value Type Description EventType DomNodeInsertedIntoDocument Declaration public static readonly EventType DomNodeInsertedIntoDocument Field Value Type Description EventType DomNodeRemoved Declaration public static readonly EventType DomNodeRemoved Field Value Type Description EventType DomNodeRemovedFromDocument Declaration public static readonly EventType DomNodeRemovedFromDocument Field Value Type Description EventType DomSubtreeModified Declaration public static readonly EventType DomSubtreeModified Field Value Type Description EventType Error Declaration public static readonly EventType Error Field Value Type Description EventType KeyDown Declaration public static readonly EventType KeyDown Field Value Type Description EventType KeyUp Declaration public static readonly EventType KeyUp Field Value Type Description EventType Load Declaration public static readonly EventType Load Field Value Type Description EventType MouseDown Declaration public static readonly EventType MouseDown Field Value Type Description EventType MouseMove Declaration public static readonly EventType MouseMove Field Value Type Description EventType MouseOut Declaration public static readonly EventType MouseOut Field Value Type Description EventType MouseOver Declaration public static readonly EventType MouseOver Field Value Type Description EventType MouseUp Declaration public static readonly EventType MouseUp Field Value Type Description EventType Reset Declaration public static readonly EventType Reset Field Value Type Description EventType Resize Declaration public static readonly EventType Resize Field Value Type Description EventType Scroll Declaration public static readonly EventType Scroll Field Value Type Description EventType Select Declaration public static readonly EventType Select Field Value Type Description EventType Submit Declaration public static readonly EventType Submit Field Value Type Description EventType TextInput Declaration public static readonly EventType TextInput Field Value Type Description EventType Unload Declaration public static readonly EventType Unload Field Value Type Description EventType Properties Name Declaration public string Name { get; } Property Value Type Description String NamespaceUri Declaration public string NamespaceUri { get; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Events.html": {
    "href": "api/SharpVectors.Dom.Events.html",
    "title": "Namespace SharpVectors.Dom.Events | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom.Events Classes Event Summary description for Event. EventClasses Summary description for EventClasses. EventException Event operations may throw an EventException as specified in their method descriptions. EventListenerMap Summary description for EventListenerMap. EventListenerMapEntry Summary description for EventListenerMapEntry. EventTarget Summary description for EventTarget. EventType Summary description for MutationEventType. KeyboardEvent Summary description for KeyboardEvent. MouseEvent Summary description for MouseEvent. MutationEvent Summary description for MutationEvent. MutationNameEvent Summary description for MutationNameEvent. TextEvent Summary description for TextEvent. UiEvent Summary description for UiEvent. Interfaces ICustomEvent The ICustomEvent interface gives access to the attributes IEvent.CurrentTarget and IEvent.EventPhase . IDocumentEvent The IDocumentEvent interface provides a mechanism by which the user can create an IEvent object of a type supported by the implementation. It is expected that the IDocumentEvent interface will be implemented on the same object which implements the IDocument interface in an implementation which supports the IEvent model. IEvent The Event interface is used to provide contextual information about an event to the listener processing the event. IEventListener This interface represents an object that can handle an event dispatched by an IEventTarget object. IEventTarget The IEventTarget interface is implemented by all the objects which could be event targets in an implementation which supports the Event flows . IEventTargetSupport Summary description for IEventTargetSupports. IKeyboardEvent The IKeyboardEvent interface provides specific contextual information associated with keyboard devices. IMouseEvent The IMouseEvent interface provides specific contextual information associated with Mouse events. IMutationEvent The IMutationEvent interface provides specific contextual information associated with Mutation events. IMutationNameEvent The IMutationNameEvent interface provides specific contextual information associated with Mutation name event types. ITextEvent The ITextEvent interface provides specific contextual information associated with Text Events. ITimeEvent This interface, defined in SMIL Animation: Supported interfaces, provides specific contextual information associated with Time events. IUiEvent The IUiEvent interface provides specific contextual information associated with User Interface events. Enums AttrChangeType An integer indicating in which way the attribute was changed. EventExceptionCode An integer indicating the type of error generated. EventPhase An integer indicating which phase of the event flow is being processed as defined in DOM event flow . KeyLocationCode Delegates EventListener The EventListener delegate is the primary way for handling events."
  },
  "api/SharpVectors.Dom.Events.ICustomEvent.html": {
    "href": "api/SharpVectors.Dom.Events.ICustomEvent.html",
    "title": "Interface ICustomEvent | SharpVectors Documentation",
    "keywords": "Interface ICustomEvent The ICustomEvent interface gives access to the attributes IEvent.CurrentTarget and IEvent.EventPhase . Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(String, Boolean, Boolean) IEvent.InitEventNs(String, String, Boolean, Boolean) IEvent.StopImmediatePropagation() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface ICustomEvent : IEvent Remarks It is intended to be used by the DOM Events implementation to access the underlying current target and event phase while dispatching a custom IEvent in the tree; it is also intended to be implemented, and not used, by DOM applications. The methods contained in this interface are not intended to be used by a DOM application, especially during the dispatch on the Event object. Changing the current target or the current phase may conduct into unpredictable results of the event flow. The DOM Events implementation should ensure that both methods return the appropriate current target and phase before invoking each event listener on the current target to protect DOM applications from malicious event listeners. Note: If this interface is supported by the event object, IEvent.IsCustom must return true . Properties IsImmediatePropagationStopped The IsImmediatePropagationStopped method is used by the DOM Events implementation to know if the method IEvent.StopImmediatePropagation has been called for this event. It returns true if the method has been called, false otherwise. Declaration bool IsImmediatePropagationStopped { get; } Property Value Type Description Boolean IsPropagationStopped This method will return true if the method IEvent.StopPropagation has been called for this event, false in any other cases. Declaration bool IsPropagationStopped { get; } Property Value Type Description Boolean true if the event propagation has been stopped in the current group. Methods SetDispatchState(IEventTarget, UInt16) The SetDispatchState method is used by the DOM Events implementation to set the values of IEvent.CurrentTarget and IEvent.EventPhase . Declaration void SetDispatchState(IEventTarget target, ushort phase) Parameters Type Name Description IEventTarget target Specifies the new value for the IEvent.CurrentTarget attribute. UInt16 phase Specifies the new value for the IEvent.EventPhase attribute. Remarks It also reset the states of IsPropagationStopped and IsImmediatePropagationStopped ."
  },
  "api/SharpVectors.Dom.Events.IDocumentEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IDocumentEvent.html",
    "title": "Interface IDocumentEvent | SharpVectors Documentation",
    "keywords": "Interface IDocumentEvent The IDocumentEvent interface provides a mechanism by which the user can create an IEvent object of a type supported by the implementation. It is expected that the IDocumentEvent interface will be implemented on the same object which implements the IDocument interface in an implementation which supports the IEvent model. Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface IDocumentEvent Methods CanDispatch(String, String) Test if the implementation can generate events of a specified type. Declaration bool CanDispatch(string namespaceUri, string type) Parameters Type Name Description String namespaceUri Specifies the IEvent.NamespaceUri of the event. String type Specifies the IEvent.Type of the event. Returns Type Description Boolean true if the implementation can generate and dispatch this event type, false otherwise. CreateEvent(String) The CreateEvent method is used in creating IEvent s when it is either inconvenient or unnecessary for the user to create an IEvent themselves. Declaration IEvent CreateEvent(string eventType) Parameters Type Name Description String eventType The eventType parameter specifies the name of the DOM Events interface to be supported by the created event object, e.g. \"Event\" , \"MouseEvent\" , \"MutationEvent\" ... If the IEvent is to be dispatched via the IEventTarget.DispatchEvent method the appropriate event init method must be called after creation in order to initialize the IEvent 's values. As an example, a user wishing to synthesize some kind of IUiEvent would call IDocumentEvent.CreateEvent with the parameter \"UIEvent\" . The IUiEvent.InitUiEventNs method could then be called on the newly created IUiEvent object to set the specific type of user interface event to be dispatched, { \"http://www.w3.org/2001/xml-events\" , \"DOMActivate\" } for example, and set its context information, e.g. IUiEvent.Detail in this example. Returns Type Description IEvent The newly created event object. Remarks In cases where the implementation provided IEvent is insufficient, users may supply their own IEvent implementations for use with the IEventTarget.DispatchEvent method. However, the DOM implementation needs access to the attributes IEvent.CurrentTarget and IEvent.EventPhase to propagate appropriately the event in the DOM tree. Therefore users' IEvent implementations might need to support the ICustomEvent interface for that effect. Note: For backward compatibility reason, \"UIEvents\" , \"MouseEvents\" , \"MutationEvents\" , and \"HTMLEvents\" feature names are valid values for the parameter eventType and represent respectively the interfaces \"UIEvent\" , \"MouseEvent\" , \"MutationEvent\" , and \"Event\" . Exceptions Type Condition DomException NOT_SUPPORTED_ERR: Raised if the implementation does not support the Event interface requested."
  },
  "api/SharpVectors.Dom.Events.IEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.html",
    "title": "Interface IEvent | SharpVectors Documentation",
    "keywords": "Interface IEvent The Event interface is used to provide contextual information about an event to the listener processing the event. Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface IEvent Remarks An object which implements the IEvent interface is passed as the parameter to an EventListener . More specific context information is passed to event listeners by deriving additional interfaces from IEvent which contain information directly relating to the type of event they represent. These derived interfaces are also implemented by the object passed to the event listener. Properties Bubbles (DOM Level 2) Used to indicate whether or not an event is a bubbling event. Declaration bool Bubbles { get; } Property Value Type Description Boolean Remarks If the event can bubble the value is true , otherwise the value is false . Cancelable (DOM Level 2) Used to indicate whether or not an event can have its default action prevented. Declaration bool Cancelable { get; } Property Value Type Description Boolean Remarks If the default action can be prevented the value is true , otherwise the value is false . See Also Default actions and cancelable events CurrentTarget (DOM Level 2) Used to indicate the IEventTarget whose EventListener s are currently being processed. Declaration IEventTarget CurrentTarget { get; } Property Value Type Description IEventTarget Remarks This is particularly useful during the capture and bubbling phases. This attribute could contain the target node or a target ancestor when used with the DOM event flow . EventPhase (DOM Level 2) Used to indicate which phase of event flow is currently being accomplished. Declaration EventPhase EventPhase { get; } Property Value Type Description EventPhase IsCustom (DOM Level 3 Experimental) This method will always return false , unless the event implements the ICustomEvent interface. Declaration bool IsCustom { get; } Property Value Type Description Boolean true if the event implements the ICustomEvent interface. false otherwise. IsDefaultPrevented (DOM Level 3 Experimental) This method will return true if the method PreventDefault has been called for this event, false otherwise. Declaration bool IsDefaultPrevented { get; } Property Value Type Description Boolean true if PreventDefault has been called for this event. NamespaceUri (DOM Level 3 Experimental) The namespace URI associated with this event at creation time, or null if it is unspecified. Declaration string NamespaceUri { get; } Property Value Type Description String Remarks For events initialized with a DOM Level 2 Events method, such as InitEvent , this is always null . Target (DOM Level 2) Used to indicate the event target . Declaration IEventTarget Target { get; } Property Value Type Description IEventTarget Remarks This attribute contains the target node when used with the DOM event flow . TimeStamp (DOM Level 2) Used to specify the time at which the event was created. Declaration DateTime TimeStamp { get; } Property Value Type Description DateTime Remarks Due to the fact that some systems may not provide this information the value of TimeStamp may be not available for all events. When not available, a value of 0 will be returned. Examples of epoch time are the time of the system start or 0:0:0 UTC 1st January 1970. Type (DOM Level 2) The name must be an NCName as defined in [ XML Namespaces ] and is case-sensitive. Declaration string Type { get; } Property Value Type Description String Remarks The character \":\" (colon) should not be used in this attribute. If the attribute IEvent.NamespaceUri is different from null , this attribute represents a local name . Methods InitEvent(String, Boolean, Boolean) (DOM Level 2) The InitEvent method is used to initialize the value of an IEvent created through the IDocumentEvent.CreateEvent method. Declaration void InitEvent(string eventTypeArg, bool canBubbleArg, bool cancelableArg) Parameters Type Name Description String eventTypeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. This parameter overrides the intrinsic cancelable behavior of the event. Remarks This method may only be called before the IEvent has been dispatched via the IEventTarget.DispatchEvent method. If the method is called several times before invoking IEventTarget.DispatchEvent , only the final invocation takes precedence. If called from a subclass of Event interface only the values specified in this method are modified, all other attributes are left unchanged. This method sets the IEvent.Type attribute to eventTypeArg , and IEvent.NamespaceUri to null . To initialize an event with a local name and namespace URI, use the InitEventNs method. InitEventNs(String, String, Boolean, Boolean) (DOM Level 3 Experimental) The InitEventNs method is used to initialize the value of an IEvent created through the IDocumentEvent interface. Declaration void InitEventNs(string namespaceUriArg, string eventTypeArg, bool canBubbleArg, bool cancelableArg) Parameters Type Name Description String namespaceUriArg Specifies the namespace URI associated with this event, or null if no namespace. String eventTypeArg Specifies the local name of the event type (see also the description of IEvent.Type ). Boolean canBubbleArg Specifies whether or not the event can bubble. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. Remarks This method may only be called before the IEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times the event has been dispatched. If called multiple times the final invocation takes precedence. If a call to InitEventNs is made after one of the IEvent derived interfaces' init methods has been called, only the values specified in the InitEventNs method are modified, all other attributes are left unchanged. This method sets the IEvent.Type attribute to eventTypeArg , and IEvent.NamespaceUri to namespaceUriArg . PreventDefault() (DOM Level 2) Signify that the event is to be canceled. Declaration void PreventDefault() Remarks If an event is cancelable, the PreventDefault method is used to signify that the event is to be canceled, meaning any default action normally taken by the implementation as a result of the event will not occur and thus independently of event groups. Calling this method for a non-cancelable event has no effect. Note: This method does not stop the event propagation; use StopPropagation or StopImmediatePropagation for that effect. See Also Default actions and cancelable events StopImmediatePropagation() (DOM Level 3 Experimental) Immediately prevent event listeners of the same group to be triggered. Declaration void StopImmediatePropagation() Remarks This method is used to prevent event listeners of the same group to be triggered and, unlike StopPropagation its effect is immediate. Once it has been called, further calls to that method have no additional effect. Note: This method does not prevent the default action from being invoked; use PreventDefault for that effect. See Also Event propagation and event groups StopPropagation() (DOM Level 2) Prevent event listeners of the same group to be triggered. Declaration void StopPropagation() Remarks This method is used to prevent event listeners of the same group to be triggered but its effect is differed until all event listeners attached on the currentTarget have been triggered. Once it has been called, further calls to that method have no additional effect. Note: This method does not prevent the default action from being invoked; use preventDefault for that effect. See Also Event propagation and event groups"
  },
  "api/SharpVectors.Dom.Events.IEventListener.html": {
    "href": "api/SharpVectors.Dom.Events.IEventListener.html",
    "title": "Interface IEventListener | SharpVectors Documentation",
    "keywords": "Interface IEventListener This interface represents an object that can handle an event dispatched by an IEventTarget object. Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface IEventListener Methods HandleEvent(IEvent) A function that is called whenever an event of the specified type occurs. Declaration void HandleEvent(IEvent evt) Parameters Type Name Description IEvent evt"
  },
  "api/SharpVectors.Dom.Events.IEventTarget.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTarget.html",
    "title": "Interface IEventTarget | SharpVectors Documentation",
    "keywords": "Interface IEventTarget The IEventTarget interface is implemented by all the objects which could be event targets in an implementation which supports the Event flows . Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface IEventTarget Remarks The interface allows registration, removal or query of event listeners, and dispatch of events to an event target. When used with DOM event flow , this interface is implemented by all target nodes and target ancestors, i.e. all DOM INode s of the tree support this interface when the implementation conforms to DOM Level 3 Events and, therefore, this interface can be obtained by using binding-specific casting methods on an instance of the Node interface. Invoking multiple times AddEventListener or AddEventListenerNs on the same IEventTarget with the same parameters ( namespaceUri , type , listener , and useCapture ) is considered to be a no-op and thus independently of the event group. They do not cause the EventListener to be called more than once and do not cause a change in the triggering order. In order to guarantee that an event listener will be added to the event target for the specified event group, one needs to invoke RemoveEventListener or RemoveEventListenerNs first. Methods AddEventListener(String, EventListener, Boolean) This method allows the registration of an event listener in the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. https://www.w3.org/TR/SVG/interact.html#SVGEvents Declaration void AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type Specifies the IEvent.Type associated with the event for which the user is registering. EventListener listener The listener parameter takes an object implemented by the user which implements the EventListener interface and contains the method to be called when the event occurs. Boolean useCapture If true , useCapture indicates that the user wishes to add the event listener for the capture phase only, i.e. this event listener will not be triggered during the target and bubbling phases . If false , the event listener will only be triggered during the target and bubbling phases. AddEventListenerNs(String, String, EventListener, Boolean, Object) This method allows the registration of an event listener in a specified group or the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. Declaration void AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object evtGroup) Parameters Type Name Description String namespaceUri Specifies the IEvent.NamespaceUri associated with the event for which the user is registering. String type Specifies the IEvent.Type associated with the event for which the user is registering. EventListener listener The listener parameter takes an object implemented by the user which implements the EventListener interface and contains the method to be called when the event occurs. Boolean useCapture If true , useCapture indicates that the user wishes to add the event listener for the capture phase only , i.e. this event listener will not be triggered during the target and bubbling phases . If false , the event listener will only be triggered during the target and bubbling phases. Object evtGroup The object that represents the event group to associate with the EventListener . Use null to attach the event listener to the default group. See Also Event propagation and event groups DispatchEvent(IEvent) This method allows the dispatch of events into the implementation's event model. Declaration bool DispatchEvent(IEvent evt) Parameters Type Name Description IEvent evt The event to be dispatched. Returns Type Description Boolean Indicates whether any of the listeners which handled the event called IEvent.PreventDefault . If IEvent.PreventDefault was called the returned value is false , else it is true . Remarks The event target of the event is the IEventTarget object on which DispatchEvent is called. Exceptions Type Condition EventException UNSPECIFIED_EVENT_TYPE_ERR: Raised if the Event.type was not specified by initializing the event before dispatchEvent was called. Specification of the Event.type as null or an empty string will also trigger this exception. DISPATCH_REQUEST_ERR: Raised if the Event object is already being dispatched in the tree. NOT_SUPPORTED_ERR: Raised if the Event object has not been created using DocumentEvent.createEvent or does not support the interface CustomEvent. HasEventListenerNs(String, String) This method allows the DOM application to know if this IEventTarget contains an event listener registered for the specified event type. Declaration bool HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri Specifies the IEvent.NamespaceUri associated with the event. String type Specifies the IEvent.Type associated with the event. Returns Type Description Boolean true if an event listener is registered on this IEventTarget for the specified event type, false otherwise. Remarks This is useful for determining at which nodes within a hierarchy altered handling of specific event types has been introduced, but should not be used to determine whether the specified event type triggers an event listener. See Also WillTriggerNs(String, String) RemoveEventListener(String, EventListener, Boolean) This method allows the removal of event listeners from the default group. Declaration void RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type Specifies the IEvent.Type for which the user registered the event listener. EventListener listener The EventListener to be removed. Boolean useCapture Specifies whether the EventListener being removed was registered for the capture phase or not. If a listener was registered twice, once for the capture phase and once for the target and bubbling phases, each must be removed separately. Removal of an event listener registered for the capture phase does not affect the same event listener registered for the target and bubbling phases, and vice versa. Remarks Calling RemoveEventListener with arguments which do not identify any currently registered EventListener on the IEventTarget has no effect. RemoveEventListenerNs(String, String, EventListener, Boolean) This method allows the removal of event listeners from a specified group or the default group. Declaration void RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri Specifies the IEvent.NamespaceUri associated with the event for which the user registered the event listener. String type Specifies the IEvent.Type associated with the event for which the user registered the event listener. EventListener listener The EventListener parameter indicates the EventListener to be removed. Boolean useCapture Specifies whether the EventListener being removed was registered for the capture phase or not. If a listener was registered twice, once for the capture phase and once for the target and bubbling phases, each must be removed separately. Removal of an event listener registered for the capture phase does not affect the same event listener registered for the target and bubbling phases, and vice versa. Remarks Calling RemoveEventListenerNs with arguments which do not identify any currently registered EventListener on the EventTarget has no effect. WillTriggerNs(String, String) This method allows the DOM application to know if an event listener, attached to this IEventTarget or one of its ancestors, will be triggered by the specified event type during the dispatch of the event to this event target or one of its descendants. Declaration bool WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri Specifies the IEvent.NamespaceUri associated with the event. String type Specifies the IEvent.Type associated with the event. Returns Type Description Boolean true if an event listener will be triggered on the IEventTarget with the specified event type, false otherwise."
  },
  "api/SharpVectors.Dom.Events.IEventTargetSupport.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTargetSupport.html",
    "title": "Interface IEventTargetSupport | SharpVectors Documentation",
    "keywords": "Interface IEventTargetSupport Summary description for IEventTargetSupports. Inherited Members IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public interface IEventTargetSupport : IEventTarget Methods FireEvent(IEvent) Declaration void FireEvent(IEvent evt) Parameters Type Name Description IEvent evt"
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.html",
    "title": "Interface IKeyboardEvent | SharpVectors Documentation",
    "keywords": "Interface IKeyboardEvent The IKeyboardEvent interface provides specific contextual information associated with keyboard devices. Inherited Members IUiEvent.View IUiEvent.Detail IUiEvent.InitUiEvent(String, Boolean, Boolean, IAbstractView, Int64) IUiEvent.InitUiEventNs(String, String, Boolean, Boolean, IAbstractView, Int64) IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(String, Boolean, Boolean) IEvent.InitEventNs(String, String, Boolean, Boolean) IEvent.StopImmediatePropagation() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface IKeyboardEvent : IUiEvent, IEvent Remarks Each keyboard event reference a key using an identifier. Each modifier attribute ( CtrlKey , ShiftKey , AltKey , MetaKey , and AltGraphKey ) is activated when the key modifier is being pressed down or maintained pressed, i.e. the modifier attribute is not in use when the key modifier is being released. Note: To create an instance of the IKeyboardEvent interface, use the feature string \"KeyboardEvent\" as the value of the input parameter used with the IDocumentEvent.CreateEvent method. Properties AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. Declaration bool AltGraphKey { get; } Property Value Type Description Boolean Remarks Note: Some operating systems simulate the alt-graph key modifier with the combinaison of alt and ctrl key modifiers. Implementations are encouraged to use this modifier instead. AltKey true if the alt (alternative) key modifier is activated. Declaration bool AltKey { get; } Property Value Type Description Boolean CtrlKey true if the control (Ctrl) key modifier is activated. Declaration bool CtrlKey { get; } Property Value Type Description Boolean KeyIdentifier Holds the identifier of the key. Declaration string KeyIdentifier { get; } Property Value Type Description String Remarks For a list of possible values, refer to Key identifiers for keyboard events . Note: Implementations that are unable to identify a key must use the key identifier \"Unidentified\". KeyLocation Contains an indication of the location of they key on the device. Declaration KeyLocationCode KeyLocation { get; } Property Value Type Description KeyLocationCode MetaKey true if the meta (Meta) key modifier is activated. Declaration bool MetaKey { get; } Property Value Type Description Boolean Remarks Note: The Command key modifier on Macintosh system must be represented using this key modifier. ShiftKey true if the shift (Shift) key modifier is activated. Declaration bool ShiftKey { get; } Property Value Type Description Boolean Methods InitKeyboardEvent(String, Boolean, Boolean, IAbstractView, String, KeyLocationCode, Boolean, Boolean, Boolean, Boolean, Boolean) The InitKeyboardEvent method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method. Declaration void InitKeyboardEvent(string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, string keyIdentifierArg, KeyLocationCode keyLocationArg, bool ctrlKeyArg, bool shiftKeyArg, bool altKeyArg, bool metaKeyArg, bool altGraphKeyArg) Parameters Type Name Description String typeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. Boolean cancelableArg Specifies whether or not the event's default action can be prevent. This parameter overrides the intrinsic cancelable behavior of the event. IAbstractView viewArg Specifies the IKeyboardEvent 's IAbstractView . String keyIdentifierArg Specifies the IKeyboardEvent 's KeyIdentifier attribute. KeyLocationCode keyLocationArg Specifies the IKeyboardEvent 's KeyLocation attribute. Boolean ctrlKeyArg Specifies the IKeyboardEvent 's CtrlKey attribute. Boolean shiftKeyArg Specifies the IKeyboardEvent 's ShiftKey attribute. Boolean altKeyArg Specifies the IKeyboardEvent 's AltKey attribute. Boolean metaKeyArg Specifies the IKeyboardEvent 's MetaKey attribute. Boolean altGraphKeyArg Specifies the IKeyboardEvent 's AltGraphKey attribute. Remarks This method may only be called before the IKeyboardEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched. InitKeyboardEventNs(String, String, Boolean, Boolean, IAbstractView, String, KeyLocationCode, Boolean, Boolean, Boolean, Boolean, Boolean) The InitKeyboardEventNs method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method. Declaration void InitKeyboardEventNs(string namespaceUri, string type, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, string keyIdentifierArg, KeyLocationCode keyLocationArg, bool ctrlKeyArg, bool shiftKeyArg, bool altKeyArg, bool metaKeyArg, bool altGraphKeyArg) Parameters Type Name Description String namespaceUri Specifies the namespace URI associated with this event, or null if the applications wish to have no namespace. String type Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. Boolean cancelableArg Specifies whether or not the event's default action can be prevent. IAbstractView viewArg Specifies the IKeyboardEvent 's IAbstractView . String keyIdentifierArg Specifies the IKeyboardEvent 's KeyIdentifier attribute. KeyLocationCode keyLocationArg Specifies the IKeyboardEvent 's KeyLocation attribute. Boolean ctrlKeyArg Specifies the IKeyboardEvent 's CtrlKey attribute. Boolean shiftKeyArg Specifies the IKeyboardEvent 's ShiftKey attribute. Boolean altKeyArg Specifies the IKeyboardEvent 's AltKey attribute. Boolean metaKeyArg Specifies the IKeyboardEvent 's MetaKey attribute. Boolean altGraphKeyArg Specifies the IKeyboardEvent 's AltGraphKey attribute. Remarks This method may only be called before the IKeyboardEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched."
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.html",
    "title": "Interface IMouseEvent | SharpVectors Documentation",
    "keywords": "Interface IMouseEvent The IMouseEvent interface provides specific contextual information associated with Mouse events. Inherited Members IUiEvent.View IUiEvent.Detail IUiEvent.InitUiEvent(String, Boolean, Boolean, IAbstractView, Int64) IUiEvent.InitUiEventNs(String, String, Boolean, Boolean, IAbstractView, Int64) IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(String, Boolean, Boolean) IEvent.InitEventNs(String, String, Boolean, Boolean) IEvent.StopImmediatePropagation() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface IMouseEvent : IUiEvent, IEvent Remarks In the case of nested elements mouse events are always targeted at the most deeply nested element. Ancestors of the targeted element may use bubbling to obtain notification of mouse events which occur within its descendent elements. Note: To create an instance of the MouseEvent interface, use the feature string \"MouseEvent\" as the value of the input parameter used with the DocumentEvent.createEvent method. Properties AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. Declaration bool AltGraphKey { get; } Property Value Type Description Boolean Remarks Note: Some operating systems simulate the alt-graph key modifier with the combinaison of alt and ctrl key modifiers. Implementations are encouraged to use this modifier instead. AltKey true if the alt (alternative) key modifier is activated. Declaration bool AltKey { get; } Property Value Type Description Boolean Button During mouse events caused by the depression or release of a mouse button, button is used to indicate which mouse button changed state. Declaration ushort Button { get; } Property Value Type Description UInt16 Remarks 0 indicates the normal (in general on the left or the one button on Macintosh mice, used to activate a button or select text) button of the mouse. 2 indicates the contextual property (in general on the right, used to display a context menu) button of the mouse if present. 1 indicates the extra (in general in the middle and often combined with the mouse wheel) button. Some mice may provide or simulate more buttons and values higher than 2 could be used to represent such buttons. ClientX The horizontal coordinate at which the event occurred relative to the DOM implementation's client area. Declaration long ClientX { get; } Property Value Type Description Int64 ClientY The vertical coordinate at which the event occurred relative to the DOM implementation's client area. Declaration long ClientY { get; } Property Value Type Description Int64 CtrlKey true if the control (Ctrl) key modifier is activated. Declaration bool CtrlKey { get; } Property Value Type Description Boolean MetaKey true if the meta (Meta) key modifier is activated. Declaration bool MetaKey { get; } Property Value Type Description Boolean Remarks Note: The Command key modifier on Macintosh system must be represented using this key modifier. RelatedTarget Used to identify a secondary EventTarget related to a UI event. Declaration IEventTarget RelatedTarget { get; } Property Value Type Description IEventTarget Remarks Currently this attribute is used with the mouseover event to indicate the IEventTarget which the pointing device exited and with the mouseout event to indicate the IEventTarget which the pointing device entered. ScreenX The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system. Declaration long ScreenX { get; } Property Value Type Description Int64 ScreenY The vertical coordinate at which the event occurred relative to the origin of the screen coordinate system. Declaration long ScreenY { get; } Property Value Type Description Int64 ShiftKey true if the shift (Shift) key modifier is activated. Declaration bool ShiftKey { get; } Property Value Type Description Boolean Methods InitMouseEvent(String, Boolean, Boolean, IAbstractView, Int64, Int64, Int64, Int64, Int64, Boolean, Boolean, Boolean, Boolean, UInt16, IEventTarget) The InitMouseEvent method is used to initialize the value of a MouseEvent created using the IDocumentEvent.CreateEvent method. Declaration void InitMouseEvent(string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, long detailArg, long screenXArg, long screenYArg, long clientXArg, long clientYArg, bool ctrlKeyArg, bool altKeyArg, bool shiftKeyArg, bool metaKeyArg, ushort buttonArg, IEventTarget relatedTargetArg) Parameters Type Name Description String typeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. IAbstractView viewArg Specifies the IEvent 's view. Int64 detailArg Specifies the IEvent 's mouse click count. Int64 screenXArg Specifies the IEvent 's screen x coordinate. Int64 screenYArg Specifies the IEvent 's screen y coordinate. Int64 clientXArg Specifies the IEvent 's client x coordinate. Int64 clientYArg Specifies the IEvent 's client y coordinate. Boolean ctrlKeyArg Specifies whether or not control key was depressed during the IEvent . Boolean altKeyArg Specifies whether or not alt key was depressed during the IEvent . Boolean shiftKeyArg Specifies whether or not shift key was depressed during the IEvent . Boolean metaKeyArg Specifies whether or not meta key was depressed during the IEvent . UInt16 buttonArg Specifies the IEvent 's mouse button. IEventTarget relatedTargetArg Specifies the IEvent 's related IEventTarget . Remarks This method may only be called before the IMouseEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched. If called multiple times, the final invocation takes precedence. InitMouseEventNs(String, String, Boolean, Boolean, IAbstractView, Int64, Int64, Int64, Int64, Int64, Boolean, Boolean, Boolean, Boolean, UInt16, IEventTarget, Boolean) The InitMouseEventNs method is used to initialize the value of a IMouseEvent created using the IDocumentEvent.CreateEvent interface. Declaration void InitMouseEventNs(string namespaceUri, string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, long detailArg, long screenXArg, long screenYArg, long clientXArg, long clientYArg, bool ctrlKeyArg, bool altKeyArg, bool shiftKeyArg, bool metaKeyArg, ushort buttonArg, IEventTarget relatedTargetArg, bool altGraphKeyArg) Parameters Type Name Description String namespaceUri Specifies the namespace URI associated with this event, or null if the application wish to have no namespace. String typeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. IAbstractView viewArg Specifies the IEvent 's AbstractView. Int64 detailArg Specifies the IEvent 's mouse click count. Int64 screenXArg Specifies the IEvent 's screen x coordinate. Int64 screenYArg Specifies the IEvent 's screen y coordinate. Int64 clientXArg Specifies the IEvent 's client x coordinate. Int64 clientYArg Specifies the IEvent 's client y coordinate. Boolean ctrlKeyArg Specifies whether or not control key was depressed during the IEvent . Boolean altKeyArg Specifies whether or not alt key was depressed during the IEvent . Boolean shiftKeyArg Specifies whether or not shift key was depressed during the IEvent . Boolean metaKeyArg Specifies whether or not meta key was depressed during the Event. UInt16 buttonArg Specifies the IEvent 's mouse button. IEventTarget relatedTargetArg Specifies the IEvent 's related IEventTarget . Boolean altGraphKeyArg Specifies whether or not alt graph key was depressed during the IEvent . Remarks This method may only be called before the IMouseEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.IMutationEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationEvent.html",
    "title": "Interface IMutationEvent | SharpVectors Documentation",
    "keywords": "Interface IMutationEvent The IMutationEvent interface provides specific contextual information associated with Mutation events. Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(String, Boolean, Boolean) IEvent.InitEventNs(String, String, Boolean, Boolean) IEvent.StopImmediatePropagation() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface IMutationEvent : IEvent Remarks Note: To create an instance of the IMutationEvent interface, use the feature string \"MutationEvent\" as the value of the input parameter used with the IDocumentEvent.CreateEvent method. Properties AttrChange attrChange indicates the type of change which triggered the DOMAttrModified event. The values can be AttrChangeType.Modification , AttrChangeType.Addition , or AttrChangeType.Removal . Declaration AttrChangeType AttrChange { get; } Property Value Type Description AttrChangeType AttrName AttrName indicates the name of the changed attribute node in a AttrChangeType.Modification event. Declaration string AttrName { get; } Property Value Type Description String NewValue NewValue indicates the new value of the attribute node in DOMAttrModified events, and of the ICharacterData node in DOMCharacterDataModified events. Declaration string NewValue { get; } Property Value Type Description String PrevValue PrevValue indicates the previous value of the attribute node in AttrChangeType.Modification events, and of the ICharacterData node in DOMCharacterDataModified events. Declaration string PrevValue { get; } Property Value Type Description String RelatedNode RelatedNode is used to identify a secondary node related to a mutation event. Declaration INode RelatedNode { get; } Property Value Type Description INode Remarks For example, if a mutation event is dispatched to a node indicating that its parent has changed, the RelatedNode is the changed parent. If an event is instead dispatched to a subtree indicating a node was changed within it, the RelatedNode is the changed node. In the case of the AttrChangeType.Modification event it indicates the attribute node which was modified, added, or removed. Methods InitMutationEvent(String, Boolean, Boolean, INode, String, String, String, AttrChangeType) The InitMutationEvent method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched if necessary. If called multiple times, the final invocation takes precedence. Declaration void InitMutationEvent(string typeArg, bool canBubbleArg, bool cancelableArg, INode relatedNodeArg, string prevValueArg, string newValueArg, string attrNameArg, AttrChangeType attrChangeArg) Parameters Type Name Description String typeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. This parameter overrides the intrinsic cancelable behavior of the event. INode relatedNodeArg Specifies the IEvent 's related Node. String prevValueArg Specifies the IEvent 's PrevValue attribute. This value may be null . String newValueArg Specifies the IEvent 's NewValue attribute. This value may be null . String attrNameArg Specifies the IEvent 's AttrName attribute. This value may be null . AttrChangeType attrChangeArg Specifies the IEvent 's AttrChange attribute. InitMutationEventNs(String, String, Boolean, Boolean, INode, String, String, String, AttrChangeType) The InitMutationEventNs method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method. Declaration void InitMutationEventNs(string namespaceUri, string typeArg, bool canBubbleArg, bool cancelableArg, INode relatedNodeArg, string prevValueArg, string newValueArg, string attrNameArg, AttrChangeType attrChangeArg) Parameters Type Name Description String namespaceUri Specifies the namespace URI associated with this event, or null if the application wish to have no namespace. String typeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. INode relatedNodeArg Specifies the IEvent 's related Node. String prevValueArg Specifies the IEvent 's PrevValue attribute. This value may be null . String newValueArg Specifies the IEvent 's NewValue attribute. This value may be null . String attrNameArg Specifies the IEvent 's AttrName attribute. This value may be null . AttrChangeType attrChangeArg Specifies the IEvent 's AttrChange attribute. Remarks This method may only be called before the IMutationEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.IMutationNameEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationNameEvent.html",
    "title": "Interface IMutationNameEvent | SharpVectors Documentation",
    "keywords": "Interface IMutationNameEvent The IMutationNameEvent interface provides specific contextual information associated with Mutation name event types. Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface IMutationNameEvent Remarks Note: To create an instance of the IMutationNameEvent interface, use the feature string \"MutationNameEvent\" as the value of the input parameter used with the CreateEvent method of the IDocumentEvent interface. Properties PrevNamespaceUri The previous value of the RelatedNode 's namespace URI. Declaration string PrevNamespaceUri { get; } Property Value Type Description String PrevNodeName The previous value of the RelatedNode 's nodeName. Declaration string PrevNodeName { get; } Property Value Type Description String Methods InitMutationNameEvent(String, Boolean, Boolean, INode, String, String) The InitMutationNameEvent method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. Declaration void InitMutationNameEvent(string typeArg, bool canBubbleArg, bool cancelableArg, INode relatedNodeArg, string prevNamespaceUri, string prevNodeName) Parameters Type Name Description String typeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. INode relatedNodeArg Specifies the IEvent 's related Node. String prevNamespaceUri Specifies the previous NamespaceUri of the related INode . This value may be null . String prevNodeName Specifies the previous NodeName of the related Node. InitMutationNameEventNs(String, String, Boolean, Boolean, INode, String, String) The InitMutationNameEventNs method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. Declaration void InitMutationNameEventNs(string namespaceUri, string typeArg, bool canBubbleArg, bool cancelableArg, INode relatedNodeArg, string prevNamespaceUri, string prevNodeName) Parameters Type Name Description String namespaceUri Specifies the namespace URI associated with this event, or null if the application wish to have no namespace. String typeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. INode relatedNodeArg Specifies the IEvent 's related Node. String prevNamespaceUri Specifies the previous NamespaceUri of the related Node. This value may be null . String prevNodeName Specifies the previous NodeName of the related Node."
  },
  "api/SharpVectors.Dom.Events.ITextEvent.html": {
    "href": "api/SharpVectors.Dom.Events.ITextEvent.html",
    "title": "Interface ITextEvent | SharpVectors Documentation",
    "keywords": "Interface ITextEvent The ITextEvent interface provides specific contextual information associated with Text Events. Inherited Members IUiEvent.View IUiEvent.Detail IUiEvent.InitUiEvent(String, Boolean, Boolean, IAbstractView, Int64) IUiEvent.InitUiEventNs(String, String, Boolean, Boolean, IAbstractView, Int64) IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(String, Boolean, Boolean) IEvent.InitEventNs(String, String, Boolean, Boolean) IEvent.StopImmediatePropagation() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface ITextEvent : IUiEvent, IEvent Remarks Note: To create an instance of the ITextEvent interface, use the feature string \"TextEvent\" as the value of the input parameter used with the IDocumentEvent.CreateEvent method. Properties Data Data holds the value of the characters generated by the character device. This may be a single Unicode character or it may be a string. Declaration string Data { get; } Property Value Type Description String Methods InitTextEvent(String, Boolean, Boolean, IAbstractView, String) The InitTextEvent method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. Declaration void InitTextEvent(string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, string dataArg) Parameters Type Name Description String typeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. Boolean cancelableArg Specifies whether or not the event's default action can be prevent. This parameter overrides the intrinsic cancelable behavior of the event. IAbstractView viewArg Specifies the TextEvent 's view. String dataArg Specifies the TextEvent 's data attribute. Remarks This method may only be called before the ITextEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched. InitTextEventNs(String, String, Boolean, Boolean, IAbstractView, String) The InitTextEventNs method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the ITextEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched. Declaration void InitTextEventNs(string namespaceUri, string type, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, string dataArg) Parameters Type Name Description String namespaceUri Specifies the namespace URI associated with this event, or null if the applications wish to have no namespace. String type Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. Boolean cancelableArg Specifies whether or not the event's default action can be prevent. IAbstractView viewArg Specifies the ITextEvent 's view. String dataArg Specifies the ITextEvent 's data attribute"
  },
  "api/SharpVectors.Dom.Events.ITimeEvent.html": {
    "href": "api/SharpVectors.Dom.Events.ITimeEvent.html",
    "title": "Interface ITimeEvent | SharpVectors Documentation",
    "keywords": "Interface ITimeEvent This interface, defined in SMIL Animation: Supported interfaces, provides specific contextual information associated with Time events. Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(String, Boolean, Boolean) IEvent.InitEventNs(String, String, Boolean, Boolean) IEvent.StopImmediatePropagation() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface ITimeEvent : IEvent Remarks The different types of events that can occur are: Properties Detail Specifies some detail information about the Event, depending on the type of the event. For this event type, indicates the repeat number for the animation. Declaration long Detail { get; } Property Value Type Description Int64 View The view attribute identifies the IAbstractView from which the event was generated. Declaration IAbstractView View { get; } Property Value Type Description IAbstractView Methods InitTimeEvent(String, IAbstractView, Int64) This method is used to initialize the value of a ITimeEvent created through the IDocumentEvent interface. This method may only be called before the ITimeEvent has been dispatched via the dispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. Declaration void InitTimeEvent(string typeArg, IAbstractView viewArg, long detailArg) Parameters Type Name Description String typeArg Specifies the event type. IAbstractView viewArg Specifies the event's IAbstractView . Int64 detailArg Specifies the event's detail."
  },
  "api/SharpVectors.Dom.Events.IUiEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IUiEvent.html",
    "title": "Interface IUiEvent | SharpVectors Documentation",
    "keywords": "Interface IUiEvent The IUiEvent interface provides specific contextual information associated with User Interface events. Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(String, Boolean, Boolean) IEvent.InitEventNs(String, String, Boolean, Boolean) IEvent.StopImmediatePropagation() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public interface IUiEvent : IEvent Remarks Note: To create an instance of the IUiEvent interface, use the feature string \"UIEvent\" as the value of the input parameter used with the IDocumentEvent.CreateEvent method. Properties Detail Specifies some detail information about the IEvent , depending on the type of event. Declaration long Detail { get; } Property Value Type Description Int64 View The View attribute identifies the IAbstractView from which the event was generated. Declaration IAbstractView View { get; } Property Value Type Description IAbstractView Methods InitUiEvent(String, Boolean, Boolean, IAbstractView, Int64) The InitUiEvent method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. Declaration void InitUiEvent(string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, long detailArg) Parameters Type Name Description String typeArg Specifies the event type. Boolean canBubbleArg Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. This parameter overrides the intrinsic cancelable behavior of the event. IAbstractView viewArg Specifies the IEvent 's IAbstractView . Int64 detailArg Specifies the IEvent 's detail. Remarks This method may only be called before the InitUiEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. InitUiEventNs(String, String, Boolean, Boolean, IAbstractView, Int64) The InitUiEventNs method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IUiEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. Declaration void InitUiEventNs(string namespaceURI, string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, long detailArg) Parameters Type Name Description String namespaceURI Specifies the namespace URI associated with this event, or null if the application wish not to use namespaces. String typeArg Specifies the event type (see also the description of the type attribute in the IEvent interface). Boolean canBubbleArg Specifies whether or not the event can bubble. Boolean cancelableArg Specifies whether or not the event's default action can be prevented. IAbstractView viewArg Specifies the Event 's IAbstractView Int64 detailArg Specifies the IEvent 's detail."
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.html",
    "title": "Class KeyboardEvent | SharpVectors Documentation",
    "keywords": "Class KeyboardEvent Summary description for KeyboardEvent. Inheritance Object Event UiEvent KeyboardEvent Implements IKeyboardEvent IUiEvent IEvent Inherited Members UiEvent.View UiEvent.Detail UiEvent.InitUiEvent(String, Boolean, Boolean, IAbstractView, Int64) UiEvent.InitUiEventNs(String, String, Boolean, Boolean, IAbstractView, Int64) Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(String, Boolean, Boolean) Event.InitEventNs(String, String, Boolean, Boolean) Event.StopImmediatePropagation() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class KeyboardEvent : UiEvent, IKeyboardEvent, IUiEvent, IEvent Constructors KeyboardEvent() Declaration public KeyboardEvent() KeyboardEvent(String, Boolean, Boolean, IAbstractView, String, KeyLocationCode, Boolean, Boolean, Boolean, Boolean, Boolean) Declaration public KeyboardEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, string keyIdentifier, KeyLocationCode keyLocation, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey, bool altGraphKey) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable IAbstractView view String keyIdentifier KeyLocationCode keyLocation Boolean ctrlKey Boolean shiftKey Boolean altKey Boolean metaKey Boolean altGraphKey KeyboardEvent(String, String, Boolean, Boolean, IAbstractView, String, KeyLocationCode, Boolean, Boolean, Boolean, Boolean, Boolean) Declaration public KeyboardEvent(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, string keyIdentifier, KeyLocationCode keyLocation, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey, bool altGraphKey) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable IAbstractView view String keyIdentifier KeyLocationCode keyLocation Boolean ctrlKey Boolean shiftKey Boolean altKey Boolean metaKey Boolean altGraphKey Properties AltGraphKey Declaration public bool AltGraphKey { get; } Property Value Type Description Boolean AltKey Declaration public bool AltKey { get; } Property Value Type Description Boolean CtrlKey Declaration public bool CtrlKey { get; } Property Value Type Description Boolean KeyIdentifier Declaration public string KeyIdentifier { get; } Property Value Type Description String KeyLocation Declaration public KeyLocationCode KeyLocation { get; } Property Value Type Description KeyLocationCode MetaKey Declaration public bool MetaKey { get; } Property Value Type Description Boolean ShiftKey Declaration public bool ShiftKey { get; } Property Value Type Description Boolean Methods InitKeyboardEvent(String, Boolean, Boolean, IAbstractView, String, KeyLocationCode, Boolean, Boolean, Boolean, Boolean, Boolean) Declaration public void InitKeyboardEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, string keyIdentifier, KeyLocationCode keyLocation, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey, bool altGraphKey) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable IAbstractView view String keyIdentifier KeyLocationCode keyLocation Boolean ctrlKey Boolean shiftKey Boolean altKey Boolean metaKey Boolean altGraphKey InitKeyboardEventNs(String, String, Boolean, Boolean, IAbstractView, String, KeyLocationCode, Boolean, Boolean, Boolean, Boolean, Boolean) Declaration public void InitKeyboardEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, string keyIdentifier, KeyLocationCode keyLocation, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey, bool altGraphKey) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable IAbstractView view String keyIdentifier KeyLocationCode keyLocation Boolean ctrlKey Boolean shiftKey Boolean altKey Boolean metaKey Boolean altGraphKey Implements IKeyboardEvent IUiEvent IEvent"
  },
  "api/SharpVectors.Dom.Events.KeyLocationCode.html": {
    "href": "api/SharpVectors.Dom.Events.KeyLocationCode.html",
    "title": "Enum KeyLocationCode | SharpVectors Documentation",
    "keywords": "Enum KeyLocationCode Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Core.dll Syntax public enum KeyLocationCode : ulong Remarks Note: In case a DOM implementation wishes to provide new location information, all values above the value of this constant can be used for that effect and generic DOM applications should consider values above the value of this constant as being equivalent to Unknown . Fields Left Numpad Right Standard Unknown Name Description Left The key activated is in the left key location (there is more than one possible location for this key). Example: the left Shift key on a PC 101 Key US. Numpad The key activation originated on the numeric keypad or with a virtual key corresponding to the numeric keypad. Example: the '1' key on a PC 101 Key US. Right The key activation is in the right key location (there is more than one possible location for this key). Example: the right Shift key on a PC 101 Key US. Standard The key activation is not distinguished as the left or right version of the key, and did not originate from the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad). Example: the 'Q' key on a PC 101 Key US. Unknown Implementations can use this constant to indicate that the location of the key cannot be determined."
  },
  "api/SharpVectors.Dom.Events.MouseEvent.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.html",
    "title": "Class MouseEvent | SharpVectors Documentation",
    "keywords": "Class MouseEvent Summary description for MouseEvent. Inheritance Object Event UiEvent MouseEvent Implements IMouseEvent IUiEvent IEvent Inherited Members UiEvent.View UiEvent.Detail UiEvent.InitUiEvent(String, Boolean, Boolean, IAbstractView, Int64) UiEvent.InitUiEventNs(String, String, Boolean, Boolean, IAbstractView, Int64) Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(String, Boolean, Boolean) Event.InitEventNs(String, String, Boolean, Boolean) Event.StopImmediatePropagation() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class MouseEvent : UiEvent, IMouseEvent, IUiEvent, IEvent Constructors MouseEvent() Declaration public MouseEvent() MouseEvent(EventType, Boolean, Boolean, IAbstractView, Int64, Int64, Int64, Int64, Int64, Boolean, Boolean, Boolean, Boolean, UInt16, IEventTarget, Boolean) Declaration public MouseEvent(EventType eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget, bool altGraphKey) Parameters Type Name Description EventType eventType Boolean bubbles Boolean cancelable IAbstractView view Int64 detail Int64 screenX Int64 screenY Int64 clientX Int64 clientY Boolean ctrlKey Boolean altKey Boolean shiftKey Boolean metaKey UInt16 button IEventTarget relatedTarget Boolean altGraphKey MouseEvent(String, Boolean, Boolean, IAbstractView, Int64, Int64, Int64, Int64, Int64, Boolean, Boolean, Boolean, Boolean, UInt16, IEventTarget) Declaration public MouseEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable IAbstractView view Int64 detail Int64 screenX Int64 screenY Int64 clientX Int64 clientY Boolean ctrlKey Boolean altKey Boolean shiftKey Boolean metaKey UInt16 button IEventTarget relatedTarget MouseEvent(String, String, Boolean, Boolean, IAbstractView, Int64, Int64, Int64, Int64, Int64, Boolean, Boolean, Boolean, Boolean, UInt16, IEventTarget, Boolean) Declaration public MouseEvent(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget, bool altGraphKey) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable IAbstractView view Int64 detail Int64 screenX Int64 screenY Int64 clientX Int64 clientY Boolean ctrlKey Boolean altKey Boolean shiftKey Boolean metaKey UInt16 button IEventTarget relatedTarget Boolean altGraphKey Properties AltGraphKey Declaration public bool AltGraphKey { get; } Property Value Type Description Boolean AltKey Declaration public bool AltKey { get; } Property Value Type Description Boolean Button Declaration public ushort Button { get; } Property Value Type Description UInt16 ClientX Declaration public long ClientX { get; } Property Value Type Description Int64 ClientY Declaration public long ClientY { get; } Property Value Type Description Int64 CtrlKey Declaration public bool CtrlKey { get; } Property Value Type Description Boolean MetaKey Declaration public bool MetaKey { get; } Property Value Type Description Boolean RelatedTarget Declaration public IEventTarget RelatedTarget { get; } Property Value Type Description IEventTarget ScreenX Declaration public long ScreenX { get; } Property Value Type Description Int64 ScreenY Declaration public long ScreenY { get; } Property Value Type Description Int64 ShiftKey Declaration public bool ShiftKey { get; } Property Value Type Description Boolean Methods InitMouseEvent(String, Boolean, Boolean, IAbstractView, Int64, Int64, Int64, Int64, Int64, Boolean, Boolean, Boolean, Boolean, UInt16, IEventTarget) Declaration public void InitMouseEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable IAbstractView view Int64 detail Int64 screenX Int64 screenY Int64 clientX Int64 clientY Boolean ctrlKey Boolean altKey Boolean shiftKey Boolean metaKey UInt16 button IEventTarget relatedTarget InitMouseEventNs(String, String, Boolean, Boolean, IAbstractView, Int64, Int64, Int64, Int64, Int64, Boolean, Boolean, Boolean, Boolean, UInt16, IEventTarget, Boolean) Declaration public void InitMouseEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget, bool altGraphKey) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable IAbstractView view Int64 detail Int64 screenX Int64 screenY Int64 clientX Int64 clientY Boolean ctrlKey Boolean altKey Boolean shiftKey Boolean metaKey UInt16 button IEventTarget relatedTarget Boolean altGraphKey Implements IMouseEvent IUiEvent IEvent"
  },
  "api/SharpVectors.Dom.Events.MutationEvent.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.html",
    "title": "Class MutationEvent | SharpVectors Documentation",
    "keywords": "Class MutationEvent Summary description for MutationEvent. Inheritance Object Event MutationEvent MutationNameEvent Implements IMutationEvent IEvent Inherited Members Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(String, Boolean, Boolean) Event.InitEventNs(String, String, Boolean, Boolean) Event.StopImmediatePropagation() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class MutationEvent : Event, IMutationEvent, IEvent Constructors MutationEvent() Declaration public MutationEvent() Properties AttrChange Declaration public AttrChangeType AttrChange { get; } Property Value Type Description AttrChangeType AttrName Declaration public string AttrName { get; } Property Value Type Description String NewValue Declaration public string NewValue { get; } Property Value Type Description String PrevValue Declaration public string PrevValue { get; } Property Value Type Description String RelatedNode Declaration public INode RelatedNode { get; } Property Value Type Description INode Methods InitMutationEvent(String, Boolean, Boolean, INode, String, String, String, AttrChangeType) Declaration public void InitMutationEvent(string eventType, bool bubbles, bool cancelable, INode relatedNode, string prevValue, string newValue, string attrName, AttrChangeType attrChange) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable INode relatedNode String prevValue String newValue String attrName AttrChangeType attrChange InitMutationEventNs(String, String, Boolean, Boolean, INode, String, String, String, AttrChangeType) Declaration public void InitMutationEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, INode relatedNode, string prevValue, string newValue, string attrName, AttrChangeType attrChange) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable INode relatedNode String prevValue String newValue String attrName AttrChangeType attrChange Implements IMutationEvent IEvent"
  },
  "api/SharpVectors.Dom.Events.MutationNameEvent.html": {
    "href": "api/SharpVectors.Dom.Events.MutationNameEvent.html",
    "title": "Class MutationNameEvent | SharpVectors Documentation",
    "keywords": "Class MutationNameEvent Summary description for MutationNameEvent. Inheritance Object Event MutationEvent MutationNameEvent Implements IMutationEvent IEvent IMutationNameEvent Inherited Members MutationEvent.RelatedNode MutationEvent.PrevValue MutationEvent.NewValue MutationEvent.AttrName MutationEvent.AttrChange MutationEvent.InitMutationEvent(String, Boolean, Boolean, INode, String, String, String, AttrChangeType) MutationEvent.InitMutationEventNs(String, String, Boolean, Boolean, INode, String, String, String, AttrChangeType) Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(String, Boolean, Boolean) Event.InitEventNs(String, String, Boolean, Boolean) Event.StopImmediatePropagation() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class MutationNameEvent : MutationEvent, IMutationEvent, IEvent, IMutationNameEvent Properties PrevNamespaceUri Declaration public string PrevNamespaceUri { get; } Property Value Type Description String PrevNodeName Declaration public string PrevNodeName { get; } Property Value Type Description String Methods InitMutationNameEvent(String, Boolean, Boolean, INode, String, String) Declaration public void InitMutationNameEvent(string eventType, bool bubbles, bool cancelable, INode relatedNode, string prevNamespaceUri, string prevNodeName) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable INode relatedNode String prevNamespaceUri String prevNodeName InitMutationNameEventNs(String, String, Boolean, Boolean, INode, String, String) Declaration public void InitMutationNameEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, INode relatedNode, string prevNamespaceUri, string prevNodeName) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable INode relatedNode String prevNamespaceUri String prevNodeName Implements IMutationEvent IEvent IMutationNameEvent"
  },
  "api/SharpVectors.Dom.Events.TextEvent.html": {
    "href": "api/SharpVectors.Dom.Events.TextEvent.html",
    "title": "Class TextEvent | SharpVectors Documentation",
    "keywords": "Class TextEvent Summary description for TextEvent. Inheritance Object Event UiEvent TextEvent Implements ITextEvent IUiEvent IEvent Inherited Members UiEvent.View UiEvent.Detail UiEvent.InitUiEvent(String, Boolean, Boolean, IAbstractView, Int64) UiEvent.InitUiEventNs(String, String, Boolean, Boolean, IAbstractView, Int64) Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(String, Boolean, Boolean) Event.InitEventNs(String, String, Boolean, Boolean) Event.StopImmediatePropagation() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class TextEvent : UiEvent, ITextEvent, IUiEvent, IEvent Constructors TextEvent() Declaration public TextEvent() TextEvent(String, Boolean, Boolean, IAbstractView, String) Declaration public TextEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, string data) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable IAbstractView view String data TextEvent(String, String, Boolean, Boolean, IAbstractView, String) Declaration public TextEvent(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, string data) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable IAbstractView view String data Properties Data Declaration public string Data { get; } Property Value Type Description String Methods InitTextEvent(String, Boolean, Boolean, IAbstractView, String) Declaration public void InitTextEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, string data) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable IAbstractView view String data InitTextEventNs(String, String, Boolean, Boolean, IAbstractView, String) Declaration public void InitTextEventNs(string namespaceUri, string type, bool bubbles, bool cancelable, IAbstractView view, string data) Parameters Type Name Description String namespaceUri String type Boolean bubbles Boolean cancelable IAbstractView view String data Implements ITextEvent IUiEvent IEvent"
  },
  "api/SharpVectors.Dom.Events.UiEvent.html": {
    "href": "api/SharpVectors.Dom.Events.UiEvent.html",
    "title": "Class UiEvent | SharpVectors Documentation",
    "keywords": "Class UiEvent Summary description for UiEvent. Inheritance Object Event UiEvent KeyboardEvent MouseEvent TextEvent Implements IUiEvent IEvent Inherited Members Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(String, Boolean, Boolean) Event.InitEventNs(String, String, Boolean, Boolean) Event.StopImmediatePropagation() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Events Assembly : SharpVectors.Dom.dll Syntax public class UiEvent : Event, IUiEvent, IEvent Constructors UiEvent() Declaration public UiEvent() UiEvent(String, Boolean, Boolean, IAbstractView, Int64) Declaration public UiEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable IAbstractView view Int64 detail UiEvent(String, String, Boolean, Boolean, IAbstractView, Int64) Declaration public UiEvent(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable IAbstractView view Int64 detail Properties Detail Declaration public long Detail { get; } Property Value Type Description Int64 View Declaration public IAbstractView View { get; } Property Value Type Description IAbstractView Methods InitUiEvent(String, Boolean, Boolean, IAbstractView, Int64) Declaration public void InitUiEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail) Parameters Type Name Description String eventType Boolean bubbles Boolean cancelable IAbstractView view Int64 detail InitUiEventNs(String, String, Boolean, Boolean, IAbstractView, Int64) Declaration public void InitUiEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail) Parameters Type Name Description String namespaceUri String eventType Boolean bubbles Boolean cancelable IAbstractView view Int64 detail Implements IUiEvent IEvent"
  },
  "api/SharpVectors.Dom.html": {
    "href": "api/SharpVectors.Dom.html",
    "title": "Namespace SharpVectors.Dom | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom Classes Attribute Summary description for Attribute. CDataSection Summary description for CDataSection. Comment Summary description for Comment. CssConstants This interface defines constants for CSS. Declaration Summary description for Declaration. Document Summary description for Document. DocumentFragment Summary description for DocumentFragment. DocumentType Summary description for DocumentType. DomException Represents errors that occur during DOM operation execution. DomImplementation Summary description for DomImplementation. Element Summary description for Element. EntityReference Summary description for EntityReference. NodeListAdapter Summary description for NodeListAdapter. ProcessingInstruction Summary description for ProcessingInstruction. SignificantWhitespace Summary description for SignificantWhitespace. SvgConstants Define SVG constants, such as tag names, attribute names and URI Text Summary description for Text. Whitespace Summary description for Whitespace. XmlConstants Contains common XML constants. Interfaces IAttribute Summary description for IAttribute. ICDataSection Summary description for ICDataSection. ICharacterData Provides text manipulation methods that are used by several classes. IComment Summary description for IComment. IDocument IDocumentFragment Represents a lightweight object that is useful for tree insert operations. IDocumentType This represents the document type declaration. IDomConfiguration The IDomConfiguration interface represents the configuration of a document and maintains a table of recognized parameters. IDomImplementation The IDomImplementation interface provides a number of methods for performing operations that are independent of any particular instance of the document object model. IDomTimeStamp The DOMTimeStamp type represents an absolute or relative number of milliseconds, depending on the specification in which it appears. IElement The IElement interface represents an element in an HTML or XML document. IElementTimeControl An SMIL animation interface to supports several methods for controlling the behavior of animation. IEntity IEntityReference IEntityReference objects may be inserted into the structure model when an entity reference is in the source document, or when the user wishes to insert an entity reference. INamedNodeMap Represents a collection of nodes that can be accessed by name or index. Objects implementing the INamedNodeMap interface are used to represent collections of nodes that can be accessed by name. INode The INode interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. INodeList The INodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. INodeList objects in the DOM are live. The items in the INodeList are accessible via an integral index, starting from 0 . INotation This interface represents a notation declared in the DTD. A notation either declares, by name, the format of an unparsed entity (see section 4.7 of the XML 1.0 specification ), or is used for formal declaration of processing instruction targets (see section 2.6 of the XML 1.0 specification ). The attribute inherited from INode is set to the declared name of the notation. The DOM Level 1 does not support editing INotation nodes; they are therefore readonly. A INotation node does not have any parent. IProcessingInstruction Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document. IText Represents the text content of an element or attribute. IXmlElement The IElement interface represents an element in an HTML or XML document. IXmlNode The IXmlNode interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. XmlNode Enums DomExceptionType DOM exception code types."
  },
  "api/SharpVectors.Dom.IAttribute.html": {
    "href": "api/SharpVectors.Dom.IAttribute.html",
    "title": "Interface IAttribute | SharpVectors Documentation",
    "keywords": "Interface IAttribute Summary description for IAttribute. Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IAttribute : INode, IXmlNode Properties OwnerElement Declaration XmlElement OwnerElement { get; } Property Value Type Description XmlElement Specified Declaration bool Specified { get; } Property Value Type Description Boolean"
  },
  "api/SharpVectors.Dom.ICDataSection.html": {
    "href": "api/SharpVectors.Dom.ICDataSection.html",
    "title": "Interface ICDataSection | SharpVectors Documentation",
    "keywords": "Interface ICDataSection Summary description for ICDataSection. Inherited Members ICharacterData.Data ICharacterData.Length ICharacterData.AppendData(String) ICharacterData.DeleteData(Int32, Int32) ICharacterData.InsertData(Int32, String) ICharacterData.ReplaceData(Int32, Int32, String) ICharacterData.Substring(Int32, Int32) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface ICDataSection : ICharacterData, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.ICharacterData.html": {
    "href": "api/SharpVectors.Dom.ICharacterData.html",
    "title": "Interface ICharacterData | SharpVectors Documentation",
    "keywords": "Interface ICharacterData Provides text manipulation methods that are used by several classes. Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface ICharacterData : INode, IXmlNode Properties Data Contains the data of the node. Declaration string Data { get; set; } Property Value Type Description String The data of the node. Length Gets the length of the data, in characters. Declaration int Length { get; } Property Value Type Description Int32 The length, in characters, of the string in the Data property. The length may be zero; that is, ICharacterData nodes can be empty. Methods AppendData(String) Appends the specified string to the end of the character data of the node. Declaration void AppendData(string strData) Parameters Type Name Description String strData The string to insert into the existing string. DeleteData(Int32, Int32) Removes a range of characters from the node. Declaration void DeleteData(int offset, int count) Parameters Type Name Description Int32 offset The position within the string to start deleting. Int32 count The number of characters to delete. InsertData(Int32, String) Inserts the specified string at the specified character offset. Declaration void InsertData(int offset, string strData) Parameters Type Name Description Int32 offset The position within the string to insert the supplied string data. String strData The string data that is to be inserted into the existing string. ReplaceData(Int32, Int32, String) Declaration void ReplaceData(int offset, int count, string strData) Parameters Type Name Description Int32 offset Int32 count String strData Substring(Int32, Int32) Retrieves a substring of the full string from the specified range. Declaration string Substring(int offset, int count) Parameters Type Name Description Int32 offset The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data. Int32 count The number of characters to retrieve. Returns Type Description String The substring corresponding to the specified range."
  },
  "api/SharpVectors.Dom.IComment.html": {
    "href": "api/SharpVectors.Dom.IComment.html",
    "title": "Interface IComment | SharpVectors Documentation",
    "keywords": "Interface IComment Summary description for IComment. Inherited Members ICharacterData.Data ICharacterData.Length ICharacterData.AppendData(String) ICharacterData.DeleteData(Int32, Int32) ICharacterData.InsertData(Int32, String) ICharacterData.ReplaceData(Int32, Int32, String) ICharacterData.Substring(Int32, Int32) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IComment : ICharacterData, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.IDocument.html": {
    "href": "api/SharpVectors.Dom.IDocument.html",
    "title": "Interface IDocument | SharpVectors Documentation",
    "keywords": "Interface IDocument Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IDocument : INode, IXmlNode Properties Doctype Declaration IDocumentType Doctype { get; } Property Value Type Description IDocumentType DocumentElement Declaration IElement DocumentElement { get; } Property Value Type Description IElement Implementation Declaration IDomImplementation Implementation { get; } Property Value Type Description IDomImplementation Methods CreateAttribute(String) Declaration IAttribute CreateAttribute(string name) Parameters Type Name Description String name Returns Type Description IAttribute CreateAttributeNs(String, String) Declaration IAttribute CreateAttributeNs(string namespaceUri, string qualifiedName) Parameters Type Name Description String namespaceUri String qualifiedName Returns Type Description IAttribute CreateCDataSection(String) Declaration ICDataSection CreateCDataSection(string data) Parameters Type Name Description String data Returns Type Description ICDataSection CreateComment(String) Declaration IComment CreateComment(string data) Parameters Type Name Description String data Returns Type Description IComment CreateDocumentFragment() Declaration IDocumentFragment CreateDocumentFragment() Returns Type Description IDocumentFragment CreateElement(String) Declaration IElement CreateElement(string tagName) Parameters Type Name Description String tagName Returns Type Description IElement CreateElementNs(String, String) Declaration IElement CreateElementNs(string namespaceUri, string qualifiedName) Parameters Type Name Description String namespaceUri String qualifiedName Returns Type Description IElement CreateEntityReference(String) Declaration IEntityReference CreateEntityReference(string name) Parameters Type Name Description String name Returns Type Description IEntityReference CreateProcessingInstruction(String, String) Declaration IProcessingInstruction CreateProcessingInstruction(string target, string data) Parameters Type Name Description String target String data Returns Type Description IProcessingInstruction CreateTextNode(String) Declaration IText CreateTextNode(string data) Parameters Type Name Description String data Returns Type Description IText GetElementById(String) Declaration IElement GetElementById(string elementId) Parameters Type Name Description String elementId Returns Type Description IElement GetElementsByTagName(String) Declaration INodeList GetElementsByTagName(string tagname) Parameters Type Name Description String tagname Returns Type Description INodeList GetElementsByTagNameNs(String, String) Declaration INodeList GetElementsByTagNameNs(string namespaceURI, string localName) Parameters Type Name Description String namespaceURI String localName Returns Type Description INodeList ImportNode(INode, Boolean) Declaration INode ImportNode(INode importedNode, bool deep) Parameters Type Name Description INode importedNode Boolean deep Returns Type Description INode"
  },
  "api/SharpVectors.Dom.IDocumentFragment.html": {
    "href": "api/SharpVectors.Dom.IDocumentFragment.html",
    "title": "Interface IDocumentFragment | SharpVectors Documentation",
    "keywords": "Interface IDocumentFragment Represents a lightweight object that is useful for tree insert operations. Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IDocumentFragment : INode, IXmlNode"
  },
  "api/SharpVectors.Dom.IDocumentType.html": {
    "href": "api/SharpVectors.Dom.IDocumentType.html",
    "title": "Interface IDocumentType | SharpVectors Documentation",
    "keywords": "Interface IDocumentType This represents the document type declaration. Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IDocumentType : INode, IXmlNode Properties Entities Gets the collection of XmlEntity nodes declared in the document type declaration. Declaration XmlNamedNodeMap Entities { get; } Property Value Type Description XmlNamedNodeMap An XmlNamedNodeMap containing the XmlEntity nodes. The returned XmlNamedNodeMap is read-only. InternalSubset Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration. Declaration string InternalSubset { get; } Property Value Type Description String The DTD internal subset on the DOCTYPE . If there is no DTD internal subset, is returned. Notations Gets the collection of XmlNotation nodes present in the document type declaration. Declaration XmlNamedNodeMap Notations { get; } Property Value Type Description XmlNamedNodeMap An XmlNamedNodeMap containing the XmlNotation nodes. The returned XmlNamedNodeMap is read-only. PublicId Gets the value of the public identifier on the DOCTYPE declaration. Declaration string PublicId { get; } Property Value Type Description String The public identifier on the DOCTYPE . If there is no public identifier, null is returned. SystemId Gets the value of the system identifier on the DOCTYPE declaration. Declaration string SystemId { get; } Property Value Type Description String The system identifier on the DOCTYPE . If there is no system identifier, null is returned. See Also XmlDocumentType"
  },
  "api/SharpVectors.Dom.IDomConfiguration.html": {
    "href": "api/SharpVectors.Dom.IDomConfiguration.html",
    "title": "Interface IDomConfiguration | SharpVectors Documentation",
    "keywords": "Interface IDomConfiguration The IDomConfiguration interface represents the configuration of a document and maintains a table of recognized parameters. Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IDomConfiguration Methods CanSetParameter(String, Object) Check if setting a parameter to a specific value is supported. Declaration bool CanSetParameter(string name, object value) Parameters Type Name Description String name The name of the parameter to check. Object value An object. If null , the returned value is true . Returns Type Description Boolean Returns true if the parameter could be successfully set to the specified value, or false if the parameter is not recognized or the requested value is not supported. This does not change the current value of the parameter itself. GetParameter(String) Gets the value of the known parameter with the specified name. Declaration object GetParameter(string name) Parameters Type Name Description String name The name of the parameter. Returns Type Description Object The current object associated with the specified parameter or null if no object has been associated or if the parameter is not supported. GetParameterNames() The list of the parameters supported by this IDomConfiguration object. Declaration ICollection<string> GetParameterNames() Returns Type Description ICollection < String > A collection specifying the names of the parameters. SetParameter(String, Object) Sets the name and the value of a parameter. If the name is already set, the value is changed. Declaration void SetParameter(string name, object value) Parameters Type Name Description String name The name of the parameter to set. Object value The value or null to unset the parameter. See Also DOMConfiguration"
  },
  "api/SharpVectors.Dom.IDomImplementation.html": {
    "href": "api/SharpVectors.Dom.IDomImplementation.html",
    "title": "Interface IDomImplementation | SharpVectors Documentation",
    "keywords": "Interface IDomImplementation The IDomImplementation interface provides a number of methods for performing operations that are independent of any particular instance of the document object model. Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IDomImplementation Methods CreateDocument(String, String, IDocumentType) Creates an XML IDocument object of the specified type with its document element. HTML-only DOM implementations do not need to implement this method. Declaration IDocument CreateDocument(string namespaceURI, string qualifiedName, IDocumentType doctype) Parameters Type Name Description String namespaceURI namespace URI of the document element to create. String qualifiedName qualified name of the document element to be created. IDocumentType doctype type of document to be created or null . When doctype is not null , its attribute is set to the document being created. Returns Type Description IDocument A new IDocument object. Exceptions Type Condition DomException INVALID_CHARACTER_ERR: Raised if the specified qualified name contains an illegal character. NAMESPACE_ERR: Raised if the qualifiedName is malformed, if the qualifiedName has a prefix and the namespaceURI is null , or if the qualifiedName has a prefix that is \"xml\" and the namespaceURI is different from https://www.w3.org/XML/1998/namespace . WRONG_DOCUMENT_ERR: Raised if doctype has already been used with a different document or was created from a different implementation. CreateDocumentType(String, String, String) Creates an empty IDocumentType node. Entity declarations and notations are not made available. Declaration IDocumentType CreateDocumentType(string qualifiedName, string publicId, string systemId) Parameters Type Name Description String qualifiedName qualified name of the document type to be created. String publicId external subset public identifier. String systemId external subset system identifier. Returns Type Description IDocumentType A new IDocumentType node with set to null . Remarks Entity reference expansions and default attribute additions do not occur. It is expected that a future version of the DOM will provide a way for populating a IDocumentType . HTML-only DOM implementations do not need to implement this method. Exceptions Type Condition DomException INVALID_CHARACTER_ERR: Raised if the specified qualified name contains an illegal character. NAMESPACE_ERR: Raised if the qualifiedName is malformed. HasFeature(String, String) Test if the DOM implementation implements a specific feature. Declaration bool HasFeature(string feature, string version) Parameters Type Name Description String feature name of the feature to test (case-insensitive). The values used by DOM features are defined throughout the DOM Level 2 specifications and listed in the section. The name must be an XML name. To avoid possible conflicts, as a convention, names referring to features defined outside the DOM specification should be made unique by reversing the name of the Internet domain name of the person (or the organization that the person belongs to) who defines the feature, component by component, and using this as a prefix. For instance, the W3C SVG Working Group defines the feature \"org.w3c.dom.svg\". String version is the version number of the feature to test. In Level 2, the string can be either \"2.0\" or \"1.0\". If the version is not specified, supporting any version of the feature causes the method to return true . Returns Type Description Boolean true if the feature is implemented in the specified version, false otherwise. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IDomTimeStamp.html": {
    "href": "api/SharpVectors.Dom.IDomTimeStamp.html",
    "title": "Interface IDomTimeStamp | SharpVectors Documentation",
    "keywords": "Interface IDomTimeStamp The DOMTimeStamp type represents an absolute or relative number of milliseconds, depending on the specification in which it appears. Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IDomTimeStamp See Also https://developer.mozilla.org/en-US/docs/Web/API/DOMTimeStamp"
  },
  "api/SharpVectors.Dom.IElement.html": {
    "href": "api/SharpVectors.Dom.IElement.html",
    "title": "Interface IElement | SharpVectors Documentation",
    "keywords": "Interface IElement The IElement interface represents an element in an HTML or XML document. Inherited Members IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IElement : IXmlElement, INode, IXmlNode Remarks Elements may have attributes associated with them; since the IElement interface inherits from INode , the generic INode interface attribute IAttribute may be used to retrieve the set of all attributes for an element. There are methods on the IElement interface to retrieve either an IAttribute object by name or an attribute value by name. In XML, where an attribute value may contain entity references, an IAttribute object should be retrieved to examine the possibly fairly complex sub-tree representing the attribute value. On the other hand, in HTML, where all attributes have simple string values, methods to directly access an attribute value can safely be used as a convenience.In DOM Level 2, the method is inherited from the INode interface where it was moved. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IElementTimeControl.html": {
    "href": "api/SharpVectors.Dom.IElementTimeControl.html",
    "title": "Interface IElementTimeControl | SharpVectors Documentation",
    "keywords": "Interface IElementTimeControl An SMIL animation interface to supports several methods for controlling the behavior of animation. Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IElementTimeControl Methods BeginElement() Creates a begin instance time for the current time. The new instance time is added to the begin instance times list. The behavior of this method is equivalent to BeginElementAt(0). Declaration void BeginElement() BeginElementAt(Single) Creates a begin instance time for the current time plus the specified offset. The new instance time is added to the begin instance times list. Declaration void BeginElementAt(float offset) Parameters Type Name Description Single offset The offset from the current document time, in seconds, at which to begin the element. EndElement() Creates an end instance time for the current time. The new instance time is added to the end instance times list. The behavior of this method is equivalent to EndElementAt(0). Declaration void EndElement() EndElementAt(Single) Creates a end instance time for the current time plus the specified offset. The new instance time is added to the end instance times list. Declaration void EndElementAt(float offset) Parameters Type Name Description Single offset The offset from the current document time, in seconds, at which to end the element."
  },
  "api/SharpVectors.Dom.IEntity.html": {
    "href": "api/SharpVectors.Dom.IEntity.html",
    "title": "Interface IEntity | SharpVectors Documentation",
    "keywords": "Interface IEntity Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IEntity : INode, IXmlNode Properties NotationName Gets the name of the optional NDATA attribute on the entity declaration. For unparsed entities, the name of the notation for the entity. For parsed entities, this is null . Declaration string NotationName { get; } Property Value Type Description String The name of the NDATA attribute. If there is no NDATA, null is returned. PublicId Gets the public identifier associated with the entity, if specified. If the public identifier was not specified, this is null . Declaration string PublicId { get; } Property Value Type Description String The public identifier on the entity. If there is no public identifier, null is returned. SystemId Gets the value of system identifier associated with the entity declaration, if specified. If the system identifier was not specified, this is null . Declaration string SystemId { get; } Property Value Type Description String The system identifier on the entity. If there is no system identifier, null is returned."
  },
  "api/SharpVectors.Dom.IEntityReference.html": {
    "href": "api/SharpVectors.Dom.IEntityReference.html",
    "title": "Interface IEntityReference | SharpVectors Documentation",
    "keywords": "Interface IEntityReference IEntityReference objects may be inserted into the structure model when an entity reference is in the source document, or when the user wishes to insert an entity reference. Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IEntityReference : INode, IXmlNode Remarks Note that character references and references to predefined entities are considered to be expanded by the HTML or XML processor so that characters are represented by their Unicode equivalent rather than by an entity reference. Moreover, the XML processor may completely expand references to entities while building the structure model, instead of providing IEntityReference objects. If it does provide such objects, then for a given IEntityReference node, it may be that there is no IEntity node representing the referenced entity. If such an IEntity exists, then the subtree of the IEntityReference node is in general a copy of the IEntity node subtree. However, this may not be true when an entity contains an unbound namespace prefix. In such a case, because the namespace prefix resolution depends on where the entity reference is, the descendants of the IEntityReference node may be bound to different namespace URIs. As for IEntity nodes, IEntityReference nodes and all their descendants are readonly. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.INamedNodeMap.html": {
    "href": "api/SharpVectors.Dom.INamedNodeMap.html",
    "title": "Interface INamedNodeMap | SharpVectors Documentation",
    "keywords": "Interface INamedNodeMap Represents a collection of nodes that can be accessed by name or index. Objects implementing the INamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Inherited Members IEnumerable.GetEnumerator() Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface INamedNodeMap : IEnumerable Remarks Note that INamedNodeMap does not inherit from INodeList ; INamedNodeMap s are not maintained in any particular order. Objects contained in an object implementing INamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a INamedNodeMap , and does not imply that the DOM specifies an order to these Nodes. INamedNodeMap objects in the DOM are live. Properties Count Gets the number of nodes in the INamedNodeMap . Declaration int Count { get; } Property Value Type Description Int32 The number of nodes. Methods GetNamedItem(String) Retrieves an XmlNode specified by name. Declaration XmlNode GetNamedItem(string name) Parameters Type Name Description String name The qualified name of the node to retrieve. It is matched against the Name property of the matching node. Returns Type Description XmlNode An XmlNode with the specified name or null if a matching node is not found. GetNamedItem(String, String) Retrieves a node with the matching LocalName and NamespaceURI . Declaration XmlNode GetNamedItem(string localName, string namespaceURI) Parameters Type Name Description String localName The local name of the node to retrieve. String namespaceURI The namespace Uniform Resource Identifier (URI) of the node to retrieve. Returns Type Description XmlNode An XmlNode with the matching local name and namespace URI or null if a matching node was not found. Item(Int32) Retrieves the node at the specified index in the INamedNodeMap . Declaration XmlNode Item(int index) Parameters Type Name Description Int32 index The index position of the node to retrieve from the INamedNodeMap . The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is Count -1. Returns Type Description XmlNode The XmlNode at the specified index. If index is less than 0 or greater than or equal to the Count property, null is returned. RemoveNamedItem(String) Removes the node from the INamedNodeMap . Declaration XmlNode RemoveNamedItem(string name) Parameters Type Name Description String name The qualified name of the node to remove. The name is matched against the Name property of the matching node. Returns Type Description XmlNode The XmlNode removed from this INamedNodeMap or null if a matching node was not found. RemoveNamedItem(String, String) Removes a node with the matching LocalName and NamespaceURI . Declaration XmlNode RemoveNamedItem(string localName, string namespaceURI) Parameters Type Name Description String localName The local name of the node to remove. String namespaceURI The namespace URI of the node to remove. Returns Type Description XmlNode The XmlNode removed or null if a matching node was not found. SetNamedItem(XmlNode) Adds an XmlNode using its Name property Declaration XmlNode SetNamedItem(XmlNode node) Parameters Type Name Description XmlNode node An XmlNode to store in the INamedNodeMap . If a node with that name is already present in the map, it is replaced by the new one. Returns Type Description XmlNode If the node replaces an existing node with the same name, the old node is returned; otherwise, null is returned. Exceptions Type Condition ArgumentException The node was created from a different XmlDocument than the one that created the INamedNodeMap ; or the INamedNodeMap is read-only. See Also Document Object Model (DOM) Level 2 Core Specification XmlAttributeCollection"
  },
  "api/SharpVectors.Dom.INode.html": {
    "href": "api/SharpVectors.Dom.INode.html",
    "title": "Interface INode | SharpVectors Documentation",
    "keywords": "Interface INode The INode interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface INode : IXmlNode Remarks While all objects implementing the INode interface expose methods for dealing with children, not all objects implementing the INode interface may have children. For example, IText nodes may not have children, and adding children to such nodes results in a DomException being raised. The attributes , and are included as a mechanism to get at node information without casting down to the specific derived interface. In cases where there is no obvious mapping of these attributes for a specific (e.g., for an IElement or for a IComment ), this returns null . Note that the specialized interfaces may contain additional and more convenient mechanisms to get and set the relevant information. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.INodeList.html": {
    "href": "api/SharpVectors.Dom.INodeList.html",
    "title": "Interface INodeList | SharpVectors Documentation",
    "keywords": "Interface INodeList The INodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. INodeList objects in the DOM are live. The items in the INodeList are accessible via an integral index, starting from 0 . Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface INodeList Properties Count Gets the number of nodes in the list. The range of valid child node indices is 0 to Count -1 inclusive. Declaration ulong Count { get; } Property Value Type Description UInt64 Item[UInt64] Gets the index th item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null . Declaration INode this[ulong index] { get; } Parameters Type Name Description UInt64 index into the collection. Property Value Type Description INode The node at the index th position in the INodeList , or null if that is not a valid index. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.INotation.html": {
    "href": "api/SharpVectors.Dom.INotation.html",
    "title": "Interface INotation | SharpVectors Documentation",
    "keywords": "Interface INotation This interface represents a notation declared in the DTD. A notation either declares, by name, the format of an unparsed entity (see section 4.7 of the XML 1.0 specification ), or is used for formal declaration of processing instruction targets (see section 2.6 of the XML 1.0 specification ). The attribute inherited from INode is set to the declared name of the notation. The DOM Level 1 does not support editing INotation nodes; they are therefore readonly. A INotation node does not have any parent. Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface INotation : INode, IXmlNode Properties PublicId Gets the value of the public identifier on the notation declaration. If the public identifier was not specified, this is null . Declaration string PublicId { get; } Property Value Type Description String The public identifier on the notation. If there is no public identifier, null is returned. SystemId Gets the value of the system identifier on the notation declaration. If the system identifier was not specified, this is null . Declaration string SystemId { get; } Property Value Type Description String The system identifier on the notation. If there is no system identifier, null is returned. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IProcessingInstruction.html": {
    "href": "api/SharpVectors.Dom.IProcessingInstruction.html",
    "title": "Interface IProcessingInstruction | SharpVectors Documentation",
    "keywords": "Interface IProcessingInstruction Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document. Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IProcessingInstruction : INode, IXmlNode Properties Data Gets or sets the content of the processing instruction, excluding the target. Declaration string Data { get; set; } Property Value Type Description String The content of the processing instruction, excluding the target. Target Gets the target of the processing instruction. Declaration string Target { get; } Property Value Type Description String The target of the processing instruction. Remarks The target of this processing instruction. XML defines this as being the first token following the markup that begins the processing instruction. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IText.html": {
    "href": "api/SharpVectors.Dom.IText.html",
    "title": "Interface IText | SharpVectors Documentation",
    "keywords": "Interface IText Represents the text content of an element or attribute. Inherited Members ICharacterData.Data ICharacterData.Length ICharacterData.AppendData(String) ICharacterData.DeleteData(Int32, Int32) ICharacterData.InsertData(Int32, String) ICharacterData.ReplaceData(Int32, Int32, String) ICharacterData.Substring(Int32, Int32) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IText : ICharacterData, INode, IXmlNode Methods SplitText(Int32) Splits the node into two nodes at the specified offset, keeping both in the tree as siblings. Declaration XmlText SplitText(int offset) Parameters Type Name Description Int32 offset The offset at which to split the node. Returns Type Description XmlText The new node."
  },
  "api/SharpVectors.Dom.IXmlElement.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.html",
    "title": "Interface IXmlElement | SharpVectors Documentation",
    "keywords": "Interface IXmlElement The IElement interface represents an element in an HTML or XML document. Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IXmlElement : INode, IXmlNode Remarks Elements may have attributes associated with them; since the IElement interface inherits from INode , the generic INode interface attribute IAttribute may be used to retrieve the set of all attributes for an element. There are methods on the IElement interface to retrieve either an IAttribute object by name or an attribute value by name. In XML, where an attribute value may contain entity references, an IAttribute object should be retrieved to examine the possibly fairly complex sub-tree representing the attribute value. On the other hand, in HTML, where all attributes have simple string values, methods to directly access an attribute value can safely be used as a convenience. In DOM Level 2, the method is inherited from the INode interface where it was moved. Properties HasAttributes Gets a value indicating whether this node (if it is an element) has any attributes. Declaration bool HasAttributes { get; } Property Value Type Description Boolean true if this node has any attributes, false otherwise. Methods GetAttribute(String) Returns the value for the attribute with the specified name. Declaration string GetAttribute(string name) Parameters Type Name Description String name The name of the attribute to retrieve. This is a qualified name. It is matched against the property of the matching node. Returns Type Description String The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value. GetAttribute(String, String) Returns the value for the attribute with the specified local name and namespace URI. Declaration string GetAttribute(string localName, string namespaceURI) Parameters Type Name Description String localName The local name of the attribute to retrieve. String namespaceURI The namespace URI of the attribute to retrieve. Returns Type Description String The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value. GetAttributeNode(String) Returns the XmlAttribute with the specified name. Declaration XmlAttribute GetAttributeNode(string name) Parameters Type Name Description String name The name of the attribute to retrieve. This is a qualified name. It is matched against the Name property of the matching node. Returns Type Description XmlAttribute The specified XmlAttribute or null if a matching attribute was not found. GetAttributeNode(String, String) Returns the XmlAttribute with the specified local name and namespace URI. Declaration XmlAttribute GetAttributeNode(string localName, string namespaceURI) Parameters Type Name Description String localName The local name of the attribute. String namespaceURI The namespace URI of the attribute. Returns Type Description XmlAttribute The specified XmlAttribute or null if a matching attribute was not found. GetElementsByTagName(String) Returns an XmlNodeList containing a list of all descendant elements that match the specified Name . Declaration XmlNodeList GetElementsByTagName(string name) Parameters Type Name Description String name The name tag to match. This is a qualified name. It is matched against the Name property of the matching node. The asterisk (*) is a special value that matches all tags. Returns Type Description XmlNodeList An XmlNodeList containing a list of all matching nodes. See Also INodeList GetElementsByTagName(String, String) Returns an XmlNodeList containing a list of all descendant elements that match the specified LocalName and NamespaceURI . Declaration XmlNodeList GetElementsByTagName(string localName, string namespaceURI) Parameters Type Name Description String localName The local name to match. The asterisk (*) is a special value that matches all tags. String namespaceURI The namespace URI to match. Returns Type Description XmlNodeList An XmlNodeList containing a list of all matching nodes. See Also INodeList HasAttribute(String) Determines whether the current node has an attribute with the specified name. Declaration bool HasAttribute(string name) Parameters Type Name Description String name The name of the attribute to find. This is a qualified name. It is matched against the Name property of the matching node. Returns Type Description Boolean true if the current node has the specified attribute; otherwise, false . HasAttribute(String, String) Determines whether the current node has an attribute with the specified local name and namespace URI. Declaration bool HasAttribute(string localName, string namespaceURI) Parameters Type Name Description String localName The local name of the attribute to find. String namespaceURI The namespace URI of the attribute to find. Returns Type Description Boolean true if the current node has the specified attribute; otherwise, false . RemoveAttribute(String) Removes an attribute by name. Declaration void RemoveAttribute(string name) Parameters Type Name Description String name The name of the attribute to remove.This is a qualified name. It is matched against the Name property of the matching node. RemoveAttribute(String, String) Removes an attribute with the specified local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced). Declaration void RemoveAttribute(string localName, string namespaceURI) Parameters Type Name Description String localName The local name of the attribute to remove. String namespaceURI The namespace URI of the attribute to remove. RemoveAttributeNode(String, String) Removes the XmlAttribute specified by the local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced). Declaration XmlAttribute RemoveAttributeNode(string localName, string namespaceURI) Parameters Type Name Description String localName The local name of the attribute. String namespaceURI The namespace URI of the attribute. Returns Type Description XmlAttribute The removed XmlAttribute or null if the XmlElement does not have a matching attribute node. RemoveAttributeNode(XmlAttribute) Removes the specified XmlAttribute . Declaration XmlAttribute RemoveAttributeNode(XmlAttribute oldAttr) Parameters Type Name Description XmlAttribute oldAttr The XmlAttribute node to remove. If the removed attribute has a default value, it is immediately replaced. Returns Type Description XmlAttribute The removed XmlAttribute or null if oldAttr is not an attribute node of the XmlElement . SetAttribute(String, String) Sets the value of the attribute with the specified name. Declaration void SetAttribute(string name, string value) Parameters Type Name Description String name The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components. String value The value to set for the attribute. SetAttribute(String, String, String) Sets the value of the attribute with the specified local name and namespace URI. Declaration string SetAttribute(string qualifiedName, string namespaceURI, string value) Parameters Type Name Description String qualifiedName The local name of the attribute. String namespaceURI The namespace URI of the attribute. String value The value to set for the attribute. Returns Type Description String The attribute value. SetAttributeNode(String, String) Adds the specified XmlAttribute . Declaration XmlAttribute SetAttributeNode(string localName, string namespaceURI) Parameters Type Name Description String localName The local name of the attribute. String namespaceURI The namespace URI of the attribute. Returns Type Description XmlAttribute The XmlAttribute to add. SetAttributeNode(XmlAttribute) Adds the specified XmlAttribute . Declaration XmlAttribute SetAttributeNode(XmlAttribute newAttr) Parameters Type Name Description XmlAttribute newAttr The XmlAttribute node to add to the attribute collection for this element. Returns Type Description XmlAttribute If the attribute replaces an existing attribute with the same name, the old XmlAttribute is returned; otherwise, null is returned. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IXmlNode.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.html",
    "title": "Interface IXmlNode | SharpVectors Documentation",
    "keywords": "Interface IXmlNode The IXmlNode interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. XmlNode Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public interface IXmlNode Remarks While all objects implementing the INode interface expose methods for dealing with children, not all objects implementing the INode interface may have children. For example, IText nodes may not have children, and adding children to such nodes results in a DomException being raised. The attributes Name , Value and Attributes are included as a mechanism to get at node information without casting down to the specific derived interface. In cases where there is no obvious mapping of these attributes for a specific NodeType (e.g., Value for an IElement or Attributes for a IComment ), this returns null . Note that the specialized interfaces may contain additional and more convenient mechanisms to get and set the relevant information. Properties Attributes Gets a INamedNodeMap containing the attributes of this node (if it is an IElement ) or null otherwise. This implementation returns an System.Xml.XmlAttributeCollection containing the attributes of this node. Declaration XmlAttributeCollection Attributes { get; } Property Value Type Description XmlAttributeCollection An XmlAttributeCollection containing the attributes of the node. If the node is of type XmlNodeType.Element, the attributes of the node are returned. Otherwise, this property returns null. See Also INamedNodeMap ChildNodes Gets all the child nodes of the node. Declaration XmlNodeList ChildNodes { get; } Property Value Type Description XmlNodeList An System.Xml.XmlNodeList that contains all the child nodes of the node. If there are no child nodes, this property returns an empty System.Xml.XmlNodeList not null . FirstChild Gets the first child of this node. If there is no such node, this returns null . Declaration XmlNode FirstChild { get; } Property Value Type Description XmlNode The first child of the node. If there is no such node, null is returned. HasChildNodes Gets a value indicating whether this node has any children. Declaration bool HasChildNodes { get; } Property Value Type Description Boolean true if this node has any children, false otherwise. LastChild Gets the last child of this node. If there is no such node, this returns null . Declaration XmlNode LastChild { get; } Property Value Type Description XmlNode The last child of the node. If there is no such node, null is returned. LocalName Gets the local part of the qualified name of this node. Declaration string LocalName { get; } Property Value Type Description String The name of the node with the prefix removed. For example, LocalName is label for the element < inkscape:label > .The name returned is dependent on the System.Xml.XmlNode.NodeType of the node. Remarks For nodes of any type other than Element and Attribute and nodes created with a DOM Level 1 method, such as from the IDocument interface, this is always null . Name Gets the qualified name of the node. Declaration string Name { get; } Property Value Type Description String The qualified name of the node. The name returned is dependent on the NodeType of the node. NamespaceURI Declaration string NamespaceURI { get; } Property Value Type Description String The namespace URI of this node. If there is no namespace URI, this property returns Empty . Remarks This is not a computed value that is the result of a namespace lookup based on an examination of the namespace declarations in scope. It is merely the namespace URI given at creation time. For nodes of any type other than Element and Attribute and nodes created with a DOM Level 1 method, such as from the IDocument interface, this is always null . Per the Namespaces in XML Specification an attribute does not inherit its namespace from the element it is attached to. If an attribute is not explicitly given a namespace, it simply has no namespace. NextSibling Gets the node immediately following this node. If there is no such node, this returns null . Declaration XmlNode NextSibling { get; } Property Value Type Description XmlNode The next XmlNode. If there is no next node, null is returned. NodeType Gets the type of the current node. Declaration XmlNodeType NodeType { get; } Property Value Type Description XmlNodeType An enumeration of the type XmlNodeType specifying the type of this node. OwnerDocument The IDocument object associated with this node. This is also the IDocument object used to create new nodes. When this node is a IDocument or a IDocumentType which is not used with any IDocument yet, this is null . This implementation returns the System.Xml.XmlDocument to which this node belongs. Declaration XmlDocument OwnerDocument { get; } Property Value Type Description XmlDocument The System.Xml.XmlDocument to which this node belongs.If the node is an System.Xml.XmlDocument (NodeType equals XmlNodeType.Document), this property returns null. ParentNode Gets the parent of this node (for nodes that can have parents). Declaration XmlNode ParentNode { get; } Property Value Type Description XmlNode The XmlNode that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is null . For all other nodes, the value returned depends on the NodeType of the node. Remarks Gets the parent of this node. All nodes, except IAttribute , IDocument , IDocumentFragment , IEntity , and INotation may have a parent. However, if a node has just been created and not yet added to the tree, or if it has been removed from the tree, this is null . Prefix Gets or sets the namespace prefix of this node, or null if it is unspecified. Declaration string Prefix { get; set; } Property Value Type Description String The namespace prefix of this node. For example, Prefix is inkscape for the element < inkscape:label > . If there is no prefix, this property returns String.Empty. Remarks Note that setting this attribute, when permitted, changes the attribute, which holds the qualified name, as well as the and attributes of the IElement and IAttribute interfaces, when applicable. Note also that changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the NamespaceURI and LocalName do not change. For nodes of any type other than Element and Attribute and nodes created with a DOM Level 1 method, such as from the IDocument interface, this is always null . Exceptions Type Condition DomException INVALID_CHARACTER_ERR: Raised if the specified prefix contains an illegal character. NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly. NAMESPACE_ERR: Raised if the specified Prefix is malformed, if the NamespaceURI of this node is null , if the specified prefix is \"xml\" and the NamespaceURI of this node is different from https://www.w3.org/XML/1998/namespace , if this node is an attribute and the specified prefix is xmlns and the NamespaceURI of this node is different from https://www.w3.org/2000/xmlns/ , or if this node is an attribute and the QualifiedName of this node is xmlns . PreviousSibling Gets the node immediately preceding this node. If there is no such node, this returns null . Declaration XmlNode PreviousSibling { get; } Property Value Type Description XmlNode The preceding XmlNode. If there is no preceding node, null is returned. Value Gets or sets the value of the node. Declaration string Value { get; set; } Property Value Type Description String The value returned depends on the NodeType of the node Methods AppendChild(XmlNode) Adds the node newChild to the end of the list of children of this node. If the newChild is already in the tree, it is first removed. Declaration XmlNode AppendChild(XmlNode newChild) Parameters Type Name Description XmlNode newChild The node to add. If it is a IDocumentFragment object, the entire contents of the document fragment are moved into the child list of this node Returns Type Description XmlNode The node added. Exceptions Type Condition DomException HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not allow children of the type of the newChild node, or if the node to append is one of this node's ancestors. WRONG_DOCUMENT_ERR: Raised if newChild was created from a different document than the one that created this node. NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly. CloneNode(Boolean) Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent; ( ParentNode is null .). Declaration XmlNode CloneNode(bool deep) Parameters Type Name Description Boolean deep true , recursively clone the subtree under the specified node; if false , clone only the node itself (and its attributes, if it is an IElement ). Returns Type Description XmlNode The duplicate node. Remarks Cloning an IElement copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes, but this method does not copy any text it contains unless it is a deep clone, since the text is contained in a child IText node. Cloning an directly, as opposed to be cloned as part of an IElement cloning operation, returns a specified attribute ( Specified is true ). Cloning any other type of node simply returns a copy of this node. Note that cloning an immutable subtree results in a mutable copy, but the children of an IEntityReference clone are readonly. In addition, clones of unspecified IAttribute nodes are specified. And, cloning IDocument , IDocumentType , IEntity , and INotation nodes is implementation dependent. InsertBefore(XmlNode, XmlNode) Inserts the node newChild before the existing child node refChild . Declaration XmlNode InsertBefore(XmlNode newChild, XmlNode refChild) Parameters Type Name Description XmlNode newChild node to insert. XmlNode refChild reference node, i.e., the node before which the new node must be inserted. Returns Type Description XmlNode The node being inserted. Remarks If refChild is null , insert newChild at the end of the list of children. If newChild is a IDocumentFragment object, all of its children are inserted, in the same order, before refChild . If the newChild is already in the tree, it is first removed. Exceptions Type Condition DomException HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not allow children of the type of the newChild node, or if the node to insert is one of this node's ancestors. WRONG_DOCUMENT_ERR: Raised if newChild was created from a different document than the one that created this node. NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly or if the parent of the node being inserted is readonly. NOT_FOUND_ERR: Raised if refChild is not a child of this node. Normalize() Puts all IText nodes in the full depth of the sub-tree underneath this INode , including attribute nodes, into a \"normal\" form where only structure (e.g., elements, comments, processing instructions, CDATA sections, and entity references) separates IText nodes, i.e., there are neither adjacent IText nodes nor empty IText nodes. Declaration void Normalize() Remarks This can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used. In cases where the document contains ICDataSection , the normalize operation alone may not be sufficient, since XPointers do not differentiate between IText nodes and ICDataSection nodes. RemoveChild(XmlNode) Removes the child node indicated by oldChild from the list of children, and returns it. Declaration XmlNode RemoveChild(XmlNode oldChild) Parameters Type Name Description XmlNode oldChild node being removed. Returns Type Description XmlNode The node removed. Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly. NOT_FOUND_ERR: Raised if oldChild is not a child of this node. ReplaceChild(XmlNode, XmlNode) Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node. Declaration XmlNode ReplaceChild(XmlNode newChild, XmlNode oldChild) Parameters Type Name Description XmlNode newChild new node to put in the child list. XmlNode oldChild node being replaced in the list. Returns Type Description XmlNode The node replaced. Remarks If newChild is a IDocumentFragment object, oldChild is replaced by all of the IDocumentFragment children, which are inserted in the same order. If the newChild is already in the tree, it is first removed. Exceptions Type Condition DomException HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not allow children of the type of the newChild node, or if the node to put in is one of this node's ancestors. WRONG_DOCUMENT_ERR: Raised if newChild was created from a different document than the one that created this node. NO_MODIFICATION_ALLOWED_ERR: Raised if this node or the parent of the new node is readonly. NOT_FOUND_ERR: Raised if oldChild is not a child of this node. Supports(String, String) Tests whether the DOM implementation implements a specific feature and that feature is supported by this node. Declaration bool Supports(string feature, string version) Parameters Type Name Description String feature name of the feature to test. This is the same name which can be passed to the method HasFeature(String, String) on IDomImplementation . String version This is the version number of the feature to test. In Level 2, version 1, this is the string \"2.0\" . If the version is not specified, supporting any version of the feature will cause the method to return true . Returns Type Description Boolean Returns true if the specified feature is supported on this node, false otherwise. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.NodeListAdapter.html": {
    "href": "api/SharpVectors.Dom.NodeListAdapter.html",
    "title": "Class NodeListAdapter | SharpVectors Documentation",
    "keywords": "Class NodeListAdapter Summary description for NodeListAdapter. Inheritance Object NodeListAdapter Implements INodeList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class NodeListAdapter : INodeList Constructors NodeListAdapter(XmlNodeList) Declaration public NodeListAdapter(XmlNodeList nodeList) Parameters Type Name Description XmlNodeList nodeList Properties Count Declaration public ulong Count { get; } Property Value Type Description UInt64 Item[UInt64] Declaration public INode this[ulong index] { get; } Parameters Type Name Description UInt64 index Property Value Type Description INode Implements INodeList"
  },
  "api/SharpVectors.Dom.ProcessingInstruction.html": {
    "href": "api/SharpVectors.Dom.ProcessingInstruction.html",
    "title": "Class ProcessingInstruction | SharpVectors Documentation",
    "keywords": "Class ProcessingInstruction Summary description for ProcessingInstruction. Inheritance Object XmlNode XmlLinkedNode XmlProcessingInstruction ProcessingInstruction Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlProcessingInstruction.CloneNode(Boolean) XmlProcessingInstruction.WriteTo(XmlWriter) XmlProcessingInstruction.WriteContentTo(XmlWriter) XmlProcessingInstruction.Name XmlProcessingInstruction.LocalName XmlProcessingInstruction.Value XmlProcessingInstruction.Target XmlProcessingInstruction.Data XmlProcessingInstruction.InnerText XmlProcessingInstruction.NodeType XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class ProcessingInstruction : XmlProcessingInstruction, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors ProcessingInstruction(String, String, Document) Declaration public ProcessingInstruction(string target, string data, Document document) Parameters Type Name Description String target String data Document document Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.SignificantWhitespace.html": {
    "href": "api/SharpVectors.Dom.SignificantWhitespace.html",
    "title": "Class SignificantWhitespace | SharpVectors Documentation",
    "keywords": "Class SignificantWhitespace Summary description for SignificantWhitespace. Inheritance Object XmlNode XmlLinkedNode XmlCharacterData XmlSignificantWhitespace SignificantWhitespace Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlSignificantWhitespace.CloneNode(Boolean) XmlSignificantWhitespace.WriteTo(XmlWriter) XmlSignificantWhitespace.WriteContentTo(XmlWriter) XmlSignificantWhitespace.Name XmlSignificantWhitespace.LocalName XmlSignificantWhitespace.NodeType XmlSignificantWhitespace.ParentNode XmlCharacterData.Substring(Int32, Int32) XmlCharacterData.AppendData(String) XmlCharacterData.InsertData(Int32, String) XmlCharacterData.DeleteData(Int32, Int32) XmlCharacterData.ReplaceData(Int32, Int32, String) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class SignificantWhitespace : XmlSignificantWhitespace, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors SignificantWhitespace(String, Document) Declaration public SignificantWhitespace(string data, Document document) Parameters Type Name Description String data Document document Properties Value Declaration public override string Value { get; set; } Property Value Type Description String Overrides XmlSignificantWhitespace.Value Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.Stylesheets.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.html",
    "title": "Namespace SharpVectors.Dom.Stylesheets | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom.Stylesheets Classes MediaList The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium \"all\". The items in the MediaList are accessible via an integral index, starting from 0. StyleSheet The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document. In HTML, the StyleSheet interface represents either an external style sheet, included via the HTML LINK element, or an inline STYLE element. In XML, this interface represents an external style sheet, included via a style sheet processing instruction. StyleSheetList The StyleSheetList interface provides the abstraction of an ordered collection of style sheets. The items in the StyleSheetList are accessible via an integral index, starting from 0. Interfaces IDocumentStyle The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document can be retrieved. The expectation is that an instance of the DocumentStyle interface can be obtained by using binding-specific casting methods on an instance of the Document interface. ILinkStyle The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible for linking it into a document. An instance of the LinkStyle interface can be obtained using binding-specific casting methods on an instance of a linking node (HTMLLinkElement, HTMLStyleElement or ProcessingInstruction in DOM Level 2). IMediaList The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium \"all\". IStyleSheet The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document. In HTML, the StyleSheet interface represents either an external style sheet, included via the HTML LINK element, or an inline STYLE element. In XML, this interface represents an external style sheet, included via a style sheet processing instruction. IStyleSheetList The StyleSheetList interface provides the abstraction of an ordered collection of style sheets."
  },
  "api/SharpVectors.Dom.Stylesheets.IDocumentStyle.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IDocumentStyle.html",
    "title": "Interface IDocumentStyle | SharpVectors Documentation",
    "keywords": "Interface IDocumentStyle The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document can be retrieved. The expectation is that an instance of the DocumentStyle interface can be obtained by using binding-specific casting methods on an instance of the Document interface. Namespace : SharpVectors.Dom.Stylesheets Assembly : SharpVectors.Core.dll Syntax public interface IDocumentStyle Properties StyleSheets A list containing all the style sheets explicitly linked into or embedded in a document. For HTML documents, this includes external style sheets, included via the HTML LINK element, and inline STYLE elements. In XML, this includes external style sheets, included via style sheet processing instructions (see [XML-StyleSheet]). Declaration IStyleSheetList StyleSheets { get; } Property Value Type Description IStyleSheetList"
  },
  "api/SharpVectors.Dom.Stylesheets.ILinkStyle.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.ILinkStyle.html",
    "title": "Interface ILinkStyle | SharpVectors Documentation",
    "keywords": "Interface ILinkStyle The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible for linking it into a document. An instance of the LinkStyle interface can be obtained using binding-specific casting methods on an instance of a linking node (HTMLLinkElement, HTMLStyleElement or ProcessingInstruction in DOM Level 2). Namespace : SharpVectors.Dom.Stylesheets Assembly : SharpVectors.Core.dll Syntax public interface ILinkStyle Properties Sheet The style sheet Declaration IStyleSheet Sheet { get; } Property Value Type Description IStyleSheet"
  },
  "api/SharpVectors.Dom.Stylesheets.IMediaList.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IMediaList.html",
    "title": "Interface IMediaList | SharpVectors Documentation",
    "keywords": "Interface IMediaList The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium \"all\". Namespace : SharpVectors.Dom.Stylesheets Assembly : SharpVectors.Core.dll Syntax public interface IMediaList Properties Item[UInt64] Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null. Declaration string this[ulong index] { get; } Parameters Type Name Description UInt64 index Property Value Type Description String Length The number of media in the list. The range of valid media is 0 to length-1 inclusive. Declaration ulong Length { get; } Property Value Type Description UInt64 MediaText The parsable textual representation of the media list. This is a comma-separated list of media. Declaration string MediaText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media list is readonly. Methods AppendMedium(String) Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed. Declaration void AppendMedium(string newMedium) Parameters Type Name Description String newMedium The new medium to add. Exceptions Type Condition DomException INVALID_CHARACTER_ERR: If the medium contains characters that are invalid in the underlying style language. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly DeleteMedium(String) Declaration void DeleteMedium(string oldMedium) Parameters Type Name Description String oldMedium Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly. DomException NOT_FOUND_ERR: Raised if oldMedium is not in the list."
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheet.html",
    "title": "Interface IStyleSheet | SharpVectors Documentation",
    "keywords": "Interface IStyleSheet The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document. In HTML, the StyleSheet interface represents either an external style sheet, included via the HTML LINK element, or an inline STYLE element. In XML, this interface represents an external style sheet, included via a style sheet processing instruction. Namespace : SharpVectors.Dom.Stylesheets Assembly : SharpVectors.Core.dll Syntax public interface IStyleSheet Properties Disabled false if the style sheet is applied to the document. true if it is not. Modifying this attribute may cause a new resolution of style for the document. A stylesheet only applies if both an appropriate medium definition is present and the disabled attribute is false. So, if the media doesn't apply to the current user agent, the disabled attribute is ignored. Declaration bool Disabled { get; set; } Property Value Type Description Boolean Href If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is null. See the href attribute definition for the LINK element in HTML 4.0, and the href pseudo-attribute for the XML style sheet processing Declaration string Href { get; } Property Value Type Description String Media The intended destination media for style information. The media is often specified in the ownerNode. If no media has been specified, the MediaList will be empty. See the media attribute definition for the LINK element in HTML 4.0, and the media pseudo-attribute for the XML style sheet processing instruction . Modifying the media list may cause a change to the attribute disabled. Declaration IMediaList Media { get; } Property Value Type Description IMediaList OwnerNode The node that associates this style sheet with the document. For HTML, this may be the corresponding LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is null Declaration XmlNode OwnerNode { get; } Property Value Type Description XmlNode ParentStyleSheet For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is null. Declaration IStyleSheet ParentStyleSheet { get; } Property Value Type Description IStyleSheet Title The advisory title. The title is often specified in the ownerNode. See the title attribute definition for the LINK element in HTML 4.0, and the title pseudo-attribute for the XML style sheet processing instruction. Declaration string Title { get; } Property Value Type Description String Type This specifies the style sheet language for this style sheet. The style sheet language is specified as a content type (e.g. \"text/css\"). The content type is often specified in the ownerNode. Also see the type attribute definition for the LINK element in HTML 4.0, and the type pseudo-attribute for the XML style sheet processing instruction. Declaration string Type { get; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheetList.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheetList.html",
    "title": "Interface IStyleSheetList | SharpVectors Documentation",
    "keywords": "Interface IStyleSheetList The StyleSheetList interface provides the abstraction of an ordered collection of style sheets. Inherited Members IList<IStyleSheet>.IndexOf(IStyleSheet) IList<IStyleSheet>.Insert(Int32, IStyleSheet) IList<IStyleSheet>.RemoveAt(Int32) IList<IStyleSheet>.Item[Int32] ICollection<IStyleSheet>.Add(IStyleSheet) ICollection<IStyleSheet>.Clear() ICollection<IStyleSheet>.Contains(IStyleSheet) ICollection<IStyleSheet>.CopyTo(IStyleSheet[], Int32) ICollection<IStyleSheet>.Remove(IStyleSheet) ICollection<IStyleSheet>.Count ICollection<IStyleSheet>.IsReadOnly IEnumerable<IStyleSheet>.GetEnumerator() Namespace : SharpVectors.Dom.Stylesheets Assembly : SharpVectors.Core.dll Syntax public interface IStyleSheetList : IList<IStyleSheet>, ICollection<IStyleSheet>, IEnumerable<IStyleSheet>, IEnumerable Properties Item[UInt64] Used to retrieve a style sheet by ordinal index. If index is greater than or equal to the number of style sheets in the list, this returns null. Declaration IStyleSheet this[ulong index] { get; } Parameters Type Name Description UInt64 index Property Value Type Description IStyleSheet Length The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive. Declaration ulong Length { get; } Property Value Type Description UInt64"
  },
  "api/SharpVectors.Dom.Stylesheets.MediaList.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.MediaList.html",
    "title": "Class MediaList | SharpVectors Documentation",
    "keywords": "Class MediaList The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium \"all\". The items in the MediaList are accessible via an integral index, starting from 0. Inheritance Object MediaList Implements IMediaList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Stylesheets Assembly : SharpVectors.Css.dll Syntax public sealed class MediaList : IMediaList Constructors MediaList() Declaration public MediaList() MediaList(String) Declaration public MediaList(string val) Parameters Type Name Description String val Properties Item[Int32] Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null. Declaration public string this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description String Item[UInt64] Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null. Declaration public string this[ulong index] { get; } Parameters Type Name Description UInt64 index Property Value Type Description String Length The number of media in the list. The range of valid media is 0 to length-1 inclusive. Declaration public ulong Length { get; } Property Value Type Description UInt64 MediaText The parsable textual representation of the media list. This is a comma-separated list of media. Declaration public string MediaText { get; set; } Property Value Type Description String Exceptions Type Condition DomException SYNTAX_ERR: Raised if the specified string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media list is readonly. Methods AppendMedium(String) Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed. Declaration public void AppendMedium(string newMedium) Parameters Type Name Description String newMedium The new medium to add. Exceptions Type Condition DomException INVALID_CHARACTER_ERR: If the medium contains characters that are invalid in the underlying style language. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media list is readonly. DeleteMedium(String) Deletes the medium indicated by oldMedium from the list. Declaration public void DeleteMedium(string oldMedium) Parameters Type Name Description String oldMedium The medium to delete in the media list. Exceptions Type Condition DomException NOT_FOUND_ERR: Raised if oldMedium is not in the list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media list is readonly. Matches(MediaList) Compares this MediaList with another and see if the second fits this Declaration public bool Matches(MediaList inMedia) Parameters Type Name Description MediaList inMedia The MediaList to compare Returns Type Description Boolean True if this list fits the specified Implements IMediaList"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.html",
    "title": "Class StyleSheet | SharpVectors Documentation",
    "keywords": "Class StyleSheet The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document. In HTML, the StyleSheet interface represents either an external style sheet, included via the HTML LINK element, or an inline STYLE element. In XML, this interface represents an external style sheet, included via a style sheet processing instruction. Inheritance Object StyleSheet CssStyleSheet Implements IStyleSheet Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Stylesheets Assembly : SharpVectors.Css.dll Syntax public class StyleSheet : IStyleSheet Constructors StyleSheet(String) Declaration protected StyleSheet(string media) Parameters Type Name Description String media StyleSheet(XmlElement) Declaration public StyleSheet(XmlElement styleElement) Parameters Type Name Description XmlElement styleElement StyleSheet(XmlNode, String, String, String, String) Declaration public StyleSheet(XmlNode ownerNode, string href, string type, string title, string media) Parameters Type Name Description XmlNode ownerNode String href String type String title String media StyleSheet(XmlProcessingInstruction) Declaration public StyleSheet(XmlProcessingInstruction pi) Parameters Type Name Description XmlProcessingInstruction pi Properties AbsoluteHref The resolved absolute URL to the stylesheet Declaration public Uri AbsoluteHref { get; } Property Value Type Description Uri Disabled false if the style sheet is applied to the document. true if it is not. Modifying this attribute may cause a new resolution of style for the document. A stylesheet only applies if both an appropriate medium definition is present and the disabled attribute is false. So, if the media doesn't apply to the current user agent, the disabled attribute is ignored. Declaration public bool Disabled { get; set; } Property Value Type Description Boolean Href If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is null. See the href attribute definition for the LINK element in HTML 4.0, and the href pseudo-attribute for the XML style sheet processing instruction. Declaration public string Href { get; } Property Value Type Description String Media The intended destination media for style information. The media is often specified in the ownerNode. If no media has been specified, the MediaList will be empty. See the media attribute definition for the LINK element in HTML 4.0, and the media pseudo-attribute for the XML style sheet processing instruction . Modifying the media list may cause a change to the attribute disabled. Declaration public IMediaList Media { get; } Property Value Type Description IMediaList OwnerNode The node that associates this style sheet with the document. For HTML, this may be the corresponding LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is null. Declaration public XmlNode OwnerNode { get; } Property Value Type Description XmlNode ParentStyleSheet For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is null. Declaration public IStyleSheet ParentStyleSheet { get; set; } Property Value Type Description IStyleSheet SheetContent Declaration public string SheetContent { get; } Property Value Type Description String Title The advisory title. The title is often specified in the ownerNode. See the title attribute definition for the LINK element in HTML 4.0, and the title pseudo-attribute for the XML style sheet processing instruction. Declaration public string Title { get; } Property Value Type Description String Type This specifies the style sheet language for this style sheet. The style sheet language is specified as a content type (e.g. \"text/css\"). The content type is often specified in the ownerNode. Also see the type attribute definition for the LINK element in HTML 4.0, and the type pseudo-attribute for the XML style sheet processing instruction. Declaration public string Type { get; } Property Value Type Description String Methods GetStylesForElement(XmlElement, String, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order Declaration protected virtual void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters Type Name Description XmlElement elt The element to find styles for String pseudoElt The pseudo-element to find styles for MediaList ml The medialist that the document is using CssCollectedStyleDeclaration csd A CssStyleDeclaration that holds the collected styles Implements IStyleSheet"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.html",
    "title": "Class StyleSheetList | SharpVectors Documentation",
    "keywords": "Class StyleSheetList The StyleSheetList interface provides the abstraction of an ordered collection of style sheets. The items in the StyleSheetList are accessible via an integral index, starting from 0. Inheritance Object StyleSheetList Implements IStyleSheetList IList < IStyleSheet > ICollection < IStyleSheet > IEnumerable < IStyleSheet > IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Stylesheets Assembly : SharpVectors.Css.dll Syntax public sealed class StyleSheetList : IStyleSheetList, IList<IStyleSheet>, ICollection<IStyleSheet>, IEnumerable<IStyleSheet>, IEnumerable Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Item[Int32] Declaration public IStyleSheet this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description IStyleSheet Item[UInt64] Used to retrieve a style sheet by ordinal index. If index is greater than or equal to the number of style sheets in the list, this returns null. Declaration public IStyleSheet this[ulong index] { get; } Parameters Type Name Description UInt64 index Property Value Type Description IStyleSheet Length The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive. Declaration public ulong Length { get; } Property Value Type Description UInt64 Methods Add(IStyleSheet) Declaration public void Add(IStyleSheet item) Parameters Type Name Description IStyleSheet item AddCssStyleSheet(CssStyleSheet) Declaration public void AddCssStyleSheet(CssStyleSheet ss) Parameters Type Name Description CssStyleSheet ss Clear() Declaration public void Clear() Contains(IStyleSheet) Declaration public bool Contains(IStyleSheet item) Parameters Type Name Description IStyleSheet item Returns Type Description Boolean CopyTo(IStyleSheet[], Int32) Declaration public void CopyTo(IStyleSheet[] array, int arrayIndex) Parameters Type Name Description IStyleSheet [] array Int32 arrayIndex GetEnumerator() Declaration public IEnumerator<IStyleSheet> GetEnumerator() Returns Type Description IEnumerator < IStyleSheet > GetStylesForElement(XmlElement, String, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order Declaration public void GetStylesForElement(XmlElement elt, string pseudoElt, CssCollectedStyleDeclaration csd) Parameters Type Name Description XmlElement elt The element to find styles for String pseudoElt The pseudo-element to find styles for CssCollectedStyleDeclaration csd A CssStyleDeclaration that holds the collected styles IndexOf(IStyleSheet) Declaration public int IndexOf(IStyleSheet item) Parameters Type Name Description IStyleSheet item Returns Type Description Int32 Insert(Int32, IStyleSheet) Declaration public void Insert(int index, IStyleSheet item) Parameters Type Name Description Int32 index IStyleSheet item Remove(IStyleSheet) Declaration public bool Remove(IStyleSheet item) Parameters Type Name Description IStyleSheet item Returns Type Description Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index Explicit Interface Implementations IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements IStyleSheetList System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/SharpVectors.Dom.Svg.CalculatedArcValues.html": {
    "href": "api/SharpVectors.Dom.Svg.CalculatedArcValues.html",
    "title": "Struct CalculatedArcValues | SharpVectors Documentation",
    "keywords": "Struct CalculatedArcValues Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public struct CalculatedArcValues Constructors CalculatedArcValues(Double, Double, Double, Double, Double, Double) Declaration public CalculatedArcValues(double rx, double ry, double cx, double cy, double angleStart, double angleExtent) Parameters Type Name Description Double rx Double ry Double cx Double cy Double angleStart Double angleExtent Fields AngleExtent Declaration public double AngleExtent Field Value Type Description Double AngleStart Declaration public double AngleStart Field Value Type Description Double CorrRx Declaration public double CorrRx Field Value Type Description Double CorrRy Declaration public double CorrRy Field Value Type Description Double Cx Declaration public double Cx Field Value Type Description Double Cy Declaration public double Cy Field Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.html": {
    "href": "api/SharpVectors.Dom.Svg.html",
    "title": "Namespace SharpVectors.Dom.Svg | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom.Svg Classes SvgAElement SvgAltGlyphDefElement This implements the ISvgAltGlyphDefElement interface corresponds to the 'altGlyphDef' element. SvgAltGlyphElement The ISvgAltGlyphElement interface corresponds to the 'altGlyph' element. SvgAltGlyphItemElement This implements the ISvgAltGlyphItemElement interface corresponds to the 'altGlyphItem' element. SvgAngle Summary description for SvgAngle. SvgAnimateBaseElement SvgAnimateColorElement SvgAnimatedAngle SvgAnimatedBoolean Summary description for SvgAnimatedNumber. SvgAnimatedEnumeration Summary description for SvgAnimatedEnumeration. SvgAnimatedInteger An implementation of the ISvgAnimatedInteger interface. SvgAnimatedLength Used for attributes of basic type 'length' which can be animated. SvgAnimatedLengthList Summary description for SvgAnimatedLengthList. SvgAnimatedNumber Summary description for SvgAnimatedNumber. SvgAnimatedNumberList Summary description for SvgAnimatedNumberList. SvgAnimatedPreserveAspectRatio Summary description for SvgAnimatedPreserveAspectRatio. SvgAnimatedRect SvgAnimatedString Summary description for SvgAnimatedString. SvgAnimatedTransformList Used for the various attributes which specify a set of transformations, such as the transform attribute which is available for many of Svg's elements, and which can be animated. SvgAnimateElement SvgAnimateMotionElement SvgAnimateMPathElement SvgAnimateSetElement SvgAnimateTransformElement SvgAnimationElement SvgCircleElement The ISvgCircleElement interface corresponds to the 'circle' element. SvgClipPathElement SvgColor Summary description for SvgColor. SvgColorProfileElement SvgComponentTransferFunctionElement This abstract defines a base class used by the component transfer function interfaces. SvgDefsElement The SvgDefsElement interface corresponds to the 'defs' element. SvgDescElement The SvgDescElement interface corresponds to the 'desc' element. SvgDocument The root object in the document object hierarchy of an Svg document. SvgElement Summary description for SvgElement. SvgElementFactory SvgElementInstance SvgElementInstanceList SvgEllipseElement The SvgEllipseElement class corresponds to the 'ellipse' element. SvgException SvgExternalResourcesRequired SvgExternalResourcesRequiredException SvgFEBlendElement This filter blends two objects together using commonly used imaging software blending modes. It performs a pixel-wise combination of two input images. SvgFEColorMatrixElement SvgFEComponentTransferElement SvgFECompositeElement SvgFEConvolveMatrixElement This applies a matrix convolution filter effect. A convolution combines pixels in the input image with neighboring pixels to produce a resulting image. A wide variety of imaging operations can be achieved through convolutions, including blurring, edge detection, sharpening, embossing and beveling. SvgFEDiffuseLightingElement SvgFEDisplacementMapElement This filter primitive uses the pixels values from the image from 'in2' to spatially displace the image from 'in'. SvgFEDistantLightElement SvgFEFloodElement SvgFEFuncAElement SvgFEFuncBElement SvgFEFuncGElement SvgFEFuncRElement SvgFEGaussianBlurElement This filter primitive performs a Gaussian blur on the input image. SvgFEImageElement SvgFEMergeElement SvgFEMergeNodeElement SvgFEMorphologyElement SvgFEOffsetElement SvgFEPointLightElement SvgFESpecularLightingElement This filter primitive lights a source graphic using the alpha channel as a bump map. The resulting image is an RGBA image based on the light color. The lighting calculation follows the standard specular component of the Phong lighting model. The resulting image depends on the light color, light position and surface geometry of the input bump map. The result of the lighting calculation is added. The filter primitive assumes that the viewer is at infinity in the z direction (i.e., the unit vector in the eye direction is (0,0,1) everywhere). SvgFESpotLightElement SvgFETileElement SvgFETurbulenceElement This filter primitive creates an image using the Perlin turbulence function. It allows the synthesis of artificial textures like clouds or marble. SvgFilterElement An implementation of the ISvgFilterElement interface, which corresponds to the 'filter' element. SvgFilterPrimitiveStandardAttributes This is abstract class for filter primitive attributes that are available for all filter primitives: SvgFitToViewBox SvgFontElement The SvgFontElement interface corresponds to the 'font' element. SvgFontFaceElement The SvgFontFaceElement interface corresponds to the 'font-face' element. SvgFontFaceFormatElement The ISvgFontFaceFormatElement interface corresponds to the font-face-format' ' element. SvgFontFaceNameElement The SvgFontFaceNameElement interface corresponds to the 'font-face-name' element. SvgFontFaceSrcElement The SvgFontFaceSrcElement interface corresponds to the 'font-face-src' element. SvgFontFaceUriElement The SvgFontFaceUriElement interface corresponds to the 'font-face-uri' element. SvgFontFamily This provides information on the OpenType and Web fonts to the SvgDocument . SvgGElement This implements the ISvgGElement interface, which corresponds to the 'g' element. SvgGlyphElement The SvgGlyphElement interface corresponds to the 'glyph' element. SvgGlyphRefElement The ISvgGlyphRefElement interface corresponds to the 'glyphRef' element. SvgGradientElement SvgHKernElement The SvgHKernElement interface corresponds to the 'hkern' element. SvgImageElement SvgKernElement The SvgKernElement is the base interface corresponds to the 'vkern' and 'hkern' elements. SvgLength SvgLengthList This interface defines a list of SvgLength objects SvgLinearGradientElement SvgLineElement The SVGLineElement interface corresponds to the 'line' element. SvgList<T> Base class for all SVG*List-derived classes. Note we're using List<T> (as opposed to deriving from) to hide unneeded List<T> methods Note that a CLR uint is equivalent to an IDL ulong, so uint is used for all index values SvgMarker SvgMarkerElement SvgMaskElement SvgMatrix Many of SVG's graphics operations utilize 2x3 matrices of the form: [a c e] [b d f] which, when expanded into a 3x3 matrix for the purposes of matrix arithmetic, become: [a c e] [b d f] [0 0 1] SvgMetadataElement SvgMissingGlyphElement The SvgMissingGlyphElement interface corresponds to the 'missing-glyph' element. SvgNumber SvgNumberList Summary description for SvgNumberList. SvgNumberParser This class represents a parser with support for numbers. SvgPaint SvgParser This class is the superclass of all parsers. It provides localization and error handling methods. SvgPathElement SvgPathParser This class implements an event-based parser for the SVG path's d attribute values. SvgPathSeg SvgPathSegArc SvgPathSegArcAbs Summary description for SvgPathSegLinetoAbs. SvgPathSegArcRel Summary description for SvgPathSegLinetoAbs. SvgPathSegClosePath Summary description for SvgPathSegClosePath. SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicAbs SvgPathSegCurvetoCubicRel Summary description for SvgPathSegCurvetoCubicRel. SvgPathSegCurvetoCubicSmoothAbs SvgPathSegCurvetoCubicSmoothRel Summary description for SvgPathSegCurvetoCubicSmoothAbs. SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticAbs Summary description for SvgPathSegCurvetoCubicAbs. SvgPathSegCurvetoQuadraticRel Summary description for SvgPathSegCurvetoCubicAbs. SvgPathSegCurvetoQuadraticSmoothAbs The SvgPathSegCurvetoQuadraticSmoothAbs interface corresponds to an \"absolute smooth quadratic curveto\" (T) path data command. SvgPathSegCurvetoQuadraticSmoothRel The SvgPathSegCurvetoQuadraticSmoothRel interface corresponds to an \"relative smooth quadratic curveto\" (t) path data command. SvgPathSegHandler SvgPathSegLineto SvgPathSegLinetoAbs SvgPathSegLinetoHorizontalAbs SvgPathSegLinetoHorizontalRel SvgPathSegLinetoRel SvgPathSegLinetoVerticalAbs SvgPathSegLinetoVerticalRel SvgPathSegList SvgPathSegMoveto Summary description for SvgMoveToSeg. SvgPathSegMovetoAbs SvgPathSegMovetoRel The SvgPathSegMovetoRel interface corresponds to an \"relative moveto\" (m) path data command. SvgPathSegParser SvgPatternElement SvgPoint Many of the SVG DOM interfaces refer to objects of class SvgPoint. An SvgPoint is an (x,y) coordinate pair. When used in matrix operations, an SvgPoint is treated as a vector of the form: [x] [y] [1] SvgPointList This class defines a list of SvgPoint objects. SvgPointList.SvgPointListHandler SvgPointsParser This class implements an event-based parser for the SVG points attribute values (used with polyline and polygon elements). SvgPolyElement SvgPolygonElement SvgPolylineElement SvgPreserveAspectRatio SvgRadialGradientElement The implementation of the radialGradient element or the ISvgRadialGradientElement interface. SvgRect Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative. SvgRectElement The SVGRectElement interface corresponds to the 'rect' element. SvgResolveNamespaceEventArgs Arguments when namespace is trying to be resolved SvgResolveUriEventArgs Arguments when URI is trying to be resolved while loading schema SvgScriptElement The ISvgScriptElement interface corresponds to the 'script' element. SvgSolidColorElement An SVG object represents an 'solidcolor' element in the DOM. SvgStopElement Summary description for SvgStopElement. SvgStringList This interface defines a list of String objects SvgStringReader This class represents a SvgTextReader which handles strings. SvgStyleableElement SvgStyleableElement is an extension to the Svg DOM to create a class for all elements that are styleable. SvgStyleElement The SvgStyleElement interface corresponds to the 'style' element. SvgSvgElement A key interface definition is the ISvgSvgElement interface, which is the interface that corresponds to the 'svg' element. This interface contains various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices. ISvgSvgElement extends ViewCSS and DocumentCSS to provide access to the computed values of properties and the override style sheet as described in DOM2. SvgSwitchElement The SvgSwitchElement interface corresponds to the 'switch' element. SvgSymbolElement SvgTests A class to encapsulate all SvgTest functionality. Used by SVG elements as a helper class SvgTextAreaElement Summary description for SvgTextAreaElement. SvgTextBaseElement Summary description for SvgTextElement. SvgTextContentElement Summary description for SvgTextContentElement. SvgTextElement Summary description for SvgTextElement. SvgTextPathElement The implementation of the ISvgTextPathElement interface corresponds to the 'textPath' element. SvgTextPositioningElement The SvgTextPositioningElement interface is inherited by text-related interfaces: SvgTextElement, SvgTSpanElement, SvgTRefElement and SvgAltGlyphElement. SvgTextReader This class represents a reader which normalizes the line break: \\n , \\r , \\r\\n are replaced by \\n . The methods of this reader are not synchronized. The input is buffered. SvgTitleElement The SvgTitleElement interface corresponds to the 'title' element. SvgTransform Summary description for SvgTransform. SvgTransformableElement SvgTransformF This is an implementation of the 3-by-3 affine matrix that represents a geometric transform. SvgTransformList Summary description for SvgTransformList. SvgTRefElement Summary description for SvgTRefElement. SvgTSpanElement The SvgTSpanElement interface corresponds to the 'tspan' element. SvgUriReference SvgUseElement SvgViewSpec TODO: This class does not yet support custom views SvgVKernElement The SvgVKernElement interface corresponds to the 'vkern' element. SvgWindow SvgZoomAndPan Structs CalculatedArcValues SvgPointF This represents an ordered pair of float precision x- and y-coordinates that defines a point in a two-dimensional plane. SvgRectF This stores a set of four float precision numbers that represent the location and size of a rectangle. SvgSizeF Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle. Interfaces IGetSvgDocument ISharpMarkerHost This is an extension to the Svg DOM. It denotes that an element can display markers. ISvgAElement ISvgAltGlyphDefElement The ISvgAltGlyphDefElement interface corresponds to the 'altGlyphDef' element. ISvgAltGlyphElement The ISvgAltGlyphElement interface corresponds to the 'altGlyph' element. ISvgAltGlyphItemElement The ISvgAltGlyphItemElement interface corresponds to the 'altGlyphItem' element. ISvgAngle The SvgAngle interface corresponds to the angle basic data type. ISvgAnimateColorElement The SVGAnimateColorElement interface corresponds to the \"animateColor\" element. ISvgAnimatedAngle ISvgAnimatedBoolean Used for attributes of type boolean which can be animated. ISvgAnimatedEnumeration Used for attributes whose value must be a constant from a particular enumeration and which can be animated. ISvgAnimatedInteger Used for attributes of basic type integer which can be animated. ISvgAnimatedLength Used for attributes of basic type 'length' which can be animated. ISvgAnimatedLengthList Used for attributes of type SvgLengthList which can be animated. ISvgAnimatedNumber Used for attributes of basic type 'number' which can be animated. ISvgAnimatedNumberList Used for attributes which take a list of numbers and which can be animated. ISvgAnimatedPathData The SvgAnimatedPathData interface supports elements which have a 'd' attribute which holds Svg path data, and supports the ability to animate that attribute. ISvgAnimatedPoints The SvgAnimatedPoints interface supports elements which have a 'points' attribute which holds a list of coordinate values and which support the ability to animate that attribute. ISvgAnimatedPreserveAspectRatio Used for attributes of type SvgPreserveAspectRatio which can be animated. ISvgAnimatedRect Used for attributes of type SvgRect which can be animated. ISvgAnimatedString Used for attributes of type DOMString which can be animated. ISvgAnimatedTransformList Used for the various attributes which specify a set of transformations, such as the transform attribute which is available for many of Svg's elements, and which can be animated. ISvgAnimateElement This interface corresponds to the \"animate\" element. ISvgAnimateMotionElement This interface corresponds to the \"animateMotion\" element. ISvgAnimateMPathElement This interface corresponds to the \"mpath\" element. ISvgAnimateSetElement Object-oriented access to the attributes of the \"set\" element via the SVG DOM is not available. ISvgAnimateTransformElement This interface corresponds to the \"animateTransform\" element. ISvgAnimationElement This is the base interface for all of the animation element interfaces: ISvgAnimateElement , ISvgAnimateSetElement , ISvgAnimateColorElement , ISvgAnimateMotionElement and ISvgAnimateTransformElement . ISvgCircleElement The SvgCircleElement interface corresponds to the 'circle' element. ISvgClipPathElement Used by SvgClipPathElement. ISvgColor The SvgColor interface corresponds to color value definition for properties 'stop-color', 'flood-color' and 'lighting-color' and is a base class for interface SvgPaint. It incorporates Svg's extended notion of color, which incorporates ICC-based color specifications. Interface SVGColor does not correspond to the color basic data type. For the color basic data type, the applicable DOM interfaces are defined in CSS; in particular, see the ICssRgbColor interface. ISvgColorProfileElement ISvgColorProfileRule ISvgComponentTransferFunctionElement ISvgControl ISvgCssRule SVG extends interface ICssRule with interface ISvgCssRule by adding an ISvgColorProfileRule rule to allow for specification of ICC-based color. ISvgCursorElement ISvgDefinitionSrcElement The SVGDefinitionSrcElement interface corresponds to the 'definition-src' element. ISvgDefsElement The SvgDefsElement interface corresponds to the 'defs' element. ISvgDescElement The SvgDescElement interface corresponds to the 'desc' element. ISvgDocument The root object in the document object hierarchy of an Svg document. ISvgElement All of the Svg DOM interfaces that correspond directly to elements in the Svg language (e.g., the SvgPathElement interface corresponds directly to the 'path' element in the language) are derivative from base class SvgElement. ISvgElementInstance For each 'use' element, the Svg DOM maintains a shadow tree (the \"instance tree\") of objects of type SvgElementInstance ISvgElementInstanceList The SvgElementInstanceList interface provides the abstraction of an ordered collection of SvgElementInstance objects, without defining or constraining how this collection is implemented. ISvgElementVisitor A visitor pattern interface that visits all renderable SVG elements. ISvgElementVisitorTarget A host target of the element visitor. Each renderable SVG element implements this interface. ISvgEllipseElement The SvgEllipseElement interface corresponds to the 'ellipse' element. ISvgEvent ISvgExternalResourcesRequired This defines an interface which applies to all elements where this element or one of its descendants can reference an external resource. ISvgFEBlendElement ISvgFEColorMatrixElement ISvgFEComponentTransferElement ISvgFECompositeElement ISvgFEConvolveMatrixElement ISvgFEDiffuseLightingElement ISvgFEDisplacementMapElement ISvgFEDistantLightElement ISvgFEFloodElement ISvgFEFuncAElement ISvgFEFuncBElement ISvgFEFuncGElement ISvgFEFuncRElement ISvgFEGaussianBlurElement ISvgFEImageElement ISvgFEMergeElement ISvgFEMergeNodeElement ISvgFEMorphologyElement ISvgFEOffsetElement ISvgFEPointLightElement ISvgFESpecularLightingElement ISvgFESpotLightElement ISvgFETileElement ISvgFETurbulenceElement ISvgFilterElement ISvgFilterPrimitiveStandardAttributes ISvgFitToViewBox Interface SvgFitToViewBox defines DOM attributes that apply to elements which have XML attributes viewBox and preserveAspectRatio. ISvgFontElement The ISvgFontElement interface corresponds to the 'font' element. ISvgFontFaceElement The ISvgFontFaceElement interface corresponds to the 'font-face' element. ISvgFontFaceFormatElement The ISvgFontFaceFormatElement interface corresponds to the 'font-face-format' element. ISvgFontFaceNameElement The ISvgFontFaceNameElement interface corresponds to the 'font-face-name' element. ISvgFontFaceSrcElement The ISvgFontFaceSrcElement interface corresponds to the 'font-face-src' element. ISvgFontFaceUriElement The ISvgFontFaceUriElement interface corresponds to the 'font-face-uri' element. ISvgForeignObjectElement The ISvgForeignObjectElement interface provides access to the properties of 'foreignObject' elements, as well as methods to manipulate them. ISvgGElement The SvgGElement interface corresponds to the 'g' element. ISvgGlyphElement The ISvgGlyphElement interface corresponds to the 'glyph' element. ISvgGlyphRefElement The ISvgGlyphRefElement interface corresponds to the 'glyphRef' element. ISvgGradientElement The SvgGradientElement interface is a base interface used by SvgLinearGradientElement and SvgRadialGradientElement. ISvgHKernElement The ISvgHKernElement interface corresponds to the 'hkern' element. ISvgIccColor ISvgImageElement The SvgRectElement interface corresponds to the 'image' element. ISvgLangSpace Interface SvgLangSpace defines an interface which applies to all elements which have attributes xml:lang and xml:space. ISvgLength The SvgLength interface corresponds to the length basic data type. ISvgLengthList This interface defines a list of SvgLength objects. ISvgLinearGradientElement The SvgLinearGradientElement interface corresponds to the 'linearGradient' element. ISvgLineElement The SvgLineElement interface corresponds to the 'line' element. ISvgList This interface defines a all methods used in a Svg*List interface. ISvgLocatable Interface SvgLocatable is for all elements which either have a transform attribute or don't have a transform attribute but whose content can have a bounding box in current user space. ISvgMarker ISvgMarkerElement ISvgMaskElement Used by SvgMaskElement. ISvgMatrix Interface for matrix operations used within the SVG DOM ISvgMetadataElement ISvgMissingGlyphElement The ISvgMissingGlyphElement interface corresponds to the 'missing-glyph' element. ISvgNumber Used for attributes of basic type 'number'. ISvgNumberList This interface defines a list of SvgNumber objects. ISvgPaint The SvgPaint interface corresponds to basic type paint and represents the values of properties 'fill' and 'stroke'. ISvgPathElement The SvgPathElement interface corresponds to the 'path' element. ISvgPathHandler This interface must be implemented and then registred as the handler of a PathParser instance in order to be notified of parsing events. ISvgPathSeg The SvgPathSeg interface is a base interface that corresponds to a single command within a path data specification. ISvgPathSegArcAbs The SvgPathSegArcAbs interface corresponds to an \"absolute arcto\" (A) path data command. ISvgPathSegArcRel The SvgPathSegArcRel interface corresponds to a \"relative arcto\" (a) path data command. ISvgPathSegClosePath The SvgPathSegClosePath interface corresponds to a \"closepath\" (z) path data command. ISvgPathSegCurvetoCubicAbs The SvgPathSegCurvetoCubicAbs interface corresponds to an \"absolute cubic Bezier curveto\" (C) path data command. ISvgPathSegCurvetoCubicRel The SvgPathSegCurvetoCubicRel interface corresponds to a \"relative cubic Bezier curveto\" (c) path data command. ISvgPathSegCurvetoCubicSmoothAbs The SvgPathSegCurvetoCubicSmoothAbs interface corresponds to an \"absolute smooth cubic curveto\" (S) path data command. ISvgPathSegCurvetoCubicSmoothRel The SvgPathSegCurvetoCubicSmoothRel interface corresponds to a \"relative smooth cubic curveto\" (s) path data command. ISvgPathSegCurvetoQuadraticAbs The SvgPathSegCurvetoQuadraticAbs interface corresponds to an \"absolute quadratic Bezier curveto\" (Q) path data command. ISvgPathSegCurvetoQuadraticRel The SvgPathSegCurvetoCubicRel interface corresponds to a \"relative cubic Bezier curveto\" (c) path data command. ISvgPathSegCurvetoQuadraticSmoothAbs The SvgPathSegCurvetoQuadraticSmoothAbs interface corresponds to an \"absolute smooth quadratic curveto\" (T) path data command. ISvgPathSegCurvetoQuadraticSmoothRel The SvgPathSegCurvetoQuadraticSmoothRel interface corresponds to a \"relative smooth quadratic curveto\" (t) path data command. ISvgPathSegLinetoAbs The SvgPathSegLinetoAbs interface corresponds to an \"absolute lineto\" (L) path data command. ISvgPathSegLinetoHorizontalAbs The SvgPathSegLinetoHorizontalAbs interface corresponds to an \"absolute horizontal lineto\" (H) path data command. ISvgPathSegLinetoHorizontalRel The SvgPathSegLinetoHorizontalRel interface corresponds to a \"relative horizontal lineto\" (h) path data command. ISvgPathSegLinetoRel The SvgPathSegLinetoRel interface corresponds to an \"relative lineto\" (l) path data command. ISvgPathSegLinetoVerticalAbs The SvgPathSegLinetoVerticalAbs interface corresponds to an \"absolute vertical lineto\" (V) path data command. ISvgPathSegLinetoVerticalRel The SvgPathSegLinetoVerticalRel interface corresponds to a \"relative vertical lineto\" (v) path data command. ISvgPathSegList This interface defines a list of SvgPathSeg objects. ISvgPathSegMovetoAbs The SvgPathSegMovetoAbs interface corresponds to an \"absolute moveto\" (M) path data command. ISvgPathSegMovetoRel The SvgPathSegMovetoRel interface corresponds to an \"relative moveto\" (m) path data command. ISvgPatternElement ISvgPoint Many of the SVG DOM interfaces refer to objects of class SvgPoint. An SvgPoint is an (x,y) coordinate pair. ISvgPointList This interface defines a list of SvgPoint objects. ISvgPointsHandler This interface must be implemented and then registred as the handler of a PointsParser instance in order to be notified of parsing events. ISvgPolygonElement The SvgPolygonElement interface corresponds to the 'polygon' element ISvgPolylineElement The SvgPolylineElement interface corresponds to the 'polyline' element ISvgPreserveAspectRatio The SvgPreserveAspectRatio interface corresponds to the preserveAspectRatio attribute, which is available for some of Svg's elements. ISvgRadialGradientElement The ISvgRadialGradientElement interface corresponds to the 'radialGradient' element. ISvgRect Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative. ISvgRectElement The SvgRectElement interface corresponds to the 'rect' element. ISvgRenderer Defines the interface required by a renderer to render the SVG DOM. ISvgScriptElement The ISvgScriptElement interface corresponds to the 'script' element. ISvgSolidColorElement An SVG object represents an 'solidcolor' element in the DOM. ISvgStopElement The SvgStopElement interface corresponds to the 'stop' element. ISvgStringList This interface defines a list of string objects. ISvgStylable ISvgStyleElement ISvgSvgElement A key interface definition is the ISvgSvgElement interface, which is the interface that corresponds to the 'svg' element. ISvgSwitchElement The SvgSwitchElement interface corresponds to the 'switch' element. ISvgSymbolElement ISvgTests Interface SvgTests defines an interface which applies to all elements which have attributes requiredFeatures, requiredExtensions and systemLanguage. ISvgTextContentElement The ISvgTextContentElement interface is inherited by various text-related interfaces, such as ISvgTextElement , ISvgTSpanElement , ISvgTRefElement , ISvgAltGlyphElement and ISvgTextPathElement . ISvgTextElement The SvgTextElement interface corresponds to the 'text' element. ISvgTextPathElement The SvgTextPathElement interface corresponds to the 'textPath' element. ISvgTextPositioningElement The SvgTextPositioningElement interface is inherited by text-related interfaces: SvgTextElement, SvgTSpanElement, SvgTRefElement and SvgAltGlyphElement. ISvgTitleElement The SvgTitleElement interface corresponds to the 'title' element. ISvgTransform SvgTransform is the interface for one of the component transformations within a SvgTransformList; thus, a SvgTransform object corresponds to a single component (e.g., \"scale(..)\" or \"matrix(...)\") within a transform attribute specification. ISvgTransformable Interface SvgTransformable contains properties and methods that apply to all elements which have attribute transform. ISvgTransformList This interface defines a list of SvgTransform objects. ISvgTRefElement The SvgTRefElement interface corresponds to the 'tref' element. ISvgTSpanElement The SvgTSpanElement interface corresponds to the 'tspan' element. ISvgUriReference Interface SvgUriReference defines an interface which applies to all elements which have the collection of XLink attributes, such as xlink:href, which define a URI reference. ISvgUseElement The SvgUseElement interface corresponds to the 'use' element. ISvgViewElement ISvgViewSpec The interface corresponds to an Svg View Specification. ISvgVKernElement The ISvgVKernElement interface corresponds to the 'vkern' element. ISvgWindow ISvgZoomAndPan The SvgZoomAndPan interface defines attribute \"zoomAndPan\" and associated constants. ISvgZoomEvent Enums SvgAngleType The basic Angle Value Types SvgColorType Basic color type enumeration. SvgExceptionType SvgFilterBlendMode The basic Filter Blend Modes SvgFilterChannelSelector The Filter Channel Selectors SvgFilterColorMatrix The basic Filter Matrix Types SvgFilterCompositeOperator The Filter Composite Operators SvgFilterEdgeMode The Filter Edge Mode Types SvgFilterMorphologyOperator The Morphology Operator SvgFilterStitchOption The Filter Stitch Options SvgFilterTransferType The Filter Component Transfer Types SvgFilterTurbulenceType The Filter Turbulence Types SvgLengthAdjust SvgLengthDirection Defines the direction of a SvgLength SvgLengthSource Defines the origin type of the SvgLength value SvgLengthType SvgMarkerOrient SvgMarkerPosition SvgMarkerUnit SvgMeetOrSlice SvgPaintType SvgPathSegType SvgPathType SvgPreserveAspectRatioType SvgRenderingHint SvgSpreadMethod SvgTextPathMethod Indicates the method by which text should be rendered along the path. SvgTextPathSpacing Indicates how the user agent should determine the spacing between glyphs that are to be rendered along a path. SvgTransformOrder Specifies the order for matrix transform operations. SvgTransformType SvgUnitType This defines a commonly used set of constants and is a base interface used by ISvgGradientElement , ISvgPatternElement , ISvgClipPathElement , ISvgMaskElement and ISvgFilterElement . SvgZoomAndPanType Summary description for SvgZoomAndPanType. Delegates RenderEvent SvgDocument.ResolveNamespaceDelegate Namespace resolution event delegate. SvgDocument.ResolveUriDelegate URI resolution event delegate"
  },
  "api/SharpVectors.Dom.Svg.IGetSvgDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.IGetSvgDocument.html",
    "title": "Interface IGetSvgDocument | SharpVectors Documentation",
    "keywords": "Interface IGetSvgDocument Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface IGetSvgDocument Methods GetSvgDocument() Declaration ISvgDocument GetSvgDocument() Returns Type Description ISvgDocument"
  },
  "api/SharpVectors.Dom.Svg.ISharpMarkerHost.html": {
    "href": "api/SharpVectors.Dom.Svg.ISharpMarkerHost.html",
    "title": "Interface ISharpMarkerHost | SharpVectors Documentation",
    "keywords": "Interface ISharpMarkerHost This is an extension to the Svg DOM. It denotes that an element can display markers. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISharpMarkerHost Remarks A marker is a symbol which is attached to one or more vertices of some Svg elements. In order for a marker to be drawn correctly, its orientation and position needs to be known. See SVG 1.0 Masking - Establishing A New Clipping Path This interface provides the information required to calculate the orientation and position for each marker of an Svg element. To give an Svg element the capability to draw markers, let the Svg element implement this interface. Properties IsClosed Declaration bool IsClosed { get; } Property Value Type Description Boolean MarkerPositions An array specifying the position of each vertex in the Svg element's shape. Declaration SvgPointF[] MarkerPositions { get; } Property Value Type Description SvgPointF [] MayHaveCurves Declaration bool MayHaveCurves { get; } Property Value Type Description Boolean Methods GetEndAngle(Int32) Get the angle of the path segment leaving the specified vertex in degrees. Declaration double GetEndAngle(int index) Parameters Type Name Description Int32 index Specifies the vertex from which the path segment is leaving. Returns Type Description Double The angle of the path segment leaving the specified vertex. GetMarker(Int32) Declaration ISvgMarker GetMarker(int index) Parameters Type Name Description Int32 index Returns Type Description ISvgMarker GetStartAngle(Int32) Get the angle of the path segment entering the specified vertex. Declaration double GetStartAngle(int index) Parameters Type Name Description Int32 index Specifies the vertex to which the path segment is entering. Returns Type Description Double The angle of the path segment entering the specified vertex in degrees."
  },
  "api/SharpVectors.Dom.Svg.ISvgAElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAElement.html",
    "title": "Interface ISvgAElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Properties Target Declaration ISvgAnimatedString Target { get; } Property Value Type Description ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.html",
    "title": "Interface ISvgAltGlyphDefElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAltGlyphDefElement The ISvgAltGlyphDefElement interface corresponds to the 'altGlyphDef' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAltGlyphDefElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Remarks Content model: Either one or more 'glyphRef' elements, orIn the simplest case, an 'altGlyphDef' contains one or more 'glyphRef' elements. Each 'glyphRef' element references a single glyph within a particular font. one or more 'altGlyphItem' elements.In the more complex case, an 'altGlyphDef' contains one or more 'altGlyphItem' elements. Each 'altGlyphItem' represents a candidate set of substitute glyphs. Each 'altGlyphItem' contains one or more 'glyphRef' elements. Each 'glyphRef' element references a single glyph within a particular font. Properties IsSimple Gets a value indicating whether this is a simple content model. Declaration bool IsSimple { get; } Property Value Type Description Boolean Returns true if this element defines a simple content model that contains only 'glyphRef' elements, otherwise returns false . Methods GetGlyphItem(String) Gets the ISvgAltGlyphItemElement with the specified name or ID. Declaration ISvgAltGlyphItemElement GetGlyphItem(string name) Parameters Type Name Description String name The name or ID of the required ISvgAltGlyphItemElement . Returns Type Description ISvgAltGlyphItemElement A ISvgAltGlyphItemElement specifying the 'altGlyphItem' element of the specifiied name or ID. This will always return null , if the IsSimple is true . GetGlyphRef(String) Gets the ISvgGlyphRefElement with the specified name or ID. Declaration ISvgGlyphRefElement GetGlyphRef(string name) Parameters Type Name Description String name The name or ID of the required ISvgGlyphRefElement . Returns Type Description ISvgGlyphRefElement A ISvgGlyphRefElement specifying the 'glyphRef' element of the specifiied name or ID. This will always return null , if the IsSimple is false ."
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphElement.html",
    "title": "Interface ISvgAltGlyphElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAltGlyphElement The ISvgAltGlyphElement interface corresponds to the 'altGlyph' element. Inherited Members ISvgTextPositioningElement.X ISvgTextPositioningElement.Y ISvgTextPositioningElement.Dx ISvgTextPositioningElement.Dy ISvgTextPositioningElement.Rotate ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(Int64, Int64) ISvgTextContentElement.GetStartPositionOfChar(Int64) ISvgTextContentElement.GetEndPositionOfChar(Int64) ISvgTextContentElement.GetExtentOfChar(Int64) ISvgTextContentElement.GetRotationOfChar(Int64) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(Int64, Int64) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgUriReference.Href Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAltGlyphElement : ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgUriReference Properties Format The format of the given font. This corresponds to attribute 'format' on the given element. Declaration string Format { get; set; } Property Value Type Description String The format of the given font. Remarks It is read only attribute GlyphRef The glyph identifier, this corresponds to attribute 'glyphRef attribute' on the given element. Declaration string GlyphRef { get; set; } Property Value Type Description String The glyph identifier, the format of which is dependent on the Format of the given font. Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphItemElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphItemElement.html",
    "title": "Interface ISvgAltGlyphItemElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAltGlyphItemElement The ISvgAltGlyphItemElement interface corresponds to the 'altGlyphItem' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAltGlyphItemElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Remarks *Content model:* One or more 'glyphRef' elements. The 'altGlyphItem' element defines a candidate set of possible glyph substitutions. The first 'altGlyphItem' element whose referenced glyphs are all available is chosen. Its glyphs are rendered instead of the character(s) that are inside of the referencing 'altGlyph' element. Methods GetGlyphRef(String) Gets the ISvgGlyphRefElement with the specified name or ID. Declaration ISvgGlyphRefElement GetGlyphRef(string name) Parameters Type Name Description String name The name or ID of the required ISvgGlyphRefElement . Returns Type Description ISvgGlyphRefElement A ISvgGlyphRefElement specifying the 'glyphRef' element of the specifiied name or ID."
  },
  "api/SharpVectors.Dom.Svg.ISvgAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAngle.html",
    "title": "Interface ISvgAngle | SharpVectors Documentation",
    "keywords": "Interface ISvgAngle The SvgAngle interface corresponds to the angle basic data type. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAngle Properties UnitType The type of the value as specified by the SvgAngleType enum class. Declaration SvgAngleType UnitType { get; } Property Value Type Description SvgAngleType Value The angle value as a floating point value, in degrees. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting. Declaration double Value { get; set; } Property Value Type Description Double ValueAsString The angle value as a string value, in the units expressed by unitType. Setting this attribute will cause value and valueInSpecifiedUnits to be updated automatically to reflect this setting. Declaration string ValueAsString { get; set; } Property Value Type Description String ValueInSpecifiedUnits The angle value as a floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting. Declaration double ValueInSpecifiedUnits { get; set; } Property Value Type Description Double Methods ConvertToSpecifiedUnits(SvgAngleType) Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueAsSpecified and valueAsString might be modified as a result of this method. Declaration void ConvertToSpecifiedUnits(SvgAngleType unitType) Parameters Type Name Description SvgAngleType unitType The unitType to switch to (e.g., SvgAngleTypeDEG). NewValueSpecifiedUnits(SvgAngleType, Double) Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object. Declaration void NewValueSpecifiedUnits(SvgAngleType unitType, double valueInSpecifiedUnits) Parameters Type Name Description SvgAngleType unitType The unitType for the angle value (e.g., SvgAngleTypeDEG). Double valueInSpecifiedUnits The angle value."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.html",
    "title": "Interface ISvgAnimateColorElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateColorElement The SVGAnimateColorElement interface corresponds to the \"animateColor\" element. Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(Single) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(Single) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimateColorElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget, ISvgStylable Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Declaration string Accumulate { get; set; } Property Value Type Description String Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute. Additive Gets or sets a value that controls whether or not the animation is additive. Declaration string Additive { get; set; } Property Value Type Description String Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations. AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. Declaration string AttributeName { get; } Property Value Type Description String AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. Declaration string AttributeType { get; set; } Property Value Type Description String The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'. By Gets or sets a value that specifies a relative offset value for the animation. Declaration string By { get; set; } Property Value Type Description String Specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. Declaration string CalcMode { get; set; } Property Value Type Description String This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute. From Gets or sets a value that specifies the starting value of the animation. Declaration string From { get; set; } Property Value Type Description String Specifies the starting value of the animation. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. Declaration string KeySplines { get; set; } Property Value Type Description String The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. Declaration string KeyTimes { get; set; } Property Value Type Description String Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored. To Gets or sets a value that specifies the ending value of the animation. Declaration string To { get; set; } Property Value Type Description String Specifies the ending value of the animation. Values Gets or sets a semicolon-separated list of one or more values. Declaration string Values { get; set; } Property Value Type Description String Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedAngle.html",
    "title": "Interface ISvgAnimatedAngle | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedAngle Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedAngle Properties AnimVal Declaration ISvgAngle AnimVal { get; } Property Value Type Description ISvgAngle BaseVal Declaration ISvgAngle BaseVal { get; } Property Value Type Description ISvgAngle"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedBoolean.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedBoolean.html",
    "title": "Interface ISvgAnimatedBoolean | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedBoolean Used for attributes of type boolean which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedBoolean Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. Declaration bool AnimVal { get; } Property Value Type Description Boolean BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if it is readonly. Declaration bool BaseVal { get; set; } Property Value Type Description Boolean"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedEnumeration.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedEnumeration.html",
    "title": "Interface ISvgAnimatedEnumeration | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedEnumeration Used for attributes whose value must be a constant from a particular enumeration and which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedEnumeration Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. Declaration ushort AnimVal { get; } Property Value Type Description UInt16 BaseVal The base value of the given attribute before applying any animations. Inheriting Class should throw an exception when the value is read only Declaration ushort BaseVal { get; set; } Property Value Type Description UInt16"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedInteger.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedInteger.html",
    "title": "Interface ISvgAnimatedInteger | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedInteger Used for attributes of basic type integer which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedInteger Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as BaseVal . Declaration long AnimVal { get; } Property Value Type Description Int64 BaseVal The base value of the given attribute before applying any animations. Declaration long BaseVal { get; set; } Property Value Type Description Int64"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLength.html",
    "title": "Interface ISvgAnimatedLength | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedLength Used for attributes of basic type 'length' which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedLength Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. Declaration ISvgLength AnimVal { get; } Property Value Type Description ISvgLength BaseVal The base value of the given attribute before applying any animations Declaration ISvgLength BaseVal { get; } Property Value Type Description ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.html",
    "title": "Interface ISvgAnimatedLengthList | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedLengthList Used for attributes of type SvgLengthList which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedLengthList Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. Declaration ISvgLengthList AnimVal { get; } Property Value Type Description ISvgLengthList BaseVal The base value of the given attribute before applying any animations. Declaration ISvgLengthList BaseVal { get; } Property Value Type Description ISvgLengthList Count Gets the number of elements contained in the ISvgAnimatedLengthList . Declaration int Count { get; } Property Value Type Description Int32 The number of elements contained in the ISvgAnimatedLengthList . Item[UInt32] Gets the element at the specified index. Declaration ISvgAnimatedLength this[uint index] { get; } Parameters Type Name Description UInt32 index The zero-based index of the element to get or set. Property Value Type Description ISvgAnimatedLength The element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumber.html",
    "title": "Interface ISvgAnimatedNumber | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedNumber Used for attributes of basic type 'number' which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedNumber Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. Declaration double AnimVal { get; } Property Value Type Description Double BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if the value is read only. Declaration double BaseVal { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.html",
    "title": "Interface ISvgAnimatedNumberList | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedNumberList Used for attributes which take a list of numbers and which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedNumberList Properties AnimVal If the given attribute or property is being animated, then this attribute contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, then this attribute contains the same value as 'BaseVal'. Declaration ISvgNumberList AnimVal { get; } Property Value Type Description ISvgNumberList BaseVal The base value of the given attribute before applying any animations Declaration ISvgNumberList BaseVal { get; } Property Value Type Description ISvgNumberList Count Gets the number of elements contained in the ISvgAnimatedNumberList . Declaration int Count { get; } Property Value Type Description Int32 The number of elements contained in the ISvgAnimatedNumberList . Item[UInt32] Gets the element at the specified index. Declaration ISvgAnimatedNumber this[uint index] { get; } Parameters Type Name Description UInt32 index The zero-based index of the element to get or set. Property Value Type Description ISvgAnimatedNumber The element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.html",
    "title": "Interface ISvgAnimatedPathData | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedPathData The SvgAnimatedPathData interface supports elements which have a 'd' attribute which holds Svg path data, and supports the ability to animate that attribute. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedPathData Properties AnimatedNormalizedPathSegList Declaration ISvgPathSegList AnimatedNormalizedPathSegList { get; } Property Value Type Description ISvgPathSegList AnimatedPathSegList Declaration ISvgPathSegList AnimatedPathSegList { get; } Property Value Type Description ISvgPathSegList NormalizedPathSegList Declaration ISvgPathSegList NormalizedPathSegList { get; } Property Value Type Description ISvgPathSegList PathSegList Declaration ISvgPathSegList PathSegList { get; } Property Value Type Description ISvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPoints.html",
    "title": "Interface ISvgAnimatedPoints | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedPoints The SvgAnimatedPoints interface supports elements which have a 'points' attribute which holds a list of coordinate values and which support the ability to animate that attribute. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedPoints Properties AnimatedPoints Declaration ISvgPointList AnimatedPoints { get; } Property Value Type Description ISvgPointList Points Declaration ISvgPointList Points { get; } Property Value Type Description ISvgPointList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPreserveAspectRatio.html",
    "title": "Interface ISvgAnimatedPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedPreserveAspectRatio Used for attributes of type SvgPreserveAspectRatio which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedPreserveAspectRatio Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same Declaration ISvgPreserveAspectRatio AnimVal { get; } Property Value Type Description ISvgPreserveAspectRatio BaseVal The base value of the given attribute before applying any animations. Declaration ISvgPreserveAspectRatio BaseVal { get; } Property Value Type Description ISvgPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedRect.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedRect.html",
    "title": "Interface ISvgAnimatedRect | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedRect Used for attributes of type SvgRect which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedRect Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. Declaration ISvgRect AnimVal { get; } Property Value Type Description ISvgRect BaseVal The base value of the given attribute before applying any animations. Declaration ISvgRect BaseVal { get; } Property Value Type Description ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedString.html",
    "title": "Interface ISvgAnimatedString | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedString Used for attributes of type DOMString which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedString Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. Declaration string AnimVal { get; } Property Value Type Description String BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if this value is read only. Declaration string BaseVal { get; set; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedTransformList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedTransformList.html",
    "title": "Interface ISvgAnimatedTransformList | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedTransformList Used for the various attributes which specify a set of transformations, such as the transform attribute which is available for many of Svg's elements, and which can be animated. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimatedTransformList Properties AnimVal Declaration ISvgTransformList AnimVal { get; } Property Value Type Description ISvgTransformList BaseVal Declaration ISvgTransformList BaseVal { get; } Property Value Type Description ISvgTransformList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.html",
    "title": "Interface ISvgAnimateElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateElement This interface corresponds to the \"animate\" element. Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(Single) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(Single) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimateElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget, ISvgStylable Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Declaration string Accumulate { get; set; } Property Value Type Description String Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute. Additive Gets or sets a value that controls whether or not the animation is additive. Declaration string Additive { get; set; } Property Value Type Description String Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations. AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. Declaration string AttributeName { get; } Property Value Type Description String AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. Declaration string AttributeType { get; set; } Property Value Type Description String The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'. By Gets or sets a value that specifies a relative offset value for the animation. Declaration string By { get; set; } Property Value Type Description String Specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. Declaration string CalcMode { get; set; } Property Value Type Description String This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute. From Gets or sets a value that specifies the starting value of the animation. Declaration string From { get; set; } Property Value Type Description String Specifies the starting value of the animation. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. Declaration string KeySplines { get; set; } Property Value Type Description String The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. Declaration string KeyTimes { get; set; } Property Value Type Description String Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored. To Gets or sets a value that specifies the ending value of the animation. Declaration string To { get; set; } Property Value Type Description String Specifies the ending value of the animation. Values Gets or sets a semicolon-separated list of one or more values. Declaration string Values { get; set; } Property Value Type Description String Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.html",
    "title": "Interface ISvgAnimateMotionElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateMotionElement This interface corresponds to the \"animateMotion\" element. Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(Single) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(Single) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimateMotionElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Declaration string Accumulate { get; set; } Property Value Type Description String Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute. Additive Gets or sets a value that controls whether or not the animation is additive. Declaration string Additive { get; set; } Property Value Type Description String Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations. By Gets or sets a value that specifies a relative offset value for the animation. Declaration string By { get; set; } Property Value Type Description String Specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. Declaration string CalcMode { get; set; } Property Value Type Description String This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute. From Gets or sets a value that specifies the starting value of the animation. Declaration string From { get; set; } Property Value Type Description String Specifies the starting value of the animation. KeyPoints Gets or sets a value that takes a semicolon-separated list of floating point values between 0 and 1 and indicates how far along the motion path the object shall move at the moment in time specified by corresponding \"keyTimes\" value. Declaration string KeyPoints { get; set; } Property Value Type Description String Distance calculations use the user agent's distance along the path algorithm. Each progress value in the list corresponds to a value in the \"keyTimes\" attribute list. If a list of \"keyPoints\" is specified, there must be exactly as many values in the \"keyPoints\" list as in the \"keyTimes\" list. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. Declaration string KeySplines { get; set; } Property Value Type Description String The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. Declaration string KeyTimes { get; set; } Property Value Type Description String Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored. Origin The \"origin\" attribute is defined in the SMIL Animation specification. It has no effect in SVG. Declaration string Origin { get; set; } Property Value Type Description String The value is \"default\". Path Gets or set the attribute specifying the motion path, expressed in the same format and interpreted the same way as the \"d\" attribute on the \"path\" element. Declaration string Path { get; set; } Property Value Type Description String The effect of a motion path animation is to add a supplemental transformation matrix onto the CTM for the referenced object which causes a translation along the x- and y-axes of the current user coordinate system by the computed X and Y values computed over time. Rotate Gets or sets an attribute post-multiplies a supplemental transformation matrix onto the CTM of the target element to apply a rotation transformation about the origin of the current user coordinate system. Declaration string Rotate { get; set; } Property Value Type Description String The rotation transformation is applied after the supplemental translation transformation that is computed due to the \"path\" attribute. autoIndicates that the object is rotated over time by the angle of the direction (i.e., directional tangent vector) of the motion path. auto-reverseIndicates that the object is rotated over time by the angle of the direction (i.e., directional tangent vector) of the motion path plus 180 degrees. numberIndicates that the target element has a constant rotation transformation applied to it, where the rotation angle is the specified number of degrees. The default value is '0'. To Gets or sets a value that specifies the ending value of the animation. Declaration string To { get; set; } Property Value Type Description String Specifies the ending value of the animation. Values Gets or sets a semicolon-separated list of one or more values. Declaration string Values { get; set; } Property Value Type Description String Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMPathElement.html",
    "title": "Interface ISvgAnimateMPathElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateMPathElement This interface corresponds to the \"mpath\" element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimateMPathElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.html",
    "title": "Interface ISvgAnimateSetElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateSetElement Object-oriented access to the attributes of the \"set\" element via the SVG DOM is not available. Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(Single) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(Single) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimateSetElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Properties AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. Declaration string AttributeName { get; } Property Value Type Description String AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. Declaration string AttributeType { get; set; } Property Value Type Description String The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'. To Gets or sets a value that specifies the ending value of the animation. Declaration string To { get; set; } Property Value Type Description String Specifies the value for the attribute during the duration of the ‘set’ element. The argument value must match the attribute type."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.html",
    "title": "Interface ISvgAnimateTransformElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateTransformElement This interface corresponds to the \"animateTransform\" element. Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(Single) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(Single) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimateTransformElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Declaration string Accumulate { get; set; } Property Value Type Description String Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute. Additive Gets or sets a value that controls whether or not the animation is additive. Declaration string Additive { get; set; } Property Value Type Description String Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations. AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. Declaration string AttributeName { get; } Property Value Type Description String AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. Declaration string AttributeType { get; set; } Property Value Type Description String The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'. By Gets or sets a value that specifies a relative offset value for the animation. Declaration string By { get; set; } Property Value Type Description String Specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. Declaration string CalcMode { get; set; } Property Value Type Description String This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute. From Gets or sets a value that specifies the starting value of the animation. Declaration string From { get; set; } Property Value Type Description String Specifies the starting value of the animation. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. Declaration string KeySplines { get; set; } Property Value Type Description String The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. Declaration string KeyTimes { get; set; } Property Value Type Description String Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored. To Gets or sets a value that specifies the ending value of the animation. Declaration string To { get; set; } Property Value Type Description String Specifies the ending value of the animation. Type Gets or sets a value to indicates the type of transformation which is to have its values change over time. Declaration SvgTransformType Type { get; set; } Property Value Type Description SvgTransformType The values are translate | scale | rotate | skewX | skewY. If the attribute is not specified, then the effect is as if a value of 'translate' were specified. The ‘from’, ‘by’ and ‘to’ attributes take a value expressed using the same syntax that is available for the given transformation type: For a type='translate\", each individual value is expressed as {tx} [,{ty}]. For a type=\"scale\", each individual value is expressed as {sx} [,{sy}]. For a type=\"rotate\", each individual value is expressed as {rotate-angle} [{cx} {cy}]. For a type=\"skewX\" and type=\"skewY\", each individual value is expressed as {skew-angle}. Values Gets or sets a semicolon-separated list of one or more values. Declaration string Values { get; set; } Property Value Type Description String Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.html",
    "title": "Interface ISvgAnimationElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimationElement This is the base interface for all of the animation element interfaces: ISvgAnimateElement , ISvgAnimateSetElement , ISvgAnimateColorElement , ISvgAnimateMotionElement and ISvgAnimateTransformElement . Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(Single) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(Single) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgAnimationElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Remarks Unlike other SVG DOM interfaces, the SVG DOM does not specify convenience DOM properties corresponding to the various language attributes on SVG's animation elements. Properties Begin Gets or sets values of values that defines when the element should begin (i.e. become active). Declaration string Begin { get; set; } Property Value Type Description String The attribute value is a semicolon separated list of values. If set to \"indefinite\", the begin of the animation will be determined by a BeginElement() method call or a hyperlink targeted to the element. CurrentTime Gets the current time in seconds relative to time zero for the given time container. Declaration float CurrentTime { get; } Property Value Type Description Single The current time in seconds relative to time zero for the given time container. Duration Gets or sets a value that specifies the simple duration. Declaration string Duration { get; set; } Property Value Type Description String The attribute value can be one of the following: Clock-value (time duration) Specifies the length of the simple duration in presentation time. Value must be greater than 0. media Specifies the simple duration as the intrinsic media duration. This is only valid for elements that define media. (For SVG's animation elements, if 'media' is specified, the attribute will be ignored.) indefiniteSpecifies the simple duration as indefinite. If the animation does not have a \"dur\" attribute, the simple duration is indefinite. End Gets or sets the attribute that defines an end value for the animation that can constrain the active duration. Declaration string End { get; set; } Property Value Type Description String The attribute value is a semicolon separated list of values. A value of \"indefinite\" specifies that the end of the animation will be determined by an EndElement() method call (the animation DOM methods are described in DOM interfaces). Fill Gets or sets the attribute can be used to maintain the value of the animation after the active duration of the animation element ends. Declaration string Fill { get; set; } Property Value Type Description String This attribute can have the following values: freeze The animation effect F(t) is defined to freeze the effect value at the last value of the active duration. The animation effect is \"frozen\" for the remainder of the document duration. remove The animation effect is removed (no longer applied) when the active duration of the animation is over. After the active end of the animation, the animation no longer affects the target. This is the default value. Maximum Gets or sets the value that specifies the maximum value of the active duration. Declaration string Maximum { get; set; } Property Value Type Description String The attribute value can be either of the following: Clock-value Specifies the length of the maximum value of the active duration, measured in local time. Value must be greater than 0. media Specifies the maximum value of the active duration as the intrinsic media duration. This is only valid for elements that define media. (For SVG's animation elements, if 'media' is specified, the attribute will be ignored.) There is no default value for \"max\". This does not constrain the active duration at all. Minimum Gets or sets a value that specifies the minimum value of the active duration. Declaration string Minimum { get; set; } Property Value Type Description String The attribute value can be either of the following: Clock-value Specifies the length of the minimum value of the active duration, measured in local time. Value must be greater than 0. media Specifies the minimum value of the active duration as the intrinsic media duration. This is only valid for elements that define media. (For SVG's animation elements, if 'media' is specified, the attribute will be ignored.) RepeatCount Gets or sets a value that specifies the number of iterations of the animation function. Declaration string RepeatCount { get; set; } Property Value Type Description String It can have the following attribute values: numeric value This is a (base 10) \"floating point\" numeric value that specifies the number of iterations. It can include partial iterations expressed as fraction values. A fractional value describes a portion of the simple duration. Values must be greater than 0. indefinite The animation is defined to repeat indefinitely (i.e. until the document ends). RepeatDuration Gets or sets a value that specifies the total duration for repeat. Declaration string RepeatDuration { get; set; } Property Value Type Description String It can have the following attribute values: Clock-valueSpecifies the duration in presentation time to repeat the animation function f(t). indefiniteThe animation is defined to repeat indefinitely (i.e. until the document ends). Restart Gets or sets the attribute that controls the circumstances under which an animation is restarted. Declaration string Restart { get; set; } Property Value Type Description String alwaysThe animation can be restarted at any time. This is the default value. whenNotActive The animation can only be restarted when it is not active (i.e. after the active end). Attempts to restart the animation during its active duration are ignored. never The element cannot be restarted for the remainder of the current simple duration of the parent time container. (In the case of SVG, since the parent time container is the SVG document fragment, then the animation cannot be restarted for the remainder of the document duration.) SimpleDuration Gets the number of seconds for the simple duration for this animation. If the simple duration is undefined (e.g., the end time is indefinite), then an exception is raised. Declaration float SimpleDuration { get; } Property Value Type Description Single The number of seconds for the simple duration for this animation. Exceptions Type Condition DomException The simple duration is not determined on the given element. StartTime Gets the begin time, in seconds, for this animation element's current interval, if it exists, regardless of whether the interval has begun yet. If there is no current interval, then a DomException with code INVALID_STATE_ERR is thrown. Declaration float StartTime { get; } Property Value Type Description Single The start time, in seconds, of this animation element's current interval. Exceptions Type Condition DomException The animation element does not have a current interval. TargetElement Gets the element which is being animated. Declaration ISvgElement TargetElement { get; } Property Value Type Description ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgCircleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCircleElement.html",
    "title": "Interface ISvgCircleElement | SharpVectors Documentation",
    "keywords": "Interface ISvgCircleElement The SvgCircleElement interface corresponds to the 'circle' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgCircleElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Properties Cx Corresponds to attribute cx on the given 'circle' element. Declaration ISvgAnimatedLength Cx { get; } Property Value Type Description ISvgAnimatedLength Cy Corresponds to attribute cy on the given 'circle' element. Declaration ISvgAnimatedLength Cy { get; } Property Value Type Description ISvgAnimatedLength R Corresponds to attribute r on the given 'circle' element. Declaration ISvgAnimatedLength R { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgClipPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgClipPathElement.html",
    "title": "Interface ISvgClipPathElement | SharpVectors Documentation",
    "keywords": "Interface ISvgClipPathElement Used by SvgClipPathElement. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgClipPathElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable Properties ClipPathUnits Declaration ISvgAnimatedEnumeration ClipPathUnits { get; } Property Value Type Description ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgColor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColor.html",
    "title": "Interface ISvgColor | SharpVectors Documentation",
    "keywords": "Interface ISvgColor The SvgColor interface corresponds to color value definition for properties 'stop-color', 'flood-color' and 'lighting-color' and is a base class for interface SvgPaint. It incorporates Svg's extended notion of color, which incorporates ICC-based color specifications. Interface SVGColor does not correspond to the color basic data type. For the color basic data type, the applicable DOM interfaces are defined in CSS; in particular, see the ICssRgbColor interface. Inherited Members ICssValue.CssText ICssValue.CssValueType ICssValue.IsAbsolute Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgColor : ICssValue Properties ColorType Declaration SvgColorType ColorType { get; } Property Value Type Description SvgColorType IccColor Declaration ISvgIccColor IccColor { get; } Property Value Type Description ISvgIccColor RgbColor Declaration ICssColor RgbColor { get; } Property Value Type Description ICssColor Methods SetColor(SvgColorType, String, String) Declaration void SetColor(SvgColorType colorType, string rgbColor, string iccColor) Parameters Type Name Description SvgColorType colorType String rgbColor String iccColor SetRgbColor(String) Declaration void SetRgbColor(string rgbColor) Parameters Type Name Description String rgbColor SetRgbColorIccColor(String, String) Declaration void SetRgbColorIccColor(string rgbColor, string iccColor) Parameters Type Name Description String rgbColor String iccColor"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.html",
    "title": "Interface ISvgColorProfileElement | SharpVectors Documentation",
    "keywords": "Interface ISvgColorProfileElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgColorProfileElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference Properties Local Declaration string Local { get; set; } Property Value Type Description String Name Declaration string Name { get; set; } Property Value Type Description String RenderingIntent Declaration ushort RenderingIntent { get; set; } Property Value Type Description UInt16"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.html",
    "title": "Interface ISvgColorProfileRule | SharpVectors Documentation",
    "keywords": "Interface ISvgColorProfileRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgColorProfileRule : ISvgCssRule, ICssRule, ISvgRenderingIntent Properties Name Declaration string Name { get; set; } Property Value Type Description String RenderingIntent Declaration ushort RenderingIntent { get; set; } Property Value Type Description UInt16 Src Declaration string Src { get; set; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.html",
    "title": "Interface ISvgComponentTransferFunctionElement | SharpVectors Documentation",
    "keywords": "Interface ISvgComponentTransferFunctionElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgComponentTransferFunctionElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Properties Amplitude Declaration ISvgAnimatedNumber Amplitude { get; } Property Value Type Description ISvgAnimatedNumber Exponent Declaration ISvgAnimatedNumber Exponent { get; } Property Value Type Description ISvgAnimatedNumber Intercept Declaration ISvgAnimatedNumber Intercept { get; } Property Value Type Description ISvgAnimatedNumber Offset Declaration ISvgAnimatedNumber Offset { get; } Property Value Type Description ISvgAnimatedNumber Slope Declaration ISvgAnimatedNumber Slope { get; } Property Value Type Description ISvgAnimatedNumber TableValues Declaration ISvgAnimatedNumberList TableValues { get; } Property Value Type Description ISvgAnimatedNumberList Type Declaration ISvgAnimatedEnumeration Type { get; } Property Value Type Description ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgControl.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgControl.html",
    "title": "Interface ISvgControl | SharpVectors Documentation",
    "keywords": "Interface ISvgControl Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgControl Properties DesignMode Declaration bool DesignMode { get; } Property Value Type Description Boolean Height Declaration int Height { get; } Property Value Type Description Int32 Width Declaration int Width { get; } Property Value Type Description Int32 Methods HandleAlert(String) Declaration void HandleAlert(string message) Parameters Type Name Description String message HandleError(Exception) Declaration void HandleError(Exception exception) Parameters Type Name Description Exception exception HandleError(String) Declaration void HandleError(string message) Parameters Type Name Description String message HandleError(String, Exception) Declaration void HandleError(string message, Exception exception) Parameters Type Name Description String message Exception exception"
  },
  "api/SharpVectors.Dom.Svg.ISvgCssRule.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCssRule.html",
    "title": "Interface ISvgCssRule | SharpVectors Documentation",
    "keywords": "Interface ISvgCssRule SVG extends interface ICssRule with interface ISvgCssRule by adding an ISvgColorProfileRule rule to allow for specification of ICC-based color. Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgCssRule : ICssRule"
  },
  "api/SharpVectors.Dom.Svg.ISvgCursorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCursorElement.html",
    "title": "Interface ISvgCursorElement | SharpVectors Documentation",
    "keywords": "Interface ISvgCursorElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgExternalResourcesRequired.ExternalResourcesRequired Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgCursorElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgExternalResourcesRequired Properties X Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgDefinitionSrcElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDefinitionSrcElement.html",
    "title": "Interface ISvgDefinitionSrcElement | SharpVectors Documentation",
    "keywords": "Interface ISvgDefinitionSrcElement The SVGDefinitionSrcElement interface corresponds to the 'definition-src' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgDefinitionSrcElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgDefsElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDefsElement.html",
    "title": "Interface ISvgDefsElement | SharpVectors Documentation",
    "keywords": "Interface ISvgDefsElement The SvgDefsElement interface corresponds to the 'defs' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgDefsElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable"
  },
  "api/SharpVectors.Dom.Svg.ISvgDescElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDescElement.html",
    "title": "Interface ISvgDescElement | SharpVectors Documentation",
    "keywords": "Interface ISvgDescElement The SvgDescElement interface corresponds to the 'desc' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgDescElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.ISvgDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDocument.html",
    "title": "Interface ISvgDocument | SharpVectors Documentation",
    "keywords": "Interface ISvgDocument The root object in the document object hierarchy of an Svg document. Inherited Members IDocument.Doctype IDocument.Implementation IDocument.DocumentElement IDocument.CreateElement(String) IDocument.CreateDocumentFragment() IDocument.CreateTextNode(String) IDocument.CreateComment(String) IDocument.CreateCDataSection(String) IDocument.CreateProcessingInstruction(String, String) IDocument.CreateAttribute(String) IDocument.CreateEntityReference(String) IDocument.GetElementsByTagName(String) IDocument.ImportNode(INode, Boolean) IDocument.CreateElementNs(String, String) IDocument.CreateAttributeNs(String, String) IDocument.GetElementsByTagNameNs(String, String) IDocument.GetElementById(String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgDocument : IDocument, INode, IXmlNode Remarks When an 'svg' element is embedded inline as a component of a document from another namespace, such as when an 'svg' element is embedded inline within an XHTML document [ XHTML ], then an ISvgDocument object will not exist; instead, the root object in the document object hierarchy will be a Document object of a different type, such as an HTMLDocument object. However, an ISvgDocument object will indeed exist when the root element of the XML document hierarchy is an 'svg' element, such as when viewing a stand-alone SVG file (i.e., a file with MIME type \"image/svg+xml\"). In this case, the ISvgDocument object will be the root object of the document object model hierarchy. In the case where an SVG document is embedded by reference, such as when an XHTML document has an 'object' element whose href attribute references an SVG document (i.e., a document whose MIME type is \"image/svg+xml\" and whose root element is thus an 'svg' element), there will exist two distinct DOM hierarchies. The first DOM hierarchy will be for the referencing document (e.g., an XHTML document). The second DOM hierarchy will be for the referenced SVG document. In this/ second DOM hierarchy, the root object of the document object model hierarchy is an ISvgDocument object. The ISvgDocument interface contains a similar list of attributes and methods to the HTMLDocument interface described in the Document Object Model (HTML) Level 1 chapter of the [ DOM1 ] specification. Properties Domain The domain name of the server that served the document, or a null string if the server cannot be identified by a domain name. Declaration string Domain { get; } Property Value Type Description String Referrer Returns the URI of the page that linked to this page. Declaration string Referrer { get; } Property Value Type Description String The value is an empty string if the user navigated to the page directly (not through a link, but, for example, via a bookmark). RootElement The root 'svg' element in the document hierarchy. Declaration ISvgSvgElement RootElement { get; } Property Value Type Description ISvgSvgElement Static Gets a value specifying whether this document is in static mode. In static mode (non-interactive), events are not processed. Declaration bool Static { get; set; } Property Value Type Description Boolean This returns true if the document is in static mode; otherwise, it is false . Title The title of a document as specified by the title sub-element of the 'svg' root element. Declaration string Title { get; } Property Value Type Description String Url The complete URI of the document. Declaration string Url { get; } Property Value Type Description String Window The window object of the Svg document. Declaration ISvgWindow Window { get; } Property Value Type Description ISvgWindow"
  },
  "api/SharpVectors.Dom.Svg.ISvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElement.html",
    "title": "Interface ISvgElement | SharpVectors Documentation",
    "keywords": "Interface ISvgElement All of the Svg DOM interfaces that correspond directly to elements in the Svg language (e.g., the SvgPathElement interface corresponds directly to the 'path' element in the language) are derivative from base class SvgElement. Inherited Members IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgElement : IElement, IXmlElement, INode, IXmlNode Properties Id The value of the id attribute on the given element. Inheriting class should throw an exception when trying to update a read only element Declaration string Id { get; set; } Property Value Type Description String IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . OwnerSvgElement The nearest ancestor 'svg' element. Null if the given element is the outermost 'svg' element. Declaration ISvgSvgElement OwnerSvgElement { get; } Property Value Type Description ISvgSvgElement RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. ViewportElement The element which established the current viewport. Often, the nearest ancestor 'svg' element. Null if the given element is the outermost 'svg' element. Declaration ISvgElement ViewportElement { get; } Property Value Type Description ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.html",
    "title": "Interface ISvgElementInstance | SharpVectors Documentation",
    "keywords": "Interface ISvgElementInstance For each 'use' element, the Svg DOM maintains a shadow tree (the \"instance tree\") of objects of type SvgElementInstance Inherited Members IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgElementInstance : IEventTarget Properties ChildNodes Declaration ISvgElementInstanceList ChildNodes { get; } Property Value Type Description ISvgElementInstanceList CorrespondingElement Declaration ISvgElement CorrespondingElement { get; } Property Value Type Description ISvgElement CorrespondingUseElement Declaration ISvgUseElement CorrespondingUseElement { get; } Property Value Type Description ISvgUseElement FirstChild Declaration ISvgElementInstance FirstChild { get; } Property Value Type Description ISvgElementInstance LastChild Declaration ISvgElementInstance LastChild { get; } Property Value Type Description ISvgElementInstance NextSibling Declaration ISvgElementInstance NextSibling { get; } Property Value Type Description ISvgElementInstance ParentNode Declaration ISvgElementInstance ParentNode { get; } Property Value Type Description ISvgElementInstance PreviousSibling Declaration ISvgElementInstance PreviousSibling { get; } Property Value Type Description ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstanceList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstanceList.html",
    "title": "Interface ISvgElementInstanceList | SharpVectors Documentation",
    "keywords": "Interface ISvgElementInstanceList The SvgElementInstanceList interface provides the abstraction of an ordered collection of SvgElementInstance objects, without defining or constraining how this collection is implemented. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgElementInstanceList Properties Length Declaration ulong Length { get; } Property Value Type Description UInt64 Methods Item(UInt64) Declaration ISvgElementInstance Item(ulong index) Parameters Type Name Description UInt64 index Returns Type Description ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementVisitor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementVisitor.html",
    "title": "Interface ISvgElementVisitor | SharpVectors Documentation",
    "keywords": "Interface ISvgElementVisitor A visitor pattern interface that visits all renderable SVG elements. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgElementVisitor Remarks The implementation is defined are follows: Implements visitor ( ISvgElementVisitor ) object that implements an operation to be performed on elements of SVG DOM structure. Implement the client that traverses the SVG DOM structure and call a dispatching operation Accept(ISvgElementVisitor) on the SVG element — that dispatches (delegates) the request to the accepted visitor object. The visitor object then performs the operation on the element. Methods BeginContainer(ISvgElement) Signal the beginning of a graphics container element. Declaration void BeginContainer(ISvgElement element) Parameters Type Name Description ISvgElement element An instance of ISvgElement specifying the container element. EndContainer(ISvgElement) Signal the ending of a graphics container element. Declaration void EndContainer(ISvgElement element) Parameters Type Name Description ISvgElement element An instance of ISvgElement specifying the container element. Visit(ISvgAElement) Visits the link element. Declaration void Visit(ISvgAElement element) Parameters Type Name Description ISvgAElement element An instance of ISvgAElement specifying the link element. Visit(ISvgCircleElement) Visits the circle shape element. Declaration void Visit(ISvgCircleElement element) Parameters Type Name Description ISvgCircleElement element An instance of ISvgCircleElement specifying the circle shape. Visit(ISvgEllipseElement) Visits the ellipse shape element. Declaration void Visit(ISvgEllipseElement element) Parameters Type Name Description ISvgEllipseElement element An instance of ISvgEllipseElement specifying the ellipse shape. Visit(ISvgGElement) Visits the group element. Declaration void Visit(ISvgGElement element) Parameters Type Name Description ISvgGElement element An instance of ISvgGElement specifying the group element. Visit(ISvgImageElement) Visits the image graphics element. Declaration void Visit(ISvgImageElement element) Parameters Type Name Description ISvgImageElement element An instance of ISvgImageElement specifying the image element. Visit(ISvgLineElement) Visits the line shape element. Declaration void Visit(ISvgLineElement element) Parameters Type Name Description ISvgLineElement element An instance of ISvgLineElement specifying the line shape. Visit(ISvgPathElement) Visits the path shape element. Declaration void Visit(ISvgPathElement element) Parameters Type Name Description ISvgPathElement element An instance of ISvgPathElement specifying the path shape. Visit(ISvgPolygonElement) Visits the polygon shape element. Declaration void Visit(ISvgPolygonElement element) Parameters Type Name Description ISvgPolygonElement element An instance of ISvgPolygonElement specifying the polygon shape. Visit(ISvgPolylineElement) Visits the polyline shape element. Declaration void Visit(ISvgPolylineElement element) Parameters Type Name Description ISvgPolylineElement element An instance of ISvgPolylineElement specifying the polyline shape. Visit(ISvgRectElement) Visits the rectangle shape element. Declaration void Visit(ISvgRectElement element) Parameters Type Name Description ISvgRectElement element An instance of ISvgRectElement specifying the rectangle shape. Visit(ISvgSvgElement) Visits the svg clipart element. Declaration void Visit(ISvgSvgElement element) Parameters Type Name Description ISvgSvgElement element An instance of ISvgSvgElement specifying the svg clipart element. Visit(ISvgSwitchElement) Visits the switch element. Declaration void Visit(ISvgSwitchElement element) Parameters Type Name Description ISvgSwitchElement element An instance of ISvgSwitchElement specifying the switch element. Visit(ISvgSymbolElement) Visits the symbol element. Declaration void Visit(ISvgSymbolElement element) Parameters Type Name Description ISvgSymbolElement element An instance of ISvgRectElement specifying the symbol element. Visit(ISvgTextElement) Visits the text content element. Declaration void Visit(ISvgTextElement element) Parameters Type Name Description ISvgTextElement element An instance of ISvgTextElement specifying the text content element. Visit(ISvgTextPathElement) Visits the text-path content element. Declaration void Visit(ISvgTextPathElement element) Parameters Type Name Description ISvgTextPathElement element An instance of ISvgTextPathElement specifying the text-path element. Visit(ISvgTSpanElement) Visits the text-span content element. Declaration void Visit(ISvgTSpanElement element) Parameters Type Name Description ISvgTSpanElement element An instance of ISvgTSpanElement specifying the text-span content element. Visit(ISvgUseElement) Visits the use element. Declaration void Visit(ISvgUseElement element) Parameters Type Name Description ISvgUseElement element An instance of ISvgUseElement specifying the use element. See Also Wikipedia: Visitor pattern"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementVisitorTarget.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementVisitorTarget.html",
    "title": "Interface ISvgElementVisitorTarget | SharpVectors Documentation",
    "keywords": "Interface ISvgElementVisitorTarget A host target of the element visitor. Each renderable SVG element implements this interface. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgElementVisitorTarget Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. Declaration void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.ISvgEllipseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgEllipseElement.html",
    "title": "Interface ISvgEllipseElement | SharpVectors Documentation",
    "keywords": "Interface ISvgEllipseElement The SvgEllipseElement interface corresponds to the 'ellipse' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgEllipseElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Properties Cx Declaration ISvgAnimatedLength Cx { get; } Property Value Type Description ISvgAnimatedLength Cy Declaration ISvgAnimatedLength Cy { get; } Property Value Type Description ISvgAnimatedLength Rx Declaration ISvgAnimatedLength Rx { get; } Property Value Type Description ISvgAnimatedLength Ry Declaration ISvgAnimatedLength Ry { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgEvent.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgEvent.html",
    "title": "Interface ISvgEvent | SharpVectors Documentation",
    "keywords": "Interface ISvgEvent Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(String, Boolean, Boolean) IEvent.InitEventNs(String, String, Boolean, Boolean) IEvent.StopImmediatePropagation() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgEvent : IEvent"
  },
  "api/SharpVectors.Dom.Svg.ISvgExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgExternalResourcesRequired.html",
    "title": "Interface ISvgExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Interface ISvgExternalResourcesRequired This defines an interface which applies to all elements where this element or one of its descendants can reference an external resource. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgExternalResourcesRequired Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Declaration ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.html",
    "title": "Interface ISvgFEBlendElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEBlendElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEBlendElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString In2 Declaration ISvgAnimatedString In2 { get; } Property Value Type Description ISvgAnimatedString Mode Declaration ISvgAnimatedEnumeration Mode { get; } Property Value Type Description ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.html",
    "title": "Interface ISvgFEColorMatrixElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEColorMatrixElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEColorMatrixElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString Type Declaration ISvgAnimatedEnumeration Type { get; } Property Value Type Description ISvgAnimatedEnumeration Values Declaration ISvgAnimatedNumberList Values { get; } Property Value Type Description ISvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEComponentTransferElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEComponentTransferElement.html",
    "title": "Interface ISvgFEComponentTransferElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEComponentTransferElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEComponentTransferElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.html",
    "title": "Interface ISvgFECompositeElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFECompositeElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFECompositeElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString In2 Declaration ISvgAnimatedString In2 { get; } Property Value Type Description ISvgAnimatedString K1 Declaration ISvgAnimatedNumber K1 { get; } Property Value Type Description ISvgAnimatedNumber K2 Declaration ISvgAnimatedNumber K2 { get; } Property Value Type Description ISvgAnimatedNumber K3 Declaration ISvgAnimatedNumber K3 { get; } Property Value Type Description ISvgAnimatedNumber K4 Declaration ISvgAnimatedNumber K4 { get; } Property Value Type Description ISvgAnimatedNumber Operator Declaration ISvgAnimatedEnumeration Operator { get; } Property Value Type Description ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.html",
    "title": "Interface ISvgFEConvolveMatrixElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEConvolveMatrixElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEConvolveMatrixElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties Bias Declaration ISvgAnimatedNumber Bias { get; } Property Value Type Description ISvgAnimatedNumber Divisor Declaration ISvgAnimatedNumber Divisor { get; } Property Value Type Description ISvgAnimatedNumber EdgeMode Declaration ISvgAnimatedEnumeration EdgeMode { get; } Property Value Type Description ISvgAnimatedEnumeration KernelMatrix Declaration ISvgAnimatedNumberList KernelMatrix { get; } Property Value Type Description ISvgAnimatedNumberList KernelUnitLengthX Declaration ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value Type Description ISvgAnimatedNumber KernelUnitLengthY Declaration ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value Type Description ISvgAnimatedNumber OrderX Declaration ISvgAnimatedInteger OrderX { get; } Property Value Type Description ISvgAnimatedInteger OrderY Declaration ISvgAnimatedInteger OrderY { get; } Property Value Type Description ISvgAnimatedInteger PreserveAlpha Declaration ISvgAnimatedBoolean PreserveAlpha { get; } Property Value Type Description ISvgAnimatedBoolean TargetX Declaration ISvgAnimatedInteger TargetX { get; } Property Value Type Description ISvgAnimatedInteger TargetY Declaration ISvgAnimatedInteger TargetY { get; } Property Value Type Description ISvgAnimatedInteger"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.html",
    "title": "Interface ISvgFEDiffuseLightingElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEDiffuseLightingElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEDiffuseLightingElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties DiffuseConstant Declaration ISvgAnimatedNumber DiffuseConstant { get; } Property Value Type Description ISvgAnimatedNumber In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString KernelUnitLengthX Declaration ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value Type Description ISvgAnimatedNumber KernelUnitLengthY Declaration ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value Type Description ISvgAnimatedNumber SurfaceScale Declaration ISvgAnimatedNumber SurfaceScale { get; } Property Value Type Description ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.html",
    "title": "Interface ISvgFEDisplacementMapElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEDisplacementMapElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEDisplacementMapElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString In2 Declaration ISvgAnimatedString In2 { get; } Property Value Type Description ISvgAnimatedString Scale Declaration ISvgAnimatedNumber Scale { get; } Property Value Type Description ISvgAnimatedNumber XChannelSelector Declaration ISvgAnimatedEnumeration XChannelSelector { get; } Property Value Type Description ISvgAnimatedEnumeration YChannelSelector Declaration ISvgAnimatedEnumeration YChannelSelector { get; } Property Value Type Description ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDistantLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDistantLightElement.html",
    "title": "Interface ISvgFEDistantLightElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEDistantLightElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEDistantLightElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Properties Azimuth Declaration ISvgAnimatedNumber Azimuth { get; } Property Value Type Description ISvgAnimatedNumber Elevation Declaration ISvgAnimatedNumber Elevation { get; } Property Value Type Description ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFloodElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFloodElement.html",
    "title": "Interface ISvgFEFloodElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFloodElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEFloodElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFuncAElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFuncAElement.html",
    "title": "Interface ISvgFEFuncAElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFuncAElement Inherited Members ISvgComponentTransferFunctionElement.Type ISvgComponentTransferFunctionElement.TableValues ISvgComponentTransferFunctionElement.Slope ISvgComponentTransferFunctionElement.Intercept ISvgComponentTransferFunctionElement.Amplitude ISvgComponentTransferFunctionElement.Exponent ISvgComponentTransferFunctionElement.Offset ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEFuncAElement : ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFuncBElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFuncBElement.html",
    "title": "Interface ISvgFEFuncBElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFuncBElement Inherited Members ISvgComponentTransferFunctionElement.Type ISvgComponentTransferFunctionElement.TableValues ISvgComponentTransferFunctionElement.Slope ISvgComponentTransferFunctionElement.Intercept ISvgComponentTransferFunctionElement.Amplitude ISvgComponentTransferFunctionElement.Exponent ISvgComponentTransferFunctionElement.Offset ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEFuncBElement : ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFuncGElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFuncGElement.html",
    "title": "Interface ISvgFEFuncGElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFuncGElement Inherited Members ISvgComponentTransferFunctionElement.Type ISvgComponentTransferFunctionElement.TableValues ISvgComponentTransferFunctionElement.Slope ISvgComponentTransferFunctionElement.Intercept ISvgComponentTransferFunctionElement.Amplitude ISvgComponentTransferFunctionElement.Exponent ISvgComponentTransferFunctionElement.Offset ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEFuncGElement : ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFuncRElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFuncRElement.html",
    "title": "Interface ISvgFEFuncRElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFuncRElement Inherited Members ISvgComponentTransferFunctionElement.Type ISvgComponentTransferFunctionElement.TableValues ISvgComponentTransferFunctionElement.Slope ISvgComponentTransferFunctionElement.Intercept ISvgComponentTransferFunctionElement.Amplitude ISvgComponentTransferFunctionElement.Exponent ISvgComponentTransferFunctionElement.Offset ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEFuncRElement : ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.html",
    "title": "Interface ISvgFEGaussianBlurElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEGaussianBlurElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEGaussianBlurElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString StdDeviationX Declaration ISvgAnimatedNumber StdDeviationX { get; } Property Value Type Description ISvgAnimatedNumber StdDeviationY Declaration ISvgAnimatedNumber StdDeviationY { get; } Property Value Type Description ISvgAnimatedNumber Methods SetStdDeviation(Single, Single) Declaration void SetStdDeviation(float stdDeviationX, float stdDeviationY) Parameters Type Name Description Single stdDeviationX Single stdDeviationY"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEImageElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEImageElement.html",
    "title": "Interface ISvgFEImageElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEImageElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEImageElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties PreserveAspectRatio Declaration ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMergeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMergeElement.html",
    "title": "Interface ISvgFEMergeElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEMergeElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEMergeElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMergeNodeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMergeNodeElement.html",
    "title": "Interface ISvgFEMergeNodeElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEMergeNodeElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEMergeNodeElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.html",
    "title": "Interface ISvgFEMorphologyElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEMorphologyElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEMorphologyElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString Operator Declaration ISvgAnimatedEnumeration Operator { get; } Property Value Type Description ISvgAnimatedEnumeration RadiusX Declaration ISvgAnimatedNumber RadiusX { get; } Property Value Type Description ISvgAnimatedNumber RadiusY Declaration ISvgAnimatedNumber RadiusY { get; } Property Value Type Description ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.html",
    "title": "Interface ISvgFEOffsetElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEOffsetElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEOffsetElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties Dx Declaration ISvgAnimatedNumber Dx { get; } Property Value Type Description ISvgAnimatedNumber Dy Declaration ISvgAnimatedNumber Dy { get; } Property Value Type Description ISvgAnimatedNumber In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.html",
    "title": "Interface ISvgFEPointLightElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEPointLightElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFEPointLightElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Properties X Declaration ISvgAnimatedNumber X { get; } Property Value Type Description ISvgAnimatedNumber Y Declaration ISvgAnimatedNumber Y { get; } Property Value Type Description ISvgAnimatedNumber Z Declaration ISvgAnimatedNumber Z { get; } Property Value Type Description ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.html",
    "title": "Interface ISvgFESpecularLightingElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFESpecularLightingElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFESpecularLightingElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString KernelUnitLengthX Declaration ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value Type Description ISvgAnimatedNumber KernelUnitLengthY Declaration ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value Type Description ISvgAnimatedNumber SpecularConstant Declaration ISvgAnimatedNumber SpecularConstant { get; } Property Value Type Description ISvgAnimatedNumber SpecularExponent Declaration ISvgAnimatedNumber SpecularExponent { get; } Property Value Type Description ISvgAnimatedNumber SurfaceScale Declaration ISvgAnimatedNumber SurfaceScale { get; } Property Value Type Description ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.html",
    "title": "Interface ISvgFESpotLightElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFESpotLightElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFESpotLightElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Properties LimitingConeAngle Declaration ISvgAnimatedNumber LimitingConeAngle { get; } Property Value Type Description ISvgAnimatedNumber PointsAtX Declaration ISvgAnimatedNumber PointsAtX { get; } Property Value Type Description ISvgAnimatedNumber PointsAtY Declaration ISvgAnimatedNumber PointsAtY { get; } Property Value Type Description ISvgAnimatedNumber PointsAtZ Declaration ISvgAnimatedNumber PointsAtZ { get; } Property Value Type Description ISvgAnimatedNumber SpecularExponent Declaration ISvgAnimatedNumber SpecularExponent { get; } Property Value Type Description ISvgAnimatedNumber X Declaration ISvgAnimatedNumber X { get; } Property Value Type Description ISvgAnimatedNumber Y Declaration ISvgAnimatedNumber Y { get; } Property Value Type Description ISvgAnimatedNumber Z Declaration ISvgAnimatedNumber Z { get; } Property Value Type Description ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETileElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETileElement.html",
    "title": "Interface ISvgFETileElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFETileElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFETileElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties In1 Declaration ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.html",
    "title": "Interface ISvgFETurbulenceElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFETurbulenceElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFETurbulenceElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Properties BaseFrequencyX Declaration ISvgAnimatedNumber BaseFrequencyX { get; } Property Value Type Description ISvgAnimatedNumber BaseFrequencyY Declaration ISvgAnimatedNumber BaseFrequencyY { get; } Property Value Type Description ISvgAnimatedNumber NumOctaves Declaration ISvgAnimatedInteger NumOctaves { get; } Property Value Type Description ISvgAnimatedInteger Seed Declaration ISvgAnimatedNumber Seed { get; } Property Value Type Description ISvgAnimatedNumber StitchTiles Declaration ISvgAnimatedEnumeration StitchTiles { get; } Property Value Type Description ISvgAnimatedEnumeration Type Declaration ISvgAnimatedEnumeration Type { get; } Property Value Type Description ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.html",
    "title": "Interface ISvgFilterElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFilterElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFilterElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Properties FilterResX Declaration ISvgAnimatedInteger FilterResX { get; } Property Value Type Description ISvgAnimatedInteger FilterResY Declaration ISvgAnimatedInteger FilterResY { get; } Property Value Type Description ISvgAnimatedInteger FilterUnits Declaration ISvgAnimatedEnumeration FilterUnits { get; } Property Value Type Description ISvgAnimatedEnumeration Height Declaration ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength PrimitiveUnits Declaration ISvgAnimatedEnumeration PrimitiveUnits { get; } Property Value Type Description ISvgAnimatedEnumeration Width Declaration ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength Methods SetFilterRes(UInt64, UInt64) Declaration void SetFilterRes(ulong filterResX, ulong filterResY) Parameters Type Name Description UInt64 filterResX UInt64 filterResY"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.html",
    "title": "Interface ISvgFilterPrimitiveStandardAttributes | SharpVectors Documentation",
    "keywords": "Interface ISvgFilterPrimitiveStandardAttributes Inherited Members ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFilterPrimitiveStandardAttributes : ISvgStylable Properties Height Declaration ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength Result Declaration ISvgAnimatedString Result { get; } Property Value Type Description ISvgAnimatedString Width Declaration ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgFitToViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFitToViewBox.html",
    "title": "Interface ISvgFitToViewBox | SharpVectors Documentation",
    "keywords": "Interface ISvgFitToViewBox Interface SvgFitToViewBox defines DOM attributes that apply to elements which have XML attributes viewBox and preserveAspectRatio. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFitToViewBox Properties PreserveAspectRatio Declaration ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio ViewBox Declaration ISvgAnimatedRect ViewBox { get; } Property Value Type Description ISvgAnimatedRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontElement.html",
    "title": "Interface ISvgFontElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontElement The ISvgFontElement interface corresponds to the 'font' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFontElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgExternalResourcesRequired, ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceElement.html",
    "title": "Interface ISvgFontFaceElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceElement The ISvgFontFaceElement interface corresponds to the 'font-face' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFontFaceElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceFormatElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceFormatElement.html",
    "title": "Interface ISvgFontFaceFormatElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceFormatElement The ISvgFontFaceFormatElement interface corresponds to the 'font-face-format' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFontFaceFormatElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceNameElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceNameElement.html",
    "title": "Interface ISvgFontFaceNameElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceNameElement The ISvgFontFaceNameElement interface corresponds to the 'font-face-name' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFontFaceNameElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Properties FaceName Declaration string FaceName { get; set; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceSrcElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceSrcElement.html",
    "title": "Interface ISvgFontFaceSrcElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceSrcElement The ISvgFontFaceSrcElement interface corresponds to the 'font-face-src' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFontFaceSrcElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceUriElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceUriElement.html",
    "title": "Interface ISvgFontFaceUriElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceUriElement The ISvgFontFaceUriElement interface corresponds to the 'font-face-uri' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgFontFaceUriElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.html",
    "title": "Interface ISvgForeignObjectElement | SharpVectors Documentation",
    "keywords": "Interface ISvgForeignObjectElement The ISvgForeignObjectElement interface provides access to the properties of 'foreignObject' elements, as well as methods to manipulate them. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgForeignObjectElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget Properties Height Declaration ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength Width Declaration ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgGElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGElement.html",
    "title": "Interface ISvgGElement | SharpVectors Documentation",
    "keywords": "Interface ISvgGElement The SvgGElement interface corresponds to the 'g' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgGElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphElement.html",
    "title": "Interface ISvgGlyphElement | SharpVectors Documentation",
    "keywords": "Interface ISvgGlyphElement The ISvgGlyphElement interface corresponds to the 'glyph' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgGlyphElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.html",
    "title": "Interface ISvgGlyphRefElement | SharpVectors Documentation",
    "keywords": "Interface ISvgGlyphRefElement The ISvgGlyphRefElement interface corresponds to the 'glyphRef' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgGlyphRefElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgStylable Properties Dx Corresponds to attribute 'dx' on the given element. Declaration float Dx { get; set; } Property Value Type Description Single Remarks It is read only attribute Dy Corresponds to attribute 'dy' on the given element. Declaration float Dy { get; set; } Property Value Type Description Single Remarks It is read only attribute Format The format of the given font. This corresponds to attribute 'format' on the given element. Declaration string Format { get; set; } Property Value Type Description String The format of the given font. Remarks It is read only attribute GlyphRef The glyph identifier, this corresponds to attribute 'glyphRef attribute' on the given element. Declaration string GlyphRef { get; set; } Property Value Type Description String The glyph identifier, the format of which is dependent on the Format of the given font. Remarks It is read only attribute X Corresponds to attribute 'x' on the given element. Declaration float X { get; set; } Property Value Type Description Single Remarks It is read only attribute Y Corresponds to attribute 'y' on the given element. Declaration float Y { get; set; } Property Value Type Description Single Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGradientElement.html",
    "title": "Interface ISvgGradientElement | SharpVectors Documentation",
    "keywords": "Interface ISvgGradientElement The SvgGradientElement interface is a base interface used by SvgLinearGradientElement and SvgRadialGradientElement. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgGradientElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Properties GradientTransform Declaration ISvgAnimatedTransformList GradientTransform { get; } Property Value Type Description ISvgAnimatedTransformList GradientUnits Declaration ISvgAnimatedEnumeration GradientUnits { get; } Property Value Type Description ISvgAnimatedEnumeration SpreadMethod Declaration ISvgAnimatedEnumeration SpreadMethod { get; } Property Value Type Description ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgHKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgHKernElement.html",
    "title": "Interface ISvgHKernElement | SharpVectors Documentation",
    "keywords": "Interface ISvgHKernElement The ISvgHKernElement interface corresponds to the 'hkern' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgHKernElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgIccColor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgIccColor.html",
    "title": "Interface ISvgIccColor | SharpVectors Documentation",
    "keywords": "Interface ISvgIccColor Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgIccColor Properties ColorProfile The name of the color profile, which is the first parameter of an ICC color specification. Inheriting class should throw exception on setting a read only value Declaration string ColorProfile { get; set; } Property Value Type Description String Colors The list of color values that define this ICC color. Each color value is an arbitrary floating point number. Declaration ISvgNumberList Colors { get; } Property Value Type Description ISvgNumberList"
  },
  "api/SharpVectors.Dom.Svg.ISvgImageElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgImageElement.html",
    "title": "Interface ISvgImageElement | SharpVectors Documentation",
    "keywords": "Interface ISvgImageElement The SvgRectElement interface corresponds to the 'image' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgImageElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgElementVisitorTarget Properties ColorProfile Declaration ISvgColorProfileElement ColorProfile { get; } Property Value Type Description ISvgColorProfileElement Height Corresponds to attribute height on the given 'rect' element. Declaration ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength PreserveAspectRatio Declaration ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio Width Corresponds to attribute width on the given 'rect' element. Declaration ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Corresponds to attribute x on the given 'rect' element. Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Corresponds to attribute y on the given 'rect' element. Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLangSpace.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLangSpace.html",
    "title": "Interface ISvgLangSpace | SharpVectors Documentation",
    "keywords": "Interface ISvgLangSpace Interface SvgLangSpace defines an interface which applies to all elements which have attributes xml:lang and xml:space. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgLangSpace Properties XmlLang Declaration string XmlLang { get; set; } Property Value Type Description String XmlSpace Declaration string XmlSpace { get; set; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Svg.ISvgLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLength.html",
    "title": "Interface ISvgLength | SharpVectors Documentation",
    "keywords": "Interface ISvgLength The SvgLength interface corresponds to the length basic data type. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgLength Properties UnitType Declaration SvgLengthType UnitType { get; } Property Value Type Description SvgLengthType Value Declaration double Value { get; set; } Property Value Type Description Double ValueAsString Declaration string ValueAsString { get; set; } Property Value Type Description String ValueInSpecifiedUnits Declaration double ValueInSpecifiedUnits { get; set; } Property Value Type Description Double Methods ConvertToSpecifiedUnits(SvgLengthType) Declaration void ConvertToSpecifiedUnits(SvgLengthType unitType) Parameters Type Name Description SvgLengthType unitType NewValueSpecifiedUnits(SvgLengthType, Double) Declaration void NewValueSpecifiedUnits(SvgLengthType unitType, double valueInSpecifiedUnits) Parameters Type Name Description SvgLengthType unitType Double valueInSpecifiedUnits"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.html",
    "title": "Interface ISvgLengthList | SharpVectors Documentation",
    "keywords": "Interface ISvgLengthList This interface defines a list of SvgLength objects. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgLengthList Properties NumberOfItems Declaration uint NumberOfItems { get; } Property Value Type Description UInt32 Methods AppendItem(ISvgLength) Declaration ISvgLength AppendItem(ISvgLength newItem) Parameters Type Name Description ISvgLength newItem Returns Type Description ISvgLength Clear() Declaration void Clear() FromString(String) Declaration void FromString(string listString) Parameters Type Name Description String listString GetItem(UInt32) Declaration ISvgLength GetItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description ISvgLength Initialize(ISvgLength) Declaration ISvgLength Initialize(ISvgLength newItem) Parameters Type Name Description ISvgLength newItem Returns Type Description ISvgLength InsertItemBefore(ISvgLength, UInt32) Declaration ISvgLength InsertItemBefore(ISvgLength newItem, uint index) Parameters Type Name Description ISvgLength newItem UInt32 index Returns Type Description ISvgLength RemoveItem(UInt32) Declaration ISvgLength RemoveItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description ISvgLength ReplaceItem(ISvgLength, UInt32) Declaration ISvgLength ReplaceItem(ISvgLength newItem, uint index) Parameters Type Name Description ISvgLength newItem UInt32 index Returns Type Description ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.html",
    "title": "Interface ISvgLinearGradientElement | SharpVectors Documentation",
    "keywords": "Interface ISvgLinearGradientElement The SvgLinearGradientElement interface corresponds to the 'linearGradient' element. Inherited Members ISvgGradientElement.GradientUnits ISvgGradientElement.GradientTransform ISvgGradientElement.SpreadMethod ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgLinearGradientElement : ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Properties X1 Declaration ISvgAnimatedLength X1 { get; } Property Value Type Description ISvgAnimatedLength X2 Declaration ISvgAnimatedLength X2 { get; } Property Value Type Description ISvgAnimatedLength Y1 Declaration ISvgAnimatedLength Y1 { get; } Property Value Type Description ISvgAnimatedLength Y2 Declaration ISvgAnimatedLength Y2 { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLineElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLineElement.html",
    "title": "Interface ISvgLineElement | SharpVectors Documentation",
    "keywords": "Interface ISvgLineElement The SvgLineElement interface corresponds to the 'line' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgLineElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Properties X1 Declaration ISvgAnimatedLength X1 { get; } Property Value Type Description ISvgAnimatedLength X2 Declaration ISvgAnimatedLength X2 { get; } Property Value Type Description ISvgAnimatedLength Y1 Declaration ISvgAnimatedLength Y1 { get; } Property Value Type Description ISvgAnimatedLength Y2 Declaration ISvgAnimatedLength Y2 { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.html",
    "title": "Interface ISvgList | SharpVectors Documentation",
    "keywords": "Interface ISvgList This interface defines a all methods used in a Svg*List interface. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgList Properties NumberOfItems Declaration ulong NumberOfItems { get; } Property Value Type Description UInt64 Methods AppendItem(Object) Declaration object AppendItem(object newItem) Parameters Type Name Description Object newItem Returns Type Description Object Clear() Declaration void Clear() GetItem(UInt64) Declaration object GetItem(ulong index) Parameters Type Name Description UInt64 index Returns Type Description Object Initialize(Object) Declaration object Initialize(object newItem) Parameters Type Name Description Object newItem Returns Type Description Object InsertItemBefore(Object, UInt64) Declaration object InsertItemBefore(object newItem, ulong index) Parameters Type Name Description Object newItem UInt64 index Returns Type Description Object RemoveItem(UInt64) Declaration object RemoveItem(ulong index) Parameters Type Name Description UInt64 index Returns Type Description Object ReplaceItem(Object, UInt64) Declaration object ReplaceItem(object newItem, ulong index) Parameters Type Name Description Object newItem UInt64 index Returns Type Description Object"
  },
  "api/SharpVectors.Dom.Svg.ISvgLocatable.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLocatable.html",
    "title": "Interface ISvgLocatable | SharpVectors Documentation",
    "keywords": "Interface ISvgLocatable Interface SvgLocatable is for all elements which either have a transform attribute or don't have a transform attribute but whose content can have a bounding box in current user space. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgLocatable Properties FarthestViewportElement Declaration ISvgElement FarthestViewportElement { get; } Property Value Type Description ISvgElement NearestViewportElement Declaration ISvgElement NearestViewportElement { get; } Property Value Type Description ISvgElement Methods GetBBox() Declaration ISvgRect GetBBox() Returns Type Description ISvgRect GetCTM() Declaration ISvgMatrix GetCTM() Returns Type Description ISvgMatrix GetScreenCTM() Declaration ISvgMatrix GetScreenCTM() Returns Type Description ISvgMatrix GetTransformToElement(ISvgElement) Declaration ISvgMatrix GetTransformToElement(ISvgElement element) Parameters Type Name Description ISvgElement element Returns Type Description ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarker.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarker.html",
    "title": "Interface ISvgMarker | SharpVectors Documentation",
    "keywords": "Interface ISvgMarker Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgMarker Properties Index Declaration int Index { get; } Property Value Type Description Int32 IsCurve Declaration bool IsCurve { get; } Property Value Type Description Boolean Position Declaration SvgPointF Position { get; } Property Value Type Description SvgPointF Segment Declaration ISvgPathSeg Segment { get; } Property Value Type Description ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.html",
    "title": "Interface ISvgMarkerElement | SharpVectors Documentation",
    "keywords": "Interface ISvgMarkerElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgMarkerElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgFitToViewBox Properties MarkerHeight Declaration ISvgAnimatedLength MarkerHeight { get; } Property Value Type Description ISvgAnimatedLength MarkerUnits Declaration ISvgAnimatedEnumeration MarkerUnits { get; } Property Value Type Description ISvgAnimatedEnumeration MarkerWidth Declaration ISvgAnimatedLength MarkerWidth { get; } Property Value Type Description ISvgAnimatedLength OrientAngle Declaration ISvgAnimatedAngle OrientAngle { get; } Property Value Type Description ISvgAnimatedAngle OrientType Declaration ISvgAnimatedEnumeration OrientType { get; } Property Value Type Description ISvgAnimatedEnumeration RefX Declaration ISvgAnimatedLength RefX { get; } Property Value Type Description ISvgAnimatedLength RefY Declaration ISvgAnimatedLength RefY { get; } Property Value Type Description ISvgAnimatedLength Methods SetOrientToAngle(ISvgAngle) Declaration void SetOrientToAngle(ISvgAngle angle) Parameters Type Name Description ISvgAngle angle SetOrientToAuto() Declaration void SetOrientToAuto()"
  },
  "api/SharpVectors.Dom.Svg.ISvgMaskElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMaskElement.html",
    "title": "Interface ISvgMaskElement | SharpVectors Documentation",
    "keywords": "Interface ISvgMaskElement Used by SvgMaskElement. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgMaskElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Properties Height Declaration ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength MaskContentUnits Declaration ISvgAnimatedEnumeration MaskContentUnits { get; } Property Value Type Description ISvgAnimatedEnumeration MaskUnits Declaration ISvgAnimatedEnumeration MaskUnits { get; } Property Value Type Description ISvgAnimatedEnumeration Width Declaration ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.html",
    "title": "Interface ISvgMatrix | SharpVectors Documentation",
    "keywords": "Interface ISvgMatrix Interface for matrix operations used within the SVG DOM Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgMatrix Properties A Declaration double A { get; set; } Property Value Type Description Double B Declaration double B { get; set; } Property Value Type Description Double C Declaration double C { get; set; } Property Value Type Description Double D Declaration double D { get; set; } Property Value Type Description Double E Declaration double E { get; set; } Property Value Type Description Double F Declaration double F { get; set; } Property Value Type Description Double IsIdentity Declaration bool IsIdentity { get; } Property Value Type Description Boolean Methods FlipX() Declaration ISvgMatrix FlipX() Returns Type Description ISvgMatrix FlipY() Declaration ISvgMatrix FlipY() Returns Type Description ISvgMatrix Inverse() Declaration ISvgMatrix Inverse() Returns Type Description ISvgMatrix Multiply(ISvgMatrix) Declaration ISvgMatrix Multiply(ISvgMatrix secondMatrix) Parameters Type Name Description ISvgMatrix secondMatrix Returns Type Description ISvgMatrix Rotate(Double) Declaration ISvgMatrix Rotate(double angle) Parameters Type Name Description Double angle Returns Type Description ISvgMatrix RotateFromVector(Double, Double) Declaration ISvgMatrix RotateFromVector(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgMatrix Scale(Double) Declaration ISvgMatrix Scale(double scaleFactor) Parameters Type Name Description Double scaleFactor Returns Type Description ISvgMatrix ScaleNonUniform(Double, Double) Declaration ISvgMatrix ScaleNonUniform(double scaleFactorX, double scaleFactorY) Parameters Type Name Description Double scaleFactorX Double scaleFactorY Returns Type Description ISvgMatrix SkewX(Double) Declaration ISvgMatrix SkewX(double angle) Parameters Type Name Description Double angle Returns Type Description ISvgMatrix SkewY(Double) Declaration ISvgMatrix SkewY(double angle) Parameters Type Name Description Double angle Returns Type Description ISvgMatrix Translate(Double, Double) Declaration ISvgMatrix Translate(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMetadataElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMetadataElement.html",
    "title": "Interface ISvgMetadataElement | SharpVectors Documentation",
    "keywords": "Interface ISvgMetadataElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgMetadataElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgMissingGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMissingGlyphElement.html",
    "title": "Interface ISvgMissingGlyphElement | SharpVectors Documentation",
    "keywords": "Interface ISvgMissingGlyphElement The ISvgMissingGlyphElement interface corresponds to the 'missing-glyph' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgMissingGlyphElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumber.html",
    "title": "Interface ISvgNumber | SharpVectors Documentation",
    "keywords": "Interface ISvgNumber Used for attributes of basic type 'number'. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgNumber Properties Value Declaration double Value { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.html",
    "title": "Interface ISvgNumberList | SharpVectors Documentation",
    "keywords": "Interface ISvgNumberList This interface defines a list of SvgNumber objects. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgNumberList Properties Count Declaration int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration ISvgNumber this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description ISvgNumber NumberOfItems Declaration uint NumberOfItems { get; } Property Value Type Description UInt32 Methods AppendItem(ISvgNumber) Declaration ISvgNumber AppendItem(ISvgNumber newItem) Parameters Type Name Description ISvgNumber newItem Returns Type Description ISvgNumber Clear() Declaration void Clear() FromString(String) Declaration void FromString(string listString) Parameters Type Name Description String listString GetItem(UInt32) Declaration ISvgNumber GetItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description ISvgNumber Initialize(ISvgNumber) Declaration ISvgNumber Initialize(ISvgNumber newItem) Parameters Type Name Description ISvgNumber newItem Returns Type Description ISvgNumber InsertItemBefore(ISvgNumber, UInt32) Declaration ISvgNumber InsertItemBefore(ISvgNumber newItem, uint index) Parameters Type Name Description ISvgNumber newItem UInt32 index Returns Type Description ISvgNumber RemoveItem(UInt32) Declaration ISvgNumber RemoveItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description ISvgNumber ReplaceItem(ISvgNumber, UInt32) Declaration ISvgNumber ReplaceItem(ISvgNumber newItem, uint index) Parameters Type Name Description ISvgNumber newItem UInt32 index Returns Type Description ISvgNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgPaint.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPaint.html",
    "title": "Interface ISvgPaint | SharpVectors Documentation",
    "keywords": "Interface ISvgPaint The SvgPaint interface corresponds to basic type paint and represents the values of properties 'fill' and 'stroke'. Inherited Members ISvgColor.ColorType ISvgColor.RgbColor ISvgColor.IccColor ISvgColor.SetRgbColor(String) ISvgColor.SetRgbColorIccColor(String, String) ISvgColor.SetColor(SvgColorType, String, String) ICssValue.CssText ICssValue.CssValueType ICssValue.IsAbsolute Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPaint : ISvgColor, ICssValue Properties PaintType Declaration SvgPaintType PaintType { get; } Property Value Type Description SvgPaintType Uri Declaration string Uri { get; } Property Value Type Description String Methods SetPaint(SvgPaintType, String, String, String) Declaration void SetPaint(SvgPaintType paintType, string uri, string rgbColor, string iccColor) Parameters Type Name Description SvgPaintType paintType String uri String rgbColor String iccColor SetUri(String) Declaration void SetUri(string uri) Parameters Type Name Description String uri"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.html",
    "title": "Interface ISvgPathElement | SharpVectors Documentation",
    "keywords": "Interface ISvgPathElement The SvgPathElement interface corresponds to the 'path' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgAnimatedPathData.PathSegList ISvgAnimatedPathData.NormalizedPathSegList ISvgAnimatedPathData.AnimatedPathSegList ISvgAnimatedPathData.AnimatedNormalizedPathSegList IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPathData, IEventTarget, ISvgElementVisitorTarget Properties PathLength Declaration ISvgAnimatedNumber PathLength { get; } Property Value Type Description ISvgAnimatedNumber Methods CreateSvgPathSegArcAbs(Double, Double, Double, Double, Double, Boolean, Boolean) Declaration ISvgPathSegArcAbs CreateSvgPathSegArcAbs(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters Type Name Description Double x Double y Double r1 Double r2 Double angle Boolean largeArcFlag Boolean sweepFlag Returns Type Description ISvgPathSegArcAbs CreateSvgPathSegArcRel(Double, Double, Double, Double, Double, Boolean, Boolean) Declaration ISvgPathSegArcRel CreateSvgPathSegArcRel(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters Type Name Description Double x Double y Double r1 Double r2 Double angle Boolean largeArcFlag Boolean sweepFlag Returns Type Description ISvgPathSegArcRel CreateSvgPathSegClosePath() Declaration ISvgPathSegClosePath CreateSvgPathSegClosePath() Returns Type Description ISvgPathSegClosePath CreateSvgPathSegCurvetoCubicAbs(Double, Double, Double, Double, Double, Double) Declaration ISvgPathSegCurvetoCubicAbs CreateSvgPathSegCurvetoCubicAbs(double x, double y, double x1, double y1, double x2, double y2) Parameters Type Name Description Double x Double y Double x1 Double y1 Double x2 Double y2 Returns Type Description ISvgPathSegCurvetoCubicAbs CreateSvgPathSegCurvetoCubicRel(Double, Double, Double, Double, Double, Double) Declaration ISvgPathSegCurvetoCubicRel CreateSvgPathSegCurvetoCubicRel(double x, double y, double x1, double y1, double x2, double y2) Parameters Type Name Description Double x Double y Double x1 Double y1 Double x2 Double y2 Returns Type Description ISvgPathSegCurvetoCubicRel CreateSvgPathSegCurvetoCubicSmoothAbs(Double, Double, Double, Double) Declaration ISvgPathSegCurvetoCubicSmoothAbs CreateSvgPathSegCurvetoCubicSmoothAbs(double x, double y, double x2, double y2) Parameters Type Name Description Double x Double y Double x2 Double y2 Returns Type Description ISvgPathSegCurvetoCubicSmoothAbs CreateSvgPathSegCurvetoCubicSmoothRel(Double, Double, Double, Double) Declaration ISvgPathSegCurvetoCubicSmoothRel CreateSvgPathSegCurvetoCubicSmoothRel(double x, double y, double x2, double y2) Parameters Type Name Description Double x Double y Double x2 Double y2 Returns Type Description ISvgPathSegCurvetoCubicSmoothRel CreateSvgPathSegCurvetoQuadraticAbs(Double, Double, Double, Double) Declaration ISvgPathSegCurvetoQuadraticAbs CreateSvgPathSegCurvetoQuadraticAbs(double x, double y, double x1, double y1) Parameters Type Name Description Double x Double y Double x1 Double y1 Returns Type Description ISvgPathSegCurvetoQuadraticAbs CreateSvgPathSegCurvetoQuadraticRel(Double, Double, Double, Double) Declaration ISvgPathSegCurvetoQuadraticRel CreateSvgPathSegCurvetoQuadraticRel(double x, double y, double x1, double y1) Parameters Type Name Description Double x Double y Double x1 Double y1 Returns Type Description ISvgPathSegCurvetoQuadraticRel CreateSvgPathSegCurvetoQuadraticSmoothAbs(Double, Double) Declaration ISvgPathSegCurvetoQuadraticSmoothAbs CreateSvgPathSegCurvetoQuadraticSmoothAbs(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegCurvetoQuadraticSmoothAbs CreateSvgPathSegCurvetoQuadraticSmoothRel(Double, Double) Declaration ISvgPathSegCurvetoQuadraticSmoothRel CreateSvgPathSegCurvetoQuadraticSmoothRel(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegCurvetoQuadraticSmoothRel CreateSvgPathSegLinetoAbs(Double, Double) Declaration ISvgPathSegLinetoAbs CreateSvgPathSegLinetoAbs(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegLinetoAbs CreateSvgPathSegLinetoHorizontalAbs(Double) Declaration ISvgPathSegLinetoHorizontalAbs CreateSvgPathSegLinetoHorizontalAbs(double x) Parameters Type Name Description Double x Returns Type Description ISvgPathSegLinetoHorizontalAbs CreateSvgPathSegLinetoHorizontalRel(Double) Declaration ISvgPathSegLinetoHorizontalRel CreateSvgPathSegLinetoHorizontalRel(double x) Parameters Type Name Description Double x Returns Type Description ISvgPathSegLinetoHorizontalRel CreateSvgPathSegLinetoRel(Double, Double) Declaration ISvgPathSegLinetoRel CreateSvgPathSegLinetoRel(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegLinetoRel CreateSvgPathSegLinetoVerticalAbs(Double) Declaration ISvgPathSegLinetoVerticalAbs CreateSvgPathSegLinetoVerticalAbs(double y) Parameters Type Name Description Double y Returns Type Description ISvgPathSegLinetoVerticalAbs CreateSvgPathSegLinetoVerticalRel(Double) Declaration ISvgPathSegLinetoVerticalRel CreateSvgPathSegLinetoVerticalRel(double y) Parameters Type Name Description Double y Returns Type Description ISvgPathSegLinetoVerticalRel CreateSvgPathSegMovetoAbs(Double, Double) Declaration ISvgPathSegMovetoAbs CreateSvgPathSegMovetoAbs(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegMovetoAbs CreateSvgPathSegMovetoRel(Double, Double) Declaration ISvgPathSegMovetoRel CreateSvgPathSegMovetoRel(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegMovetoRel GetPathSegAtLength(Double) Declaration int GetPathSegAtLength(double distance) Parameters Type Name Description Double distance Returns Type Description Int32 GetPointAtLength(Double) Declaration ISvgPoint GetPointAtLength(double distance) Parameters Type Name Description Double distance Returns Type Description ISvgPoint GetTotalLength() Declaration double GetTotalLength() Returns Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.html",
    "title": "Interface ISvgPathHandler | SharpVectors Documentation",
    "keywords": "Interface ISvgPathHandler This interface must be implemented and then registred as the handler of a PathParser instance in order to be notified of parsing events. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public interface ISvgPathHandler Methods ArcAbs(Single, Single, Single, Boolean, Boolean, Single, Single) Invoked when an absolute elliptical arc command has been parsed. Command : A Declaration void ArcAbs(float rx, float ry, float xAxisRotation, bool largeArcFlag, bool sweepFlag, float x, float y) Parameters Type Name Description Single rx the X axis radius for the ellipse Single ry the Y axis radius for the ellipse Single xAxisRotation the rotation angle in degrees for the ellipse's X-axis relative to the X-axis Boolean largeArcFlag the value of the large-arc-flag Boolean sweepFlag the value of the sweep-flag Single x the absolute x coordinate for the end point Single y the absolute y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path ArcRel(Single, Single, Single, Boolean, Boolean, Single, Single) Invoked when a relative elliptical arc command has been parsed. Command : a Declaration void ArcRel(float rx, float ry, float xAxisRotation, bool largeArcFlag, bool sweepFlag, float x, float y) Parameters Type Name Description Single rx the X axis radius for the ellipse Single ry the Y axis radius for the ellipse Single xAxisRotation the rotation angle in degrees for the ellipse's X-axis relative to the X-axis Boolean largeArcFlag the value of the large-arc-flag Boolean sweepFlag the value of the sweep-flag Single x the relative x coordinate for the end point Single y the relative y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path ClosePath() Invoked when a closepath has been parsed. Command : z | Z Declaration void ClosePath() Exceptions Type Condition FormatException if an error occured while processing the path CurvetoCubicAbs(Single, Single, Single, Single, Single, Single) Invoked when an absolute cubic bezier curve command has been parsed. Command : C Declaration void CurvetoCubicAbs(float x1, float y1, float x2, float y2, float x, float y) Parameters Type Name Description Single x1 the absolute x coordinate for the first control point Single y1 the absolute y coordinate for the first control point Single x2 the absolute x coordinate for the second control point Single y2 the absolute y coordinate for the second control point Single x the absolute x coordinate for the end point Single y the absolute y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path CurvetoCubicRel(Single, Single, Single, Single, Single, Single) Invoked when a relative cubic bezier curve command has been parsed. Command : c Declaration void CurvetoCubicRel(float x1, float y1, float x2, float y2, float x, float y) Parameters Type Name Description Single x1 the relative x coordinate for the first control point Single y1 the relative y coordinate for the first control point Single x2 the relative x coordinate for the second control point Single y2 the relative y coordinate for the second control point Single x the relative x coordinate for the end point Single y the relative y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path CurvetoCubicSmoothAbs(Single, Single, Single, Single) Invoked when an absolute smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : S Declaration void CurvetoCubicSmoothAbs(float x2, float y2, float x, float y) Parameters Type Name Description Single x2 the absolute x coordinate for the second control point Single y2 the absolute y coordinate for the second control point Single x the absolute x coordinate for the end point Single y the absolute y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path CurvetoCubicSmoothRel(Single, Single, Single, Single) Invoked when a relative smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : s Declaration void CurvetoCubicSmoothRel(float x2, float y2, float x, float y) Parameters Type Name Description Single x2 the relative x coordinate for the second control point Single y2 the relative y coordinate for the second control point Single x the relative x coordinate for the end point Single y the relative y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path CurvetoQuadraticAbs(Single, Single, Single, Single) Invoked when an absolute quadratic bezier curve command has been parsed. Command : Q Declaration void CurvetoQuadraticAbs(float x1, float y1, float x, float y) Parameters Type Name Description Single x1 the absolute x coordinate for the control point Single y1 the absolute y coordinate for the control point Single x the absolute x coordinate for the end point Single y the absolute x coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path CurvetoQuadraticRel(Single, Single, Single, Single) Invoked when a relative quadratic bezier curve command has been parsed. Command : q Declaration void CurvetoQuadraticRel(float x1, float y1, float x, float y) Parameters Type Name Description Single x1 the relative x coordinate for the control point Single y1 the relative y coordinate for the control point Single x the relative x coordinate for the end point Single y the relative x coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path CurvetoQuadraticSmoothAbs(Single, Single) Invoked when an absolute smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : T Declaration void CurvetoQuadraticSmoothAbs(float x, float y) Parameters Type Name Description Single x the absolute x coordinate for the end point Single y the absolute y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path CurvetoQuadraticSmoothRel(Single, Single) Invoked when a relative smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : t Declaration void CurvetoQuadraticSmoothRel(float x, float y) Parameters Type Name Description Single x the relative x coordinate for the end point Single y the relative y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path EndPath() Invoked when the path ends. Declaration void EndPath() Exceptions Type Condition FormatException if an error occured while processing the path LinetoAbs(Single, Single) Invoked when an absolute line command has been parsed. Command : L Declaration void LinetoAbs(float x, float y) Parameters Type Name Description Single x the absolute x coordinate for the end point Single y the absolute y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path LinetoHorizontalAbs(Single) Invoked when an horizontal absolute line command has been parsed. Command : H Declaration void LinetoHorizontalAbs(float x) Parameters Type Name Description Single x the absolute X coordinate of the end point Exceptions Type Condition FormatException if an error occured while processing the path LinetoHorizontalRel(Single) Invoked when an horizontal relative line command has been parsed. Command : h Declaration void LinetoHorizontalRel(float x) Parameters Type Name Description Single x the relative X coordinate of the end point Exceptions Type Condition FormatException if an error occured while processing the path LinetoRel(Single, Single) Invoked when a relative line command has been parsed. Command : l Declaration void LinetoRel(float x, float y) Parameters Type Name Description Single x the relative x coordinates for the end point Single y the relative y coordinates for the end point Exceptions Type Condition FormatException if an error occured while processing the path LinetoVerticalAbs(Single) Invoked when a vertical absolute line command has been parsed. Command : V Declaration void LinetoVerticalAbs(float y) Parameters Type Name Description Single y the absolute Y coordinate of the end point Exceptions Type Condition FormatException if an error occured while processing the path LinetoVerticalRel(Single) Invoked when a vertical relative line command has been parsed. Command : v Declaration void LinetoVerticalRel(float y) Parameters Type Name Description Single y the relative Y coordinate of the end point Exceptions Type Condition FormatException if an error occured while processing the path MovetoAbs(Single, Single) Invoked when an absolute moveto command has been parsed. Command : M Declaration void MovetoAbs(float x, float y) Parameters Type Name Description Single x the absolute x coordinate for the end point Single y the absolute y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path MovetoRel(Single, Single) Invoked when a relative moveto command has been parsed. Command : m Declaration void MovetoRel(float x, float y) Parameters Type Name Description Single x the relative x coordinate for the end point Single y the relative y coordinate for the end point Exceptions Type Condition FormatException if an error occured while processing the path StartPath() Invoked when the path starts. Declaration void StartPath() Exceptions Type Condition FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.html",
    "title": "Interface ISvgPathSeg | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSeg The SvgPathSeg interface is a base interface that corresponds to a single command within a path data specification. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSeg Properties AbsXY Declaration SvgPointF AbsXY { get; } Property Value Type Description SvgPointF EndAngle Declaration double EndAngle { get; } Property Value Type Description Double IsCurve Declaration bool IsCurve { get; } Property Value Type Description Boolean Limits Declaration SvgPointF[] Limits { get; set; } Property Value Type Description SvgPointF [] NextSeg Declaration ISvgPathSeg NextSeg { get; } Property Value Type Description ISvgPathSeg PathSegType Declaration SvgPathSegType PathSegType { get; } Property Value Type Description SvgPathSegType PathSegTypeAsLetter Declaration string PathSegTypeAsLetter { get; } Property Value Type Description String PathText Declaration string PathText { get; } Property Value Type Description String PathType Declaration SvgPathType PathType { get; } Property Value Type Description SvgPathType PreviousSeg Declaration ISvgPathSeg PreviousSeg { get; } Property Value Type Description ISvgPathSeg StartAngle Declaration double StartAngle { get; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.html",
    "title": "Interface ISvgPathSegArcAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegArcAbs The SvgPathSegArcAbs interface corresponds to an \"absolute arcto\" (A) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegArcAbs : ISvgPathSeg Properties Angle Declaration double Angle { get; set; } Property Value Type Description Double LargeArcFlag Declaration bool LargeArcFlag { get; set; } Property Value Type Description Boolean R1 Declaration double R1 { get; set; } Property Value Type Description Double R2 Declaration double R2 { get; set; } Property Value Type Description Double SweepFlag Declaration bool SweepFlag { get; set; } Property Value Type Description Boolean X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.html",
    "title": "Interface ISvgPathSegArcRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegArcRel The SvgPathSegArcRel interface corresponds to a \"relative arcto\" (a) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegArcRel : ISvgPathSeg Properties Angle Declaration double Angle { get; set; } Property Value Type Description Double LargeArcFlag Declaration bool LargeArcFlag { get; set; } Property Value Type Description Boolean R1 Declaration double R1 { get; set; } Property Value Type Description Double R2 Declaration double R2 { get; set; } Property Value Type Description Double SweepFlag Declaration bool SweepFlag { get; set; } Property Value Type Description Boolean X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegClosePath.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegClosePath.html",
    "title": "Interface ISvgPathSegClosePath | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegClosePath The SvgPathSegClosePath interface corresponds to a \"closepath\" (z) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegClosePath : ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.html",
    "title": "Interface ISvgPathSegCurvetoCubicAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoCubicAbs The SvgPathSegCurvetoCubicAbs interface corresponds to an \"absolute cubic Bezier curveto\" (C) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegCurvetoCubicAbs : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double X1 Declaration double X1 { get; set; } Property Value Type Description Double X2 Declaration double X2 { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double Y1 Declaration double Y1 { get; set; } Property Value Type Description Double Y2 Declaration double Y2 { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.html",
    "title": "Interface ISvgPathSegCurvetoCubicRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoCubicRel The SvgPathSegCurvetoCubicRel interface corresponds to a \"relative cubic Bezier curveto\" (c) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegCurvetoCubicRel : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double X1 Declaration double X1 { get; set; } Property Value Type Description Double X2 Declaration double X2 { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double Y1 Declaration double Y1 { get; set; } Property Value Type Description Double Y2 Declaration double Y2 { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.html",
    "title": "Interface ISvgPathSegCurvetoCubicSmoothAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoCubicSmoothAbs The SvgPathSegCurvetoCubicSmoothAbs interface corresponds to an \"absolute smooth cubic curveto\" (S) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegCurvetoCubicSmoothAbs : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double X2 Declaration double X2 { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double Y2 Declaration double Y2 { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.html",
    "title": "Interface ISvgPathSegCurvetoCubicSmoothRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoCubicSmoothRel The SvgPathSegCurvetoCubicSmoothRel interface corresponds to a \"relative smooth cubic curveto\" (s) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegCurvetoCubicSmoothRel : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double X2 Declaration double X2 { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double Y2 Declaration double Y2 { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.html",
    "title": "Interface ISvgPathSegCurvetoQuadraticAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoQuadraticAbs The SvgPathSegCurvetoQuadraticAbs interface corresponds to an \"absolute quadratic Bezier curveto\" (Q) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegCurvetoQuadraticAbs : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double X1 Declaration double X1 { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double Y1 Declaration double Y1 { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.html",
    "title": "Interface ISvgPathSegCurvetoQuadraticRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoQuadraticRel The SvgPathSegCurvetoCubicRel interface corresponds to a \"relative cubic Bezier curveto\" (c) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegCurvetoQuadraticRel : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double X1 Declaration double X1 { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double Y1 Declaration double Y1 { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothAbs.html",
    "title": "Interface ISvgPathSegCurvetoQuadraticSmoothAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoQuadraticSmoothAbs The SvgPathSegCurvetoQuadraticSmoothAbs interface corresponds to an \"absolute smooth quadratic curveto\" (T) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegCurvetoQuadraticSmoothAbs : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothRel.html",
    "title": "Interface ISvgPathSegCurvetoQuadraticSmoothRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoQuadraticSmoothRel The SvgPathSegCurvetoQuadraticSmoothRel interface corresponds to a \"relative smooth quadratic curveto\" (t) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegCurvetoQuadraticSmoothRel : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoAbs.html",
    "title": "Interface ISvgPathSegLinetoAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoAbs The SvgPathSegLinetoAbs interface corresponds to an \"absolute lineto\" (L) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegLinetoAbs : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalAbs.html",
    "title": "Interface ISvgPathSegLinetoHorizontalAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoHorizontalAbs The SvgPathSegLinetoHorizontalAbs interface corresponds to an \"absolute horizontal lineto\" (H) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegLinetoHorizontalAbs : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalRel.html",
    "title": "Interface ISvgPathSegLinetoHorizontalRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoHorizontalRel The SvgPathSegLinetoHorizontalRel interface corresponds to a \"relative horizontal lineto\" (h) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegLinetoHorizontalRel : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoRel.html",
    "title": "Interface ISvgPathSegLinetoRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoRel The SvgPathSegLinetoRel interface corresponds to an \"relative lineto\" (l) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegLinetoRel : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalAbs.html",
    "title": "Interface ISvgPathSegLinetoVerticalAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoVerticalAbs The SvgPathSegLinetoVerticalAbs interface corresponds to an \"absolute vertical lineto\" (V) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegLinetoVerticalAbs : ISvgPathSeg Properties Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalRel.html",
    "title": "Interface ISvgPathSegLinetoVerticalRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoVerticalRel The SvgPathSegLinetoVerticalRel interface corresponds to a \"relative vertical lineto\" (v) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegLinetoVerticalRel : ISvgPathSeg Properties Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegList.html",
    "title": "Interface ISvgPathSegList | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegList This interface defines a list of SvgPathSeg objects. Inherited Members IList<ISvgPathSeg>.IndexOf(ISvgPathSeg) IList<ISvgPathSeg>.Insert(Int32, ISvgPathSeg) IList<ISvgPathSeg>.RemoveAt(Int32) IList<ISvgPathSeg>.Item[Int32] ICollection<ISvgPathSeg>.Add(ISvgPathSeg) ICollection<ISvgPathSeg>.Clear() ICollection<ISvgPathSeg>.Contains(ISvgPathSeg) ICollection<ISvgPathSeg>.CopyTo(ISvgPathSeg[], Int32) ICollection<ISvgPathSeg>.Remove(ISvgPathSeg) ICollection<ISvgPathSeg>.Count ICollection<ISvgPathSeg>.IsReadOnly IEnumerable<ISvgPathSeg>.GetEnumerator() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegList : IList<ISvgPathSeg>, ICollection<ISvgPathSeg>, IEnumerable<ISvgPathSeg>, IEnumerable Properties NumberOfItems Declaration int NumberOfItems { get; } Property Value Type Description Int32 Methods AppendItem(ISvgPathSeg) Declaration ISvgPathSeg AppendItem(ISvgPathSeg newItem) Parameters Type Name Description ISvgPathSeg newItem Returns Type Description ISvgPathSeg GetItem(Int32) Declaration ISvgPathSeg GetItem(int index) Parameters Type Name Description Int32 index Returns Type Description ISvgPathSeg Initialize(ISvgPathSeg) Declaration ISvgPathSeg Initialize(ISvgPathSeg newItem) Parameters Type Name Description ISvgPathSeg newItem Returns Type Description ISvgPathSeg InsertItemBefore(ISvgPathSeg, Int32) Declaration ISvgPathSeg InsertItemBefore(ISvgPathSeg newItem, int index) Parameters Type Name Description ISvgPathSeg newItem Int32 index Returns Type Description ISvgPathSeg RemoveItem(Int32) Declaration ISvgPathSeg RemoveItem(int index) Parameters Type Name Description Int32 index Returns Type Description ISvgPathSeg ReplaceItem(ISvgPathSeg, Int32) Declaration ISvgPathSeg ReplaceItem(ISvgPathSeg newItem, int index) Parameters Type Name Description ISvgPathSeg newItem Int32 index Returns Type Description ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoAbs.html",
    "title": "Interface ISvgPathSegMovetoAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegMovetoAbs The SvgPathSegMovetoAbs interface corresponds to an \"absolute moveto\" (M) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegMovetoAbs : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoRel.html",
    "title": "Interface ISvgPathSegMovetoRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegMovetoRel The SvgPathSegMovetoRel interface corresponds to an \"relative moveto\" (m) path data command. Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPathSegMovetoRel : ISvgPathSeg Properties X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.html",
    "title": "Interface ISvgPatternElement | SharpVectors Documentation",
    "keywords": "Interface ISvgPatternElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPatternElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgFitToViewBox Properties Height Declaration ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength PatternBounds Declaration ISvgRect PatternBounds { get; set; } Property Value Type Description ISvgRect PatternContentUnits Declaration ISvgAnimatedEnumeration PatternContentUnits { get; } Property Value Type Description ISvgAnimatedEnumeration PatternTransform Declaration ISvgAnimatedTransformList PatternTransform { get; } Property Value Type Description ISvgAnimatedTransformList PatternUnits Declaration ISvgAnimatedEnumeration PatternUnits { get; } Property Value Type Description ISvgAnimatedEnumeration Width Declaration ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgPoint.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPoint.html",
    "title": "Interface ISvgPoint | SharpVectors Documentation",
    "keywords": "Interface ISvgPoint Many of the SVG DOM interfaces refer to objects of class SvgPoint. An SvgPoint is an (x,y) coordinate pair. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPoint Remarks When used in matrix operations, an SvgPoint is treated as a vector of the form: [x] [y] [1] Properties X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double Methods MatrixTransform(ISvgMatrix) Declaration ISvgPoint MatrixTransform(ISvgMatrix matrix) Parameters Type Name Description ISvgMatrix matrix Returns Type Description ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.html",
    "title": "Interface ISvgPointList | SharpVectors Documentation",
    "keywords": "Interface ISvgPointList This interface defines a list of SvgPoint objects. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPointList Properties NumberOfItems Declaration uint NumberOfItems { get; } Property Value Type Description UInt32 Methods AppendItem(ISvgPoint) Declaration ISvgPoint AppendItem(ISvgPoint newItem) Parameters Type Name Description ISvgPoint newItem Returns Type Description ISvgPoint Clear() Declaration void Clear() FromString(String, Boolean) Declaration void FromString(string listString, bool clearOnError) Parameters Type Name Description String listString Boolean clearOnError GetItem(UInt32) Declaration ISvgPoint GetItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description ISvgPoint Initialize(ISvgPoint) Declaration ISvgPoint Initialize(ISvgPoint newItem) Parameters Type Name Description ISvgPoint newItem Returns Type Description ISvgPoint InsertItemBefore(ISvgPoint, UInt32) Declaration ISvgPoint InsertItemBefore(ISvgPoint newItem, uint index) Parameters Type Name Description ISvgPoint newItem UInt32 index Returns Type Description ISvgPoint RemoveItem(UInt32) Declaration ISvgPoint RemoveItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description ISvgPoint ReplaceItem(ISvgPoint, UInt32) Declaration ISvgPoint ReplaceItem(ISvgPoint newItem, uint index) Parameters Type Name Description ISvgPoint newItem UInt32 index Returns Type Description ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointsHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointsHandler.html",
    "title": "Interface ISvgPointsHandler | SharpVectors Documentation",
    "keywords": "Interface ISvgPointsHandler This interface must be implemented and then registred as the handler of a PointsParser instance in order to be notified of parsing events. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public interface ISvgPointsHandler Methods EndPoints() Invoked when the points attribute ends. Declaration void EndPoints() Exceptions Type Condition FormatException if an error occured while processing the points Point(Single, Single) Invoked when a point has been parsed. Declaration void Point(float x, float y) Parameters Type Name Description Single x the x coordinate of the point Single y the y coordinate of the point Exceptions Type Condition FormatException if an error occured while processing the points StartPoints() Invoked when the points attribute starts. Declaration void StartPoints() Exceptions Type Condition FormatException if an error occured while processing the points"
  },
  "api/SharpVectors.Dom.Svg.ISvgPolygonElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPolygonElement.html",
    "title": "Interface ISvgPolygonElement | SharpVectors Documentation",
    "keywords": "Interface ISvgPolygonElement The SvgPolygonElement interface corresponds to the 'polygon' element Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgAnimatedPoints.Points ISvgAnimatedPoints.AnimatedPoints IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPolygonElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPoints, IEventTarget, ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.ISvgPolylineElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPolylineElement.html",
    "title": "Interface ISvgPolylineElement | SharpVectors Documentation",
    "keywords": "Interface ISvgPolylineElement The SvgPolylineElement interface corresponds to the 'polyline' element Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgAnimatedPoints.Points ISvgAnimatedPoints.AnimatedPoints IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPolylineElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPoints, IEventTarget, ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.html",
    "title": "Interface ISvgPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Interface ISvgPreserveAspectRatio The SvgPreserveAspectRatio interface corresponds to the preserveAspectRatio attribute, which is available for some of Svg's elements. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgPreserveAspectRatio Properties Align The type of the alignment value as specified by one of the constants specified above. Declaration SvgPreserveAspectRatioType Align { get; set; } Property Value Type Description SvgPreserveAspectRatioType IsDefaultAlign Gets a value indicating if this a default aspect ratio or it is defined by the target element. Declaration bool IsDefaultAlign { get; } Property Value Type Description Boolean This is true if it is the default aspect ratio; otherwise it is false . MeetOrSlice The type of the meet-or-slice value as specified by one of the constants specified above. Declaration SvgMeetOrSlice MeetOrSlice { get; set; } Property Value Type Description SvgMeetOrSlice"
  },
  "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.html",
    "title": "Interface ISvgRadialGradientElement | SharpVectors Documentation",
    "keywords": "Interface ISvgRadialGradientElement The ISvgRadialGradientElement interface corresponds to the 'radialGradient' element. Inherited Members ISvgGradientElement.GradientUnits ISvgGradientElement.GradientTransform ISvgGradientElement.SpreadMethod ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgRadialGradientElement : ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Properties Cx Declaration ISvgAnimatedLength Cx { get; } Property Value Type Description ISvgAnimatedLength Cy Declaration ISvgAnimatedLength Cy { get; } Property Value Type Description ISvgAnimatedLength Fx Declaration ISvgAnimatedLength Fx { get; } Property Value Type Description ISvgAnimatedLength Fy Declaration ISvgAnimatedLength Fy { get; } Property Value Type Description ISvgAnimatedLength R Declaration ISvgAnimatedLength R { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRect.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRect.html",
    "title": "Interface ISvgRect | SharpVectors Documentation",
    "keywords": "Interface ISvgRect Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative. Inherited Members IEquatable<ISvgRect>.Equals(ISvgRect) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgRect : IEquatable<ISvgRect> Properties Height Declaration double Height { get; set; } Property Value Type Description Double Width Declaration double Width { get; set; } Property Value Type Description Double X Declaration double X { get; set; } Property Value Type Description Double Y Declaration double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Dom.Svg.ISvgRectElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRectElement.html",
    "title": "Interface ISvgRectElement | SharpVectors Documentation",
    "keywords": "Interface ISvgRectElement The SvgRectElement interface corresponds to the 'rect' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgRectElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Properties Height Corresponds to attribute height on the given 'rect' element. Declaration ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength Rx Corresponds to attribute rx on the given 'rect' element. Declaration ISvgAnimatedLength Rx { get; } Property Value Type Description ISvgAnimatedLength Ry Corresponds to attribute ry on the given 'rect' element. Declaration ISvgAnimatedLength Ry { get; } Property Value Type Description ISvgAnimatedLength Width Corresponds to attribute width on the given 'rect' element. Declaration ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Corresponds to attribute x on the given 'rect' element. Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Corresponds to attribute y on the given 'rect' element. Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRenderer.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRenderer.html",
    "title": "Interface ISvgRenderer | SharpVectors Documentation",
    "keywords": "Interface ISvgRenderer Defines the interface required by a renderer to render the SVG DOM. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgRenderer Remarks The ISvgRenderer is used to render a ISvgElement object onto a bitmap. During the rendering process, it will also generate RenderingNode objects for each XmlElement object in the DOM tree to assist in the rendering. Properties InvalidRect Controls the rendering of the document. Declaration SvgRectF InvalidRect { get; set; } Property Value Type Description SvgRectF OnRender Event Delegate to report when the SVG renderer does it's work. Declaration RenderEvent OnRender { get; set; } Property Value Type Description RenderEvent Window The window that is being rendered to. Declaration ISvgWindow Window { get; set; } Property Value Type Description ISvgWindow Methods GetRenderedBounds(ISvgElement, Single) Declaration ISvgRect GetRenderedBounds(ISvgElement element, float margin) Parameters Type Name Description ISvgElement element Single margin Returns Type Description ISvgRect InvalidateRect(SvgRectF) Allows you to establish or add to the existing invalidation rectangle Declaration void InvalidateRect(SvgRectF rect) Parameters Type Name Description SvgRectF rect Render(ISvgDocument) Renders an SvgDocument object onto a bitmap and returns that bitmap. Declaration void Render(ISvgDocument node) Parameters Type Name Description ISvgDocument node The SvgDocument object to be rendered. Render(ISvgElement) Renders an SvgElement object onto a bitmap and returns that bitmap. Declaration void Render(ISvgElement node) Parameters Type Name Description ISvgElement node The SvgElement object to be rendered."
  },
  "api/SharpVectors.Dom.Svg.ISvgScriptElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgScriptElement.html",
    "title": "Interface ISvgScriptElement | SharpVectors Documentation",
    "keywords": "Interface ISvgScriptElement The ISvgScriptElement interface corresponds to the 'script' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgScriptElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired Remarks A 'script' element is equivalent to the 'script' element in HTML and thus is the place for scripts. Any functions defined within any 'script' element have a 'global' scope across the entire current document. Properties CrossOrigin Gets or sets a value corresponding to the attribute 'crossorigin' on the given 'script' element. Declaration string CrossOrigin { get; set; } Property Value Type Description String An enumeration specifying the CORS (Cross-Origin Resource Sharing) setting attributes. Possible values are anonymous , use-credentials and empty string. Remarks This is introduced in SVG 2 . See Also https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes Type Gets or sets a value corresponding to the attribute 'type' on the given 'script' element. Declaration string Type { get; set; } Property Value Type Description String A string specifying the script type."
  },
  "api/SharpVectors.Dom.Svg.ISvgSolidColorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSolidColorElement.html",
    "title": "Interface ISvgSolidColorElement | SharpVectors Documentation",
    "keywords": "Interface ISvgSolidColorElement An SVG object represents an 'solidcolor' element in the DOM. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgSolidColorElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.ISvgStopElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStopElement.html",
    "title": "Interface ISvgStopElement | SharpVectors Documentation",
    "keywords": "Interface ISvgStopElement The SvgStopElement interface corresponds to the 'stop' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgStopElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Properties Offset Declaration ISvgAnimatedNumber Offset { get; } Property Value Type Description ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.html",
    "title": "Interface ISvgStringList | SharpVectors Documentation",
    "keywords": "Interface ISvgStringList This interface defines a list of string objects. Inherited Members IEnumerable<String>.GetEnumerator() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgStringList : IEnumerable<string>, IEnumerable Properties NumberOfItems Declaration uint NumberOfItems { get; } Property Value Type Description UInt32 Methods AppendItem(String) Declaration string AppendItem(string newItem) Parameters Type Name Description String newItem Returns Type Description String Clear() Declaration void Clear() FromString(String) Declaration void FromString(string listString) Parameters Type Name Description String listString GetItem(UInt32) Declaration string GetItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description String Initialize(String) Declaration string Initialize(string newItem) Parameters Type Name Description String newItem Returns Type Description String InsertItemBefore(String, UInt32) Declaration string InsertItemBefore(string newItem, uint index) Parameters Type Name Description String newItem UInt32 index Returns Type Description String RemoveItem(UInt32) Declaration string RemoveItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description String ReplaceItem(String, UInt32) Declaration string ReplaceItem(string newItem, uint index) Parameters Type Name Description String newItem UInt32 index Returns Type Description String"
  },
  "api/SharpVectors.Dom.Svg.ISvgStylable.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStylable.html",
    "title": "Interface ISvgStylable | SharpVectors Documentation",
    "keywords": "Interface ISvgStylable Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgStylable Properties ClassName Declaration ISvgAnimatedString ClassName { get; } Property Value Type Description ISvgAnimatedString Style Declaration ICssStyleDeclaration Style { get; } Property Value Type Description ICssStyleDeclaration Methods GetPresentationAttribute(String) Declaration ICssValue GetPresentationAttribute(string name) Parameters Type Name Description String name Returns Type Description ICssValue"
  },
  "api/SharpVectors.Dom.Svg.ISvgStyleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStyleElement.html",
    "title": "Interface ISvgStyleElement | SharpVectors Documentation",
    "keywords": "Interface ISvgStyleElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgStyleElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace Properties Media Declaration string Media { get; set; } Property Value Type Description String Title Declaration string Title { get; set; } Property Value Type Description String Type Declaration string Type { get; set; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.html",
    "title": "Interface ISvgSvgElement | SharpVectors Documentation",
    "keywords": "Interface ISvgSvgElement A key interface definition is the ISvgSvgElement interface, which is the interface that corresponds to the 'svg' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio ISvgZoomAndPan.ZoomAndPan IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgSvgElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgLocatable, ISvgFitToViewBox, ISvgZoomAndPan, IEventTarget, ISvgElementVisitorTarget Remarks This interface contains various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices. ISvgSvgElement extends ViewCSS and DocumentCSS to provide access to the computed values of properties and the override style sheet as described in DOM2. Properties ContentScriptType Corresponds to attribute contentScriptType on the given 'svg' element. Declaration string ContentScriptType { get; set; } Property Value Type Description String ContentStyleType Corresponds to attribute contentStyleType on the given 'svg' element. Declaration string ContentStyleType { get; set; } Property Value Type Description String CurrentScale This attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations, as described under Magnification and panning . Declaration float CurrentScale { get; set; } Property Value Type Description Single Remarks DOM attributes currentScale and currentTranslate are equivalent to the 2x3 matrix [a b c d e f] = [currentScale 0 0 currentScale currentTranslate.x currentTranslate.y]. If \"magnification\" is enabled (i.e., zoomAndPan=\"magnify\"), then the effect is as if an extra transformation were placed at the outermost level on the SVG document fragment (i.e., outside the outermost 'svg' element). CurrentTime The current time in seconds relative to the start time for the current SVG document fragment. Declaration float CurrentTime { get; set; } Property Value Type Description Single CurrentTranslate The corresponding translation factor that takes into account user \"magnification\". Declaration ISvgPoint CurrentTranslate { get; } Property Value Type Description ISvgPoint CurrentView The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. Declaration ISvgViewSpec CurrentView { get; } Property Value Type Description ISvgViewSpec Remarks The meaning depends on the situation: If the initial view was a \"standard\" view, then: the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly the values for transform and viewTarget within currentView will be null If the initial view was a link into a 'view' element, then: the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will correspond to the corresponding attributes for the given 'view' element the values for transform and viewTarget within currentView will be null If the initial view was a link into another element (i.e., other than a 'view'), then: the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly for the closest ancestor 'svg' element the values for transform within currentView will be null the viewTarget within currentView will represent the target of the link If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: the values for viewBox, preserveAspectRatio, zoomAndPan, transform and viewTarget within currentView will correspond to the values from the SVG view specification fragment identifier The object itself and its contents are both readonly. Height Corresponds to attribute height on the given 'svg' element. Declaration ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength PixelUnitToMillimeterX Size of a pixel unit (as defined by CSS2) along the x-axis of the viewport, which represents a unit somewhere in the range of 70dpi to 120dpi, and, on systems that support this, might actually match the characteristics of the target medium. Declaration float PixelUnitToMillimeterX { get; } Property Value Type Description Single Remarks On systems where it is impossible to know the size of a pixel, a suitable default pixel size is provided. PixelUnitToMillimeterY Corresponding size of a pixel unit along the y-axis of the viewport. Declaration float PixelUnitToMillimeterY { get; } Property Value Type Description Single ScreenPixelToMillimeterX User interface (UI) events in DOM Level 2 indicate the screen positions at which the given UI event occurred. When the user agent actually knows the physical size of a \"screen unit\", this attribute will express that information; otherwise, user agents will provide a suitable default value such as .28mm. Declaration float ScreenPixelToMillimeterX { get; } Property Value Type Description Single ScreenPixelToMillimeterY Corresponding size of a screen pixel along the y-axis of the viewport. Declaration float ScreenPixelToMillimeterY { get; } Property Value Type Description Single UseCurrentView The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the \"standard\" view (i.e., based on attributes on the 'svg' element such as fitBoxToViewport) or to a \"custom\" view (i.e., a hyperlink into a particular 'view' or other element - see Linking into SVG content: URI fragments and SVG views ). If the initial view is the \"standard\" view, then this attribute is false. If the initial view is a \"custom\" view, then this attribute is true. Declaration bool UseCurrentView { get; set; } Property Value Type Description Boolean Viewport The position and size of the viewport (implicit or explicit) that corresponds to this 'svg' element. Declaration ISvgRect Viewport { get; } Property Value Type Description ISvgRect Remarks When the user agent is actually rendering the content, then the position and size values represent the actual values when rendering. The position and size values are unitless values in the coordinate system of the parent element. If no parent element exists (i.e., 'svg' element represents the root of the document tree), if this SVG document is embedded as part of another document (e.g., via the HTML 'object' element), then the position and size are unitless values in the coordinate system of the parent document. (If the parent uses CSS or XSL layout, then unitless values represent pixel units for the current CSS or XSL viewport, as described in the CSS2 specification.) If the parent element does not have a coordinate system, then the user agent should provide reasonable default values for this attribute. The object itself and its contents are both readonly. Width Corresponds to attribute width on the given 'svg' element. Declaration ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Corresponds to attribute x on the given 'svg' element. Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Corresponds to attribute y on the given 'svg' element. Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength Methods AnimationsPaused() Returns true if this SVG document fragment is in a paused state. Declaration bool AnimationsPaused() Returns Type Description Boolean Boolean indicating whether this SVG document fragment is in a paused state. CheckEnclosure(ISvgElement, ISvgRect) Returns true if the rendered content of the given element is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. Declaration bool CheckEnclosure(ISvgElement element, ISvgRect rect) Parameters Type Name Description ISvgElement element The element on which to perform the given test. ISvgRect rect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. Returns Type Description Boolean True or false, depending on whether the given element is enclosed by the supplied rectangle. CheckIntersection(ISvgElement, ISvgRect) Returns true if the rendered content of the given element intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. Declaration bool CheckIntersection(ISvgElement element, ISvgRect rect) Parameters Type Name Description ISvgElement element The element on which to perform the given test. ISvgRect rect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. Returns Type Description Boolean True or false, depending on whether the given element intersects the supplied rectangle. CreateSvgAngle() Creates an SVGAngle object outside of any document trees. The object is initialized to the value 0 degrees (unitless). Declaration ISvgAngle CreateSvgAngle() Returns Type Description ISvgAngle An SVGAngle object. CreateSvgLength() Creates an SVGLength object outside of any document trees. The object is initialized to the value of 0 user units. Declaration ISvgLength CreateSvgLength() Returns Type Description ISvgLength An SVGLength object. CreateSvgMatrix() Creates an SVGMatrix object outside of any document trees. The object is initialized to the identity matrix. Declaration ISvgMatrix CreateSvgMatrix() Returns Type Description ISvgMatrix An SVGMatrix object. CreateSvgNumber() Creates an SVGNumber object outside of any document trees. The object is initialized to a value of zero. Declaration ISvgNumber CreateSvgNumber() Returns Type Description ISvgNumber An SVGNumber object. CreateSvgPoint() Creates an SVGPoint object outside of any document trees. The object is initialized to the point (0,0) in the user coordinate system. Declaration ISvgPoint CreateSvgPoint() Returns Type Description ISvgPoint An SVGPoint object. CreateSvgRect() Creates an SVGRect object outside of any document trees. The object is initialized such that all values are set to 0 user units. Declaration ISvgRect CreateSvgRect() Returns Type Description ISvgRect An SVGRect object. CreateSvgTransform() Creates an SVGTransform object outside of any document trees. The object is initialized to an identity matrix transform (SVG_TRANSFORM_MATRIX). Declaration ISvgTransform CreateSvgTransform() Returns Type Description ISvgTransform An SVGTransform object. CreateSvgTransformFromMatrix(ISvgMatrix) Creates an SVGTransform object outside of any document trees. The object is initialized to the given matrix transform (i.e., SVG_TRANSFORM_MATRIX). Declaration ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix matrix) Parameters Type Name Description ISvgMatrix matrix The transform matrix. Returns Type Description ISvgTransform An SVGTransform object. DeselectAll() Unselects any selected objects, including any selections of text strings and type-in bars. Declaration void DeselectAll() ForceRedraw() In rendering environments supporting interactivity, forces the user agent to immediately redraw all regions of the viewport that require updating. Declaration void ForceRedraw() GetElementById(String) Searches this SVG document fragment (i.e., the search is restricted to a subset of the document tree) for an Element whose id is given by elementId. Declaration XmlElement GetElementById(string elementId) Parameters Type Name Description String elementId The unique id value for an element. Returns Type Description XmlElement The matching element. Remarks If an Element is found, that Element is returned. If no such element exists, returns null. Behavior is not defined if more than one element has this id. GetEnclosureList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. Declaration XmlNodeList GetEnclosureList(ISvgRect rect, ISvgElement referenceElement) Parameters Type Name Description ISvgRect rect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. ISvgElement referenceElement If not null, then only return elements whose drawing order has them below the given reference element. Returns Type Description XmlNodeList A list of Elements whose content is enclosed by the supplied rectangle. GetIntersectionList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. Declaration XmlNodeList GetIntersectionList(ISvgRect rect, ISvgElement referenceElement) Parameters Type Name Description ISvgRect rect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. ISvgElement referenceElement If not null, then only return elements whose drawing order has them below the given reference element. Returns Type Description XmlNodeList A list of Elements whose content intersects the supplied rectangle. PauseAnimations() Suspends (i.e., pauses) all currently running animations that are defined within the SVG document fragment corresponding to this 'svg' element, causing the animation clock corresponding to this document fragment to stand still until it is unpaused. Declaration void PauseAnimations() SuspendRedraw(Int32) Takes a time-out value which indicates that redraw shall not occur until certain conditions are met. Declaration int SuspendRedraw(int max_wait_milliseconds) Parameters Type Name Description Int32 max_wait_milliseconds The amount of time in milliseconds to hold off before redrawing the device. Values greater than 60 seconds will be truncated down to 60 seconds. Returns Type Description Int32 A number which acts as a unique identifier for the given suspendRedraw() call. This value must be passed as the parameter to the corresponding unsuspendRedraw() method call. Remarks Takes a time-out value which indicates that redraw shall not occur until: (a) the corresponding unsuspendRedraw( suspend_handle_id) call has been made, (b) an unsuspendRedrawAll() call has been made, or (c) its timer has timed out. In environments that do not support interactivity (e.g., print media), then redraw shall not be suspended. suspend_handle_id = suspendRedraw( max_wait_milliseconds) and unsuspendRedraw(suspend_handle_id) must be packaged as balanced pairs. When you want to suspend redraw actions as a collection of SVG DOM changes occur, then precede the changes to the SVG DOM with a method call similar to suspend_handle_id = suspendRedraw( max_wait_milliseconds) and follow the changes with a method call similar to unsuspendRedraw(suspend_handle_id). Note that multiple suspendRedraw calls can be used at once and that each such method call is treated independently of the other suspendRedraw method calls. UnpauseAnimations() Unsuspends (i.e., unpauses) currently running animations that are defined within the SVG document fragment, causing the animation clock to continue from the time at which it was suspended. Declaration void UnpauseAnimations() UnsuspendRedraw(Int32) Cancels a specified suspendRedraw() by providing a unique suspend_handle_id. Declaration void UnsuspendRedraw(int suspend_handle_id) Parameters Type Name Description Int32 suspend_handle_id A number which acts as a unique identifier for the desired suspendRedraw() call. The number supplied must be a value returned from a previous call to suspendRedraw() UnsuspendRedrawAll() Cancels all currently active suspendRedraw() method calls. been cancelled. Declaration void UnsuspendRedrawAll() Remarks This method is most useful at the very end of a set of SVG DOM calls to ensure that all pending suspendRedraw() method calls have been cancelled."
  },
  "api/SharpVectors.Dom.Svg.ISvgSwitchElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSwitchElement.html",
    "title": "Interface ISvgSwitchElement | SharpVectors Documentation",
    "keywords": "Interface ISvgSwitchElement The SvgSwitchElement interface corresponds to the 'switch' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgSwitchElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.ISvgSymbolElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSymbolElement.html",
    "title": "Interface ISvgSymbolElement | SharpVectors Documentation",
    "keywords": "Interface ISvgSymbolElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgSymbolElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable, ISvgExternalResourcesRequired, ISvgFitToViewBox, IEventTarget, ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.ISvgTests.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTests.html",
    "title": "Interface ISvgTests | SharpVectors Documentation",
    "keywords": "Interface ISvgTests Interface SvgTests defines an interface which applies to all elements which have attributes requiredFeatures, requiredExtensions and systemLanguage. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTests Properties RequiredExtensions Declaration ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods HasExtension(String) Declaration bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.html",
    "title": "Interface ISvgTextContentElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTextContentElement The ISvgTextContentElement interface is inherited by various text-related interfaces, such as ISvgTextElement , ISvgTSpanElement , ISvgTRefElement , ISvgAltGlyphElement and ISvgTextPathElement . Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTextContentElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Properties LengthAdjust Declaration ISvgAnimatedEnumeration LengthAdjust { get; } Property Value Type Description ISvgAnimatedEnumeration TextLength Declaration ISvgAnimatedLength TextLength { get; } Property Value Type Description ISvgAnimatedLength Methods GetCharNumAtPosition(ISvgPoint) Declaration long GetCharNumAtPosition(ISvgPoint point) Parameters Type Name Description ISvgPoint point Returns Type Description Int64 GetComputedTextLength() Declaration float GetComputedTextLength() Returns Type Description Single GetEndPositionOfChar(Int64) Declaration ISvgPoint GetEndPositionOfChar(long charnum) Parameters Type Name Description Int64 charnum Returns Type Description ISvgPoint GetExtentOfChar(Int64) Declaration ISvgRect GetExtentOfChar(long charnum) Parameters Type Name Description Int64 charnum Returns Type Description ISvgRect GetNumberOfChars() Declaration long GetNumberOfChars() Returns Type Description Int64 GetRotationOfChar(Int64) Declaration float GetRotationOfChar(long charnum) Parameters Type Name Description Int64 charnum Returns Type Description Single GetStartPositionOfChar(Int64) Declaration ISvgPoint GetStartPositionOfChar(long charnum) Parameters Type Name Description Int64 charnum Returns Type Description ISvgPoint GetSubStringLength(Int64, Int64) Declaration float GetSubStringLength(long charnum, long nchars) Parameters Type Name Description Int64 charnum Int64 nchars Returns Type Description Single SelectSubString(Int64, Int64) Declaration void SelectSubString(long charnum, long nchars) Parameters Type Name Description Int64 charnum Int64 nchars"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextElement.html",
    "title": "Interface ISvgTextElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTextElement The SvgTextElement interface corresponds to the 'text' element. Inherited Members ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgTextPositioningElement.X ISvgTextPositioningElement.Y ISvgTextPositioningElement.Dx ISvgTextPositioningElement.Dy ISvgTextPositioningElement.Rotate ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(Int64, Int64) ISvgTextContentElement.GetStartPositionOfChar(Int64) ISvgTextContentElement.GetEndPositionOfChar(Int64) ISvgTextContentElement.GetExtentOfChar(Int64) ISvgTextContentElement.GetRotationOfChar(Int64) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(Int64, Int64) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTextElement : ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPathElement.html",
    "title": "Interface ISvgTextPathElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTextPathElement The SvgTextPathElement interface corresponds to the 'textPath' element. Inherited Members ISvgUriReference.Href ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(Int64, Int64) ISvgTextContentElement.GetStartPositionOfChar(Int64) ISvgTextContentElement.GetEndPositionOfChar(Int64) ISvgTextContentElement.GetExtentOfChar(Int64) ISvgTextContentElement.GetRotationOfChar(Int64) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(Int64, Int64) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTextPathElement : ISvgUriReference, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Properties Method Declaration ISvgAnimatedEnumeration Method { get; } Property Value Type Description ISvgAnimatedEnumeration Spacing Declaration ISvgAnimatedEnumeration Spacing { get; } Property Value Type Description ISvgAnimatedEnumeration StartOffset Declaration ISvgAnimatedLength StartOffset { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.html",
    "title": "Interface ISvgTextPositioningElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTextPositioningElement The SvgTextPositioningElement interface is inherited by text-related interfaces: SvgTextElement, SvgTSpanElement, SvgTRefElement and SvgAltGlyphElement. Inherited Members ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(Int64, Int64) ISvgTextContentElement.GetStartPositionOfChar(Int64) ISvgTextContentElement.GetEndPositionOfChar(Int64) ISvgTextContentElement.GetExtentOfChar(Int64) ISvgTextContentElement.GetRotationOfChar(Int64) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(Int64, Int64) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTextPositioningElement : ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Properties Dx Declaration ISvgAnimatedLengthList Dx { get; } Property Value Type Description ISvgAnimatedLengthList Dy Declaration ISvgAnimatedLengthList Dy { get; } Property Value Type Description ISvgAnimatedLengthList Rotate Declaration ISvgAnimatedNumberList Rotate { get; } Property Value Type Description ISvgAnimatedNumberList X Declaration ISvgAnimatedLengthList X { get; } Property Value Type Description ISvgAnimatedLengthList Y Declaration ISvgAnimatedLengthList Y { get; } Property Value Type Description ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTitleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTitleElement.html",
    "title": "Interface ISvgTitleElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTitleElement The SvgTitleElement interface corresponds to the 'title' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTitleElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.html",
    "title": "Interface ISvgTransform | SharpVectors Documentation",
    "keywords": "Interface ISvgTransform SvgTransform is the interface for one of the component transformations within a SvgTransformList; thus, a SvgTransform object corresponds to a single component (e.g., \"scale(..)\" or \"matrix(...)\") within a transform attribute specification. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTransform Properties Angle Declaration double Angle { get; } Property Value Type Description Double InputValues Declaration double[] InputValues { get; } Property Value Type Description Double [] Matrix Declaration ISvgMatrix Matrix { get; } Property Value Type Description ISvgMatrix TransformType Declaration SvgTransformType TransformType { get; } Property Value Type Description SvgTransformType Type Declaration short Type { get; } Property Value Type Description Int16 Methods SetMatrix(ISvgMatrix) Declaration void SetMatrix(ISvgMatrix matrix) Parameters Type Name Description ISvgMatrix matrix SetRotate(Double, Double, Double) Declaration void SetRotate(double angle, double cx, double cy) Parameters Type Name Description Double angle Double cx Double cy SetScale(Double, Double) Declaration void SetScale(double sx, double sy) Parameters Type Name Description Double sx Double sy SetSkewX(Double) Declaration void SetSkewX(double angle) Parameters Type Name Description Double angle SetSkewY(Double) Declaration void SetSkewY(double angle) Parameters Type Name Description Double angle SetTranslate(Double, Double) Declaration void SetTranslate(double tx, double ty) Parameters Type Name Description Double tx Double ty"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformable.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformable.html",
    "title": "Interface ISvgTransformable | SharpVectors Documentation",
    "keywords": "Interface ISvgTransformable Interface SvgTransformable contains properties and methods that apply to all elements which have attribute transform. Inherited Members ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTransformable : ISvgLocatable Properties Transform Declaration ISvgAnimatedTransformList Transform { get; } Property Value Type Description ISvgAnimatedTransformList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.html",
    "title": "Interface ISvgTransformList | SharpVectors Documentation",
    "keywords": "Interface ISvgTransformList This interface defines a list of SvgTransform objects. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTransformList Properties NumberOfItems Declaration uint NumberOfItems { get; } Property Value Type Description UInt32 Methods AppendItem(ISvgTransform) Declaration ISvgTransform AppendItem(ISvgTransform newItem) Parameters Type Name Description ISvgTransform newItem Returns Type Description ISvgTransform Clear() Declaration void Clear() Consolidate() Declaration ISvgTransform Consolidate() Returns Type Description ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix) Declaration ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix matrix) Parameters Type Name Description ISvgMatrix matrix Returns Type Description ISvgTransform GetItem(UInt32) Declaration ISvgTransform GetItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description ISvgTransform Initialize(ISvgTransform) Declaration ISvgTransform Initialize(ISvgTransform newItem) Parameters Type Name Description ISvgTransform newItem Returns Type Description ISvgTransform InsertItemBefore(ISvgTransform, UInt32) Declaration ISvgTransform InsertItemBefore(ISvgTransform newItem, uint index) Parameters Type Name Description ISvgTransform newItem UInt32 index Returns Type Description ISvgTransform RemoveItem(UInt32) Declaration ISvgTransform RemoveItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description ISvgTransform ReplaceItem(ISvgTransform, UInt32) Declaration ISvgTransform ReplaceItem(ISvgTransform newItem, uint index) Parameters Type Name Description ISvgTransform newItem UInt32 index Returns Type Description ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.ISvgTRefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTRefElement.html",
    "title": "Interface ISvgTRefElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTRefElement The SvgTRefElement interface corresponds to the 'tref' element. Inherited Members ISvgTextPositioningElement.X ISvgTextPositioningElement.Y ISvgTextPositioningElement.Dx ISvgTextPositioningElement.Dy ISvgTextPositioningElement.Rotate ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(Int64, Int64) ISvgTextContentElement.GetStartPositionOfChar(Int64) ISvgTextContentElement.GetEndPositionOfChar(Int64) ISvgTextContentElement.GetExtentOfChar(Int64) ISvgTextContentElement.GetRotationOfChar(Int64) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(Int64, Int64) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgUriReference.Href Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTRefElement : ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgUriReference"
  },
  "api/SharpVectors.Dom.Svg.ISvgTSpanElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTSpanElement.html",
    "title": "Interface ISvgTSpanElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTSpanElement The SvgTSpanElement interface corresponds to the 'tspan' element. Inherited Members ISvgTextPositioningElement.X ISvgTextPositioningElement.Y ISvgTextPositioningElement.Dx ISvgTextPositioningElement.Dy ISvgTextPositioningElement.Rotate ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(Int64, Int64) ISvgTextContentElement.GetStartPositionOfChar(Int64) ISvgTextContentElement.GetEndPositionOfChar(Int64) ISvgTextContentElement.GetExtentOfChar(Int64) ISvgTextContentElement.GetRotationOfChar(Int64) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(Int64, Int64) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgTSpanElement : ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.ISvgUriReference.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUriReference.html",
    "title": "Interface ISvgUriReference | SharpVectors Documentation",
    "keywords": "Interface ISvgUriReference Interface SvgUriReference defines an interface which applies to all elements which have the collection of XLink attributes, such as xlink:href, which define a URI reference. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgUriReference Properties Href Declaration ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgUseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUseElement.html",
    "title": "Interface ISvgUseElement | SharpVectors Documentation",
    "keywords": "Interface ISvgUseElement The SvgUseElement interface corresponds to the 'use' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(String) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(String) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(String, EventListener, Boolean) IEventTarget.RemoveEventListener(String, EventListener, Boolean) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) IEventTarget.WillTriggerNs(String, String) IEventTarget.HasEventListenerNs(String, String) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgUseElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgStylable, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Properties AnimatedInstanceRoot Declaration ISvgElementInstance AnimatedInstanceRoot { get; } Property Value Type Description ISvgElementInstance Height Declaration ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength InstanceRoot Declaration ISvgElementInstance InstanceRoot { get; } Property Value Type Description ISvgElementInstance Width Declaration ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewElement.html",
    "title": "Interface ISvgViewElement | SharpVectors Documentation",
    "keywords": "Interface ISvgViewElement Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio ISvgZoomAndPan.ZoomAndPan Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgViewElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgExternalResourcesRequired, ISvgFitToViewBox, ISvgZoomAndPan Properties ViewTarget Declaration ISvgStringList ViewTarget { get; } Property Value Type Description ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewSpec.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewSpec.html",
    "title": "Interface ISvgViewSpec | SharpVectors Documentation",
    "keywords": "Interface ISvgViewSpec The interface corresponds to an Svg View Specification. Inherited Members ISvgZoomAndPan.ZoomAndPan ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgViewSpec : ISvgZoomAndPan, ISvgFitToViewBox Properties PreserveAspectRatioString Declaration string PreserveAspectRatioString { get; } Property Value Type Description String Transform Declaration ISvgTransformList Transform { get; } Property Value Type Description ISvgTransformList TransformString Declaration string TransformString { get; } Property Value Type Description String ViewBoxString Declaration string ViewBoxString { get; } Property Value Type Description String ViewTarget Declaration ISvgElement ViewTarget { get; } Property Value Type Description ISvgElement ViewTargetString Declaration string ViewTargetString { get; } Property Value Type Description String"
  },
  "api/SharpVectors.Dom.Svg.ISvgVKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgVKernElement.html",
    "title": "Interface ISvgVKernElement | SharpVectors Documentation",
    "keywords": "Interface ISvgVKernElement The ISvgVKernElement interface corresponds to the 'vkern' element. Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(String) IXmlElement.GetAttribute(String, String) IXmlElement.SetAttribute(String, String) IXmlElement.SetAttribute(String, String, String) IXmlElement.RemoveAttribute(String) IXmlElement.RemoveAttribute(String, String) IXmlElement.GetAttributeNode(String) IXmlElement.GetAttributeNode(String, String) IXmlElement.GetElementsByTagName(String) IXmlElement.GetElementsByTagName(String, String) IXmlElement.SetAttributeNode(String, String) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(String, String) IXmlElement.HasAttribute(String) IXmlElement.HasAttribute(String, String) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(Boolean) IXmlNode.Normalize() IXmlNode.Supports(String, String) Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgVKernElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.html",
    "title": "Interface ISvgWindow | SharpVectors Documentation",
    "keywords": "Interface ISvgWindow Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgWindow Properties BaseUrls Declaration ISet<string> BaseUrls { get; set; } Property Value Type Description ISet < String > DefaultStyleSheet Declaration IStyleSheet DefaultStyleSheet { get; } Property Value Type Description IStyleSheet Document Declaration ISvgDocument Document { get; } Property Value Type Description ISvgDocument InnerHeight Declaration long InnerHeight { get; } Property Value Type Description Int64 InnerWidth Declaration long InnerWidth { get; } Property Value Type Description Int64 Renderer Declaration ISvgRenderer Renderer { get; } Property Value Type Description ISvgRenderer Source Declaration string Source { get; set; } Property Value Type Description String WorkingDir Declaration DirectoryInfo WorkingDir { get; } Property Value Type Description DirectoryInfo Methods Alert(String) Declaration void Alert(string message) Parameters Type Name Description String message ParseXML(String, XmlDocument) Declaration XmlDocumentFragment ParseXML(string source, XmlDocument document) Parameters Type Name Description String source XmlDocument document Returns Type Description XmlDocumentFragment PrintNode(XmlNode) Declaration string PrintNode(XmlNode node) Parameters Type Name Description XmlNode node Returns Type Description String"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomAndPan.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomAndPan.html",
    "title": "Interface ISvgZoomAndPan | SharpVectors Documentation",
    "keywords": "Interface ISvgZoomAndPan The SvgZoomAndPan interface defines attribute \"zoomAndPan\" and associated constants. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgZoomAndPan Properties ZoomAndPan Declaration SvgZoomAndPanType ZoomAndPan { get; set; } Property Value Type Description SvgZoomAndPanType"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomEvent.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomEvent.html",
    "title": "Interface ISvgZoomEvent | SharpVectors Documentation",
    "keywords": "Interface ISvgZoomEvent Inherited Members IUiEvent.View IUiEvent.Detail IUiEvent.InitUiEvent(String, Boolean, Boolean, IAbstractView, Int64) IUiEvent.InitUiEventNs(String, String, Boolean, Boolean, IAbstractView, Int64) IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(String, Boolean, Boolean) IEvent.InitEventNs(String, String, Boolean, Boolean) IEvent.StopImmediatePropagation() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public interface ISvgZoomEvent : IUiEvent, IEvent Properties NewScale Declaration double NewScale { get; } Property Value Type Description Double NewTranslate Declaration ISvgPoint NewTranslate { get; } Property Value Type Description ISvgPoint PreviousScale Declaration double PreviousScale { get; } Property Value Type Description Double PreviousTranslate Declaration ISvgPoint PreviousTranslate { get; } Property Value Type Description ISvgPoint ZoomRectScreen Declaration ISvgRect ZoomRectScreen { get; } Property Value Type Description ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.RenderEvent.html": {
    "href": "api/SharpVectors.Dom.Svg.RenderEvent.html",
    "title": "Delegate RenderEvent | SharpVectors Documentation",
    "keywords": "Delegate RenderEvent Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public delegate void RenderEvent(SvgRectF updatedRect); Parameters Type Name Description SvgRectF updatedRect"
  },
  "api/SharpVectors.Dom.Svg.SvgAElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAElement.html",
    "title": "Class SvgAElement | SharpVectors Documentation",
    "keywords": "Class SvgAElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgAElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget Inherited Members SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(String) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(Object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(Int64, Int64) SvgTextContentElement.GetStartPositionOfChar(Int64) SvgTextContentElement.GetEndPositionOfChar(Int64) SvgTextContentElement.GetExtentOfChar(Int64) SvgTextContentElement.GetRotationOfChar(Int64) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(Int64, Int64) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAElement : SvgTextContentElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Constructors SvgAElement(String, String, String, SvgDocument) Declaration public SvgAElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. Overrides SvgTextContentElement.RenderingHint Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.html",
    "title": "Class SvgAltGlyphDefElement | SharpVectors Documentation",
    "keywords": "Class SvgAltGlyphDefElement This implements the ISvgAltGlyphDefElement interface corresponds to the 'altGlyphDef' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAltGlyphDefElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgAltGlyphDefElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAltGlyphDefElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgAltGlyphDefElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Remarks Content model: Either one or more 'glyphRef' elements, orIn the simplest case, an 'altGlyphDef' contains one or more 'glyphRef' elements. Each 'glyphRef' element references a single glyph within a particular font. one or more 'altGlyphItem' elements.In the more complex case, an 'altGlyphDef' contains one or more 'altGlyphItem' elements. Each 'altGlyphItem' represents a candidate set of substitute glyphs. Each 'altGlyphItem' contains one or more 'glyphRef' elements. Each 'glyphRef' element references a single glyph within a particular font. Constructors SvgAltGlyphDefElement(String, String, String, SvgDocument) Initializes a new instance of the SvgAltGlyphDefElement class with the specified parameters. Declaration public SvgAltGlyphDefElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties GlyphRef Gets the first child element with the name 'glyphRef'. Declaration public SvgGlyphRefElement GlyphRef { get; } Property Value Type Description SvgGlyphRefElement The first SvgGlyphRefElement if matched. It returns a null if there is no match. IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable IsSimple Gets a value indicating whether this is a simple content model. Declaration public bool IsSimple { get; } Property Value Type Description Boolean Returns true if this element defines a simple content model that contains only 'glyphRef' elements, otherwise returns false . Methods GetGlyphItem(String) Gets the ISvgAltGlyphItemElement with the specified name or ID. Declaration public ISvgAltGlyphItemElement GetGlyphItem(string name) Parameters Type Name Description String name The name or ID of the required ISvgAltGlyphItemElement . Returns Type Description ISvgAltGlyphItemElement A ISvgAltGlyphItemElement specifying the 'altGlyphItem' element of the specifiied name or ID. This will always return null , if the IsSimple is true . GetGlyphRef(String) Gets the ISvgGlyphRefElement with the specified name or ID. Declaration public ISvgGlyphRefElement GetGlyphRef(string name) Parameters Type Name Description String name The name or ID of the required ISvgGlyphRefElement . Returns Type Description ISvgGlyphRefElement A ISvgGlyphRefElement specifying the 'glyphRef' element of the specifiied name or ID. This will always return null , if the IsSimple is false . Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgAltGlyphDefElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.html",
    "title": "Class SvgAltGlyphElement | SharpVectors Documentation",
    "keywords": "Class SvgAltGlyphElement The ISvgAltGlyphElement interface corresponds to the 'altGlyph' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgAltGlyphElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgAltGlyphElement ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgUriReference Inherited Members SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(String) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(Object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(Int64, Int64) SvgTextContentElement.GetStartPositionOfChar(Int64) SvgTextContentElement.GetEndPositionOfChar(Int64) SvgTextContentElement.GetExtentOfChar(Int64) SvgTextContentElement.GetRotationOfChar(Int64) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(Int64, Int64) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAltGlyphElement : SvgTextPositioningElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgAltGlyphElement, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgUriReference Constructors SvgAltGlyphElement(String, String, String, SvgDocument) Declaration public SvgAltGlyphElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Format Corresponds to attribute 'format' on the given element. Declaration public string Format { get; set; } Property Value Type Description String Remarks It is read only attribute GlyphRef Corresponds to attribute 'glyphRef attribute' on the given element. Declaration public string GlyphRef { get; set; } Property Value Type Description String Remarks It is read only attribute Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable ReferencedElement Declaration public XmlElement ReferencedElement { get; } Property Value Type Description XmlElement Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgAltGlyphElement ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgUriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.html",
    "title": "Class SvgAltGlyphItemElement | SharpVectors Documentation",
    "keywords": "Class SvgAltGlyphItemElement This implements the ISvgAltGlyphItemElement interface corresponds to the 'altGlyphItem' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAltGlyphItemElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgAltGlyphItemElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAltGlyphItemElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgAltGlyphItemElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Remarks *Content model:* One or more 'glyphRef' elements. The 'altGlyphItem' element defines a candidate set of possible glyph substitutions. The first 'altGlyphItem' element whose referenced glyphs are all available is chosen. Its glyphs are rendered instead of the character(s) that are inside of the referencing 'altGlyph' element. Constructors SvgAltGlyphItemElement(String, String, String, SvgDocument) Initializes a new instance of the SvgAltGlyphItemElement class with the specified parameters. Declaration public SvgAltGlyphItemElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Methods GetGlyphRef(String) Gets the ISvgGlyphRefElement with the specified name or ID. Declaration public ISvgGlyphRefElement GetGlyphRef(string name) Parameters Type Name Description String name The name or ID of the required ISvgGlyphRefElement . Returns Type Description ISvgGlyphRefElement A ISvgGlyphRefElement specifying the 'glyphRef' element of the specifiied name or ID. Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgAltGlyphItemElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngle.html",
    "title": "Class SvgAngle | SharpVectors Documentation",
    "keywords": "Class SvgAngle Summary description for SvgAngle. Inheritance Object SvgAngle Implements ISvgAngle Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAngle : ISvgAngle Constructors SvgAngle(String, String, Boolean) Creates a SvgAngle value Declaration public SvgAngle(string baseVal, string defaultValue, bool readOnly) Parameters Type Name Description String baseVal String defaultValue The default value for the angle. Boolean readOnly Specifies if the value should be read-only Properties UnitType The type of the value as specified by one of the constants specified above Declaration public SvgAngleType UnitType { get; } Property Value Type Description SvgAngleType Value The angle value as a floating point value, in degrees. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting. Declaration public double Value { get; set; } Property Value Type Description Double Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute. ValueAsString The angle value as a string value, in the units expressed by unitType. Setting this attribute will cause value and valueInSpecifiedUnits to be updated automatically to reflect this setting. Declaration public string ValueAsString { get; set; } Property Value Type Description String Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute. ValueInSpecifiedUnits The angle value as a floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting. Declaration public double ValueInSpecifiedUnits { get; set; } Property Value Type Description Double Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute. Methods ConvertToSpecifiedUnits(SvgAngleType) Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueAsSpecified and valueAsString might be modified as a result of this method. Declaration public void ConvertToSpecifiedUnits(SvgAngleType unitType) Parameters Type Name Description SvgAngleType unitType The unitType to switch to (e.g., SvgAngleTypeDEG). NewValueSpecifiedUnits(SvgAngleType, Double) Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object. Declaration public void NewValueSpecifiedUnits(SvgAngleType unitType, double valueInSpecifiedUnits) Parameters Type Name Description SvgAngleType unitType The unitType for the angle value (e.g., SvgAngleTypeDEG). Double valueInSpecifiedUnits The angle value Implements ISvgAngle"
  },
  "api/SharpVectors.Dom.Svg.SvgAngleType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngleType.html",
    "title": "Enum SvgAngleType | SharpVectors Documentation",
    "keywords": "Enum SvgAngleType The basic Angle Value Types Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgAngleType Fields Deg Grad Rad Unknown Unspecified Name Description Deg The unit type was explicitly set to degrees. Grad The unit type is grads. Rad The unit type is radians. Unknown The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. Unspecified No unit type was provided (i.e., a unitless value was specified). For angles, a unitless value is treated the same as if degrees were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.html",
    "title": "Class SvgAnimateBaseElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateBaseElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateBaseElement SvgAnimateColorElement SvgAnimateElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Inherited Members SvgAnimationElement._svgTests SvgAnimationElement._eventTarget SvgAnimationElement._externalResourcesRequired SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(String) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.IEventTarget.AddEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.RemoveEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.DispatchEvent(IEvent) SvgAnimationElement.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) SvgAnimationElement.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) SvgAnimationElement.IEventTarget.WillTriggerNs(String, String) SvgAnimationElement.IEventTarget.HasEventListenerNs(String, String) SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(Single) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(Single) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgAnimateBaseElement : SvgAnimationElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Constructors SvgAnimateBaseElement(String, String, String, SvgDocument) Declaration protected SvgAnimateBaseElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Accumulate Declaration public string Accumulate { get; set; } Property Value Type Description String Additive Declaration public string Additive { get; set; } Property Value Type Description String AttributeName Declaration public string AttributeName { get; set; } Property Value Type Description String AttributeType Declaration public string AttributeType { get; set; } Property Value Type Description String By Declaration public string By { get; set; } Property Value Type Description String CalcMode Declaration public string CalcMode { get; set; } Property Value Type Description String ClassName Declaration public ISvgAnimatedString ClassName { get; } Property Value Type Description ISvgAnimatedString From Declaration public string From { get; set; } Property Value Type Description String KeySplines Declaration public string KeySplines { get; set; } Property Value Type Description String KeyTimes Declaration public string KeyTimes { get; set; } Property Value Type Description String To Declaration public string To { get; set; } Property Value Type Description String Values Declaration public string Values { get; set; } Property Value Type Description String Methods GetPresentationAttribute(String) Declaration public ICssValue GetPresentationAttribute(string name) Parameters Type Name Description String name Returns Type Description ICssValue Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateColorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateColorElement.html",
    "title": "Class SvgAnimateColorElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateColorElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateBaseElement SvgAnimateColorElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateColorElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget ISvgStylable Inherited Members SvgAnimateBaseElement.AttributeName SvgAnimateBaseElement.AttributeType SvgAnimateBaseElement.By SvgAnimateBaseElement.CalcMode SvgAnimateBaseElement.From SvgAnimateBaseElement.KeySplines SvgAnimateBaseElement.KeyTimes SvgAnimateBaseElement.To SvgAnimateBaseElement.Values SvgAnimateBaseElement.Accumulate SvgAnimateBaseElement.Additive SvgAnimateBaseElement.ClassName SvgAnimateBaseElement.GetPresentationAttribute(String) SvgAnimationElement._svgTests SvgAnimationElement._eventTarget SvgAnimationElement._externalResourcesRequired SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(String) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.IEventTarget.AddEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.RemoveEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.DispatchEvent(IEvent) SvgAnimationElement.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) SvgAnimationElement.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) SvgAnimationElement.IEventTarget.WillTriggerNs(String, String) SvgAnimationElement.IEventTarget.HasEventListenerNs(String, String) SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(Single) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(Single) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimateColorElement : SvgAnimateBaseElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateColorElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget, ISvgStylable Constructors SvgAnimateColorElement(String, String, String, SvgDocument) Declaration public SvgAnimateColorElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateColorElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.html",
    "title": "Class SvgAnimatedAngle | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedAngle Inheritance Object SvgAnimatedAngle Implements ISvgAnimatedAngle Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedAngle : ISvgAnimatedAngle Constructors SvgAnimatedAngle(ISvgAngle) Declaration public SvgAnimatedAngle(ISvgAngle angle) Parameters Type Name Description ISvgAngle angle SvgAnimatedAngle(String, String) Declaration public SvgAnimatedAngle(string s, string defaultValue) Parameters Type Name Description String s String defaultValue Properties AnimVal Declaration public ISvgAngle AnimVal { get; } Property Value Type Description ISvgAngle BaseVal Declaration public ISvgAngle BaseVal { get; } Property Value Type Description ISvgAngle Implements ISvgAnimatedAngle"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.html",
    "title": "Class SvgAnimatedBoolean | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedBoolean Summary description for SvgAnimatedNumber. Inheritance Object SvgAnimatedBoolean Implements ISvgAnimatedBoolean Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedBoolean : ISvgAnimatedBoolean Constructors SvgAnimatedBoolean(String, Boolean) Declaration public SvgAnimatedBoolean(string str, bool defaultValue) Parameters Type Name Description String str Boolean defaultValue Properties AnimVal Declaration public bool AnimVal { get; } Property Value Type Description Boolean BaseVal Declaration public bool BaseVal { get; set; } Property Value Type Description Boolean Implements ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.html",
    "title": "Class SvgAnimatedEnumeration | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedEnumeration Summary description for SvgAnimatedEnumeration. Inheritance Object SvgAnimatedEnumeration Implements ISvgAnimatedEnumeration Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedEnumeration : ISvgAnimatedEnumeration Constructors SvgAnimatedEnumeration(UInt16) Declaration public SvgAnimatedEnumeration(ushort val) Parameters Type Name Description UInt16 val Properties AnimVal Declaration public ushort AnimVal { get; } Property Value Type Description UInt16 BaseVal Declaration public ushort BaseVal { get; set; } Property Value Type Description UInt16 Implements ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.html",
    "title": "Class SvgAnimatedInteger | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedInteger An implementation of the ISvgAnimatedInteger interface. Inheritance Object SvgAnimatedInteger Implements ISvgAnimatedInteger Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedInteger : ISvgAnimatedInteger Constructors SvgAnimatedInteger(Double) Declaration public SvgAnimatedInteger(double value) Parameters Type Name Description Double value SvgAnimatedInteger(Int64) Declaration public SvgAnimatedInteger(long value) Parameters Type Name Description Int64 value SvgAnimatedInteger(Int64, Int64) Declaration public SvgAnimatedInteger(long baseVal, long animVal) Parameters Type Name Description Int64 baseVal Int64 animVal SvgAnimatedInteger(String) Declaration public SvgAnimatedInteger(string str) Parameters Type Name Description String str SvgAnimatedInteger(UInt64) Declaration public SvgAnimatedInteger(ulong value) Parameters Type Name Description UInt64 value Properties AnimVal Declaration public long AnimVal { get; set; } Property Value Type Description Int64 BaseVal Declaration public long BaseVal { get; set; } Property Value Type Description Int64 Implements ISvgAnimatedInteger"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLength.html",
    "title": "Class SvgAnimatedLength | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedLength Used for attributes of basic type 'length' which can be animated. Inheritance Object SvgAnimatedLength Implements ISvgAnimatedLength Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedLength : ISvgAnimatedLength Constructors SvgAnimatedLength(ISvgLength, ISvgLength) Declaration public SvgAnimatedLength(ISvgLength baseVal, ISvgLength animVal) Parameters Type Name Description ISvgLength baseVal ISvgLength animVal SvgAnimatedLength(SvgElement, String, SvgLengthDirection, String) Used for attributes of basic type 'length' which can be animated. Declaration public SvgAnimatedLength(SvgElement ownerElement, string propertyName, SvgLengthDirection direction, string defaultValue) Parameters Type Name Description SvgElement ownerElement The elements that contains the length String propertyName SvgLengthDirection direction The direction of the length, 0=x-axis, 1=y-axis, 2=no special axis String defaultValue String to parse for the value SvgAnimatedLength(SvgElement, String, SvgLengthDirection, String, String) Declaration public SvgAnimatedLength(SvgElement ownerElement, string propertyName, SvgLengthDirection direction, string strValue, string defaultValue) Parameters Type Name Description SvgElement ownerElement String propertyName SvgLengthDirection direction String strValue String defaultValue Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. Declaration public ISvgLength AnimVal { get; set; } Property Value Type Description ISvgLength BaseVal The base value of the given attribute before applying any animations. Declaration public ISvgLength BaseVal { get; set; } Property Value Type Description ISvgLength Implements ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.html",
    "title": "Class SvgAnimatedLengthList | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedLengthList Summary description for SvgAnimatedLengthList. Inheritance Object SvgAnimatedLengthList Implements ISvgAnimatedLengthList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedLengthList : ISvgAnimatedLengthList Constructors SvgAnimatedLengthList(String, String, SvgElement, SvgLengthDirection) Declaration public SvgAnimatedLengthList(string propertyName, string str, SvgElement ownerElement, SvgLengthDirection direction) Parameters Type Name Description String propertyName String str SvgElement ownerElement SvgLengthDirection direction Properties AnimVal Declaration public ISvgLengthList AnimVal { get; } Property Value Type Description ISvgLengthList BaseVal Declaration public ISvgLengthList BaseVal { get; } Property Value Type Description ISvgLengthList Count Gets the number of elements contained in the ISvgAnimatedLengthList . Declaration public int Count { get; } Property Value Type Description Int32 The number of elements contained in the ISvgAnimatedLengthList . Item[UInt32] Gets the element at the specified index. Declaration public ISvgAnimatedLength this[uint index] { get; } Parameters Type Name Description UInt32 index The zero-based index of the element to get or set. Property Value Type Description ISvgAnimatedLength The element at the specified index. Implements ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.html",
    "title": "Class SvgAnimatedNumber | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedNumber Summary description for SvgAnimatedNumber. Inheritance Object SvgAnimatedNumber Implements ISvgAnimatedNumber Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedNumber : ISvgAnimatedNumber Constructors SvgAnimatedNumber(Double) Declaration public SvgAnimatedNumber(double value) Parameters Type Name Description Double value SvgAnimatedNumber(Double, Double) Declaration public SvgAnimatedNumber(double baseVal, double animVal) Parameters Type Name Description Double baseVal Double animVal SvgAnimatedNumber(String) Declaration public SvgAnimatedNumber(string str) Parameters Type Name Description String str Properties AnimVal Declaration public double AnimVal { get; set; } Property Value Type Description Double BaseVal Declaration public double BaseVal { get; set; } Property Value Type Description Double Implements ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.html",
    "title": "Class SvgAnimatedNumberList | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedNumberList Summary description for SvgAnimatedNumberList. Inheritance Object SvgAnimatedNumberList Implements ISvgAnimatedNumberList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedNumberList : ISvgAnimatedNumberList Constructors SvgAnimatedNumberList() Declaration public SvgAnimatedNumberList() SvgAnimatedNumberList(String) Declaration public SvgAnimatedNumberList(string str) Parameters Type Name Description String str Fields Empty Declaration public static readonly SvgAnimatedNumberList Empty Field Value Type Description SvgAnimatedNumberList Properties AnimVal If the given attribute or property is being animated, then this attribute contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, then this attribute contains the same value as 'BaseVal'. Declaration public ISvgNumberList AnimVal { get; } Property Value Type Description ISvgNumberList BaseVal The base value of the given attribute before applying any animations Declaration public ISvgNumberList BaseVal { get; } Property Value Type Description ISvgNumberList Count Gets the number of elements contained in the ISvgAnimatedNumberList . Declaration public int Count { get; } Property Value Type Description Int32 The number of elements contained in the ISvgAnimatedNumberList . Item[UInt32] Gets the element at the specified index. Declaration public ISvgAnimatedNumber this[uint index] { get; } Parameters Type Name Description UInt32 index The zero-based index of the element to get or set. Property Value Type Description ISvgAnimatedNumber The element at the specified index. Implements ISvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.html",
    "title": "Class SvgAnimatedPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedPreserveAspectRatio Summary description for SvgAnimatedPreserveAspectRatio. Inheritance Object SvgAnimatedPreserveAspectRatio Implements ISvgAnimatedPreserveAspectRatio Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedPreserveAspectRatio : ISvgAnimatedPreserveAspectRatio Constructors SvgAnimatedPreserveAspectRatio(String, SvgElement) Declaration public SvgAnimatedPreserveAspectRatio(string attr, SvgElement ownerElement) Parameters Type Name Description String attr SvgElement ownerElement Properties AnimVal Declaration public ISvgPreserveAspectRatio AnimVal { get; } Property Value Type Description ISvgPreserveAspectRatio BaseVal Declaration public ISvgPreserveAspectRatio BaseVal { get; } Property Value Type Description ISvgPreserveAspectRatio Implements ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedRect.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedRect.html",
    "title": "Class SvgAnimatedRect | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedRect Inheritance Object SvgAnimatedRect Implements ISvgAnimatedRect Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedRect : ISvgAnimatedRect Constructors SvgAnimatedRect(SvgRect) Declaration public SvgAnimatedRect(SvgRect rect) Parameters Type Name Description SvgRect rect SvgAnimatedRect(String) Declaration public SvgAnimatedRect(string str) Parameters Type Name Description String str Properties AnimVal Declaration public ISvgRect AnimVal { get; } Property Value Type Description ISvgRect BaseVal Declaration public ISvgRect BaseVal { get; } Property Value Type Description ISvgRect Implements ISvgAnimatedRect"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedString.html",
    "title": "Class SvgAnimatedString | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedString Summary description for SvgAnimatedString. Inheritance Object SvgAnimatedString Implements ISvgAnimatedString Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedString : ISvgAnimatedString Constructors SvgAnimatedString(String) Declaration public SvgAnimatedString(string str) Parameters Type Name Description String str Properties AnimVal Declaration public string AnimVal { get; } Property Value Type Description String BaseVal Declaration public string BaseVal { get; set; } Property Value Type Description String Implements ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.html",
    "title": "Class SvgAnimatedTransformList | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedTransformList Used for the various attributes which specify a set of transformations, such as the transform attribute which is available for many of Svg's elements, and which can be animated. Inheritance Object SvgAnimatedTransformList Implements ISvgAnimatedTransformList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimatedTransformList : ISvgAnimatedTransformList Constructors SvgAnimatedTransformList(String) Declaration public SvgAnimatedTransformList(string transform) Parameters Type Name Description String transform Properties AnimVal Declaration public ISvgTransformList AnimVal { get; } Property Value Type Description ISvgTransformList BaseVal Declaration public ISvgTransformList BaseVal { get; } Property Value Type Description ISvgTransformList Implements ISvgAnimatedTransformList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateElement.html",
    "title": "Class SvgAnimateElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateBaseElement SvgAnimateElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget ISvgStylable Inherited Members SvgAnimateBaseElement.AttributeName SvgAnimateBaseElement.AttributeType SvgAnimateBaseElement.By SvgAnimateBaseElement.CalcMode SvgAnimateBaseElement.From SvgAnimateBaseElement.KeySplines SvgAnimateBaseElement.KeyTimes SvgAnimateBaseElement.To SvgAnimateBaseElement.Values SvgAnimateBaseElement.Accumulate SvgAnimateBaseElement.Additive SvgAnimateBaseElement.ClassName SvgAnimateBaseElement.GetPresentationAttribute(String) SvgAnimationElement._svgTests SvgAnimationElement._eventTarget SvgAnimationElement._externalResourcesRequired SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(String) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.IEventTarget.AddEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.RemoveEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.DispatchEvent(IEvent) SvgAnimationElement.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) SvgAnimationElement.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) SvgAnimationElement.IEventTarget.WillTriggerNs(String, String) SvgAnimationElement.IEventTarget.HasEventListenerNs(String, String) SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(Single) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(Single) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimateElement : SvgAnimateBaseElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget, ISvgStylable Constructors SvgAnimateElement(String, String, String, SvgDocument) Declaration public SvgAnimateElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.html",
    "title": "Class SvgAnimateMotionElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateMotionElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateMotionElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateMotionElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Inherited Members SvgAnimationElement._svgTests SvgAnimationElement._eventTarget SvgAnimationElement._externalResourcesRequired SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(String) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.IEventTarget.AddEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.RemoveEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.DispatchEvent(IEvent) SvgAnimationElement.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) SvgAnimationElement.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) SvgAnimationElement.IEventTarget.WillTriggerNs(String, String) SvgAnimationElement.IEventTarget.HasEventListenerNs(String, String) SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(Single) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(Single) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimateMotionElement : SvgAnimationElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateMotionElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Constructors SvgAnimateMotionElement(String, String, String, SvgDocument) Declaration public SvgAnimateMotionElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Accumulate Declaration public string Accumulate { get; set; } Property Value Type Description String Additive Declaration public string Additive { get; set; } Property Value Type Description String By Declaration public string By { get; set; } Property Value Type Description String CalcMode Declaration public string CalcMode { get; set; } Property Value Type Description String From Declaration public string From { get; set; } Property Value Type Description String KeyPoints Gets or sets a value that takes a semicolon-separated list of floating point values between 0 and 1 and indicates how far along the motion path the object shall move at the moment in time specified by corresponding \"keyTimes\" value. Declaration public string KeyPoints { get; set; } Property Value Type Description String Distance calculations use the user agent's distance along the path algorithm. Each progress value in the list corresponds to a value in the \"keyTimes\" attribute list. If a list of \"keyPoints\" is specified, there must be exactly as many values in the \"keyPoints\" list as in the \"keyTimes\" list. KeySplines Declaration public string KeySplines { get; set; } Property Value Type Description String KeyTimes Declaration public string KeyTimes { get; set; } Property Value Type Description String Origin The \"origin\" attribute is defined in the SMIL Animation specification. It has no effect in SVG. Declaration public string Origin { get; set; } Property Value Type Description String The value is \"default\". Path Gets or set the attribute specifying the motion path, expressed in the same format and interpreted the same way as the \"d\" attribute on the \"path\" element. Declaration public string Path { get; set; } Property Value Type Description String The effect of a motion path animation is to add a supplemental transformation matrix onto the CTM for the referenced object which causes a translation along the x- and y-axes of the current user coordinate system by the computed X and Y values computed over time. Rotate Gets or sets an attribute post-multiplies a supplemental transformation matrix onto the CTM of the target element to apply a rotation transformation about the origin of the current user coordinate system. Declaration public string Rotate { get; set; } Property Value Type Description String The rotation transformation is applied after the supplemental translation transformation that is computed due to the \"path\" attribute. autoIndicates that the object is rotated over time by the angle of the direction (i.e., directional tangent vector) of the motion path. auto-reverseIndicates that the object is rotated over time by the angle of the direction (i.e., directional tangent vector) of the motion path plus 180 degrees. numberIndicates that the target element has a constant rotation transformation applied to it, where the rotation angle is the specified number of degrees. The default value is '0'. To Declaration public string To { get; set; } Property Value Type Description String Values Declaration public string Values { get; set; } Property Value Type Description String Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateMotionElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.html",
    "title": "Class SvgAnimateMPathElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateMPathElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimateMPathElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgAnimateMPathElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimateMPathElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgAnimateMPathElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired Constructors SvgAnimateMPathElement(String, String, String, SvgDocument) Declaration public SvgAnimateMPathElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString ReferencedElement Declaration public XmlElement ReferencedElement { get; } Property Value Type Description XmlElement Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgAnimateMPathElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.html",
    "title": "Class SvgAnimateSetElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateSetElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateSetElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateSetElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Inherited Members SvgAnimationElement._svgTests SvgAnimationElement._eventTarget SvgAnimationElement._externalResourcesRequired SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(String) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.IEventTarget.AddEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.RemoveEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.DispatchEvent(IEvent) SvgAnimationElement.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) SvgAnimationElement.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) SvgAnimationElement.IEventTarget.WillTriggerNs(String, String) SvgAnimationElement.IEventTarget.HasEventListenerNs(String, String) SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(Single) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(Single) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimateSetElement : SvgAnimationElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateSetElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Constructors SvgAnimateSetElement(String, String, String, SvgDocument) Declaration public SvgAnimateSetElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties AttributeName Declaration public string AttributeName { get; set; } Property Value Type Description String AttributeType Declaration public string AttributeType { get; set; } Property Value Type Description String To Declaration public string To { get; set; } Property Value Type Description String Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateSetElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.html",
    "title": "Class SvgAnimateTransformElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateTransformElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateTransformElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateTransformElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Inherited Members SvgAnimationElement._svgTests SvgAnimationElement._eventTarget SvgAnimationElement._externalResourcesRequired SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(String) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.IEventTarget.AddEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.RemoveEventListener(String, EventListener, Boolean) SvgAnimationElement.IEventTarget.DispatchEvent(IEvent) SvgAnimationElement.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) SvgAnimationElement.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) SvgAnimationElement.IEventTarget.WillTriggerNs(String, String) SvgAnimationElement.IEventTarget.HasEventListenerNs(String, String) SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(Single) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(Single) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgAnimateTransformElement : SvgAnimationElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateTransformElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Constructors SvgAnimateTransformElement(String, String, String, SvgDocument) Declaration public SvgAnimateTransformElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Accumulate Declaration public string Accumulate { get; set; } Property Value Type Description String Additive Declaration public string Additive { get; set; } Property Value Type Description String AttributeName Declaration public string AttributeName { get; set; } Property Value Type Description String AttributeType Declaration public string AttributeType { get; set; } Property Value Type Description String By Declaration public string By { get; set; } Property Value Type Description String CalcMode Declaration public string CalcMode { get; set; } Property Value Type Description String From Declaration public string From { get; set; } Property Value Type Description String KeySplines Declaration public string KeySplines { get; set; } Property Value Type Description String KeyTimes Declaration public string KeyTimes { get; set; } Property Value Type Description String To Declaration public string To { get; set; } Property Value Type Description String Type Gets or sets a value to indicates the type of transformation which is to have its values change over time. Declaration public SvgTransformType Type { get; set; } Property Value Type Description SvgTransformType The values are translate | scale | rotate | skewX | skewY. If the attribute is not specified, then the effect is as if a value of 'translate' were specified. The ‘from’, ‘by’ and ‘to’ attributes take a value expressed using the same syntax that is available for the given transformation type: For a type='translate\", each individual value is expressed as {tx} [,{ty}]. For a type=\"scale\", each individual value is expressed as {sx} [,{sy}]. For a type=\"rotate\", each individual value is expressed as {rotate-angle} [{cx} {cy}]. For a type=\"skewX\" and type=\"skewY\", each individual value is expressed as {skew-angle}. Values Declaration public string Values { get; set; } Property Value Type Description String Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateTransformElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.html",
    "title": "Class SvgAnimationElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimationElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateBaseElement SvgAnimateMotionElement SvgAnimateSetElement SvgAnimateTransformElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgAnimationElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Constructors SvgAnimationElement(String, String, String, SvgDocument) Declaration protected SvgAnimationElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Fields _eventTarget Declaration protected EventTarget _eventTarget Field Value Type Description EventTarget _externalResourcesRequired Declaration protected SvgExternalResourcesRequired _externalResourcesRequired Field Value Type Description SvgExternalResourcesRequired _svgTests Declaration protected SvgTests _svgTests Field Value Type Description SvgTests Properties Begin Declaration public string Begin { get; set; } Property Value Type Description String CurrentTime Declaration public float CurrentTime { get; } Property Value Type Description Single Duration Declaration public string Duration { get; set; } Property Value Type Description String End Declaration public string End { get; set; } Property Value Type Description String ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Fill Declaration public string Fill { get; set; } Property Value Type Description String Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Maximum Declaration public string Maximum { get; set; } Property Value Type Description String Minimum Declaration public string Minimum { get; set; } Property Value Type Description String ReferencedElement Declaration public XmlElement ReferencedElement { get; } Property Value Type Description XmlElement RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Animation Overrides SvgElement.RenderingHint RepeatCount Declaration public string RepeatCount { get; set; } Property Value Type Description String RepeatDuration Declaration public string RepeatDuration { get; set; } Property Value Type Description String RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList Restart Declaration public string Restart { get; set; } Property Value Type Description String SimpleDuration Declaration public float SimpleDuration { get; } Property Value Type Description Single StartTime Declaration public float StartTime { get; } Property Value Type Description Single SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList TargetElement Declaration public ISvgElement TargetElement { get; } Property Value Type Description ISvgElement Methods BeginElement() Declaration public void BeginElement() BeginElementAt(Single) Declaration public void BeginElementAt(float offset) Parameters Type Name Description Single offset EndElement() Declaration public void EndElement() EndElementAt(Single) Declaration public void EndElementAt(float offset) Parameters Type Name Description Single offset HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventObject) Parameters Type Name Description IEvent eventObject Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.html",
    "title": "Class SvgCircleElement | SharpVectors Documentation",
    "keywords": "Class SvgCircleElement The ISvgCircleElement interface corresponds to the 'circle' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgCircleElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgCircleElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgCircleElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgCircleElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Constructors SvgCircleElement(String, String, String, SvgDocument) Declaration public SvgCircleElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Cx Declaration public ISvgAnimatedLength Cx { get; } Property Value Type Description ISvgAnimatedLength Cy Declaration public ISvgAnimatedLength Cy { get; } Property Value Type Description ISvgAnimatedLength ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean R Declaration public ISvgAnimatedLength R { get; } Property Value Type Description ISvgAnimatedLength RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Invalidate() Declaration public void Invalidate() Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgCircleElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.html",
    "title": "Class SvgClipPathElement | SharpVectors Documentation",
    "keywords": "Class SvgClipPathElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgClipPathElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgClipPathElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgTransformableElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgClipPathElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgClipPathElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable Constructors SvgClipPathElement(String, String, String, SvgDocument) Declaration public SvgClipPathElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ClipPathUnits Declaration public ISvgAnimatedEnumeration ClipPathUnits { get; } Property Value Type Description ISvgAnimatedEnumeration ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Clipping Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgClipPathElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.html",
    "title": "Class SvgColor | SharpVectors Documentation",
    "keywords": "Class SvgColor Summary description for SvgColor. Inheritance Object CssValue SvgColor SvgPaint WpfSvgColor Implements ISvgColor ICssValue Inherited Members CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetAbsoluteValue(String, XmlElement) CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgColor : CssValue, ISvgColor, ICssValue Constructors SvgColor() Declaration protected SvgColor() SvgColor(String) Declaration public SvgColor(string str) Parameters Type Name Description String str Fields _rgbColor Declaration protected CssColor _rgbColor Field Value Type Description CssColor Properties ColorType Declaration public SvgColorType ColorType { get; } Property Value Type Description SvgColorType CssText Declaration public override string CssText { get; set; } Property Value Type Description String Overrides CssValue.CssText IccColor Declaration public ISvgIccColor IccColor { get; } Property Value Type Description ISvgIccColor RgbColor Declaration public ICssColor RgbColor { get; } Property Value Type Description ICssColor Methods ParseColor(String) Declaration protected void ParseColor(string str) Parameters Type Name Description String str SetColor(SvgColorType, String, String) Declaration public void SetColor(SvgColorType colorType, string rgbColor, string iccColor) Parameters Type Name Description SvgColorType colorType String rgbColor String iccColor SetRgbColor(String) Declaration public void SetRgbColor(string rgbColor) Parameters Type Name Description String rgbColor SetRgbColorIccColor(String, String) Declaration public void SetRgbColorIccColor(string rgbColor, string iccColor) Parameters Type Name Description String rgbColor String iccColor Implements ISvgColor ICssValue"
  },
  "api/SharpVectors.Dom.Svg.SvgColorProfileElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorProfileElement.html",
    "title": "Class SvgColorProfileElement | SharpVectors Documentation",
    "keywords": "Class SvgColorProfileElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgColorProfileElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgColorProfileElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgColorProfileElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgColorProfileElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference Constructors SvgColorProfileElement(String, String, String, SvgDocument) Declaration public SvgColorProfileElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString Local Declaration public string Local { get; } Property Value Type Description String ReferencedElement Declaration public XmlElement ReferencedElement { get; } Property Value Type Description XmlElement RenderingIntent Declaration public ushort RenderingIntent { get; set; } Property Value Type Description UInt16 UriReference Declaration public SvgUriReference UriReference { get; } Property Value Type Description SvgUriReference Explicit Interface Implementations ISvgColorProfileElement.Local Declaration string ISvgColorProfileElement.Local { get; set; } Returns Type Description String ISvgColorProfileElement.Name Declaration string ISvgColorProfileElement.Name { get; set; } Returns Type Description String Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgColorProfileElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgColorType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorType.html",
    "title": "Enum SvgColorType | SharpVectors Documentation",
    "keywords": "Enum SvgColorType Basic color type enumeration. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgColorType Fields CurrentColor RgbColor RgbColorIccColor SystemColor Unknown Name Description CurrentColor RgbColor RgbColorIccColor SystemColor Unknown"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.html",
    "title": "Class SvgComponentTransferFunctionElement | SharpVectors Documentation",
    "keywords": "Class SvgComponentTransferFunctionElement This abstract defines a base class used by the component transfer function interfaces. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement SvgFEFuncAElement SvgFEFuncBElement SvgFEFuncGElement SvgFEFuncRElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgComponentTransferFunctionElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgComponentTransferFunctionElement(String, String, String, SvgDocument) Declaration protected SvgComponentTransferFunctionElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Fields _amplitude Declaration protected ISvgAnimatedNumber _amplitude Field Value Type Description ISvgAnimatedNumber _exponent Declaration protected ISvgAnimatedNumber _exponent Field Value Type Description ISvgAnimatedNumber _intercept Declaration protected ISvgAnimatedNumber _intercept Field Value Type Description ISvgAnimatedNumber _offset Declaration protected ISvgAnimatedNumber _offset Field Value Type Description ISvgAnimatedNumber _reSeparators Declaration protected static readonly Regex _reSeparators Field Value Type Description Regex _slope Declaration protected ISvgAnimatedNumber _slope Field Value Type Description ISvgAnimatedNumber _tableValues Declaration protected ISvgAnimatedNumberList _tableValues Field Value Type Description ISvgAnimatedNumberList _type Declaration protected ISvgAnimatedEnumeration _type Field Value Type Description ISvgAnimatedEnumeration Properties Amplitude When type=\"gamma\", the amplitude of the gamma function. Declaration public ISvgAnimatedNumber Amplitude { get; } Property Value Type Description ISvgAnimatedNumber amplitude = \"number\" The initial value for amplitude is 1 . Exponent When type=\"gamma\", the exponent of the gamma function. Declaration public ISvgAnimatedNumber Exponent { get; } Property Value Type Description ISvgAnimatedNumber exponent = \"number\" The initial value for exponent is 1 . Intercept When type=\"linear\", the intercept of the linear function. Declaration public ISvgAnimatedNumber Intercept { get; } Property Value Type Description ISvgAnimatedNumber slope = \"number\" The initial value for intercept is 0 . IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Offset When type=\"gamma\", the offset of the gamma function. Declaration public ISvgAnimatedNumber Offset { get; } Property Value Type Description ISvgAnimatedNumber offset = \"number\" The initial value for offset is 0 . Slope When type=\"linear\", the slope of the linear function. Declaration public ISvgAnimatedNumber Slope { get; } Property Value Type Description ISvgAnimatedNumber slope = \"number\" The initial value for slope is 1 . TableValues Corresponds to attribute 'tableValues' on the given element. Declaration public ISvgAnimatedNumberList TableValues { get; } Property Value Type Description ISvgAnimatedNumberList tableValues = \"(list of numbers)\" Type Corresponds to attribute 'type' on the given element. Declaration public ISvgAnimatedEnumeration Type { get; } Property Value Type Description ISvgAnimatedEnumeration type = \"identity | table | discrete | linear | gamma\" Indicates the type of component transfer function. The type of function determines the applicability of the other attributes. An enumeration of the type SvgFilterTransferType . The default value is Identity . Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.html",
    "title": "Class SvgDefsElement | SharpVectors Documentation",
    "keywords": "Class SvgDefsElement The SvgDefsElement interface corresponds to the 'defs' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgDefsElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgDefsElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgTransformableElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgDefsElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgDefsElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable Constructors SvgDefsElement(String, String, String, SvgDocument) Declaration public SvgDefsElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgDefsElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable"
  },
  "api/SharpVectors.Dom.Svg.SvgDescElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDescElement.html",
    "title": "Class SvgDescElement | SharpVectors Documentation",
    "keywords": "Class SvgDescElement The SvgDescElement interface corresponds to the 'desc' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgDescElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgDescElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgDescElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgDescElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable Constructors SvgDescElement(String, String, String, SvgDocument) Declaration public SvgDescElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgDescElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.html",
    "title": "Class SvgDocument | SharpVectors Documentation",
    "keywords": "Class SvgDocument The root object in the document object hierarchy of an Svg document. Inheritance Object XmlNode XmlDocument Document CssXmlDocument SvgDocument Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IDocumentEvent IDocumentCss IDocumentStyle ICssView IAbstractView ISvgDocument IDocument INode IXmlNode Inherited Members CssXmlDocument.UserAgentStyleSheet CssXmlDocument.UserStyleSheet CssXmlDocument.Static CssXmlDocument.Media CssXmlDocument.CssPropertyProfile CssXmlDocument.Url CssXmlDocument.StyleSheets CssXmlDocument.IsLoaded CssXmlDocument.Document CssXmlDocument.LoadXml(String) CssXmlDocument.Load(XmlReader) CssXmlDocument.AddStyleElement(String, String) CssXmlDocument.SetUserAgentStyleSheet(String) CssXmlDocument.SetUserStyleSheet(String) CssXmlDocument.AddStyleSheet(String) CssXmlDocument.GetResource(Uri) CssXmlDocument.GetOverrideStyle(XmlElement, String) CssXmlDocument.GetComputedStyle(XmlElement, String) CssXmlDocument.NodeChangedEvent(Object, XmlNodeChangedEventArgs) Document.MutationEvents Document.ReplacedText(INode) Document.DeletedText(INode, Int32, Int32) Document.InsertedText(INode, Int32, Int32) Document.ModifyingCharacterData(INode) Document.ModifiedCharacterData(INode, String, String) Document.InsertingNode(INode, Boolean) Document.InsertedNode(INode, INode, Boolean) Document.RemovingNode(INode, INode, Boolean) Document.RemovedNode(INode, Boolean) Document.replacingNode(INode) Document.ReplacedNode(INode) Document.ModifiedAttrValue(IAttribute, String) Document.SetAttrNode(IAttribute, IAttribute) Document.RemovedAttrNode(IAttribute, INode, String) Document.RenamedAttrNode(IAttribute, IAttribute) Document.RenamedElement(IElement, IElement) Document.CreateAttribute(String, String, String) Document.CreateCDataSection(String) Document.CreateComment(String) Document.CreateDocumentFragment() Document.CreateDocumentType(String, String, String, String) Document.CreateEntityReference(String) Document.CreateProcessingInstruction(String, String) Document.CreateSignificantWhitespace(String) Document.CreateTextNode(String) Document.CreateWhitespace(String) Document.CreateXmlDeclaration(String, String, String) Document.IEventTarget.AddEventListener(String, EventListener, Boolean) Document.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Document.IEventTarget.DispatchEvent(IEvent) Document.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Document.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Document.IEventTarget.WillTriggerNs(String, String) Document.IEventTarget.HasEventListenerNs(String, String) Document.IDocument.Doctype Document.IDocument.Implementation Document.IDocument.DocumentElement Document.IDocument.CreateElement(String) Document.IDocument.CreateDocumentFragment() Document.IDocument.CreateTextNode(String) Document.IDocument.CreateComment(String) Document.IDocument.CreateCDataSection(String) Document.IDocument.CreateProcessingInstruction(String, String) Document.IDocument.CreateAttribute(String) Document.IDocument.CreateEntityReference(String) Document.IDocument.GetElementsByTagName(String) Document.IDocument.ImportNode(INode, Boolean) Document.IDocument.CreateElementNs(String, String) Document.IDocument.CreateAttributeNs(String, String) Document.IDocument.GetElementsByTagNameNs(String, String) Document.IDocument.GetElementById(String) Document.CreateEvent(String) Document.CanDispatch(String, String) Document.IEventTargetSupport.FireEvent(IEvent) XmlDocument.CloneNode(Boolean) XmlDocument.CreateAttribute(String) XmlDocument.CreateElement(String) XmlDocument.CreateNavigator() XmlDocument.CreateNavigator(XmlNode) XmlDocument.GetElementsByTagName(String) XmlDocument.CreateAttribute(String, String) XmlDocument.CreateElement(String, String) XmlDocument.GetElementsByTagName(String, String) XmlDocument.ImportNode(XmlNode, Boolean) XmlDocument.CreateDefaultAttribute(String, String, String) XmlDocument.CreateNode(XmlNodeType, String, String, String) XmlDocument.CreateNode(String, String, String) XmlDocument.CreateNode(XmlNodeType, String, String) XmlDocument.ReadNode(XmlReader) XmlDocument.Save(String) XmlDocument.Save(Stream) XmlDocument.Save(TextWriter) XmlDocument.Save(XmlWriter) XmlDocument.WriteTo(XmlWriter) XmlDocument.WriteContentTo(XmlWriter) XmlDocument.Validate(ValidationEventHandler) XmlDocument.Validate(ValidationEventHandler, XmlNode) XmlDocument.NodeType XmlDocument.ParentNode XmlDocument.DocumentType XmlDocument.Implementation XmlDocument.Name XmlDocument.LocalName XmlDocument.DocumentElement XmlDocument.Schemas XmlDocument.XmlResolver XmlDocument.NameTable XmlDocument.PreserveWhitespace XmlDocument.IsReadOnly XmlDocument.InnerText XmlDocument.InnerXml XmlDocument.SchemaInfo XmlDocument.NodeInserting XmlDocument.NodeInserted XmlDocument.NodeRemoving XmlDocument.NodeRemoved XmlDocument.NodeChanging XmlDocument.NodeChanged XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.OuterXml XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgDocument : CssXmlDocument, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IDocumentEvent, IDocumentCss, IDocumentStyle, ICssView, IAbstractView, ISvgDocument, IDocument, INode, IXmlNode Remarks When an 'svg' element is embedded inline as a component of a document from another namespace, such as when an 'svg' element is embedded inline within an XHTML document [ XHTML ], then an ISvgDocument object will not exist; instead, the root object in the document object hierarchy will be a Document object of a different type, such as an HTMLDocument object. However, an ISvgDocument object will indeed exist when the root element of the XML document hierarchy is an 'svg' element, such as when viewing a stand-alone SVG file (i.e., a file with MIME type \"image/svg+xml\"). In this case, the ISvgDocument object will be the root object of the document object model hierarchy. In the case where an SVG document is embedded by reference, such as when an XHTML document has an 'object' element whose href attribute references an SVG document (i.e., a document whose MIME type is \"image/svg+xml\" and whose root element is thus an 'svg' element), there will exist two distinct DOM hierarchies. The first DOM hierarchy will be for the referencing document (e.g., an XHTML document). The second DOM hierarchy will be for the referenced SVG document. In this second DOM hierarchy, the root object of the document object model hierarchy is an ISvgDocument object. The ISvgDocument interface contains a similar list of attributes and methods to the HTMLDocument interface described in the Document Object Model (HTML) Level 1 chapter of the [ DOM1 ] specification. Constructors SvgDocument(SvgWindow) Declaration public SvgDocument(SvgWindow window) Parameters Type Name Description SvgWindow window Fields DotsPerInch Declaration public static readonly int DotsPerInch Field Value Type Description Int32 SvgNamespace Declaration public const string SvgNamespace = \"http://www.w3.org/2000/svg\" Field Value Type Description String XLinkNamespace Declaration public const string XLinkNamespace = \"http://www.w3.org/1999/xlink\" Field Value Type Description String XmlIdUrl Namespace URI to map to the xml prefix Declaration public const string XmlIdUrl = \"http://www.w3.org/XML/1998/namespace\" Field Value Type Description String Properties BaseURI Declaration public override string BaseURI { get; } Property Value Type Description String Overrides XmlDocument.BaseURI CustomSettings Declaration public XmlReaderSettings CustomSettings { get; set; } Property Value Type Description XmlReaderSettings Domain The domain name of the server that served the document, or a null string if the server cannot be identified by a domain name. Declaration public string Domain { get; } Property Value Type Description String Dpi Get or sets the dots per inch at which the objects should be rendered. Declaration public double Dpi { get; set; } Property Value Type Description Double The current dots per inch value. ElementMap Declaration public IDictionary<string, XmlElement> ElementMap { get; } Property Value Type Description IDictionary < String , XmlElement > ElementUniqueMap Declaration public IDictionary<string, SvgElement> ElementUniqueMap { get; } Property Value Type Description IDictionary < String , SvgElement > FontFamilies Declaration public IList<SvgFontFamily> FontFamilies { get; } Property Value Type Description IList < SvgFontFamily > IsFontsLoaded Declaration public bool IsFontsLoaded { get; } Property Value Type Description Boolean NamespaceManager Declaration public XmlNamespaceManager NamespaceManager { get; } Property Value Type Description XmlNamespaceManager OwnerDocument Declaration public SvgDocument OwnerDocument { get; } Property Value Type Description SvgDocument Referrer Returns the URI of the page that linked to this page. The value is an empty string if the user navigated to the page directly (not through a link, but, for example, via a bookmark). Declaration public string Referrer { get; } Property Value Type Description String RootElement The root 'svg' element in the document hierarchy Declaration public ISvgSvgElement RootElement { get; } Property Value Type Description ISvgSvgElement StyledFontIds Declaration public IDictionary<string, string> StyledFontIds { get; } Property Value Type Description IDictionary < String , String > SvgFontFamilies Declaration public ISet<string> SvgFontFamilies { get; } Property Value Type Description ISet < String > SvgFonts Declaration public IList<SvgFontElement> SvgFonts { get; } Property Value Type Description IList < SvgFontElement > Title The title of the document which is the text content of the first child title element of the 'svg' root element. Declaration public string Title { get; } Property Value Type Description String Window Declaration public ISvgWindow Window { get; } Property Value Type Description ISvgWindow Methods CreateElement(String, String, String) Declaration public override XmlElement CreateElement(string prefix, string localName, string ns) Parameters Type Name Description String prefix String localName String ns Returns Type Description XmlElement Overrides CssXmlDocument.CreateElement(String, String, String) GetElementById(String) Declaration public override XmlElement GetElementById(string elementId) Parameters Type Name Description String elementId Returns Type Description XmlElement Overrides XmlDocument.GetElementById(String) GetFonts(IList<String>) Declaration public IList<SvgFontElement> GetFonts(IList<string> fontFamilies) Parameters Type Name Description IList < String > fontFamilies Returns Type Description IList < SvgFontElement > GetFonts(String) Declaration public IList<SvgFontElement> GetFonts(string fontFamily) Parameters Type Name Description String fontFamily Returns Type Description IList < SvgFontElement > GetFontUrls() Declaration protected virtual IList<Tuple<string, SvgFontFaceElement>> GetFontUrls() Returns Type Description IList < Tuple < String , SvgFontFaceElement >> GetNodeByUri(String) Declaration public XmlNode GetNodeByUri(string absoluteUrl) Parameters Type Name Description String absoluteUrl Returns Type Description XmlNode GetNodeByUri(Uri) Declaration public XmlNode GetNodeByUri(Uri absoluteUri) Parameters Type Name Description Uri absoluteUri Returns Type Description XmlNode GetSvgById(String) Declaration public SvgElement GetSvgById(string elementId) Parameters Type Name Description String elementId Returns Type Description SvgElement GetSvgByUniqueId(Guid) Declaration public SvgElement GetSvgByUniqueId(Guid uniqueId) Parameters Type Name Description Guid uniqueId Returns Type Description SvgElement GetSvgByUniqueId(String) Declaration public SvgElement GetSvgByUniqueId(string uniqueId) Parameters Type Name Description String uniqueId Returns Type Description SvgElement IsGZipped(Stream) Declaration public static bool IsGZipped(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Boolean Load(Stream) Loads the XML document from the specified stream. Declaration public override void Load(Stream inStream) Parameters Type Name Description Stream inStream The stream containing the XML document to load. Overrides CssXmlDocument.Load(Stream) Load(TextReader) Loads the XML document from the specified TextReader . Declaration public override void Load(TextReader txtReader) Parameters Type Name Description TextReader txtReader Overrides XmlDocument.Load(TextReader) Load(String) Loads the XML document from the specified URL. Declaration public override void Load(string filename) Parameters Type Name Description String filename URL for the file containing the XML document to load. Overrides CssXmlDocument.Load(String) Load(String, Stream) Loads the XML document from the specified stream but with the specified base URL Declaration public void Load(string baseUrl, Stream stream) Parameters Type Name Description String baseUrl Base URL for the stream from which the XML document is loaded. Stream stream The stream containing the XML document to load. OnLoaded() Declaration protected override void OnLoaded() Overrides CssXmlDocument.OnLoaded() RegisterFont(SvgFontElement) Declaration public void RegisterFont(SvgFontElement svgFont) Parameters Type Name Description SvgFontElement svgFont ResolveUri(String) Declaration public Uri ResolveUri(string uri) Parameters Type Name Description String uri Returns Type Description Uri Supports(String, String) Declaration public override bool Supports(string feature, string version) Parameters Type Name Description String feature String version Returns Type Description Boolean Overrides XmlNode.Supports(String, String) Events ResolveNamespace Occurs when a namespace is being resolved. Declaration public event SvgDocument.ResolveNamespaceDelegate ResolveNamespace Event Type Type Description SvgDocument.ResolveNamespaceDelegate ResolvingUri Occurs when an URI is resolved (always). Declaration public event SvgDocument.ResolveUriDelegate ResolvingUri Event Type Type Description SvgDocument.ResolveUriDelegate Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IDocumentEvent IDocumentCss IDocumentStyle ICssView IAbstractView ISvgDocument IDocument INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.ResolveNamespaceDelegate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.ResolveNamespaceDelegate.html",
    "title": "Delegate SvgDocument.ResolveNamespaceDelegate | SharpVectors Documentation",
    "keywords": "Delegate SvgDocument.ResolveNamespaceDelegate Namespace resolution event delegate. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public delegate void ResolveNamespaceDelegate(object sender, SvgResolveNamespaceEventArgs e); Parameters Type Name Description Object sender SvgResolveNamespaceEventArgs e"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.ResolveUriDelegate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.ResolveUriDelegate.html",
    "title": "Delegate SvgDocument.ResolveUriDelegate | SharpVectors Documentation",
    "keywords": "Delegate SvgDocument.ResolveUriDelegate URI resolution event delegate Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public delegate void ResolveUriDelegate(object sender, SvgResolveUriEventArgs e); Parameters Type Name Description Object sender SvgResolveUriEventArgs e"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.html",
    "title": "Class SvgElement | SharpVectors Documentation",
    "keywords": "Class SvgElement Summary description for SvgElement. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAltGlyphDefElement SvgAltGlyphItemElement SvgAnimateMPathElement SvgAnimationElement SvgColorProfileElement SvgComponentTransferFunctionElement SvgFEDistantLightElement SvgFEMergeNodeElement SvgFEPointLightElement SvgFESpotLightElement SvgFontFaceElement SvgFontFaceFormatElement SvgFontFaceNameElement SvgFontFaceSrcElement SvgFontFaceUriElement SvgKernElement SvgMetadataElement SvgScriptElement SvgStyleableElement SvgStyleElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode Inherited Members CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgElement : CssXmlElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgElement(String, String, String, SvgDocument) Declaration public SvgElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ElementInstance Whenever an SvgElementInstance is created for an SvgElement this property is set. The value of this property is used by the renderer to dispatch events. SvgElements that are <use>d exist in a conceptual \"instance tree\" and the target of events for those elements is the conceptual instance node represented by the SvgElementInstance. Declaration public ISvgElementInstance ElementInstance { get; set; } Property Value Type Description ISvgElementInstance See Also https://www.w3.org/TR/SVG/struct.html#UseElement https://www.w3.org/TR/SVG/struct.html#InterfaceSVGElementInstance Id Declaration public string Id { get; set; } Property Value Type Description String ImportDocument Declaration public SvgDocument ImportDocument { get; set; } Property Value Type Description SvgDocument ImportNode Declaration public SvgElement ImportNode { get; set; } Property Value Type Description SvgElement IsHiddenCss Declaration public bool IsHiddenCss { get; } Property Value Type Description Boolean IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public virtual bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . OwnerDocument Declaration public SvgDocument OwnerDocument { get; } Property Value Type Description SvgDocument OwnerSvgElement Declaration public SvgSvgElement OwnerSvgElement { get; } Property Value Type Description SvgSvgElement RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public virtual SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. UniqueId Declaration public string UniqueId { get; } Property Value Type Description String ViewportElement Declaration public SvgElement ViewportElement { get; } Property Value Type Description SvgElement XmlLang Declaration public string XmlLang { get; set; } Property Value Type Description String XmlSpace Declaration public string XmlSpace { get; set; } Property Value Type Description String Methods GetAttribute(String, Double) Declaration public double GetAttribute(string name, double defValue) Parameters Type Name Description String name Double defValue Returns Type Description Double GetAttribute(String, Int32) Declaration public int GetAttribute(string name, int defValue) Parameters Type Name Description String name Int32 defValue Returns Type Description Int32 GetAttribute(String, Int64) Declaration public long GetAttribute(string name, long defValue) Parameters Type Name Description String name Int64 defValue Returns Type Description Int64 GetAttribute(String, Single) Declaration public float GetAttribute(string name, float defValue) Parameters Type Name Description String name Single defValue Returns Type Description Single ResolveUri(String) Declaration public string ResolveUri(string uri) Parameters Type Name Description String uri Returns Type Description String SetAttribute(String, Double) Declaration public void SetAttribute(string name, double value) Parameters Type Name Description String name Double value SetAttribute(String, Int32) Declaration public void SetAttribute(string name, int value) Parameters Type Name Description String name Int32 value SetAttribute(String, Int64) Declaration public void SetAttribute(string name, long value) Parameters Type Name Description String name Int64 value SetAttribute(String, Single) Declaration public void SetAttribute(string name, float value) Parameters Type Name Description String name Single value Explicit Interface Implementations ISvgElement.OwnerSvgElement Declaration ISvgSvgElement ISvgElement.OwnerSvgElement { get; } Returns Type Description ISvgSvgElement ISvgElement.ViewportElement Declaration ISvgElement ISvgElement.ViewportElement { get; } Returns Type Description ISvgElement Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgElementFactory.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementFactory.html",
    "title": "Class SvgElementFactory | SharpVectors Documentation",
    "keywords": "Class SvgElementFactory Inheritance Object SvgElementFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public static class SvgElementFactory Methods Create(String, String, String, SvgDocument) Declaration public static XmlElement Create(string prefix, string localName, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localName String ns SvgDocument doc Returns Type Description XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.html",
    "title": "Class SvgElementInstance | SharpVectors Documentation",
    "keywords": "Class SvgElementInstance Inheritance Object SvgElementInstance Implements IEventTargetSupport ISvgElementInstance IEventTarget Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgElementInstance : IEventTargetSupport, ISvgElementInstance, IEventTarget Constructors SvgElementInstance(XmlNode, SvgUseElement, SvgElementInstance) Declaration public SvgElementInstance(XmlNode refNode, SvgUseElement useElement, SvgElementInstance parent) Parameters Type Name Description XmlNode refNode SvgUseElement useElement SvgElementInstance parent Properties ChildNodes Declaration public ISvgElementInstanceList ChildNodes { get; } Property Value Type Description ISvgElementInstanceList CorrespondingElement Declaration public ISvgElement CorrespondingElement { get; } Property Value Type Description ISvgElement CorrespondingUseElement Declaration public ISvgUseElement CorrespondingUseElement { get; } Property Value Type Description ISvgUseElement FirstChild Declaration public ISvgElementInstance FirstChild { get; } Property Value Type Description ISvgElementInstance LastChild Declaration public ISvgElementInstance LastChild { get; } Property Value Type Description ISvgElementInstance NextSibling Declaration public ISvgElementInstance NextSibling { get; } Property Value Type Description ISvgElementInstance ParentNode Declaration public ISvgElementInstance ParentNode { get; } Property Value Type Description ISvgElementInstance PreviousSibling Declaration public ISvgElementInstance PreviousSibling { get; } Property Value Type Description ISvgElementInstance Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventObject) Parameters Type Name Description IEvent eventObject Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventObject) Parameters Type Name Description IEvent eventObject Implements IEventTargetSupport ISvgElementInstance IEventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstanceList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstanceList.html",
    "title": "Class SvgElementInstanceList | SharpVectors Documentation",
    "keywords": "Class SvgElementInstanceList Inheritance Object SvgElementInstanceList Implements ISvgElementInstanceList Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgElementInstanceList : ISvgElementInstanceList Constructors SvgElementInstanceList(SvgUseElement, SvgElementInstance) Declaration public SvgElementInstanceList(SvgUseElement useElement, SvgElementInstance parent) Parameters Type Name Description SvgUseElement useElement SvgElementInstance parent Properties Length Declaration public ulong Length { get; } Property Value Type Description UInt64 Methods Item(UInt64) Declaration public ISvgElementInstance Item(ulong index) Parameters Type Name Description UInt64 index Returns Type Description ISvgElementInstance Implements ISvgElementInstanceList"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.html",
    "title": "Class SvgEllipseElement | SharpVectors Documentation",
    "keywords": "Class SvgEllipseElement The SvgEllipseElement class corresponds to the 'ellipse' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgEllipseElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgEllipseElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgEllipseElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgEllipseElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Constructors SvgEllipseElement(String, String, String, SvgDocument) Declaration public SvgEllipseElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Cx Declaration public ISvgAnimatedLength Cx { get; } Property Value Type Description ISvgAnimatedLength Cy Declaration public ISvgAnimatedLength Cy { get; } Property Value Type Description ISvgAnimatedLength ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList Rx Declaration public ISvgAnimatedLength Rx { get; } Property Value Type Description ISvgAnimatedLength Ry Declaration public ISvgAnimatedLength Ry { get; } Property Value Type Description ISvgAnimatedLength SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Invalidate() Declaration public void Invalidate() Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgEllipseElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgException.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgException.html",
    "title": "Class SvgException | SharpVectors Documentation",
    "keywords": "Class SvgException Inheritance Object Exception DomException SvgException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax [Serializable] public class SvgException : DomException, ISerializable, _Exception Constructors SvgException(SvgExceptionType) Declaration public SvgException(SvgExceptionType errorCode) Parameters Type Name Description SvgExceptionType errorCode SvgException(SvgExceptionType, String) Declaration public SvgException(SvgExceptionType errorCode, string message) Parameters Type Name Description SvgExceptionType errorCode String message SvgException(SvgExceptionType, String, Exception) Declaration public SvgException(SvgExceptionType errorCode, string message, Exception innerException) Parameters Type Name Description SvgExceptionType errorCode String message Exception innerException SvgException(SerializationInfo, StreamingContext) Declaration protected SvgException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Properties Code Declaration public SvgExceptionType Code { get; } Property Value Type Description SvgExceptionType Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/SharpVectors.Dom.Svg.SvgExceptionType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgExceptionType.html",
    "title": "Enum SvgExceptionType | SharpVectors Documentation",
    "keywords": "Enum SvgExceptionType Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public enum SvgExceptionType Fields SvgInvalidValueErr SvgMatrixNotInvertable SvgWrongTypeErr Name Description SvgInvalidValueErr SvgMatrixNotInvertable SvgWrongTypeErr"
  },
  "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequired.html",
    "title": "Class SvgExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Class SvgExternalResourcesRequired Inheritance Object SvgExternalResourcesRequired Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgExternalResourcesRequired Constructors SvgExternalResourcesRequired(SvgElement) Declaration public SvgExternalResourcesRequired(SvgElement ownerElement) Parameters Type Name Description SvgElement ownerElement Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequiredException.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequiredException.html",
    "title": "Class SvgExternalResourcesRequiredException | SharpVectors Documentation",
    "keywords": "Class SvgExternalResourcesRequiredException Inheritance Object Exception DomException SvgExternalResourcesRequiredException Implements ISerializable _Exception Inherited Members DomException.Code Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax [Serializable] public class SvgExternalResourcesRequiredException : DomException, ISerializable, _Exception Constructors SvgExternalResourcesRequiredException() Declaration public SvgExternalResourcesRequiredException() SvgExternalResourcesRequiredException(SerializationInfo, StreamingContext) Declaration protected SvgExternalResourcesRequiredException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/SharpVectors.Dom.Svg.SvgFEBlendElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEBlendElement.html",
    "title": "Class SvgFEBlendElement | SharpVectors Documentation",
    "keywords": "Class SvgFEBlendElement This filter blends two objects together using commonly used imaging software blending modes. It performs a pixel-wise combination of two input images. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEBlendElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEBlendElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEBlendElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEBlendElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEBlendElement(String, String, String, SvgDocument) Declaration public SvgFEBlendElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" In2 Corresponds to attribute in2 on the given feBlend element. Declaration public ISvgAnimatedString In2 { get; } Property Value Type Description ISvgAnimatedString Mode One of the blend modes defined by 'Compositing and Blending Level 1' with the input in representing the source Cs and the second input in2 representing the backdrop Cb . The output of this filter primitive Cm is the result of blending Cs with Cb . Declaration public ISvgAnimatedEnumeration Mode { get; } Property Value Type Description ISvgAnimatedEnumeration mode = \"blend-mode\" An enumeration of the type SvgFilterBlendMode . The default value is Normal . Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEBlendElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.html",
    "title": "Class SvgFEColorMatrixElement | SharpVectors Documentation",
    "keywords": "Class SvgFEColorMatrixElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEColorMatrixElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEColorMatrixElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEColorMatrixElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEColorMatrixElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEColorMatrixElement(String, String, String, SvgDocument) Declaration public SvgFEColorMatrixElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" Type Declaration public ISvgAnimatedEnumeration Type { get; } Property Value Type Description ISvgAnimatedEnumeration An enumeration of the type SvgFilterColorMatrix . The default value is Matrix . Values Declaration public ISvgAnimatedNumberList Values { get; } Property Value Type Description ISvgAnimatedNumberList Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEColorMatrixElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.html",
    "title": "Class SvgFEComponentTransferElement | SharpVectors Documentation",
    "keywords": "Class SvgFEComponentTransferElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEComponentTransferElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEComponentTransferElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEComponentTransferElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEComponentTransferElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEComponentTransferElement(String, String, String, SvgDocument) Declaration public SvgFEComponentTransferElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEComponentTransferElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.html",
    "title": "Class SvgFECompositeElement | SharpVectors Documentation",
    "keywords": "Class SvgFECompositeElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFECompositeElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFECompositeElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFECompositeElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFECompositeElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFECompositeElement(String, String, String, SvgDocument) Declaration public SvgFECompositeElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" In2 Corresponds to attribute in2 on the given feBlend element. Declaration public ISvgAnimatedString In2 { get; } Property Value Type Description ISvgAnimatedString K1 Declaration public ISvgAnimatedNumber K1 { get; } Property Value Type Description ISvgAnimatedNumber K2 Declaration public ISvgAnimatedNumber K2 { get; } Property Value Type Description ISvgAnimatedNumber K3 Declaration public ISvgAnimatedNumber K3 { get; } Property Value Type Description ISvgAnimatedNumber K4 Declaration public ISvgAnimatedNumber K4 { get; } Property Value Type Description ISvgAnimatedNumber Operator Declaration public ISvgAnimatedEnumeration Operator { get; } Property Value Type Description ISvgAnimatedEnumeration An enumeration of the type SvgFilterCompositeOperator . The default value is Over . Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFECompositeElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.html",
    "title": "Class SvgFEConvolveMatrixElement | SharpVectors Documentation",
    "keywords": "Class SvgFEConvolveMatrixElement This applies a matrix convolution filter effect. A convolution combines pixels in the input image with neighboring pixels to produce a resulting image. A wide variety of imaging operations can be achieved through convolutions, including blurring, edge detection, sharpening, embossing and beveling. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEConvolveMatrixElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEConvolveMatrixElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEConvolveMatrixElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEConvolveMatrixElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEConvolveMatrixElement(String, String, String, SvgDocument) Declaration public SvgFEConvolveMatrixElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Bias Declaration public ISvgAnimatedNumber Bias { get; } Property Value Type Description ISvgAnimatedNumber bias = \"number\" Remarks After applying the 'kernelMatrix' to the input image to yield a number and applying the 'divisor', the 'bias' attribute is added to each component. One application of 'bias' is when it is desirable to have .5 gray value be the zero response of the filter. The bias property shifts the range of the filter. This allows representation of values that would otherwise be clamped to 0 or 1. If 'bias' is not specified, then the effect is as if a value of 0 were specified. Divisor Declaration public ISvgAnimatedNumber Divisor { get; } Property Value Type Description ISvgAnimatedNumber divisor = number Remarks After applying the KernelMatrix to the input image to yield a number, that number is divided by 'divisor' to yield the final destination color value. A divisor that is the sum of all the matrix values tends to have an evening effect on the overall color intensity of the result. It is an error to specify a divisor of zero. The default value is the sum of all values in KernelMatrix , with the exception that if the sum is zero, then the divisor is set to 1. EdgeMode Determines how to extend the input image as necessary with color values so that the matrix operations can be applied when the kernel is positioned at or near the edge of the input image. Declaration public ISvgAnimatedEnumeration EdgeMode { get; } Property Value Type Description ISvgAnimatedEnumeration edgeMode = \"duplicate | wrap | none\" An enumeration of the type SvgFilterEdgeMode . The default value is Duplicate . Remarks \"duplicate\" indicates that the input image is extended along each of its borders as necessary by duplicating the color values at the given edge of the input image. \"wrap\" indicates that the input image is extended by taking the color values from the opposite edge of the image. \"none\" indicates that the input image is extended with pixel values of zero for R, G, B and A. If attribute 'edgeMode' is not specified, then the effect is as if a value of duplicate were specified. KernelMatrix Declaration public ISvgAnimatedNumberList KernelMatrix { get; } Property Value Type Description ISvgAnimatedNumberList kernelMatrix = \"list of numbers\" Remarks The list of number s that make up the kernel matrix for the convolution. Values are separated by space characters and/or a comma. The number of entries in the list must equal OrderX times OrderY . KernelUnitLengthX Corresponds to attribute 'kernelUnitLength' on the given 'feConvolveMatrix' element. Declaration public ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value Type Description ISvgAnimatedNumber KernelUnitLengthY Corresponds to attribute 'kernelUnitLength' on the given 'feConvolveMatrix' element. Declaration public ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value Type Description ISvgAnimatedNumber OrderX Indicates the number of cells in each dimension for 'kernelMatrix'. Declaration public ISvgAnimatedInteger OrderX { get; } Property Value Type Description ISvgAnimatedInteger order = \"number-optional-number\" The values provided must be integer s greater than zero. The first number, OrderX , indicates the number of columns in the matrix. The second number, OrderY , indicates the number of rows in the matrix. If OrderY is not provided, it defaults to OrderX . Remarks A typical value is order=\"3\". It is recommended that only small values(e.g., 3) be used; higher values may result in very high CPU overhead and usually do not produce results that justify the impact on performance. If the attribute is not specified, the effect is as if a value of 3 were specified. OrderY Indicates the number of cells in each dimension for 'kernelMatrix'. Declaration public ISvgAnimatedInteger OrderY { get; } Property Value Type Description ISvgAnimatedInteger order = \"number-optional-number\" The values provided must be integer s greater than zero. The first number, OrderX , indicates the number of columns in the matrix. The second number, OrderY , indicates the number of rows in the matrix. If OrderY is not provided, it defaults to OrderX . Remarks A typical value is order=\"3\". It is recommended that only small values(e.g., 3) be used; higher values may result in very high CPU overhead and usually do not produce results that justify the impact on performance. If the attribute is not specified, the effect is as if a value of 3 were specified. PreserveAlpha Declaration public ISvgAnimatedBoolean PreserveAlpha { get; } Property Value Type Description ISvgAnimatedBoolean preserveAlpha = \"false | true\" TargetX Determines the positioning in X of the convolution matrix relative to a given target pixel in the input image. Declaration public ISvgAnimatedInteger TargetX { get; } Property Value Type Description ISvgAnimatedInteger targetX = \"integer\" The leftmost column of the matrix is column number zero. The value must be such that: 0 <= targetX < orderX. By default, the convolution matrix is centered in X over each pixel of the input image (i.e., targetX = floor ( orderX / 2 ) ). TargetY Determines the positioning in Y of the convolution matrix relative to a given target pixel in the input image. Declaration public ISvgAnimatedInteger TargetY { get; } Property Value Type Description ISvgAnimatedInteger targetY = \"integer\" The leftmost column of the matrix is column number zero. The value must be such that: 0 <= targetY < orderY. By default, the convolution matrix is centered in Y over each pixel of the input image (i.e., targetY = floor ( orderY / 2 ) ). Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEConvolveMatrixElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.html",
    "title": "Class SvgFEDiffuseLightingElement | SharpVectors Documentation",
    "keywords": "Class SvgFEDiffuseLightingElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEDiffuseLightingElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEDiffuseLightingElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEDiffuseLightingElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEDiffuseLightingElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEDiffuseLightingElement(String, String, String, SvgDocument) Declaration public SvgFEDiffuseLightingElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties DiffuseConstant Corresponds to attribute 'diffuseConstant' on the given 'feDiffuseLighting' element. Declaration public ISvgAnimatedNumber DiffuseConstant { get; } Property Value Type Description ISvgAnimatedNumber diffuseConstant = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feDiffuseLighting element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" KernelUnitLengthX Corresponds to attribute 'kernelUnitLength' on the given 'feDiffuseLighting' element. Declaration public ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value Type Description ISvgAnimatedNumber KernelUnitLengthY Corresponds to attribute 'kernelUnitLength' on the given 'feDiffuseLighting' element. Declaration public ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value Type Description ISvgAnimatedNumber SurfaceScale Corresponds to attribute 'surfaceScale' on the given 'feDiffuseLighting' element. Declaration public ISvgAnimatedNumber SurfaceScale { get; } Property Value Type Description ISvgAnimatedNumber surfaceScale = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEDiffuseLightingElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.html",
    "title": "Class SvgFEDisplacementMapElement | SharpVectors Documentation",
    "keywords": "Class SvgFEDisplacementMapElement This filter primitive uses the pixels values from the image from 'in2' to spatially displace the image from 'in'. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEDisplacementMapElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEDisplacementMapElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEDisplacementMapElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEDisplacementMapElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEDisplacementMapElement(String, String, String, SvgDocument) Declaration public SvgFEDisplacementMapElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" In2 Corresponds to attribute in2 on the given feBlend element. Declaration public ISvgAnimatedString In2 { get; } Property Value Type Description ISvgAnimatedString Scale Displacement scale factor. The amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Declaration public ISvgAnimatedNumber Scale { get; } Property Value Type Description ISvgAnimatedNumber scale = \"number\" When the value of this attribute is 0 , this operation has no effect on the source image. If the attribute is not specified, then the effect is as if a value of 0 were specified. XChannelSelector Indicates which channel from 'in2' to use to displace the pixels in 'in' along the x-axis. Declaration public ISvgAnimatedEnumeration XChannelSelector { get; } Property Value Type Description ISvgAnimatedEnumeration xChannelSelector = \"R | G | B | A\" An enumeration of the type SvgFilterChannelSelector . The default value is A . Remarks If attribute 'xChannelSelector' is not specified, then the effect is as if a value of A were specified. YChannelSelector Indicates which channel from 'in2' to use to displace the pixels in 'in' along the y-axis. Declaration public ISvgAnimatedEnumeration YChannelSelector { get; } Property Value Type Description ISvgAnimatedEnumeration yChannelSelector = \"R | G | B | A\" An enumeration of the type SvgFilterChannelSelector . The default value is A . Remarks If attribute 'yChannelSelector' is not specified, then the effect is as if a value of A were specified. Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEDisplacementMapElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.html",
    "title": "Class SvgFEDistantLightElement | SharpVectors Documentation",
    "keywords": "Class SvgFEDistantLightElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFEDistantLightElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEDistantLightElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEDistantLightElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEDistantLightElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFEDistantLightElement(String, String, String, SvgDocument) Declaration public SvgFEDistantLightElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Azimuth Direction angle for the light source on the XY plane (clockwise), in degrees from the x axis. Declaration public ISvgAnimatedNumber Azimuth { get; } Property Value Type Description ISvgAnimatedNumber Corresponds to attribute 'azimuth' on the given 'feDistantLight' element. azimuth = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Elevation Direction angle for the light source from the XY plane towards the z axis, in degrees. Note the positive Z-axis points towards the viewer of the content. Declaration public ISvgAnimatedNumber Elevation { get; } Property Value Type Description ISvgAnimatedNumber Corresponds to attribute 'elevation' on the given 'feDistantLight' element. elevation = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEDistantLightElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFloodElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFloodElement.html",
    "title": "Class SvgFEFloodElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFloodElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEFloodElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFloodElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEFloodElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFloodElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEFloodElement(String, String, String, SvgDocument) Declaration public SvgFEFloodElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFloodElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncAElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncAElement.html",
    "title": "Class SvgFEFuncAElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFuncAElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement SvgFEFuncAElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncAElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgComponentTransferFunctionElement._reSeparators SvgComponentTransferFunctionElement._type SvgComponentTransferFunctionElement._tableValues SvgComponentTransferFunctionElement._slope SvgComponentTransferFunctionElement._intercept SvgComponentTransferFunctionElement._amplitude SvgComponentTransferFunctionElement._exponent SvgComponentTransferFunctionElement._offset SvgComponentTransferFunctionElement.IsRenderable SvgComponentTransferFunctionElement.Type SvgComponentTransferFunctionElement.TableValues SvgComponentTransferFunctionElement.Slope SvgComponentTransferFunctionElement.Intercept SvgComponentTransferFunctionElement.Amplitude SvgComponentTransferFunctionElement.Exponent SvgComponentTransferFunctionElement.Offset SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEFuncAElement : SvgComponentTransferFunctionElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFuncAElement, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFEFuncAElement(String, String, String, SvgDocument) Declaration public SvgFEFuncAElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncAElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncBElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncBElement.html",
    "title": "Class SvgFEFuncBElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFuncBElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement SvgFEFuncBElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncBElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgComponentTransferFunctionElement._reSeparators SvgComponentTransferFunctionElement._type SvgComponentTransferFunctionElement._tableValues SvgComponentTransferFunctionElement._slope SvgComponentTransferFunctionElement._intercept SvgComponentTransferFunctionElement._amplitude SvgComponentTransferFunctionElement._exponent SvgComponentTransferFunctionElement._offset SvgComponentTransferFunctionElement.IsRenderable SvgComponentTransferFunctionElement.Type SvgComponentTransferFunctionElement.TableValues SvgComponentTransferFunctionElement.Slope SvgComponentTransferFunctionElement.Intercept SvgComponentTransferFunctionElement.Amplitude SvgComponentTransferFunctionElement.Exponent SvgComponentTransferFunctionElement.Offset SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEFuncBElement : SvgComponentTransferFunctionElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFuncBElement, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFEFuncBElement(String, String, String, SvgDocument) Declaration public SvgFEFuncBElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncBElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncGElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncGElement.html",
    "title": "Class SvgFEFuncGElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFuncGElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement SvgFEFuncGElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncGElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgComponentTransferFunctionElement._reSeparators SvgComponentTransferFunctionElement._type SvgComponentTransferFunctionElement._tableValues SvgComponentTransferFunctionElement._slope SvgComponentTransferFunctionElement._intercept SvgComponentTransferFunctionElement._amplitude SvgComponentTransferFunctionElement._exponent SvgComponentTransferFunctionElement._offset SvgComponentTransferFunctionElement.IsRenderable SvgComponentTransferFunctionElement.Type SvgComponentTransferFunctionElement.TableValues SvgComponentTransferFunctionElement.Slope SvgComponentTransferFunctionElement.Intercept SvgComponentTransferFunctionElement.Amplitude SvgComponentTransferFunctionElement.Exponent SvgComponentTransferFunctionElement.Offset SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEFuncGElement : SvgComponentTransferFunctionElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFuncGElement, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFEFuncGElement(String, String, String, SvgDocument) Declaration public SvgFEFuncGElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncGElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncRElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncRElement.html",
    "title": "Class SvgFEFuncRElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFuncRElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement SvgFEFuncRElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncRElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgComponentTransferFunctionElement._reSeparators SvgComponentTransferFunctionElement._type SvgComponentTransferFunctionElement._tableValues SvgComponentTransferFunctionElement._slope SvgComponentTransferFunctionElement._intercept SvgComponentTransferFunctionElement._amplitude SvgComponentTransferFunctionElement._exponent SvgComponentTransferFunctionElement._offset SvgComponentTransferFunctionElement.IsRenderable SvgComponentTransferFunctionElement.Type SvgComponentTransferFunctionElement.TableValues SvgComponentTransferFunctionElement.Slope SvgComponentTransferFunctionElement.Intercept SvgComponentTransferFunctionElement.Amplitude SvgComponentTransferFunctionElement.Exponent SvgComponentTransferFunctionElement.Offset SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEFuncRElement : SvgComponentTransferFunctionElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFuncRElement, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFEFuncRElement(String, String, String, SvgDocument) Declaration public SvgFEFuncRElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncRElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.html",
    "title": "Class SvgFEGaussianBlurElement | SharpVectors Documentation",
    "keywords": "Class SvgFEGaussianBlurElement This filter primitive performs a Gaussian blur on the input image. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEGaussianBlurElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEGaussianBlurElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEGaussianBlurElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEGaussianBlurElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEGaussianBlurElement(String, String, String, SvgDocument) Declaration public SvgFEGaussianBlurElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" StdDeviationX Declaration public ISvgAnimatedNumber StdDeviationX { get; } Property Value Type Description ISvgAnimatedNumber Remarks The standard deviation for the blur operation. If two number s are provided, the first number represents a standard deviation value along the x-axis of the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. The second value represents a standard deviation in Y. If one number is provided, then that value is used for both X and Y. A negative value is an error(see Error processing). A value of zero disables the effect of the given filter primitive(i.e., the result is the filter input image). If 'stdDeviation' is 0 in only one of X or Y, then the effect is that the blur is only applied in the direction that has a non-zero value. StdDeviationY Declaration public ISvgAnimatedNumber StdDeviationY { get; } Property Value Type Description ISvgAnimatedNumber Remarks The standard deviation for the blur operation. If two number s are provided, the first number represents a standard deviation value along the x-axis of the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. The second value represents a standard deviation in Y. If one number is provided, then that value is used for both X and Y. A negative value is an error(see Error processing). A value of zero disables the effect of the given filter primitive(i.e., the result is the filter input image). If 'stdDeviation' is 0 in only one of X or Y, then the effect is that the blur is only applied in the direction that has a non-zero value. Methods SetStdDeviation(Single, Single) Declaration public void SetStdDeviation(float stdDeviationX, float stdDeviationY) Parameters Type Name Description Single stdDeviationX Single stdDeviationY Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEGaussianBlurElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEImageElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEImageElement.html",
    "title": "Class SvgFEImageElement | SharpVectors Documentation",
    "keywords": "Class SvgFEImageElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEImageElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEImageElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgLangSpace ISvgExternalResourcesRequired ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEImageElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEImageElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEImageElement(String, String, String, SvgDocument) Declaration public SvgFEImageElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString PreserveAspectRatio Declaration public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEImageElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgLangSpace ISvgExternalResourcesRequired ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMergeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMergeElement.html",
    "title": "Class SvgFEMergeElement | SharpVectors Documentation",
    "keywords": "Class SvgFEMergeElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEMergeElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEMergeElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEMergeElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEMergeElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEMergeElement(String, String, String, SvgDocument) Declaration public SvgFEMergeElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEMergeElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.html",
    "title": "Class SvgFEMergeNodeElement | SharpVectors Documentation",
    "keywords": "Class SvgFEMergeNodeElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFEMergeNodeElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEMergeNodeElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEMergeNodeElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEMergeNodeElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFEMergeNodeElement(String, String, String, SvgDocument) Declaration public SvgFEMergeNodeElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEMergeNodeElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.html",
    "title": "Class SvgFEMorphologyElement | SharpVectors Documentation",
    "keywords": "Class SvgFEMorphologyElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEMorphologyElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEMorphologyElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEMorphologyElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEMorphologyElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEMorphologyElement(String, String, String, SvgDocument) Declaration public SvgFEMorphologyElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" Operator A keyword indicating whether to erode (i.e., thin) or dilate (fatten) the source graphic. Declaration public ISvgAnimatedEnumeration Operator { get; } Property Value Type Description ISvgAnimatedEnumeration operator = \"erode | dilate\" An enumeration of the type SvgFilterMorphologyOperator . The default value is Erode . Remarks If attribute 'operator' is not specified, then the effect is as if a value of erode were specified. RadiusX Declaration public ISvgAnimatedNumber RadiusX { get; } Property Value Type Description ISvgAnimatedNumber Remarks The radius (or radii) for the operation. If two number s are provided, the first number represents a x-radius and the second value represents a y-radius. If one number is provided, then that value is used for both X and Y. The values are in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. A negative value is an error(see Error processing). A value of zero disables the effect of the given filter primitive(i.e., the result is a transparent black image). If the attribute is not specified, then the effect is as if a value of 0 were specified. RadiusY Declaration public ISvgAnimatedNumber RadiusY { get; } Property Value Type Description ISvgAnimatedNumber Remarks The radius (or radii) for the operation. If two number s are provided, the first number represents a x-radius and the second value represents a y-radius. If one number is provided, then that value is used for both X and Y. The values are in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. A negative value is an error(see Error processing). A value of zero disables the effect of the given filter primitive(i.e., the result is a transparent black image). If the attribute is not specified, then the effect is as if a value of 0 were specified. Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEMorphologyElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.html",
    "title": "Class SvgFEOffsetElement | SharpVectors Documentation",
    "keywords": "Class SvgFEOffsetElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEOffsetElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEOffsetElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEOffsetElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEOffsetElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFEOffsetElement(String, String, String, SvgDocument) Declaration public SvgFEOffsetElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Dx The amount to offset the input graphic along the x-axis. The offset amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Declaration public ISvgAnimatedNumber Dx { get; } Property Value Type Description ISvgAnimatedNumber dx = \"number\" Remarks Corresponds to attribute 'dx' on the given 'feOffset' element. Dy The amount to offset the input graphic along the y-axis. The offset amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Declaration public ISvgAnimatedNumber Dy { get; } Property Value Type Description ISvgAnimatedNumber dy = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'dy' on the given 'feOffset' element. In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEOffsetElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.html",
    "title": "Class SvgFEPointLightElement | SharpVectors Documentation",
    "keywords": "Class SvgFEPointLightElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFEPointLightElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEPointLightElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFEPointLightElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEPointLightElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFEPointLightElement(String, String, String, SvgDocument) Declaration public SvgFEPointLightElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable X X location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Declaration public ISvgAnimatedNumber X { get; } Property Value Type Description ISvgAnimatedNumber x = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'x' on the given 'fePointLight' element. Y Y location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Declaration public ISvgAnimatedNumber Y { get; } Property Value Type Description ISvgAnimatedNumber y = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'y' on the given 'fePointLight' element. Z Z location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element, assuming that, in the initial coordinate system, the positive Z-axis comes out towards the person viewing the content and assuming that one unit along the Z-axis equals one unit in X and Y. Declaration public ISvgAnimatedNumber Z { get; } Property Value Type Description ISvgAnimatedNumber z = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'z' on the given 'fePointLight' element. Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEPointLightElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.html",
    "title": "Class SvgFESpecularLightingElement | SharpVectors Documentation",
    "keywords": "Class SvgFESpecularLightingElement This filter primitive lights a source graphic using the alpha channel as a bump map. The resulting image is an RGBA image based on the light color. The lighting calculation follows the standard specular component of the Phong lighting model. The resulting image depends on the light color, light position and surface geometry of the input bump map. The result of the lighting calculation is added. The filter primitive assumes that the viewer is at infinity in the z direction (i.e., the unit vector in the eye direction is (0,0,1) everywhere). Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFESpecularLightingElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFESpecularLightingElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFESpecularLightingElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFESpecularLightingElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFESpecularLightingElement(String, String, String, SvgDocument) Declaration public SvgFESpecularLightingElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" Remarks Corresponds to attribute 'in' on the given 'feSpecularLighting' element. KernelUnitLengthX Corresponds to attribute 'kernelUnitLength' on the given 'feSpecularLighting' element. Declaration public ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value Type Description ISvgAnimatedNumber Remarks The first number is the dx value. The second number is the dy value. If the dy value is not specified, it defaults to the same value as dx . Indicates the intended distance in current filter units (i.e., units as determined by the value of attribute 'primitiveUnits') for dx and dy, respectively, in the surface normal calculation formulas. By specifying value(s) for 'kernelUnitLength', the kernel becomes defined in a scalable, abstract coordinate system. If 'kernelUnitLength' is not specified, the dx and dy values should represent very small deltas relative to a given (x,y) position, which might be implemented in some cases as one pixel in the intermediate image offscreen bitmap, which is a pixel-based coordinate system, and thus potentially not scalable. For some level of consistency across display media and user agents, it is necessary that a value be provided for at least one of 'filterRes' and 'kernelUnitLength'. KernelUnitLengthY Corresponds to attribute 'kernelUnitLength' on the given 'feSpecularLighting' element. Declaration public ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value Type Description ISvgAnimatedNumber Remarks The first number is the dx value. The second number is the dy value. If the dy value is not specified, it defaults to the same value as dx . Indicates the intended distance in current filter units (i.e., units as determined by the value of attribute 'primitiveUnits') for dx and dy, respectively, in the surface normal calculation formulas. By specifying value(s) for 'kernelUnitLength', the kernel becomes defined in a scalable, abstract coordinate system. If 'kernelUnitLength' is not specified, the dx and dy values should represent very small deltas relative to a given (x,y) position, which might be implemented in some cases as one pixel in the intermediate image offscreen bitmap, which is a pixel-based coordinate system, and thus potentially not scalable. For some level of consistency across display media and user agents, it is necessary that a value be provided for at least one of 'filterRes' and 'kernelUnitLength'. SpecularConstant Declaration public ISvgAnimatedNumber SpecularConstant { get; } Property Value Type Description ISvgAnimatedNumber specularConstant = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'specularConstant' on the given 'feSpecularLighting' element. SpecularExponent Declaration public ISvgAnimatedNumber SpecularExponent { get; } Property Value Type Description ISvgAnimatedNumber specularExponent = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'specularExponent' on the given 'feSpecularLighting' element. SurfaceScale Declaration public ISvgAnimatedNumber SurfaceScale { get; } Property Value Type Description ISvgAnimatedNumber surfaceScale = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'surfaceScale' on the given 'feSpecularLighting' element. Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFESpecularLightingElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.html",
    "title": "Class SvgFESpotLightElement | SharpVectors Documentation",
    "keywords": "Class SvgFESpotLightElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFESpotLightElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFESpotLightElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFESpotLightElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFESpotLightElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFESpotLightElement(String, String, String, SvgDocument) Declaration public SvgFESpotLightElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable LimitingConeAngle A limiting cone which restricts the region where the light is projected. No light is projected outside the cone. 'limitingConeAngle' represents the angle in degrees between the spot light axis (i.e. the axis between the light source and the point to which it is pointing at) and the spot light cone. User agents should apply a smoothing technique such as anti-aliasing at the boundary of the cone. Declaration public ISvgAnimatedNumber LimitingConeAngle { get; } Property Value Type Description ISvgAnimatedNumber limitingConeAngle = \"number\" If no value is specified, then no limiting cone will be applied. Remarks Corresponds to attribute 'limitingConeAngle' on the given 'feSpotLight' element. PointsAtX X location in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element of the point at which the light source is pointing. Declaration public ISvgAnimatedNumber PointsAtX { get; } Property Value Type Description ISvgAnimatedNumber pointsAtX = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'pointsAtX' on the given 'feSpotLight' element. PointsAtY Y location in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element of the point at which the light source is pointing. Declaration public ISvgAnimatedNumber PointsAtY { get; } Property Value Type Description ISvgAnimatedNumber pointsAtY = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'pointsAtY' on the given 'feSpotLight' element. PointsAtZ Z location in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element of the point at which the light source is pointing, assuming that, in the initial coordinate system, the positive Z-axis comes out towards the person viewing the content and assuming that one unit along the Z-axis equals one unit in X and Y. Declaration public ISvgAnimatedNumber PointsAtZ { get; } Property Value Type Description ISvgAnimatedNumber pointsAtZ = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'pointsAtZ' on the given 'feSpotLight' element. SpecularExponent Exponent value controlling the focus for the light source. Declaration public ISvgAnimatedNumber SpecularExponent { get; } Property Value Type Description ISvgAnimatedNumber specularExponent = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'specularExponent' on the given 'feSpotLight' element. X X location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Declaration public ISvgAnimatedNumber X { get; } Property Value Type Description ISvgAnimatedNumber x = \"number\" Remarks Corresponds to attribute 'x' on the given 'feSpotLight' element. Y Y location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Declaration public ISvgAnimatedNumber Y { get; } Property Value Type Description ISvgAnimatedNumber y = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'y' on the given 'feSpotLight' element. Z Z location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element, assuming that, in the initial coordinate system, the positive Z-axis comes out towards the person viewing the content and assuming that one unit along the Z-axis equals one unit in X and Y. Declaration public ISvgAnimatedNumber Z { get; } Property Value Type Description ISvgAnimatedNumber z = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'z' on the given 'feSpotLight' element. Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFESpotLightElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFETileElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETileElement.html",
    "title": "Class SvgFETileElement | SharpVectors Documentation",
    "keywords": "Class SvgFETileElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFETileElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFETileElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFETileElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFETileElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFETileElement(String, String, String, SvgDocument) Declaration public SvgFETileElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties In Declaration public ISvgAnimatedString In { get; } Property Value Type Description ISvgAnimatedString In1 Corresponds to attribute in on the given feBlend element. Declaration public ISvgAnimatedString In1 { get; } Property Value Type Description ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFETileElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.html",
    "title": "Class SvgFETurbulenceElement | SharpVectors Documentation",
    "keywords": "Class SvgFETurbulenceElement This filter primitive creates an image using the Perlin turbulence function. It allows the synthesis of artificial textures like clouds or marble. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFETurbulenceElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFETurbulenceElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes._reSeparators SvgFilterPrimitiveStandardAttributes._x SvgFilterPrimitiveStandardAttributes._y SvgFilterPrimitiveStandardAttributes._width SvgFilterPrimitiveStandardAttributes._height SvgFilterPrimitiveStandardAttributes._result SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFETurbulenceElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFETurbulenceElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFETurbulenceElement(String, String, String, SvgDocument) Declaration public SvgFETurbulenceElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties BaseFrequencyX Corresponds to attribute 'baseFrequency' on the given 'feTurbulence' element. Contains the X component of the 'baseFrequency' attribute. Declaration public ISvgAnimatedNumber BaseFrequencyX { get; } Property Value Type Description ISvgAnimatedNumber baseFrequency = \"number-optional-number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks The base frequency (frequencies) parameter(s) for the noise function. If two number s are provided, the first number represents a base frequency in the X direction and the second value represents a base frequency in the Y direction. If one number is provided, then that value is used for both X and Y. A negative value for base frequency is an error (see Error processing). BaseFrequencyY Corresponds to attribute 'baseFrequency' on the given 'feTurbulence' element. Contains the Y component of the (possibly computed automatically) 'baseFrequency' attribute. Declaration public ISvgAnimatedNumber BaseFrequencyY { get; } Property Value Type Description ISvgAnimatedNumber baseFrequency = \"number-optional-number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. NumOctaves The numOctaves parameter for the noise function. Declaration public ISvgAnimatedInteger NumOctaves { get; } Property Value Type Description ISvgAnimatedInteger numOctaves = \"integer\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'numOctaves' on the given 'feTurbulence' element. Seed The starting number for the pseudo random number generator. Declaration public ISvgAnimatedNumber Seed { get; } Property Value Type Description ISvgAnimatedNumber seed = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. When the seed number is handed over to the algorithm above it must first be truncated, i.e. rounded to the closest integer value towards zero. Remarks Corresponds to attribute 'seed' on the given 'feTurbulence' element. StitchTiles Corresponds to attribute 'stitchTiles' on the given 'feTurbulence' element. Declaration public ISvgAnimatedEnumeration StitchTiles { get; } Property Value Type Description ISvgAnimatedEnumeration stitchTiles = \"stitch | noStitch\" An enumeration of the type SvgFilterStitchOption . The default value is NoStitch . Remarks If stitchTiles=\"noStitch\", no attempt it made to achieve smooth transitions at the border of tiles which contain a turbulence function. Sometimes the result will show clear discontinuities at the tile borders. If stitchTiles = \"stitch\", then the user agent will automatically adjust baseFrequency-x and baseFrequency-y values such that the feTurbulence node's width and height (i.e., the width and height of the current subregion) contains an integral number of the Perlin tile width and height for the first octave. The baseFrequency will be adjusted up or down depending on which way has the smallest relative (not absolute) change as follows: Given the frequency, calculate lowFreq=floor(width*frequency)/width and hiFreq=ceil(width*frequency)/width. If frequency/lowFreq < hiFreq/frequency then use lowFreq, else use hiFreq. While generating turbulence values, generate lattice vectors as normal for Perlin Noise, except for those lattice points that lie on the right or bottom edges of the active area (the size of the resulting tile). In those cases, copy the lattice vector from the opposite edge of the active area. If attribute 'stitchTiles' is not specified, then the effect is as if a value of noStitch were specified. Type Indicates whether the filter primitive should perform a noise or turbulence function. Declaration public ISvgAnimatedEnumeration Type { get; } Property Value Type Description ISvgAnimatedEnumeration type = \"fractalNoise | turbulence\" An enumeration of the type SvgFilterTurbulenceType . The default value is Turbulence . Remarks Corresponds to attribute 'type' on the given 'feTurbulence' element. If attribute 'type' is not specified, then the effect is as if a value of turbulence were specified. Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFETurbulenceElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterBlendMode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterBlendMode.html",
    "title": "Enum SvgFilterBlendMode | SharpVectors Documentation",
    "keywords": "Enum SvgFilterBlendMode The basic Filter Blend Modes Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgFilterBlendMode : ushort Fields Color ColorBurn ColorDodge Darken Difference Exclusion HardLight Hue Lighten Luminosity Multiply Normal Overlay Saturation Screen SoftLight Unknown Name Description Color Corresponds to value color. ColorBurn Corresponds to value color-burn. ColorDodge Corresponds to value color-dodge. Darken Corresponds to value darken. Difference Corresponds to value difference. Exclusion Corresponds to value exclusion. HardLight Corresponds to value hard-light. Hue Corresponds to value hue. Lighten Corresponds to value lighten. Luminosity Corresponds to value luminosity. Multiply Corresponds to value multiply. Normal Corresponds to value normal. Overlay Corresponds to value overlay. Saturation Corresponds to value saturation. Screen Corresponds to value screen. SoftLight Corresponds to value soft-light. Unknown The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterChannelSelector.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterChannelSelector.html",
    "title": "Enum SvgFilterChannelSelector | SharpVectors Documentation",
    "keywords": "Enum SvgFilterChannelSelector The Filter Channel Selectors Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgFilterChannelSelector : ushort Fields A B G R Unknown Name Description A B G R Unknown"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterColorMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterColorMatrix.html",
    "title": "Enum SvgFilterColorMatrix | SharpVectors Documentation",
    "keywords": "Enum SvgFilterColorMatrix The basic Filter Matrix Types Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgFilterColorMatrix : ushort Fields Huerotate LuminanceToAlpha Matrix Saturate Unknown Name Description Huerotate LuminanceToAlpha Matrix Saturate Unknown"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterCompositeOperator.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterCompositeOperator.html",
    "title": "Enum SvgFilterCompositeOperator | SharpVectors Documentation",
    "keywords": "Enum SvgFilterCompositeOperator The Filter Composite Operators Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgFilterCompositeOperator : ushort Fields Arithmetic Atop In Out Over Unknown Xor Name Description Arithmetic Atop In Out Over Unknown Xor"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterEdgeMode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterEdgeMode.html",
    "title": "Enum SvgFilterEdgeMode | SharpVectors Documentation",
    "keywords": "Enum SvgFilterEdgeMode The Filter Edge Mode Types Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgFilterEdgeMode : ushort Fields Duplicate None Unknown Wrap Name Description Duplicate None Unknown Wrap"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.html",
    "title": "Class SvgFilterElement | SharpVectors Documentation",
    "keywords": "Class SvgFilterElement An implementation of the ISvgFilterElement interface, which corresponds to the 'filter' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFilterElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFilterElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFilterElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Remarks A filter effect is a graphical operation that is applied to an element as it is drawn into the document. It is an image-based effect, in that it takes zero or more images as input, a number of parameters specific to the effect, and then produces an image as output. The output image is either rendered into the document instead of the original element, used as an input image to another filter effect, or provided as a CSS image value. Filter Region A filter element can define a filter region on the canvas to which a given filter effect applies and can provide a resolution for any intermediate continuous tone images used to process any raster-based filter primitives. The filter element has the following attributes which work together to define the filter region: FilterUnits , X , Y , Width , Height Constructors SvgFilterElement(String, String, String, SvgDocument) Declaration public SvgFilterElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Fields BackgroundAlpha Same as BackgroundImage except only the alpha channel is used. See SourceAlpha and the isolation property. Declaration public const string BackgroundAlpha = \"BackgroundAlpha\" Field Value Type Description String BackgroundImage This keyword represents the back drop defined by the current isolation group behind the filter region at the time that the filter element was invoked. Declaration public const string BackgroundImage = \"BackgroundImage\" Field Value Type Description String FillPaint This keyword represents the value of the fill property on the target element for the filter effect. Declaration public const string FillPaint = \"FillPaint\" Field Value Type Description String SourceAlpha This keyword represents the graphics elements that were the original input into the filter element. Declaration public const string SourceAlpha = \"SourceAlpha\" Field Value Type Description String SourceGraphic This keyword represents the graphics elements that were the original input into the filter element. Declaration public const string SourceGraphic = \"SourceGraphic\" Field Value Type Description String StrokePaint This keyword represents the value of the stroke property on the target element for the filter effect. Declaration public const string StrokePaint = \"StrokePaint\" Field Value Type Description String Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean FilterResX The contains the X component of attribute 'filterRes' . The 'filterRes' indicates the width and height of the intermediate images in pixels of a filter primitive. Declaration public ISvgAnimatedInteger FilterResX { get; } Property Value Type Description ISvgAnimatedInteger This value takes one or two values, the first one outlining the resolution in horizontal direction, the second one in vertical direction. If only one value is specified, it is used for both directions. Remarks The 'filterRes' attribute was removed from the SVG 2 specification. FilterResY The contains the X component of attribute 'filterRes' . The 'filterRes' indicates the width and height of the intermediate images in pixels of a filter primitive. Declaration public ISvgAnimatedInteger FilterResY { get; } Property Value Type Description ISvgAnimatedInteger This value takes one or two values, the first one outlining the resolution in horizontal direction, the second one in vertical direction. If only one value is specified, it is used for both directions. Remarks The 'filterRes' attribute was removed from the SVG 2 specification. FilterUnits Gets a value definining the coordinate system for attributes X , Y , Width , Height . Declaration public ISvgAnimatedEnumeration FilterUnits { get; } Property Value Type Description ISvgAnimatedEnumeration filterUnits = \"userSpaceOnUse | objectBoundingBox\" If the value is equal to UserSpaceOnUse , x, y, width, height represent values in the current user coordinate system in place at the time when the filter element is referenced (i.e., the user coordinate system for the element referencing the filter element via a filter property). If the value is equal to ObjectBoundingBox , then x, y, width, height represent fractions or percentages of the bounding box on the referencing element (see object bounding box units). The initial value for filter-units is ObjectBoundingBox . Height Declaration public ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable PrimitiveUnits Gets a value specifying the coordinate system for the various length values within the filter primitives and for the attributes that define the filter primitive subregion. Declaration public ISvgAnimatedEnumeration PrimitiveUnits { get; } Property Value Type Description ISvgAnimatedEnumeration primitiveUnits = \"userSpaceOnUse | objectBoundingBox\" If the value is equal to UserSpaceOnUse , any length values within the filter definitions represent values in the current local coordinate system in place at the time when the filter element is referenced (i.e., the user coordinate system for the element referencing the filter element via a filter property). If the value is equal to ObjectBoundingBox , then any length values within the filter definitions represent fractions or percentages of the bounding box on the referencing element (see object bounding box units). Note that if only one number was specified in a number-optional-number value this number is expanded out before the primitive-units computation takes place. The initial value for primitive-units is UserSpaceOnUse . Width Declaration public ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration public ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration public ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength Methods SetFilterRes(UInt64, UInt64) Sets the values for attribute 'filterRes' . Declaration public void SetFilterRes(ulong filterResX, ulong filterResY) Parameters Type Name Description UInt64 filterResX The X component of attribute 'filterRes' . UInt64 filterResY The Y component of attribute 'filterRes' . Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFilterElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterMorphologyOperator.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterMorphologyOperator.html",
    "title": "Enum SvgFilterMorphologyOperator | SharpVectors Documentation",
    "keywords": "Enum SvgFilterMorphologyOperator The Morphology Operator Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgFilterMorphologyOperator : ushort Fields Dilate Erode Unknown Name Description Dilate Corresponds to value 'dilate'. Erode Corresponds to value 'erode'. Unknown The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.html",
    "title": "Class SvgFilterPrimitiveStandardAttributes | SharpVectors Documentation",
    "keywords": "Class SvgFilterPrimitiveStandardAttributes This is abstract class for filter primitive attributes that are available for all filter primitives: Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEBlendElement SvgFEColorMatrixElement SvgFEComponentTransferElement SvgFECompositeElement SvgFEConvolveMatrixElement SvgFEDiffuseLightingElement SvgFEDisplacementMapElement SvgFEFloodElement SvgFEGaussianBlurElement SvgFEImageElement SvgFEMergeElement SvgFEMorphologyElement SvgFEOffsetElement SvgFESpecularLightingElement SvgFETileElement SvgFETurbulenceElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgFilterPrimitiveStandardAttributes : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Constructors SvgFilterPrimitiveStandardAttributes(String, String, String, SvgDocument) Declaration protected SvgFilterPrimitiveStandardAttributes(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Fields _height Declaration protected ISvgAnimatedLength _height Field Value Type Description ISvgAnimatedLength _reSeparators Declaration protected static readonly Regex _reSeparators Field Value Type Description Regex _result Declaration protected ISvgAnimatedString _result Field Value Type Description ISvgAnimatedString _width Declaration protected ISvgAnimatedLength _width Field Value Type Description ISvgAnimatedLength _x Declaration protected ISvgAnimatedLength _x Field Value Type Description ISvgAnimatedLength _y Declaration protected ISvgAnimatedLength _y Field Value Type Description ISvgAnimatedLength Properties Height The height of the subregion which restricts calculation and rendering of the given filter primitive. Declaration public ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength height = length-percentage A negative or zero value must disable the effect of the given filter primitive (i.e., the result is a transparent black image). The initial value is 100% . IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Result This is an custom-ident and an assigned name for this filter primitive. Declaration public ISvgAnimatedString Result { get; } Property Value Type Description ISvgAnimatedString result = filter-primitive-reference Remarks If supplied, then graphics that result from processing this filter primitive can be referenced by an in attribute on a subsequent filter primitive within the same filter element. If no value is provided, the output will only be available for re-use as the implicit input into the next filter primitive if that filter primitive provides no value for its in attribute. Width The width of the subregion which restricts calculation and rendering of the given filter primitive. Declaration public ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength width = length-percentage A negative or zero value disables the effect of the given filter primitive (i.e., the result is a transparent black image). The initial value is 100% . X The minimum x coordinate for the subregion which restricts calculation and rendering of the given filter primitive. Declaration public ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength x = length-percentage The initial value is 0% . Y The minimum y coordinate for the subregion which restricts calculation and rendering of the given filter primitive. Declaration public ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength y = length-percentage The initial value is 0% . Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterStitchOption.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterStitchOption.html",
    "title": "Enum SvgFilterStitchOption | SharpVectors Documentation",
    "keywords": "Enum SvgFilterStitchOption The Filter Stitch Options Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgFilterStitchOption : ushort Fields NoStitch Stitch Unknown Name Description NoStitch Corresponds to value 'noStitch'. Stitch Corresponds to value 'stitch'. Unknown The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterTransferType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterTransferType.html",
    "title": "Enum SvgFilterTransferType | SharpVectors Documentation",
    "keywords": "Enum SvgFilterTransferType The Filter Component Transfer Types Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgFilterTransferType : ushort Fields Discrete Gamma Identity Linear Table Unknown Name Description Discrete Corresponds to value 'discrete'. Gamma Corresponds to value 'gamma'. Identity Corresponds to value 'identity'. Linear Corresponds to value 'linear'. Table Corresponds to value 'table'. Unknown The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterTurbulenceType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterTurbulenceType.html",
    "title": "Enum SvgFilterTurbulenceType | SharpVectors Documentation",
    "keywords": "Enum SvgFilterTurbulenceType The Filter Turbulence Types Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgFilterTurbulenceType : ushort Fields FractalNoise Turbulence Unknown Name Description FractalNoise Corresponds to value 'fractalNoise'. Turbulence Corresponds to value 'turbulence'. Unknown The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type."
  },
  "api/SharpVectors.Dom.Svg.SvgFitToViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFitToViewBox.html",
    "title": "Class SvgFitToViewBox | SharpVectors Documentation",
    "keywords": "Class SvgFitToViewBox Inheritance Object SvgFitToViewBox SvgViewSpec Implements ISvgFitToViewBox Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgFitToViewBox : ISvgFitToViewBox Constructors SvgFitToViewBox(SvgElement) Declaration public SvgFitToViewBox(SvgElement ownerElement) Parameters Type Name Description SvgElement ownerElement Fields _ownerElement Declaration protected SvgElement _ownerElement Field Value Type Description SvgElement Properties PreserveAspectRatio Declaration public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio ViewBox Declaration public ISvgAnimatedRect ViewBox { get; } Property Value Type Description ISvgAnimatedRect Implements ISvgFitToViewBox"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.html",
    "title": "Class SvgFontElement | SharpVectors Documentation",
    "keywords": "Class SvgFontElement The SvgFontElement interface corresponds to the 'font' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFontElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontElement ISvgElement IElement IXmlElement INode IXmlNode ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFontElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgExternalResourcesRequired, ISvgStylable Constructors SvgFontElement(String, String, String, SvgDocument) Declaration public SvgFontElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean FontFace Declaration public SvgFontFaceElement FontFace { get; } Property Value Type Description SvgFontFaceElement FontFamily Declaration public string FontFamily { get; } Property Value Type Description String Glyphs Declaration public IList<SvgGlyphElement> Glyphs { get; } Property Value Type Description IList < SvgGlyphElement > HorizAdvX Gets or sets the default horizontal advance after rendering a glyph in horizontal orientation. Declaration public float HorizAdvX { get; set; } Property Value Type Description Single Remarks Glyph widths are required to be non-negative, even if the glyph is typically rendered right-to-left, as in Hebrew and Arabic scripts. HorizOriginX Gets or sets X-coordinate in the font coordinate system of the origin of a glyph to be used when drawing horizontally oriented text Declaration public float HorizOriginX { get; set; } Property Value Type Description Single Remarks Note that the origin applies to all glyphs in the font. If the attribute is not specified, the effect is as if a value of '0' were specified. HorizOriginY Gets or sets the Y-coordinate in the font coordinate system of the origin of a glyph to be used when drawing horizontally oriented text. Declaration public float HorizOriginY { get; set; } Property Value Type Description Single Remarks Note that the origin applies to all glyphs in the font. If the attribute is not specified, the effect is as if a value of '0' were specified. IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Kerning Declaration public IList<SvgKernElement> Kerning { get; } Property Value Type Description IList < SvgKernElement > MissingGlyph Declaration public SvgMissingGlyphElement MissingGlyph { get; } Property Value Type Description SvgMissingGlyphElement RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList UnicodeRange Declaration public string UnicodeRange { get; set; } Property Value Type Description String Remarks This is an extension attribute for externally defined fonts with its unicode-range in 'defs' tag. The unicode-range value is lost in the current processing method. VertAdvY Gets or sets the Declaration public float VertAdvY { get; set; } Property Value Type Description Single Remarks VertOriginX Gets or sets the default X-coordinate in the font coordinate system of the origin of a glyph to be used when drawing vertically oriented text. Declaration public float VertOriginX { get; set; } Property Value Type Description Single Remarks If the attribute is not specified, the effect is as if the attribute were set to half of the effective value of attribute ‘horiz-adv-x’. VertOriginY Gets or sets the default Y-coordinate in the font coordinate system of the origin of a glyph to be used when drawing vertically oriented text. Declaration public float VertOriginY { get; set; } Property Value Type Description Single Remarks If the attribute is not specified, the effect is as if the attribute were set to the position specified by the font's ‘ascent’ attribute. Methods HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontElement ISvgElement IElement IXmlElement INode IXmlNode ISvgExternalResourcesRequired ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.html",
    "title": "Class SvgFontFaceElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceElement The SvgFontFaceElement interface corresponds to the 'font-face' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFontFaceElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFontFaceElement(String, String, String, SvgDocument) Declaration public SvgFontFaceElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Alphabetic Declaration public float Alphabetic { get; set; } Property Value Type Description Single Remarks attribute name = \"alphabetic\" {number} Ascent Declaration public float Ascent { get; set; } Property Value Type Description Single Remarks attribute name = \"ascent\" {number} AscentHeight Declaration public float AscentHeight { get; set; } Property Value Type Description Single Remarks attribute name = \"ascent-height\" {number} CapHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. Declaration public float CapHeight { get; set; } Property Value Type Description Single A Single that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size. Remarks attribute name = \"cap-height\" {number} Descent Declaration public float Descent { get; set; } Property Value Type Description Single Remarks attribute name = \"descent\" {number} FontFamily Indicates which font family is to be used to render the text. Declaration public string FontFamily { get; set; } Property Value Type Description String Remarks attribute name = \"font-family\" {string} FontSize Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment. Declaration public string FontSize { get; set; } Property Value Type Description String Remarks attribute name = \"font-size\" {string} FontStretch Declaration public string FontStretch { get; set; } Property Value Type Description String Remarks attribute name = \"font-stretch\" {string} FontStyle Refers to the style of the font. Declaration public string FontStyle { get; set; } Property Value Type Description String Remarks attribute name = \"font-style\" {string} FontVariant Refers to the varient of the font. Declaration public string FontVariant { get; set; } Property Value Type Description String Remarks attribute name = \"font-variant\" {string} FontWeight Refers to the boldness of the font. Declaration public string FontWeight { get; set; } Property Value Type Description String Remarks attribute name = \"font-weight\" {string} IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. Declaration public float OverlinePosition { get; set; } Property Value Type Description Single A Single that indicates the overline position, measured from the baseline and expressed as a fraction of the font em size. Remarks attribute name = \"overline-position\" {number} OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. Declaration public float OverlineThickness { get; set; } Property Value Type Description Single A Single that indicates the overline thickness, expressed as a fraction of the font em size. Remarks attribute name = \"overline-thickness\" {number} Panose1 Declaration public string Panose1 { get; set; } Property Value Type Description String Remarks attribute name = \"panose-1\" {string} StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. Declaration public float StrikethroughPosition { get; set; } Property Value Type Description Single A Single that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size. Remarks attribute name = \"strikethrough-position\" {number} StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. Declaration public float StrikethroughThickness { get; set; } Property Value Type Description Single A Single that indicates the strikethrough thickness, expressed as a fraction of the font em size. Remarks attribute name = \"strikethrough-thickness\" {number} UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. Declaration public float UnderlinePosition { get; set; } Property Value Type Description Single A Single that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size. Remarks attribute name = \"underline-position\" {number} UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. Declaration public float UnderlineThickness { get; set; } Property Value Type Description Single A Single that indicates the underline thickness, expressed as a fraction of the font em size. Remarks attribute name = \"underline-thickness\" {number} UnicodeRange Declaration public string UnicodeRange { get; set; } Property Value Type Description String Remarks attribute name = \"unicode-range\" {{urange} [, {urange}]*> UnitsPerEm Declaration public float UnitsPerEm { get; set; } Property Value Type Description Single Remarks attribute name = \"units-per-em\" {number} XHeight Declaration public float XHeight { get; set; } Property Value Type Description Single Remarks attribute name = \"x-height\" {number} Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.html",
    "title": "Class SvgFontFaceFormatElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceFormatElement The ISvgFontFaceFormatElement interface corresponds to the font-face-format' ' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceFormatElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceFormatElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFontFaceFormatElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceFormatElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFontFaceFormatElement(String, String, String, SvgDocument) Declaration public SvgFontFaceFormatElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable String Declaration public string String { get; set; } Property Value Type Description String Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceFormatElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.html",
    "title": "Class SvgFontFaceNameElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceNameElement The SvgFontFaceNameElement interface corresponds to the 'font-face-name' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceNameElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceNameElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFontFaceNameElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceNameElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFontFaceNameElement(String, String, String, SvgDocument) Declaration public SvgFontFaceNameElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties FaceName Declaration public string FaceName { get; set; } Property Value Type Description String IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceNameElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceSrcElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceSrcElement.html",
    "title": "Class SvgFontFaceSrcElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceSrcElement The SvgFontFaceSrcElement interface corresponds to the 'font-face-src' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceSrcElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceSrcElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFontFaceSrcElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceSrcElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFontFaceSrcElement(String, String, String, SvgDocument) Declaration public SvgFontFaceSrcElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceSrcElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceUriElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceUriElement.html",
    "title": "Class SvgFontFaceUriElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceUriElement The SvgFontFaceUriElement interface corresponds to the 'font-face-uri' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceUriElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceUriElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFontFaceUriElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceUriElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgFontFaceUriElement(String, String, String, SvgDocument) Declaration public SvgFontFaceUriElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceUriElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFamily.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFamily.html",
    "title": "Class SvgFontFamily | SharpVectors Documentation",
    "keywords": "Class SvgFontFamily This provides information on the OpenType and Web fonts to the SvgDocument . Inheritance Object SvgFontFamily Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgFontFamily Constructors SvgFontFamily(Boolean) Declaration public SvgFontFamily(bool isDisposable) Parameters Type Name Description Boolean isDisposable SvgFontFamily(Boolean, String) Declaration public SvgFontFamily(bool isDisposable, string fontUri) Parameters Type Name Description Boolean isDisposable String fontUri SvgFontFamily(Boolean, String, String) Declaration public SvgFontFamily(bool isDisposable, string fontUri, string sourceUri) Parameters Type Name Description Boolean isDisposable String fontUri String sourceUri Properties FontUri Declaration public string FontUri { get; } Property Value Type Description String IsDisposable Declaration public bool IsDisposable { get; set; } Property Value Type Description Boolean IsLoaded Declaration public bool IsLoaded { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String SourceUri Declaration public string SourceUri { get; } Property Value Type Description String Tag Declaration public object Tag { get; set; } Property Value Type Description Object"
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.html",
    "title": "Class SvgGElement | SharpVectors Documentation",
    "keywords": "Class SvgGElement This implements the ISvgGElement interface, which corresponds to the 'g' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgGElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgGElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgTransformableElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgGElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgGElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Constructors SvgGElement(String, String, String, SvgDocument) Declaration public SvgGElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgGElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.html",
    "title": "Class SvgGlyphElement | SharpVectors Documentation",
    "keywords": "Class SvgGlyphElement The SvgGlyphElement interface corresponds to the 'glyph' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGlyphElement SvgMissingGlyphElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGlyphElement ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgGlyphElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgGlyphElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Constructors SvgGlyphElement(String, String, String, SvgDocument) Declaration public SvgGlyphElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ArabicForm Declaration public string ArabicForm { get; set; } Property Value Type Description String D Gets or sets. Declaration public string D { get; set; } Property Value Type Description String GlyphName Declaration public string GlyphName { get; set; } Property Value Type Description String HorizAdvX Declaration public float HorizAdvX { get; set; } Property Value Type Description Single IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Lang Declaration public string Lang { get; set; } Property Value Type Description String Orientation Declaration public string Orientation { get; set; } Property Value Type Description String PathData Gets a ISvgPathSegList of path data. Declaration public SvgPathSegList PathData { get; } Property Value Type Description SvgPathSegList Tag Declaration public object Tag { get; set; } Property Value Type Description Object Unicode Declaration public string Unicode { get; set; } Property Value Type Description String VertAdvY Declaration public float VertAdvY { get; set; } Property Value Type Description Single VertOriginX Declaration public float VertOriginX { get; set; } Property Value Type Description Single VertOriginY Declaration public float VertOriginY { get; set; } Property Value Type Description Single Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGlyphElement ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.html",
    "title": "Class SvgGlyphRefElement | SharpVectors Documentation",
    "keywords": "Class SvgGlyphRefElement The ISvgGlyphRefElement interface corresponds to the 'glyphRef' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGlyphRefElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGlyphRefElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgGlyphRefElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgGlyphRefElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgStylable Constructors SvgGlyphRefElement(String, String, String, SvgDocument) Declaration public SvgGlyphRefElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Dx Corresponds to attribute 'dx' on the given element. Declaration public float Dx { get; set; } Property Value Type Description Single Remarks It is read only attribute Dy Corresponds to attribute 'dy' on the given element. Declaration public float Dy { get; set; } Property Value Type Description Single Remarks It is read only attribute Format Corresponds to attribute 'format' on the given element. Declaration public string Format { get; set; } Property Value Type Description String Remarks It is read only attribute GlyphRef Corresponds to attribute 'glyphRef attribute' on the given element. Declaration public string GlyphRef { get; set; } Property Value Type Description String Remarks It is read only attribute Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable ReferencedElement Declaration public XmlElement ReferencedElement { get; } Property Value Type Description XmlElement X Corresponds to attribute 'x' on the given element. Declaration public float X { get; set; } Property Value Type Description Single Remarks It is read only attribute Y Corresponds to attribute 'y' on the given element. Declaration public float Y { get; set; } Property Value Type Description Single Remarks It is read only attribute Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGlyphRefElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.html",
    "title": "Class SvgGradientElement | SharpVectors Documentation",
    "keywords": "Class SvgGradientElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGradientElement SvgLinearGradientElement SvgRadialGradientElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGradientElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgGradientElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Constructors SvgGradientElement(String, String, String, SvgDocument) Declaration protected SvgGradientElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean GradientTransform Declaration public ISvgAnimatedTransformList GradientTransform { get; } Property Value Type Description ISvgAnimatedTransformList GradientUnits Declaration public ISvgAnimatedEnumeration GradientUnits { get; } Property Value Type Description ISvgAnimatedEnumeration Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable ReferencedElement Declaration public SvgGradientElement ReferencedElement { get; } Property Value Type Description SvgGradientElement SpreadMethod Declaration public ISvgAnimatedEnumeration SpreadMethod { get; } Property Value Type Description ISvgAnimatedEnumeration Stops Declaration public XmlNodeList Stops { get; } Property Value Type Description XmlNodeList Methods HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgStyleableElement.HandleAttributeChange(XmlAttribute) Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGradientElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgHKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgHKernElement.html",
    "title": "Class SvgHKernElement | SharpVectors Documentation",
    "keywords": "Class SvgHKernElement The SvgHKernElement interface corresponds to the 'hkern' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgKernElement SvgHKernElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgHKernElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgKernElement.Glyph1 SvgKernElement.Glyph2 SvgKernElement.Unicode1 SvgKernElement.Unicode2 SvgKernElement.Kerning SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgHKernElement : SvgKernElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgHKernElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgHKernElement(String, String, String, SvgDocument) Declaration public SvgHKernElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsHorizontal Declaration public override bool IsHorizontal { get; } Property Value Type Description Boolean Overrides SvgKernElement.IsHorizontal IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgKernElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgHKernElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.html",
    "title": "Class SvgImageElement | SharpVectors Documentation",
    "keywords": "Class SvgImageElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgImageElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgImageElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgStylable ISvgTransformable ISvgLocatable ISvgLangSpace ISvgExternalResourcesRequired ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgImageElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgImageElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgElementVisitorTarget Constructors SvgImageElement(String, String, String, SvgDocument) Declaration public SvgImageElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ColorProfile Declaration public ISvgColorProfileElement ColorProfile { get; } Property Value Type Description ISvgColorProfileElement ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Height Declaration public ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsSvgImage Declaration public bool IsSvgImage { get; } Property Value Type Description Boolean PreserveAspectRatio Declaration public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio ReferencedElement Declaration public XmlElement ReferencedElement { get; } Property Value Type Description XmlElement RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Image Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SvgWindow Declaration public SvgWindow SvgWindow { get; } Property Value Type Description SvgWindow SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList UriReference Declaration public SvgUriReference UriReference { get; } Property Value Type Description SvgUriReference Width Declaration public ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration public ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration public ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor GetImageDocument() Declaration public SvgDocument GetImageDocument() Returns Type Description SvgDocument HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean IsRootReferenced(String) Declaration public bool IsRootReferenced(string baseUri) Parameters Type Name Description String baseUri Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgImageElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgStylable ISvgTransformable ISvgLocatable ISvgLangSpace ISvgExternalResourcesRequired ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.html",
    "title": "Class SvgKernElement | SharpVectors Documentation",
    "keywords": "Class SvgKernElement The SvgKernElement is the base interface corresponds to the 'vkern' and 'hkern' elements. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgKernElement SvgHKernElement SvgVKernElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgKernElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgKernElement(String, String, String, SvgDocument) Declaration protected SvgKernElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Glyph1 Declaration public string Glyph1 { get; set; } Property Value Type Description String Glyph2 Declaration public string Glyph2 { get; set; } Property Value Type Description String IsHorizontal Declaration public abstract bool IsHorizontal { get; } Property Value Type Description Boolean IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Kerning Declaration public float Kerning { get; set; } Property Value Type Description Single Unicode1 Declaration public string Unicode1 { get; set; } Property Value Type Description String Unicode2 Declaration public string Unicode2 { get; set; } Property Value Type Description String Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.html",
    "title": "Class SvgLength | SharpVectors Documentation",
    "keywords": "Class SvgLength Inheritance Object SvgLength Implements ISvgLength Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgLength : ISvgLength Constructors SvgLength(SvgElement, String, SvgLengthDirection, String) Declaration public SvgLength(SvgElement ownerElement, string propertyName, SvgLengthDirection direction, string baseVal) Parameters Type Name Description SvgElement ownerElement String propertyName SvgLengthDirection direction String baseVal SvgLength(SvgElement, String, SvgLengthDirection, String, String) Declaration public SvgLength(SvgElement ownerElement, string propertyName, SvgLengthDirection direction, string baseVal, string defaultValue) Parameters Type Name Description SvgElement ownerElement String propertyName SvgLengthDirection direction String baseVal String defaultValue SvgLength(SvgElement, String, SvgLengthSource, SvgLengthDirection, String) Declaration public SvgLength(SvgElement ownerElement, string propertyName, SvgLengthSource source, SvgLengthDirection direction, string defaultValue) Parameters Type Name Description SvgElement ownerElement String propertyName SvgLengthSource source SvgLengthDirection direction String defaultValue SvgLength(String, SvgStyleableElement, SvgLengthDirection, String) Declaration public SvgLength(string propertyName, SvgStyleableElement ownerElement, SvgLengthDirection direction, string defaultValue) Parameters Type Name Description String propertyName SvgStyleableElement ownerElement SvgLengthDirection direction String defaultValue SvgLength(String, String, SvgElement, SvgLengthDirection) Creates a SvgLength value Declaration public SvgLength(string propertyName, string baseVal, SvgElement ownerElement, SvgLengthDirection direction) Parameters Type Name Description String propertyName String baseVal String to be parsed into a length SvgElement ownerElement The associated element SvgLengthDirection direction Direction of the length, used for percentages SvgLength(String, String, String, SvgElement, SvgLengthDirection) Declaration public SvgLength(string propertyName, string baseVal, string defaultValue, SvgElement ownerElement, SvgLengthDirection direction) Parameters Type Name Description String propertyName String baseVal String defaultValue SvgElement ownerElement SvgLengthDirection direction Properties PropertyName Declaration public string PropertyName { get; } Property Value Type Description String UnitType The type of the value as specified by one of the constants specified above. Declaration public SvgLengthType UnitType { get; } Property Value Type Description SvgLengthType Value The value as an floating point value, in user units. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting. Declaration public double Value { get; set; } Property Value Type Description Double Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute. ValueAsString The value as a string value, in the units expressed by unitType. Setting this attribute will cause value and valueInSpecifiedUnits to be updated automatically to reflect this setting. Declaration public string ValueAsString { get; set; } Property Value Type Description String Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute. ValueInSpecifiedUnits The value as an floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting. Declaration public double ValueInSpecifiedUnits { get; set; } Property Value Type Description Double Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute. Methods ConvertToSpecifiedUnits(SvgLengthType) Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueAsSpecified and valueAsString might be modified as a result of this method. For example, if the original value were \"0.5cm\" and the method was invoked to convert to millimeters, then the unitType would be changed to MM, valueAsSpecified would be changed to the numeric value 5 and valueAsString would be changed to \"5mm\". Declaration public void ConvertToSpecifiedUnits(SvgLengthType unitType) Parameters Type Name Description SvgLengthType unitType The unitType to switch to (e.g., MM). NewValueSpecifiedUnits(SvgLengthType, Double) Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object. Declaration public void NewValueSpecifiedUnits(SvgLengthType unitType, double valueInSpecifiedUnits) Parameters Type Name Description SvgLengthType unitType The unitType for the value (e.g., MM). Double valueInSpecifiedUnits The new value Implements ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthAdjust.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthAdjust.html",
    "title": "Enum SvgLengthAdjust | SharpVectors Documentation",
    "keywords": "Enum SvgLengthAdjust Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public enum SvgLengthAdjust Fields Spacing SpacingAndGlyphs Unknown Name Description Spacing SpacingAndGlyphs Unknown"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthDirection.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthDirection.html",
    "title": "Enum SvgLengthDirection | SharpVectors Documentation",
    "keywords": "Enum SvgLengthDirection Defines the direction of a SvgLength Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public enum SvgLengthDirection Fields Horizontal Vertical Viewport Name Description Horizontal Vertical Viewport"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthList.html",
    "title": "Class SvgLengthList | SharpVectors Documentation",
    "keywords": "Class SvgLengthList This interface defines a list of SvgLength objects Inheritance Object SvgList < ISvgLength > SvgLengthList Implements IEnumerable < ISvgLength > IEnumerable ISvgLengthList Inherited Members SvgList<ISvgLength>._items SvgList<ISvgLength>.Count SvgList<ISvgLength>.Item[Int32] SvgList<ISvgLength>.NumberOfItems SvgList<ISvgLength>.Clear() SvgList<ISvgLength>.Initialize(ISvgLength) SvgList<ISvgLength>.GetItem(UInt32) SvgList<ISvgLength>.InsertItemBefore(ISvgLength, UInt32) SvgList<ISvgLength>.ReplaceItem(ISvgLength, UInt32) SvgList<ISvgLength>.RemoveItem(UInt32) SvgList<ISvgLength>.AppendItem(ISvgLength) SvgList<ISvgLength>.GetEnumerator() SvgList<ISvgLength>.IEnumerable.GetEnumerator() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgLengthList : SvgList<ISvgLength>, IEnumerable<ISvgLength>, IEnumerable, ISvgLengthList Constructors SvgLengthList() Declaration public SvgLengthList() SvgLengthList(String) Declaration public SvgLengthList(string listString) Parameters Type Name Description String listString SvgLengthList(String, String, SvgElement, SvgLengthDirection) Declaration public SvgLengthList(string propertyName, string listString, SvgElement ownerElement, SvgLengthDirection direction) Parameters Type Name Description String propertyName String listString SvgElement ownerElement SvgLengthDirection direction Methods FromString(String) Declaration public void FromString(string listString) Parameters Type Name Description String listString Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable ISvgLengthList"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthSource.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthSource.html",
    "title": "Enum SvgLengthSource | SharpVectors Documentation",
    "keywords": "Enum SvgLengthSource Defines the origin type of the SvgLength value Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public enum SvgLengthSource Fields Css String Xml Name Description Css String Xml"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthType.html",
    "title": "Enum SvgLengthType | SharpVectors Documentation",
    "keywords": "Enum SvgLengthType Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgLengthType Fields Cm Ems Exs In Mm Number Pc Percentage Pt Px Unknown Name Description Cm Ems Exs In Mm Number Pc Percentage Pt Px Unknown"
  },
  "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.html",
    "title": "Class SvgLinearGradientElement | SharpVectors Documentation",
    "keywords": "Class SvgLinearGradientElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGradientElement SvgLinearGradientElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgLinearGradientElement ISvgGradientElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgGradientElement.GradientUnits SvgGradientElement.GradientTransform SvgGradientElement.SpreadMethod SvgGradientElement.Href SvgGradientElement.ExternalResourcesRequired SvgGradientElement.Stops SvgGradientElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgLinearGradientElement : SvgGradientElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgLinearGradientElement, ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Constructors SvgLinearGradientElement(String, String, String, SvgDocument) Declaration public SvgLinearGradientElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgGradientElement.IsRenderable ReferencedElement Declaration public SvgLinearGradientElement ReferencedElement { get; } Property Value Type Description SvgLinearGradientElement X1 Declaration public ISvgAnimatedLength X1 { get; } Property Value Type Description ISvgAnimatedLength X2 Declaration public ISvgAnimatedLength X2 { get; } Property Value Type Description ISvgAnimatedLength Y1 Declaration public ISvgAnimatedLength Y1 { get; } Property Value Type Description ISvgAnimatedLength Y2 Declaration public ISvgAnimatedLength Y2 { get; } Property Value Type Description ISvgAnimatedLength Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgLinearGradientElement ISvgGradientElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.html",
    "title": "Class SvgLineElement | SharpVectors Documentation",
    "keywords": "Class SvgLineElement The SVGLineElement interface corresponds to the 'line' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgLineElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgLineElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget ISharpMarkerHost Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgLineElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgLineElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget, ISharpMarkerHost Constructors SvgLineElement(String, String, String, SvgDocument) Declaration public SvgLineElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean MarkerPositions Declaration public SvgPointF[] MarkerPositions { get; } Property Value Type Description SvgPointF [] MayHaveCurves Declaration public bool MayHaveCurves { get; } Property Value Type Description Boolean RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList X1 Declaration public ISvgAnimatedLength X1 { get; } Property Value Type Description ISvgAnimatedLength X2 Declaration public ISvgAnimatedLength X2 { get; } Property Value Type Description ISvgAnimatedLength Y1 Declaration public ISvgAnimatedLength Y1 { get; } Property Value Type Description ISvgAnimatedLength Y2 Declaration public ISvgAnimatedLength Y2 { get; } Property Value Type Description ISvgAnimatedLength Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor GetEndAngle(Int32) Declaration public double GetEndAngle(int index) Parameters Type Name Description Int32 index Returns Type Description Double GetMarker(Int32) Declaration public ISvgMarker GetMarker(int index) Parameters Type Name Description Int32 index Returns Type Description ISvgMarker GetStartAngle(Int32) Declaration public double GetStartAngle(int index) Parameters Type Name Description Int32 index Returns Type Description Double HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Invalidate() Declaration public void Invalidate() Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgLineElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget ISharpMarkerHost"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.html",
    "title": "Class SvgList<T> | SharpVectors Documentation",
    "keywords": "Class SvgList<T> Base class for all SVG*List-derived classes. Note we're using List<T> (as opposed to deriving from) to hide unneeded List<T> methods Note that a CLR uint is equivalent to an IDL ulong, so uint is used for all index values Inheritance Object SvgList<T> SvgLengthList SvgNumberList SvgPointList SvgStringList SvgTransformList Implements IEnumerable <T> IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgList<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors SvgList() SvgList constructor Declaration protected SvgList() Fields _items Declaration protected List<T> _items Field Value Type Description List <T> Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T NumberOfItems NumberOfItems Declaration public uint NumberOfItems { get; } Property Value Type Description UInt32 Methods AppendItem(T) AppendItem Declaration public T AppendItem(T newItem) Parameters Type Name Description T newItem Returns Type Description T Clear() Clear Declaration public void Clear() GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> GetItem(UInt32) GetItem Declaration public T GetItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description T Initialize(T) Initialize Declaration public T Initialize(T newItem) Parameters Type Name Description T newItem Returns Type Description T InsertItemBefore(T, UInt32) InsertItemBefore Declaration public T InsertItemBefore(T newItem, uint index) Parameters Type Name Description T newItem UInt32 index Returns Type Description T RemoveItem(UInt32) RemoveItem Declaration public T RemoveItem(uint index) Parameters Type Name Description UInt32 index Returns Type Description T ReplaceItem(T, UInt32) ReplaceItem Declaration public T ReplaceItem(T newItem, uint index) Parameters Type Name Description T newItem UInt32 index Returns Type Description T Explicit Interface Implementations IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/SharpVectors.Dom.Svg.SvgMarker.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarker.html",
    "title": "Class SvgMarker | SharpVectors Documentation",
    "keywords": "Class SvgMarker Inheritance Object SvgMarker Implements ISvgMarker Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public sealed class SvgMarker : ISvgMarker Constructors SvgMarker(Int32, ISvgPathSeg) Declaration public SvgMarker(int index, ISvgPathSeg segment) Parameters Type Name Description Int32 index ISvgPathSeg segment SvgMarker(Int32, SvgPointF) Declaration public SvgMarker(int index, SvgPointF position) Parameters Type Name Description Int32 index SvgPointF position SvgMarker(Int32, SvgPointF, ISvgPathSeg) Declaration public SvgMarker(int index, SvgPointF position, ISvgPathSeg segment) Parameters Type Name Description Int32 index SvgPointF position ISvgPathSeg segment Properties Index Declaration public int Index { get; } Property Value Type Description Int32 IsCurve Declaration public bool IsCurve { get; } Property Value Type Description Boolean Position Declaration public SvgPointF Position { get; } Property Value Type Description SvgPointF Segment Declaration public ISvgPathSeg Segment { get; } Property Value Type Description ISvgPathSeg Implements ISvgMarker"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.html",
    "title": "Class SvgMarkerElement | SharpVectors Documentation",
    "keywords": "Class SvgMarkerElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgMarkerElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgMarkerElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgFitToViewBox Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgMarkerElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgMarkerElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgFitToViewBox Constructors SvgMarkerElement(String, String, String, SvgDocument) Declaration public SvgMarkerElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable IsSizeDefined Declaration public bool IsSizeDefined { get; } Property Value Type Description Boolean MarkerHeight Corresponds to attribute markerHeight on the given 'marker' element. Declaration public ISvgAnimatedLength MarkerHeight { get; } Property Value Type Description ISvgAnimatedLength MarkerUnits Corresponds to attribute markerUnits on the given 'marker' element. Declaration public ISvgAnimatedEnumeration MarkerUnits { get; } Property Value Type Description ISvgAnimatedEnumeration MarkerWidth Corresponds to attribute markerWidth on the given 'marker' element Declaration public ISvgAnimatedLength MarkerWidth { get; } Property Value Type Description ISvgAnimatedLength OrientAngle Corresponds to attribute orient on the given 'marker' element. If markerUnits is SVG_MARKER_ORIENT_ANGLE, the angle value for attribute orient; otherwise, it will be set to zero. Declaration public ISvgAnimatedAngle OrientAngle { get; } Property Value Type Description ISvgAnimatedAngle OrientType Corresponds to attribute orient on the given 'marker' element. One of the Marker Orientation Types defined above. Declaration public ISvgAnimatedEnumeration OrientType { get; } Property Value Type Description ISvgAnimatedEnumeration PreserveAspectRatio Declaration public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio RefX Corresponds to attribute refX on the given 'marker' element. Declaration public ISvgAnimatedLength RefX { get; } Property Value Type Description ISvgAnimatedLength RefY Corresponds to attribute refY on the given 'marker' element. Declaration public ISvgAnimatedLength RefY { get; } Property Value Type Description ISvgAnimatedLength RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Marker Overrides SvgElement.RenderingHint ViewBox Declaration public ISvgAnimatedRect ViewBox { get; } Property Value Type Description ISvgAnimatedRect Methods SetOrientToAngle(ISvgAngle) Sets the value of attribute orient to the given angle. Declaration public void SetOrientToAngle(ISvgAngle angle) Parameters Type Name Description ISvgAngle angle The angle value to use for attribute orient. SetOrientToAuto() Sets the value of attribute orient to 'auto'. Declaration public void SetOrientToAuto() Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgMarkerElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgFitToViewBox"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerOrient.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerOrient.html",
    "title": "Enum SvgMarkerOrient | SharpVectors Documentation",
    "keywords": "Enum SvgMarkerOrient Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgMarkerOrient Fields Angle Auto AutoStartReverse Unknown Name Description Angle Attribute orient has an angle value. Auto Attribute orient has value 'auto'. AutoStartReverse Attribute orient has value 'auto-start-reverse'. Unknown The marker orientation is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type."
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerPosition.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerPosition.html",
    "title": "Enum SvgMarkerPosition | SharpVectors Documentation",
    "keywords": "Enum SvgMarkerPosition Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public enum SvgMarkerPosition Fields End Mid Start Name Description End Mid Start"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerUnit.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerUnit.html",
    "title": "Enum SvgMarkerUnit | SharpVectors Documentation",
    "keywords": "Enum SvgMarkerUnit Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgMarkerUnit Fields StrokeWidth Unknown UserSpaceOnUse Name Description StrokeWidth The value of attribute markerUnits is 'strokeWidth'. Unknown The marker unit type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. UserSpaceOnUse The value of attribute markerUnits is 'userSpaceOnUse'."
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.html",
    "title": "Class SvgMaskElement | SharpVectors Documentation",
    "keywords": "Class SvgMaskElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgMaskElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgMaskElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgMaskElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgMaskElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Constructors SvgMaskElement(String, String, String, SvgDocument) Declaration public SvgMaskElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Height Declaration public ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable MaskContentUnits Declaration public ISvgAnimatedEnumeration MaskContentUnits { get; } Property Value Type Description ISvgAnimatedEnumeration MaskUnits Declaration public ISvgAnimatedEnumeration MaskUnits { get; } Property Value Type Description ISvgAnimatedEnumeration RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Masking Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Width Declaration public ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration public ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration public ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength Methods HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgMaskElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.html",
    "title": "Class SvgMatrix | SharpVectors Documentation",
    "keywords": "Class SvgMatrix Many of SVG's graphics operations utilize 2x3 matrices of the form: [a c e] [b d f] which, when expanded into a 3x3 matrix for the purposes of matrix arithmetic, become: [a c e] [b d f] [0 0 1] Inheritance Object SvgMatrix Implements ISvgMatrix Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgMatrix : ISvgMatrix Constructors SvgMatrix() Declaration public SvgMatrix() SvgMatrix(Double, Double, Double, Double, Double, Double) Declaration public SvgMatrix(double a, double b, double c, double d, double e, double f) Parameters Type Name Description Double a Double b Double c Double d Double e Double f Fields Identity Declaration public static readonly SvgMatrix Identity Field Value Type Description SvgMatrix Properties A Declaration public double A { get; set; } Property Value Type Description Double B Declaration public double B { get; set; } Property Value Type Description Double C Declaration public double C { get; set; } Property Value Type Description Double D Declaration public double D { get; set; } Property Value Type Description Double E Declaration public double E { get; set; } Property Value Type Description Double F Declaration public double F { get; set; } Property Value Type Description Double IsIdentity Declaration public bool IsIdentity { get; } Property Value Type Description Boolean Methods FlipX() Declaration public ISvgMatrix FlipX() Returns Type Description ISvgMatrix FlipY() Declaration public ISvgMatrix FlipY() Returns Type Description ISvgMatrix Inverse() Declaration public ISvgMatrix Inverse() Returns Type Description ISvgMatrix Multiply(ISvgMatrix) Declaration public ISvgMatrix Multiply(ISvgMatrix secondMatrix) Parameters Type Name Description ISvgMatrix secondMatrix Returns Type Description ISvgMatrix Rotate(Double) Declaration public ISvgMatrix Rotate(double angle) Parameters Type Name Description Double angle Returns Type Description ISvgMatrix RotateFromVector(Double, Double) Declaration public ISvgMatrix RotateFromVector(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgMatrix Scale(Double) Declaration public ISvgMatrix Scale(double scaleFactor) Parameters Type Name Description Double scaleFactor Returns Type Description ISvgMatrix ScaleNonUniform(Double, Double) Declaration public ISvgMatrix ScaleNonUniform(double scaleFactorX, double scaleFactorY) Parameters Type Name Description Double scaleFactorX Double scaleFactorY Returns Type Description ISvgMatrix SkewX(Double) Declaration public ISvgMatrix SkewX(double angle) Parameters Type Name Description Double angle Returns Type Description ISvgMatrix SkewY(Double) Declaration public ISvgMatrix SkewY(double angle) Parameters Type Name Description Double angle Returns Type Description ISvgMatrix Translate(Double, Double) Declaration public ISvgMatrix Translate(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgMatrix Operators Multiply(SvgMatrix, SvgMatrix) Declaration public static SvgMatrix operator *(SvgMatrix a, SvgMatrix b) Parameters Type Name Description SvgMatrix a SvgMatrix b Returns Type Description SvgMatrix Implements ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMeetOrSlice.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMeetOrSlice.html",
    "title": "Enum SvgMeetOrSlice | SharpVectors Documentation",
    "keywords": "Enum SvgMeetOrSlice Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgMeetOrSlice Fields Meet Slice Unknown Name Description Meet Slice Unknown"
  },
  "api/SharpVectors.Dom.Svg.SvgMetadataElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMetadataElement.html",
    "title": "Class SvgMetadataElement | SharpVectors Documentation",
    "keywords": "Class SvgMetadataElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgMetadataElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgMetadataElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgMetadataElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgMetadataElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgMetadataElement(String, String, String, SvgDocument) Declaration public SvgMetadataElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgMetadataElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgMissingGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMissingGlyphElement.html",
    "title": "Class SvgMissingGlyphElement | SharpVectors Documentation",
    "keywords": "Class SvgMissingGlyphElement The SvgMissingGlyphElement interface corresponds to the 'missing-glyph' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGlyphElement SvgMissingGlyphElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGlyphElement ISvgMissingGlyphElement ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable Inherited Members SvgGlyphElement.Tag SvgGlyphElement.PathData SvgGlyphElement.D SvgGlyphElement.GlyphName SvgGlyphElement.HorizAdvX SvgGlyphElement.Unicode SvgGlyphElement.VertAdvY SvgGlyphElement.VertOriginX SvgGlyphElement.VertOriginY SvgGlyphElement.ArabicForm SvgGlyphElement.Lang SvgGlyphElement.Orientation SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgMissingGlyphElement : SvgGlyphElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgGlyphElement, ISvgMissingGlyphElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Constructors SvgMissingGlyphElement(String, String, String, SvgDocument) Declaration public SvgMissingGlyphElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgGlyphElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGlyphElement ISvgMissingGlyphElement ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.html",
    "title": "Class SvgNumber | SharpVectors Documentation",
    "keywords": "Class SvgNumber Inheritance Object SvgNumber Implements ISvgNumber Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgNumber : ISvgNumber Constructors SvgNumber(Single) Declaration public SvgNumber(float val) Parameters Type Name Description Single val SvgNumber(String) Declaration public SvgNumber(string str) Parameters Type Name Description String str Properties Format Declaration public static NumberFormatInfo Format { get; } Property Value Type Description NumberFormatInfo Value Declaration public double Value { get; set; } Property Value Type Description Double Methods CalcAngleBisection(Double, Double) Declaration public static double CalcAngleBisection(double a1, double a2) Parameters Type Name Description Double a1 Double a2 Returns Type Description Double CalcAngleDiff(Double, Double) Declaration public static double CalcAngleDiff(double a1, double a2) Parameters Type Name Description Double a1 Double a2 Returns Type Description Double IsValid(Double) Declaration public static bool IsValid(double value) Parameters Type Name Description Double value Returns Type Description Boolean IsValid(Single) Declaration public static bool IsValid(float value) Parameters Type Name Description Single value Returns Type Description Boolean Parse(String) Declaration public static double Parse(string str) Parameters Type Name Description String str Returns Type Description Double ParseDouble(String) Declaration public static double ParseDouble(string str) Parameters Type Name Description String str Returns Type Description Double ParseDoubles(String) Declaration public static double[] ParseDoubles(string str) Parameters Type Name Description String str Returns Type Description Double [] ParseNumber(String) Declaration public static double ParseNumber(string str) Parameters Type Name Description String str Returns Type Description Double ParseNumberUnit(String, Double) Declaration public static Tuple<double, string> ParseNumberUnit(string str, double defVal) Parameters Type Name Description String str Double defVal Returns Type Description Tuple < Double , String > ScientificToDec(String) Declaration public static string ScientificToDec(string sc) Parameters Type Name Description String sc Returns Type Description String TryParseNumber(String, Double) Declaration public static double TryParseNumber(string str, double defNumber) Parameters Type Name Description String str Double defNumber Returns Type Description Double Implements ISvgNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgNumberList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumberList.html",
    "title": "Class SvgNumberList | SharpVectors Documentation",
    "keywords": "Class SvgNumberList Summary description for SvgNumberList. Inheritance Object SvgList < ISvgNumber > SvgNumberList Implements IEnumerable < ISvgNumber > IEnumerable ISvgNumberList Inherited Members SvgList<ISvgNumber>._items SvgList<ISvgNumber>.Count SvgList<ISvgNumber>.Item[Int32] SvgList<ISvgNumber>.NumberOfItems SvgList<ISvgNumber>.Clear() SvgList<ISvgNumber>.Initialize(ISvgNumber) SvgList<ISvgNumber>.GetItem(UInt32) SvgList<ISvgNumber>.InsertItemBefore(ISvgNumber, UInt32) SvgList<ISvgNumber>.ReplaceItem(ISvgNumber, UInt32) SvgList<ISvgNumber>.RemoveItem(UInt32) SvgList<ISvgNumber>.AppendItem(ISvgNumber) SvgList<ISvgNumber>.GetEnumerator() SvgList<ISvgNumber>.IEnumerable.GetEnumerator() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgNumberList : SvgList<ISvgNumber>, IEnumerable<ISvgNumber>, IEnumerable, ISvgNumberList Constructors SvgNumberList() Declaration public SvgNumberList() SvgNumberList(String) Declaration public SvgNumberList(string listString) Parameters Type Name Description String listString Methods FromString(String) Declaration public void FromString(string listString) Parameters Type Name Description String listString Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable ISvgNumberList"
  },
  "api/SharpVectors.Dom.Svg.SvgNumberParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumberParser.html",
    "title": "Class SvgNumberParser | SharpVectors Documentation",
    "keywords": "Class SvgNumberParser This class represents a parser with support for numbers. Inheritance Object SvgParser SvgNumberParser SvgPathParser SvgPointsParser Inherited Members SvgParser._reader SvgParser._current SvgParser.Current SvgParser.FormatMessage(String, Object[]) SvgParser.Parse(String) SvgParser.DoParse() SvgParser.ReportError(String, Object[]) SvgParser.ReportCharacterExpectedError(Char, Int32) SvgParser.ReportUnexpectedCharacterError(Int32) SvgParser.CreateErrorMessage(String, Object[]) SvgParser.SkipSpaces() SvgParser.SkipCommaSpaces() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgNumberParser : SvgParser Constructors SvgNumberParser() Declaration protected SvgNumberParser() Methods BuildFloat(Int32, Int32) Computes a float from mantissa and exponent. Declaration public static float BuildFloat(int mant, int exp) Parameters Type Name Description Int32 mant Int32 exp Returns Type Description Single ParseFloat() Parses the content of the buffer and converts it to a float. Declaration protected virtual float ParseFloat() Returns Type Description Single"
  },
  "api/SharpVectors.Dom.Svg.SvgPaint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaint.html",
    "title": "Class SvgPaint | SharpVectors Documentation",
    "keywords": "Class SvgPaint Inheritance Object CssValue SvgColor SvgPaint WpfSvgPaint Implements ISvgPaint ISvgColor ICssValue Inherited Members SvgColor._rgbColor SvgColor.ColorType SvgColor.RgbColor SvgColor.IccColor SvgColor.SetRgbColor(String) SvgColor.SetRgbColorIccColor(String, String) SvgColor.SetColor(SvgColorType, String, String) SvgColor.ParseColor(String) CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetAbsoluteValue(String, XmlElement) CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgPaint : SvgColor, ISvgPaint, ISvgColor, ICssValue Constructors SvgPaint(String) Declaration public SvgPaint(string str) Parameters Type Name Description String str Properties CssText Declaration public override string CssText { get; set; } Property Value Type Description String Overrides SvgColor.CssText Fallback Declaration public SvgPaint Fallback { get; } Property Value Type Description SvgPaint PaintType Declaration public SvgPaintType PaintType { get; } Property Value Type Description SvgPaintType Uri Declaration public string Uri { get; } Property Value Type Description String Methods SetPaint(SvgPaintType, String, String, String) Declaration public void SetPaint(SvgPaintType paintType, string uri, string rgbColor, string iccColor) Parameters Type Name Description SvgPaintType paintType String uri String rgbColor String iccColor SetUri(String) Declaration public void SetUri(string uri) Parameters Type Name Description String uri Implements ISvgPaint ISvgColor ICssValue"
  },
  "api/SharpVectors.Dom.Svg.SvgPaintType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaintType.html",
    "title": "Enum SvgPaintType | SharpVectors Documentation",
    "keywords": "Enum SvgPaintType Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgPaintType Fields ContextFill ContextStroke CurrentColor None RgbColor RgbColorIccColor Unknown Uri UriCurrentColor UriNone UriRgbColor UriRgbColorIccColor Name Description ContextFill ContextStroke CurrentColor None RgbColor RgbColorIccColor Unknown Uri UriCurrentColor UriNone UriRgbColor UriRgbColorIccColor"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.html",
    "title": "Class SvgParser | SharpVectors Documentation",
    "keywords": "Class SvgParser This class is the superclass of all parsers. It provides localization and error handling methods. Inheritance Object SvgParser SvgNumberParser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgParser Constructors SvgParser() Declaration protected SvgParser() Fields _current The current character. Declaration protected int _current Field Value Type Description Int32 _reader The normalizing reader. Declaration protected SvgTextReader _reader Field Value Type Description SvgTextReader Properties Current Returns the current character value. Declaration public virtual int Current { get; } Property Value Type Description Int32 Methods CreateErrorMessage(String, Object[]) Returns a localized error message. Declaration protected virtual string CreateErrorMessage(string key, object[] args) Parameters Type Name Description String key The message key in the resource bundle. Object [] args The message arguments. Returns Type Description String DoParse() Method responsible for actually parsing data after AbstractParser has initialized itself. Declaration protected abstract void DoParse() FormatMessage(String, Object[]) Declaration public virtual string FormatMessage(string key, object[] args) Parameters Type Name Description String key Object [] args Returns Type Description String Parse(String) Parses the given string. Declaration public virtual bool Parse(string input) Parameters Type Name Description String input Returns Type Description Boolean ReportCharacterExpectedError(Char, Int32) simple api to call often reported error. Just a wrapper for reportError(). Declaration protected virtual void ReportCharacterExpectedError(char expectedChar, int currentChar) Parameters Type Name Description Char expectedChar what caller expected Int32 currentChar what caller found ReportError(String, Object[]) Signals an error to the error handler. Declaration protected virtual void ReportError(string key, object[] args) Parameters Type Name Description String key The message key in the resource bundle. Object [] args The message arguments. ReportUnexpectedCharacterError(Int32) simple api to call often reported error. Just a wrapper for reportError(). Declaration protected virtual void ReportUnexpectedCharacterError(int currentChar) Parameters Type Name Description Int32 currentChar what the caller found and didnt expect SkipCommaSpaces() Skips the whitespaces and an optional comma. Declaration protected virtual void SkipCommaSpaces() SkipSpaces() Skips the whitespaces in the current reader. Declaration protected virtual void SkipSpaces()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.html",
    "title": "Class SvgPathElement | SharpVectors Documentation",
    "keywords": "Class SvgPathElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgPathElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgPathElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable ISvgAnimatedPathData IEventTarget ISvgElementVisitorTarget ISharpMarkerHost Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgPathElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPathData, IEventTarget, ISvgElementVisitorTarget, ISharpMarkerHost Constructors SvgPathElement(String, String, String, SvgDocument) Declaration public SvgPathElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties AnimatedNormalizedPathSegList Declaration public ISvgPathSegList AnimatedNormalizedPathSegList { get; } Property Value Type Description ISvgPathSegList AnimatedPathSegList Declaration public ISvgPathSegList AnimatedPathSegList { get; } Property Value Type Description ISvgPathSegList ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean MarkerPositions Declaration public SvgPointF[] MarkerPositions { get; } Property Value Type Description SvgPointF [] MayHaveCurves Declaration public bool MayHaveCurves { get; } Property Value Type Description Boolean NormalizedPathSegList Declaration public ISvgPathSegList NormalizedPathSegList { get; } Property Value Type Description ISvgPathSegList PathLength Declaration public ISvgAnimatedNumber PathLength { get; } Property Value Type Description ISvgAnimatedNumber PathScript Declaration public string PathScript { get; } Property Value Type Description String PathSegList Declaration public SvgPathSegList PathSegList { get; } Property Value Type Description SvgPathSegList RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor CreateSvgPathSegArcAbs(Double, Double, Double, Double, Double, Boolean, Boolean) Declaration public ISvgPathSegArcAbs CreateSvgPathSegArcAbs(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters Type Name Description Double x Double y Double r1 Double r2 Double angle Boolean largeArcFlag Boolean sweepFlag Returns Type Description ISvgPathSegArcAbs CreateSvgPathSegArcRel(Double, Double, Double, Double, Double, Boolean, Boolean) Declaration public ISvgPathSegArcRel CreateSvgPathSegArcRel(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters Type Name Description Double x Double y Double r1 Double r2 Double angle Boolean largeArcFlag Boolean sweepFlag Returns Type Description ISvgPathSegArcRel CreateSvgPathSegClosePath() Declaration public ISvgPathSegClosePath CreateSvgPathSegClosePath() Returns Type Description ISvgPathSegClosePath CreateSvgPathSegCurvetoCubicAbs(Double, Double, Double, Double, Double, Double) Declaration public ISvgPathSegCurvetoCubicAbs CreateSvgPathSegCurvetoCubicAbs(double x, double y, double x1, double y1, double x2, double y2) Parameters Type Name Description Double x Double y Double x1 Double y1 Double x2 Double y2 Returns Type Description ISvgPathSegCurvetoCubicAbs CreateSvgPathSegCurvetoCubicRel(Double, Double, Double, Double, Double, Double) Declaration public ISvgPathSegCurvetoCubicRel CreateSvgPathSegCurvetoCubicRel(double x, double y, double x1, double y1, double x2, double y2) Parameters Type Name Description Double x Double y Double x1 Double y1 Double x2 Double y2 Returns Type Description ISvgPathSegCurvetoCubicRel CreateSvgPathSegCurvetoCubicSmoothAbs(Double, Double, Double, Double) Declaration public ISvgPathSegCurvetoCubicSmoothAbs CreateSvgPathSegCurvetoCubicSmoothAbs(double x, double y, double x2, double y2) Parameters Type Name Description Double x Double y Double x2 Double y2 Returns Type Description ISvgPathSegCurvetoCubicSmoothAbs CreateSvgPathSegCurvetoCubicSmoothRel(Double, Double, Double, Double) Declaration public ISvgPathSegCurvetoCubicSmoothRel CreateSvgPathSegCurvetoCubicSmoothRel(double x, double y, double x2, double y2) Parameters Type Name Description Double x Double y Double x2 Double y2 Returns Type Description ISvgPathSegCurvetoCubicSmoothRel CreateSvgPathSegCurvetoQuadraticAbs(Double, Double, Double, Double) Declaration public ISvgPathSegCurvetoQuadraticAbs CreateSvgPathSegCurvetoQuadraticAbs(double x, double y, double x1, double y1) Parameters Type Name Description Double x Double y Double x1 Double y1 Returns Type Description ISvgPathSegCurvetoQuadraticAbs CreateSvgPathSegCurvetoQuadraticRel(Double, Double, Double, Double) Declaration public ISvgPathSegCurvetoQuadraticRel CreateSvgPathSegCurvetoQuadraticRel(double x, double y, double x1, double y1) Parameters Type Name Description Double x Double y Double x1 Double y1 Returns Type Description ISvgPathSegCurvetoQuadraticRel CreateSvgPathSegCurvetoQuadraticSmoothAbs(Double, Double) Declaration public ISvgPathSegCurvetoQuadraticSmoothAbs CreateSvgPathSegCurvetoQuadraticSmoothAbs(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegCurvetoQuadraticSmoothAbs CreateSvgPathSegCurvetoQuadraticSmoothRel(Double, Double) Declaration public ISvgPathSegCurvetoQuadraticSmoothRel CreateSvgPathSegCurvetoQuadraticSmoothRel(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegCurvetoQuadraticSmoothRel CreateSvgPathSegLinetoAbs(Double, Double) Declaration public ISvgPathSegLinetoAbs CreateSvgPathSegLinetoAbs(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegLinetoAbs CreateSvgPathSegLinetoHorizontalAbs(Double) Declaration public ISvgPathSegLinetoHorizontalAbs CreateSvgPathSegLinetoHorizontalAbs(double x) Parameters Type Name Description Double x Returns Type Description ISvgPathSegLinetoHorizontalAbs CreateSvgPathSegLinetoHorizontalRel(Double) Declaration public ISvgPathSegLinetoHorizontalRel CreateSvgPathSegLinetoHorizontalRel(double x) Parameters Type Name Description Double x Returns Type Description ISvgPathSegLinetoHorizontalRel CreateSvgPathSegLinetoRel(Double, Double) Declaration public ISvgPathSegLinetoRel CreateSvgPathSegLinetoRel(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegLinetoRel CreateSvgPathSegLinetoVerticalAbs(Double) Declaration public ISvgPathSegLinetoVerticalAbs CreateSvgPathSegLinetoVerticalAbs(double y) Parameters Type Name Description Double y Returns Type Description ISvgPathSegLinetoVerticalAbs CreateSvgPathSegLinetoVerticalRel(Double) Declaration public ISvgPathSegLinetoVerticalRel CreateSvgPathSegLinetoVerticalRel(double y) Parameters Type Name Description Double y Returns Type Description ISvgPathSegLinetoVerticalRel CreateSvgPathSegMovetoAbs(Double, Double) Declaration public ISvgPathSegMovetoAbs CreateSvgPathSegMovetoAbs(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegMovetoAbs CreateSvgPathSegMovetoRel(Double, Double) Declaration public ISvgPathSegMovetoRel CreateSvgPathSegMovetoRel(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description ISvgPathSegMovetoRel GetEndAngle(Int32) Declaration public double GetEndAngle(int index) Parameters Type Name Description Int32 index Returns Type Description Double GetMarker(Int32) Declaration public ISvgMarker GetMarker(int index) Parameters Type Name Description Int32 index Returns Type Description ISvgMarker GetPathSegAtLength(Double) Declaration public int GetPathSegAtLength(double distance) Parameters Type Name Description Double distance Returns Type Description Int32 GetPointAtLength(Double) Declaration public ISvgPoint GetPointAtLength(double distance) Parameters Type Name Description Double distance Returns Type Description ISvgPoint GetStartAngle(Int32) Declaration public double GetStartAngle(int index) Parameters Type Name Description Int32 index Returns Type Description Double GetTotalLength() Declaration public double GetTotalLength() Returns Type Description Double HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Invalidate() Declaration public void Invalidate() Explicit Interface Implementations ISvgAnimatedPathData.PathSegList Declaration ISvgPathSegList ISvgAnimatedPathData.PathSegList { get; } Returns Type Description ISvgPathSegList Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgPathElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable ISvgAnimatedPathData IEventTarget ISvgElementVisitorTarget ISharpMarkerHost"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.html",
    "title": "Class SvgPathParser | SharpVectors Documentation",
    "keywords": "Class SvgPathParser This class implements an event-based parser for the SVG path's d attribute values. Inheritance Object SvgParser SvgNumberParser SvgPathParser Inherited Members SvgNumberParser.ParseFloat() SvgNumberParser.BuildFloat(Int32, Int32) SvgParser._reader SvgParser._current SvgParser.Current SvgParser.FormatMessage(String, Object[]) SvgParser.Parse(String) SvgParser.ReportError(String, Object[]) SvgParser.ReportCharacterExpectedError(Char, Int32) SvgParser.ReportUnexpectedCharacterError(Int32) SvgParser.CreateErrorMessage(String, Object[]) SvgParser.SkipSpaces() SvgParser.SkipCommaSpaces() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgPathParser : SvgNumberParser Constructors SvgPathParser(ISvgPathHandler) Creates a new PathParser. Declaration public SvgPathParser(ISvgPathHandler handler) Parameters Type Name Description ISvgPathHandler handler Fields _pathHandler The path handler used to report parse events. Declaration protected ISvgPathHandler _pathHandler Field Value Type Description ISvgPathHandler Properties Handler Allows an application to register a path handler. If the application does not register a handler, all events reported by the parser will be silently ignored. Applications may register a new or different handler in the middle of a parse, and the parser must begin using the new handler immediately. Declaration public virtual ISvgPathHandler Handler { get; set; } Property Value Type Description ISvgPathHandler The transform list handler. Methods _parsel(Boolean) Declaration protected virtual void _parsel(bool expectNumber) Parameters Type Name Description Boolean expectNumber _parseL(Boolean) Declaration protected virtual void _parseL(bool expectNumber) Parameters Type Name Description Boolean expectNumber DoParse() Declaration protected override void DoParse() Overrides SvgParser.DoParse() Parsea() Parses a 'a' command. Declaration protected virtual void Parsea() ParseA() Parses a 'A' command. Declaration protected virtual void ParseA() Parsec() Parses a 'c' command. Declaration protected virtual void Parsec() ParseC() Parses a 'C' command. Declaration protected virtual void ParseC() Parseh() Parses a 'h' command. Declaration protected virtual void Parseh() ParseH() Parses a 'H' command. Declaration protected virtual void ParseH() Parsel() Parses a 'l' command. Declaration protected virtual void Parsel() ParseL() Parses a 'L' command. Declaration protected virtual void ParseL() Parsem() Parses a 'm' command. Declaration protected virtual void Parsem() ParseM() Parses a 'M' command. Declaration protected virtual void ParseM() Parseq() Parses a 'q' command. Declaration protected virtual void Parseq() ParseQ() Parses a 'Q' command. Declaration protected virtual void ParseQ() Parses() Parses a 's' command. Declaration protected virtual void Parses() ParseS() Parses a 'S' command. Declaration protected virtual void ParseS() Parset() Parses a 't' command. Declaration protected virtual void Parset() ParseT() Parses a 'T' command. Declaration protected virtual void ParseT() Parsev() Parses a 'v' command. Declaration protected virtual void Parsev() ParseV() Parses a 'V' command. Declaration protected virtual void ParseV() ReportUnexpected(Int32) Declaration protected virtual void ReportUnexpected(int ch) Parameters Type Name Description Int32 ch SkipCommaSpaces2() Skips the whitespaces and an optional comma. Declaration protected virtual bool SkipCommaSpaces2() Returns Type Description Boolean true if comma was skipped. SkipSubPath() Skips a sub-path. Declaration protected virtual void SkipSubPath()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.html",
    "title": "Class SvgPathSeg | SharpVectors Documentation",
    "keywords": "Class SvgPathSeg Inheritance Object SvgPathSeg SvgPathSegArc SvgPathSegClosePath SvgPathSegCurveto SvgPathSegLineto SvgPathSegMoveto Implements ISvgPathSeg Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgPathSeg : ISvgPathSeg Constructors SvgPathSeg(SvgPathSegType) Declaration protected SvgPathSeg(SvgPathSegType type) Parameters Type Name Description SvgPathSegType type Fields _limits Declaration protected SvgPointF[] _limits Field Value Type Description SvgPointF [] _type Declaration protected SvgPathSegType _type Field Value Type Description SvgPathSegType Properties AbsXY Declaration public abstract SvgPointF AbsXY { get; } Property Value Type Description SvgPointF EndAngle Declaration public abstract double EndAngle { get; } Property Value Type Description Double Index Declaration public int Index { get; } Property Value Type Description Int32 IsAbsolute Declaration public bool IsAbsolute { get; } Property Value Type Description Boolean IsCurve Declaration public bool IsCurve { get; } Property Value Type Description Boolean IsRelative Declaration public bool IsRelative { get; } Property Value Type Description Boolean Length Declaration public virtual double Length { get; } Property Value Type Description Double Limits Declaration public SvgPointF[] Limits { get; set; } Property Value Type Description SvgPointF [] NextSeg Declaration public SvgPathSeg NextSeg { get; } Property Value Type Description SvgPathSeg PathSegType Declaration public SvgPathSegType PathSegType { get; } Property Value Type Description SvgPathSegType PathSegTypeAsLetter Declaration public string PathSegTypeAsLetter { get; } Property Value Type Description String PathText Declaration public abstract string PathText { get; } Property Value Type Description String PathType Declaration public virtual SvgPathType PathType { get; } Property Value Type Description SvgPathType PreviousSeg Declaration public SvgPathSeg PreviousSeg { get; } Property Value Type Description SvgPathSeg StartAngle Declaration public abstract double StartAngle { get; } Property Value Type Description Double Explicit Interface Implementations ISvgPathSeg.NextSeg Declaration ISvgPathSeg ISvgPathSeg.NextSeg { get; } Returns Type Description ISvgPathSeg ISvgPathSeg.PreviousSeg Declaration ISvgPathSeg ISvgPathSeg.PreviousSeg { get; } Returns Type Description ISvgPathSeg Implements ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.html",
    "title": "Class SvgPathSegArc | SharpVectors Documentation",
    "keywords": "Class SvgPathSegArc Inheritance Object SvgPathSeg SvgPathSegArc SvgPathSegArcAbs SvgPathSegArcRel Implements ISvgPathSeg Inherited Members SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgPathSegArc : SvgPathSeg, ISvgPathSeg Constructors SvgPathSegArc(SvgPathSegType, Double, Double, Double, Double, Double, Boolean, Boolean) Declaration protected SvgPathSegArc(SvgPathSegType type, double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters Type Name Description SvgPathSegType type Double x Double y Double r1 Double r2 Double angle Boolean largeArcFlag Boolean sweepFlag Properties AbsXY Declaration public abstract override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSeg.AbsXY Angle Declaration public double Angle { get; set; } Property Value Type Description Double EndAngle Declaration public override double EndAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.EndAngle LargeArcFlag Declaration public bool LargeArcFlag { get; set; } Property Value Type Description Boolean PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText PathType Declaration public override SvgPathType PathType { get; } Property Value Type Description SvgPathType Overrides SvgPathSeg.PathType R1 Declaration public double R1 { get; set; } Property Value Type Description Double R2 Declaration public double R2 { get; set; } Property Value Type Description Double StartAngle Declaration public override double StartAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.StartAngle SweepFlag Declaration public bool SweepFlag { get; set; } Property Value Type Description Boolean X Declaration public double X { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Methods GetCalculatedArcValues() Declaration public CalculatedArcValues GetCalculatedArcValues() Returns Type Description CalculatedArcValues Implements ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArcAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArcAbs.html",
    "title": "Class SvgPathSegArcAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegArcAbs Summary description for SvgPathSegLinetoAbs. Inheritance Object SvgPathSeg SvgPathSegArc SvgPathSegArcAbs Implements ISvgPathSegArcAbs ISvgPathSeg Inherited Members SvgPathSegArc.PathType SvgPathSegArc.X SvgPathSegArc.Y SvgPathSegArc.R1 SvgPathSegArc.R2 SvgPathSegArc.Angle SvgPathSegArc.LargeArcFlag SvgPathSegArc.SweepFlag SvgPathSegArc.StartAngle SvgPathSegArc.EndAngle SvgPathSegArc.PathText SvgPathSegArc.GetCalculatedArcValues() SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegArcAbs : SvgPathSegArc, ISvgPathSegArcAbs, ISvgPathSeg Constructors SvgPathSegArcAbs(Double, Double, Double, Double, Double, Boolean, Boolean) Declaration public SvgPathSegArcAbs(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters Type Name Description Double x Double y Double r1 Double r2 Double angle Boolean largeArcFlag Boolean sweepFlag Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegArc.AbsXY Implements ISvgPathSegArcAbs ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArcRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArcRel.html",
    "title": "Class SvgPathSegArcRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegArcRel Summary description for SvgPathSegLinetoAbs. Inheritance Object SvgPathSeg SvgPathSegArc SvgPathSegArcRel Implements ISvgPathSegArcRel ISvgPathSeg Inherited Members SvgPathSegArc.PathType SvgPathSegArc.X SvgPathSegArc.Y SvgPathSegArc.R1 SvgPathSegArc.R2 SvgPathSegArc.Angle SvgPathSegArc.LargeArcFlag SvgPathSegArc.SweepFlag SvgPathSegArc.StartAngle SvgPathSegArc.EndAngle SvgPathSegArc.PathText SvgPathSegArc.GetCalculatedArcValues() SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegArcRel : SvgPathSegArc, ISvgPathSegArcRel, ISvgPathSeg Constructors SvgPathSegArcRel(Double, Double, Double, Double, Double, Boolean, Boolean) Declaration public SvgPathSegArcRel(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters Type Name Description Double x Double y Double r1 Double r2 Double angle Boolean largeArcFlag Boolean sweepFlag Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegArc.AbsXY Implements ISvgPathSegArcRel ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.html",
    "title": "Class SvgPathSegClosePath | SharpVectors Documentation",
    "keywords": "Class SvgPathSegClosePath Summary description for SvgPathSegClosePath. Inheritance Object SvgPathSeg SvgPathSegClosePath Implements ISvgPathSegClosePath ISvgPathSeg Inherited Members SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegClosePath : SvgPathSeg, ISvgPathSegClosePath, ISvgPathSeg Constructors SvgPathSegClosePath() Declaration public SvgPathSegClosePath() Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSeg.AbsXY EndAngle Declaration public override double EndAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.EndAngle PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText PathType Declaration public override SvgPathType PathType { get; } Property Value Type Description SvgPathType Overrides SvgPathSeg.PathType StartAngle Declaration public override double StartAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.StartAngle Implements ISvgPathSegClosePath ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.html",
    "title": "Class SvgPathSegCurveto | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurveto Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoQuadratic Implements ISvgPathSeg Inherited Members SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgPathSegCurveto : SvgPathSeg, ISvgPathSeg Constructors SvgPathSegCurveto(SvgPathSegType) Declaration protected SvgPathSegCurveto(SvgPathSegType type) Parameters Type Name Description SvgPathSegType type Properties AbsXY Declaration public abstract override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSeg.AbsXY CubicX1Y1 Declaration public abstract SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF CubicX2Y2 Declaration public abstract SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF EndAngle Declaration public override double EndAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.EndAngle Length Declaration public override double Length { get; } Property Value Type Description Double Overrides SvgPathSeg.Length PathType Declaration public override SvgPathType PathType { get; } Property Value Type Description SvgPathType Overrides SvgPathSeg.PathType StartAngle Declaration public override double StartAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.StartAngle Methods GetArcLengthPolynomial() Declaration protected abstract SqrtPolynomial GetArcLengthPolynomial() Returns Type Description SharpVectors.Polynomials.SqrtPolynomial Implements ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.html",
    "title": "Class SvgPathSegCurvetoCubic | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubic Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicAbs SvgPathSegCurvetoCubicRel SvgPathSegCurvetoCubicSmoothAbs SvgPathSegCurvetoCubicSmoothRel Implements ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgPathSegCurvetoCubic : SvgPathSegCurveto, ISvgPathSeg Constructors SvgPathSegCurvetoCubic(SvgPathSegType) Declaration protected SvgPathSegCurvetoCubic(SvgPathSegType type) Parameters Type Name Description SvgPathSegType type Properties AbsXY Declaration public abstract override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurveto.AbsXY CubicX1Y1 Declaration public abstract override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurveto.CubicX1Y1 CubicX2Y2 Declaration public abstract override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurveto.CubicX2Y2 Methods GetArcLengthPolynomial() Declaration protected override SqrtPolynomial GetArcLengthPolynomial() Returns Type Description SharpVectors.Polynomials.SqrtPolynomial Overrides SvgPathSegCurveto.GetArcLengthPolynomial() Implements ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.html",
    "title": "Class SvgPathSegCurvetoCubicAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubicAbs Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicAbs Implements ISvgPathSegCurvetoCubicAbs ISvgPathSeg Inherited Members SvgPathSegCurvetoCubic.GetArcLengthPolynomial() SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegCurvetoCubicAbs : SvgPathSegCurvetoCubic, ISvgPathSegCurvetoCubicAbs, ISvgPathSeg Constructors SvgPathSegCurvetoCubicAbs(Double, Double, Double, Double, Double, Double) Declaration public SvgPathSegCurvetoCubicAbs(double x, double y, double x1, double y1, double x2, double y2) Parameters Type Name Description Double x Double y Double x1 Double y1 Double x2 Double y2 Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.AbsXY CubicX1Y1 Declaration public override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.CubicX1Y1 CubicX2Y2 Declaration public override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.CubicX2Y2 PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText X Declaration public double X { get; set; } Property Value Type Description Double X1 Declaration public double X1 { get; set; } Property Value Type Description Double X2 Declaration public double X2 { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Y1 Declaration public double Y1 { get; set; } Property Value Type Description Double Y2 Declaration public double Y2 { get; set; } Property Value Type Description Double Implements ISvgPathSegCurvetoCubicAbs ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.html",
    "title": "Class SvgPathSegCurvetoCubicRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubicRel Summary description for SvgPathSegCurvetoCubicRel. Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicRel Implements ISvgPathSegCurvetoCubicRel ISvgPathSeg Inherited Members SvgPathSegCurvetoCubic.GetArcLengthPolynomial() SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegCurvetoCubicRel : SvgPathSegCurvetoCubic, ISvgPathSegCurvetoCubicRel, ISvgPathSeg Constructors SvgPathSegCurvetoCubicRel(Double, Double, Double, Double, Double, Double) Declaration public SvgPathSegCurvetoCubicRel(double x, double y, double x1, double y1, double x2, double y2) Parameters Type Name Description Double x Double y Double x1 Double y1 Double x2 Double y2 Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.AbsXY CubicX1Y1 Declaration public override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.CubicX1Y1 CubicX2Y2 Declaration public override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.CubicX2Y2 PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText X Declaration public double X { get; set; } Property Value Type Description Double X1 Declaration public double X1 { get; set; } Property Value Type Description Double X2 Declaration public double X2 { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Y1 Declaration public double Y1 { get; set; } Property Value Type Description Double Y2 Declaration public double Y2 { get; set; } Property Value Type Description Double Implements ISvgPathSegCurvetoCubicRel ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.html",
    "title": "Class SvgPathSegCurvetoCubicSmoothAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubicSmoothAbs Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicSmoothAbs Implements ISvgPathSegCurvetoCubicSmoothAbs ISvgPathSeg Inherited Members SvgPathSegCurvetoCubic.GetArcLengthPolynomial() SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegCurvetoCubicSmoothAbs : SvgPathSegCurvetoCubic, ISvgPathSegCurvetoCubicSmoothAbs, ISvgPathSeg Constructors SvgPathSegCurvetoCubicSmoothAbs(Double, Double, Double, Double) Declaration public SvgPathSegCurvetoCubicSmoothAbs(double x, double y, double x2, double y2) Parameters Type Name Description Double x Double y Double x2 Double y2 Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.AbsXY CubicX1Y1 Declaration public override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.CubicX1Y1 CubicX2Y2 Declaration public override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.CubicX2Y2 PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText X Declaration public double X { get; set; } Property Value Type Description Double X2 Declaration public double X2 { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Y2 Declaration public double Y2 { get; set; } Property Value Type Description Double Implements ISvgPathSegCurvetoCubicSmoothAbs ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.html",
    "title": "Class SvgPathSegCurvetoCubicSmoothRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubicSmoothRel Summary description for SvgPathSegCurvetoCubicSmoothAbs. Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicSmoothRel Implements ISvgPathSegCurvetoCubicSmoothRel ISvgPathSeg Inherited Members SvgPathSegCurvetoCubic.GetArcLengthPolynomial() SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegCurvetoCubicSmoothRel : SvgPathSegCurvetoCubic, ISvgPathSegCurvetoCubicSmoothRel, ISvgPathSeg Constructors SvgPathSegCurvetoCubicSmoothRel(Double, Double, Double, Double) Declaration public SvgPathSegCurvetoCubicSmoothRel(double x, double y, double x2, double y2) Parameters Type Name Description Double x Double y Double x2 Double y2 Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.AbsXY CubicX1Y1 Declaration public override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.CubicX1Y1 CubicX2Y2 Declaration public override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoCubic.CubicX2Y2 PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText X Declaration public double X { get; set; } Property Value Type Description Double X2 Declaration public double X2 { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Y2 Declaration public double Y2 { get; set; } Property Value Type Description Double Implements ISvgPathSegCurvetoCubicSmoothRel ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.html",
    "title": "Class SvgPathSegCurvetoQuadratic | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadratic Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticAbs SvgPathSegCurvetoQuadraticRel SvgPathSegCurvetoQuadraticSmoothAbs SvgPathSegCurvetoQuadraticSmoothRel Implements ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgPathSegCurvetoQuadratic : SvgPathSegCurveto, ISvgPathSeg Constructors SvgPathSegCurvetoQuadratic(SvgPathSegType) Declaration protected SvgPathSegCurvetoQuadratic(SvgPathSegType type) Parameters Type Name Description SvgPathSegType type Properties AbsXY Declaration public abstract override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurveto.AbsXY CubicX1Y1 Declaration public abstract override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurveto.CubicX1Y1 CubicX2Y2 Declaration public abstract override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurveto.CubicX2Y2 QuadraticX1Y1 Declaration public abstract SvgPointF QuadraticX1Y1 { get; } Property Value Type Description SvgPointF Methods GetArcLengthPolynomial() Declaration protected override SqrtPolynomial GetArcLengthPolynomial() Returns Type Description SharpVectors.Polynomials.SqrtPolynomial Overrides SvgPathSegCurveto.GetArcLengthPolynomial() Implements ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.html",
    "title": "Class SvgPathSegCurvetoQuadraticAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadraticAbs Summary description for SvgPathSegCurvetoCubicAbs. Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticAbs Implements ISvgPathSegCurvetoQuadraticAbs ISvgPathSeg Inherited Members SvgPathSegCurvetoQuadratic.GetArcLengthPolynomial() SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegCurvetoQuadraticAbs : SvgPathSegCurvetoQuadratic, ISvgPathSegCurvetoQuadraticAbs, ISvgPathSeg Constructors SvgPathSegCurvetoQuadraticAbs(Double, Double, Double, Double) Declaration public SvgPathSegCurvetoQuadraticAbs(double x, double y, double x1, double y1) Parameters Type Name Description Double x Double y Double x1 Double y1 Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.AbsXY CubicX1Y1 Declaration public override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.CubicX1Y1 CubicX2Y2 Declaration public override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.CubicX2Y2 PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText QuadraticX1Y1 Declaration public override SvgPointF QuadraticX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.QuadraticX1Y1 X Declaration public double X { get; set; } Property Value Type Description Double X1 Declaration public double X1 { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Y1 Declaration public double Y1 { get; set; } Property Value Type Description Double Implements ISvgPathSegCurvetoQuadraticAbs ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.html",
    "title": "Class SvgPathSegCurvetoQuadraticRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadraticRel Summary description for SvgPathSegCurvetoCubicAbs. Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticRel Implements ISvgPathSegCurvetoQuadraticRel ISvgPathSeg Inherited Members SvgPathSegCurvetoQuadratic.GetArcLengthPolynomial() SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegCurvetoQuadraticRel : SvgPathSegCurvetoQuadratic, ISvgPathSegCurvetoQuadraticRel, ISvgPathSeg Constructors SvgPathSegCurvetoQuadraticRel(Double, Double, Double, Double) Declaration public SvgPathSegCurvetoQuadraticRel(double x, double y, double x1, double y1) Parameters Type Name Description Double x Double y Double x1 Double y1 Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.AbsXY CubicX1Y1 Declaration public override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.CubicX1Y1 CubicX2Y2 Declaration public override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.CubicX2Y2 PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText QuadraticX1Y1 Declaration public override SvgPointF QuadraticX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.QuadraticX1Y1 X Declaration public double X { get; set; } Property Value Type Description Double X1 Declaration public double X1 { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Y1 Declaration public double Y1 { get; set; } Property Value Type Description Double Implements ISvgPathSegCurvetoQuadraticRel ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.html",
    "title": "Class SvgPathSegCurvetoQuadraticSmoothAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadraticSmoothAbs The SvgPathSegCurvetoQuadraticSmoothAbs interface corresponds to an \"absolute smooth quadratic curveto\" (T) path data command. Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticSmoothAbs Implements ISvgPathSegCurvetoQuadraticSmoothAbs ISvgPathSeg Inherited Members SvgPathSegCurvetoQuadratic.GetArcLengthPolynomial() SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegCurvetoQuadraticSmoothAbs : SvgPathSegCurvetoQuadratic, ISvgPathSegCurvetoQuadraticSmoothAbs, ISvgPathSeg Constructors SvgPathSegCurvetoQuadraticSmoothAbs(Double, Double) Declaration public SvgPathSegCurvetoQuadraticSmoothAbs(double x, double y) Parameters Type Name Description Double x Double y Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.AbsXY CubicX1Y1 Declaration public override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.CubicX1Y1 CubicX2Y2 Declaration public override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.CubicX2Y2 PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText QuadraticX1Y1 Declaration public override SvgPointF QuadraticX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.QuadraticX1Y1 X The absolute X coordinate for the end point of this path segment. Declaration public double X { get; set; } Property Value Type Description Double Y The absolute Y coordinate for the end point of this path segment. Declaration public double Y { get; set; } Property Value Type Description Double Implements ISvgPathSegCurvetoQuadraticSmoothAbs ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.html",
    "title": "Class SvgPathSegCurvetoQuadraticSmoothRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadraticSmoothRel The SvgPathSegCurvetoQuadraticSmoothRel interface corresponds to an \"relative smooth quadratic curveto\" (t) path data command. Inheritance Object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticSmoothRel Implements ISvgPathSegCurvetoQuadraticSmoothRel ISvgPathSeg Inherited Members SvgPathSegCurvetoQuadratic.GetArcLengthPolynomial() SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegCurvetoQuadraticSmoothRel : SvgPathSegCurvetoQuadratic, ISvgPathSegCurvetoQuadraticSmoothRel, ISvgPathSeg Constructors SvgPathSegCurvetoQuadraticSmoothRel(Double, Double) Declaration public SvgPathSegCurvetoQuadraticSmoothRel(double x, double y) Parameters Type Name Description Double x Double y Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.AbsXY CubicX1Y1 Declaration public override SvgPointF CubicX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.CubicX1Y1 CubicX2Y2 Declaration public override SvgPointF CubicX2Y2 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.CubicX2Y2 PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText QuadraticX1Y1 Declaration public override SvgPointF QuadraticX1Y1 { get; } Property Value Type Description SvgPointF Overrides SvgPathSegCurvetoQuadratic.QuadraticX1Y1 X The absolute X coordinate for the end point of this path segment. Declaration public double X { get; set; } Property Value Type Description Double Y The absolute Y coordinate for the end point of this path segment. Declaration public double Y { get; set; } Property Value Type Description Double Implements ISvgPathSegCurvetoQuadraticSmoothRel ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.html",
    "title": "Class SvgPathSegHandler | SharpVectors Documentation",
    "keywords": "Class SvgPathSegHandler Inheritance Object SvgPathSegHandler Implements ISvgPathHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegHandler : ISvgPathHandler Constructors SvgPathSegHandler(SvgPathSegList) Declaration public SvgPathSegHandler(SvgPathSegList pathList) Parameters Type Name Description SvgPathSegList pathList Properties IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean MayHaveCurves Declaration public bool MayHaveCurves { get; } Property Value Type Description Boolean Methods ArcAbs(Single, Single, Single, Boolean, Boolean, Single, Single) Declaration public void ArcAbs(float rx, float ry, float xAxisRotation, bool largeArcFlag, bool sweepFlag, float x, float y) Parameters Type Name Description Single rx Single ry Single xAxisRotation Boolean largeArcFlag Boolean sweepFlag Single x Single y ArcRel(Single, Single, Single, Boolean, Boolean, Single, Single) Declaration public void ArcRel(float rx, float ry, float xAxisRotation, bool largeArcFlag, bool sweepFlag, float x, float y) Parameters Type Name Description Single rx Single ry Single xAxisRotation Boolean largeArcFlag Boolean sweepFlag Single x Single y ClosePath() Declaration public void ClosePath() CurvetoCubicAbs(Single, Single, Single, Single, Single, Single) Declaration public void CurvetoCubicAbs(float x1, float y1, float x2, float y2, float x, float y) Parameters Type Name Description Single x1 Single y1 Single x2 Single y2 Single x Single y CurvetoCubicRel(Single, Single, Single, Single, Single, Single) Declaration public void CurvetoCubicRel(float x1, float y1, float x2, float y2, float x, float y) Parameters Type Name Description Single x1 Single y1 Single x2 Single y2 Single x Single y CurvetoCubicSmoothAbs(Single, Single, Single, Single) Declaration public void CurvetoCubicSmoothAbs(float x2, float y2, float x, float y) Parameters Type Name Description Single x2 Single y2 Single x Single y CurvetoCubicSmoothRel(Single, Single, Single, Single) Declaration public void CurvetoCubicSmoothRel(float x2, float y2, float x, float y) Parameters Type Name Description Single x2 Single y2 Single x Single y CurvetoQuadraticAbs(Single, Single, Single, Single) Declaration public void CurvetoQuadraticAbs(float x1, float y1, float x, float y) Parameters Type Name Description Single x1 Single y1 Single x Single y CurvetoQuadraticRel(Single, Single, Single, Single) Declaration public void CurvetoQuadraticRel(float x1, float y1, float x, float y) Parameters Type Name Description Single x1 Single y1 Single x Single y CurvetoQuadraticSmoothAbs(Single, Single) Declaration public void CurvetoQuadraticSmoothAbs(float x, float y) Parameters Type Name Description Single x Single y CurvetoQuadraticSmoothRel(Single, Single) Declaration public void CurvetoQuadraticSmoothRel(float x, float y) Parameters Type Name Description Single x Single y EndPath() Declaration public void EndPath() LinetoAbs(Single, Single) Declaration public void LinetoAbs(float x, float y) Parameters Type Name Description Single x Single y LinetoHorizontalAbs(Single) Declaration public void LinetoHorizontalAbs(float x) Parameters Type Name Description Single x LinetoHorizontalRel(Single) Declaration public void LinetoHorizontalRel(float x) Parameters Type Name Description Single x LinetoRel(Single, Single) Declaration public void LinetoRel(float x, float y) Parameters Type Name Description Single x Single y LinetoVerticalAbs(Single) Declaration public void LinetoVerticalAbs(float y) Parameters Type Name Description Single y LinetoVerticalRel(Single) Declaration public void LinetoVerticalRel(float y) Parameters Type Name Description Single y MovetoAbs(Single, Single) Declaration public void MovetoAbs(float x, float y) Parameters Type Name Description Single x Single y MovetoRel(Single, Single) Declaration public void MovetoRel(float x, float y) Parameters Type Name Description Single x Single y StartPath() Declaration public void StartPath() Implements ISvgPathHandler"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLineto.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLineto.html",
    "title": "Class SvgPathSegLineto | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLineto Inheritance Object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoAbs SvgPathSegLinetoHorizontalAbs SvgPathSegLinetoHorizontalRel SvgPathSegLinetoRel SvgPathSegLinetoVerticalAbs SvgPathSegLinetoVerticalRel Implements ISvgPathSeg Inherited Members SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgPathSegLineto : SvgPathSeg, ISvgPathSeg Constructors SvgPathSegLineto(SvgPathSegType) Declaration protected SvgPathSegLineto(SvgPathSegType type) Parameters Type Name Description SvgPathSegType type Properties AbsXY Declaration public abstract override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSeg.AbsXY EndAngle Declaration public override double EndAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.EndAngle Length Declaration public override double Length { get; } Property Value Type Description Double Overrides SvgPathSeg.Length PathType Declaration public override SvgPathType PathType { get; } Property Value Type Description SvgPathType Overrides SvgPathSeg.PathType StartAngle Declaration public override double StartAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.StartAngle Implements ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.html",
    "title": "Class SvgPathSegLinetoAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoAbs Inheritance Object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoAbs Implements ISvgPathSegLinetoAbs ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegLinetoAbs : SvgPathSegLineto, ISvgPathSegLinetoAbs, ISvgPathSeg Constructors SvgPathSegLinetoAbs(Double, Double) Declaration public SvgPathSegLinetoAbs(double x, double y) Parameters Type Name Description Double x Double y Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegLineto.AbsXY PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText X Declaration public double X { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Implements ISvgPathSegLinetoAbs ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.html",
    "title": "Class SvgPathSegLinetoHorizontalAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoHorizontalAbs Inheritance Object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoHorizontalAbs Implements ISvgPathSegLinetoHorizontalAbs ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegLinetoHorizontalAbs : SvgPathSegLineto, ISvgPathSegLinetoHorizontalAbs, ISvgPathSeg Constructors SvgPathSegLinetoHorizontalAbs(Double) Declaration public SvgPathSegLinetoHorizontalAbs(double x) Parameters Type Name Description Double x Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegLineto.AbsXY PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText X Declaration public double X { get; set; } Property Value Type Description Double Implements ISvgPathSegLinetoHorizontalAbs ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.html",
    "title": "Class SvgPathSegLinetoHorizontalRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoHorizontalRel Inheritance Object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoHorizontalRel Implements ISvgPathSegLinetoHorizontalRel ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegLinetoHorizontalRel : SvgPathSegLineto, ISvgPathSegLinetoHorizontalRel, ISvgPathSeg Constructors SvgPathSegLinetoHorizontalRel(Double) Declaration public SvgPathSegLinetoHorizontalRel(double x) Parameters Type Name Description Double x Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegLineto.AbsXY PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText X Declaration public double X { get; set; } Property Value Type Description Double Implements ISvgPathSegLinetoHorizontalRel ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.html",
    "title": "Class SvgPathSegLinetoRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoRel Inheritance Object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoRel Implements ISvgPathSegLinetoRel ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegLinetoRel : SvgPathSegLineto, ISvgPathSegLinetoRel, ISvgPathSeg Constructors SvgPathSegLinetoRel(Double, Double) Declaration public SvgPathSegLinetoRel(double x, double y) Parameters Type Name Description Double x Double y Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegLineto.AbsXY PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText X Declaration public double X { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Implements ISvgPathSegLinetoRel ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.html",
    "title": "Class SvgPathSegLinetoVerticalAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoVerticalAbs Inheritance Object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoVerticalAbs Implements ISvgPathSegLinetoVerticalAbs ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegLinetoVerticalAbs : SvgPathSegLineto, ISvgPathSegLinetoVerticalAbs, ISvgPathSeg Constructors SvgPathSegLinetoVerticalAbs(Double) Declaration public SvgPathSegLinetoVerticalAbs(double y) Parameters Type Name Description Double y Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegLineto.AbsXY PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText Y Declaration public double Y { get; set; } Property Value Type Description Double Implements ISvgPathSegLinetoVerticalAbs ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.html",
    "title": "Class SvgPathSegLinetoVerticalRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoVerticalRel Inheritance Object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoVerticalRel Implements ISvgPathSegLinetoVerticalRel ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegLinetoVerticalRel : SvgPathSegLineto, ISvgPathSegLinetoVerticalRel, ISvgPathSeg Constructors SvgPathSegLinetoVerticalRel(Double) Declaration public SvgPathSegLinetoVerticalRel(double y) Parameters Type Name Description Double y Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegLineto.AbsXY PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText Y Declaration public double Y { get; set; } Property Value Type Description Double Implements ISvgPathSegLinetoVerticalRel ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.html",
    "title": "Class SvgPathSegList | SharpVectors Documentation",
    "keywords": "Class SvgPathSegList Inheritance Object SvgPathSegList Implements ISvgPathSegList IList < ISvgPathSeg > ICollection < ISvgPathSeg > IEnumerable < ISvgPathSeg > IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgPathSegList : ISvgPathSegList, IList<ISvgPathSeg>, ICollection<ISvgPathSeg>, IEnumerable<ISvgPathSeg>, IEnumerable Constructors SvgPathSegList(ISvgPathSegList) Declaration public SvgPathSegList(ISvgPathSegList pathList) Parameters Type Name Description ISvgPathSegList pathList SvgPathSegList(String, Boolean) Declaration public SvgPathSegList(string d, bool readOnly) Parameters Type Name Description String d Boolean readOnly Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Item[Int32] Declaration public SvgPathSeg this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description SvgPathSeg MayHaveCurves Declaration public bool MayHaveCurves { get; } Property Value Type Description Boolean NumberOfItems Declaration public int NumberOfItems { get; } Property Value Type Description Int32 PathScript Declaration public string PathScript { get; } Property Value Type Description String PathText Declaration public string PathText { get; } Property Value Type Description String Points Declaration public SvgPointF[] Points { get; } Property Value Type Description SvgPointF [] Methods Add(SvgPathSeg) Declaration public void Add(SvgPathSeg item) Parameters Type Name Description SvgPathSeg item AppendItem(SvgPathSeg) Declaration public SvgPathSeg AppendItem(SvgPathSeg newItem) Parameters Type Name Description SvgPathSeg newItem Returns Type Description SvgPathSeg Clear() Declaration public void Clear() Contains(SvgPathSeg) Declaration public bool Contains(SvgPathSeg item) Parameters Type Name Description SvgPathSeg item Returns Type Description Boolean CopyTo(SvgPathSeg[], Int32) Declaration public void CopyTo(SvgPathSeg[] array, int arrayIndex) Parameters Type Name Description SvgPathSeg [] array Int32 arrayIndex GetEndAngle(Int32) Declaration public double GetEndAngle(int index) Parameters Type Name Description Int32 index Returns Type Description Double GetEnumerator() Declaration public IEnumerator<SvgPathSeg> GetEnumerator() Returns Type Description IEnumerator < SvgPathSeg > GetItem(Int32) Declaration public SvgPathSeg GetItem(int index) Parameters Type Name Description Int32 index Returns Type Description SvgPathSeg GetNextSegment(SvgPathSeg) Declaration public SvgPathSeg GetNextSegment(SvgPathSeg seg) Parameters Type Name Description SvgPathSeg seg Returns Type Description SvgPathSeg GetPathSegAtLength(Double) Declaration public int GetPathSegAtLength(double distance) Parameters Type Name Description Double distance Returns Type Description Int32 GetPreviousSegment(SvgPathSeg) Declaration public SvgPathSeg GetPreviousSegment(SvgPathSeg seg) Parameters Type Name Description SvgPathSeg seg Returns Type Description SvgPathSeg GetStartAngle(Int32) Declaration public double GetStartAngle(int index) Parameters Type Name Description Int32 index Returns Type Description Double GetTotalLength() Declaration public double GetTotalLength() Returns Type Description Double IndexOf(SvgPathSeg) Declaration public int IndexOf(SvgPathSeg item) Parameters Type Name Description SvgPathSeg item Returns Type Description Int32 Initialize(SvgPathSeg) Declaration public SvgPathSeg Initialize(SvgPathSeg newItem) Parameters Type Name Description SvgPathSeg newItem Returns Type Description SvgPathSeg Insert(Int32, SvgPathSeg) Declaration public void Insert(int index, SvgPathSeg item) Parameters Type Name Description Int32 index SvgPathSeg item InsertItemBefore(SvgPathSeg, Int32) Declaration public SvgPathSeg InsertItemBefore(SvgPathSeg newItem, int index) Parameters Type Name Description SvgPathSeg newItem Int32 index Returns Type Description SvgPathSeg Remove(SvgPathSeg) Declaration public bool Remove(SvgPathSeg item) Parameters Type Name Description SvgPathSeg item Returns Type Description Boolean RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index RemoveItem(Int32) Declaration public SvgPathSeg RemoveItem(int index) Parameters Type Name Description Int32 index Returns Type Description SvgPathSeg ReplaceItem(SvgPathSeg, Int32) Declaration public ISvgPathSeg ReplaceItem(SvgPathSeg newItem, int index) Parameters Type Name Description SvgPathSeg newItem Int32 index Returns Type Description ISvgPathSeg ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Explicit Interface Implementations ISvgPathSegList.AppendItem(ISvgPathSeg) Declaration ISvgPathSeg ISvgPathSegList.AppendItem(ISvgPathSeg newItem) Parameters Type Name Description ISvgPathSeg newItem Returns Type Description ISvgPathSeg ISvgPathSegList.GetItem(Int32) Declaration ISvgPathSeg ISvgPathSegList.GetItem(int index) Parameters Type Name Description Int32 index Returns Type Description ISvgPathSeg ISvgPathSegList.Initialize(ISvgPathSeg) Declaration ISvgPathSeg ISvgPathSegList.Initialize(ISvgPathSeg newItem) Parameters Type Name Description ISvgPathSeg newItem Returns Type Description ISvgPathSeg ISvgPathSegList.InsertItemBefore(ISvgPathSeg, Int32) Declaration ISvgPathSeg ISvgPathSegList.InsertItemBefore(ISvgPathSeg newItem, int index) Parameters Type Name Description ISvgPathSeg newItem Int32 index Returns Type Description ISvgPathSeg ISvgPathSegList.RemoveItem(Int32) Declaration ISvgPathSeg ISvgPathSegList.RemoveItem(int index) Parameters Type Name Description Int32 index Returns Type Description ISvgPathSeg ISvgPathSegList.ReplaceItem(ISvgPathSeg, Int32) Declaration ISvgPathSeg ISvgPathSegList.ReplaceItem(ISvgPathSeg newItem, int index) Parameters Type Name Description ISvgPathSeg newItem Int32 index Returns Type Description ISvgPathSeg ICollection<ISvgPathSeg>.Add(ISvgPathSeg) Declaration void ICollection<ISvgPathSeg>.Add(ISvgPathSeg item) Parameters Type Name Description ISvgPathSeg item ICollection<ISvgPathSeg>.Contains(ISvgPathSeg) Declaration bool ICollection<ISvgPathSeg>.Contains(ISvgPathSeg item) Parameters Type Name Description ISvgPathSeg item Returns Type Description Boolean ICollection<ISvgPathSeg>.CopyTo(ISvgPathSeg[], Int32) Declaration void ICollection<ISvgPathSeg>.CopyTo(ISvgPathSeg[] array, int arrayIndex) Parameters Type Name Description ISvgPathSeg [] array Int32 arrayIndex ICollection<ISvgPathSeg>.Remove(ISvgPathSeg) Declaration bool ICollection<ISvgPathSeg>.Remove(ISvgPathSeg item) Parameters Type Name Description ISvgPathSeg item Returns Type Description Boolean IEnumerable<ISvgPathSeg>.GetEnumerator() Declaration IEnumerator<ISvgPathSeg> IEnumerable<ISvgPathSeg>.GetEnumerator() Returns Type Description IEnumerator < ISvgPathSeg > IList<ISvgPathSeg>.IndexOf(ISvgPathSeg) Declaration int IList<ISvgPathSeg>.IndexOf(ISvgPathSeg item) Parameters Type Name Description ISvgPathSeg item Returns Type Description Int32 IList<ISvgPathSeg>.Insert(Int32, ISvgPathSeg) Declaration void IList<ISvgPathSeg>.Insert(int index, ISvgPathSeg item) Parameters Type Name Description Int32 index ISvgPathSeg item IList<ISvgPathSeg>.Item[Int32] Declaration ISvgPathSeg IList<ISvgPathSeg>.this[int index] { get; set; } Parameters Type Name Description Int32 index Returns Type Description ISvgPathSeg IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements ISvgPathSegList System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.html",
    "title": "Class SvgPathSegMoveto | SharpVectors Documentation",
    "keywords": "Class SvgPathSegMoveto Summary description for SvgMoveToSeg. Inheritance Object SvgPathSeg SvgPathSegMoveto SvgPathSegMovetoAbs SvgPathSegMovetoRel Implements ISvgPathSeg Inherited Members SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgPathSegMoveto : SvgPathSeg, ISvgPathSeg Constructors SvgPathSegMoveto(SvgPathSegType, Double, Double) Declaration protected SvgPathSegMoveto(SvgPathSegType type, double x, double y) Parameters Type Name Description SvgPathSegType type Double x Double y Fields _x Declaration protected double _x Field Value Type Description Double _y Declaration protected double _y Field Value Type Description Double Properties AbsXY Declaration public abstract override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSeg.AbsXY EndAngle Declaration public override double EndAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.EndAngle PathText Declaration public override string PathText { get; } Property Value Type Description String Overrides SvgPathSeg.PathText PathType Declaration public override SvgPathType PathType { get; } Property Value Type Description SvgPathType Overrides SvgPathSeg.PathType StartAngle Declaration public override double StartAngle { get; } Property Value Type Description Double Overrides SvgPathSeg.StartAngle X Declaration public double X { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Implements ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMovetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMovetoAbs.html",
    "title": "Class SvgPathSegMovetoAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegMovetoAbs Inheritance Object SvgPathSeg SvgPathSegMoveto SvgPathSegMovetoAbs Implements ISvgPathSegMovetoAbs ISvgPathSeg Inherited Members SvgPathSegMoveto._x SvgPathSegMoveto._y SvgPathSegMoveto.PathType SvgPathSegMoveto.StartAngle SvgPathSegMoveto.EndAngle SvgPathSegMoveto.X SvgPathSegMoveto.Y SvgPathSegMoveto.PathText SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegMovetoAbs : SvgPathSegMoveto, ISvgPathSegMovetoAbs, ISvgPathSeg Constructors SvgPathSegMovetoAbs(Double, Double) Declaration public SvgPathSegMovetoAbs(double x, double y) Parameters Type Name Description Double x Double y Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegMoveto.AbsXY Implements ISvgPathSegMovetoAbs ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMovetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMovetoRel.html",
    "title": "Class SvgPathSegMovetoRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegMovetoRel The SvgPathSegMovetoRel interface corresponds to an \"relative moveto\" (m) path data command. Inheritance Object SvgPathSeg SvgPathSegMoveto SvgPathSegMovetoRel Implements ISvgPathSegMovetoRel ISvgPathSeg Inherited Members SvgPathSegMoveto._x SvgPathSegMoveto._y SvgPathSegMoveto.PathType SvgPathSegMoveto.StartAngle SvgPathSegMoveto.EndAngle SvgPathSegMoveto.X SvgPathSegMoveto.Y SvgPathSegMoveto.PathText SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter SvgPathSeg.ISvgPathSeg.PreviousSeg SvgPathSeg.ISvgPathSeg.NextSeg Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegMovetoRel : SvgPathSegMoveto, ISvgPathSegMovetoRel, ISvgPathSeg Constructors SvgPathSegMovetoRel(Double, Double) Declaration public SvgPathSegMovetoRel(double x, double y) Parameters Type Name Description Double x Double y Properties AbsXY Declaration public override SvgPointF AbsXY { get; } Property Value Type Description SvgPointF Overrides SvgPathSegMoveto.AbsXY Implements ISvgPathSegMovetoRel ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegParser.html",
    "title": "Class SvgPathSegParser | SharpVectors Documentation",
    "keywords": "Class SvgPathSegParser Inheritance Object SvgPathSegParser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPathSegParser Constructors SvgPathSegParser() Declaration public SvgPathSegParser() Properties IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean MayHaveCurves Declaration public bool MayHaveCurves { get; } Property Value Type Description Boolean Methods Parse(SvgPathSegList, String) Declaration public bool Parse(SvgPathSegList pathList, string pathSegs) Parameters Type Name Description SvgPathSegList pathList String pathSegs Returns Type Description Boolean"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegType.html",
    "title": "Enum SvgPathSegType | SharpVectors Documentation",
    "keywords": "Enum SvgPathSegType Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgPathSegType : ushort Fields ArcAbs ArcRel ClosePath CurveToCubicAbs CurveToCubicRel CurveToCubicSmoothAbs CurveToCubicSmoothRel CurveToQuadraticAbs CurveToQuadraticRel CurveToQuadraticSmoothAbs CurveToQuadraticSmoothRel LineToAbs LineToHorizontalAbs LineToHorizontalRel LineToRel LineToVerticalAbs LineToVerticalRel MoveToAbs MoveToRel Unknown Name Description ArcAbs ArcRel ClosePath CurveToCubicAbs CurveToCubicRel CurveToCubicSmoothAbs CurveToCubicSmoothRel CurveToQuadraticAbs CurveToQuadraticRel CurveToQuadraticSmoothAbs CurveToQuadraticSmoothRel LineToAbs LineToHorizontalAbs LineToHorizontalRel LineToRel LineToVerticalAbs LineToVerticalRel MoveToAbs MoveToRel Unknown"
  },
  "api/SharpVectors.Dom.Svg.SvgPathType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathType.html",
    "title": "Enum SvgPathType | SharpVectors Documentation",
    "keywords": "Enum SvgPathType Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgPathType Fields ArcTo Close CurveTo LineTo MoveTo None Name Description ArcTo Close CurveTo LineTo MoveTo None"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.html",
    "title": "Class SvgPatternElement | SharpVectors Documentation",
    "keywords": "Class SvgPatternElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgPatternElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgPatternElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgFitToViewBox Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPatternElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgPatternElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgFitToViewBox Constructors SvgPatternElement(String, String, String, SvgDocument) Declaration public SvgPatternElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Children Declaration public XmlNodeList Children { get; } Property Value Type Description XmlNodeList CurrentView The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. The meaning depends on the situation: If the initial view was a \"standard\" view, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly o the values for transform and viewTarget within currentView will be null If the initial view was a link into a 'view' element, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will correspond to the corresponding attributes for the given 'view' element o the values for transform and viewTarget within currentView will be null If the initial view was a link into another element (i.e., other than a 'view'), then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly for the closest ancestor 'svg' element o the values for transform within currentView will be null o the viewTarget within currentView will represent the target of the link If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: o the values for viewBox, preserveAspectRatio, zoomAndPan, transform and viewTarget within currentView will correspond to the values from the SVG view specification fragment identifier The object itself and its contents are both readonly. Declaration public ISvgViewSpec CurrentView { get; } Property Value Type Description ISvgViewSpec ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Height Declaration public ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable PatternBounds Declaration public ISvgRect PatternBounds { get; set; } Property Value Type Description ISvgRect PatternContentUnits Declaration public ISvgAnimatedEnumeration PatternContentUnits { get; } Property Value Type Description ISvgAnimatedEnumeration PatternTransform Declaration public ISvgAnimatedTransformList PatternTransform { get; } Property Value Type Description ISvgAnimatedTransformList PatternUnits Declaration public ISvgAnimatedEnumeration PatternUnits { get; } Property Value Type Description ISvgAnimatedEnumeration PreserveAspectRatio Declaration public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio ReferencedElement Declaration public SvgPatternElement ReferencedElement { get; } Property Value Type Description SvgPatternElement RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList ViewBox Declaration public ISvgAnimatedRect ViewBox { get; } Property Value Type Description ISvgAnimatedRect ViewBoxTransform This function is super useful, calculates out the transformation matrix (i.e., scale and translate) of the viewport to user space. Declaration public ISvgMatrix ViewBoxTransform { get; } Property Value Type Description ISvgMatrix A Matrix which has the translate and scale portions set. Width Declaration public ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration public ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration public ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength Methods HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgPatternElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgFitToViewBox"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.html",
    "title": "Class SvgPoint | SharpVectors Documentation",
    "keywords": "Class SvgPoint Many of the SVG DOM interfaces refer to objects of class SvgPoint. An SvgPoint is an (x,y) coordinate pair. When used in matrix operations, an SvgPoint is treated as a vector of the form: [x] [y] [1] Inheritance Object SvgPoint Implements ISvgPoint Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPoint : ISvgPoint Constructors SvgPoint(Double, Double) Declaration public SvgPoint(double x, double y) Parameters Type Name Description Double x Double y Properties X Declaration public double X { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Methods lerp(SvgPoint, Double) Declaration public SvgPoint lerp(SvgPoint that, double percent) Parameters Type Name Description SvgPoint that Double percent Returns Type Description SvgPoint MatrixTransform(ISvgMatrix) Declaration public ISvgPoint MatrixTransform(ISvgMatrix matrix) Parameters Type Name Description ISvgMatrix matrix Returns Type Description ISvgPoint Operators Addition(SvgPoint, SvgPoint) Declaration public static SvgPoint operator +(SvgPoint a, SvgPoint b) Parameters Type Name Description SvgPoint a SvgPoint b Returns Type Description SvgPoint Division(SvgPoint, Double) Declaration public static SvgPoint operator /(SvgPoint a, double scalar) Parameters Type Name Description SvgPoint a Double scalar Returns Type Description SvgPoint Division(Double, SvgPoint) Declaration public static SvgPoint operator /(double scalar, SvgPoint a) Parameters Type Name Description Double scalar SvgPoint a Returns Type Description SvgPoint Multiply(SvgPoint, Double) Declaration public static SvgPoint operator *(SvgPoint a, double scalar) Parameters Type Name Description SvgPoint a Double scalar Returns Type Description SvgPoint Multiply(Double, SvgPoint) Declaration public static SvgPoint operator *(double scalar, SvgPoint a) Parameters Type Name Description Double scalar SvgPoint a Returns Type Description SvgPoint Subtraction(SvgPoint, SvgPoint) Declaration public static SvgPoint operator -(SvgPoint a, SvgPoint b) Parameters Type Name Description SvgPoint a SvgPoint b Returns Type Description SvgPoint Implements ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.html",
    "title": "Struct SvgPointF | SharpVectors Documentation",
    "keywords": "Struct SvgPointF This represents an ordered pair of float precision x- and y-coordinates that defines a point in a two-dimensional plane. Implements IEquatable < SvgPointF > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax [Serializable] public struct SvgPointF : IEquatable<SvgPointF> Constructors SvgPointF(Double, Double) Initializes a new instance of the SvgPointF structure with the specified coordinates. Declaration public SvgPointF(double x, double y) Parameters Type Name Description Double x The x-coordinate of the point. Double y The y-coordinate of the point. SvgPointF(Single, Single) Initializes a new instance of the SvgPointF structure with the specified coordinates. Declaration public SvgPointF(float x, float y) Parameters Type Name Description Single x The x-coordinate of the point. Single y The y-coordinate of the point. Fields Empty Represents a new instance of the SvgPointF structure with member data left uninitialized. Declaration public static readonly SvgPointF Empty Field Value Type Description SvgPointF Properties IsEmpty Gets a value indicating whether this SvgPointF is empty. Declaration public readonly bool IsEmpty { get; } Property Value Type Description Boolean This is true if both X and Y are 0; otherwise, false . ValueX Gets or sets the x-coordinate of this SvgPointF . Declaration public double ValueX { get; set; } Property Value Type Description Double The x-coordinate of this SvgPointF . ValueY Gets or sets the y-coordinate of this SvgPointF . Declaration public double ValueY { get; set; } Property Value Type Description Double The y-coordinate of this SvgPointF . X Gets the x-coordinate of this SvgPointF . Declaration public readonly float X { get; } Property Value Type Description Single The x-coordinate of this SvgPointF . Y Gets the y-coordinate of this SvgPointF . Declaration public readonly float Y { get; } Property Value Type Description Single The y-coordinate of this SvgPointF . Methods Add(SvgPointF, SvgSizeF) This translates a given SvgPointF by a specified SvgSizeF . Declaration public static SvgPointF Add(SvgPointF pt, SvgSizeF sz) Parameters Type Name Description SvgPointF pt The SvgPointF to translate. SvgSizeF sz The SvgSizeF that specifies the numbers to add to the coordinates of pt. Returns Type Description SvgPointF The translated SvgPointF . Distance(SvgPointF) This computes the distance between this SvgPointF and the specified SvgPointF . Declaration public double Distance(SvgPointF point) Parameters Type Name Description SvgPointF point A SvgPointF object specifying the other point from which to determine the distance. Returns Type Description Double The distance between this point and the specified point. Equals(SvgPointF) This determines whether this SvgPointF contains the same coordinates as the specified SvgPointF . Declaration public bool Equals(SvgPointF other) Parameters Type Name Description SvgPointF other The SvgPointF to test. Returns Type Description Boolean This method returns true if the specified SvgPointF has the same coordinates as this SvgPointF ; otherwise, false . Equals(Object) This determines whether this SvgPointF contains the same coordinates as the specified Object . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to test. Returns Type Description Boolean This method returns true if the specified object is a SvgPointF and has the same coordinates as this SvgPointF ; otherwise, false . Overrides ValueType.Equals(Object) GetHashCode() This returns a hash code for this SvgPointF structure. Declaration public override int GetHashCode() Returns Type Description Int32 An integer value that specifies a hash value for this SvgPointF structure. Overrides ValueType.GetHashCode() Subtract(SvgPointF, SvgSizeF) This translates a SvgPointF by the negative of a specified size. Declaration public static SvgPointF Subtract(SvgPointF pt, SvgSizeF sz) Parameters Type Name Description SvgPointF pt The SvgPointF to translate. SvgSizeF sz The SvgSizeF that specifies the numbers to subtract from the coordinates of pt. Returns Type Description SvgPointF The translated SvgPointF . ToString() This converts this SvgPointF to a human readable string. Declaration public override string ToString() Returns Type Description String A string that represents this SvgPointF . Overrides ValueType.ToString() Operators Addition(SvgPointF, SvgSizeF) This translates the SvgPointF by the specified SvgSizeF . Declaration public static SvgPointF operator +(SvgPointF pt, SvgSizeF sz) Parameters Type Name Description SvgPointF pt The SvgPointF to translate. SvgSizeF sz The SvgSizeF that specifies the numbers to add to the x- and y-coordinates of the SvgPointF . Returns Type Description SvgPointF The translated SvgPointF . Equality(SvgPointF, SvgPointF) This compares two SvgPointF structures. The result specifies whether the values of the X and Y properties of the two SvgPointF structures are equal. Declaration public static bool operator ==(SvgPointF left, SvgPointF right) Parameters Type Name Description SvgPointF left A SvgPointF to compare. SvgPointF right A SvgPointF to compare. Returns Type Description Boolean This is true if the X and Y values of the left and right SvgPointF structures are equal; otherwise, false . Inequality(SvgPointF, SvgPointF) This determines whether the coordinates of the specified points are not equal. Declaration public static bool operator !=(SvgPointF left, SvgPointF right) Parameters Type Name Description SvgPointF left A SvgPointF to compare. SvgPointF right A SvgPointF to compare. Returns Type Description Boolean This true to indicate the X and Y values of left and right are not equal; otherwise, false . Subtraction(SvgPointF, SvgSizeF) This translates a SvgPointF by the negative of a specified SvgSizeF . Declaration public static SvgPointF operator -(SvgPointF pt, SvgSizeF sz) Parameters Type Name Description SvgPointF pt The SvgPointF to translate. SvgSizeF sz The SvgSizeF that specifies the numbers to subtract from the coordinates of pt. Returns Type Description SvgPointF The translated SvgPointF . Implements System.IEquatable<T>"
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.html",
    "title": "Class SvgPointList | SharpVectors Documentation",
    "keywords": "Class SvgPointList This class defines a list of SvgPoint objects. Inheritance Object SvgList < ISvgPoint > SvgPointList Implements IEnumerable < ISvgPoint > IEnumerable ISvgPointList Inherited Members SvgList<ISvgPoint>._items SvgList<ISvgPoint>.Count SvgList<ISvgPoint>.Item[Int32] SvgList<ISvgPoint>.NumberOfItems SvgList<ISvgPoint>.Clear() SvgList<ISvgPoint>.Initialize(ISvgPoint) SvgList<ISvgPoint>.GetItem(UInt32) SvgList<ISvgPoint>.InsertItemBefore(ISvgPoint, UInt32) SvgList<ISvgPoint>.ReplaceItem(ISvgPoint, UInt32) SvgList<ISvgPoint>.RemoveItem(UInt32) SvgList<ISvgPoint>.AppendItem(ISvgPoint) SvgList<ISvgPoint>.GetEnumerator() SvgList<ISvgPoint>.IEnumerable.GetEnumerator() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPointList : SvgList<ISvgPoint>, IEnumerable<ISvgPoint>, IEnumerable, ISvgPointList Constructors SvgPointList() Declaration public SvgPointList() SvgPointList(String, Boolean) Declaration public SvgPointList(string listString, bool clearOnError = false) Parameters Type Name Description String listString Boolean clearOnError Methods FromString(String, Boolean) Declaration public void FromString(string listString, bool clearOnError = false) Parameters Type Name Description String listString Boolean clearOnError Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable ISvgPointList"
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.html",
    "title": "Class SvgPointList.SvgPointListHandler | SharpVectors Documentation",
    "keywords": "Class SvgPointList.SvgPointListHandler Inheritance Object SvgPointList.SvgPointListHandler Implements ISvgPointsHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgPointListHandler : ISvgPointsHandler Constructors SvgPointListHandler(SvgPointList) Declaration public SvgPointListHandler(SvgPointList pointList) Parameters Type Name Description SvgPointList pointList Methods EndPoints() Declaration public void EndPoints() Point(Single, Single) Declaration public void Point(float x, float y) Parameters Type Name Description Single x Single y StartPoints() Declaration public void StartPoints() Implements ISvgPointsHandler"
  },
  "api/SharpVectors.Dom.Svg.SvgPointsParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointsParser.html",
    "title": "Class SvgPointsParser | SharpVectors Documentation",
    "keywords": "Class SvgPointsParser This class implements an event-based parser for the SVG points attribute values (used with polyline and polygon elements). Inheritance Object SvgParser SvgNumberParser SvgPointsParser Inherited Members SvgNumberParser.ParseFloat() SvgNumberParser.BuildFloat(Int32, Int32) SvgParser._reader SvgParser._current SvgParser.Current SvgParser.FormatMessage(String, Object[]) SvgParser.Parse(String) SvgParser.ReportError(String, Object[]) SvgParser.ReportCharacterExpectedError(Char, Int32) SvgParser.ReportUnexpectedCharacterError(Int32) SvgParser.CreateErrorMessage(String, Object[]) SvgParser.SkipSpaces() SvgParser.SkipCommaSpaces() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgPointsParser : SvgNumberParser Constructors SvgPointsParser(ISvgPointsHandler) Creates a new PointsParser. Declaration public SvgPointsParser(ISvgPointsHandler handler) Parameters Type Name Description ISvgPointsHandler handler Fields _isERead Whether the last character was a 'e' or 'E'. Declaration protected bool _isERead Field Value Type Description Boolean _pointsHandler The points handler used to report parse events. Declaration protected ISvgPointsHandler _pointsHandler Field Value Type Description ISvgPointsHandler Properties Handler Gets or sets an application ISvgPointsHandler implementation to register a points handler. Declaration public virtual ISvgPointsHandler Handler { get; set; } Property Value Type Description ISvgPointsHandler The transform list handler. Remarks If the application does not register a handler, all events reported by the parser will be silently ignored. Applications may register a new or different handler in the middle of a parse, and the parser must begin using the new handler immediately. Methods DoParse() Parses the current stream. Declaration protected override void DoParse() Overrides SvgParser.DoParse()"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.html",
    "title": "Class SvgPolyElement | SharpVectors Documentation",
    "keywords": "Class SvgPolyElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgPolyElement SvgPolygonElement SvgPolylineElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable ISvgTransformable ISvgLocatable ISharpMarkerHost Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgPolyElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable, ISvgTransformable, ISvgLocatable, ISharpMarkerHost Constructors SvgPolyElement(String, String, String, SvgDocument) Declaration protected SvgPolyElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties AnimatedPoints Declaration public ISvgPointList AnimatedPoints { get; } Property Value Type Description ISvgPointList ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean IsClosed Declaration public virtual bool IsClosed { get; } Property Value Type Description Boolean MarkerPositions Declaration public virtual SvgPointF[] MarkerPositions { get; } Property Value Type Description SvgPointF [] MayHaveCurves Declaration public bool MayHaveCurves { get; } Property Value Type Description Boolean Points Declaration public ISvgPointList Points { get; } Property Value Type Description ISvgPointList RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods GetEndAngle(Int32) Declaration public double GetEndAngle(int index) Parameters Type Name Description Int32 index Returns Type Description Double GetMarker(Int32) Declaration public ISvgMarker GetMarker(int index) Parameters Type Name Description Int32 index Returns Type Description ISvgMarker GetStartAngle(Int32) Declaration public double GetStartAngle(int index) Parameters Type Name Description Int32 index Returns Type Description Double HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Invalidate() Declaration public void Invalidate() Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable ISvgTransformable ISvgLocatable ISharpMarkerHost"
  },
  "api/SharpVectors.Dom.Svg.SvgPolygonElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolygonElement.html",
    "title": "Class SvgPolygonElement | SharpVectors Documentation",
    "keywords": "Class SvgPolygonElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgPolyElement SvgPolygonElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISharpMarkerHost ISvgPolygonElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable ISvgAnimatedPoints IEventTarget ISvgElementVisitorTarget Inherited Members SvgPolyElement.AnimatedPoints SvgPolyElement.Points SvgPolyElement.Invalidate() SvgPolyElement.HandleAttributeChange(XmlAttribute) SvgPolyElement.RenderingHint SvgPolyElement.ExternalResourcesRequired SvgPolyElement.GetStartAngle(Int32) SvgPolyElement.GetEndAngle(Int32) SvgPolyElement.GetMarker(Int32) SvgPolyElement.IsClosed SvgPolyElement.MayHaveCurves SvgPolyElement.RequiredFeatures SvgPolyElement.RequiredExtensions SvgPolyElement.SystemLanguage SvgPolyElement.HasExtension(String) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPolygonElement : SvgPolyElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISharpMarkerHost, ISvgPolygonElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPoints, IEventTarget, ISvgElementVisitorTarget Constructors SvgPolygonElement(String, String, String, SvgDocument) Declaration public SvgPolygonElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties MarkerPositions Declaration public override SvgPointF[] MarkerPositions { get; } Property Value Type Description SvgPointF [] Overrides SvgPolyElement.MarkerPositions Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISharpMarkerHost ISvgPolygonElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable ISvgAnimatedPoints IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgPolylineElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolylineElement.html",
    "title": "Class SvgPolylineElement | SharpVectors Documentation",
    "keywords": "Class SvgPolylineElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgPolyElement SvgPolylineElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISharpMarkerHost ISvgPolylineElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable ISvgAnimatedPoints IEventTarget ISvgElementVisitorTarget Inherited Members SvgPolyElement.AnimatedPoints SvgPolyElement.Points SvgPolyElement.Invalidate() SvgPolyElement.HandleAttributeChange(XmlAttribute) SvgPolyElement.RenderingHint SvgPolyElement.ExternalResourcesRequired SvgPolyElement.MarkerPositions SvgPolyElement.GetStartAngle(Int32) SvgPolyElement.GetEndAngle(Int32) SvgPolyElement.GetMarker(Int32) SvgPolyElement.MayHaveCurves SvgPolyElement.RequiredFeatures SvgPolyElement.RequiredExtensions SvgPolyElement.SystemLanguage SvgPolyElement.HasExtension(String) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPolylineElement : SvgPolyElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISharpMarkerHost, ISvgPolylineElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPoints, IEventTarget, ISvgElementVisitorTarget Constructors SvgPolylineElement(String, String, String, SvgDocument) Declaration public SvgPolylineElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsClosed Declaration public override bool IsClosed { get; } Property Value Type Description Boolean Overrides SvgPolyElement.IsClosed Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISharpMarkerHost ISvgPolylineElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable ISvgAnimatedPoints IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.html",
    "title": "Class SvgPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Class SvgPreserveAspectRatio Inheritance Object SvgPreserveAspectRatio Implements ISvgPreserveAspectRatio Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgPreserveAspectRatio : ISvgPreserveAspectRatio Constructors SvgPreserveAspectRatio(String, SvgElement) Declaration public SvgPreserveAspectRatio(string attr, SvgElement ownerElement) Parameters Type Name Description String attr SvgElement ownerElement Properties Align Declaration public SvgPreserveAspectRatioType Align { get; set; } Property Value Type Description SvgPreserveAspectRatioType IsDefaultAlign Declaration public bool IsDefaultAlign { get; } Property Value Type Description Boolean MeetOrSlice Declaration public SvgMeetOrSlice MeetOrSlice { get; set; } Property Value Type Description SvgMeetOrSlice Methods FitToViewBox(SvgRect, SvgRect) Declaration public double[] FitToViewBox(SvgRect viewBox, SvgRect rectToFit) Parameters Type Name Description SvgRect viewBox SvgRect rectToFit Returns Type Description Double [] Implements ISvgPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatioType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatioType.html",
    "title": "Enum SvgPreserveAspectRatioType | SharpVectors Documentation",
    "keywords": "Enum SvgPreserveAspectRatioType Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgPreserveAspectRatioType Fields None Unknown XMaxYMax XMaxYMid XMaxYMin XMidYMax XMidYMid XMidYMin XMinYMax XMinYMid XMinYMin Name Description None Unknown XMaxYMax XMaxYMid XMaxYMin XMidYMax XMidYMid XMidYMin XMinYMax XMinYMid XMinYMin"
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.html",
    "title": "Class SvgRadialGradientElement | SharpVectors Documentation",
    "keywords": "Class SvgRadialGradientElement The implementation of the radialGradient element or the ISvgRadialGradientElement interface. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGradientElement SvgRadialGradientElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgRadialGradientElement ISvgGradientElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgGradientElement.GradientUnits SvgGradientElement.GradientTransform SvgGradientElement.SpreadMethod SvgGradientElement.Href SvgGradientElement.ExternalResourcesRequired SvgGradientElement.Stops SvgGradientElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgRadialGradientElement : SvgGradientElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgRadialGradientElement, ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Remarks Radial Gradient fx/fy values should only be inherited from a referenced element if that element is explicitly defining them, otherwise they should follow the cy special case behavior. Additionally, because xlink references can inherit to an arbitrary level, we should walk up the tree looking for explicitly defined fx/fy values to inherit before falling back to the cx/cy definitions. Constructors SvgRadialGradientElement(String, String, String, SvgDocument) Declaration public SvgRadialGradientElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Cx Declaration public ISvgAnimatedLength Cx { get; } Property Value Type Description ISvgAnimatedLength Cy Declaration public ISvgAnimatedLength Cy { get; } Property Value Type Description ISvgAnimatedLength Fx Declaration public ISvgAnimatedLength Fx { get; } Property Value Type Description ISvgAnimatedLength Fy Declaration public ISvgAnimatedLength Fy { get; } Property Value Type Description ISvgAnimatedLength IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgGradientElement.IsRenderable R Declaration public ISvgAnimatedLength R { get; } Property Value Type Description ISvgAnimatedLength ReferencedElement Declaration public SvgRadialGradientElement ReferencedElement { get; } Property Value Type Description SvgRadialGradientElement Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgRadialGradientElement ISvgGradientElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.html",
    "title": "Class SvgRect | SharpVectors Documentation",
    "keywords": "Class SvgRect Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative. Inheritance Object SvgRect Implements ISvgRect IEquatable < ISvgRect > IEquatable < SvgRect > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgRect : ISvgRect, IEquatable<ISvgRect>, IEquatable<SvgRect> Constructors SvgRect(Double, Double, Double, Double) Declaration public SvgRect(double x, double y, double width, double height) Parameters Type Name Description Double x Double y Double width Double height SvgRect(String) Declaration public SvgRect(string str) Parameters Type Name Description String str Fields Empty Declaration public static readonly SvgRect Empty Field Value Type Description SvgRect Properties Height Declaration public double Height { get; set; } Property Value Type Description Double IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Width Declaration public double Width { get; set; } Property Value Type Description Double X Declaration public double X { get; set; } Property Value Type Description Double Y Declaration public double Y { get; set; } Property Value Type Description Double Methods Contains(SvgPoint) This determines if the specified point is contained within this SvgRect structure. Declaration public bool Contains(SvgPoint pt) Parameters Type Name Description SvgPoint pt The SvgPoint to test. Returns Type Description Boolean This method returns true if the point represented by the pt parameter is contained within this SvgRect structure; otherwise false. Contains(SvgRect) This determines if the rectangular region represented by rect is entirely contained within this SvgRect structure. Declaration public bool Contains(SvgRect rect) Parameters Type Name Description SvgRect rect The SvgRect to test. Returns Type Description Boolean This method returns true if the rectangular region represented by rect is entirely contained within the rectangular region represented by this SvgRect ; otherwise false. Contains(Double, Double) This determines if the specified point is contained within this SvgRect structure. Declaration public bool Contains(double x, double y) Parameters Type Name Description Double x The x-coordinate of the point to test. Double y The y-coordinate of the point to test. Returns Type Description Boolean This method returns true if the point defined by x and y is contained within this SvgRect structure; otherwise false. Equals(ISvgRect) This tests whether the specified SvgRect is with the same location and size of this SvgRect . Declaration public bool Equals(ISvgRect other) Parameters Type Name Description ISvgRect other The SvgRect to test. Returns Type Description Boolean This returns true if specified SvgRect has its X , Y , Width , and Height properties are equal to the corresponding properties of this SvgRect ; otherwise, false . Equals(SvgRect) This tests whether the specified SvgRect is with the same location and size of this SvgRect . Declaration public bool Equals(SvgRect other) Parameters Type Name Description SvgRect other The SvgRect to test. Returns Type Description Boolean This returns true if specified SvgRect has its X , Y , Width , and Height properties are equal to the corresponding properties of this SvgRect ; otherwise, false . Equals(Object) This tests whether an object is a SvgRect with the same location and size of this SvgRect . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to test. Returns Type Description Boolean This returns true if the specified object is a SvgRect and its X , Y , Width , and Height properties are equal to the corresponding properties of this SvgRect ; otherwise, false . Overrides Object.Equals(Object) GetHashCode() Gets the hash code for this SvgRect structure. For information about the use of hash codes, see Object.GetHashCode. Declaration public override int GetHashCode() Returns Type Description Int32 The hash code for this SvgRect . Overrides Object.GetHashCode() Inflate(SvgRect, Single, Single) Creates and returns an inflated copy of the specified SvgRect structure. The copy is inflated by the specified amount. The original rectangle remains unmodified. Declaration public static SvgRect Inflate(SvgRect rect, float x, float y) Parameters Type Name Description SvgRect rect The SvgRect to be copied. This rectangle is not modified. Single x The amount to inflate the copy of the rectangle horizontally. Single y The amount to inflate the copy of the rectangle vertically. Returns Type Description SvgRect The inflated SvgRect . Inflate(Double, Double) Inflates this SvgRect structure by the specified amount. Declaration public void Inflate(double x, double y) Parameters Type Name Description Double x The amount to inflate this SvgRect structure horizontally. Double y The amount to inflate this SvgRect structure vertically. Intersect(SvgRect) Declaration public void Intersect(SvgRect rect) Parameters Type Name Description SvgRect rect Intersection(SvgRect) This replaces this SvgRect structure with the intersection of itself and the specified SvgRect structure. Declaration public void Intersection(SvgRect rect) Parameters Type Name Description SvgRect rect The rectangle to intersect. Intersection(SvgRect, SvgRect) Returns a SvgRect structure that represents the intersection of two rectangles. If there is no intersection, and empty SvgRect is returned. Declaration public static SvgRect Intersection(SvgRect a, SvgRect b) Parameters Type Name Description SvgRect a A rectangle to intersect. SvgRect b A rectangle to intersect. Returns Type Description SvgRect A third SvgRect structure the size of which represents the overlapped area of the two specified rectangles. Intersects(SvgRect) This determines if this rectangle intersects with rect. Declaration public bool Intersects(SvgRect rect) Parameters Type Name Description SvgRect rect The rectangle to test. Returns Type Description Boolean This method returns true if there is any intersection; otherwise, false . Offset(Double, Double) Adjusts the location of this rectangle by the specified amount. Declaration public void Offset(double x, double y) Parameters Type Name Description Double x The amount to offset the location horizontally. Double y The amount to offset the location vertically. ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Union(SvgRect, SvgRect) Creates the smallest possible third rectangle that can contain both of two rectangles that form a union. Declaration public static SvgRect Union(SvgRect a, SvgRect b) Parameters Type Name Description SvgRect a A rectangle to union. SvgRect b A rectangle to union. Returns Type Description SvgRect A third SvgRect structure that contains both of the two rectangles that form the union. Operators Equality(SvgRect, SvgRect) This tests whether two SvgRect structures have equal location and size. Declaration public static bool operator ==(SvgRect left, SvgRect right) Parameters Type Name Description SvgRect left The SvgRect structure that is to the left of the equality operator. SvgRect right The SvgRect structure that is to the right of the equality operator. Returns Type Description Boolean This operator returns true if the two specified SvgRect structures have equal X , Y , Width , and Height properties. Inequality(SvgRect, SvgRect) This tests whether two SvgRect structures differ in location or size. Declaration public static bool operator !=(SvgRect left, SvgRect right) Parameters Type Name Description SvgRect left The SvgRect structure that is to the left of the inequality operator. SvgRect right The SvgRect structure that is to the right of the inequality operator. Returns Type Description Boolean This operator returns true if any of the X , Y , Width , or Height properties of the two SvgRect structures are unequal; otherwise false. Implements ISvgRect System.IEquatable<T> System.IEquatable<T>"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.html",
    "title": "Class SvgRectElement | SharpVectors Documentation",
    "keywords": "Class SvgRectElement The SVGRectElement interface corresponds to the 'rect' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgRectElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgRectElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgRectElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgRectElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Constructors SvgRectElement(String, String, String, SvgDocument) Declaration public SvgRectElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Height Declaration public ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList Rx Declaration public ISvgAnimatedLength Rx { get; } Property Value Type Description ISvgAnimatedLength Ry Declaration public ISvgAnimatedLength Ry { get; } Property Value Type Description ISvgAnimatedLength SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Width Declaration public ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration public ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration public ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Invalidate() Declaration public void Invalidate() Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgRectElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.html",
    "title": "Struct SvgRectF | SharpVectors Documentation",
    "keywords": "Struct SvgRectF This stores a set of four float precision numbers that represent the location and size of a rectangle. Implements IEquatable < SvgRectF > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax [Serializable] public struct SvgRectF : IEquatable<SvgRectF> Constructors SvgRectF(SvgPointF, SvgSizeF) Initializes a new instance of the SvgRectF structure with the specified location and size. Declaration public SvgRectF(SvgPointF location, SvgSizeF size) Parameters Type Name Description SvgPointF location A SvgPointF that represents the upper-left corner of the rectangular region. SvgSizeF size A SvgSizeF that represents the width and height of the rectangular region. SvgRectF(Single, Single, Single, Single) Initializes a new instance of the SvgRectF structure with the specified location and size. Declaration public SvgRectF(float x, float y, float width, float height) Parameters Type Name Description Single x The x-coordinate of the upper-left corner of the rectangle. Single y The y-coordinate of the upper-left corner of the rectangle. Single width The width of the rectangle. Single height The height of the rectangle. Fields Empty Represents an instance of the SvgRectF structure with its members uninitialized. Declaration public static readonly SvgRectF Empty Field Value Type Description SvgRectF Properties Bottom Gets the y-coordinate that is the sum of Y and Height of this SvgRectF structure. Declaration public readonly float Bottom { get; } Property Value Type Description Single The y-coordinate that is the sum of Y and Height of this SvgRectF structure. Height Gets or sets the height of this SvgRectF structure. Declaration public float Height { get; set; } Property Value Type Description Single The height of this SvgRectF structure. IsEmpty Tests whether the Width or Height property of this SvgRectF has a value of zero. Declaration public readonly bool IsEmpty { get; } Property Value Type Description Boolean This property returns true if the Width or Height property of this SvgRectF has a value of zero; otherwise, false. Left Gets the x-coordinate of the left edge of this SvgRectF structure. Declaration public readonly float Left { get; } Property Value Type Description Single The x-coordinate of the left edge of this SvgRectF structure. Location Gets or sets the coordinates of the upper-left corner of this SvgRectF structure. Declaration public SvgPointF Location { get; set; } Property Value Type Description SvgPointF A SvgPointF that represents the upper-left corner of this SvgRectF structure. Right Gets the x-coordinate that is the sum of X and Width of this SvgRectF structure. Declaration public readonly float Right { get; } Property Value Type Description Single The x-coordinate that is the sum of X and Width of this SvgRectF structure. Size Gets or sets the size of this SvgRectF . Declaration public SvgSizeF Size { get; set; } Property Value Type Description SvgSizeF A SvgSizeF that represents the width and height of this SvgRectF structure. Top Gets the y-coordinate of the top edge of this SvgRectF structure. Declaration public readonly float Top { get; } Property Value Type Description Single The y-coordinate of the top edge of this SvgRectF structure. Width Gets or sets the width of this SvgRectF structure. Declaration public float Width { get; set; } Property Value Type Description Single The width of this SvgRectF structure. X Gets or sets the x-coordinate of the upper-left corner of this SvgRectF structure. Declaration public float X { get; set; } Property Value Type Description Single The x-coordinate of the upper-left corner of this SvgRectF structure. Y Gets or sets the y-coordinate of the upper-left corner of this SvgRectF structure. Declaration public float Y { get; set; } Property Value Type Description Single The y-coordinate of the upper-left corner of this SvgRectF structure. Methods Contains(SvgPointF) This determines if the specified point is contained within this SvgRectF structure. Declaration public bool Contains(SvgPointF pt) Parameters Type Name Description SvgPointF pt The SvgPointF to test. Returns Type Description Boolean This method returns true if the point represented by the pt parameter is contained within this SvgRectF structure; otherwise false. Contains(SvgRectF) This determines if the rectangular region represented by rect is entirely contained within this SvgRectF structure. Declaration public bool Contains(SvgRectF rect) Parameters Type Name Description SvgRectF rect The SvgRectF to test. Returns Type Description Boolean This method returns true if the rectangular region represented by rect is entirely contained within the rectangular region represented by this SvgRectF ; otherwise false. Contains(Single, Single) This determines if the specified point is contained within this SvgRectF structure. Declaration public bool Contains(float x, float y) Parameters Type Name Description Single x The x-coordinate of the point to test. Single y The y-coordinate of the point to test. Returns Type Description Boolean This method returns true if the point defined by x and y is contained within this SvgRectF structure; otherwise false. Create(Single, Single, Single, Single) Creates a SvgRectF structure with upper-left corner and lower-right corner at the specified locations. Declaration public static SvgRectF Create(float left, float top, float right, float bottom) Parameters Type Name Description Single left The x-coordinate of the upper-left corner of the rectangular region. Single top The y-coordinate of the upper-left corner of the rectangular region. Single right The x-coordinate of the lower-right corner of the rectangular region. Single bottom The y-coordinate of the lower-right corner of the rectangular region. Returns Type Description SvgRectF The new SvgRectF that this method creates. Equals(SvgRectF) This tests whether the specified SvgRectF is with the same location and size of this SvgRectF . Declaration public bool Equals(SvgRectF other) Parameters Type Name Description SvgRectF other The SvgRectF to test. Returns Type Description Boolean This returns true if specified SvgRectF has its X , Y , Width , and Height properties are equal to the corresponding properties of this SvgRectF ; otherwise, false . Equals(Object) This tests whether an object is a SvgRectF with the same location and size of this SvgRectF . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to test. Returns Type Description Boolean This returns true if the specified object is a SvgRectF and its X , Y , Width , and Height properties are equal to the corresponding properties of this SvgRectF ; otherwise, false . Overrides ValueType.Equals(Object) GetHashCode() Gets the hash code for this SvgRectF structure. For information about the use of hash codes, see Object.GetHashCode. Declaration public override int GetHashCode() Returns Type Description Int32 The hash code for this SvgRectF . Overrides ValueType.GetHashCode() Inflate(SvgRectF, Single, Single) Creates and returns an inflated copy of the specified SvgRectF structure. The copy is inflated by the specified amount. The original rectangle remains unmodified. Declaration public static SvgRectF Inflate(SvgRectF rect, float x, float y) Parameters Type Name Description SvgRectF rect The SvgRectF to be copied. This rectangle is not modified. Single x The amount to inflate the copy of the rectangle horizontally. Single y The amount to inflate the copy of the rectangle vertically. Returns Type Description SvgRectF The inflated SvgRectF . Inflate(SvgSizeF) Inflates this SvgRectF by the specified amount. Declaration public void Inflate(SvgSizeF size) Parameters Type Name Description SvgSizeF size The amount to inflate this rectangle. Inflate(Single, Single) Inflates this SvgRectF structure by the specified amount. Declaration public void Inflate(float x, float y) Parameters Type Name Description Single x The amount to inflate this SvgRectF structure horizontally. Single y The amount to inflate this SvgRectF structure vertically. Intersect(SvgRectF) Declaration public void Intersect(SvgRectF rect) Parameters Type Name Description SvgRectF rect Intersection(SvgRectF) This replaces this SvgRectF structure with the intersection of itself and the specified SvgRectF structure. Declaration public void Intersection(SvgRectF rect) Parameters Type Name Description SvgRectF rect The rectangle to intersect. Intersection(SvgRectF, SvgRectF) Returns a SvgRectF structure that represents the intersection of two rectangles. If there is no intersection, and empty SvgRectF is returned. Declaration public static SvgRectF Intersection(SvgRectF a, SvgRectF b) Parameters Type Name Description SvgRectF a A rectangle to intersect. SvgRectF b A rectangle to intersect. Returns Type Description SvgRectF A third SvgRectF structure the size of which represents the overlapped area of the two specified rectangles. Intersects(SvgRectF) This determines if this rectangle intersects with rect. Declaration public bool Intersects(SvgRectF rect) Parameters Type Name Description SvgRectF rect The rectangle to test. Returns Type Description Boolean This method returns true if there is any intersection; otherwise, false . Offset(SvgPointF) Adjusts the location of this rectangle by the specified amount. Declaration public void Offset(SvgPointF pos) Parameters Type Name Description SvgPointF pos The amount to offset the location. Offset(Single, Single) Adjusts the location of this rectangle by the specified amount. Declaration public void Offset(float x, float y) Parameters Type Name Description Single x The amount to offset the location horizontally. Single y The amount to offset the location vertically. ToString() Converts the Location and Size of this SvgRectF to a human-readable string. Declaration public override string ToString() Returns Type Description String A string that contains the position, width, and height of this SvgRectF structure; for example, \"{X=20, Y=20, Width=100, Height=50}\". Overrides ValueType.ToString() Union(SvgRectF, SvgRectF) Creates the smallest possible third rectangle that can contain both of two rectangles that form a union. Declaration public static SvgRectF Union(SvgRectF a, SvgRectF b) Parameters Type Name Description SvgRectF a A rectangle to union. SvgRectF b A rectangle to union. Returns Type Description SvgRectF A third SvgRectF structure that contains both of the two rectangles that form the union. Operators Equality(SvgRectF, SvgRectF) This tests whether two SvgRectF structures have equal location and size. Declaration public static bool operator ==(SvgRectF left, SvgRectF right) Parameters Type Name Description SvgRectF left The SvgRectF structure that is to the left of the equality operator. SvgRectF right The SvgRectF structure that is to the right of the equality operator. Returns Type Description Boolean This operator returns true if the two specified SvgRectF structures have equal X , Y , Width , and Height properties. Inequality(SvgRectF, SvgRectF) This tests whether two SvgRectF structures differ in location or size. Declaration public static bool operator !=(SvgRectF left, SvgRectF right) Parameters Type Name Description SvgRectF left The SvgRectF structure that is to the left of the inequality operator. SvgRectF right The SvgRectF structure that is to the right of the inequality operator. Returns Type Description Boolean This operator returns true if any of the X , Y , Width , or Height properties of the two SvgRectF structures are unequal; otherwise false. Implements System.IEquatable<T>"
  },
  "api/SharpVectors.Dom.Svg.SvgRenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRenderingHint.html",
    "title": "Enum SvgRenderingHint | SharpVectors Documentation",
    "keywords": "Enum SvgRenderingHint Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgRenderingHint Fields Animation Clipping Containment Image Marker Masking None Shape Text Name Description Animation Clipping Containment Image Marker Masking None Shape Text"
  },
  "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.html",
    "title": "Class SvgResolveNamespaceEventArgs | SharpVectors Documentation",
    "keywords": "Class SvgResolveNamespaceEventArgs Arguments when namespace is trying to be resolved Inheritance Object EventArgs SvgResolveNamespaceEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgResolveNamespaceEventArgs : EventArgs Constructors SvgResolveNamespaceEventArgs() Declaration public SvgResolveNamespaceEventArgs() SvgResolveNamespaceEventArgs(String) Declaration public SvgResolveNamespaceEventArgs(string prefix) Parameters Type Name Description String prefix Properties Prefix Gets or sets the prefix (for example: 'rdf') Declaration public string Prefix { get; set; } Property Value Type Description String The prefix. Uri Gets or sets the URI (for example: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'). This value may have already been initialized, it's up to the application to check if it wants to override the resolution Declaration public string Uri { get; set; } Property Value Type Description String The URI."
  },
  "api/SharpVectors.Dom.Svg.SvgResolveUriEventArgs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgResolveUriEventArgs.html",
    "title": "Class SvgResolveUriEventArgs | SharpVectors Documentation",
    "keywords": "Class SvgResolveUriEventArgs Arguments when URI is trying to be resolved while loading schema Inheritance Object EventArgs SvgResolveUriEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgResolveUriEventArgs : EventArgs Constructors SvgResolveUriEventArgs() Declaration public SvgResolveUriEventArgs() SvgResolveUriEventArgs(String) Declaration public SvgResolveUriEventArgs(string uri) Parameters Type Name Description String uri Properties Uri Gets or sets the URI (for example: 'http://www.w3.org/2000/svg'). This value may have already been initialized, it's up to the application to check if it wants to override the resolution Declaration public string Uri { get; set; } Property Value Type Description String The URI."
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.html",
    "title": "Class SvgScriptElement | SharpVectors Documentation",
    "keywords": "Class SvgScriptElement The ISvgScriptElement interface corresponds to the 'script' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgScriptElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgScriptElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgScriptElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgScriptElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired Remarks A 'script' element is equivalent to the 'script' element in HTML and thus is the place for scripts. Any functions defined within any 'script' element have a 'global' scope across the entire current document. Constructors SvgScriptElement(String, String, String, SvgDocument) Declaration public SvgScriptElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Fields ECMAScript Declaration public const string ECMAScript = \"application/ecmascript\" Field Value Type Description String Properties Content Declaration public string Content { get; } Property Value Type Description String CrossOrigin Gets or sets a value corresponding to the attribute 'crossorigin' on the given 'script' element. Declaration public string CrossOrigin { get; set; } Property Value Type Description String An enumeration specifying the CORS (Cross-Origin Resource Sharing) setting attributes. Possible values are anonymous , use-credentials and empty string. Remarks This is introduced in SVG 2 . See Also https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Type Gets or sets a value corresponding to the attribute 'type' on the given 'script' element. Declaration public string Type { get; set; } Property Value Type Description String A string specifying the script type. UriReference Declaration public SvgUriReference UriReference { get; } Property Value Type Description SvgUriReference Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgScriptElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired"
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.html",
    "title": "Struct SvgSizeF | SharpVectors Documentation",
    "keywords": "Struct SvgSizeF Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle. Implements IEquatable < SvgSizeF > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax [Serializable] public struct SvgSizeF : IEquatable<SvgSizeF> Constructors SvgSizeF(SvgPointF) Initializes a new instance of the SvgSizeF class from the specified SvgPointF . Declaration public SvgSizeF(SvgPointF pt) Parameters Type Name Description SvgPointF pt The SvgPointF from which to initialize this SvgSizeF . SvgSizeF(SvgSizeF) Initializes a new instance of the SvgSizeF class from the specified existing SvgSizeF . Declaration public SvgSizeF(SvgSizeF size) Parameters Type Name Description SvgSizeF size The SvgSizeF from which to create the new SvgSizeF . SvgSizeF(Single, Single) Initializes a new instance of the SvgSizeF class from the specified dimensions. Declaration public SvgSizeF(float width, float height) Parameters Type Name Description Single width The width component of the new SvgSizeF . Single height The height component of the new SvgSizeF . Fields Empty Initializes a new instance of the SvgSizeF class. Declaration public static readonly SvgSizeF Empty Field Value Type Description SvgSizeF Properties Height Gets or sets the vertical component of this SvgSizeF . Declaration public float Height { get; set; } Property Value Type Description Single The vertical component of this SvgSizeF . IsEmpty Gets a value indicating whether this SvgSizeF has zero width and height. Declaration public readonly bool IsEmpty { get; } Property Value Type Description Boolean This property returns true when this SvgSizeF has both a width and height of zero; otherwise, false . Width Gets or sets the horizontal component of this SvgSizeF . Declaration public float Width { get; set; } Property Value Type Description Single The horizontal component of this SvgSizeF . Methods Add(SvgSizeF, SvgSizeF) Adds the width and height of one SvgSizeF structure to the width and height of another SvgSizeF structure. Declaration public static SvgSizeF Add(SvgSizeF sz1, SvgSizeF sz2) Parameters Type Name Description SvgSizeF sz1 The first SvgSizeF to add. SvgSizeF sz2 The second SvgSizeF to add. Returns Type Description SvgSizeF A SvgSizeF structure that is the result of the addition operation. Equals(SvgSizeF) This to see whether the specified SvgSizeF is with the same dimensions as this SvgSizeF . Declaration public bool Equals(SvgSizeF other) Parameters Type Name Description SvgSizeF other The SvgSizeF to test. Returns Type Description Boolean This returns true if the specified SvgSizeF and has the same width and height as this SvgSizeF ; otherwise, false . Equals(Object) This tests whether the specified object is a SvgSizeF with the same dimensions as this SvgSizeF . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to test. Returns Type Description Boolean This returns true if specified object is a SvgSizeF and has the same width and height as this SvgSizeF ; otherwise, false . Overrides ValueType.Equals(Object) GetHashCode() This returns a hash code for this SvgSizeF structure. Declaration public override int GetHashCode() Returns Type Description Int32 An integer value that specifies a hash value for this SvgSizeF structure. Overrides ValueType.GetHashCode() Subtract(SvgSizeF, SvgSizeF) Subtracts the width and height of one SvgSizeF structure from the width and height of another SvgSizeF structure. Declaration public static SvgSizeF Subtract(SvgSizeF sz1, SvgSizeF sz2) Parameters Type Name Description SvgSizeF sz1 The SvgSizeF structure on the left side of the subtraction operator. SvgSizeF sz2 The SvgSizeF structure on the right side of the subtraction operator. Returns Type Description SvgSizeF The SvgSizeF that is a result of the subtraction operation. ToString() This creates a human-readable string that represents this SvgSizeF . Declaration public override string ToString() Returns Type Description String A string that represents this SvgSizeF . Overrides ValueType.ToString() Operators Addition(SvgSizeF, SvgSizeF) Adds the width and height of one SvgSizeF structure to the width and height of another SvgSizeF structure. Declaration public static SvgSizeF operator +(SvgSizeF sz1, SvgSizeF sz2) Parameters Type Name Description SvgSizeF sz1 The first SvgSizeF to add. SvgSizeF sz2 The second SvgSizeF to add. Returns Type Description SvgSizeF A SvgSizeF structure that is the result of the addition operation. Equality(SvgSizeF, SvgSizeF) Tests whether two SvgSizeF structures are equal. Declaration public static bool operator ==(SvgSizeF sz1, SvgSizeF sz2) Parameters Type Name Description SvgSizeF sz1 The SvgSizeF structure on the left side of the equality operator. SvgSizeF sz2 The SvgSizeF structure on the right of the equality operator. Returns Type Description Boolean This operator returns true if sz1 and sz2 have equal width and height; otherwise, false . Explicit(SvgSizeF to SvgPointF) This converts the specified SvgSizeF to a SvgPointF . Declaration public static explicit operator SvgPointF(SvgSizeF size) Parameters Type Name Description SvgSizeF size The SvgSizeF structure to be converted. Returns Type Description SvgPointF The SvgPointF structure specifying the result of the conversion. Inequality(SvgSizeF, SvgSizeF) Tests whether two SvgSizeF structures are different. Declaration public static bool operator !=(SvgSizeF sz1, SvgSizeF sz2) Parameters Type Name Description SvgSizeF sz1 The SvgSizeF structure on the left of the inequality operator. SvgSizeF sz2 The SvgSizeF structure on the right of the inequality operator. Returns Type Description Boolean This operator returns true if sz1 and sz2 differ either in width or height; false if sz1 and sz2 are equal. Subtraction(SvgSizeF, SvgSizeF) Subtracts the width and height of one SvgSizeF structure from the width and height of another SvgSizeF structure. Declaration public static SvgSizeF operator -(SvgSizeF sz1, SvgSizeF sz2) Parameters Type Name Description SvgSizeF sz1 The SvgSizeF on the left side of the subtraction operator. SvgSizeF sz2 The SvgSizeF on the right side of the subtraction operator. Returns Type Description SvgSizeF A SvgSizeF that is the result of the subtraction operation. Implements System.IEquatable<T>"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.html",
    "title": "Class SvgSolidColorElement | SharpVectors Documentation",
    "keywords": "Class SvgSolidColorElement An SVG object represents an 'solidcolor' element in the DOM. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgSolidColorElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgSolidColorElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgSolidColorElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgSolidColorElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Constructors SvgSolidColorElement(String, String, String, SvgDocument) Declaration public SvgSolidColorElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Children Declaration public XmlNodeList Children { get; } Property Value Type Description XmlNodeList ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable ReferencedElement Declaration public SvgSolidColorElement ReferencedElement { get; } Property Value Type Description SvgSolidColorElement RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgSolidColorElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgSpreadMethod.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSpreadMethod.html",
    "title": "Enum SvgSpreadMethod | SharpVectors Documentation",
    "keywords": "Enum SvgSpreadMethod Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public enum SvgSpreadMethod Fields None Pad Reflect Repeat Name Description None Pad Reflect Repeat"
  },
  "api/SharpVectors.Dom.Svg.SvgStopElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStopElement.html",
    "title": "Class SvgStopElement | SharpVectors Documentation",
    "keywords": "Class SvgStopElement Summary description for SvgStopElement. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgStopElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgStopElement ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgStopElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgStopElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Constructors SvgStopElement(String, String, String, SvgDocument) Declaration public SvgStopElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Offset Declaration public ISvgAnimatedNumber Offset { get; } Property Value Type Description ISvgAnimatedNumber Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgStopElement ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgStringList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringList.html",
    "title": "Class SvgStringList | SharpVectors Documentation",
    "keywords": "Class SvgStringList This interface defines a list of String objects Inheritance Object SvgList < String > SvgStringList Implements ISvgStringList IEnumerable < String > IEnumerable Inherited Members SvgList<String>._items SvgList<String>.Count SvgList<String>.Item[Int32] SvgList<String>.NumberOfItems SvgList<String>.Clear() SvgList<String>.Initialize(String) SvgList<String>.GetItem(UInt32) SvgList<String>.InsertItemBefore(String, UInt32) SvgList<String>.ReplaceItem(String, UInt32) SvgList<String>.RemoveItem(UInt32) SvgList<String>.AppendItem(String) SvgList<String>.GetEnumerator() SvgList<String>.IEnumerable.GetEnumerator() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgStringList : SvgList<string>, ISvgStringList, IEnumerable<string>, IEnumerable Constructors SvgStringList() Declaration public SvgStringList() SvgStringList(String) Declaration public SvgStringList(string listString) Parameters Type Name Description String listString Methods FromString(String) Declaration public void FromString(string listString) Parameters Type Name Description String listString Implements ISvgStringList System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader.html",
    "title": "Class SvgStringReader | SharpVectors Documentation",
    "keywords": "Class SvgStringReader This class represents a SvgTextReader which handles strings. Inheritance Object SvgTextReader SvgStringReader Inherited Members SvgTextReader.Read(Char[], Int32, Int32) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgStringReader : SvgTextReader Constructors SvgStringReader(String) Creates a new StringNormalizingReader. Declaration public SvgStringReader(string input) Parameters Type Name Description String input The string to read. Fields _column The current column in the stream. Declaration protected int _column Field Value Type Description Int32 _inputText The characters. Declaration protected string _inputText Field Value Type Description String _line The current line in the stream. Declaration protected int _line Field Value Type Description Int32 _nextIndex The index of the next character. Declaration protected int _nextIndex Field Value Type Description Int32 _textLength The length of the string. Declaration protected int _textLength Field Value Type Description Int32 Properties Column Returns the current column in the stream. Declaration public override int Column { get; } Property Value Type Description Int32 Overrides SvgTextReader.Column Line Returns the current line in the stream. Declaration public override int Line { get; } Property Value Type Description Int32 Overrides SvgTextReader.Line Methods Close() Close the stream. Declaration public virtual void Close() Read() Read a single character. This method will block until a character is available, an I/O error occurs, or the end of the stream is reached. Declaration public override int Read() Returns Type Description Int32 Overrides SvgTextReader.Read()"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleableElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleableElement.html",
    "title": "Class SvgStyleableElement | SharpVectors Documentation",
    "keywords": "Class SvgStyleableElement SvgStyleableElement is an extension to the Svg DOM to create a class for all elements that are styleable. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgDescElement SvgFilterElement SvgFilterPrimitiveStandardAttributes SvgFontElement SvgGlyphElement SvgGlyphRefElement SvgGradientElement SvgMarkerElement SvgMaskElement SvgPatternElement SvgSolidColorElement SvgStopElement SvgSymbolElement SvgTitleElement SvgTransformableElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgStyleableElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Constructors SvgStyleableElement(String, String, String, SvgDocument) Declaration protected SvgStyleableElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ClassName Declaration public ISvgAnimatedString ClassName { get; } Property Value Type Description ISvgAnimatedString Methods GetComputedStyle(String) Declaration public override ICssStyleDeclaration GetComputedStyle(string pseudoElt) Parameters Type Name Description String pseudoElt Returns Type Description ICssStyleDeclaration Overrides CssXmlElement.GetComputedStyle(String) GetPresentationAttribute(String) Declaration public ICssValue GetPresentationAttribute(string name) Parameters Type Name Description String name Returns Type Description ICssValue GetPropertyValue(String) Declaration public string GetPropertyValue(string name) Parameters Type Name Description String name Returns Type Description String GetPropertyValue(String, String) Declaration public string GetPropertyValue(string name1, string name2) Parameters Type Name Description String name1 String name2 Returns Type Description String HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides CssXmlElement.HandleAttributeChange(XmlAttribute) Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleElement.html",
    "title": "Class SvgStyleElement | SharpVectors Documentation",
    "keywords": "Class SvgStyleElement The SvgStyleElement interface corresponds to the 'style' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgStyleElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgStyleElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgStyleElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace Constructors SvgStyleElement(String, String, String, SvgDocument) Declaration public SvgStyleElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Media Declaration public string Media { get; set; } Property Value Type Description String Title Declaration public string Title { get; set; } Property Value Type Description String Type Declaration public string Type { get; set; } Property Value Type Description String Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgStyleElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.html",
    "title": "Class SvgSvgElement | SharpVectors Documentation",
    "keywords": "Class SvgSvgElement A key interface definition is the ISvgSvgElement interface, which is the interface that corresponds to the 'svg' element. This interface contains various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices. ISvgSvgElement extends ViewCSS and DocumentCSS to provide access to the computed values of properties and the override style sheet as described in DOM2. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgSvgElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgSvgElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgLocatable ISvgFitToViewBox ISvgZoomAndPan IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgSvgElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgSvgElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgLocatable, ISvgFitToViewBox, ISvgZoomAndPan, IEventTarget, ISvgElementVisitorTarget Constructors SvgSvgElement(String, String, String, SvgDocument) Declaration public SvgSvgElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ContentScriptType Corresponds to attribute contentScriptType on the given 'svg' element Declaration public string ContentScriptType { get; set; } Property Value Type Description String Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute. ContentStyleType Corresponds to attribute contentStyleType on the given 'svg' element. Declaration public string ContentStyleType { get; set; } Property Value Type Description String Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute. CurrentScale This attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations, as described under Magnification and panning. DOM attributes currentScale and currentTranslate are equivalent to the 2x3 matrix [a b c d e f] = [currentScale 0 0 currentScale currentTranslate.x currentTranslate.y]. If \"magnification\" is enabled (i.e., zoomAndPan=\"magnify\"), then the effect is as if an extra transformation were placed at the outermost level on the SVG document fragment (i.e., outside the outermost 'svg' element). Declaration public float CurrentScale { get; set; } Property Value Type Description Single Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute CurrentTime The current time in seconds relative to the start time for the current SVG document fragment. Declaration public float CurrentTime { get; set; } Property Value Type Description Single CurrentTranslate The corresponding translation factor that takes into account user \"magnification\". Declaration public ISvgPoint CurrentTranslate { get; } Property Value Type Description ISvgPoint CurrentView The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. The meaning depends on the situation: If the initial view was a \"standard\" view, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly o the values for transform and viewTarget within currentView will be null If the initial view was a link into a 'view' element, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will correspond to the corresponding attributes for the given 'view' element o the values for transform and viewTarget within currentView will be null If the initial view was a link into another element (i.e., other than a 'view'), then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly for the closest ancestor 'svg' element o the values for transform within currentView will be null o the viewTarget within currentView will represent the target of the link If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: o the values for viewBox, preserveAspectRatio, zoomAndPan, transform and viewTarget within currentView will correspond to the values from the SVG view specification fragment identifier The object itself and its contents are both readonly. Declaration public ISvgViewSpec CurrentView { get; } Property Value Type Description ISvgViewSpec ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Height Corresponds to attribute height on the given 'svg' element. Declaration public ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength IsOuterMost Declaration public bool IsOuterMost { get; } Property Value Type Description Boolean PixelUnitToMillimeterX Size of a pixel units (as defined by CSS2) along the x-axis of the viewport, which represents a unit somewhere in the range of 70dpi to 120dpi, and, on systems that support this, might actually match the characteristics of the target medium. On systems where it is impossible to know the size of a pixel, a suitable default pixel size is provided. Declaration public float PixelUnitToMillimeterX { get; set; } Property Value Type Description Single PixelUnitToMillimeterY Corresponding size of a pixel unit along the y-axis of the viewport. Declaration public float PixelUnitToMillimeterY { get; set; } Property Value Type Description Single PreserveAspectRatio Declaration public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList ScreenPixelToMillimeterX User interface (UI) events in DOM Level 2 indicate the screen positions at which the given UI event occurred. When the user agent actually knows the physical size of a \"screen unit\", this attribute will express that information; otherwise, user agents will provide a suitable default value such as .28mm. Declaration public float ScreenPixelToMillimeterX { get; set; } Property Value Type Description Single ScreenPixelToMillimeterY Corresponding size of a screen pixel along the y-axis of the viewport. Declaration public float ScreenPixelToMillimeterY { get; set; } Property Value Type Description Single SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList UseCurrentView The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the \"standard\" view (i.e., based on attributes on the 'svg' element such as fitBoxToViewport) or to a \"custom\" view (i.e., a hyperlink into a particular 'view' or other element - see Linking into SVG content: URI fragments and SVG views). If the initial view is the \"standard\" view, then this attribute is false. If the initial view is a \"custom\" view, then this attribute is true. Declaration public bool UseCurrentView { get; set; } Property Value Type Description Boolean Exceptions Type Condition DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute. ViewBox Declaration public ISvgAnimatedRect ViewBox { get; } Property Value Type Description ISvgAnimatedRect ViewBoxTransform This function is super useful, calculates out the transformation matrix (i.e., scale and translate) of the viewport to user space. Declaration public ISvgMatrix ViewBoxTransform { get; } Property Value Type Description ISvgMatrix A Matrix which has the translate and scale portions set. Viewport The position and size of the viewport (implicit or explicit) that corresponds to this 'svg' element. When the user agent is actually rendering the content, then the position and size values represent the actual values when rendering. The position and size values are unitless values in the coordinate system of the parent element. If no parent element exists (i.e., 'svg' element represents the root of the document tree), if this SVG document is embedded as part of another document (e.g., via the HTML 'object' element), then the position and size are unitless values in the coordinate system of the parent document. (If the parent uses CSS or XSL layout, then unitless values represent pixel units for the current CSS or XSL viewport, as described in the CSS2 specification.) If the parent element does not have a coordinate system, then the user agent should provide reasonable default values for this attribute. The object itself and its contents are both readonly. Declaration public ISvgRect Viewport { get; } Property Value Type Description ISvgRect Width Corresponds to attribute width on the given 'svg' element. Declaration public ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Corresponds to attribute x on the given 'svg' element. Declaration public ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Corresponds to attribute y on the given 'svg' element. Declaration public ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength ZoomAndPan Declaration public SvgZoomAndPanType ZoomAndPan { get; set; } Property Value Type Description SvgZoomAndPanType Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor AnimationsPaused() Returns true if this SVG document fragment is in a paused state Declaration public bool AnimationsPaused() Returns Type Description Boolean Boolean indicating whether this SVG document fragment is in a paused state. CheckEnclosure(ISvgElement, ISvgRect) Returns true if the rendered content of the given element is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. Declaration public bool CheckEnclosure(ISvgElement element, ISvgRect rect) Parameters Type Name Description ISvgElement element The element on which to perform the given test ISvgRect rect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. Returns Type Description Boolean True or false, depending on whether the given element is enclosed by the supplied rectangle. CheckIntersection(ISvgElement, ISvgRect) Returns true if the rendered content of the given element intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. Declaration public bool CheckIntersection(ISvgElement element, ISvgRect rect) Parameters Type Name Description ISvgElement element The element on which to perform the given test. ISvgRect rect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. Returns Type Description Boolean True or false, depending on whether the given element intersects the supplied rectangle. CreateSvgAngle() Creates an SVGAngle object outside of any document trees. The object is initialized to the value 0 degrees (unitless). Declaration public ISvgAngle CreateSvgAngle() Returns Type Description ISvgAngle An SVGAngle object. CreateSvgLength() Creates an SVGLength object outside of any document trees. The object is initialized to the value of 0 user units. Declaration public ISvgLength CreateSvgLength() Returns Type Description ISvgLength An SVGLength object. CreateSvgMatrix() Creates an SVGMatrix object outside of any document trees. The object is initialized to the identity matrix. Declaration public ISvgMatrix CreateSvgMatrix() Returns Type Description ISvgMatrix An SVGMatrix object. CreateSvgNumber() Creates an SVGNumber object outside of any document trees. The object is initialized to a value of zero. Declaration public ISvgNumber CreateSvgNumber() Returns Type Description ISvgNumber An SVGNumber object. CreateSvgPoint() Creates an SVGPoint object outside of any document trees. The object is initialized to the point (0,0) in the user coordinate system. Declaration public ISvgPoint CreateSvgPoint() Returns Type Description ISvgPoint An SVGPoint object. CreateSvgRect() Creates an SVGRect object outside of any document trees. The object is initialized such that all values are set to 0 user units. Declaration public ISvgRect CreateSvgRect() Returns Type Description ISvgRect An SVGRect object. CreateSvgTransform() Creates an SVGTransform object outside of any document trees. The object is initialized to an identity matrix transform (SVG_TRANSFORM_MATRIX). Declaration public ISvgTransform CreateSvgTransform() Returns Type Description ISvgTransform An SVGTransform object. CreateSvgTransformFromMatrix(ISvgMatrix) Creates an SVGTransform object outside of any document trees. The object is initialized to the given matrix transform (i.e., SVG_TRANSFORM_MATRIX). Declaration public ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix matrix) Parameters Type Name Description ISvgMatrix matrix The transform matrix. Returns Type Description ISvgTransform An SVGTransform object. DeselectAll() Unselects any selected objects, including any selections of text strings and type-in bars. Declaration public void DeselectAll() ForceRedraw() In rendering environments supporting interactivity, forces the user agent to immediately redraw all regions of the viewport that require updating. Declaration public void ForceRedraw() GetBounds() Declaration public SvgRectF GetBounds() Returns Type Description SvgRectF GetElementById(String) Searches this SVG document fragment (i.e., the search is restricted to a subset of the document tree) for an Element whose id is given by elementId. If an Element is found, that Element is returned. If no such element exists, returns null. Behavior is not defined if more than one element has this id. Declaration public XmlElement GetElementById(string elementId) Parameters Type Name Description String elementId The unique id value for an element. Returns Type Description XmlElement The matching element. GetEnclosureList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. Declaration public XmlNodeList GetEnclosureList(ISvgRect rect, ISvgElement referenceElement) Parameters Type Name Description ISvgRect rect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. ISvgElement referenceElement If not null, then only return elements whose drawing order has them below the given reference element. Returns Type Description XmlNodeList A list of Elements whose content is enclosed by the supplied rectangle. GetIntersectionList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. Declaration public XmlNodeList GetIntersectionList(ISvgRect rect, ISvgElement referenceElement) Parameters Type Name Description ISvgRect rect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. ISvgElement referenceElement If not null, then only return elements whose drawing order has them below the given reference element. Returns Type Description XmlNodeList A list of Elements whose content intersects the supplied rectangle. GetSize() Declaration public SvgSizeF GetSize() Returns Type Description SvgSizeF HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean PauseAnimations() Suspends (i.e., pauses) all currently running animations that are defined within the SVG document fragment corresponding to this 'svg' element, causing the animation clock corresponding to this document fragment to stand still until it is unpaused. Declaration public void PauseAnimations() RedrawTimerElapsed(Object, ElapsedEventArgs) Declaration public void RedrawTimerElapsed(object source, ElapsedEventArgs args) Parameters Type Name Description Object source ElapsedEventArgs args Resize() Declaration public void Resize() SuspendRedraw(Int32) Takes a time-out value which indicates that redraw shall not occur until: (a) the corresponding unsuspendRedraw(suspend_handle_id) call has been made, (b) an unsuspendRedrawAll() call has been made, or (c) its timer has timed out. In environments that do not support interactivity (e.g., print media), then redraw shall not be suspended. suspend_handle_id = suspendRedraw(max_wait_milliseconds) and unsuspendRedraw(suspend_handle_id) must be packaged as balanced pairs. When you want to suspend redraw actions as a collection of SVG DOM changes occur, then precede the changes to the SVG DOM with a method call similar to suspend_handle_id = suspendRedraw(max_wait_milliseconds) and follow the changes with a method call similar to unsuspendRedraw(suspend_handle_id). Note that multiple suspendRedraw calls can be used at once and that each such method call is treated independently of the other suspendRedraw method calls. Declaration public int SuspendRedraw(int maxWaitMilliseconds) Parameters Type Name Description Int32 maxWaitMilliseconds The amount of time in milliseconds to hold off before redrawing the device. Values greater than 60 seconds will be truncated down to 60 seconds. Returns Type Description Int32 A number which acts as a unique identifier for the given suspendRedraw() call. This value must be passed as the parameter to the corresponding unsuspendRedraw() method call. UnpauseAnimations() Unsuspends (i.e., unpauses) currently running animations that are defined within the SVG document fragment, causing the animation clock to continue from the time at which it was suspended. Declaration public void UnpauseAnimations() UnsuspendRedraw(Int32) Cancels a specified suspendRedraw() by providing a unique suspend_handle_id. Declaration public void UnsuspendRedraw(int suspendHandleId) Parameters Type Name Description Int32 suspendHandleId A number which acts as a unique identifier for the desired suspendRedraw() call. The number supplied must be a value returned from a previous call to suspendRedraw() Exceptions Type Condition DomException This method will raise a DomException with value NOT_FOUND_ERR if an invalid value (i.e., no such suspend_handle_id is active) for suspend_handle_id is provided. UnsuspendRedrawAll() Cancels all currently active suspendRedraw() method calls. This method is most useful at the very end of a set of SVG DOM calls to ensure that all pending suspendRedraw() method calls have been cancelled. Declaration public void UnsuspendRedrawAll() Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgSvgElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgLocatable ISvgFitToViewBox ISvgZoomAndPan IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.html",
    "title": "Class SvgSwitchElement | SharpVectors Documentation",
    "keywords": "Class SvgSwitchElement The SvgSwitchElement interface corresponds to the 'switch' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgSwitchElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgSwitchElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgTransformableElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgSwitchElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgSwitchElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Constructors SvgSwitchElement(String, String, String, SvgDocument) Declaration public SvgSwitchElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgSwitchElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.html",
    "title": "Class SvgSymbolElement | SharpVectors Documentation",
    "keywords": "Class SvgSymbolElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgSymbolElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgSymbolElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgStylable ISvgExternalResourcesRequired ISvgFitToViewBox IEventTarget ISvgElementVisitorTarget Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgSymbolElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgSymbolElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable, ISvgExternalResourcesRequired, ISvgFitToViewBox, IEventTarget, ISvgElementVisitorTarget Constructors SvgSymbolElement(String, String, String, SvgDocument) Declaration public SvgSymbolElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Height Corresponds to attribute height on the given 'svg' element. Declaration public ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable PreserveAspectRatio Declaration public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value Type Description ISvgAnimatedPreserveAspectRatio RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment Overrides SvgElement.RenderingHint ViewBox Declaration public ISvgAnimatedRect ViewBox { get; } Property Value Type Description ISvgAnimatedRect Width Corresponds to attribute width on the given 'svg' element. Declaration public ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Corresponds to attribute x on the given 'svg' element. Declaration public ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Corresponds to attribute y on the given 'svg' element. Declaration public ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgSymbolElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgStylable ISvgExternalResourcesRequired ISvgFitToViewBox IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgTests.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTests.html",
    "title": "Class SvgTests | SharpVectors Documentation",
    "keywords": "Class SvgTests A class to encapsulate all SvgTest functionality. Used by SVG elements as a helper class Inheritance Object SvgTests Implements ISvgTests Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgTests : ISvgTests Constructors SvgTests(SvgElement) Declaration public SvgTests(SvgElement ownerElement) Parameters Type Name Description SvgElement ownerElement Properties RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList Methods HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Implements ISvgTests"
  },
  "api/SharpVectors.Dom.Svg.SvgTextAreaElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextAreaElement.html",
    "title": "Class SvgTextAreaElement | SharpVectors Documentation",
    "keywords": "Class SvgTextAreaElement Summary description for SvgTextAreaElement. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTextBaseElement SvgTextAreaElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTextElement ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTextBaseElement.LetterSpacing SvgTextBaseElement.TextLength SvgTextBaseElement.Accept(ISvgElementVisitor) SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(String) SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(Object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(Int64, Int64) SvgTextContentElement.GetStartPositionOfChar(Int64) SvgTextContentElement.GetEndPositionOfChar(Int64) SvgTextContentElement.GetExtentOfChar(Int64) SvgTextContentElement.GetRotationOfChar(Int64) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(Int64, Int64) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgTextAreaElement : SvgTextBaseElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTextElement, ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Constructors SvgTextAreaElement(String, String, String, SvgDocument) Declaration public SvgTextAreaElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTextElement ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgTextBaseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextBaseElement.html",
    "title": "Class SvgTextBaseElement | SharpVectors Documentation",
    "keywords": "Class SvgTextBaseElement Summary description for SvgTextElement. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTextBaseElement SvgTextAreaElement SvgTextElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTextElement ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(String) SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(Object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(Int64, Int64) SvgTextContentElement.GetStartPositionOfChar(Int64) SvgTextContentElement.GetEndPositionOfChar(Int64) SvgTextContentElement.GetExtentOfChar(Int64) SvgTextContentElement.GetRotationOfChar(Int64) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(Int64, Int64) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgTextBaseElement : SvgTextPositioningElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTextElement, ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Constructors SvgTextBaseElement(String, String, String, SvgDocument) Declaration protected SvgTextBaseElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties LetterSpacing Declaration public override ISvgAnimatedLength LetterSpacing { get; } Property Value Type Description ISvgAnimatedLength Overrides SvgTextContentElement.LetterSpacing TextLength Declaration public override ISvgAnimatedLength TextLength { get; } Property Value Type Description ISvgAnimatedLength Overrides SvgTextContentElement.TextLength Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTextElement ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.html",
    "title": "Class SvgTextContentElement | SharpVectors Documentation",
    "keywords": "Class SvgTextContentElement Summary description for SvgTextContentElement. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgAElement SvgTextPathElement SvgTextPositioningElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgTextContentElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Constructors SvgTextContentElement(String, String, String, SvgDocument) Declaration protected SvgTextContentElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean LengthAdjust Declaration public virtual ISvgAnimatedEnumeration LengthAdjust { get; } Property Value Type Description ISvgAnimatedEnumeration LetterSpacing Declaration public virtual ISvgAnimatedLength LetterSpacing { get; } Property Value Type Description ISvgAnimatedLength OwnerTextElement Declaration protected SvgTextBaseElement OwnerTextElement { get; } Property Value Type Description SvgTextBaseElement RenderingHint Gets a value providing a hint on the rendering defined by this element. Declaration public override SvgRenderingHint RenderingHint { get; } Property Value Type Description SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Text Overrides SvgElement.RenderingHint RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList TextLength Declaration public virtual ISvgAnimatedLength TextLength { get; } Property Value Type Description ISvgAnimatedLength Methods ElementChange(Object, XmlNodeChangedEventArgs) Declaration public override void ElementChange(object src, XmlNodeChangedEventArgs args) Parameters Type Name Description Object src XmlNodeChangedEventArgs args Overrides CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) GetCharNumAtPosition(ISvgPoint) Declaration public long GetCharNumAtPosition(ISvgPoint point) Parameters Type Name Description ISvgPoint point Returns Type Description Int64 GetComputedTextLength() Declaration public float GetComputedTextLength() Returns Type Description Single GetEndPositionOfChar(Int64) Declaration public ISvgPoint GetEndPositionOfChar(long charnum) Parameters Type Name Description Int64 charnum Returns Type Description ISvgPoint GetExtentOfChar(Int64) Declaration public ISvgRect GetExtentOfChar(long charnum) Parameters Type Name Description Int64 charnum Returns Type Description ISvgRect GetNumberOfChars() Declaration public long GetNumberOfChars() Returns Type Description Int64 GetRotationOfChar(Int64) Declaration public float GetRotationOfChar(long charnum) Parameters Type Name Description Int64 charnum Returns Type Description Single GetStartPositionOfChar(Int64) Declaration public ISvgPoint GetStartPositionOfChar(long charnum) Parameters Type Name Description Int64 charnum Returns Type Description ISvgPoint GetSubStringLength(Int64, Int64) Declaration public float GetSubStringLength(long charnum, long nchars) Parameters Type Name Description Int64 charnum Int64 nchars Returns Type Description Single HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean Invalidate() Declaration public void Invalidate() SelectSubString(Int64, Int64) Declaration public void SelectSubString(long charnum, long nchars) Parameters Type Name Description Int64 charnum Int64 nchars Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgTextElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextElement.html",
    "title": "Class SvgTextElement | SharpVectors Documentation",
    "keywords": "Class SvgTextElement Summary description for SvgTextElement. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTextBaseElement SvgTextElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTextElement ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTextBaseElement.LetterSpacing SvgTextBaseElement.TextLength SvgTextBaseElement.Accept(ISvgElementVisitor) SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(String) SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(Object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(Int64, Int64) SvgTextContentElement.GetStartPositionOfChar(Int64) SvgTextContentElement.GetEndPositionOfChar(Int64) SvgTextContentElement.GetExtentOfChar(Int64) SvgTextContentElement.GetRotationOfChar(Int64) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(Int64, Int64) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgTextElement : SvgTextBaseElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTextElement, ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Constructors SvgTextElement(String, String, String, SvgDocument) Declaration public SvgTextElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTextElement ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.html",
    "title": "Class SvgTextPathElement | SharpVectors Documentation",
    "keywords": "Class SvgTextPathElement The implementation of the ISvgTextPathElement interface corresponds to the 'textPath' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPathElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextPathElement ISvgUriReference ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(String) SvgTextContentElement.LetterSpacing SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(Object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(Int64, Int64) SvgTextContentElement.GetStartPositionOfChar(Int64) SvgTextContentElement.GetEndPositionOfChar(Int64) SvgTextContentElement.GetExtentOfChar(Int64) SvgTextContentElement.GetRotationOfChar(Int64) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(Int64, Int64) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgTextPathElement : SvgTextContentElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTextPathElement, ISvgUriReference, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Constructors SvgTextPathElement(String, String, String, SvgDocument) Declaration public SvgTextPathElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString LengthAdjust Declaration public override ISvgAnimatedEnumeration LengthAdjust { get; } Property Value Type Description ISvgAnimatedEnumeration Overrides SvgTextContentElement.LengthAdjust Method Declaration public ISvgAnimatedEnumeration Method { get; } Property Value Type Description ISvgAnimatedEnumeration ReferencedElement Declaration public XmlElement ReferencedElement { get; } Property Value Type Description XmlElement Spacing Declaration public ISvgAnimatedEnumeration Spacing { get; } Property Value Type Description ISvgAnimatedEnumeration StartOffset Declaration public ISvgAnimatedLength StartOffset { get; } Property Value Type Description ISvgAnimatedLength TextLength Declaration public override ISvgAnimatedLength TextLength { get; } Property Value Type Description ISvgAnimatedLength Overrides SvgTextContentElement.TextLength Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextPathElement ISvgUriReference ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathMethod.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathMethod.html",
    "title": "Enum SvgTextPathMethod | SharpVectors Documentation",
    "keywords": "Enum SvgTextPathMethod Indicates the method by which text should be rendered along the path. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgTextPathMethod Fields Align Stretch Name Description Align A value of align indicates that the glyphs should be rendered using simple 2x3 transformations such that there is no stretching/warping of the glyphs. Typically, supplemental rotation, scaling and translation transformations are done for each glyph to be rendered. As a result, with align, fonts where the glyphs are designed to be connected (e.g., cursive fonts), the connections may not align properly when text is rendered along a path. Stretch A value of stretch indicates that the glyph outlines will be converted into paths, and then all end points and control points will be adjusted to be along the perpendicular vectors from the path, thereby stretching and possibly warping the glyphs. With this approach, connected glyphs, such as in cursive scripts, will maintain their connections."
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathSpacing.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathSpacing.html",
    "title": "Enum SvgTextPathSpacing | SharpVectors Documentation",
    "keywords": "Enum SvgTextPathSpacing Indicates how the user agent should determine the spacing between glyphs that are to be rendered along a path. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgTextPathSpacing Fields Auto Exact Name Description Auto A value of auto indicates that the user agent should use text-on-a-path layout algorithms to adjust the spacing between glyphs in order to achieve visually appealing results. Exact A value of exact indicates that the glyphs should be rendered exactly according to the spacing rules as specified in \"Text on a path layout rules\"."
  },
  "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.html",
    "title": "Class SvgTextPositioningElement | SharpVectors Documentation",
    "keywords": "Class SvgTextPositioningElement The SvgTextPositioningElement interface is inherited by text-related interfaces: SvgTextElement, SvgTSpanElement, SvgTRefElement and SvgAltGlyphElement. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgAltGlyphElement SvgTextBaseElement SvgTRefElement SvgTSpanElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget Inherited Members SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(String) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(Object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(Int64, Int64) SvgTextContentElement.GetStartPositionOfChar(Int64) SvgTextContentElement.GetEndPositionOfChar(Int64) SvgTextContentElement.GetExtentOfChar(Int64) SvgTextContentElement.GetRotationOfChar(Int64) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(Int64, Int64) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgTextPositioningElement : SvgTextContentElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Constructors SvgTextPositioningElement(String, String, String, SvgDocument) Declaration public SvgTextPositioningElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Dx Declaration public ISvgAnimatedLengthList Dx { get; } Property Value Type Description ISvgAnimatedLengthList Dy Declaration public ISvgAnimatedLengthList Dy { get; } Property Value Type Description ISvgAnimatedLengthList Rotate Declaration public ISvgAnimatedNumberList Rotate { get; } Property Value Type Description ISvgAnimatedNumberList X Declaration public ISvgAnimatedLengthList X { get; } Property Value Type Description ISvgAnimatedLengthList Y Declaration public ISvgAnimatedLengthList Y { get; } Property Value Type Description ISvgAnimatedLengthList Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgTextReader.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextReader.html",
    "title": "Class SvgTextReader | SharpVectors Documentation",
    "keywords": "Class SvgTextReader This class represents a reader which normalizes the line break: \\n , \\r , \\r\\n are replaced by \\n . The methods of this reader are not synchronized. The input is buffered. Inheritance Object SvgTextReader SvgStringReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgTextReader Constructors SvgTextReader() Declaration protected SvgTextReader() Properties Column Gets the current column in the stream. Declaration public abstract int Column { get; } Property Value Type Description Int32 Line Gets the current line in the stream. Declaration public abstract int Line { get; } Property Value Type Description Int32 Methods Read() Declaration public abstract int Read() Returns Type Description Int32 Read(Char[], Int32, Int32) Read characters into a portion of an array. Declaration public virtual int Read(char[] cbuf, int off, int len) Parameters Type Name Description Char [] cbuf Destination buffer Int32 off Offset at which to start writing characters Int32 len Maximum number of characters to read Returns Type Description Int32 The number of characters read, or -1 if the end of the stream has been reached"
  },
  "api/SharpVectors.Dom.Svg.SvgTitleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTitleElement.html",
    "title": "Class SvgTitleElement | SharpVectors Documentation",
    "keywords": "Class SvgTitleElement The SvgTitleElement interface corresponds to the 'title' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTitleElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgTitleElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgTitleElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgTitleElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable Constructors SvgTitleElement(String, String, String, SvgDocument) Declaration public SvgTitleElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgTitleElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgStylable"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.html",
    "title": "Class SvgTransform | SharpVectors Documentation",
    "keywords": "Class SvgTransform Summary description for SvgTransform. Inheritance Object SvgTransform Implements ISvgTransform Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgTransform : ISvgTransform Constructors SvgTransform() Declaration public SvgTransform() SvgTransform(ISvgMatrix) Declaration public SvgTransform(ISvgMatrix matrix) Parameters Type Name Description ISvgMatrix matrix SvgTransform(String) Declaration public SvgTransform(string str) Parameters Type Name Description String str Properties Angle Declaration public double Angle { get; } Property Value Type Description Double InputValues Declaration public double[] InputValues { get; } Property Value Type Description Double [] Matrix Declaration public ISvgMatrix Matrix { get; } Property Value Type Description ISvgMatrix TransformType Declaration public SvgTransformType TransformType { get; } Property Value Type Description SvgTransformType Type Declaration public short Type { get; } Property Value Type Description Int16 Methods SetMatrix(ISvgMatrix) Declaration public void SetMatrix(ISvgMatrix matrix) Parameters Type Name Description ISvgMatrix matrix SetRotate(Double) Declaration public void SetRotate(double angle) Parameters Type Name Description Double angle SetRotate(Double, Double, Double) Declaration public void SetRotate(double angle, double cx, double cy) Parameters Type Name Description Double angle Double cx Double cy SetScale(Double, Double) Declaration public void SetScale(double sx, double sy) Parameters Type Name Description Double sx Double sy SetSkewX(Double) Declaration public void SetSkewX(double angle) Parameters Type Name Description Double angle SetSkewY(Double) Declaration public void SetSkewY(double angle) Parameters Type Name Description Double angle SetTranslate(Double, Double) Declaration public void SetTranslate(double tx, double ty) Parameters Type Name Description Double tx Double ty Implements ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.html",
    "title": "Class SvgTransformableElement | SharpVectors Documentation",
    "keywords": "Class SvgTransformableElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgCircleElement SvgClipPathElement SvgDefsElement SvgEllipseElement SvgGElement SvgImageElement SvgLineElement SvgPathElement SvgPolyElement SvgRectElement SvgSvgElement SvgSwitchElement SvgTextContentElement SvgUseElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable ISvgTransformable ISvgLocatable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public class SvgTransformableElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable, ISvgTransformable, ISvgLocatable Constructors SvgTransformableElement(String, String, String, SvgDocument) Declaration public SvgTransformableElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties FarthestViewportElement Declaration public ISvgElement FarthestViewportElement { get; } Property Value Type Description ISvgElement NearestViewportElement Declaration public ISvgElement NearestViewportElement { get; } Property Value Type Description ISvgElement Transform Declaration public ISvgAnimatedTransformList Transform { get; } Property Value Type Description ISvgAnimatedTransformList Methods CssInvalidate() Declaration public override void CssInvalidate() Overrides CssXmlElement.CssInvalidate() GetBBox() Declaration public ISvgRect GetBBox() Returns Type Description ISvgRect GetCTM() For each given element, the accumulation of all transformations that have been defined on the given element and all of its ancestors up to and including the element that established the current viewport (usually, the 'svg' element which is the most immediate ancestor to the given element) is called the current transformation matrix or CTM. Declaration public ISvgMatrix GetCTM() Returns Type Description ISvgMatrix A matrix representing the mapping of current user coordinates to viewport coordinates. GetScreenCTM() Declaration public ISvgMatrix GetScreenCTM() Returns Type Description ISvgMatrix GetTransformToElement(ISvgElement) Declaration public ISvgMatrix GetTransformToElement(ISvgElement element) Parameters Type Name Description ISvgElement element Returns Type Description ISvgMatrix HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgStyleableElement.HandleAttributeChange(XmlAttribute) Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable ISvgTransformable ISvgLocatable"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.html",
    "title": "Class SvgTransformF | SharpVectors Documentation",
    "keywords": "Class SvgTransformF This is an implementation of the 3-by-3 affine matrix that represents a geometric transform. Inheritance Object SvgTransformF Implements ICloneable Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public class SvgTransformF : ICloneable Constructors SvgTransformF() Initializes a new instance of the SvgTransformF class as the identity transform or matrix. Declaration public SvgTransformF() SvgTransformF(SvgRectF, SvgPointF[]) Initializes a new instance of the SvgTransformF class to the geometric transform defined by the specified rectangle and array of points. Declaration public SvgTransformF(SvgRectF rect, SvgPointF[] plgpts) Parameters Type Name Description SvgRectF rect A SvgRectF structure that represents the rectangle to be transformed. SvgPointF [] plgpts An array of three SvgPointF structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners. Exceptions Type Condition ArgumentNullException If the plgpts is null . ArgumentException If the length of the plgpts array is not equal to 3. ArgumentOutOfRangeException If the width or height of the rect is zero. SvgTransformF(SvgTransformF) Initializes a new instance of the SvgTransformF class with parameters copied from the specified parameter, a copy constructor. Declaration public SvgTransformF(SvgTransformF source) Parameters Type Name Description SvgTransformF source The SvgTransformF instance from which the parameters are to be copied. Exceptions Type Condition ArgumentNullException If the source is null . SvgTransformF(Single, Single, Single, Single, Single, Single) Initializes a new instance of the SvgTransformF class with the specified elements. Declaration public SvgTransformF(float m11, float m12, float m21, float m22, float dx, float dy) Parameters Type Name Description Single m11 The value in the first row and first column of the new SvgTransformF . Single m12 The value in the first row and second column of the new SvgTransformF . Single m21 The value in the second row and first column of the new SvgTransformF . Single m22 The value in the second row and second column of the new SvgTransformF . Single dx The value in the third row and first column of the new SvgTransformF . Single dy The value in the third row and second column of the new SvgTransformF . SvgTransformF(Single[]) Initializes a new instance of the SvgTransformF class with the specified elements. Declaration public SvgTransformF(float[] elements) Parameters Type Name Description Single [] elements An array of six items defining the transform. Exceptions Type Condition ArgumentNullException If the elements is null . ArgumentException If the length of the elements array is not equal to 6. Properties Elements Gets an array of floating-point values that represents the elements of this SvgTransformF . Declaration public float[] Elements { get; } Property Value Type Description Single [] An array of floating-point values that represents the elements of this SvgTransformF . IsIdentity Gets a value indicating whether this SvgTransformF is the identity matrix. Declaration public bool IsIdentity { get; } Property Value Type Description Boolean This property is true if this SvgTransformF is identity; otherwise, false . IsInvertible Gets a value indicating whether this SvgTransformF is invertible. Declaration public bool IsInvertible { get; } Property Value Type Description Boolean This property is true if this SvgTransformF is invertible; otherwise, false . OffsetX Gets the x translation value (the dx value, or the element in the third row and first column) of this SvgTransformF . Declaration public float OffsetX { get; } Property Value Type Description Single The x translation value of this SvgTransformF . OffsetY Gets the y translation value (the dy value, or the element in the third row and second column) of this SvgTransformF . Declaration public float OffsetY { get; } Property Value Type Description Single The y translation value of this SvgTransformF . Methods Clone() This creates a new SvgTransformF that is a deep copy of the current instance. Declaration public SvgTransformF Clone() Returns Type Description SvgTransformF A new object that is a copy of this instance. Equals(Object) Determine whether the specified object is a SvgTransformF and is identical to this SvgTransformF . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The object to test. Returns Type Description Boolean This method returns true if obj is the specified SvgTransformF identical to this SvgTransformF ; otherwise, false . Overrides Object.Equals(Object) GetHashCode() Returns a hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The hash code for this SvgTransformF . Overrides Object.GetHashCode() Invert() Inverts this SvgTransformF , if it is invertible. Declaration public void Invert() Multiply(SvgTransformF) Multiplies this SvgTransformF by the specified SvgTransformF by prepending the specified SvgTransformF . Declaration public void Multiply(SvgTransformF matrix) Parameters Type Name Description SvgTransformF matrix The SvgTransformF by which this SvgTransformF is to be multiplied. Multiply(SvgTransformF, SvgTransformOrder) Multiplies this SvgTransformF by the matrix specified in the matrix parameter, and in the order specified in the order parameter. Declaration public void Multiply(SvgTransformF matrix, SvgTransformOrder order) Parameters Type Name Description SvgTransformF matrix The SvgTransformF by which this SvgTransformF is to be multiplied. SvgTransformOrder order The SvgTransformOrder that represents the order of the multiplication. Reset() Resets this SvgTransformF to have the elements of the identity matrix. Declaration public void Reset() ReverseTransform(Single, Single, out Single, out Single) Applies the reverse geometric transform represented by this SvgTransformF to a specified point. Declaration public void ReverseTransform(float x, float y, out float ox, out float oy) Parameters Type Name Description Single x The input x value of the point. Single y The input y value of the point. Single ox The transformed x value of the point. Single oy The transformed y value of the point. Rotate(Single) Applies a clockwise rotation of the specified angle about the origin to this SvgTransformF . Declaration public void Rotate(float angle) Parameters Type Name Description Single angle The angle (extent) of the rotation, in degrees. Rotate(Single, SvgTransformOrder) Applies a clockwise rotation of the specified angle about the origin to this SvgTransformF , and in the order specified in the order parameter. Declaration public void Rotate(float angle, SvgTransformOrder order) Parameters Type Name Description Single angle The angle (extent) of the rotation, in degrees. SvgTransformOrder order A SvgTransformOrder that specifies the order (append or prepend) in which the rotation is applied to this SvgTransformF . RotateAt(Single, SvgPointF) Applies a clockwise rotation about the specified point to this SvgTransformF by prepending the rotation. Declaration public void RotateAt(float angle, SvgPointF point) Parameters Type Name Description Single angle The angle (extent) of the rotation, in degrees. SvgPointF point A SvgPointF that represents the center of the rotation. RotateAt(Single, SvgPointF, SvgTransformOrder) Applies a clockwise rotation about the specified point to this SvgTransformF in the specified order. Declaration public void RotateAt(float angle, SvgPointF point, SvgTransformOrder order) Parameters Type Name Description Single angle The angle (extent) of the rotation, in degrees. SvgPointF point A SvgPointF that represents the center of the rotation. SvgTransformOrder order A SvgTransformOrder that specifies the order (append or prepend) in which the rotation is applied. Scale(Single, Single) Applies the specified scale vector to this SvgTransformF by prepending the scale vector. Declaration public void Scale(float scaleX, float scaleY) Parameters Type Name Description Single scaleX The value by which to scale this SvgTransformF in the x-axis direction. Single scaleY The value by which to scale this SvgTransformF in the y-axis direction. Scale(Single, Single, SvgTransformOrder) Applies the specified scale vector to this SvgTransformF using the specified order. Declaration public void Scale(float scaleX, float scaleY, SvgTransformOrder order) Parameters Type Name Description Single scaleX The value by which to scale this SvgTransformF in the x-axis direction. Single scaleY The value by which to scale this SvgTransformF in the y-axis direction. SvgTransformOrder order A SvgTransformOrder that specifies the order (append or prepend) in which the scale vector is applied to this SvgTransformF . Shear(Single, Single) Applies the specified shear vector to this SvgTransformF by prepending the shear vector. Declaration public void Shear(float shearX, float shearY) Parameters Type Name Description Single shearX The horizontal shear factor. Single shearY The vertical shear factor. Shear(Single, Single, SvgTransformOrder) Applies the specified shear vector to this SvgTransformF in the specified order. Declaration public void Shear(float shearX, float shearY, SvgTransformOrder order) Parameters Type Name Description Single shearX The horizontal shear factor. Single shearY The vertical shear factor. SvgTransformOrder order A SvgTransformOrder that specifies the order (append or prepend) in which the shear is applied. Transform(Single, Single, out Single, out Single) Applies the geometric transform represented by this SvgTransformF to a specified point. Declaration public void Transform(float x, float y, out float ox, out float oy) Parameters Type Name Description Single x The input x value of the point. Single y The input y value of the point. Single ox The transformed x value of the point. Single oy The transformed y value of the point. TransformPoints(SvgPointF[]) Applies the geometric transform represented by this SvgTransformF to a specified array of points. Declaration public void TransformPoints(SvgPointF[] pts) Parameters Type Name Description SvgPointF [] pts An array of SvgPointF structures that represents the points to transform. TransformVectors(SvgPointF[]) Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored. Declaration public void TransformVectors(SvgPointF[] pts) Parameters Type Name Description SvgPointF [] pts An array of SvgPointF structures that represents the points to transform. Translate(Single, Single) Applies the specified translation vector to this SvgTransformF by prepending the translation vector. Declaration public void Translate(float offsetX, float offsetY) Parameters Type Name Description Single offsetX The x value by which to translate this SvgTransformF . Single offsetY The y value by which to translate this SvgTransformF . Translate(Single, Single, SvgTransformOrder) Applies the specified translation vector to this SvgTransformF in the specified order. Declaration public void Translate(float offsetX, float offsetY, SvgTransformOrder order) Parameters Type Name Description Single offsetX The x value by which to translate this SvgTransformF . Single offsetY The y value by which to translate this SvgTransformF . SvgTransformOrder order A SvgTransformOrder that specifies the order (append or prepend) in which the translation is applied to this SvgTransformF . Explicit Interface Implementations ICloneable.Clone() This creates a new SvgTransformF that is a deep copy of the current instance. Declaration object ICloneable.Clone() Returns Type Description Object A new object that is a copy of this instance. Implements System.ICloneable"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformList.html",
    "title": "Class SvgTransformList | SharpVectors Documentation",
    "keywords": "Class SvgTransformList Summary description for SvgTransformList. Inheritance Object SvgList < ISvgTransform > SvgTransformList Implements IEnumerable < ISvgTransform > IEnumerable ISvgTransformList Inherited Members SvgList<ISvgTransform>._items SvgList<ISvgTransform>.Count SvgList<ISvgTransform>.Item[Int32] SvgList<ISvgTransform>.NumberOfItems SvgList<ISvgTransform>.Clear() SvgList<ISvgTransform>.Initialize(ISvgTransform) SvgList<ISvgTransform>.GetItem(UInt32) SvgList<ISvgTransform>.InsertItemBefore(ISvgTransform, UInt32) SvgList<ISvgTransform>.ReplaceItem(ISvgTransform, UInt32) SvgList<ISvgTransform>.RemoveItem(UInt32) SvgList<ISvgTransform>.AppendItem(ISvgTransform) SvgList<ISvgTransform>.GetEnumerator() SvgList<ISvgTransform>.IEnumerable.GetEnumerator() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgTransformList : SvgList<ISvgTransform>, IEnumerable<ISvgTransform>, IEnumerable, ISvgTransformList Constructors SvgTransformList() Declaration public SvgTransformList() SvgTransformList(String) Declaration public SvgTransformList(string listString) Parameters Type Name Description String listString Properties TotalMatrix Declaration public SvgMatrix TotalMatrix { get; } Property Value Type Description SvgMatrix Methods Consolidate() Declaration public ISvgTransform Consolidate() Returns Type Description ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix) Declaration public ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix matrix) Parameters Type Name Description ISvgMatrix matrix Returns Type Description ISvgTransform FromString(String) Declaration public void FromString(string listString) Parameters Type Name Description String listString Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable ISvgTransformList"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformOrder.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformOrder.html",
    "title": "Enum SvgTransformOrder | SharpVectors Documentation",
    "keywords": "Enum SvgTransformOrder Specifies the order for matrix transform operations. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax [Serializable] public enum SvgTransformOrder Fields Append Prepend Name Description Append The new operation is applied before the old operation. Prepend The new operation is applied after the old operation."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformType.html",
    "title": "Enum SvgTransformType | SharpVectors Documentation",
    "keywords": "Enum SvgTransformType Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgTransformType : short Fields Matrix Rotate Scale SkewX SkewY Translate Unknown Name Description Matrix Rotate Scale SkewX SkewY Translate Unknown"
  },
  "api/SharpVectors.Dom.Svg.SvgTRefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTRefElement.html",
    "title": "Class SvgTRefElement | SharpVectors Documentation",
    "keywords": "Class SvgTRefElement Summary description for SvgTRefElement. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTRefElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTRefElement ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgUriReference Inherited Members SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(String) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(Object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(Int64, Int64) SvgTextContentElement.GetStartPositionOfChar(Int64) SvgTextContentElement.GetEndPositionOfChar(Int64) SvgTextContentElement.GetExtentOfChar(Int64) SvgTextContentElement.GetRotationOfChar(Int64) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(Int64, Int64) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgTRefElement : SvgTextPositioningElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTRefElement, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgUriReference Constructors SvgTRefElement(String, String, String, SvgDocument) Declaration public SvgTRefElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString ReferencedElement Declaration public XmlElement ReferencedElement { get; } Property Value Type Description XmlElement Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTRefElement ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgUriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgTSpanElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTSpanElement.html",
    "title": "Class SvgTSpanElement | SharpVectors Documentation",
    "keywords": "Class SvgTSpanElement The SvgTSpanElement interface corresponds to the 'tspan' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTSpanElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTSpanElement ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(String) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(Object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(Int64, Int64) SvgTextContentElement.GetStartPositionOfChar(Int64) SvgTextContentElement.GetEndPositionOfChar(Int64) SvgTextContentElement.GetExtentOfChar(Int64) SvgTextContentElement.GetRotationOfChar(Int64) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(Int64, Int64) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgTSpanElement : SvgTextPositioningElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTSpanElement, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Constructors SvgTSpanElement(String, String, String, SvgDocument) Declaration public SvgTSpanElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTSpanElement ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgUnitType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUnitType.html",
    "title": "Enum SvgUnitType | SharpVectors Documentation",
    "keywords": "Enum SvgUnitType This defines a commonly used set of constants and is a base interface used by ISvgGradientElement , ISvgPatternElement , ISvgClipPathElement , ISvgMaskElement and ISvgFilterElement . Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgUnitType : ushort Fields ObjectBoundingBox Unknown UserSpaceOnUse Name Description ObjectBoundingBox Corresponds to value 'objectBoundingBox' . Unknown The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. UserSpaceOnUse Corresponds to value 'userSpaceOnUse' ."
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.html",
    "title": "Class SvgUriReference | SharpVectors Documentation",
    "keywords": "Class SvgUriReference Inheritance Object SvgUriReference Implements ISvgUriReference Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgUriReference : ISvgUriReference Constructors SvgUriReference(SvgElement) Declaration public SvgUriReference(SvgElement ownerElement) Parameters Type Name Description SvgElement ownerElement Properties AbsoluteUri Declaration public string AbsoluteUri { get; } Property Value Type Description String Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean OwnerElement Declaration public SvgElement OwnerElement { get; } Property Value Type Description SvgElement ReferencedNode Declaration public XmlNode ReferencedNode { get; } Property Value Type Description XmlNode ReferencedResource Declaration public WebResponse ReferencedResource { get; } Property Value Type Description WebResponse Implements ISvgUriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.html",
    "title": "Class SvgUseElement | SharpVectors Documentation",
    "keywords": "Class SvgUseElement Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgUseElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgUseElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgTests ISvgStylable ISvgLangSpace ISvgExternalResourcesRequired ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(String) SvgStyleableElement.GetPropertyValue(String) SvgStyleableElement.GetPropertyValue(String, String) SvgStyleableElement.GetComputedStyle(String) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgUseElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgUseElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgStylable, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Constructors SvgUseElement(String, String, String, SvgDocument) Declaration public SvgUseElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties AnimatedInstanceRoot Declaration public ISvgElementInstance AnimatedInstanceRoot { get; } Property Value Type Description ISvgElementInstance ExternalResourcesRequired Declaration public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value Type Description ISvgAnimatedBoolean Height Declaration public ISvgAnimatedLength Height { get; } Property Value Type Description ISvgAnimatedLength Href Declaration public ISvgAnimatedString Href { get; } Property Value Type Description ISvgAnimatedString InstanceRoot Declaration public ISvgElementInstance InstanceRoot { get; } Property Value Type Description ISvgElementInstance ReferencedElement Declaration public XmlElement ReferencedElement { get; } Property Value Type Description XmlElement RequiredExtensions Declaration public ISvgStringList RequiredExtensions { get; } Property Value Type Description ISvgStringList RequiredFeatures Declaration public ISvgStringList RequiredFeatures { get; } Property Value Type Description ISvgStringList SystemLanguage Declaration public ISvgStringList SystemLanguage { get; } Property Value Type Description ISvgStringList UriReference Declaration public SvgUriReference UriReference { get; } Property Value Type Description SvgUriReference Width Declaration public ISvgAnimatedLength Width { get; } Property Value Type Description ISvgAnimatedLength X Declaration public ISvgAnimatedLength X { get; } Property Value Type Description ISvgAnimatedLength Y Declaration public ISvgAnimatedLength Y { get; } Property Value Type Description ISvgAnimatedLength Methods Accept(ISvgElementVisitor) Declaration public void Accept(ISvgElementVisitor visitor) Parameters Type Name Description ISvgElementVisitor visitor CopyToReferencedElement(XmlElement) Declaration public void CopyToReferencedElement(XmlElement refEl) Parameters Type Name Description XmlElement refEl HandleAttributeChange(XmlAttribute) Declaration public override void HandleAttributeChange(XmlAttribute attribute) Parameters Type Name Description XmlAttribute attribute Overrides SvgTransformableElement.HandleAttributeChange(XmlAttribute) HasExtension(String) Declaration public bool HasExtension(string extension) Parameters Type Name Description String extension Returns Type Description Boolean OnReferencedNodeChange(Object, XmlNodeChangedEventArgs) Declaration public void OnReferencedNodeChange(object src, XmlNodeChangedEventArgs args) Parameters Type Name Description Object src XmlNodeChangedEventArgs args RestoreReferencedElement(XmlElement) Declaration public void RestoreReferencedElement(XmlElement refEl) Parameters Type Name Description XmlElement refEl Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgUseElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgTests ISvgStylable ISvgLangSpace ISvgExternalResourcesRequired ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.html",
    "title": "Class SvgViewSpec | SharpVectors Documentation",
    "keywords": "Class SvgViewSpec TODO: This class does not yet support custom views Inheritance Object SvgFitToViewBox SvgViewSpec Implements ISvgViewSpec ISvgZoomAndPan ISvgFitToViewBox Inherited Members SvgFitToViewBox._ownerElement SvgFitToViewBox.ViewBox SvgFitToViewBox.PreserveAspectRatio Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgViewSpec : SvgFitToViewBox, ISvgViewSpec, ISvgZoomAndPan, ISvgFitToViewBox Constructors SvgViewSpec(SvgElement) Declaration public SvgViewSpec(SvgElement ownerElement) Parameters Type Name Description SvgElement ownerElement Properties PreserveAspectRatioString Declaration public string PreserveAspectRatioString { get; } Property Value Type Description String Transform Declaration public ISvgTransformList Transform { get; } Property Value Type Description ISvgTransformList TransformString Declaration public string TransformString { get; } Property Value Type Description String ViewBoxString Declaration public string ViewBoxString { get; } Property Value Type Description String ViewTarget Declaration public ISvgElement ViewTarget { get; } Property Value Type Description ISvgElement ViewTargetString Declaration public string ViewTargetString { get; } Property Value Type Description String ZoomAndPan Declaration public SvgZoomAndPanType ZoomAndPan { get; set; } Property Value Type Description SvgZoomAndPanType Implements ISvgViewSpec ISvgZoomAndPan ISvgFitToViewBox"
  },
  "api/SharpVectors.Dom.Svg.SvgVKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgVKernElement.html",
    "title": "Class SvgVKernElement | SharpVectors Documentation",
    "keywords": "Class SvgVKernElement The SvgVKernElement interface corresponds to the 'vkern' element. Inheritance Object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgKernElement SvgVKernElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgVKernElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgKernElement.Glyph1 SvgKernElement.Glyph2 SvgKernElement.Unicode1 SvgKernElement.Unicode2 SvgKernElement.Kerning SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.ISvgElement.OwnerSvgElement SvgElement.ISvgElement.ViewportElement SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(String) SvgElement.GetAttribute(String, Single) SvgElement.SetAttribute(String, Single) SvgElement.GetAttribute(String, Int32) SvgElement.SetAttribute(String, Int32) SvgElement.GetAttribute(String, Double) SvgElement.SetAttribute(String, Double) SvgElement.GetAttribute(String, Int64) SvgElement.SetAttribute(String, Int64) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(String) CssXmlElement.GetComputedStringValue(String, String) CssXmlElement.GetComputedCssValue(String, String) CssXmlElement.Supports(String, String) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(Object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.FireChildNodeChange(Object, XmlNodeChangedEventArgs, Boolean) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler Element.IEventTarget.AddEventListener(String, EventListener, Boolean) Element.IEventTarget.RemoveEventListener(String, EventListener, Boolean) Element.IEventTarget.DispatchEvent(IEvent) Element.IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Element.IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Element.IEventTarget.WillTriggerNs(String, String) Element.IEventTarget.HasEventListenerNs(String, String) Element.IEventTargetSupport.FireEvent(IEvent) XmlElement.CloneNode(Boolean) XmlElement.GetAttribute(String) XmlElement.SetAttribute(String, String) XmlElement.RemoveAttribute(String) XmlElement.GetAttributeNode(String) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(String) XmlElement.GetAttribute(String, String) XmlElement.SetAttribute(String, String, String) XmlElement.RemoveAttribute(String, String) XmlElement.GetAttributeNode(String, String) XmlElement.SetAttributeNode(String, String) XmlElement.RemoveAttributeNode(String, String) XmlElement.GetElementsByTagName(String, String) XmlElement.HasAttribute(String) XmlElement.HasAttribute(String, String) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(Int32) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgVKernElement : SvgKernElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgVKernElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Constructors SvgVKernElement(String, String, String, SvgDocument) Declaration public SvgVKernElement(string prefix, string localname, string ns, SvgDocument doc) Parameters Type Name Description String prefix String localname String ns SvgDocument doc Properties IsHorizontal Declaration public override bool IsHorizontal { get; } Property Value Type Description Boolean Overrides SvgKernElement.IsHorizontal IsRenderable Gets a value indicating whether this SVG element is renderable. Declaration public override bool IsRenderable { get; } Property Value Type Description Boolean This is langword_csharp_'true if the element is renderable; otherwise, it is false . Overrides SvgKernElement.IsRenderable Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgVKernElement ISvgElement IElement IXmlElement INode IXmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.html",
    "title": "Class SvgWindow | SharpVectors Documentation",
    "keywords": "Class SvgWindow Inheritance Object SvgWindow WpfSvgWindow Implements ISvgWindow Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public abstract class SvgWindow : ISvgWindow Constructors SvgWindow(SvgWindow, Int64, Int64) Declaration protected SvgWindow(SvgWindow parentWindow, long innerWidth, long innerHeight) Parameters Type Name Description SvgWindow parentWindow Int64 innerWidth Int64 innerHeight SvgWindow(Int64, Int64, ISvgRenderer) Declaration protected SvgWindow(long innerWidth, long innerHeight, ISvgRenderer renderer) Parameters Type Name Description Int64 innerWidth Int64 innerHeight ISvgRenderer renderer Fields _mappedTasks Declaration protected IDictionary<string, List<Task>> _mappedTasks Field Value Type Description IDictionary < String , List < Task >> Properties BaseUrls Declaration public ISet<string> BaseUrls { get; set; } Property Value Type Description ISet < String > DefaultStyleSheet Declaration public IStyleSheet DefaultStyleSheet { get; } Property Value Type Description IStyleSheet Document Declaration public ISvgDocument Document { get; set; } Property Value Type Description ISvgDocument InnerHeight Declaration public virtual long InnerHeight { get; set; } Property Value Type Description Int64 InnerWidth Declaration public virtual long InnerWidth { get; set; } Property Value Type Description Int64 ParentWindow Declaration public SvgWindow ParentWindow { get; } Property Value Type Description SvgWindow Renderer Declaration public ISvgRenderer Renderer { get; set; } Property Value Type Description ISvgRenderer Source Declaration public abstract string Source { get; set; } Property Value Type Description String WorkingDir Declaration public abstract DirectoryInfo WorkingDir { get; } Property Value Type Description DirectoryInfo Methods AddTask(String, Task) Declaration public void AddTask(string tasksName, Task task) Parameters Type Name Description String tasksName Task task Alert(String) Declaration public abstract void Alert(string message) Parameters Type Name Description String message AwaitTasks(String) Declaration public void AwaitTasks(string tasksName) Parameters Type Name Description String tasksName CreateEmptySvgDocument() Create and assign an empty SvgDocument to this window. This is needed only in situations where the library user needs to create an SVG DOM tree outside of the usual LoadSvgDocument mechanism. Declaration public SvgDocument CreateEmptySvgDocument() Returns Type Description SvgDocument CreateOwnedWindow() Declaration public virtual SvgWindow CreateOwnedWindow() Returns Type Description SvgWindow CreateOwnedWindow(Int64, Int64) Declaration public abstract SvgWindow CreateOwnedWindow(long innerWidth, long innerHeight) Parameters Type Name Description Int64 innerWidth Int64 innerHeight Returns Type Description SvgWindow CreateSvgRenderer() Declaration public virtual ISvgRenderer CreateSvgRenderer() Returns Type Description ISvgRenderer ParseXML(String, XmlDocument) Declaration public XmlDocumentFragment ParseXML(string source, XmlDocument document) Parameters Type Name Description String source XmlDocument document Returns Type Description XmlDocumentFragment PrintNode(XmlNode) Declaration public string PrintNode(XmlNode node) Parameters Type Name Description XmlNode node Returns Type Description String Resize(Int32, Int32) This is expected to be called by the host Declaration public virtual void Resize(int innerWidth, int innerHeight) Parameters Type Name Description Int32 innerWidth The new width of the control Int32 innerHeight The new height of the control Implements ISvgWindow"
  },
  "api/SharpVectors.Dom.Svg.SvgZoomAndPan.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgZoomAndPan.html",
    "title": "Class SvgZoomAndPan | SharpVectors Documentation",
    "keywords": "Class SvgZoomAndPan Inheritance Object SvgZoomAndPan Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Model.dll Syntax public sealed class SvgZoomAndPan Constructors SvgZoomAndPan(SvgElement) Declaration public SvgZoomAndPan(SvgElement ownerElement) Parameters Type Name Description SvgElement ownerElement Properties ZoomAndPan Declaration public SvgZoomAndPanType ZoomAndPan { get; } Property Value Type Description SvgZoomAndPanType"
  },
  "api/SharpVectors.Dom.Svg.SvgZoomAndPanType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgZoomAndPanType.html",
    "title": "Enum SvgZoomAndPanType | SharpVectors Documentation",
    "keywords": "Enum SvgZoomAndPanType Summary description for SvgZoomAndPanType. Namespace : SharpVectors.Dom.Svg Assembly : SharpVectors.Core.dll Syntax public enum SvgZoomAndPanType Fields Disable Magnify Unknown Name Description Disable Magnify Unknown"
  },
  "api/SharpVectors.Dom.SvgConstants.html": {
    "href": "api/SharpVectors.Dom.SvgConstants.html",
    "title": "Class SvgConstants | SharpVectors Documentation",
    "keywords": "Class SvgConstants Define SVG constants, such as tag names, attribute names and URI Inheritance Object SvgConstants Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public static class SvgConstants Fields AttrAccentHeight Declaration public const string AttrAccentHeight = \"accent-height\" Field Value Type Description String AttrAccumulate Declaration public const string AttrAccumulate = \"accumulate\" Field Value Type Description String AttrAdditive Declaration public const string AttrAdditive = \"additive\" Field Value Type Description String AttrAlphabetic Declaration public const string AttrAlphabetic = \"alphabetic\" Field Value Type Description String AttrAmplitude Declaration public const string AttrAmplitude = \"amplitude\" Field Value Type Description String AttrArabicForm Declaration public const string AttrArabicForm = \"arabic-form\" Field Value Type Description String AttrAscent Declaration public const string AttrAscent = \"ascent\" Field Value Type Description String AttrAttributeName Declaration public const string AttrAttributeName = \"attributeName\" Field Value Type Description String AttrAttributeType Declaration public const string AttrAttributeType = \"attributeType\" Field Value Type Description String AttrAzimuth Declaration public const string AttrAzimuth = \"azimuth\" Field Value Type Description String AttrBaseFrequency Declaration public const string AttrBaseFrequency = \"baseFrequency\" Field Value Type Description String AttrBaseProfile Declaration public const string AttrBaseProfile = \"baseProfile\" Field Value Type Description String AttrBbox Declaration public const string AttrBbox = \"bbox\" Field Value Type Description String AttrBegin Declaration public const string AttrBegin = \"begin\" Field Value Type Description String AttrBias Declaration public const string AttrBias = \"bias\" Field Value Type Description String AttrBy Declaration public const string AttrBy = \"by\" Field Value Type Description String AttrCalcMode Declaration public const string AttrCalcMode = \"calcMode\" Field Value Type Description String AttrCapHeight Declaration public const string AttrCapHeight = \"cap-height\" Field Value Type Description String AttrClass Declaration public const string AttrClass = \"class\" Field Value Type Description String AttrClipPath Declaration public const string AttrClipPath = \"clip-path\" Field Value Type Description String AttrClipPathUnits Declaration public const string AttrClipPathUnits = \"clipPathUnits\" Field Value Type Description String AttrColorInterpolation Declaration public const string AttrColorInterpolation = \"color-interpolation\" Field Value Type Description String AttrColorRendering Declaration public const string AttrColorRendering = \"color-rendering\" Field Value Type Description String AttrContentScriptType Declaration public const string AttrContentScriptType = \"contentScriptType\" Field Value Type Description String AttrContentStyleType Declaration public const string AttrContentStyleType = \"contentStyleType\" Field Value Type Description String AttrCx Declaration public const string AttrCx = \"cx\" Field Value Type Description String AttrCy Declaration public const string AttrCy = \"cy\" Field Value Type Description String AttrD Declaration public const string AttrD = \"d\" Field Value Type Description String AttrDescent Declaration public const string AttrDescent = \"descent\" Field Value Type Description String AttrDiffuseConstant Declaration public const string AttrDiffuseConstant = \"diffuseConstant\" Field Value Type Description String AttrDivisor Declaration public const string AttrDivisor = \"divisor\" Field Value Type Description String AttrDur Declaration public const string AttrDur = \"dur\" Field Value Type Description String AttrDx Declaration public const string AttrDx = \"dx\" Field Value Type Description String AttrDy Declaration public const string AttrDy = \"dy\" Field Value Type Description String AttrEdgeMode Declaration public const string AttrEdgeMode = \"edgeMode\" Field Value Type Description String AttrElevation Declaration public const string AttrElevation = \"elevation\" Field Value Type Description String AttrEnableBackground Declaration public const string AttrEnableBackground = \"enable-background\" Field Value Type Description String AttrEnd Declaration public const string AttrEnd = \"end\" Field Value Type Description String AttrExponent Declaration public const string AttrExponent = \"exponent\" Field Value Type Description String AttrExternalResourcesRequired Declaration public const string AttrExternalResourcesRequired = \"externalResourcesRequired\" Field Value Type Description String AttrFill Declaration public const string AttrFill = \"fill\" Field Value Type Description String AttrFillOpacity Declaration public const string AttrFillOpacity = \"fill-opacity\" Field Value Type Description String AttrFillRule Declaration public const string AttrFillRule = \"fill-rule\" Field Value Type Description String AttrFilter Declaration public const string AttrFilter = \"filter\" Field Value Type Description String AttrFilterRes Declaration public const string AttrFilterRes = \"filterRes\" Field Value Type Description String AttrFilterUnits Declaration public const string AttrFilterUnits = \"filterUnits\" Field Value Type Description String AttrFloodColor Declaration public const string AttrFloodColor = \"flood-color\" Field Value Type Description String AttrFloodOpacity Declaration public const string AttrFloodOpacity = \"flood-opacity\" Field Value Type Description String AttrFontFamily Declaration public const string AttrFontFamily = \"font-family\" Field Value Type Description String AttrFontSize Declaration public const string AttrFontSize = \"font-size\" Field Value Type Description String AttrFontStretch Declaration public const string AttrFontStretch = \"font-stretch\" Field Value Type Description String AttrFontStyle Declaration public const string AttrFontStyle = \"font-style\" Field Value Type Description String AttrFontVariant Declaration public const string AttrFontVariant = \"font-variant\" Field Value Type Description String AttrFontWeight Declaration public const string AttrFontWeight = \"font-weight\" Field Value Type Description String AttrFormat Declaration public const string AttrFormat = \"format\" Field Value Type Description String AttrFrom Declaration public const string AttrFrom = \"from\" Field Value Type Description String AttrFx Declaration public const string AttrFx = \"fx\" Field Value Type Description String AttrFy Declaration public const string AttrFy = \"fy\" Field Value Type Description String AttrG1 Declaration public const string AttrG1 = \"g1\" Field Value Type Description String AttrG2 Declaration public const string AttrG2 = \"g2\" Field Value Type Description String AttrGlyphName Declaration public const string AttrGlyphName = \"glyph-name\" Field Value Type Description String AttrGlyphRef Declaration public const string AttrGlyphRef = \"glyphRef\" Field Value Type Description String AttrGradientTransform Declaration public const string AttrGradientTransform = \"gradientTransform\" Field Value Type Description String AttrGradientUnits Declaration public const string AttrGradientUnits = \"gradientUnits\" Field Value Type Description String AttrHanging Declaration public const string AttrHanging = \"hanging\" Field Value Type Description String AttrHeight Declaration public const string AttrHeight = \"height\" Field Value Type Description String AttrHorizAdvX Declaration public const string AttrHorizAdvX = \"horiz-adv-x\" Field Value Type Description String AttrHorizOriginX Declaration public const string AttrHorizOriginX = \"horiz-origin-x\" Field Value Type Description String AttrHorizOriginY Declaration public const string AttrHorizOriginY = \"horiz-origin-y\" Field Value Type Description String AttrId Declaration public const string AttrId = \"id\" Field Value Type Description String AttrIdeographic Declaration public const string AttrIdeographic = \"ideographic\" Field Value Type Description String AttrImageRendering Declaration public const string AttrImageRendering = \"image-rendering\" Field Value Type Description String AttrIn Declaration public const string AttrIn = \"in\" Field Value Type Description String AttrIn2 Declaration public const string AttrIn2 = \"in2\" Field Value Type Description String AttrIntercept Declaration public const string AttrIntercept = \"intercept\" Field Value Type Description String AttrK Declaration public const string AttrK = \"k\" Field Value Type Description String AttrK1 Declaration public const string AttrK1 = \"k1\" Field Value Type Description String AttrK2 Declaration public const string AttrK2 = \"k2\" Field Value Type Description String AttrK3 Declaration public const string AttrK3 = \"k3\" Field Value Type Description String AttrK4 Declaration public const string AttrK4 = \"k4\" Field Value Type Description String AttrKernelMatrix Declaration public const string AttrKernelMatrix = \"kernelMatrix\" Field Value Type Description String AttrKernelUnitLength Declaration public const string AttrKernelUnitLength = \"kernelUnitLength\" Field Value Type Description String AttrKerning Declaration public const string AttrKerning = \"kerning\" Field Value Type Description String AttrKeyPoints Declaration public const string AttrKeyPoints = \"keyPoints\" Field Value Type Description String AttrKeySplines Declaration public const string AttrKeySplines = \"keySplines\" Field Value Type Description String AttrKeyTimes Declaration public const string AttrKeyTimes = \"keyTimes\" Field Value Type Description String AttrLang Declaration public const string AttrLang = \"lang\" Field Value Type Description String AttrLengthAdjust Declaration public const string AttrLengthAdjust = \"lengthAdjust\" Field Value Type Description String AttrLightingColor Declaration public const string AttrLightingColor = \"lighting-color\" Field Value Type Description String AttrLimitingConeAngle Declaration public const string AttrLimitingConeAngle = \"limitingConeAngle\" Field Value Type Description String AttrLocal Declaration public const string AttrLocal = \"local\" Field Value Type Description String AttrMarkerHeight Declaration public const string AttrMarkerHeight = \"markerHeight\" Field Value Type Description String AttrMarkerUnits Declaration public const string AttrMarkerUnits = \"markerUnits\" Field Value Type Description String AttrMarkerWidth Declaration public const string AttrMarkerWidth = \"markerWidth\" Field Value Type Description String AttrMask Declaration public const string AttrMask = \"mask\" Field Value Type Description String AttrMaskContentUnits Declaration public const string AttrMaskContentUnits = \"maskContentUnits\" Field Value Type Description String AttrMaskUnits Declaration public const string AttrMaskUnits = \"maskUnits\" Field Value Type Description String AttrMathematical Declaration public const string AttrMathematical = \"mathematical\" Field Value Type Description String AttrMax Declaration public const string AttrMax = \"max\" Field Value Type Description String AttrMedia Declaration public const string AttrMedia = \"media\" Field Value Type Description String AttrMethod Declaration public const string AttrMethod = \"method\" Field Value Type Description String AttrMin Declaration public const string AttrMin = \"min\" Field Value Type Description String AttrMode Declaration public const string AttrMode = \"mode\" Field Value Type Description String AttrName Declaration public const string AttrName = \"name\" Field Value Type Description String AttrNumOctaves Declaration public const string AttrNumOctaves = \"numOctaves\" Field Value Type Description String AttrOffset Declaration public const string AttrOffset = \"offset\" Field Value Type Description String AttrOpacity Declaration public const string AttrOpacity = \"opacity\" Field Value Type Description String AttrOperator Declaration public const string AttrOperator = \"operator\" Field Value Type Description String AttrOrder Declaration public const string AttrOrder = \"order\" Field Value Type Description String AttrOrient Declaration public const string AttrOrient = \"orient\" Field Value Type Description String AttrOrientation Declaration public const string AttrOrientation = \"orientation\" Field Value Type Description String AttrOrigin Declaration public const string AttrOrigin = \"origin\" Field Value Type Description String AttrOverlinePosition Declaration public const string AttrOverlinePosition = \"overline-position\" Field Value Type Description String AttrOverlineThickness Declaration public const string AttrOverlineThickness = \"overline-thickness\" Field Value Type Description String AttrPanose_1 Declaration public const string AttrPanose_1 = \"panose-1\" Field Value Type Description String AttrPath Declaration public const string AttrPath = \"path\" Field Value Type Description String AttrPathLength Declaration public const string AttrPathLength = \"pathLength\" Field Value Type Description String AttrPatternContentUnits Declaration public const string AttrPatternContentUnits = \"patternContentUnits\" Field Value Type Description String AttrPatternTransform Declaration public const string AttrPatternTransform = \"patternTransform\" Field Value Type Description String AttrPatternUnits Declaration public const string AttrPatternUnits = \"patternUnits\" Field Value Type Description String AttrPoints Declaration public const string AttrPoints = \"points\" Field Value Type Description String AttrPointsAtX Declaration public const string AttrPointsAtX = \"pointsAtX\" Field Value Type Description String AttrPointsAtY Declaration public const string AttrPointsAtY = \"pointsAtY\" Field Value Type Description String AttrPointsAtZ Declaration public const string AttrPointsAtZ = \"pointsAtZ\" Field Value Type Description String AttrPreserveAlpha Declaration public const string AttrPreserveAlpha = \"preserveAlpha\" Field Value Type Description String AttrPreserveAspectRatio Declaration public const string AttrPreserveAspectRatio = \"preserveAspectRatio\" Field Value Type Description String AttrPrimitiveUnits Declaration public const string AttrPrimitiveUnits = \"primitiveUnits\" Field Value Type Description String AttrR Declaration public const string AttrR = \"r\" Field Value Type Description String AttrRadius Declaration public const string AttrRadius = \"radius\" Field Value Type Description String AttrRefX Declaration public const string AttrRefX = \"refX\" Field Value Type Description String AttrRefY Declaration public const string AttrRefY = \"refY\" Field Value Type Description String AttrRenderingIntent Declaration public const string AttrRenderingIntent = \"rendering-intent\" Field Value Type Description String AttrRepeatCount Declaration public const string AttrRepeatCount = \"repeatCount\" Field Value Type Description String AttrRepeatDur Declaration public const string AttrRepeatDur = \"repeatDur\" Field Value Type Description String AttrRequiredExtensions Declaration public const string AttrRequiredExtensions = \"requiredExtensions\" Field Value Type Description String AttrRequiredFeatures Declaration public const string AttrRequiredFeatures = \"requiredFeatures\" Field Value Type Description String AttrRestart Declaration public const string AttrRestart = \"restart\" Field Value Type Description String AttrResult Declaration public const string AttrResult = \"result\" Field Value Type Description String AttrRotate Declaration public const string AttrRotate = \"rotate\" Field Value Type Description String AttrRx Declaration public const string AttrRx = \"rx\" Field Value Type Description String AttrRy Declaration public const string AttrRy = \"ry\" Field Value Type Description String AttrScale Declaration public const string AttrScale = \"scale\" Field Value Type Description String AttrSeed Declaration public const string AttrSeed = \"seed\" Field Value Type Description String AttrShapeRendering Declaration public const string AttrShapeRendering = \"shape-rendering\" Field Value Type Description String AttrSlope Declaration public const string AttrSlope = \"slope\" Field Value Type Description String AttrSnapshotTime Declaration public const string AttrSnapshotTime = \"snapshotTime\" Field Value Type Description String AttrSpace Declaration public const string AttrSpace = \"space\" Field Value Type Description String AttrSpacing Declaration public const string AttrSpacing = \"spacing\" Field Value Type Description String AttrSpecularConstant Declaration public const string AttrSpecularConstant = \"specularConstant\" Field Value Type Description String AttrSpecularExponent Declaration public const string AttrSpecularExponent = \"specularExponent\" Field Value Type Description String AttrSpreadMethod Declaration public const string AttrSpreadMethod = \"spreadMethod\" Field Value Type Description String AttrStartOffset Declaration public const string AttrStartOffset = \"startOffset\" Field Value Type Description String AttrStdDeviation Declaration public const string AttrStdDeviation = \"stdDeviation\" Field Value Type Description String AttrStemh Declaration public const string AttrStemh = \"stemh\" Field Value Type Description String AttrStemv Declaration public const string AttrStemv = \"stemv\" Field Value Type Description String AttrStitchTiles Declaration public const string AttrStitchTiles = \"stitchTiles\" Field Value Type Description String AttrStopColor Declaration public const string AttrStopColor = \"stop-color\" Field Value Type Description String AttrStopOpacity Declaration public const string AttrStopOpacity = \"stop-opacity\" Field Value Type Description String AttrStrikethroughPosition Declaration public const string AttrStrikethroughPosition = \"strikethrough-position\" Field Value Type Description String AttrStrikethroughThickness Declaration public const string AttrStrikethroughThickness = \"strikethrough-thickness\" Field Value Type Description String AttrString Declaration public const string AttrString = \"string\" Field Value Type Description String AttrStroke Declaration public const string AttrStroke = \"stroke\" Field Value Type Description String AttrStrokeDasharray Declaration public const string AttrStrokeDasharray = \"stroke-dasharray\" Field Value Type Description String AttrStrokeDashoffset Declaration public const string AttrStrokeDashoffset = \"stroke-dashoffset\" Field Value Type Description String AttrStrokeLinecap Declaration public const string AttrStrokeLinecap = \"stroke-linecap\" Field Value Type Description String AttrStrokeLinejoin Declaration public const string AttrStrokeLinejoin = \"stroke-linejoin\" Field Value Type Description String AttrStrokeMiterlimit Declaration public const string AttrStrokeMiterlimit = \"stroke-miterlimit\" Field Value Type Description String AttrStrokeOpacity Declaration public const string AttrStrokeOpacity = \"stroke-opacity\" Field Value Type Description String AttrStrokeWidth Declaration public const string AttrStrokeWidth = \"stroke-width\" Field Value Type Description String AttrStyle Declaration public const string AttrStyle = \"style\" Field Value Type Description String AttrSurfaceScale Declaration public const string AttrSurfaceScale = \"surfaceScale\" Field Value Type Description String AttrSystemLanguage Declaration public const string AttrSystemLanguage = \"systemLanguage\" Field Value Type Description String AttrTableValues Declaration public const string AttrTableValues = \"tableValues\" Field Value Type Description String AttrTarget Declaration public const string AttrTarget = \"target\" Field Value Type Description String AttrTargetX Declaration public const string AttrTargetX = \"targetX\" Field Value Type Description String AttrTargetY Declaration public const string AttrTargetY = \"targetY\" Field Value Type Description String AttrTextAnchor Declaration public const string AttrTextAnchor = \"text-anchor\" Field Value Type Description String AttrTextLength Declaration public const string AttrTextLength = \"textLength\" Field Value Type Description String AttrTextRendering Declaration public const string AttrTextRendering = \"text-rendering\" Field Value Type Description String AttrTitle Declaration public const string AttrTitle = \"title\" Field Value Type Description String AttrTo Declaration public const string AttrTo = \"to\" Field Value Type Description String AttrTransform Declaration public const string AttrTransform = \"transform\" Field Value Type Description String AttrType Declaration public const string AttrType = \"type\" Field Value Type Description String AttrU1 Declaration public const string AttrU1 = \"u1\" Field Value Type Description String AttrU2 Declaration public const string AttrU2 = \"u2\" Field Value Type Description String AttrUnderlinePosition Declaration public const string AttrUnderlinePosition = \"underline-position\" Field Value Type Description String AttrUnderlineThickness Declaration public const string AttrUnderlineThickness = \"underline-thickness\" Field Value Type Description String AttrUnicode Declaration public const string AttrUnicode = \"unicode\" Field Value Type Description String AttrUnicodeRange Declaration public const string AttrUnicodeRange = \"unicode-range\" Field Value Type Description String AttrUnitsPerEm Declaration public const string AttrUnitsPerEm = \"units-per-em\" Field Value Type Description String AttrVAlphabetic Declaration public const string AttrVAlphabetic = \"v-alphabetic\" Field Value Type Description String AttrValues Declaration public const string AttrValues = \"values\" Field Value Type Description String AttrVersion Declaration public const string AttrVersion = \"version\" Field Value Type Description String AttrVertAdvY Declaration public const string AttrVertAdvY = \"vert-adv-y\" Field Value Type Description String AttrVertOriginX Declaration public const string AttrVertOriginX = \"vert-origin-x\" Field Value Type Description String AttrVertOriginY Declaration public const string AttrVertOriginY = \"vert-origin-y\" Field Value Type Description String AttrVHanging Declaration public const string AttrVHanging = \"v-hanging\" Field Value Type Description String AttrVIdeographic Declaration public const string AttrVIdeographic = \"v-ideographic\" Field Value Type Description String AttrViewBox Declaration public const string AttrViewBox = \"viewBox\" Field Value Type Description String AttrViewTarget Declaration public const string AttrViewTarget = \"viewTarget\" Field Value Type Description String AttrVMathematical Declaration public const string AttrVMathematical = \"v-mathematical\" Field Value Type Description String AttrWidth Declaration public const string AttrWidth = \"width\" Field Value Type Description String AttrWidths Declaration public const string AttrWidths = \"widths\" Field Value Type Description String AttrX Declaration public const string AttrX = \"x\" Field Value Type Description String AttrX1 Declaration public const string AttrX1 = \"x1\" Field Value Type Description String AttrX2 Declaration public const string AttrX2 = \"x2\" Field Value Type Description String AttrXChannelSelector Declaration public const string AttrXChannelSelector = \"xChannelSelector\" Field Value Type Description String AttrXHeight Declaration public const string AttrXHeight = \"xHeight\" Field Value Type Description String AttrY Declaration public const string AttrY = \"y\" Field Value Type Description String AttrY1 Declaration public const string AttrY1 = \"y1\" Field Value Type Description String AttrY2 Declaration public const string AttrY2 = \"y2\" Field Value Type Description String AttrYChannelSelector Declaration public const string AttrYChannelSelector = \"yChannelSelector\" Field Value Type Description String AttrZ Declaration public const string AttrZ = \"z\" Field Value Type Description String AttrZoomAndPan Declaration public const string AttrZoomAndPan = \"zoomAndPan\" Field Value Type Description String ClickEventType The event type for 'click' MouseEvent. Declaration public const string ClickEventType = \"click\" Field Value Type Description String DefCircleCx Declaration public const string DefCircleCx = \"0\" Field Value Type Description String DefCircleCy Declaration public const string DefCircleCy = \"0\" Field Value Type Description String DefClipPathClipPathUnits Declaration public const string DefClipPathClipPathUnits = \"userSpaceOnUse\" Field Value Type Description String DefComponentTransferFunctionAmplitude Declaration public const string DefComponentTransferFunctionAmplitude = \"1\" Field Value Type Description String DefComponentTransferFunctionExponent Declaration public const string DefComponentTransferFunctionExponent = \"1\" Field Value Type Description String DefComponentTransferFunctionIntercept Declaration public const string DefComponentTransferFunctionIntercept = \"0\" Field Value Type Description String DefComponentTransferFunctionOffset Declaration public const string DefComponentTransferFunctionOffset = \"0\" Field Value Type Description String DefComponentTransferFunctionSlope Declaration public const string DefComponentTransferFunctionSlope = \"1\" Field Value Type Description String DefComponentTransferFunctionTableValues Declaration public const string DefComponentTransferFunctionTableValues = \"\" Field Value Type Description String DefCursorX Declaration public const string DefCursorX = \"0\" Field Value Type Description String DefCursorY Declaration public const string DefCursorY = \"0\" Field Value Type Description String DefEllipseCx Declaration public const string DefEllipseCx = \"0\" Field Value Type Description String DefEllipseCy Declaration public const string DefEllipseCy = \"0\" Field Value Type Description String DefFeCompositeK1 Declaration public const string DefFeCompositeK1 = \"0\" Field Value Type Description String DefFeCompositeK2 Declaration public const string DefFeCompositeK2 = \"0\" Field Value Type Description String DefFeCompositeK3 Declaration public const string DefFeCompositeK3 = \"0\" Field Value Type Description String DefFeCompositeK4 Declaration public const string DefFeCompositeK4 = \"0\" Field Value Type Description String DefFeCompositeOperator Declaration public const string DefFeCompositeOperator = \"over\" Field Value Type Description String DefFeConvolveMatrixEdgeMode Declaration public const string DefFeConvolveMatrixEdgeMode = \"duplicate\" Field Value Type Description String DefFeDiffuseLightingDiffuseConstant Declaration public const string DefFeDiffuseLightingDiffuseConstant = \"1\" Field Value Type Description String DefFeDiffuseLightingSurfaceScale Declaration public const string DefFeDiffuseLightingSurfaceScale = \"1\" Field Value Type Description String DefFeDisplacementMapScale Declaration public const string DefFeDisplacementMapScale = \"0\" Field Value Type Description String DefFeDistantLightAzimuth Declaration public const string DefFeDistantLightAzimuth = \"0\" Field Value Type Description String DefFeDistantLightElevation Declaration public const string DefFeDistantLightElevation = \"0\" Field Value Type Description String DefFePointLightX Declaration public const string DefFePointLightX = \"0\" Field Value Type Description String DefFePointLightY Declaration public const string DefFePointLightY = \"0\" Field Value Type Description String DefFePointLightZ Declaration public const string DefFePointLightZ = \"0\" Field Value Type Description String DefFeSpecularLightingSpecularConstant Declaration public const string DefFeSpecularLightingSpecularConstant = \"1\" Field Value Type Description String DefFeSpecularLightingSpecularExponent Declaration public const string DefFeSpecularLightingSpecularExponent = \"1\" Field Value Type Description String DefFeSpecularLightingSurfaceScale Declaration public const string DefFeSpecularLightingSurfaceScale = \"1\" Field Value Type Description String DefFeSpotLightLimitingConeAngle Declaration public const string DefFeSpotLightLimitingConeAngle = \"90\" Field Value Type Description String DefFeSpotLightPointsAtX Declaration public const string DefFeSpotLightPointsAtX = \"0\" Field Value Type Description String DefFeSpotLightPointsAtY Declaration public const string DefFeSpotLightPointsAtY = \"0\" Field Value Type Description String DefFeSpotLightPointsAtZ Declaration public const string DefFeSpotLightPointsAtZ = \"0\" Field Value Type Description String DefFeSpotLightSpecularExponent Declaration public const string DefFeSpotLightSpecularExponent = \"1\" Field Value Type Description String DefFeSpotLightX Declaration public const string DefFeSpotLightX = \"0\" Field Value Type Description String DefFeSpotLightY Declaration public const string DefFeSpotLightY = \"0\" Field Value Type Description String DefFeSpotLightZ Declaration public const string DefFeSpotLightZ = \"0\" Field Value Type Description String DefFeTurbulenceNumOctaves Declaration public const string DefFeTurbulenceNumOctaves = \"1\" Field Value Type Description String DefFeTurbulenceSeed Declaration public const string DefFeTurbulenceSeed = \"0\" Field Value Type Description String DefFilterFilterUnits Declaration public const string DefFilterFilterUnits = \"userSpaceOnUse\" Field Value Type Description String DefFilterHeight Declaration public const string DefFilterHeight = \"120%\" Field Value Type Description String DefFilterPrimitiveHeight Declaration public const string DefFilterPrimitiveHeight = \"100%\" Field Value Type Description String DefFilterPrimitiveUnits Declaration public const string DefFilterPrimitiveUnits = \"userSpaceOnUse\" Field Value Type Description String DefFilterPrimitiveWidth Declaration public const string DefFilterPrimitiveWidth = \"100%\" Field Value Type Description String DefFilterPrimitiveX Declaration public const string DefFilterPrimitiveX = \"0%\" Field Value Type Description String DefFilterPrimitiveY Declaration public const string DefFilterPrimitiveY = \"0%\" Field Value Type Description String DefFilterWidth Declaration public const string DefFilterWidth = \"120%\" Field Value Type Description String DefFilterX Declaration public const string DefFilterX = \"-10%\" Field Value Type Description String DefFilterY Declaration public const string DefFilterY = \"-10%\" Field Value Type Description String DefFontFaceFontStretch Declaration public const string DefFontFaceFontStretch = \"normal\" Field Value Type Description String DefFontFaceFontStyle Declaration public const string DefFontFaceFontStyle = \"all\" Field Value Type Description String DefFontFaceFontVariant Declaration public const string DefFontFaceFontVariant = \"normal\" Field Value Type Description String DefFontFaceFontWeight Declaration public const string DefFontFaceFontWeight = \"all\" Field Value Type Description String DefFontFacePanose_1 Declaration public const string DefFontFacePanose_1 = \"0 0 0 0 0 0 0 0 0 0\" Field Value Type Description String DefFontFaceSlope Declaration public const string DefFontFaceSlope = \"0\" Field Value Type Description String DefFontFaceUnitsPerEm Declaration public const string DefFontFaceUnitsPerEm = \"1000\" Field Value Type Description String DefForeignObjectX Declaration public const string DefForeignObjectX = \"0\" Field Value Type Description String DefForeignObjectY Declaration public const string DefForeignObjectY = \"0\" Field Value Type Description String DefHorizOriginX Declaration public const string DefHorizOriginX = \"0\" Field Value Type Description String DefHorizOriginY Declaration public const string DefHorizOriginY = \"0\" Field Value Type Description String DefImageX Declaration public const string DefImageX = \"0\" Field Value Type Description String DefImageY Declaration public const string DefImageY = \"0\" Field Value Type Description String DefKernK Declaration public const string DefKernK = \"0\" Field Value Type Description String DefLinearGradientX1 Declaration public const string DefLinearGradientX1 = \"0%\" Field Value Type Description String DefLinearGradientX2 Declaration public const string DefLinearGradientX2 = \"100%\" Field Value Type Description String DefLinearGradientY1 Declaration public const string DefLinearGradientY1 = \"0%\" Field Value Type Description String DefLinearGradientY2 Declaration public const string DefLinearGradientY2 = \"0%\" Field Value Type Description String DefLineX1 Declaration public const string DefLineX1 = \"0\" Field Value Type Description String DefLineX2 Declaration public const string DefLineX2 = \"0\" Field Value Type Description String DefLineY1 Declaration public const string DefLineY1 = \"0\" Field Value Type Description String DefLineY2 Declaration public const string DefLineY2 = \"0\" Field Value Type Description String DefMarkerMarkerHeight Declaration public const string DefMarkerMarkerHeight = \"3\" Field Value Type Description String DefMarkerMarkerUnits Declaration public const string DefMarkerMarkerUnits = \"strokeWidth\" Field Value Type Description String DefMarkerMarkerWidth Declaration public const string DefMarkerMarkerWidth = \"3\" Field Value Type Description String DefMarkerOrient Declaration public const string DefMarkerOrient = \"0\" Field Value Type Description String DefMarkerRefX Declaration public const string DefMarkerRefX = \"0\" Field Value Type Description String DefMarkerRefY Declaration public const string DefMarkerRefY = \"0\" Field Value Type Description String DefMaskHeight Declaration public const string DefMaskHeight = \"120%\" Field Value Type Description String DefMaskMaskUnits Declaration public const string DefMaskMaskUnits = \"userSpaceOnUse\" Field Value Type Description String DefMaskWidth Declaration public const string DefMaskWidth = \"120%\" Field Value Type Description String DefMaskX Declaration public const string DefMaskX = \"-10%\" Field Value Type Description String DefMaskY Declaration public const string DefMaskY = \"-10%\" Field Value Type Description String DefPatternHeight Declaration public const string DefPatternHeight = \"0\" Field Value Type Description String DefPatternWidth Declaration public const string DefPatternWidth = \"0\" Field Value Type Description String DefPatternX Declaration public const string DefPatternX = \"0\" Field Value Type Description String DefPatternY Declaration public const string DefPatternY = \"0\" Field Value Type Description String DefRadialGradientCx Declaration public const string DefRadialGradientCx = \"50%\" Field Value Type Description String DefRadialGradientCy Declaration public const string DefRadialGradientCy = \"50%\" Field Value Type Description String DefRadialGradientR Declaration public const string DefRadialGradientR = \"50%\" Field Value Type Description String DefRectX Declaration public const string DefRectX = \"0\" Field Value Type Description String DefRectY Declaration public const string DefRectY = \"0\" Field Value Type Description String DefScriptType Declaration public const string DefScriptType = \"text/ecmascript\" Field Value Type Description String DefScriptTypeApplicationEcmascript Declaration public const string DefScriptTypeApplicationEcmascript = \"application/ecmascript\" Field Value Type Description String DefScriptTypeApplicationJavascript Declaration public const string DefScriptTypeApplicationJavascript = \"application/javascript\" Field Value Type Description String DefScriptTypeEcmascript Declaration public const string DefScriptTypeEcmascript = \"text/ecmascript\" Field Value Type Description String DefScriptTypeJava Declaration public const string DefScriptTypeJava = \"application/java-archive\" Field Value Type Description String DefScriptTypeJavascript Declaration public const string DefScriptTypeJavascript = \"text/javascript\" Field Value Type Description String DefSvgHeight Declaration public const string DefSvgHeight = \"100%\" Field Value Type Description String DefSvgWidth Declaration public const string DefSvgWidth = \"100%\" Field Value Type Description String DefSvgX Declaration public const string DefSvgX = \"0\" Field Value Type Description String DefSvgY Declaration public const string DefSvgY = \"0\" Field Value Type Description String DefTextPathStartOffset Declaration public const string DefTextPathStartOffset = \"0\" Field Value Type Description String DefUseHeight Declaration public const string DefUseHeight = \"100%\" Field Value Type Description String DefUseWidth Declaration public const string DefUseWidth = \"100%\" Field Value Type Description String DefUseX Declaration public const string DefUseX = \"0\" Field Value Type Description String DefUseY Declaration public const string DefUseY = \"0\" Field Value Type Description String DomactivateEventType The event type for 'DOMActivate' UIEvent. Declaration public const string DomactivateEventType = \"DOMActivate\" Field Value Type Description String DomfocusinEventType The event type for 'DOMFocusIn' UIEvent. Declaration public const string DomfocusinEventType = \"DOMFocusIn\" Field Value Type Description String DomfocusoutEventType The event type for 'DOMFocusOut' UIEvent. Declaration public const string DomfocusoutEventType = \"DOMFocusOut\" Field Value Type Description String EventClick Declaration public const string EventClick = \"click\" Field Value Type Description String EventKeydown Declaration public const string EventKeydown = \"keydown\" Field Value Type Description String EventKeypress Declaration public const string EventKeypress = \"keypress\" Field Value Type Description String EventKeyup Declaration public const string EventKeyup = \"keyup\" Field Value Type Description String EventMousedown Declaration public const string EventMousedown = \"mousedown\" Field Value Type Description String EventMousemove Declaration public const string EventMousemove = \"mousemove\" Field Value Type Description String EventMouseout Declaration public const string EventMouseout = \"mouseout\" Field Value Type Description String EventMouseover Declaration public const string EventMouseover = \"mouseover\" Field Value Type Description String EventMouseup Declaration public const string EventMouseup = \"mouseup\" Field Value Type Description String FeatureAnimation Declaration public const string FeatureAnimation = \"http://www.w3.org/TR/SVG11/feature#Animation\" Field Value Type Description String FeatureAnimationEventsAttribute Declaration public const string FeatureAnimationEventsAttribute = \"http://www.w3.org/TR/SVG11/feature#AnimationEventsAttribute\" Field Value Type Description String FeatureBasicClip Declaration public const string FeatureBasicClip = \"http://www.w3.org/TR/SVG11/feature#BasicClip\" Field Value Type Description String FeatureBasicFilter Declaration public const string FeatureBasicFilter = \"http://www.w3.org/TR/SVG11/feature#BasicFilter\" Field Value Type Description String FeatureBasicFont Declaration public const string FeatureBasicFont = \"http://www.w3.org/TR/SVG11/feature#BasicFont\" Field Value Type Description String FeatureBasicGraphicsAttribute Declaration public const string FeatureBasicGraphicsAttribute = \"http://www.w3.org/TR/SVG11/feature#BasicGraphicsAttribute\" Field Value Type Description String FeatureBasicPaintAttribute Declaration public const string FeatureBasicPaintAttribute = \"http://www.w3.org/TR/SVG11/feature#BasicPaintAttribute\" Field Value Type Description String FeatureBasicStructure Declaration public const string FeatureBasicStructure = \"http://www.w3.org/TR/SVG11/feature#BasicStructure\" Field Value Type Description String FeatureBasicText Declaration public const string FeatureBasicText = \"http://www.w3.org/TR/SVG11/feature#BasicText\" Field Value Type Description String FeatureClip Declaration public const string FeatureClip = \"http://www.w3.org/TR/SVG11/feature#Clip\" Field Value Type Description String FeatureColorProfile Declaration public const string FeatureColorProfile = \"http://www.w3.org/TR/SVG11/feature#ColorProfile\" Field Value Type Description String FeatureConditionalProcessing Declaration public const string FeatureConditionalProcessing = \"http://www.w3.org/TR/SVG11/feature#ConditionalProcessing\" Field Value Type Description String FeatureContainerAttribute Declaration public const string FeatureContainerAttribute = \"http://www.w3.org/TR/SVG11/feature#ContainerAttribute\" Field Value Type Description String FeatureCoreAttribute Declaration public const string FeatureCoreAttribute = \"http://www.w3.org/TR/SVG11/feature#CoreAttribute\" Field Value Type Description String FeatureCursor Declaration public const string FeatureCursor = \"http://www.w3.org/TR/SVG11/feature#Cursor\" Field Value Type Description String FeatureDocumentEventsAttribute Declaration public const string FeatureDocumentEventsAttribute = \"http://www.w3.org/TR/SVG11/feature#DocumentEventsAttribute\" Field Value Type Description String FeatureExtensibility Declaration public const string FeatureExtensibility = \"http://www.w3.org/TR/SVG11/feature#Extensibility\" Field Value Type Description String FeatureExternalResourcesRequired Declaration public const string FeatureExternalResourcesRequired = \"http://www.w3.org/TR/SVG11/feature#ExternalResourcesRequired\" Field Value Type Description String FeatureFilter Declaration public const string FeatureFilter = \"http://www.w3.org/TR/SVG11/feature#Filter\" Field Value Type Description String FeatureFont Declaration public const string FeatureFont = \"http://www.w3.org/TR/SVG11/feature#Font\" Field Value Type Description String FeatureGradient Declaration public const string FeatureGradient = \"http://www.w3.org/TR/SVG11/feature#Gradient\" Field Value Type Description String FeatureGraphicalEventsAttribute Declaration public const string FeatureGraphicalEventsAttribute = \"http://www.w3.org/TR/SVG11/feature#GraphicalEventsAttribute\" Field Value Type Description String FeatureGraphicsAttribute Declaration public const string FeatureGraphicsAttribute = \"http://www.w3.org/TR/SVG11/feature#GraphicsAttribute\" Field Value Type Description String FeatureHyperlinking Declaration public const string FeatureHyperlinking = \"http://www.w3.org/TR/SVG11/feature#Hyperlinking\" Field Value Type Description String FeatureImage Declaration public const string FeatureImage = \"http://www.w3.org/TR/SVG11/feature#Image\" Field Value Type Description String FeatureMarker Declaration public const string FeatureMarker = \"http://www.w3.org/TR/SVG11/feature#Marker\" Field Value Type Description String FeatureMask Declaration public const string FeatureMask = \"http://www.w3.org/TR/SVG11/feature#Mask\" Field Value Type Description String FeatureOpacityAttribute Declaration public const string FeatureOpacityAttribute = \"http://www.w3.org/TR/SVG11/feature#OpacityAttribute\" Field Value Type Description String FeatureOrgW3cDomSvg Declaration public const string FeatureOrgW3cDomSvg = \"org.w3c.dom.svg\" Field Value Type Description String FeatureOrgW3cDomSvgAll Declaration public const string FeatureOrgW3cDomSvgAll = \"org.w3c.dom.svg.all\" Field Value Type Description String FeatureOrgW3cDomSvgAnimation Declaration public const string FeatureOrgW3cDomSvgAnimation = \"org.w3c.dom.svg.animation\" Field Value Type Description String FeatureOrgW3cDomSvgDynamic Declaration public const string FeatureOrgW3cDomSvgDynamic = \"org.w3c.dom.svg.dynamic\" Field Value Type Description String FeatureOrgW3cDomSvgStatic Declaration public const string FeatureOrgW3cDomSvgStatic = \"org.w3c.dom.svg.static\" Field Value Type Description String FeatureOrgW3cSvg Declaration public const string FeatureOrgW3cSvg = \"org.w3c.svg\" Field Value Type Description String FeatureOrgW3cSvgAll Declaration public const string FeatureOrgW3cSvgAll = \"org.w3c.svg.all\" Field Value Type Description String FeatureOrgW3cSvgAnimation Declaration public const string FeatureOrgW3cSvgAnimation = \"org.w3c.svg.animation\" Field Value Type Description String FeatureOrgW3cSvgDynamic Declaration public const string FeatureOrgW3cSvgDynamic = \"org.w3c.svg.dynamic\" Field Value Type Description String FeatureOrgW3cSvgStatic Declaration public const string FeatureOrgW3cSvgStatic = \"org.w3c.svg.static\" Field Value Type Description String FeaturePaintAttribute Declaration public const string FeaturePaintAttribute = \"http://www.w3.org/TR/SVG11/feature#PaintAttribute\" Field Value Type Description String FeaturePattern Declaration public const string FeaturePattern = \"http://www.w3.org/TR/SVG11/feature#Pattern\" Field Value Type Description String FeatureScript Declaration public const string FeatureScript = \"http://www.w3.org/TR/SVG11/feature#Script\" Field Value Type Description String FeatureShape Declaration public const string FeatureShape = \"http://www.w3.org/TR/SVG11/feature#Shape\" Field Value Type Description String FeatureStructure Declaration public const string FeatureStructure = \"http://www.w3.org/TR/SVG11/feature#Structure\" Field Value Type Description String FeatureStyle Declaration public const string FeatureStyle = \"http://www.w3.org/TR/SVG11/feature#Style\" Field Value Type Description String FeatureSvg Declaration public const string FeatureSvg = \"http://www.w3.org/TR/SVG11/feature#SVG\" Field Value Type Description String FeatureSvgAnimation Declaration public const string FeatureSvgAnimation = \"http://www.w3.org/TR/SVG11/feature#SVG-animation\" Field Value Type Description String FeatureSvgDom Declaration public const string FeatureSvgDom = \"http://www.w3.org/TR/SVG11/feature#SVGDOM\" Field Value Type Description String FeatureSvgDomAnimation Declaration public const string FeatureSvgDomAnimation = \"http://www.w3.org/TR/SVG11/feature#SVGDOM-animation\" Field Value Type Description String FeatureSvgDomDynamic Declaration public const string FeatureSvgDomDynamic = \"http://www.w3.org/TR/SVG11/feature#SVGDOM-dynamic\" Field Value Type Description String FeatureSvgDomStatic Declaration public const string FeatureSvgDomStatic = \"http://www.w3.org/TR/SVG11/feature#SVGDOM-static\" Field Value Type Description String FeatureSvgDynamic Declaration public const string FeatureSvgDynamic = \"http://www.w3.org/TR/SVG11/feature#SVG-dynamic\" Field Value Type Description String FeatureSvgStatic Declaration public const string FeatureSvgStatic = \"http://www.w3.org/TR/SVG11/feature#SVG-static\" Field Value Type Description String FeatureText Declaration public const string FeatureText = \"http://www.w3.org/TR/SVG11/feature#Text\" Field Value Type Description String FeatureView Declaration public const string FeatureView = \"http://www.w3.org/TR/SVG11/feature#View\" Field Value Type Description String FeatureViewportAttribute Declaration public const string FeatureViewportAttribute = \"http://www.w3.org/TR/SVG11/feature#ViewportAttribute\" Field Value Type Description String FeatureXlink Declaration public const string FeatureXlink = \"http://www.w3.org/TR/SVG11/feature#Xlink\" Field Value Type Description String FileExt Declaration public const string FileExt = \".svg\" Field Value Type Description String FileExtZ Declaration public const string FileExtZ = \".svgz\" Field Value Type Description String GZipMagic Declaration public const int GZipMagic = 35615 Field Value Type Description Int32 GZipSignature Declaration public const string GZipSignature = \"H4sI\" Field Value Type Description String KeydownEventType The event type for 'keydown' KeyEvent. Declaration public const string KeydownEventType = \"keydown\" Field Value Type Description String KeyEventsType The event type for KeyEvent. Declaration public const string KeyEventsType = \"KeyEvents\" Field Value Type Description String KeypressEventType The event type for 'keypress' KeyEvent. Declaration public const string KeypressEventType = \"keypress\" Field Value Type Description String KeyupEventType The event type for 'keyup' KeyEvent. Declaration public const string KeyupEventType = \"keyup\" Field Value Type Description String MousedownEventType The event type for 'mousedown' MouseEvent. Declaration public const string MousedownEventType = \"mousedown\" Field Value Type Description String MouseEventsType The event type for MouseEvent. Declaration public const string MouseEventsType = \"MouseEvents\" Field Value Type Description String MousemoveEventType The event type for 'mousemove' MouseEvent. Declaration public const string MousemoveEventType = \"mousemove\" Field Value Type Description String MouseoutEventType The event type for 'mouseout' MouseEvent. Declaration public const string MouseoutEventType = \"mouseout\" Field Value Type Description String MouseoverEventType The event type for 'mouseover' MouseEvent. Declaration public const string MouseoverEventType = \"mouseover\" Field Value Type Description String MouseupEventType The event type for 'mouseup' MouseEvent. Declaration public const string MouseupEventType = \"mouseup\" Field Value Type Description String NamespaceUri Declaration public const string NamespaceUri = \"http://www.w3.org/2000/svg\" Field Value Type Description String OnAbortAttribute The 'onabort' attribute name of type SVGEvents. Declaration public const string OnAbortAttribute = \"onabort\" Field Value Type Description String OnActivateAttribute The 'onabort' attribute name of type SVGEvents. Declaration public const string OnActivateAttribute = \"onactivate\" Field Value Type Description String OnBeginAttribute The 'onbegin' attribute name of type SVGEvents. Declaration public const string OnBeginAttribute = \"onbegin\" Field Value Type Description String OnClickAttribute The 'onclick' attribute name of type MouseEvents. Declaration public const string OnClickAttribute = \"onclick\" Field Value Type Description String OnEndAttribute The 'onend' attribute name of type SVGEvents. Declaration public const string OnEndAttribute = \"onend\" Field Value Type Description String OnErrorAttribute The 'onerror' attribute name of type SVGEvents. Declaration public const string OnErrorAttribute = \"onerror\" Field Value Type Description String OnFocusinAttribute The 'onfocusin' attribute name of type UIEvents. Declaration public const string OnFocusinAttribute = \"onfocusin\" Field Value Type Description String OnFocusoutAttribute The 'onfocusout' attribute name of type UIEvents. Declaration public const string OnFocusoutAttribute = \"onfocusout\" Field Value Type Description String OnKeydownAttribute The 'onkeydown' attribute name of type KeyEvents. Declaration public const string OnKeydownAttribute = \"onkeydown\" Field Value Type Description String OnKeypressAttribute The 'onkeypress' attribute name of type KeyEvents. Declaration public const string OnKeypressAttribute = \"onkeypress\" Field Value Type Description String OnKeyupAttribute The 'onkeyup' attribute name of type KeyEvents. Declaration public const string OnKeyupAttribute = \"onkeyup\" Field Value Type Description String OnLoadAttribute The 'onload' attribute name of type SVGEvents. Declaration public const string OnLoadAttribute = \"onload\" Field Value Type Description String OnMousedownAttribute The 'onmousedown' attribute name of type MouseEvents. Declaration public const string OnMousedownAttribute = \"onmousedown\" Field Value Type Description String OnMousemoveAttribute The 'onmousemove' attribute name of type MouseEvents. Declaration public const string OnMousemoveAttribute = \"onmousemove\" Field Value Type Description String OnMouseoutAttribute The 'onmouseout' attribute name of type MouseEvents. Declaration public const string OnMouseoutAttribute = \"onmouseout\" Field Value Type Description String OnMouseoverAttribute The 'onmouseover' attribute name of type MouseEvents. Declaration public const string OnMouseoverAttribute = \"onmouseover\" Field Value Type Description String OnMouseupAttribute The 'onmouseup' attribute name of type MouseEvents. Declaration public const string OnMouseupAttribute = \"onmouseup\" Field Value Type Description String OnRepeatAttribute The 'onrepeat' attribute name of type SVGEvents. Declaration public const string OnRepeatAttribute = \"onrepeat\" Field Value Type Description String OnResizeAttribute The 'onresize' attribute name of type SVGEvents. Declaration public const string OnResizeAttribute = \"onresize\" Field Value Type Description String OnScrollAttribute The 'onscroll' attribute name of type SVGEvents. Declaration public const string OnScrollAttribute = \"onscroll\" Field Value Type Description String OnUnloadAttribute The 'onunload' attribute name of type SVGEvents. Declaration public const string OnUnloadAttribute = \"onunload\" Field Value Type Description String OnZoomAttribute The 'onzoom' attribute name of type SVGEvents. Declaration public const string OnZoomAttribute = \"onzoom\" Field Value Type Description String PathArc Declaration public const string PathArc = \"A\" Field Value Type Description String PathClose Declaration public const string PathClose = \"Z\" Field Value Type Description String PathCubicTo Declaration public const string PathCubicTo = \"C\" Field Value Type Description String PathHorizontalLineTo Declaration public const string PathHorizontalLineTo = \"H\" Field Value Type Description String PathLineTo Declaration public const string PathLineTo = \"L\" Field Value Type Description String PathMove Declaration public const string PathMove = \"M\" Field Value Type Description String PathQuadTo Declaration public const string PathQuadTo = \"Q\" Field Value Type Description String PathSmoothQuadTo Declaration public const string PathSmoothQuadTo = \"T\" Field Value Type Description String PathVerticalLineTo Declaration public const string PathVerticalLineTo = \"V\" Field Value Type Description String PublicId Declaration public const string PublicId = \"-//W3C//DTD SVG 1.0//EN\" Field Value Type Description String SvgAbortEventType The event type for 'SVGAbort' SVGEvent. Declaration public const string SvgAbortEventType = \"SVGAbort\" Field Value Type Description String SvgErrorEventType The event type for 'SVGError' SVGEvent. Declaration public const string SvgErrorEventType = \"SVGError\" Field Value Type Description String SvgEventsType The event type for SVGEvent. Declaration public const string SvgEventsType = \"SVGEvents\" Field Value Type Description String SvgLoadEventType The event type for 'SVGLoad' SVGEvent. Declaration public const string SvgLoadEventType = \"SVGLoad\" Field Value Type Description String SvgResizeEventType The event type for 'SVGResize' SVGEvent. Declaration public const string SvgResizeEventType = \"SVGResize\" Field Value Type Description String SvgScrollEventType The event type for 'SVGScroll' SVGEvent. Declaration public const string SvgScrollEventType = \"SVGScroll\" Field Value Type Description String SvgSignature Declaration public const string SvgSignature = \"PHN2Zy\" Field Value Type Description String SvgUnloadEventType The event type for 'SVGUnload' SVGEvent. Declaration public const string SvgUnloadEventType = \"SVGUnload\" Field Value Type Description String SvgZoomEventType The event type for 'SVGZoom' SVGEvent. Declaration public const string SvgZoomEventType = \"SVGZoom\" Field Value Type Description String SystemId Declaration public const string SystemId = \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\" Field Value Type Description String TagA Declaration public const string TagA = \"a\" Field Value Type Description String TagAltGlyph Declaration public const string TagAltGlyph = \"altGlyph\" Field Value Type Description String TagAltGlyphDef Declaration public const string TagAltGlyphDef = \"altGlyphDef\" Field Value Type Description String TagAltGlyphItem Declaration public const string TagAltGlyphItem = \"altGlyphItem\" Field Value Type Description String TagAnimate Declaration public const string TagAnimate = \"animate\" Field Value Type Description String TagAnimateColor Declaration public const string TagAnimateColor = \"animateColor\" Field Value Type Description String TagAnimateMotion Declaration public const string TagAnimateMotion = \"animateMotion\" Field Value Type Description String TagAnimateTransform Declaration public const string TagAnimateTransform = \"animateTransform\" Field Value Type Description String TagCircle Declaration public const string TagCircle = \"circle\" Field Value Type Description String TagClipPath Declaration public const string TagClipPath = \"clipPath\" Field Value Type Description String TagColorProfile Declaration public const string TagColorProfile = \"color-profile\" Field Value Type Description String TagCursor Declaration public const string TagCursor = \"cursor\" Field Value Type Description String TagDefinitionSrc Declaration public const string TagDefinitionSrc = \"definition-src\" Field Value Type Description String TagDefs Declaration public const string TagDefs = \"defs\" Field Value Type Description String TagDesc Declaration public const string TagDesc = \"desc\" Field Value Type Description String TagEllipse Declaration public const string TagEllipse = \"ellipse\" Field Value Type Description String TagFeBlend Declaration public const string TagFeBlend = \"feBlend\" Field Value Type Description String TagFeColorMatrix Declaration public const string TagFeColorMatrix = \"feColorMatrix\" Field Value Type Description String TagFeComponentTransfer Declaration public const string TagFeComponentTransfer = \"feComponentTransfer\" Field Value Type Description String TagFeComposite Declaration public const string TagFeComposite = \"feComposite\" Field Value Type Description String TagFeConvolveMatrix Declaration public const string TagFeConvolveMatrix = \"feConvolveMatrix\" Field Value Type Description String TagFeDiffuseLighting Declaration public const string TagFeDiffuseLighting = \"feDiffuseLighting\" Field Value Type Description String TagFeDisplacementMap Declaration public const string TagFeDisplacementMap = \"feDisplacementMap\" Field Value Type Description String TagFeDistantLight Declaration public const string TagFeDistantLight = \"feDistantLight\" Field Value Type Description String TagFeFlood Declaration public const string TagFeFlood = \"feFlood\" Field Value Type Description String TagFeFuncA Declaration public const string TagFeFuncA = \"feFuncA\" Field Value Type Description String TagFeFuncB Declaration public const string TagFeFuncB = \"feFuncB\" Field Value Type Description String TagFeFuncG Declaration public const string TagFeFuncG = \"feFuncG\" Field Value Type Description String TagFeFuncR Declaration public const string TagFeFuncR = \"feFuncR\" Field Value Type Description String TagFeGaussianBlur Declaration public const string TagFeGaussianBlur = \"feGaussianBlur\" Field Value Type Description String TagFeImage Declaration public const string TagFeImage = \"feImage\" Field Value Type Description String TagFeMerge Declaration public const string TagFeMerge = \"feMerge\" Field Value Type Description String TagFeMergeNode Declaration public const string TagFeMergeNode = \"feMergeNode\" Field Value Type Description String TagFeMorphology Declaration public const string TagFeMorphology = \"feMorphology\" Field Value Type Description String TagFeOffset Declaration public const string TagFeOffset = \"feOffset\" Field Value Type Description String TagFePointLight Declaration public const string TagFePointLight = \"fePointLight\" Field Value Type Description String TagFeSpecularLighting Declaration public const string TagFeSpecularLighting = \"feSpecularLighting\" Field Value Type Description String TagFeSpotLight Declaration public const string TagFeSpotLight = \"feSpotLight\" Field Value Type Description String TagFeTile Declaration public const string TagFeTile = \"feTile\" Field Value Type Description String TagFeTurbulence Declaration public const string TagFeTurbulence = \"feTurbulence\" Field Value Type Description String TagFilter Declaration public const string TagFilter = \"filter\" Field Value Type Description String TagFont Declaration public const string TagFont = \"font\" Field Value Type Description String TagFontFace Declaration public const string TagFontFace = \"font-face\" Field Value Type Description String TagFontFaceFormat Declaration public const string TagFontFaceFormat = \"font-face-format\" Field Value Type Description String TagFontFaceName Declaration public const string TagFontFaceName = \"font-face-name\" Field Value Type Description String TagFontFaceSrc Declaration public const string TagFontFaceSrc = \"font-face-src\" Field Value Type Description String TagFontFaceUri Declaration public const string TagFontFaceUri = \"font-face-uri\" Field Value Type Description String TagForeignObject Declaration public const string TagForeignObject = \"foreignObject\" Field Value Type Description String TagG Declaration public const string TagG = \"g\" Field Value Type Description String TagGlyph Declaration public const string TagGlyph = \"glyph\" Field Value Type Description String TagGlyphRef Declaration public const string TagGlyphRef = \"glyphRef\" Field Value Type Description String TagHkern Declaration public const string TagHkern = \"hkern\" Field Value Type Description String TagImage Declaration public const string TagImage = \"image\" Field Value Type Description String TagLine Declaration public const string TagLine = \"line\" Field Value Type Description String TagLinearGradient Declaration public const string TagLinearGradient = \"linearGradient\" Field Value Type Description String TagMarker Declaration public const string TagMarker = \"marker\" Field Value Type Description String TagMask Declaration public const string TagMask = \"mask\" Field Value Type Description String TagMetadata Declaration public const string TagMetadata = \"metadata\" Field Value Type Description String TagMissingGlyph Declaration public const string TagMissingGlyph = \"missing-glyph\" Field Value Type Description String TagMpath Declaration public const string TagMpath = \"mpath\" Field Value Type Description String TagPath Declaration public const string TagPath = \"path\" Field Value Type Description String TagPattern Declaration public const string TagPattern = \"pattern\" Field Value Type Description String TagPolygon Declaration public const string TagPolygon = \"polygon\" Field Value Type Description String TagPolyline Declaration public const string TagPolyline = \"polyline\" Field Value Type Description String TagRadialGradient Declaration public const string TagRadialGradient = \"radialGradient\" Field Value Type Description String TagRect Declaration public const string TagRect = \"rect\" Field Value Type Description String TagScript Declaration public const string TagScript = \"script\" Field Value Type Description String TagSet Declaration public const string TagSet = \"set\" Field Value Type Description String TagSolidColor Declaration public const string TagSolidColor = \"solidcolor\" Field Value Type Description String TagStop Declaration public const string TagStop = \"stop\" Field Value Type Description String TagStyle Declaration public const string TagStyle = \"style\" Field Value Type Description String TagSvg Declaration public const string TagSvg = \"svg\" Field Value Type Description String TagSwitch Declaration public const string TagSwitch = \"switch\" Field Value Type Description String TagSymbol Declaration public const string TagSymbol = \"symbol\" Field Value Type Description String TagText Declaration public const string TagText = \"text\" Field Value Type Description String TagTextArea Declaration public const string TagTextArea = \"textArea\" Field Value Type Description String TagTextPath Declaration public const string TagTextPath = \"textPath\" Field Value Type Description String TagTitle Declaration public const string TagTitle = \"title\" Field Value Type Description String TagTref Declaration public const string TagTref = \"tref\" Field Value Type Description String TagTspan Declaration public const string TagTspan = \"tspan\" Field Value Type Description String TagUse Declaration public const string TagUse = \"use\" Field Value Type Description String TagView Declaration public const string TagView = \"view\" Field Value Type Description String TagVkern Declaration public const string TagVkern = \"vkern\" Field Value Type Description String TransformMatrix Declaration public const string TransformMatrix = \"matrix\" Field Value Type Description String TransformRotate Declaration public const string TransformRotate = \"rotate\" Field Value Type Description String TransformScale Declaration public const string TransformScale = \"scale\" Field Value Type Description String TransformSkewx Declaration public const string TransformSkewx = \"skewX\" Field Value Type Description String TransformSkewy Declaration public const string TransformSkewy = \"skewY\" Field Value Type Description String TransformTranslate Declaration public const string TransformTranslate = \"translate\" Field Value Type Description String UIEventsType The event type for UIEvent. Declaration public const string UIEventsType = \"UIEvents\" Field Value Type Description String ValA Declaration public const string ValA = \"A\" Field Value Type Description String ValAbsoluteColorimetric Declaration public const string ValAbsoluteColorimetric = \"absolute-colorimetric\" Field Value Type Description String ValAlign Declaration public const string ValAlign = \"align\" Field Value Type Description String ValAll Declaration public const string ValAll = \"all\" Field Value Type Description String ValArithmetic Declaration public const string ValArithmetic = \"arithmetic\" Field Value Type Description String ValAtop Declaration public const string ValAtop = \"atop\" Field Value Type Description String ValAuto Declaration public const string ValAuto = \"auto\" Field Value Type Description String ValB Declaration public const string ValB = \"B\" Field Value Type Description String ValBackgroundAlpha Declaration public const string ValBackgroundAlpha = \"BackgroundAlpha\" Field Value Type Description String ValBackgroundImage Declaration public const string ValBackgroundImage = \"BackgroundImage\" Field Value Type Description String ValBevel Declaration public const string ValBevel = \"bevel\" Field Value Type Description String ValBold Declaration public const string ValBold = \"bold\" Field Value Type Description String ValBolder Declaration public const string ValBolder = \"bolder\" Field Value Type Description String ValButt Declaration public const string ValButt = \"butt\" Field Value Type Description String ValComposite Declaration public const string ValComposite = \"composite\" Field Value Type Description String ValCrispEdges Declaration public const string ValCrispEdges = \"crispEdges\" Field Value Type Description String ValCrosshair Declaration public const string ValCrosshair = \"crosshair\" Field Value Type Description String ValDarken Declaration public const string ValDarken = \"darken\" Field Value Type Description String ValDefault Declaration public const string ValDefault = \"default\" Field Value Type Description String ValDigitOne Declaration public const string ValDigitOne = \"1\" Field Value Type Description String ValDilate Declaration public const string ValDilate = \"dilate\" Field Value Type Description String ValDisable Declaration public const string ValDisable = \"disable\" Field Value Type Description String ValDiscrete Declaration public const string ValDiscrete = \"discrete\" Field Value Type Description String ValDuplicate Declaration public const string ValDuplicate = \"duplicate\" Field Value Type Description String ValEnd Declaration public const string ValEnd = \"end\" Field Value Type Description String ValEResize Declaration public const string ValEResize = \"e-resize\" Field Value Type Description String ValErode Declaration public const string ValErode = \"erode\" Field Value Type Description String ValEvenOdd Declaration public const string ValEvenOdd = \"evenodd\" Field Value Type Description String ValExact Declaration public const string ValExact = \"exact\" Field Value Type Description String ValFalse Declaration public const string ValFalse = \"false\" Field Value Type Description String ValFillPaint Declaration public const string ValFillPaint = \"FillPaint\" Field Value Type Description String ValFlood Declaration public const string ValFlood = \"flood\" Field Value Type Description String ValFractalNoise Declaration public const string ValFractalNoise = \"fractalNoise\" Field Value Type Description String ValG Declaration public const string ValG = \"G\" Field Value Type Description String ValGamma Declaration public const string ValGamma = \"gamma\" Field Value Type Description String ValGeometricPrecision Declaration public const string ValGeometricPrecision = \"geometricPrecision\" Field Value Type Description String ValH Declaration public const string ValH = \"h\" Field Value Type Description String ValHelp Declaration public const string ValHelp = \"help\" Field Value Type Description String ValHueRotate Declaration public const string ValHueRotate = \"hueRotate\" Field Value Type Description String ValHundredPercent Declaration public const string ValHundredPercent = \"100%\" Field Value Type Description String ValIdentity Declaration public const string ValIdentity = \"identity\" Field Value Type Description String ValIn Declaration public const string ValIn = \"in\" Field Value Type Description String ValInitial Declaration public const string ValInitial = \"initial\" Field Value Type Description String ValIsolated Declaration public const string ValIsolated = \"isolated\" Field Value Type Description String ValItalic Declaration public const string ValItalic = \"italic\" Field Value Type Description String ValLighten Declaration public const string ValLighten = \"lighten\" Field Value Type Description String ValLighter Declaration public const string ValLighter = \"lighter\" Field Value Type Description String ValLinear Declaration public const string ValLinear = \"linear\" Field Value Type Description String ValLinearRgb Declaration public const string ValLinearRgb = \"linearRGB\" Field Value Type Description String ValLuminanceToAlpha Declaration public const string ValLuminanceToAlpha = \"luminanceToAlpha\" Field Value Type Description String ValMagnify Declaration public const string ValMagnify = \"magnify\" Field Value Type Description String ValMatrix Declaration public const string ValMatrix = \"matrix\" Field Value Type Description String ValMedial Declaration public const string ValMedial = \"medial\" Field Value Type Description String ValMeet Declaration public const string ValMeet = \"meet\" Field Value Type Description String ValMiddle Declaration public const string ValMiddle = \"middle\" Field Value Type Description String ValMiter Declaration public const string ValMiter = \"miter\" Field Value Type Description String ValMove Declaration public const string ValMove = \"move\" Field Value Type Description String ValMultiply Declaration public const string ValMultiply = \"multiply\" Field Value Type Description String ValNeResize Declaration public const string ValNeResize = \"ne-resize\" Field Value Type Description String ValNew Declaration public const string ValNew = \"new\" Field Value Type Description String ValNinety Declaration public const string ValNinety = \"90\" Field Value Type Description String ValNone Declaration public const string ValNone = \"none\" Field Value Type Description String ValNonZero Declaration public const string ValNonZero = \"nonzero\" Field Value Type Description String ValNormal Declaration public const string ValNormal = \"normal\" Field Value Type Description String ValNoStitch Declaration public const string ValNoStitch = \"noStitch\" Field Value Type Description String ValNResize Declaration public const string ValNResize = \"n-resize\" Field Value Type Description String ValNwResize Declaration public const string ValNwResize = \"nw-resize\" Field Value Type Description String ValObjectBoundingBox Declaration public const string ValObjectBoundingBox = \"objectBoundingBox\" Field Value Type Description String ValOblique Declaration public const string ValOblique = \"oblique\" Field Value Type Description String ValOne Declaration public const string ValOne = \"1\" Field Value Type Description String ValOpaque Declaration public const string ValOpaque = \"1\" Field Value Type Description String ValOptimizeLegibility Declaration public const string ValOptimizeLegibility = \"optimizeLegibility\" Field Value Type Description String ValOptimizeQuality Declaration public const string ValOptimizeQuality = \"optimizeQuality\" Field Value Type Description String ValOptimizeSpeed Declaration public const string ValOptimizeSpeed = \"optimizeSpeed\" Field Value Type Description String ValOut Declaration public const string ValOut = \"out\" Field Value Type Description String ValOver Declaration public const string ValOver = \"over\" Field Value Type Description String ValPaced Declaration public const string ValPaced = \"paced\" Field Value Type Description String ValPad Declaration public const string ValPad = \"pad\" Field Value Type Description String ValPerceptual Declaration public const string ValPerceptual = \"perceptual\" Field Value Type Description String ValPointer Declaration public const string ValPointer = \"pointer\" Field Value Type Description String ValPreserve Declaration public const string ValPreserve = \"preserve\" Field Value Type Description String ValR Declaration public const string ValR = \"R\" Field Value Type Description String ValReflect Declaration public const string ValReflect = \"reflect\" Field Value Type Description String ValRelativeColorimetric Declaration public const string ValRelativeColorimetric = \"relative-colorimetric\" Field Value Type Description String ValRepeat Declaration public const string ValRepeat = \"repeat\" Field Value Type Description String ValRound Declaration public const string ValRound = \"round\" Field Value Type Description String ValSaturate Declaration public const string ValSaturate = \"saturate\" Field Value Type Description String ValSaturation Declaration public const string ValSaturation = \"saturation\" Field Value Type Description String ValScreen Declaration public const string ValScreen = \"screen\" Field Value Type Description String ValSeResize Declaration public const string ValSeResize = \"se-resize\" Field Value Type Description String ValSlice Declaration public const string ValSlice = \"slice\" Field Value Type Description String ValSourceAlpha Declaration public const string ValSourceAlpha = \"SourceAlpha\" Field Value Type Description String ValSourceGraphic Declaration public const string ValSourceGraphic = \"SourceGraphic\" Field Value Type Description String ValSpacing Declaration public const string ValSpacing = \"spacing\" Field Value Type Description String ValSpacingAndGlyphs Declaration public const string ValSpacingAndGlyphs = \"spacingAndGlyphs\" Field Value Type Description String ValSquare Declaration public const string ValSquare = \"square\" Field Value Type Description String ValSResize Declaration public const string ValSResize = \"s-resize\" Field Value Type Description String ValSrgb Declaration public const string ValSrgb = \"sRGB\" Field Value Type Description String ValStart Declaration public const string ValStart = \"start\" Field Value Type Description String ValStitch Declaration public const string ValStitch = \"stitch\" Field Value Type Description String ValStretch Declaration public const string ValStretch = \"stretch\" Field Value Type Description String ValStrokePaint Declaration public const string ValStrokePaint = \"StrokePaint\" Field Value Type Description String ValStrokeWidth Declaration public const string ValStrokeWidth = \"strokeWidth\" Field Value Type Description String ValSwResize Declaration public const string ValSwResize = \"sw-resize\" Field Value Type Description String ValTable Declaration public const string ValTable = \"table\" Field Value Type Description String ValTerminal Declaration public const string ValTerminal = \"terminal\" Field Value Type Description String ValText Declaration public const string ValText = \"text\" Field Value Type Description String ValTranslate Declaration public const string ValTranslate = \"translate\" Field Value Type Description String ValTrue Declaration public const string ValTrue = \"true\" Field Value Type Description String ValTurbulence Declaration public const string ValTurbulence = \"turbulence\" Field Value Type Description String ValUserSpaceOnUse Declaration public const string ValUserSpaceOnUse = \"userSpaceOnUse\" Field Value Type Description String ValV Declaration public const string ValV = \"v\" Field Value Type Description String ValWait Declaration public const string ValWait = \"wait\" Field Value Type Description String ValWeight100 Declaration public const string ValWeight100 = \"100\" Field Value Type Description String ValWeight200 Declaration public const string ValWeight200 = \"200\" Field Value Type Description String ValWeight300 Declaration public const string ValWeight300 = \"300\" Field Value Type Description String ValWeight400 Declaration public const string ValWeight400 = \"400\" Field Value Type Description String ValWeight500 Declaration public const string ValWeight500 = \"500\" Field Value Type Description String ValWeight600 Declaration public const string ValWeight600 = \"600\" Field Value Type Description String ValWeight700 Declaration public const string ValWeight700 = \"700\" Field Value Type Description String ValWeight800 Declaration public const string ValWeight800 = \"800\" Field Value Type Description String ValWeight900 Declaration public const string ValWeight900 = \"900\" Field Value Type Description String ValWrap Declaration public const string ValWrap = \"wrap\" Field Value Type Description String ValWResize Declaration public const string ValWResize = \"w-resize\" Field Value Type Description String ValXmaxYmax Declaration public const string ValXmaxYmax = \"xMaxYMax\" Field Value Type Description String ValXmaxYmid Declaration public const string ValXmaxYmid = \"xMaxYMid\" Field Value Type Description String ValXmaxYmin Declaration public const string ValXmaxYmin = \"xMaxYMin\" Field Value Type Description String ValXmidYmax Declaration public const string ValXmidYmax = \"xMidYMax\" Field Value Type Description String ValXmidYmid Declaration public const string ValXmidYmid = \"xMidYMid\" Field Value Type Description String ValXmidYmin Declaration public const string ValXmidYmin = \"xMidYMin\" Field Value Type Description String ValXminYmax Declaration public const string ValXminYmax = \"xMinYMax\" Field Value Type Description String ValXminYmid Declaration public const string ValXminYmid = \"xMinYMid\" Field Value Type Description String ValXminYmin Declaration public const string ValXminYmin = \"xMinYMin\" Field Value Type Description String ValXor Declaration public const string ValXor = \"xor\" Field Value Type Description String ValZero Declaration public const string ValZero = \"0\" Field Value Type Description String ValZeroPercent Declaration public const string ValZeroPercent = \"0%\" Field Value Type Description String Version Declaration public const string Version = \"1.1\" Field Value Type Description String XmlSignature Declaration public const string XmlSignature = \"PD94bW\" Field Value Type Description String"
  },
  "api/SharpVectors.Dom.Text.html": {
    "href": "api/SharpVectors.Dom.Text.html",
    "title": "Class Text | SharpVectors Documentation",
    "keywords": "Class Text Summary description for Text. Inheritance Object XmlNode XmlLinkedNode XmlCharacterData XmlText Text Implements ICloneable IEnumerable IXPathNavigable IText ICharacterData INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlText.CloneNode(Boolean) XmlText.SplitText(Int32) XmlText.WriteTo(XmlWriter) XmlText.WriteContentTo(XmlWriter) XmlText.Name XmlText.LocalName XmlText.NodeType XmlText.ParentNode XmlCharacterData.Substring(Int32, Int32) XmlCharacterData.AppendData(String) XmlCharacterData.InsertData(Int32, String) XmlCharacterData.DeleteData(Int32, Int32) XmlCharacterData.ReplaceData(Int32, Int32, String) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class Text : XmlText, ICloneable, IEnumerable, IXPathNavigable, IText, ICharacterData, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors Text(String, Document) Declaration protected Text(string data, Document document) Parameters Type Name Description String data Document document Properties Value Declaration public override string Value { get; set; } Property Value Type Description String Overrides XmlText.Value Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable IText ICharacterData INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.Views.html": {
    "href": "api/SharpVectors.Dom.Views.html",
    "title": "Namespace SharpVectors.Dom.Views | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom.Views Interfaces IAbstractView A base interface that all views shall derive from IDocumentView The document view interface is implemented by document objects in DOM implementations supporting DOM Views. It provides an attribute to retrieve the default view of a document."
  },
  "api/SharpVectors.Dom.Views.IAbstractView.html": {
    "href": "api/SharpVectors.Dom.Views.IAbstractView.html",
    "title": "Interface IAbstractView | SharpVectors Documentation",
    "keywords": "Interface IAbstractView A base interface that all views shall derive from Namespace : SharpVectors.Dom.Views Assembly : SharpVectors.Core.dll Syntax public interface IAbstractView Properties Document The source IDocumentView of which this is an IAbstractView . Declaration IDocumentView Document { get; } Property Value Type Description IDocumentView An instance of IDocumentView representing the document view."
  },
  "api/SharpVectors.Dom.Views.IDocumentView.html": {
    "href": "api/SharpVectors.Dom.Views.IDocumentView.html",
    "title": "Interface IDocumentView | SharpVectors Documentation",
    "keywords": "Interface IDocumentView The document view interface is implemented by document objects in DOM implementations supporting DOM Views. It provides an attribute to retrieve the default view of a document. Namespace : SharpVectors.Dom.Views Assembly : SharpVectors.Core.dll Syntax public interface IDocumentView Properties DefaultView The default IAbstractView for this document, or null if none available Declaration IAbstractView DefaultView { get; } Property Value Type Description IAbstractView An instance of IAbstractView representing the default view."
  },
  "api/SharpVectors.Dom.Whitespace.html": {
    "href": "api/SharpVectors.Dom.Whitespace.html",
    "title": "Class Whitespace | SharpVectors Documentation",
    "keywords": "Class Whitespace Summary description for Whitespace. Inheritance Object XmlNode XmlLinkedNode XmlCharacterData XmlWhitespace Whitespace Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlWhitespace.CloneNode(Boolean) XmlWhitespace.WriteTo(XmlWriter) XmlWhitespace.WriteContentTo(XmlWriter) XmlWhitespace.Name XmlWhitespace.LocalName XmlWhitespace.NodeType XmlWhitespace.ParentNode XmlCharacterData.Substring(Int32, Int32) XmlCharacterData.AppendData(String) XmlCharacterData.InsertData(Int32, String) XmlCharacterData.DeleteData(Int32, Int32) XmlCharacterData.ReplaceData(Int32, Int32, String) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(String) XmlNode.SelectSingleNode(String, XmlNamespaceManager) XmlNode.SelectNodes(String) XmlNode.SelectNodes(String, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(String, String) XmlNode.Clone() XmlNode.ICloneable.Clone() XmlNode.IEnumerable.GetEnumerator() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(String) XmlNode.GetPrefixOfNamespace(String) XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.Item[String] XmlNode.Item[String, String] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Dom.dll Syntax public class Whitespace : XmlWhitespace, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Constructors Whitespace(String, Document) Declaration protected Whitespace(string data, Document document) Parameters Type Name Description String data Document document Properties Value Declaration public override string Value { get; set; } Property Value Type Description String Overrides XmlWhitespace.Value Explicit Interface Implementations IEventTarget.AddEventListener(String, EventListener, Boolean) Declaration void IEventTarget.AddEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.AddEventListenerNs(String, String, EventListener, Boolean, Object) Declaration void IEventTarget.AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object eventGroup) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture Object eventGroup IEventTarget.DispatchEvent(IEvent) Declaration bool IEventTarget.DispatchEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Returns Type Description Boolean IEventTarget.HasEventListenerNs(String, String) Declaration bool IEventTarget.HasEventListenerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTarget.RemoveEventListener(String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters Type Name Description String type EventListener listener Boolean useCapture IEventTarget.RemoveEventListenerNs(String, String, EventListener, Boolean) Declaration void IEventTarget.RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters Type Name Description String namespaceUri String type EventListener listener Boolean useCapture IEventTarget.WillTriggerNs(String, String) Declaration bool IEventTarget.WillTriggerNs(string namespaceUri, string type) Parameters Type Name Description String namespaceUri String type Returns Type Description Boolean IEventTargetSupport.FireEvent(IEvent) Declaration void IEventTargetSupport.FireEvent(IEvent eventArgs) Parameters Type Name Description IEvent eventArgs Implements System.ICloneable System.Collections.IEnumerable System.Xml.XPath.IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget"
  },
  "api/SharpVectors.Dom.XmlConstants.html": {
    "href": "api/SharpVectors.Dom.XmlConstants.html",
    "title": "Class XmlConstants | SharpVectors Documentation",
    "keywords": "Class XmlConstants Contains common XML constants. Inheritance Object XmlConstants Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Dom Assembly : SharpVectors.Core.dll Syntax public static class XmlConstants Fields BaseAttribute Declaration public const string BaseAttribute = \"base\" Field Value Type Description String BaseQname Declaration public static readonly string BaseQname Field Value Type Description String DefaultValue Declaration public const string DefaultValue = \"default\" Field Value Type Description String EventsEventAttribute Declaration public const string EventsEventAttribute = \"event\" Field Value Type Description String IdAttribute Declaration public const string IdAttribute = \"id\" Field Value Type Description String IdQname Declaration public static readonly string IdQname Field Value Type Description String LangAttribute Declaration public const string LangAttribute = \"lang\" Field Value Type Description String LangQname Declaration public static readonly string LangQname Field Value Type Description String PreserveValue Declaration public const string PreserveValue = \"preserve\" Field Value Type Description String SpaceAttribute Declaration public const string SpaceAttribute = \"space\" Field Value Type Description String SpaceQname Declaration public static readonly string SpaceQname Field Value Type Description String XlinkHash Declaration public const string XlinkHash = \"#\" Field Value Type Description String XlinkHrefAttribute Declaration public const string XlinkHrefAttribute = \"href\" Field Value Type Description String XlinkHrefQname Declaration public static readonly string XlinkHrefQname Field Value Type Description String XlinkNamespaceUri Declaration public const string XlinkNamespaceUri = \"http://www.w3.org/1999/xlink\" Field Value Type Description String XlinkPrefix Declaration public const string XlinkPrefix = \"xlink\" Field Value Type Description String XmlEventsNamespaceUri Declaration public const string XmlEventsNamespaceUri = \"http://www.w3.org/2001/xml-events\" Field Value Type Description String XmlNamespacePrefix Specifies a namespace prefix. Declaration public static readonly string XmlNamespacePrefix Field Value Type Description String XmlNamespaceUri Declaration public const string XmlNamespaceUri = \"http://www.w3.org/XML/1998/namespace\" Field Value Type Description String XmlnsNamespaceUri Declaration public const string XmlnsNamespaceUri = \"http://www.w3.org/2000/xmlns/\" Field Value Type Description String XmlnsPrefix Declaration public const string XmlnsPrefix = \"xmlns\" Field Value Type Description String XmlPrefix Declaration public const string XmlPrefix = \"xml\" Field Value Type Description String"
  },
  "api/SharpVectors.IoC.html": {
    "href": "api/SharpVectors.IoC.html",
    "title": "Namespace SharpVectors.IoC | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.IoC Classes SvgContainer Inversion of control container handles dependency injection for registered types SvgIoCContainerExtensions Extension methods for Container Interfaces ISvgRegisteredType IRegisteredType is return by Container.Register and allows further configuration for the registration ISvgScope Represents a scope in which per-scope objects are instantiated a single time"
  },
  "api/SharpVectors.IoC.ISvgRegisteredType.html": {
    "href": "api/SharpVectors.IoC.ISvgRegisteredType.html",
    "title": "Interface ISvgRegisteredType | SharpVectors Documentation",
    "keywords": "Interface ISvgRegisteredType IRegisteredType is return by Container.Register and allows further configuration for the registration Namespace : SharpVectors.IoC Assembly : SharpVectors.Model.dll Syntax public interface ISvgRegisteredType Methods AsSingleton() Make registered type a singleton Declaration void AsSingleton() PerScope() Make registered type a per-scope type (single instance within a Scope) Declaration void PerScope()"
  },
  "api/SharpVectors.IoC.ISvgScope.html": {
    "href": "api/SharpVectors.IoC.ISvgScope.html",
    "title": "Interface ISvgScope | SharpVectors Documentation",
    "keywords": "Interface ISvgScope Represents a scope in which per-scope objects are instantiated a single time Inherited Members IDisposable.Dispose() IServiceProvider.GetService(Type) Namespace : SharpVectors.IoC Assembly : SharpVectors.Model.dll Syntax public interface ISvgScope : IDisposable, IServiceProvider Properties IsDisposed Declaration bool IsDisposed { get; } Property Value Type Description Boolean Extension Methods SvgIoCContainerExtensions.Resolve<T>(ISvgScope)"
  },
  "api/SharpVectors.IoC.SvgContainer.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.html",
    "title": "Class SvgContainer | SharpVectors Documentation",
    "keywords": "Class SvgContainer Inversion of control container handles dependency injection for registered types Inheritance Object SvgContainer Implements ISvgScope IDisposable IServiceProvider Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.IoC Assembly : SharpVectors.Model.dll Syntax public sealed class SvgContainer : ISvgScope, IDisposable, IServiceProvider Constructors SvgContainer() Creates a new instance of IoC Container Declaration public SvgContainer() Properties IsDisposed Declaration public bool IsDisposed { get; } Property Value Type Description Boolean Methods CreateScope() Creates a new scope Declaration public ISvgScope CreateScope() Returns Type Description ISvgScope Scope object Dispose() Disposes any IDisposable objects owned by this container. Declaration public void Dispose() Finalize() Declaration protected void Finalize() GetService(Type) Returns the object registered for the given type Declaration public object GetService(Type type) Parameters Type Name Description Type type Type as registered with the container Returns Type Description Object Instance of the registered type HasService(Type) Returns a value indicating whether the object type is registered or not. Declaration public bool HasService(Type type) Parameters Type Name Description Type type Type as registered with the container Returns Type Description Boolean Returns true if the specified type is registered, otherwise; return false . Register(Type, Func<Object>) Registers a factory function which will be called to resolve the specified interface Declaration public ISvgRegisteredType Register(Type anInterface, Func<object> factory) Parameters Type Name Description Type anInterface Interface to register Func < Object > factory Factory function Returns Type Description ISvgRegisteredType Register(Type, Type) Registers an implementation type for the specified interface Declaration public ISvgRegisteredType Register(Type anInterface, Type implementation) Parameters Type Name Description Type anInterface Interface to register Type implementation Implementing type Returns Type Description ISvgRegisteredType Implements ISvgScope System.IDisposable System.IServiceProvider Extension Methods SvgIoCContainerExtensions.Register<T>(SvgContainer, Type) SvgIoCContainerExtensions.Register<TInterface, TImplementation>(SvgContainer) SvgIoCContainerExtensions.Register<T>(SvgContainer, Func<T>) SvgIoCContainerExtensions.Register<T>(SvgContainer) SvgIoCContainerExtensions.Resolve<T>(ISvgScope)"
  },
  "api/SharpVectors.IoC.SvgIoCContainerExtensions.html": {
    "href": "api/SharpVectors.IoC.SvgIoCContainerExtensions.html",
    "title": "Class SvgIoCContainerExtensions | SharpVectors Documentation",
    "keywords": "Class SvgIoCContainerExtensions Extension methods for Container Inheritance Object SvgIoCContainerExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.IoC Assembly : SharpVectors.Model.dll Syntax public static class SvgIoCContainerExtensions Methods Register<T>(SvgContainer) Registers a type Declaration public static ISvgRegisteredType Register<T>(this SvgContainer container) Parameters Type Name Description SvgContainer container This container instance Returns Type Description ISvgRegisteredType IRegisteredType object Type Parameters Name Description T Type to register Register<T>(SvgContainer, Func<T>) Registers a factory function which will be called to resolve the specified interface Declaration public static ISvgRegisteredType Register<T>(this SvgContainer container, Func<T> factory) Parameters Type Name Description SvgContainer container This container instance Func <T> factory Factory method Returns Type Description ISvgRegisteredType IRegisteredType object Type Parameters Name Description T Interface to register Register<T>(SvgContainer, Type) Registers an implementation type for the specified interface Declaration public static ISvgRegisteredType Register<T>(this SvgContainer container, Type type) Parameters Type Name Description SvgContainer container This container instance Type type Implementing type Returns Type Description ISvgRegisteredType IRegisteredType object Type Parameters Name Description T Interface to register Register<TInterface, TImplementation>(SvgContainer) Registers an implementation type for the specified interface Declaration public static ISvgRegisteredType Register<TInterface, TImplementation>(this SvgContainer container) Parameters Type Name Description SvgContainer container This container instance Returns Type Description ISvgRegisteredType IRegisteredType object Type Parameters Name Description TInterface Interface to register TImplementation Implementing type Resolve<T>(ISvgScope) Returns an implementation of the specified interface Declaration public static T Resolve<T>(this ISvgScope scope) Parameters Type Name Description ISvgScope scope This scope instance Returns Type Description T Object implementing the interface Type Parameters Name Description T Interface type"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.html",
    "title": "Class CodeSnippetKeyResolver | SharpVectors Documentation",
    "keywords": "Class CodeSnippetKeyResolver Inheritance Object DispatcherObject DependencyObject WpfObject WpfSettings < CodeSnippetKeyResolver > CodeSnippetKeyResolver Implements ICloneable IResourceKeyResolver IXmlSerializable Inherited Members WpfSettings<CodeSnippetKeyResolver>._comparer WpfSettings<CodeSnippetKeyResolver>.IXmlSerializable.GetSchema() WpfSettings<CodeSnippetKeyResolver>.WriteEnum(XmlWriter, String, String) WpfSettings<CodeSnippetKeyResolver>.WriteEnum(XmlWriter, String, String, String) WpfSettings<CodeSnippetKeyResolver>.WriteCData(XmlWriter, String, String) WpfSettings<CodeSnippetKeyResolver>.WriteCData(XmlWriter, String, String, String) WpfSettings<CodeSnippetKeyResolver>.WriteProperty(XmlWriter, String, String) WpfSettings<CodeSnippetKeyResolver>.WriteProperty(XmlWriter, String, String, String) WpfSettings<CodeSnippetKeyResolver>.WriteProperty(XmlWriter, String, Object) WpfSettings<CodeSnippetKeyResolver>.WriteProperty(XmlWriter, String, Boolean) WpfSettings<CodeSnippetKeyResolver>.WriteProperty(XmlWriter, String, Int32) WpfSettings<CodeSnippetKeyResolver>.ICloneable.Clone() WpfObject.NotNull(Object, String) WpfObject.NotNull(String, String) WpfObject.NotEmpty(String, String) WpfObject.NotNullNotEmpty(String, String) WpfObject.NotNullNotEmpty<E>(IList<E>, String) WpfObject.PathMustExist(String, String) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers Assembly : SharpVectors.Rendering.Wpf.dll Syntax [Serializable] public sealed class CodeSnippetKeyResolver : WpfSettings<CodeSnippetKeyResolver>, ICloneable, IResourceKeyResolver, IXmlSerializable Constructors CodeSnippetKeyResolver() Declaration public CodeSnippetKeyResolver() CodeSnippetKeyResolver(String) Declaration public CodeSnippetKeyResolver(string codeSnippet) Parameters Type Name Description String codeSnippet Fields SnippetClass Declaration public const string SnippetClass = \"SharpVectors.Renderers.SnippetKeyResolver\" Field Value Type Description String Properties CodeSnippet Declaration public string CodeSnippet { get; set; } Property Value Type Description String IsValid Gets a value specifying whether the resource key resolver is valid or not. Declaration public bool IsValid { get; } Property Value Type Description Boolean This is true if the resource resolver is valid, otherwise; it is false . ResolverType Gets a value specifying the resource key resolver type. Declaration public ResourceKeyResolverType ResolverType { get; } Property Value Type Description ResourceKeyResolverType An enumeration of the type ResourceKeyResolverType specifying the type of the resource key resolver. Methods BeginResolve() This signals the start of a resource key resolving process. Declaration public void BeginResolve() Clone() Declaration public override CodeSnippetKeyResolver Clone() Returns Type Description CodeSnippetKeyResolver Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.CodeSnippetKeyResolver>.Clone() CompileResolver(String) Declaration public static Tuple<bool, CodeSnippetKeyResolver, string> CompileResolver(string codeSnippet) Parameters Type Name Description String codeSnippet Returns Type Description Tuple < Boolean , CodeSnippetKeyResolver , String > CompileSnippet(String) Declaration public static Tuple<bool, string> CompileSnippet(string codeSnippet) Parameters Type Name Description String codeSnippet Returns Type Description Tuple < Boolean , String > EndResolve() This signals the end of a resource key resolving process. Declaration public void EndResolve() ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. Declaration public override void ReadXml(XmlReader reader) Parameters Type Name Description XmlReader reader The reader with which the XML attributes of this object are accessed. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.CodeSnippetKeyResolver>.ReadXml(System.Xml.XmlReader) Exceptions Type Condition ArgumentNullException If the reader is null . Resolve(DependencyObject, Int32, String, String) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). Declaration public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) Parameters Type Name Description DependencyObject resource The target resource object ( DrawingGroup , DrawingImage ) Int32 index The index of the resource file. String fileName The file name of the SVG file without the extension. String fileSource The source directory of the SVG file. Returns Type Description String A String containing the key to be used to identify the specified resource. This must be at least 3 characters and less than 255 characters. WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. Declaration public override void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer The XML writer with which the XML format of this object's state is written. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.CodeSnippetKeyResolver>.WriteXml(System.Xml.XmlWriter) Exceptions Type Condition ArgumentNullException If the reader is null . Implements System.ICloneable IResourceKeyResolver System.Xml.Serialization.IXmlSerializable"
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.html",
    "title": "Class DictionaryKeyResolver | SharpVectors Documentation",
    "keywords": "Class DictionaryKeyResolver Inheritance Object DispatcherObject DependencyObject WpfObject WpfSettings < DictionaryKeyResolver > DictionaryKeyResolver Implements ICloneable IResourceKeyResolver IXmlSerializable Inherited Members WpfSettings<DictionaryKeyResolver>._comparer WpfSettings<DictionaryKeyResolver>.IXmlSerializable.GetSchema() WpfSettings<DictionaryKeyResolver>.WriteEnum(XmlWriter, String, String) WpfSettings<DictionaryKeyResolver>.WriteEnum(XmlWriter, String, String, String) WpfSettings<DictionaryKeyResolver>.WriteCData(XmlWriter, String, String) WpfSettings<DictionaryKeyResolver>.WriteCData(XmlWriter, String, String, String) WpfSettings<DictionaryKeyResolver>.WriteProperty(XmlWriter, String, String) WpfSettings<DictionaryKeyResolver>.WriteProperty(XmlWriter, String, String, String) WpfSettings<DictionaryKeyResolver>.WriteProperty(XmlWriter, String, Object) WpfSettings<DictionaryKeyResolver>.WriteProperty(XmlWriter, String, Boolean) WpfSettings<DictionaryKeyResolver>.WriteProperty(XmlWriter, String, Int32) WpfSettings<DictionaryKeyResolver>.ICloneable.Clone() WpfObject.NotNull(Object, String) WpfObject.NotNull(String, String) WpfObject.NotEmpty(String, String) WpfObject.NotNullNotEmpty(String, String) WpfObject.NotNullNotEmpty<E>(IList<E>, String) WpfObject.PathMustExist(String, String) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers Assembly : SharpVectors.Rendering.Wpf.dll Syntax [Serializable] public sealed class DictionaryKeyResolver : WpfSettings<DictionaryKeyResolver>, ICloneable, IResourceKeyResolver, IXmlSerializable Constructors DictionaryKeyResolver() Declaration public DictionaryKeyResolver() DictionaryKeyResolver(IDictionary<String, String>) Declaration public DictionaryKeyResolver(IDictionary<string, string> keyDictionary) Parameters Type Name Description IDictionary < String , String > keyDictionary Properties Dictionary Declaration public IDictionary<string, string> Dictionary { get; set; } Property Value Type Description IDictionary < String , String > IsValid Gets a value specifying whether the resource key resolver is valid or not. Declaration public bool IsValid { get; } Property Value Type Description Boolean This is true if the resource resolver is valid, otherwise; it is false . ResolverType Gets a value specifying the resource key resolver type. Declaration public ResourceKeyResolverType ResolverType { get; } Property Value Type Description ResourceKeyResolverType An enumeration of the type ResourceKeyResolverType specifying the type of the resource key resolver. Methods BeginResolve() This signals the start of a resource key resolving process. Declaration public void BeginResolve() Clone() Declaration public override DictionaryKeyResolver Clone() Returns Type Description DictionaryKeyResolver Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.DictionaryKeyResolver>.Clone() EndResolve() This signals the end of a resource key resolving process. Declaration public void EndResolve() ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. Declaration public override void ReadXml(XmlReader reader) Parameters Type Name Description XmlReader reader The reader with which the XML attributes of this object are accessed. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.DictionaryKeyResolver>.ReadXml(System.Xml.XmlReader) Exceptions Type Condition ArgumentNullException If the reader is null . Resolve(DependencyObject, Int32, String, String) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). Declaration public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) Parameters Type Name Description DependencyObject resource The target resource object ( DrawingGroup , DrawingImage ) Int32 index The index of the resource file. String fileName The file name of the SVG file without the extension. String fileSource The source directory of the SVG file. Returns Type Description String A String containing the key to be used to identify the specified resource. This must be at least 3 characters and less than 255 characters. WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. Declaration public override void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer The XML writer with which the XML format of this object's state is written. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.DictionaryKeyResolver>.WriteXml(System.Xml.XmlWriter) Exceptions Type Condition ArgumentNullException If the reader is null . Implements System.ICloneable IResourceKeyResolver System.Xml.Serialization.IXmlSerializable"
  },
  "api/SharpVectors.Renderers.html": {
    "href": "api/SharpVectors.Renderers.html",
    "title": "Namespace SharpVectors.Renderers | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Renderers Classes CodeSnippetKeyResolver DictionaryKeyResolver ResourceKeyResolver The default implememation of the IResourceKeyResolver interface. It implementations the default method of resolving the resource key; either by the unmodified SVG file name, or a formatted name using the file name and/or resource index if a format string is provided. WpfObject WpfSettings<T> This is the typed or generic abstract base class for most objects in this build library, and it defines the basic cloneable and serialization interfaces. This is used as the base object to create components object hierarchy. Interfaces IResourceKeyResolver An interface for resolving the resource key of a resource object ( DrawingGroup , DrawingImage ) generated by the resource dictionary converter. Enums ResourceAccessType A value specifying the referencing or access resource dictionary ( DynamicResource , StaticResource ). ResourceKeyResolverType A value specifiying the resource key resolver type. ResourceModeType A value specifying the root resource element ( DrawingGroup , DrawingImage )."
  },
  "api/SharpVectors.Renderers.IResourceKeyResolver.html": {
    "href": "api/SharpVectors.Renderers.IResourceKeyResolver.html",
    "title": "Interface IResourceKeyResolver | SharpVectors Documentation",
    "keywords": "Interface IResourceKeyResolver An interface for resolving the resource key of a resource object ( DrawingGroup , DrawingImage ) generated by the resource dictionary converter. Inherited Members IXmlSerializable.GetSchema() IXmlSerializable.ReadXml(XmlReader) IXmlSerializable.WriteXml(XmlWriter) Namespace : SharpVectors.Renderers Assembly : SharpVectors.Rendering.Wpf.dll Syntax public interface IResourceKeyResolver : IXmlSerializable Properties IsValid Gets a value specifying whether the resource key resolver is valid or not. Declaration bool IsValid { get; } Property Value Type Description Boolean This is true if the resource resolver is valid, otherwise; it is false . ResolverType Gets a value specifying the resource key resolver type. Declaration ResourceKeyResolverType ResolverType { get; } Property Value Type Description ResourceKeyResolverType An enumeration of the type ResourceKeyResolverType specifying the type of the resource key resolver. Methods BeginResolve() This signals the start of a resource key resolving process. Declaration void BeginResolve() EndResolve() This signals the end of a resource key resolving process. Declaration void EndResolve() Resolve(DependencyObject, Int32, String, String) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). Declaration string Resolve(DependencyObject resource, int index, string fileName, string fileSource) Parameters Type Name Description DependencyObject resource The target resource object ( DrawingGroup , DrawingImage ) Int32 index The index of the resource file. String fileName The file name of the SVG file without the extension. String fileSource The source directory of the SVG file. Returns Type Description String A String containing the key to be used to identify the specified resource. This must be at least 3 characters and less than 255 characters."
  },
  "api/SharpVectors.Renderers.ResourceAccessType.html": {
    "href": "api/SharpVectors.Renderers.ResourceAccessType.html",
    "title": "Enum ResourceAccessType | SharpVectors Documentation",
    "keywords": "Enum ResourceAccessType A value specifying the referencing or access resource dictionary ( DynamicResource , StaticResource ). Namespace : SharpVectors.Renderers Assembly : SharpVectors.Rendering.Wpf.dll Syntax public enum ResourceAccessType Fields Dynamic None Static Name Description Dynamic Indicates the resource referencing is dynamic, DynamicResource . None Indicates the resource referencing type is not specified. Static Indicates the resource referencing is static, StaticResource ."
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.html",
    "title": "Class ResourceKeyResolver | SharpVectors Documentation",
    "keywords": "Class ResourceKeyResolver The default implememation of the IResourceKeyResolver interface. It implementations the default method of resolving the resource key; either by the unmodified SVG file name, or a formatted name using the file name and/or resource index if a format string is provided. Inheritance Object DispatcherObject DependencyObject WpfObject WpfSettings < ResourceKeyResolver > ResourceKeyResolver Implements ICloneable IResourceKeyResolver IXmlSerializable Inherited Members WpfSettings<ResourceKeyResolver>._comparer WpfSettings<ResourceKeyResolver>.IXmlSerializable.GetSchema() WpfSettings<ResourceKeyResolver>.WriteEnum(XmlWriter, String, String) WpfSettings<ResourceKeyResolver>.WriteEnum(XmlWriter, String, String, String) WpfSettings<ResourceKeyResolver>.WriteCData(XmlWriter, String, String) WpfSettings<ResourceKeyResolver>.WriteCData(XmlWriter, String, String, String) WpfSettings<ResourceKeyResolver>.WriteProperty(XmlWriter, String, String) WpfSettings<ResourceKeyResolver>.WriteProperty(XmlWriter, String, String, String) WpfSettings<ResourceKeyResolver>.WriteProperty(XmlWriter, String, Object) WpfSettings<ResourceKeyResolver>.WriteProperty(XmlWriter, String, Boolean) WpfSettings<ResourceKeyResolver>.WriteProperty(XmlWriter, String, Int32) WpfSettings<ResourceKeyResolver>.ICloneable.Clone() WpfObject.NotNull(Object, String) WpfObject.NotNull(String, String) WpfObject.NotEmpty(String, String) WpfObject.NotNullNotEmpty(String, String) WpfObject.NotNullNotEmpty<E>(IList<E>, String) WpfObject.PathMustExist(String, String) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers Assembly : SharpVectors.Rendering.Wpf.dll Syntax [Serializable] public sealed class ResourceKeyResolver : WpfSettings<ResourceKeyResolver>, ICloneable, IResourceKeyResolver, IXmlSerializable Constructors ResourceKeyResolver() Declaration public ResourceKeyResolver() ResourceKeyResolver(String) Declaration public ResourceKeyResolver(string nameFormat) Parameters Type Name Description String nameFormat Fields DefaultBrushNameFormat Declaration public static readonly string DefaultBrushNameFormat Field Value Type Description String DefaultColorNameFormat Declaration public static readonly string DefaultColorNameFormat Field Value Type Description String DefaultPenNameFormat Declaration public static readonly string DefaultPenNameFormat Field Value Type Description String DefaultResourceNameFormat Declaration public static readonly string DefaultResourceNameFormat Field Value Type Description String TagName Declaration public static readonly string TagName Field Value Type Description String TagNumber Declaration public static readonly string TagNumber Field Value Type Description String XmlTagName Declaration public static readonly string XmlTagName Field Value Type Description String Properties IsValid Gets a value specifying whether the resource key resolver is valid or not. Declaration public bool IsValid { get; } Property Value Type Description Boolean This is true if the resource resolver is valid, otherwise; it is false . NameFormat Declaration public string NameFormat { get; set; } Property Value Type Description String ResolverType Gets a value specifying the resource key resolver type. Declaration public ResourceKeyResolverType ResolverType { get; } Property Value Type Description ResourceKeyResolverType An enumeration of the type ResourceKeyResolverType specifying the type of the resource key resolver. Methods BeginResolve() This signals the start of a resource key resolving process. Declaration public void BeginResolve() Clone() Declaration public override ResourceKeyResolver Clone() Returns Type Description ResourceKeyResolver Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.ResourceKeyResolver>.Clone() EndResolve() This signals the end of a resource key resolving process. Declaration public void EndResolve() GetResolver(ResourceKeyResolverType) Declaration public static Func<IResourceKeyResolver> GetResolver(ResourceKeyResolverType keyResolverType) Parameters Type Name Description ResourceKeyResolverType keyResolverType Returns Type Description Func < IResourceKeyResolver > ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. Declaration public override void ReadXml(XmlReader reader) Parameters Type Name Description XmlReader reader The reader with which the XML attributes of this object are accessed. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.ResourceKeyResolver>.ReadXml(System.Xml.XmlReader) Exceptions Type Condition ArgumentNullException If the reader is null . Resolve(DependencyObject, Int32, String, String) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). Declaration public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) Parameters Type Name Description DependencyObject resource The target resource object ( DrawingGroup , DrawingImage ) Int32 index The index of the resource file. String fileName The file name of the SVG file without the extension. String fileSource The source directory of the SVG file. Returns Type Description String A String containing the key to be used to identify the specified resource. This must be at least 3 characters and less than 255 characters. ValidateNameFormat(String, Boolean) Declaration public static bool ValidateNameFormat(string nameFormat, bool isRequired) Parameters Type Name Description String nameFormat Boolean isRequired Returns Type Description Boolean ValidateResourceNameFormat(String) Declaration public static bool ValidateResourceNameFormat(string nameFormat) Parameters Type Name Description String nameFormat Returns Type Description Boolean WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. Declaration public override void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer The XML writer with which the XML format of this object's state is written. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.ResourceKeyResolver>.WriteXml(System.Xml.XmlWriter) Exceptions Type Condition ArgumentNullException If the reader is null . Implements System.ICloneable IResourceKeyResolver System.Xml.Serialization.IXmlSerializable"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolverType.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolverType.html",
    "title": "Enum ResourceKeyResolverType | SharpVectors Documentation",
    "keywords": "Enum ResourceKeyResolverType A value specifiying the resource key resolver type. Namespace : SharpVectors.Renderers Assembly : SharpVectors.Rendering.Wpf.dll Syntax public enum ResourceKeyResolverType Fields CodeSnippet Custom Default Dictionary None Name Description CodeSnippet A user-defined C# code-based callback method for resolving the resource key. It is compiled and run at runtime in memory. Custom A custom or user-defined resource key resolver. It implements the IResourceKeyResolver interface. Default The default resource key resolver. On error, any defined resolver will fallback to the default resource resolver. Dictionary A dictionary-based resource key resolver. None Indicates an unspecified or unknown resource key resolver."
  },
  "api/SharpVectors.Renderers.ResourceModeType.html": {
    "href": "api/SharpVectors.Renderers.ResourceModeType.html",
    "title": "Enum ResourceModeType | SharpVectors Documentation",
    "keywords": "Enum ResourceModeType A value specifying the root resource element ( DrawingGroup , DrawingImage ). Namespace : SharpVectors.Renderers Assembly : SharpVectors.Rendering.Wpf.dll Syntax public enum ResourceModeType Fields Drawing Image None Name Description Drawing Indicates the DrawingGroup as the root resource element. Image Indicates the DrawingImage as the root resource element. None Indicates the root element is not specified."
  },
  "api/SharpVectors.Renderers.Texts.html": {
    "href": "api/SharpVectors.Renderers.Texts.html",
    "title": "Namespace SharpVectors.Renderers.Texts | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Renderers.Texts Classes WpfFontTextBuilder WpfGlyphTextBuilder WpfHorzTextRenderer WpfPathTextBuilder This is the text-path builder, which handles the rendering using the text-builder objects, WpfTextBuilder , to convert the text characters to geometric representations. WpfPathTextRenderer WpfPathTextRun This defines the information required to render a text-run on a path. WpfSvgTextBuilder WpfTextBuilder WpfTextContext WpfTextPlacement WpfTextRenderer WpfTextRun WpfVertTextRenderer Structs WpfTextPosition WpfTextStringFormat Enums WpfTextAnchor"
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.html",
    "title": "Class WpfFontTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfFontTextBuilder Inheritance Object WpfTextBuilder WpfFontTextBuilder Inherited Members WpfTextBuilder._fontName WpfTextBuilder._fontSize WpfTextBuilder._fontUri WpfTextBuilder._dpiX WpfTextBuilder._dpiY WpfTextBuilder._buildPathGeometry WpfTextBuilder._culture WpfTextBuilder._textDecorations WpfTextBuilder.Create(FontFamily, CultureInfo, Double) WpfTextBuilder.Create(FontFamily, FontStyle, FontWeight, CultureInfo, Double) WpfTextBuilder.Create(String, CultureInfo, Double) WpfTextBuilder.Create(WpfFontFamilyInfo, CultureInfo, Double) WpfTextBuilder.Culture WpfTextBuilder.XmlLang WpfTextBuilder.FontName WpfTextBuilder.FontSize WpfTextBuilder.FontSizeInPoints WpfTextBuilder.FontUri WpfTextBuilder.PixelsPerInchX WpfTextBuilder.PixelsPerInchY WpfTextBuilder.DpiScaleX WpfTextBuilder.DpiScaleY WpfTextBuilder.PixelsPerDip WpfTextBuilder.BuildPathGeometry WpfTextBuilder.Baseline WpfTextBuilder.FlowDirection WpfTextBuilder.TextAlignment WpfTextBuilder.Trimming WpfTextBuilder.TextDecorations Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfFontTextBuilder : WpfTextBuilder Constructors WpfFontTextBuilder(WpfFontFamilyInfo, CultureInfo, Double) Declaration public WpfFontTextBuilder(WpfFontFamilyInfo familyInfo, CultureInfo culture, double fontSize) Parameters Type Name Description WpfFontFamilyInfo familyInfo CultureInfo culture Double fontSize WpfFontTextBuilder(CultureInfo, Double) Declaration public WpfFontTextBuilder(CultureInfo culture, double fontSize) Parameters Type Name Description CultureInfo culture Double fontSize WpfFontTextBuilder(CultureInfo, String, Double, Uri) Declaration public WpfFontTextBuilder(CultureInfo culture, string fontName, double fontSize, Uri fontUri = null) Parameters Type Name Description CultureInfo culture String fontName Double fontSize Uri fontUri WpfFontTextBuilder(FontFamily, CultureInfo, Double) Declaration public WpfFontTextBuilder(FontFamily fontFamily, CultureInfo culture, double fontSize) Parameters Type Name Description FontFamily fontFamily CultureInfo culture Double fontSize WpfFontTextBuilder(FontFamily, FontStyle, FontWeight, CultureInfo, Double) Declaration public WpfFontTextBuilder(FontFamily fontFamily, FontStyle fontStyle, FontWeight fontWeight, CultureInfo culture, double fontSize) Parameters Type Name Description FontFamily fontFamily FontStyle fontStyle FontWeight fontWeight CultureInfo culture Double fontSize Properties Alphabetic Declaration public override double Alphabetic { get; } Property Value Type Description Double Overrides WpfTextBuilder.Alphabetic Ascent Declaration public override double Ascent { get; } Property Value Type Description Double Overrides WpfTextBuilder.Ascent FontFamilyType Declaration public override WpfFontFamilyType FontFamilyType { get; } Property Value Type Description WpfFontFamilyType Overrides WpfTextBuilder.FontFamilyType IsBoldSimulated Declaration public override bool IsBoldSimulated { get; } Property Value Type Description Boolean Overrides WpfTextBuilder.IsBoldSimulated IsObliqueSimulated Declaration public override bool IsObliqueSimulated { get; } Property Value Type Description Boolean Overrides WpfTextBuilder.IsObliqueSimulated OverlinePosition Declaration public override double OverlinePosition { get; } Property Value Type Description Double Overrides WpfTextBuilder.OverlinePosition OverlineThickness Declaration public override double OverlineThickness { get; } Property Value Type Description Double Overrides WpfTextBuilder.OverlineThickness StrikethroughPosition Declaration public override double StrikethroughPosition { get; } Property Value Type Description Double Overrides WpfTextBuilder.StrikethroughPosition StrikethroughThickness Declaration public override double StrikethroughThickness { get; } Property Value Type Description Double Overrides WpfTextBuilder.StrikethroughThickness UnderlinePosition Declaration public override double UnderlinePosition { get; } Property Value Type Description Double Overrides WpfTextBuilder.UnderlinePosition UnderlineThickness Declaration public override double UnderlineThickness { get; } Property Value Type Description Double Overrides WpfTextBuilder.UnderlineThickness Width Declaration public override double Width { get; } Property Value Type Description Double Overrides WpfTextBuilder.Width XHeight Declaration public override double XHeight { get; } Property Value Type Description Double Overrides WpfTextBuilder.XHeight Methods Build(SvgTextContentElement, String, Double, Double) Declaration public override Geometry Build(SvgTextContentElement element, string text, double x, double y) Parameters Type Name Description SvgTextContentElement element String text Double x Double y Returns Type Description Geometry Overrides WpfTextBuilder.Build(SvgTextContentElement, String, Double, Double) MeasureChars(SvgTextContentElement, String, Boolean) Declaration public override IList<Rect> MeasureChars(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters Type Name Description SvgTextContentElement element String text Boolean canBeWhitespace Returns Type Description IList < Rect > Overrides WpfTextBuilder.MeasureChars(SvgTextContentElement, String, Boolean) MeasureText(SvgTextContentElement, String, Boolean) Declaration public override Size MeasureText(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters Type Name Description SvgTextContentElement element String text Boolean canBeWhitespace Returns Type Description Size Overrides WpfTextBuilder.MeasureText(SvgTextContentElement, String, Boolean)"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.html",
    "title": "Class WpfGlyphTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfGlyphTextBuilder Inheritance Object WpfTextBuilder WpfGlyphTextBuilder Inherited Members WpfTextBuilder._fontName WpfTextBuilder._fontSize WpfTextBuilder._fontUri WpfTextBuilder._dpiX WpfTextBuilder._dpiY WpfTextBuilder._buildPathGeometry WpfTextBuilder._culture WpfTextBuilder._textDecorations WpfTextBuilder.Create(FontFamily, CultureInfo, Double) WpfTextBuilder.Create(FontFamily, FontStyle, FontWeight, CultureInfo, Double) WpfTextBuilder.Create(String, CultureInfo, Double) WpfTextBuilder.Create(WpfFontFamilyInfo, CultureInfo, Double) WpfTextBuilder.Culture WpfTextBuilder.XmlLang WpfTextBuilder.FontName WpfTextBuilder.FontSize WpfTextBuilder.FontSizeInPoints WpfTextBuilder.FontUri WpfTextBuilder.PixelsPerInchX WpfTextBuilder.PixelsPerInchY WpfTextBuilder.DpiScaleX WpfTextBuilder.DpiScaleY WpfTextBuilder.PixelsPerDip WpfTextBuilder.BuildPathGeometry WpfTextBuilder.FlowDirection WpfTextBuilder.TextAlignment WpfTextBuilder.Trimming WpfTextBuilder.TextDecorations Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfGlyphTextBuilder : WpfTextBuilder Constructors WpfGlyphTextBuilder(WpfFontFamilyInfo, CultureInfo, Double) Declaration public WpfGlyphTextBuilder(WpfFontFamilyInfo familyInfo, CultureInfo culture, double fontSize) Parameters Type Name Description WpfFontFamilyInfo familyInfo CultureInfo culture Double fontSize WpfGlyphTextBuilder(CultureInfo, Double) Declaration public WpfGlyphTextBuilder(CultureInfo culture, double fontSize) Parameters Type Name Description CultureInfo culture Double fontSize WpfGlyphTextBuilder(CultureInfo, String, Double, Uri) Declaration public WpfGlyphTextBuilder(CultureInfo culture, string fontName, double fontSize, Uri fontUri = null) Parameters Type Name Description CultureInfo culture String fontName Double fontSize Uri fontUri WpfGlyphTextBuilder(FontFamily, CultureInfo, Double) Declaration public WpfGlyphTextBuilder(FontFamily fontFamily, CultureInfo culture, double fontSize) Parameters Type Name Description FontFamily fontFamily CultureInfo culture Double fontSize WpfGlyphTextBuilder(FontFamily, FontStyle, FontWeight, CultureInfo, Double) Declaration public WpfGlyphTextBuilder(FontFamily fontFamily, FontStyle fontStyle, FontWeight fontWeight, CultureInfo culture, double fontSize) Parameters Type Name Description FontFamily fontFamily FontStyle fontStyle FontWeight fontWeight CultureInfo culture Double fontSize Properties Alphabetic Declaration public override double Alphabetic { get; } Property Value Type Description Double Overrides WpfTextBuilder.Alphabetic Ascent Declaration public override double Ascent { get; } Property Value Type Description Double Overrides WpfTextBuilder.Ascent Baseline Declaration public override double Baseline { get; } Property Value Type Description Double Overrides WpfTextBuilder.Baseline BidiLevel Gets or sets the bidirectional nesting level of Glyphs. Declaration public int BidiLevel { get; set; } Property Value Type Description Int32 An Int32 value that represents the bidirectional nesting level. DeviceFontName Gets or sets the specific device font for which the Glyphs object has been optimized. Declaration public string DeviceFontName { get; set; } Property Value Type Description String A String value that represents the name of the device font. FontFamilyType Declaration public override WpfFontFamilyType FontFamilyType { get; } Property Value Type Description WpfFontFamilyType Overrides WpfTextBuilder.FontFamilyType IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. Declaration public override bool IsBoldSimulated { get; } Property Value Type Description Boolean true if bold simulation is used for glyphs; otherwise, false. Overrides WpfTextBuilder.IsBoldSimulated IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. Declaration public override bool IsObliqueSimulated { get; } Property Value Type Description Boolean true if italic simulation is used for glyphs; otherwise, false. Overrides WpfTextBuilder.IsObliqueSimulated IsSideways Declaration public bool IsSideways { get; set; } Property Value Type Description Boolean OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. Declaration public override double OverlinePosition { get; } Property Value Type Description Double A Double that indicates the overline position, measured from the baseline and expressed as a fraction of the font em size. Overrides WpfTextBuilder.OverlinePosition OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. Declaration public override double OverlineThickness { get; } Property Value Type Description Double A Double that indicates the overline thickness, expressed as a fraction of the font em size. Overrides WpfTextBuilder.OverlineThickness StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. Declaration public override double StrikethroughPosition { get; } Property Value Type Description Double A Double that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size. Overrides WpfTextBuilder.StrikethroughPosition StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. Declaration public override double StrikethroughThickness { get; } Property Value Type Description Double A Double that indicates the strikethrough thickness, expressed as a fraction of the font em size. Overrides WpfTextBuilder.StrikethroughThickness UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. Declaration public override double UnderlinePosition { get; } Property Value Type Description Double A Double that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size. Overrides WpfTextBuilder.UnderlinePosition UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. Declaration public override double UnderlineThickness { get; } Property Value Type Description Double A Double that indicates the underline thickness, expressed as a fraction of the font em size. Overrides WpfTextBuilder.UnderlineThickness Width Declaration public override double Width { get; } Property Value Type Description Double Overrides WpfTextBuilder.Width XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. Declaration public override double XHeight { get; } Property Value Type Description Double A Double that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size. Overrides WpfTextBuilder.XHeight Methods Build(SvgTextContentElement, String, Double, Double) Declaration public override Geometry Build(SvgTextContentElement element, string text, double x, double y) Parameters Type Name Description SvgTextContentElement element String text Double x Double y Returns Type Description Geometry Overrides WpfTextBuilder.Build(SvgTextContentElement, String, Double, Double) MeasureChars(SvgTextContentElement, String, Boolean) Declaration public override IList<Rect> MeasureChars(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters Type Name Description SvgTextContentElement element String text Boolean canBeWhitespace Returns Type Description IList < Rect > Overrides WpfTextBuilder.MeasureChars(SvgTextContentElement, String, Boolean) MeasureText(SvgTextContentElement, String, Boolean) Declaration public override Size MeasureText(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters Type Name Description SvgTextContentElement element String text Boolean canBeWhitespace Returns Type Description Size Overrides WpfTextBuilder.MeasureText(SvgTextContentElement, String, Boolean)"
  },
  "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.html",
    "title": "Class WpfHorzTextRenderer | SharpVectors Documentation",
    "keywords": "Class WpfHorzTextRenderer Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfTextRenderer WpfHorzTextRenderer Implements IDisposable Inherited Members WpfTextRenderer.Whitespace WpfTextRenderer.NonBreakingChar WpfTextRenderer.NonBreaking WpfTextRenderer._tabNewline WpfTextRenderer._decimalNumber WpfTextRenderer._multipleSpaces WpfTextRenderer._actualFontName WpfTextRenderer._drawContext WpfTextRenderer._textElement WpfTextRenderer._textRendering WpfTextRenderer.IsInitialized WpfTextRenderer.DrawContext WpfTextRenderer.TextElement WpfTextRenderer.IsMeasuring WpfTextRenderer.IsTextPath WpfTextRenderer.TextWidth WpfTextRenderer.TextCulture WpfTextRenderer.TextContext WpfTextRenderer.SetElement(SvgTextBaseElement) WpfTextRenderer.Initialize(DrawingContext, WpfDrawingContext) WpfTextRenderer.Uninitialize() WpfTextRenderer.TrimText(SvgTextContentElement, String) WpfTextRenderer.GetText(SvgTextContentElement, XmlNode, XmlNode) WpfTextRenderer.GetText(SvgTRefElement) WpfTextRenderer.GetText(SvgAltGlyphElement) WpfTextRenderer.GetComputedFontSize(SvgTextContentElement) WpfTextRenderer.SetTextWidth(Double) WpfTextRenderer.AddTextWidth(Point, Double) WpfTextRenderer.GetBrush() WpfTextRenderer.GetPen() WpfTextRenderer.ExtractTextPathGeometry(Geometry) WpfTextRenderer.GetTextFontWeight(String) WpfTextRenderer.GetTextFontWeight(SvgTextContentElement) WpfTextRenderer.GetBolderFontWeight(String) WpfTextRenderer.GetLighterFontWeight(String) WpfTextRenderer.GetTextFontStyle(SvgTextContentElement) WpfTextRenderer.GetTextFontStyle(String) WpfTextRenderer.GetTextFontStretch(SvgTextContentElement) WpfTextRenderer.GetTextDecoration(SvgTextContentElement) WpfTextRenderer.GetTextFontFamilyInfo(SvgTextContentElement) WpfTextRenderer.GetTextFontFamily(SvgTextContentElement) WpfTextRenderer.GetTextStringFormat(SvgTextContentElement) WpfTextRenderer.Dispose(Boolean) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfHorzTextRenderer : WpfTextRenderer, IDisposable Constructors WpfHorzTextRenderer(SvgTextBaseElement, WpfTextRendering) Declaration public WpfHorzTextRenderer(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters Type Name Description SvgTextBaseElement textElement WpfTextRendering textRendering Methods RenderText(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Declaration public override void RenderText(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters Type Name Description SvgTextContentElement element Point ctp String text Double rotate WpfTextPlacement placement Overrides WpfTextRenderer.RenderText(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) RenderTextRun(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Declaration public override void RenderTextRun(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters Type Name Description SvgTextContentElement element Point ctp String text Double rotate WpfTextPlacement placement Overrides WpfTextRenderer.RenderTextRun(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.html",
    "title": "Class WpfPathTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfPathTextBuilder This is the text-path builder, which handles the rendering using the text-builder objects, WpfTextBuilder , to convert the text characters to geometric representations. Inheritance Object WpfPathTextBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfPathTextBuilder Constructors WpfPathTextBuilder(SvgTextBaseElement) Declaration public WpfPathTextBuilder(SvgTextBaseElement textElement) Parameters Type Name Description SvgTextBaseElement textElement Methods AddTextRun(WpfPathTextRun, String, Point, Brush, Pen) Declaration public void AddTextRun(WpfPathTextRun pathTextRun, string text, Point textPos, Brush textBrush, Pen textPen) Parameters Type Name Description WpfPathTextRun pathTextRun String text Point textPos Brush textBrush Pen textPen BeginTextPath(SvgTextPathElement) Declaration public void BeginTextPath(SvgTextPathElement svgElement) Parameters Type Name Description SvgTextPathElement svgElement EndTextPath() Declaration public void EndTextPath() RenderTextPath(DrawingContext, PathGeometry, TextAlignment) Declaration public void RenderTextPath(DrawingContext dc, PathGeometry pathGeometry, TextAlignment pathAlignment) Parameters Type Name Description DrawingContext dc PathGeometry pathGeometry TextAlignment pathAlignment"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.html",
    "title": "Class WpfPathTextRenderer | SharpVectors Documentation",
    "keywords": "Class WpfPathTextRenderer Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfTextRenderer WpfPathTextRenderer Implements IDisposable Inherited Members WpfTextRenderer.Whitespace WpfTextRenderer.NonBreakingChar WpfTextRenderer.NonBreaking WpfTextRenderer._tabNewline WpfTextRenderer._decimalNumber WpfTextRenderer._multipleSpaces WpfTextRenderer._actualFontName WpfTextRenderer._drawContext WpfTextRenderer._textElement WpfTextRenderer._textRendering WpfTextRenderer.IsInitialized WpfTextRenderer.DrawContext WpfTextRenderer.TextElement WpfTextRenderer.IsMeasuring WpfTextRenderer.IsTextPath WpfTextRenderer.TextWidth WpfTextRenderer.TextCulture WpfTextRenderer.TextContext WpfTextRenderer.SetElement(SvgTextBaseElement) WpfTextRenderer.Initialize(DrawingContext, WpfDrawingContext) WpfTextRenderer.Uninitialize() WpfTextRenderer.TrimText(SvgTextContentElement, String) WpfTextRenderer.GetText(SvgTextContentElement, XmlNode, XmlNode) WpfTextRenderer.GetText(SvgTRefElement) WpfTextRenderer.GetText(SvgAltGlyphElement) WpfTextRenderer.GetComputedFontSize(SvgTextContentElement) WpfTextRenderer.SetTextWidth(Double) WpfTextRenderer.AddTextWidth(Point, Double) WpfTextRenderer.GetBrush() WpfTextRenderer.GetPen() WpfTextRenderer.ExtractTextPathGeometry(Geometry) WpfTextRenderer.GetTextFontWeight(String) WpfTextRenderer.GetTextFontWeight(SvgTextContentElement) WpfTextRenderer.GetBolderFontWeight(String) WpfTextRenderer.GetLighterFontWeight(String) WpfTextRenderer.GetTextFontStyle(SvgTextContentElement) WpfTextRenderer.GetTextFontStyle(String) WpfTextRenderer.GetTextFontStretch(SvgTextContentElement) WpfTextRenderer.GetTextDecoration(SvgTextContentElement) WpfTextRenderer.GetTextFontFamilyInfo(SvgTextContentElement) WpfTextRenderer.GetTextFontFamily(SvgTextContentElement) WpfTextRenderer.GetTextStringFormat(SvgTextContentElement) WpfTextRenderer.Dispose(Boolean) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfPathTextRenderer : WpfTextRenderer, IDisposable Constructors WpfPathTextRenderer(SvgTextBaseElement, WpfTextRendering) Declaration public WpfPathTextRenderer(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters Type Name Description SvgTextBaseElement textElement WpfTextRendering textRendering Methods RenderText(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Declaration public override void RenderText(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters Type Name Description SvgTextContentElement element Point ctp String text Double rotate WpfTextPlacement placement Overrides WpfTextRenderer.RenderText(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) RenderTextRun(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Declaration public override void RenderTextRun(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters Type Name Description SvgTextContentElement element Point ctp String text Double rotate WpfTextPlacement placement Overrides WpfTextRenderer.RenderTextRun(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.html",
    "title": "Class WpfPathTextRun | SharpVectors Documentation",
    "keywords": "Class WpfPathTextRun This defines the information required to render a text-run on a path. Inheritance Object WpfPathTextRun Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfPathTextRun Constructors WpfPathTextRun(SvgTextContentElement, WpfTextBuilder) Declaration public WpfPathTextRun(SvgTextContentElement textElement, WpfTextBuilder textBuilder) Parameters Type Name Description SvgTextContentElement textElement WpfTextBuilder textBuilder Properties Brush Declaration public Brush Brush { get; } Property Value Type Description Brush Builder Declaration public WpfTextBuilder Builder { get; } Property Value Type Description WpfTextBuilder Element Declaration public SvgTextContentElement Element { get; } Property Value Type Description SvgTextContentElement Pen Declaration public Pen Pen { get; } Property Value Type Description Pen Position Declaration public Point Position { get; } Property Value Type Description Point StartOffset Declaration public ISvgAnimatedLength StartOffset { get; } Property Value Type Description ISvgAnimatedLength Text Declaration public string Text { get; } Property Value Type Description String Methods AddRun(Geometry) Declaration public void AddRun(Geometry textPath) Parameters Type Name Description Geometry textPath Initialize(String, Brush, Pen) Declaration public void Initialize(string text, Brush brush, Pen pen) Parameters Type Name Description String text Brush brush Pen pen RenderRun(DrawingContext) Declaration public void RenderRun(DrawingContext context) Parameters Type Name Description DrawingContext context SetPosition(Point, SvgTextPathElement, SvgTextBaseElement) Declaration public void SetPosition(Point pos, SvgTextPathElement pathElement, SvgTextBaseElement textElement) Parameters Type Name Description Point pos SvgTextPathElement pathElement SvgTextBaseElement textElement UnInitialize() Declaration public void UnInitialize()"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.html",
    "title": "Class WpfSvgTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfSvgTextBuilder Inheritance Object WpfTextBuilder WpfSvgTextBuilder Inherited Members WpfTextBuilder._fontName WpfTextBuilder._fontSize WpfTextBuilder._fontUri WpfTextBuilder._dpiX WpfTextBuilder._dpiY WpfTextBuilder._buildPathGeometry WpfTextBuilder._culture WpfTextBuilder._textDecorations WpfTextBuilder.Create(FontFamily, CultureInfo, Double) WpfTextBuilder.Create(FontFamily, FontStyle, FontWeight, CultureInfo, Double) WpfTextBuilder.Create(String, CultureInfo, Double) WpfTextBuilder.Create(WpfFontFamilyInfo, CultureInfo, Double) WpfTextBuilder.Culture WpfTextBuilder.XmlLang WpfTextBuilder.FontName WpfTextBuilder.FontSize WpfTextBuilder.FontSizeInPoints WpfTextBuilder.FontUri WpfTextBuilder.PixelsPerInchX WpfTextBuilder.PixelsPerInchY WpfTextBuilder.DpiScaleX WpfTextBuilder.DpiScaleY WpfTextBuilder.PixelsPerDip WpfTextBuilder.BuildPathGeometry WpfTextBuilder.Baseline WpfTextBuilder.FlowDirection WpfTextBuilder.TextAlignment WpfTextBuilder.Trimming WpfTextBuilder.TextDecorations Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfSvgTextBuilder : WpfTextBuilder Constructors WpfSvgTextBuilder(SvgFontElement, CultureInfo, String, Double, Uri) Declaration public WpfSvgTextBuilder(SvgFontElement font, CultureInfo culture, string fontName, double fontSize, Uri fontUri = null) Parameters Type Name Description SvgFontElement font CultureInfo culture String fontName Double fontSize Uri fontUri WpfSvgTextBuilder(CultureInfo, SvgFontElement, Double) Declaration public WpfSvgTextBuilder(CultureInfo culture, SvgFontElement font, double fontSize) Parameters Type Name Description CultureInfo culture SvgFontElement font Double fontSize Properties Alphabetic Declaration public override double Alphabetic { get; } Property Value Type Description Double Overrides WpfTextBuilder.Alphabetic Ascent Declaration public override double Ascent { get; } Property Value Type Description Double Overrides WpfTextBuilder.Ascent FontFamily Declaration public FontFamily FontFamily { get; set; } Property Value Type Description FontFamily FontFamilyType Declaration public override WpfFontFamilyType FontFamilyType { get; } Property Value Type Description WpfFontFamilyType Overrides WpfTextBuilder.FontFamilyType FontStyle Declaration public FontStyle FontStyle { get; set; } Property Value Type Description FontStyle FontVariant Declaration public string FontVariant { get; set; } Property Value Type Description String FontWeight Declaration public FontWeight FontWeight { get; set; } Property Value Type Description FontWeight HasUnicodeRange Declaration public bool HasUnicodeRange { get; } Property Value Type Description Boolean IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. Declaration public override bool IsBoldSimulated { get; } Property Value Type Description Boolean true if bold simulation is used for glyphs; otherwise, false. Overrides WpfTextBuilder.IsBoldSimulated IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. Declaration public override bool IsObliqueSimulated { get; } Property Value Type Description Boolean true if italic simulation is used for glyphs; otherwise, false. Overrides WpfTextBuilder.IsObliqueSimulated OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. Declaration public override double OverlinePosition { get; } Property Value Type Description Double A Single that indicates the overline position, measured from the baseline and expressed as a fraction of the font em size. Overrides WpfTextBuilder.OverlinePosition Remarks attribute name = \"overline-position\" {number} OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. Declaration public override double OverlineThickness { get; } Property Value Type Description Double A Single that indicates the overline thickness, expressed as a fraction of the font em size. Overrides WpfTextBuilder.OverlineThickness Remarks attribute name = \"overline-thickness\" {number} StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. Declaration public override double StrikethroughPosition { get; } Property Value Type Description Double A Double that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size. Overrides WpfTextBuilder.StrikethroughPosition StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. Declaration public override double StrikethroughThickness { get; } Property Value Type Description Double A Double that indicates the strikethrough thickness, expressed as a fraction of the font em size. Overrides WpfTextBuilder.StrikethroughThickness UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. Declaration public override double UnderlinePosition { get; } Property Value Type Description Double A Double that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size. Overrides WpfTextBuilder.UnderlinePosition UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. Declaration public override double UnderlineThickness { get; } Property Value Type Description Double A Double that indicates the underline thickness, expressed as a fraction of the font em size. Overrides WpfTextBuilder.UnderlineThickness Width Declaration public override double Width { get; } Property Value Type Description Double Overrides WpfTextBuilder.Width XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. Declaration public override double XHeight { get; } Property Value Type Description Double A Double that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size. Overrides WpfTextBuilder.XHeight Methods Build(SvgTextContentElement, String, Double, Double) Declaration public override Geometry Build(SvgTextContentElement element, string text, double x, double y) Parameters Type Name Description SvgTextContentElement element String text Double x Double y Returns Type Description Geometry Overrides WpfTextBuilder.Build(SvgTextContentElement, String, Double, Double) IsStyleMatched() Declaration public bool IsStyleMatched() Returns Type Description Boolean MeasureChars(SvgTextContentElement, String, Boolean) Declaration public override IList<Rect> MeasureChars(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters Type Name Description SvgTextContentElement element String text Boolean canBeWhitespace Returns Type Description IList < Rect > Overrides WpfTextBuilder.MeasureChars(SvgTextContentElement, String, Boolean) MeasureText(SvgTextContentElement, String, Boolean) Declaration public override Size MeasureText(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters Type Name Description SvgTextContentElement element String text Boolean canBeWhitespace Returns Type Description Size Overrides WpfTextBuilder.MeasureText(SvgTextContentElement, String, Boolean)"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextAnchor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextAnchor.html",
    "title": "Enum WpfTextAnchor | SharpVectors Documentation",
    "keywords": "Enum WpfTextAnchor Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public enum WpfTextAnchor Fields End Middle None Start Name Description End Middle None Start"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.html",
    "title": "Class WpfTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfTextBuilder Inheritance Object WpfTextBuilder WpfFontTextBuilder WpfGlyphTextBuilder WpfSvgTextBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfTextBuilder Constructors WpfTextBuilder(CultureInfo, Double) Declaration protected WpfTextBuilder(CultureInfo culture, double fontSize) Parameters Type Name Description CultureInfo culture Double fontSize WpfTextBuilder(CultureInfo, String, Double, Uri) Declaration protected WpfTextBuilder(CultureInfo culture, string fontName, double fontSize, Uri fontUri = null) Parameters Type Name Description CultureInfo culture String fontName Double fontSize Uri fontUri Fields _buildPathGeometry Declaration protected bool _buildPathGeometry Field Value Type Description Boolean _culture Declaration protected CultureInfo _culture Field Value Type Description CultureInfo _dpiX Declaration protected readonly double _dpiX Field Value Type Description Double _dpiY Declaration protected readonly double _dpiY Field Value Type Description Double _fontName Declaration protected readonly string _fontName Field Value Type Description String _fontSize Declaration protected readonly double _fontSize Field Value Type Description Double _fontUri Declaration protected readonly Uri _fontUri Field Value Type Description Uri _textDecorations Declaration protected TextDecorationCollection _textDecorations Field Value Type Description TextDecorationCollection Properties Alphabetic Declaration public abstract double Alphabetic { get; } Property Value Type Description Double Ascent Declaration public abstract double Ascent { get; } Property Value Type Description Double Baseline Gets the distance from the top of the first line to the baseline of the first line of a WpfTextBuilder object. Declaration public virtual double Baseline { get; } Property Value Type Description Double The distance from the top of the first line to the baseline of the first line, provided in device-independent units (1/96th inch per unit). BuildPathGeometry Declaration public bool BuildPathGeometry { get; set; } Property Value Type Description Boolean Culture Declaration public CultureInfo Culture { get; } Property Value Type Description CultureInfo DpiScaleX Gets the DPI scale on the X axis. Declaration public double DpiScaleX { get; } Property Value Type Description Double The DPI scale for the X axis. DpiScaleY Gets the DPI scale on the Yaxis. Declaration public double DpiScaleY { get; } Property Value Type Description Double The DPI scale for the Y axis. FlowDirection Gets or sets the System.Windows.FlowDirection of a WpfTextBuilder object. Declaration public FlowDirection FlowDirection { get; set; } Property Value Type Description FlowDirection The System.Windows.FlowDirection of the formatted text. FontFamilyType Declaration public abstract WpfFontFamilyType FontFamilyType { get; } Property Value Type Description WpfFontFamilyType FontName Declaration public string FontName { get; } Property Value Type Description String FontSize Declaration public double FontSize { get; } Property Value Type Description Double FontSizeInPoints Declaration public double FontSizeInPoints { get; } Property Value Type Description Double FontUri Declaration public Uri FontUri { get; } Property Value Type Description Uri IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. Declaration public abstract bool IsBoldSimulated { get; } Property Value Type Description Boolean true if bold simulation is used for glyphs; otherwise, false. IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. Declaration public abstract bool IsObliqueSimulated { get; } Property Value Type Description Boolean true if italic simulation is used for glyphs; otherwise, false. OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. Declaration public abstract double OverlinePosition { get; } Property Value Type Description Double A Double that indicates the overline position, measured from the baseline and expressed as a fraction of the font em size. OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. Declaration public abstract double OverlineThickness { get; } Property Value Type Description Double A Double that indicates the overline thickness, expressed as a fraction of the font em size. PixelsPerDip Get or sets the PixelsPerDip at which the text should be rendered. Declaration public double PixelsPerDip { get; } Property Value Type Description Double The current PixelsPerDip value. PixelsPerInchX Gets the DPI along X axis. Declaration public double PixelsPerInchX { get; } Property Value Type Description Double The DPI along the X axis. PixelsPerInchY Gets the DPI along Y axis. Declaration public double PixelsPerInchY { get; } Property Value Type Description Double The DPI along the Y axis. StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. Declaration public abstract double StrikethroughPosition { get; } Property Value Type Description Double A Double that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size. StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. Declaration public abstract double StrikethroughThickness { get; } Property Value Type Description Double A Double that indicates the strikethrough thickness, expressed as a fraction of the font em size. TextAlignment Gets or sets the alignment of text within a WpfTextBuilder object. Declaration public TextAlignment TextAlignment { get; set; } Property Value Type Description TextAlignment One of the System.Windows.TextAlignment values that specifies the alignment of text within a WpfTextBuilder object. TextDecorations Sets the System.Windows.TextDecorationCollection for the entire set of characters in the WpfTextBuilder object. Declaration public TextDecorationCollection TextDecorations { get; set; } Property Value Type Description TextDecorationCollection The System.Windows.TextDecorationCollection to apply to the text. Trimming Gets or sets the means by which the omission of text is indicated. Declaration public TextTrimming Trimming { get; set; } Property Value Type Description TextTrimming One of the System.Windows.TextTrimming values that specifies how the omission of text is indicated. The default is System.Windows.TextTrimming.WordEllipsis. UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. Declaration public abstract double UnderlinePosition { get; } Property Value Type Description Double A Double that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size. UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. Declaration public abstract double UnderlineThickness { get; } Property Value Type Description Double A Double that indicates the underline thickness, expressed as a fraction of the font em size. Width Declaration public abstract double Width { get; } Property Value Type Description Double XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. Declaration public abstract double XHeight { get; } Property Value Type Description Double A Double that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size. XmlLang Declaration public string XmlLang { get; } Property Value Type Description String Methods Build(SvgTextContentElement, String, Double, Double) Declaration public abstract Geometry Build(SvgTextContentElement element, string text, double x, double y) Parameters Type Name Description SvgTextContentElement element String text Double x Double y Returns Type Description Geometry Create(WpfFontFamilyInfo, CultureInfo, Double) Declaration public static WpfTextBuilder Create(WpfFontFamilyInfo familyInfo, CultureInfo culture, double fontSize) Parameters Type Name Description WpfFontFamilyInfo familyInfo CultureInfo culture Double fontSize Returns Type Description WpfTextBuilder Create(String, CultureInfo, Double) Declaration public static WpfTextBuilder Create(string familyInfo, CultureInfo culture, double fontSize) Parameters Type Name Description String familyInfo CultureInfo culture Double fontSize Returns Type Description WpfTextBuilder Create(FontFamily, CultureInfo, Double) Declaration public static WpfTextBuilder Create(FontFamily fontFamily, CultureInfo culture, double fontSize) Parameters Type Name Description FontFamily fontFamily CultureInfo culture Double fontSize Returns Type Description WpfTextBuilder Create(FontFamily, FontStyle, FontWeight, CultureInfo, Double) Declaration public static WpfTextBuilder Create(FontFamily fontFamily, FontStyle fontStyle, FontWeight fontWeight, CultureInfo culture, double fontSize) Parameters Type Name Description FontFamily fontFamily FontStyle fontStyle FontWeight fontWeight CultureInfo culture Double fontSize Returns Type Description WpfTextBuilder MeasureChars(SvgTextContentElement, String, Boolean) Declaration public abstract IList<Rect> MeasureChars(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters Type Name Description SvgTextContentElement element String text Boolean canBeWhitespace Returns Type Description IList < Rect > MeasureText(SvgTextContentElement, String, Boolean) Declaration public abstract Size MeasureText(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters Type Name Description SvgTextContentElement element String text Boolean canBeWhitespace Returns Type Description Size"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.html",
    "title": "Class WpfTextContext | SharpVectors Documentation",
    "keywords": "Class WpfTextContext Inheritance Object WpfTextContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfTextContext Constructors WpfTextContext(SvgTextBaseElement, WpfTextRendering) Declaration public WpfTextContext(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters Type Name Description SvgTextBaseElement textElement WpfTextRendering textRendering Properties Culture Declaration public CultureInfo Culture { get; } Property Value Type Description CultureInfo IsSingleLine Declaration public bool IsSingleLine { get; set; } Property Value Type Description Boolean IsSingleText Declaration public bool IsSingleText { get; } Property Value Type Description Boolean IsTextPath Declaration public bool IsTextPath { get; } Property Value Type Description Boolean IsVertical Declaration public bool IsVertical { get; } Property Value Type Description Boolean PositioningElement Declaration public SvgTextContentElement PositioningElement { get; set; } Property Value Type Description SvgTextContentElement PositioningEnd Declaration public Point PositioningEnd { get; set; } Property Value Type Description Point PositioningStart Declaration public Point PositioningStart { get; set; } Property Value Type Description Point TextElement Declaration public SvgTextBaseElement TextElement { get; } Property Value Type Description SvgTextBaseElement Methods AddTextSize(Point, Double) Declaration public void AddTextSize(Point point, double size) Parameters Type Name Description Point point Double size BeginMeasure(Int32) Declaration public void BeginMeasure(int count) Parameters Type Name Description Int32 count EndMeasure() Declaration public void EndMeasure() IsPositionChanged(SvgTextContentElement) Declaration public bool IsPositionChanged(SvgTextContentElement element) Parameters Type Name Description SvgTextContentElement element Returns Type Description Boolean SetElement(SvgTextBaseElement) Declaration public void SetElement(SvgTextBaseElement textElement) Parameters Type Name Description SvgTextBaseElement textElement Squiggly(Color, TextDecorationLocation) Declaration public static TextDecoration Squiggly(Color color, TextDecorationLocation location = TextDecorationLocation.Underline) Parameters Type Name Description Color color TextDecorationLocation location Returns Type Description TextDecoration"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.html",
    "title": "Class WpfTextPlacement | SharpVectors Documentation",
    "keywords": "Class WpfTextPlacement Inheritance Object WpfTextPlacement Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfTextPlacement Constructors WpfTextPlacement() Declaration public WpfTextPlacement() WpfTextPlacement(Point, Double) Declaration public WpfTextPlacement(Point location, double rotation) Parameters Type Name Description Point location Double rotation WpfTextPlacement(Point, Double, IList<WpfTextPosition>, Boolean) Declaration public WpfTextPlacement(Point location, double rotation, IList<WpfTextPosition> positions, bool isRotateOnly) Parameters Type Name Description Point location Double rotation IList < WpfTextPosition > positions Boolean isRotateOnly Properties HasPositions Declaration public bool HasPositions { get; } Property Value Type Description Boolean IsRotateOnly Declaration public bool IsRotateOnly { get; } Property Value Type Description Boolean Location Declaration public Point Location { get; } Property Value Type Description Point Positions Declaration public IList<WpfTextPosition> Positions { get; } Property Value Type Description IList < WpfTextPosition > Rotation Declaration public double Rotation { get; } Property Value Type Description Double Methods Create(SvgTextPositioningElement, Point, Boolean) Declaration public static WpfTextPlacement Create(SvgTextPositioningElement posElement, Point p, bool isTextPath = false) Parameters Type Name Description SvgTextPositioningElement posElement Point p Boolean isTextPath Returns Type Description WpfTextPlacement UpdatePositions(String) Declaration public void UpdatePositions(string targetText) Parameters Type Name Description String targetText"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPosition.html",
    "title": "Struct WpfTextPosition | SharpVectors Documentation",
    "keywords": "Struct WpfTextPosition Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public struct WpfTextPosition Constructors WpfTextPosition(Point, Double) Declaration public WpfTextPosition(Point location, double rotation) Parameters Type Name Description Point location Double rotation Properties Location Declaration public Point Location { get; set; } Property Value Type Description Point Rotation Declaration public double Rotation { get; set; } Property Value Type Description Double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.html",
    "title": "Class WpfTextRenderer | SharpVectors Documentation",
    "keywords": "Class WpfTextRenderer Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfTextRenderer WpfHorzTextRenderer WpfPathTextRenderer WpfVertTextRenderer Implements IDisposable Inherited Members WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfTextRenderer : WpfRendererObject, IDisposable Constructors WpfTextRenderer(SvgTextBaseElement, WpfTextRendering) Declaration protected WpfTextRenderer(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters Type Name Description SvgTextBaseElement textElement WpfTextRendering textRendering Fields _actualFontName Declaration protected string _actualFontName Field Value Type Description String _decimalNumber Declaration protected static readonly Regex _decimalNumber Field Value Type Description Regex _drawContext Declaration protected DrawingContext _drawContext Field Value Type Description DrawingContext _multipleSpaces Declaration protected static readonly Regex _multipleSpaces Field Value Type Description Regex _tabNewline Declaration protected static readonly Regex _tabNewline Field Value Type Description Regex _textElement Declaration protected SvgTextBaseElement _textElement Field Value Type Description SvgTextBaseElement _textRendering Declaration protected WpfTextRendering _textRendering Field Value Type Description WpfTextRendering NonBreaking Declaration protected static readonly string NonBreaking Field Value Type Description String NonBreakingChar Declaration protected const char NonBreakingChar = ' ' Field Value Type Description Char Whitespace Declaration protected const string Whitespace = \" \" Field Value Type Description String Properties DrawContext Declaration public DrawingContext DrawContext { get; } Property Value Type Description DrawingContext IsInitialized Declaration public override bool IsInitialized { get; } Property Value Type Description Boolean Overrides WpfRendererObject.IsInitialized IsMeasuring Declaration protected bool IsMeasuring { get; } Property Value Type Description Boolean IsTextPath Declaration protected bool IsTextPath { get; set; } Property Value Type Description Boolean TextContext Declaration protected WpfTextContext TextContext { get; } Property Value Type Description WpfTextContext TextCulture Declaration protected CultureInfo TextCulture { get; } Property Value Type Description CultureInfo TextElement Declaration public SvgTextBaseElement TextElement { get; } Property Value Type Description SvgTextBaseElement TextWidth Declaration protected double TextWidth { get; } Property Value Type Description Double Methods AddTextWidth(Point, Double) Declaration protected void AddTextWidth(Point location, double textWidth) Parameters Type Name Description Point location Double textWidth Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides WpfRendererObject.Dispose(Boolean) ExtractTextPathGeometry(Geometry) This will extract a PathGeometry that is nested into GeometryGroup, which is normally created by the FormattedText.BuildGeometry() method. Declaration protected static Geometry ExtractTextPathGeometry(Geometry sourceGeometry) Parameters Type Name Description Geometry sourceGeometry Returns Type Description Geometry GetBolderFontWeight(String) Declaration protected FontWeight GetBolderFontWeight(string fontWeight) Parameters Type Name Description String fontWeight Returns Type Description FontWeight GetBrush() Declaration protected Brush GetBrush() Returns Type Description Brush GetComputedFontSize(SvgTextContentElement) Declaration public static double GetComputedFontSize(SvgTextContentElement element) Parameters Type Name Description SvgTextContentElement element Returns Type Description Double GetLighterFontWeight(String) Declaration protected FontWeight GetLighterFontWeight(string fontWeight) Parameters Type Name Description String fontWeight Returns Type Description FontWeight GetPen() Declaration protected Pen GetPen() Returns Type Description Pen GetText(SvgAltGlyphElement) Declaration public static string GetText(SvgAltGlyphElement element) Parameters Type Name Description SvgAltGlyphElement element Returns Type Description String GetText(SvgTextContentElement, XmlNode, XmlNode) Declaration public static string GetText(SvgTextContentElement element, XmlNode child, XmlNode spaceNode = null) Parameters Type Name Description SvgTextContentElement element XmlNode child XmlNode spaceNode Returns Type Description String GetText(SvgTRefElement) Declaration public static string GetText(SvgTRefElement element) Parameters Type Name Description SvgTRefElement element Returns Type Description String GetTextDecoration(SvgTextContentElement) Declaration protected TextDecorationCollection GetTextDecoration(SvgTextContentElement element) Parameters Type Name Description SvgTextContentElement element Returns Type Description TextDecorationCollection GetTextFontFamily(SvgTextContentElement) Declaration protected FontFamily GetTextFontFamily(SvgTextContentElement element) Parameters Type Name Description SvgTextContentElement element Returns Type Description FontFamily GetTextFontFamilyInfo(SvgTextContentElement) Declaration protected WpfFontFamilyInfo GetTextFontFamilyInfo(SvgTextContentElement element) Parameters Type Name Description SvgTextContentElement element Returns Type Description WpfFontFamilyInfo GetTextFontStretch(SvgTextContentElement) Declaration protected FontStretch GetTextFontStretch(SvgTextContentElement element) Parameters Type Name Description SvgTextContentElement element Returns Type Description FontStretch GetTextFontStyle(SvgTextContentElement) Declaration protected FontStyle GetTextFontStyle(SvgTextContentElement element) Parameters Type Name Description SvgTextContentElement element Returns Type Description FontStyle GetTextFontStyle(String) Declaration protected FontStyle GetTextFontStyle(string fontStyle) Parameters Type Name Description String fontStyle Returns Type Description FontStyle GetTextFontWeight(SvgTextContentElement) Declaration protected FontWeight GetTextFontWeight(SvgTextContentElement element) Parameters Type Name Description SvgTextContentElement element Returns Type Description FontWeight GetTextFontWeight(String) Declaration protected FontWeight GetTextFontWeight(string fontWeight) Parameters Type Name Description String fontWeight Returns Type Description FontWeight GetTextStringFormat(SvgTextContentElement) Declaration protected WpfTextStringFormat GetTextStringFormat(SvgTextContentElement element) Parameters Type Name Description SvgTextContentElement element Returns Type Description WpfTextStringFormat Initialize(DrawingContext, WpfDrawingContext) Declaration public virtual void Initialize(DrawingContext textContext, WpfDrawingContext drawContext) Parameters Type Name Description DrawingContext textContext WpfDrawingContext drawContext RenderText(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Declaration public abstract void RenderText(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters Type Name Description SvgTextContentElement element Point ctp String text Double rotate WpfTextPlacement placement RenderTextRun(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Declaration public abstract void RenderTextRun(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters Type Name Description SvgTextContentElement element Point ctp String text Double rotate WpfTextPlacement placement SetElement(SvgTextBaseElement) Declaration public virtual void SetElement(SvgTextBaseElement textElement) Parameters Type Name Description SvgTextBaseElement textElement SetTextWidth(Double) Declaration protected void SetTextWidth(double textWidth) Parameters Type Name Description Double textWidth TrimText(SvgTextContentElement, String) Declaration public static string TrimText(SvgTextContentElement element, string val) Parameters Type Name Description SvgTextContentElement element String val Returns Type Description String Uninitialize() Declaration public virtual void Uninitialize() Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.html",
    "title": "Class WpfTextRun | SharpVectors Documentation",
    "keywords": "Class WpfTextRun Inheritance Object WpfTextRun Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfTextRun Constructors WpfTextRun() Declaration public WpfTextRun() WpfTextRun(String, Boolean, Int32, Int32) Declaration public WpfTextRun(string text, bool isLatin, int vertOrientation, int horzOrientation) Parameters Type Name Description String text Boolean isLatin Int32 vertOrientation Int32 horzOrientation Properties HorizontalOrientation Declaration public int HorizontalOrientation { get; set; } Property Value Type Description Int32 IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean IsLatin Declaration public bool IsLatin { get; set; } Property Value Type Description Boolean Text Declaration public string Text { get; set; } Property Value Type Description String VerticalOrientation Declaration public int VerticalOrientation { get; set; } Property Value Type Description Int32 Methods BreakWords(String) Declaration public static IList<WpfTextRun> BreakWords(string text) Parameters Type Name Description String text Returns Type Description IList < WpfTextRun > BreakWords(String, Int32, Int32) Declaration public static IList<WpfTextRun> BreakWords(string text, int vertOrientation, int horzOrientation) Parameters Type Name Description String text Int32 vertOrientation Int32 horzOrientation Returns Type Description IList < WpfTextRun > IsLatinGlyph(Char) Declaration public static bool IsLatinGlyph(char ch) Parameters Type Name Description Char ch Returns Type Description Boolean"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.html",
    "title": "Struct WpfTextStringFormat | SharpVectors Documentation",
    "keywords": "Struct WpfTextStringFormat Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public struct WpfTextStringFormat Constructors WpfTextStringFormat(FlowDirection, TextTrimming, WpfTextAnchor) Declaration public WpfTextStringFormat(FlowDirection direction, TextTrimming trimming, WpfTextAnchor anchor) Parameters Type Name Description FlowDirection direction TextTrimming trimming WpfTextAnchor anchor Fields Anchor Declaration public WpfTextAnchor Anchor Field Value Type Description WpfTextAnchor Direction Declaration public FlowDirection Direction Field Value Type Description FlowDirection Trimming Declaration public TextTrimming Trimming Field Value Type Description TextTrimming Properties Alignment Declaration public readonly TextAlignment Alignment { get; } Property Value Type Description TextAlignment Default Declaration public static readonly WpfTextStringFormat Default { get; } Property Value Type Description WpfTextStringFormat"
  },
  "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.html",
    "title": "Class WpfVertTextRenderer | SharpVectors Documentation",
    "keywords": "Class WpfVertTextRenderer Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfTextRenderer WpfVertTextRenderer Implements IDisposable Inherited Members WpfTextRenderer.Whitespace WpfTextRenderer.NonBreakingChar WpfTextRenderer.NonBreaking WpfTextRenderer._tabNewline WpfTextRenderer._decimalNumber WpfTextRenderer._multipleSpaces WpfTextRenderer._actualFontName WpfTextRenderer._drawContext WpfTextRenderer._textElement WpfTextRenderer._textRendering WpfTextRenderer.IsInitialized WpfTextRenderer.DrawContext WpfTextRenderer.TextElement WpfTextRenderer.IsMeasuring WpfTextRenderer.IsTextPath WpfTextRenderer.TextWidth WpfTextRenderer.TextCulture WpfTextRenderer.TextContext WpfTextRenderer.SetElement(SvgTextBaseElement) WpfTextRenderer.Initialize(DrawingContext, WpfDrawingContext) WpfTextRenderer.Uninitialize() WpfTextRenderer.TrimText(SvgTextContentElement, String) WpfTextRenderer.GetText(SvgTextContentElement, XmlNode, XmlNode) WpfTextRenderer.GetText(SvgTRefElement) WpfTextRenderer.GetText(SvgAltGlyphElement) WpfTextRenderer.GetComputedFontSize(SvgTextContentElement) WpfTextRenderer.SetTextWidth(Double) WpfTextRenderer.AddTextWidth(Point, Double) WpfTextRenderer.GetBrush() WpfTextRenderer.GetPen() WpfTextRenderer.ExtractTextPathGeometry(Geometry) WpfTextRenderer.GetTextFontWeight(String) WpfTextRenderer.GetTextFontWeight(SvgTextContentElement) WpfTextRenderer.GetBolderFontWeight(String) WpfTextRenderer.GetLighterFontWeight(String) WpfTextRenderer.GetTextFontStyle(SvgTextContentElement) WpfTextRenderer.GetTextFontStyle(String) WpfTextRenderer.GetTextFontStretch(SvgTextContentElement) WpfTextRenderer.GetTextDecoration(SvgTextContentElement) WpfTextRenderer.GetTextFontFamilyInfo(SvgTextContentElement) WpfTextRenderer.GetTextFontFamily(SvgTextContentElement) WpfTextRenderer.GetTextStringFormat(SvgTextContentElement) WpfTextRenderer.Dispose(Boolean) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Texts Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfVertTextRenderer : WpfTextRenderer, IDisposable Constructors WpfVertTextRenderer(SvgTextBaseElement, WpfTextRendering) Declaration public WpfVertTextRenderer(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters Type Name Description SvgTextBaseElement textElement WpfTextRendering textRendering Methods RenderText(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Declaration public override void RenderText(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters Type Name Description SvgTextContentElement element Point ctp String text Double rotate WpfTextPlacement placement Overrides WpfTextRenderer.RenderText(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) RenderTextRun(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Declaration public override void RenderTextRun(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters Type Name Description SvgTextContentElement element Point ctp String text Double rotate WpfTextPlacement placement Overrides WpfTextRenderer.RenderTextRun(SvgTextContentElement, ref Point, String, Double, WpfTextPlacement) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Utils.html": {
    "href": "api/SharpVectors.Renderers.Utils.html",
    "title": "Namespace SharpVectors.Renderers.Utils | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Renderers.Utils Classes WpfConvert WpfResources WpfSvgWindow"
  },
  "api/SharpVectors.Renderers.Utils.WpfConvert.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfConvert.html",
    "title": "Class WpfConvert | SharpVectors Documentation",
    "keywords": "Class WpfConvert Inheritance Object WpfConvert Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Utils Assembly : SharpVectors.Rendering.Wpf.dll Syntax public static class WpfConvert Methods Equals(Size, Size) Declaration public static bool Equals(Size size1, Size size2) Parameters Type Name Description Size size1 Size size2 Returns Type Description Boolean GetPathFigureLength(PathFigure) Declaration public static double GetPathFigureLength(PathFigure pathFigure) Parameters Type Name Description PathFigure pathFigure Returns Type Description Double ToColor(ICssColor) A WPF Color representation of the RgbColor . Declaration public static Color? ToColor(ICssColor color) Parameters Type Name Description ICssColor color Returns Type Description Nullable < Color > ToPath(SvgRectF) Declaration public static PathGeometry ToPath(SvgRectF rect) Parameters Type Name Description SvgRectF rect Returns Type Description PathGeometry ToPath(EllipseGeometry) Declaration public static PathGeometry ToPath(EllipseGeometry ellipse) Parameters Type Name Description EllipseGeometry ellipse Returns Type Description PathGeometry ToPath(LineGeometry) Declaration public static PathGeometry ToPath(LineGeometry line) Parameters Type Name Description LineGeometry line Returns Type Description PathGeometry ToPath(RectangleGeometry) Declaration public static PathGeometry ToPath(RectangleGeometry rect) Parameters Type Name Description RectangleGeometry rect Returns Type Description PathGeometry ToPath(Rect) Declaration public static PathGeometry ToPath(Rect rect) Parameters Type Name Description Rect rect Returns Type Description PathGeometry ToRect(ICssRect) Declaration public static Rect ToRect(ICssRect rect) Parameters Type Name Description ICssRect rect Returns Type Description Rect ToRect(ISvgRect) Declaration public static Rect ToRect(ISvgRect rect) Parameters Type Name Description ISvgRect rect Returns Type Description Rect ToRect(SvgRectF) This converts the specified Rect structure to a SvgRectF structure. Declaration public static Rect ToRect(SvgRectF rect) Parameters Type Name Description SvgRectF rect The Rect structure to convert. Returns Type Description Rect The SvgRectF structure that is converted from the specified Rect structure. ToSpreadMethod(SvgSpreadMethod) Declaration public static GradientSpreadMethod ToSpreadMethod(SvgSpreadMethod sm) Parameters Type Name Description SvgSpreadMethod sm Returns Type Description GradientSpreadMethod"
  },
  "api/SharpVectors.Renderers.Utils.WpfResources.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfResources.html",
    "title": "Class WpfResources | SharpVectors Documentation",
    "keywords": "Class WpfResources Inheritance Object WpfResources Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Utils Assembly : SharpVectors.Rendering.Wpf.dll Syntax public static class WpfResources Methods GetResourcePaths(Assembly) Declaration public static IEnumerable<object> GetResourcePaths(Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description IEnumerable < Object > ResourceExists(Assembly, String) Declaration public static bool ResourceExists(Assembly assembly, string resourcePath) Parameters Type Name Description Assembly assembly String resourcePath Returns Type Description Boolean ResourceExists(String) Declaration public static bool ResourceExists(string resourcePath) Parameters Type Name Description String resourcePath Returns Type Description Boolean"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.html",
    "title": "Class WpfSvgWindow | SharpVectors Documentation",
    "keywords": "Class WpfSvgWindow Inheritance Object SvgWindow WpfSvgWindow Implements ISvgWindow Inherited Members SvgWindow._mappedTasks SvgWindow.ParentWindow SvgWindow.Renderer SvgWindow.BaseUrls SvgWindow.CreateEmptySvgDocument() SvgWindow.AddTask(String, Task) SvgWindow.AwaitTasks(String) SvgWindow.ParseXML(String, XmlDocument) SvgWindow.PrintNode(XmlNode) SvgWindow.DefaultStyleSheet SvgWindow.Document SvgWindow.CreateOwnedWindow() SvgWindow.CreateSvgRenderer() SvgWindow.Resize(Int32, Int32) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Utils Assembly : SharpVectors.Rendering.Wpf.dll Syntax public class WpfSvgWindow : SvgWindow, ISvgWindow Constructors WpfSvgWindow(ISvgControl, ISvgRenderer) Declaration public WpfSvgWindow(ISvgControl control, ISvgRenderer renderer) Parameters Type Name Description ISvgControl control ISvgRenderer renderer WpfSvgWindow(SvgWindow, Int64, Int64) Declaration public WpfSvgWindow(SvgWindow parentWindow, long innerWidth, long innerHeight) Parameters Type Name Description SvgWindow parentWindow Int64 innerWidth Int64 innerHeight WpfSvgWindow(Int64, Int64, ISvgRenderer) Declaration public WpfSvgWindow(long innerWidth, long innerHeight, ISvgRenderer renderer) Parameters Type Name Description Int64 innerWidth Int64 innerHeight ISvgRenderer renderer Properties CustomSettings Declaration public XmlReaderSettings CustomSettings { get; set; } Property Value Type Description XmlReaderSettings InnerHeight Declaration public override long InnerHeight { get; set; } Property Value Type Description Int64 Overrides SvgWindow.InnerHeight InnerWidth Declaration public override long InnerWidth { get; set; } Property Value Type Description Int64 Overrides SvgWindow.InnerWidth PreferUserSize Declaration public bool PreferUserSize { get; set; } Property Value Type Description Boolean Source Declaration public override string Source { get; set; } Property Value Type Description String Overrides SvgWindow.Source WorkingDir Declaration public override DirectoryInfo WorkingDir { get; } Property Value Type Description DirectoryInfo Overrides SvgWindow.WorkingDir Methods Alert(String) Declaration public override void Alert(string message) Parameters Type Name Description String message Overrides SvgWindow.Alert(String) CreateOwnedWindow(Int64, Int64) Declaration public override SvgWindow CreateOwnedWindow(long innerWidth, long innerHeight) Parameters Type Name Description Int64 innerWidth Int64 innerHeight Returns Type Description SvgWindow Overrides SvgWindow.CreateOwnedWindow(Int64, Int64) LoadDocument(Stream, WpfDrawingSettings) Declaration public void LoadDocument(Stream documentStream, WpfDrawingSettings drawingSettings) Parameters Type Name Description Stream documentStream WpfDrawingSettings drawingSettings LoadDocument(TextReader, WpfDrawingSettings) Declaration public void LoadDocument(TextReader textReader, WpfDrawingSettings drawingSettings) Parameters Type Name Description TextReader textReader WpfDrawingSettings drawingSettings LoadDocument(String, WpfDrawingSettings) Declaration public void LoadDocument(string documentSource, WpfDrawingSettings drawingSettings) Parameters Type Name Description String documentSource WpfDrawingSettings drawingSettings LoadDocument(Uri, WpfDrawingSettings) Declaration public void LoadDocument(Uri documentUri, WpfDrawingSettings drawingSettings) Parameters Type Name Description Uri documentUri WpfDrawingSettings drawingSettings LoadDocument(XmlReader, WpfDrawingSettings) Declaration public void LoadDocument(XmlReader xmlReader, WpfDrawingSettings drawingSettings) Parameters Type Name Description XmlReader xmlReader WpfDrawingSettings drawingSettings SetupStyleSheets(WpfDrawingSettings) Declaration public virtual void SetupStyleSheets(WpfDrawingSettings drawingSettings) Parameters Type Name Description WpfDrawingSettings drawingSettings Implements ISvgWindow"
  },
  "api/SharpVectors.Renderers.Wpf.html": {
    "href": "api/SharpVectors.Renderers.Wpf.html",
    "title": "Namespace SharpVectors.Renderers.Wpf | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Renderers.Wpf Classes WpfARendering WpfClassVisitor WpfDrawingContext WpfDrawingDocument WpfDrawingRenderer WpfDrawingResources WpfDrawingSettings This provides the options for the drawing/rendering engine of the WPF. WpfEmbeddedImageVisitor WpfFill WpfFontFamilyInfo WpfFontFamilyVisitor WpfGradientFill WpfGroupRendering WpfHitPath WpfHitTestResult WpfIDVisitor WpfImageRendering WpfLinkVisitor WpfMarkerRendering WpfPathRendering WpfPatternFill WpfPatternRendering WpfRendererObject WpfRendering WpfRenderingBase Defines the interface required for a rendering node to interact with the renderer and the SVG DOM WpfRenderingHelper WpfResourceSettings WpfSolidColorFill WpfSvgColor WpfSvgPaint WpfSvgPaintContext WpfSvgRendering WpfSwitchRendering WpfSymbolRendering WpfTextRendering WpfUseRendering WpfVisitor WpfVisitors Enums WpfFillType WpfFontFamilyType WpfHitTextLevel Hit-test options for text elements."
  },
  "api/SharpVectors.Renderers.Wpf.WpfARendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfARendering.html",
    "title": "Class WpfARendering | SharpVectors Documentation",
    "keywords": "Class WpfARendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfARendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfARendering : WpfRendering, IDisposable Constructors WpfARendering(SvgElement) Declaration public WpfARendering(SvgElement element) Parameters Type Name Description SvgElement element Properties IsRecursive Declaration public override bool IsRecursive { get; } Property Value Type Description Boolean Overrides WpfRenderingBase.IsRecursive Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfClassVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfClassVisitor.html",
    "title": "Class WpfClassVisitor | SharpVectors Documentation",
    "keywords": "Class WpfClassVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfClassVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfClassVisitor : WpfVisitor, IDisposable Constructors WpfClassVisitor() Declaration protected WpfClassVisitor() Methods Visit(SvgElement, WpfDrawingContext) Declaration public abstract string Visit(SvgElement element, WpfDrawingContext context) Parameters Type Name Description SvgElement element WpfDrawingContext context Returns Type Description String Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.html",
    "title": "Class WpfDrawingContext | SharpVectors Documentation",
    "keywords": "Class WpfDrawingContext Inheritance Object DispatcherObject DependencyObject WpfDrawingContext Implements IEnumerable < DrawingGroup > IEnumerable Inherited Members DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfDrawingContext : DependencyObject, IEnumerable<DrawingGroup>, IEnumerable Constructors WpfDrawingContext() Declaration public WpfDrawingContext() WpfDrawingContext(Boolean, WpfDrawingSettings) Declaration public WpfDrawingContext(bool isFragment, WpfDrawingSettings settings) Parameters Type Name Description Boolean isFragment WpfDrawingSettings settings Properties BaseUrls Declaration public ISet<string> BaseUrls { get; } Property Value Type Description ISet < String > Bounds Declaration public Rect Bounds { get; } Property Value Type Description Rect ClassVisitor Declaration public WpfClassVisitor ClassVisitor { get; set; } Property Value Type Description WpfClassVisitor Count Gets the number of elements contained in the drawing stack. Declaration public int Count { get; } Property Value Type Description Int32 The number of elements contained in the drawing stack. DpiScaleX Gets the DPI scale on the X axis. Declaration public double DpiScaleX { get; } Property Value Type Description Double The DPI scale for the X axis. DpiScaleY Gets the DPI scale on the Yaxis. Declaration public double DpiScaleY { get; } Property Value Type Description Double The DPI scale for the Y axis. FontFamilyVisitor Declaration public WpfFontFamilyVisitor FontFamilyVisitor { get; set; } Property Value Type Description WpfFontFamilyVisitor IDVisitor Declaration public WpfIDVisitor IDVisitor { get; set; } Property Value Type Description WpfIDVisitor ImageVisitor Declaration public WpfEmbeddedImageVisitor ImageVisitor { get; set; } Property Value Type Description WpfEmbeddedImageVisitor InteractiveMode Declaration public SvgInteractiveModes InteractiveMode { get; } Property Value Type Description SvgInteractiveModes IsFragment Declaration public bool IsFragment { get; } Property Value Type Description Boolean IsResourceDictionary Declaration public bool IsResourceDictionary { get; } Property Value Type Description Boolean Links Declaration public DrawingGroup Links { get; } Property Value Type Description DrawingGroup LinkVisitor Declaration public WpfLinkVisitor LinkVisitor { get; set; } Property Value Type Description WpfLinkVisitor Name Declaration public string Name { get; set; } Property Value Type Description String PixelsPerDip Get or sets the PixelsPerDip at which the text should be rendered. Declaration public double PixelsPerDip { get; } Property Value Type Description Double The current PixelsPerDip value. PixelsPerInchX Gets the DPI along X axis. Declaration public double PixelsPerInchX { get; } Property Value Type Description Double The DPI along the X axis. PixelsPerInchY Gets the DPI along Y axis. Declaration public double PixelsPerInchY { get; } Property Value Type Description Double The DPI along the Y axis. RenderingClipRegion Declaration public bool RenderingClipRegion { get; set; } Property Value Type Description Boolean Root Declaration public DrawingGroup Root { get; } Property Value Type Description DrawingGroup Settings Declaration public WpfDrawingSettings Settings { get; set; } Property Value Type Description WpfDrawingSettings Tag Declaration public object Tag { get; set; } Property Value Type Description Object Methods AddResources(Brush) Declaration public void AddResources(Brush brush) Parameters Type Name Description Brush brush AddResources(Pen) Declaration public void AddResources(Pen pen) Parameters Type Name Description Pen pen AddResources(SolidColorBrush) Declaration public void AddResources(SolidColorBrush brush) Parameters Type Name Description SolidColorBrush brush AddUrl(String) Declaration public void AddUrl(string baseUrl) Parameters Type Name Description String baseUrl BeginDrawing(WpfDrawingDocument) Declaration public void BeginDrawing(WpfDrawingDocument drawingDocument) Parameters Type Name Description WpfDrawingDocument drawingDocument Clear() Removes all objects from the drawing stack. Declaration public void Clear() Contains(DrawingGroup) Determines whether an element is in the drawing stack. Declaration public bool Contains(DrawingGroup item) Parameters Type Name Description DrawingGroup item The object to locate in the drawing stack. The value can be null for reference types. Returns Type Description Boolean true if item is found in the drawing stack; otherwise, false. ContainsUrl(String) Declaration public bool ContainsUrl(string baseUrl) Parameters Type Name Description String baseUrl Returns Type Description Boolean CopyTo(DrawingGroup[], Int32) Copies the drawing stack to an existing one-dimensional array, starting at the specified array index. Declaration public void CopyTo(DrawingGroup[] array, int arrayIndex) Parameters Type Name Description DrawingGroup [] array The one-dimensional System.Array that is the destination of the elements copied from drawing stack. The array must have zero-based indexing. Int32 arrayIndex The zero-based index in array at which copying begins. Exceptions Type Condition ArgumentNullException If array is null . ArgumentOutOfRangeException arrayIndex is less than zero. ArgumentException arrayIndex is equal to or greater than the length of array. -or- The number of elements in the source drawing stack is greater than the available space from arrayIndex to the end of the destination array. EndDrawing() Declaration public void EndDrawing() GetEnumerator() Declaration public IEnumerator<DrawingGroup> GetEnumerator() Returns Type Description IEnumerator < DrawingGroup > GetPaintContext(String) Declaration public WpfSvgPaintContext GetPaintContext(string guidId) Parameters Type Name Description String guidId Returns Type Description WpfSvgPaintContext Initialize(WpfLinkVisitor, WpfFontFamilyVisitor, WpfEmbeddedImageVisitor) Declaration public void Initialize(WpfLinkVisitor linkVisitor, WpfFontFamilyVisitor fontFamilyVisitor, WpfEmbeddedImageVisitor imageVisitor) Parameters Type Name Description WpfLinkVisitor linkVisitor WpfFontFamilyVisitor fontFamilyVisitor WpfEmbeddedImageVisitor imageVisitor IsPaintContext(String) Declaration public bool IsPaintContext(string guidId) Parameters Type Name Description String guidId Returns Type Description Boolean IsRegisteredId(String) Declaration public bool IsRegisteredId(string elementId) Parameters Type Name Description String elementId Returns Type Description Boolean Peek() Returns the object at the top of the drawing stack without removing it. Declaration public DrawingGroup Peek() Returns Type Description DrawingGroup The object at the top of the drawing stack. Exceptions Type Condition InvalidOperationException The drawing stack is empty. Pop() Removes and returns the object at the top of the drawing stack. Declaration public DrawingGroup Pop() Returns Type Description DrawingGroup The object removed from the top of the drawing stack. Exceptions Type Condition InvalidOperationException The drawing stack is empty. Push(DrawingGroup) Inserts an object at the top of the drawing stack. Declaration public void Push(DrawingGroup item) Parameters Type Name Description DrawingGroup item The object to push onto the drawing stack. The value can be null for reference types. RegisterDrawing(String, String, Drawing) Declaration public void RegisterDrawing(string elementId, string uniqueId, Drawing drawing) Parameters Type Name Description String elementId String uniqueId Drawing drawing RegisterId(String) Declaration public void RegisterId(string elementId) Parameters Type Name Description String elementId RegisterPaintContext(WpfSvgPaintContext) Declaration public void RegisterPaintContext(WpfSvgPaintContext paintContext) Parameters Type Name Description WpfSvgPaintContext paintContext RemoveUrl(String) Declaration public void RemoveUrl(string baseUrl) Parameters Type Name Description String baseUrl ToArray() Copies the drawing stack to a new array. Declaration public DrawingGroup[] ToArray() Returns Type Description DrawingGroup [] A new array containing copies of the elements of the drawing stack. TrimExcess() Sets the capacity to the actual number of elements in the drawing stack, if that number is less than 90 percent of current capacity. Declaration public void TrimExcess() Uninitialize() Declaration public void Uninitialize() UnRegisterId(String) Declaration public void UnRegisterId(string elementId) Parameters Type Name Description String elementId UnRegisterPaintContext(String) Declaration public void UnRegisterPaintContext(string guidId) Parameters Type Name Description String guidId UpdateBounds(Rect) Declaration public void UpdateBounds(Rect bounds) Parameters Type Name Description Rect bounds Explicit Interface Implementations IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.html",
    "title": "Class WpfDrawingDocument | SharpVectors Documentation",
    "keywords": "Class WpfDrawingDocument Inheritance Object DispatcherObject DependencyObject WpfDrawingDocument Inherited Members DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfDrawingDocument : DependencyObject Constructors WpfDrawingDocument() Declaration public WpfDrawingDocument() Properties DisplayTransform Declaration public GeneralTransform DisplayTransform { get; set; } Property Value Type Description GeneralTransform Document Declaration public SvgDocument Document { get; } Property Value Type Description SvgDocument Drawing Declaration public DrawingGroup Drawing { get; } Property Value Type Description DrawingGroup DrawingNames Declaration public ICollection<string> DrawingNames { get; } Property Value Type Description ICollection < String > DrawingUniqueNames Declaration public ICollection<string> DrawingUniqueNames { get; } Property Value Type Description ICollection < String > ElementNames Declaration public ICollection<string> ElementNames { get; } Property Value Type Description ICollection < String > ElementUniqueNames Declaration public ICollection<string> ElementUniqueNames { get; } Property Value Type Description ICollection < String > HitList Declaration public IList<Drawing> HitList { get; } Property Value Type Description IList < Drawing > HitPaths Declaration public IList<WpfHitPath> HitPaths { get; } Property Value Type Description IList < WpfHitPath > TextLevel Declaration public WpfHitTextLevel TextLevel { get; set; } Property Value Type Description WpfHitTextLevel Methods Add(String, String, Drawing) Declaration public void Add(string elementId, string uniqueId, Drawing drawing) Parameters Type Name Description String elementId String uniqueId Drawing drawing AddById(String, Drawing) Declaration public void AddById(string elementId, Drawing drawing) Parameters Type Name Description String elementId Drawing drawing AddByUniqueId(Guid, Drawing) Declaration public void AddByUniqueId(Guid uniqueId, Drawing drawing) Parameters Type Name Description Guid uniqueId Drawing drawing AddByUniqueId(String, Drawing) Declaration public void AddByUniqueId(string uniqueId, Drawing drawing) Parameters Type Name Description String uniqueId Drawing drawing EnumerateDrawing(DrawingGroup) Declaration public void EnumerateDrawing(DrawingGroup drawing) Parameters Type Name Description DrawingGroup drawing Get(String) Declaration public Tuple<SvgElement, Drawing> Get(string elementId) Parameters Type Name Description String elementId Returns Type Description Tuple < SvgElement , Drawing > GetById(String) Declaration public Drawing GetById(string elementId) Parameters Type Name Description String elementId Returns Type Description Drawing GetByUniqueId(Guid) Declaration public Drawing GetByUniqueId(Guid uniqueId) Parameters Type Name Description Guid uniqueId Returns Type Description Drawing GetByUniqueId(String) Declaration public Drawing GetByUniqueId(string uniqueId) Parameters Type Name Description String uniqueId Returns Type Description Drawing GetDrawingLayer() Declaration public DrawingGroup GetDrawingLayer() Returns Type Description DrawingGroup GetSvgById(String) Declaration public SvgElement GetSvgById(string elementId) Parameters Type Name Description String elementId Returns Type Description SvgElement GetSvgByUniqueId(Guid) Declaration public SvgElement GetSvgByUniqueId(Guid uniqueId) Parameters Type Name Description Guid uniqueId Returns Type Description SvgElement GetSvgByUniqueId(String) Declaration public SvgElement GetSvgByUniqueId(string uniqueId) Parameters Type Name Description String uniqueId Returns Type Description SvgElement HitTest(Point) Declaration public WpfHitTestResult HitTest(Point point) Parameters Type Name Description Point point Returns Type Description WpfHitTestResult HitTest(Rect, IntersectionDetail) Declaration public WpfHitTestResult HitTest(Rect rect, IntersectionDetail detail) Parameters Type Name Description Rect rect IntersectionDetail detail Returns Type Description WpfHitTestResult Initialize(SvgDocument, DrawingGroup) Declaration public void Initialize(SvgDocument svgDocument, DrawingGroup svgDrawing) Parameters Type Name Description SvgDocument svgDocument DrawingGroup svgDrawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.html",
    "title": "Class WpfDrawingRenderer | SharpVectors Documentation",
    "keywords": "Class WpfDrawingRenderer Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfDrawingRenderer Implements IDisposable ISvgRenderer Inherited Members WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfDrawingRenderer : WpfRendererObject, IDisposable, ISvgRenderer Remarks Rename: WpfRendererSession Constructors WpfDrawingRenderer() Declaration public WpfDrawingRenderer() WpfDrawingRenderer(WpfDrawingSettings) Declaration public WpfDrawingRenderer(WpfDrawingSettings settings) Parameters Type Name Description WpfDrawingSettings settings WpfDrawingRenderer(WpfDrawingSettings, Boolean) Declaration public WpfDrawingRenderer(WpfDrawingSettings settings, bool isEmbedded) Parameters Type Name Description WpfDrawingSettings settings Boolean isEmbedded Properties Drawing Declaration public DrawingGroup Drawing { get; } Property Value Type Description DrawingGroup FontFamilyVisitor Declaration public WpfFontFamilyVisitor FontFamilyVisitor { get; set; } Property Value Type Description WpfFontFamilyVisitor ImageVisitor Declaration public WpfEmbeddedImageVisitor ImageVisitor { get; set; } Property Value Type Description WpfEmbeddedImageVisitor InteractiveMode Declaration public SvgInteractiveModes InteractiveMode { get; } Property Value Type Description SvgInteractiveModes InvalidRect Declaration public SvgRectF InvalidRect { get; set; } Property Value Type Description SvgRectF LinkVisitor Declaration public WpfLinkVisitor LinkVisitor { get; set; } Property Value Type Description WpfLinkVisitor OnRender Declaration public RenderEvent OnRender { get; set; } Property Value Type Description RenderEvent Window Declaration public ISvgWindow Window { get; set; } Property Value Type Description ISvgWindow Methods BeginRender(WpfDrawingDocument) Declaration public void BeginRender(WpfDrawingDocument drawingDocument) Parameters Type Name Description WpfDrawingDocument drawingDocument Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides WpfRendererObject.Dispose(Boolean) EndRender() Declaration public void EndRender() GetRenderedBounds(ISvgElement, Single) Declaration public ISvgRect GetRenderedBounds(ISvgElement element, float margin) Parameters Type Name Description ISvgElement element Single margin Returns Type Description ISvgRect InvalidateRect(SvgRectF) Declaration public void InvalidateRect(SvgRectF rect) Parameters Type Name Description SvgRectF rect Render(ISvgDocument) Declaration public void Render(ISvgDocument node) Parameters Type Name Description ISvgDocument node Render(ISvgElement) Declaration public void Render(ISvgElement node) Parameters Type Name Description ISvgElement node Render(ISvgElement, WpfDrawingContext) Declaration public void Render(ISvgElement node, WpfDrawingContext context) Parameters Type Name Description ISvgElement node WpfDrawingContext context RenderAs(SvgElement, WpfDrawingContext) Declaration public void RenderAs(SvgElement node, WpfDrawingContext context) Parameters Type Name Description SvgElement node WpfDrawingContext context RenderChildren(ISvgElement) Declaration public void RenderChildren(ISvgElement node) Parameters Type Name Description ISvgElement node RenderMask(ISvgElement, WpfDrawingContext) Declaration public void RenderMask(ISvgElement node, WpfDrawingContext context) Parameters Type Name Description ISvgElement node WpfDrawingContext context Implements System.IDisposable ISvgRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.html",
    "title": "Class WpfDrawingResources | SharpVectors Documentation",
    "keywords": "Class WpfDrawingResources Inheritance Object WpfDrawingResources Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfDrawingResources Constructors WpfDrawingResources() Declaration public WpfDrawingResources() Properties BindPenToBrushes Declaration public bool BindPenToBrushes { get; set; } Property Value Type Description Boolean BindToColors Declaration public bool BindToColors { get; set; } Property Value Type Description Boolean BindToResources Declaration public bool BindToResources { get; set; } Property Value Type Description Boolean BrushComparer Declaration public static IEqualityComparer<SolidColorBrush> BrushComparer { get; } Property Value Type Description IEqualityComparer < SolidColorBrush > BrushKeys Declaration public ICollection<string> BrushKeys { get; } Property Value Type Description ICollection < String > BrushNameFormat Declaration public string BrushNameFormat { get; set; } Property Value Type Description String ColorComparer Declaration public static IEqualityComparer<Color> ColorComparer { get; } Property Value Type Description IEqualityComparer < Color > ColorKeys Declaration public ICollection<string> ColorKeys { get; } Property Value Type Description ICollection < String > ColorNameFormat Declaration public string ColorNameFormat { get; set; } Property Value Type Description String ColorPalette Declaration public IDictionary<Color, string> ColorPalette { get; set; } Property Value Type Description IDictionary < Color , String > IsInitialized Declaration public bool IsInitialized { get; } Property Value Type Description Boolean IsReady Declaration public bool IsReady { get; } Property Value Type Description Boolean Item[String] Declaration public object this[string key] { get; } Parameters Type Name Description String key Property Value Type Description Object Keys Declaration public IList<string> Keys { get; } Property Value Type Description IList < String > PenComparer Declaration public static IEqualityComparer<Pen> PenComparer { get; } Property Value Type Description IEqualityComparer < Pen > PenKeys Declaration public ICollection<string> PenKeys { get; } Property Value Type Description ICollection < String > PenNameFormat Declaration public string PenNameFormat { get; set; } Property Value Type Description String ResourceAccess Declaration public ResourceAccessType ResourceAccess { get; set; } Property Value Type Description ResourceAccessType ResourceFreeze Declaration public bool ResourceFreeze { get; set; } Property Value Type Description Boolean ResourceMode Declaration public ResourceModeType ResourceMode { get; set; } Property Value Type Description ResourceModeType UseResourceIndex Declaration public bool UseResourceIndex { get; set; } Property Value Type Description Boolean Methods AddResource(Brush) Declaration public void AddResource(Brush brush) Parameters Type Name Description Brush brush AddResource(Color) Declaration public void AddResource(Color color) Parameters Type Name Description Color color AddResource(Pen) Declaration public void AddResource(Pen pen) Parameters Type Name Description Pen pen AddResource(SolidColorBrush) Declaration public void AddResource(SolidColorBrush brush) Parameters Type Name Description SolidColorBrush brush Contains(String) Declaration public bool Contains(string resourceKey) Parameters Type Name Description String resourceKey Returns Type Description Boolean GetResourceKey(Brush) Declaration public string GetResourceKey(Brush brush) Parameters Type Name Description Brush brush Returns Type Description String GetResourceKey(Color) Declaration public string GetResourceKey(Color color) Parameters Type Name Description Color color Returns Type Description String GetResourceKey(Pen) Declaration public string GetResourceKey(Pen pen) Parameters Type Name Description Pen pen Returns Type Description String GetResourceKey(SolidColorBrush) Declaration public string GetResourceKey(SolidColorBrush brush) Parameters Type Name Description SolidColorBrush brush Returns Type Description String HasResource(String, out Color) Declaration public bool HasResource(string colorText, out Color color) Parameters Type Name Description String colorText Color color Returns Type Description Boolean HasResource(Brush) Declaration public bool HasResource(Brush brush) Parameters Type Name Description Brush brush Returns Type Description Boolean HasResource(Color) Declaration public bool HasResource(Color color) Parameters Type Name Description Color color Returns Type Description Boolean HasResource(Pen) Declaration public bool HasResource(Pen pen) Parameters Type Name Description Pen pen Returns Type Description Boolean HasResource(SolidColorBrush) Declaration public bool HasResource(SolidColorBrush brush) Parameters Type Name Description SolidColorBrush brush Returns Type Description Boolean InitialiseKeys() Declaration public void InitialiseKeys() TryParseColor(String, out Color) Declaration public static bool TryParseColor(string colorText, out Color color) Parameters Type Name Description String colorText Color color Returns Type Description Boolean"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.html",
    "title": "Class WpfDrawingSettings | SharpVectors Documentation",
    "keywords": "Class WpfDrawingSettings This provides the options for the drawing/rendering engine of the WPF. Inheritance Object DispatcherObject DependencyObject WpfObject WpfSettings < WpfDrawingSettings > WpfDrawingSettings Implements ICloneable IXmlSerializable Inherited Members WpfSettings<WpfDrawingSettings>._comparer WpfSettings<WpfDrawingSettings>.IXmlSerializable.GetSchema() WpfSettings<WpfDrawingSettings>.WriteEnum(XmlWriter, String, String) WpfSettings<WpfDrawingSettings>.WriteEnum(XmlWriter, String, String, String) WpfSettings<WpfDrawingSettings>.WriteCData(XmlWriter, String, String) WpfSettings<WpfDrawingSettings>.WriteCData(XmlWriter, String, String, String) WpfSettings<WpfDrawingSettings>.WriteProperty(XmlWriter, String, String) WpfSettings<WpfDrawingSettings>.WriteProperty(XmlWriter, String, String, String) WpfSettings<WpfDrawingSettings>.WriteProperty(XmlWriter, String, Object) WpfSettings<WpfDrawingSettings>.WriteProperty(XmlWriter, String, Boolean) WpfSettings<WpfDrawingSettings>.WriteProperty(XmlWriter, String, Int32) WpfSettings<WpfDrawingSettings>.ICloneable.Clone() WpfObject.NotNull(Object, String) WpfObject.NotNull(String, String) WpfObject.NotEmpty(String, String) WpfObject.NotNullNotEmpty(String, String) WpfObject.NotNullNotEmpty<E>(IList<E>, String) WpfObject.PathMustExist(String, String) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax [Serializable] public sealed class WpfDrawingSettings : WpfSettings<WpfDrawingSettings>, ICloneable, IXmlSerializable Constructors WpfDrawingSettings() Initializes a new instance of the WpfDrawingSettings class with the default parameters and settings. Declaration public WpfDrawingSettings() WpfDrawingSettings(WpfDrawingSettings) Initializes a new instance of the WpfDrawingSettings class with the specified initial drawing or rendering settings, a copy constructor. Declaration public WpfDrawingSettings(WpfDrawingSettings settings) Parameters Type Name Description WpfDrawingSettings settings This specifies the initial options for the rendering or drawing engine. Fields PropertyIsResources Declaration public const string PropertyIsResources = \"_IsResources\" Field Value Type Description String PropertyNoneBrush Declaration public const string PropertyNoneBrush = \"_NoneBrush\" Field Value Type Description String PropertyNonePen Declaration public const string PropertyNonePen = \"_NonePen\" Field Value Type Description String XmlTagName Gets the name of the XML tag name, under which this object is stored. Declaration public const string XmlTagName = \"drawingSettings\" Field Value Type Description String XmlVersion Declaration public const string XmlVersion = \"1.0.0\" Field Value Type Description String Properties CssVariables Gets or sets user-defined CSS custom properties for the rendering. Declaration public IDictionary<string, string> CssVariables { get; set; } Property Value Type Description IDictionary < String , String > A IDictionary<TKey,TValue> of user-defined styles. This value is never null . CultureInfo Gets or sets the main culture information used for rendering texts. Declaration public CultureInfo CultureInfo { get; set; } Property Value Type Description CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts. DefaultFontFamily Gets or sets the globally available default font family. Declaration public static FontFamily DefaultFontFamily { get; set; } Property Value Type Description FontFamily An instance of the FontFamily specifying the globally available font family. The default is Arial font (since Arial Unicode MS is no longer shipped by MS). family. DefaultFontName Gets or sets the default font family name, which is used when a text node does not specify a font family name. Declaration public string DefaultFontName { get; set; } Property Value Type Description String A string containing the default font family name. The default is the Arial Unicode MS font, for its support of Unicode texts. This value cannot be null or empty. DpiScale Declaration public DpiScale DpiScale { get; set; } Property Value Type Description DpiScale DrawingResources Declaration public WpfDrawingResources DrawingResources { get; set; } Property Value Type Description WpfDrawingResources EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. Declaration public bool EnsureViewboxPosition { get; set; } Property Value Type Description Boolean This determines whether a transformation is applied to the rendered drawing. For drawings where the top-left position of the viewbox is off the screen, due to negative values, this will ensure the drawing is visible. The default value is true . Set this value to false if you wish to apply your own transformations to the drawings. EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. Declaration public bool EnsureViewboxSize { get; set; } Property Value Type Description Boolean For image outputs, this will force the original size to be saved. The default value is false . However, the ImageSvgConverter converted sets this to true by default. Remarks Setting this to true will cause the rendering process to draw a transparent box around the output, if a viewbox is defined. This will ensure that the original image size is saved. FontFamilies Declaration public IEnumerable<FontFamily> FontFamilies { get; } Property Value Type Description IEnumerable < FontFamily > FontFamilyNames Declaration public IDictionary<string, string> FontFamilyNames { get; } Property Value Type Description IDictionary < String , String > FontLocations Declaration public IEnumerable<string> FontLocations { get; } Property Value Type Description IEnumerable < String > GenericCursive Gets or set the globally available generic cursive font family. Declaration public static FontFamily GenericCursive { get; set; } Property Value Type Description FontFamily An instance of FontFamily specifying the generic cursive font family. The default is Comic Sans MS font family. GenericFantasy Gets or set the globally available generic fantasy font family. Declaration public static FontFamily GenericFantasy { get; set; } Property Value Type Description FontFamily An instance of FontFamily specifying the generic fantasy font family. The default is Impact font family. GenericMonospace Gets or set the globally available generic Monospace font family. Declaration public static FontFamily GenericMonospace { get; set; } Property Value Type Description FontFamily An instance of FontFamily specifying the generic Monospace font family. The default is MS Gothic font family. GenericSansSerif Gets or set the globally available generic sans serif font family. Declaration public static FontFamily GenericSansSerif { get; set; } Property Value Type Description FontFamily An instance of FontFamily specifying the generic sans serif font family. The default is Tahoma font family. Remarks The possible font names are Tahoma , Arial , Verdana , Trebuchet , MS Sans Serif and Helvetica . GenericSerif Gets or set the globally available generic serif font family. Declaration public static FontFamily GenericSerif { get; set; } Property Value Type Description FontFamily An instance of FontFamily specifying the generic serif font family. The default is Times New Roman font family. HasFontFamilies Declaration public bool HasFontFamilies { get; } Property Value Type Description Boolean HasPixelSize Declaration public bool HasPixelSize { get; } Property Value Type Description Boolean IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. Declaration public bool IgnoreRootViewbox { get; set; } Property Value Type Description Boolean For image outputs, this will force the original size to be saved. The default value is false . Remarks There are reported cases where are diagrams displayed in Inkscape program, but will not show when converted. These are diagrams on the drawing canvas of Inkspace but outside the svg viewbox. When converted the drawings are also converted but not displayed due to clipping. Setting this property to true will clear the clipping region on conversion. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. Declaration public bool IncludeRuntime { get; set; } Property Value Type Description Boolean This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false . The default is true . Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc. InteractiveMode Declaration public SvgInteractiveModes InteractiveMode { get; set; } Property Value Type Description SvgInteractiveModes Item[String] Declaration public object this[string name] { get; set; } Parameters Type Name Description String name Property Value Type Description Object NeutralCultureInfo Gets the neutral language for text rendering. Declaration public CultureInfo NeutralCultureInfo { get; } Property Value Type Description CultureInfo An instance of the CultureInfo specifying the neutral culture information for texts. The default is the English culture. Remarks For vertical text rendering, there is a basic text splitting into Western and other languages. This culture information is used to render the Western language part, and the mains culture information for the other languages. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry . Declaration public bool OptimizePath { get; set; } Property Value Type Description Boolean This is true if the path geometry is optimized using the StreamGeometry ; otherwise, it is false . The default is true . PixelHeight Declaration public int PixelHeight { get; set; } Property Value Type Description Int32 PixelWidth Declaration public int PixelWidth { get; set; } Property Value Type Description Int32 TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. Declaration public bool TextAsGeometry { get; set; } Property Value Type Description Boolean This is true if texts are rendered as path geometries; otherwise, this is false . The default is false . UserAgentCssFilePath Declaration public string UserAgentCssFilePath { get; set; } Property Value Type Description String UserCssFilePath Declaration public string UserCssFilePath { get; set; } Property Value Type Description String Visitors Declaration public WpfVisitors Visitors { get; } Property Value Type Description WpfVisitors Methods AddFontFamilyName(String, String) Declaration public void AddFontFamilyName(string mappedName, string fontName) Parameters Type Name Description String mappedName String fontName AddFontLocation(String) Declaration public void AddFontLocation(string fontLocation) Parameters Type Name Description String fontLocation Clone() This creates a new settings object that is a deep copy of the current instance. Declaration public override WpfDrawingSettings Clone() Returns Type Description WpfDrawingSettings A new settings object that is a deep copy of this instance. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.Wpf.WpfDrawingSettings>.Clone() Remarks This is deep cloning of the members of this settings object. If you need just a copy, use the copy constructor to create a new instance. LookupFontFamily(String, FontWeight, FontStyle, FontStretch) Declaration public FontFamily LookupFontFamily(string fontName, FontWeight weight, FontStyle style, FontStretch stretch) Parameters Type Name Description String fontName FontWeight weight FontStyle style FontStretch stretch Returns Type Description FontFamily ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. Declaration public override void ReadXml(XmlReader reader) Parameters Type Name Description XmlReader reader The reader with which the XML attributes of this object are accessed. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.Wpf.WpfDrawingSettings>.ReadXml(System.Xml.XmlReader) Exceptions Type Condition ArgumentNullException If the reader is null . WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. Declaration public override void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer The XML writer with which the XML format of this object's state is written. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.Wpf.WpfDrawingSettings>.WriteXml(System.Xml.XmlWriter) Exceptions Type Condition ArgumentNullException If the reader is null . Implements System.ICloneable System.Xml.Serialization.IXmlSerializable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfEmbeddedImageVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfEmbeddedImageVisitor.html",
    "title": "Class WpfEmbeddedImageVisitor | SharpVectors Documentation",
    "keywords": "Class WpfEmbeddedImageVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfEmbeddedImageVisitor EmbeddedImageSerializerVisitor EmbeddedImageVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfEmbeddedImageVisitor : WpfVisitor, IDisposable Constructors WpfEmbeddedImageVisitor() Declaration protected WpfEmbeddedImageVisitor() Methods Visit(SvgImageElement, WpfDrawingContext) Declaration public abstract ImageSource Visit(SvgImageElement element, WpfDrawingContext context) Parameters Type Name Description SvgImageElement element WpfDrawingContext context Returns Type Description ImageSource Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFill.html",
    "title": "Class WpfFill | SharpVectors Documentation",
    "keywords": "Class WpfFill Inheritance Object DispatcherObject DependencyObject WpfFill WpfGradientFill WpfPatternFill WpfSolidColorFill Inherited Members DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfFill : DependencyObject Constructors WpfFill() Declaration protected WpfFill() Properties FillType Declaration public abstract WpfFillType FillType { get; } Property Value Type Description WpfFillType IsUserSpace Declaration public abstract bool IsUserSpace { get; } Property Value Type Description Boolean Methods CreateFill(SvgDocument, String) Declaration public static WpfFill CreateFill(SvgDocument document, string absoluteUri) Parameters Type Name Description SvgDocument document String absoluteUri Returns Type Description WpfFill CreateViewportBrush(SvgStyleableElement) Declaration public static Brush CreateViewportBrush(SvgStyleableElement svgElm) Parameters Type Name Description SvgStyleableElement svgElm Returns Type Description Brush GetBrush(Rect, WpfDrawingContext, Transform) Declaration public abstract Brush GetBrush(Rect elementBounds, WpfDrawingContext context, Transform viewTransform) Parameters Type Name Description Rect elementBounds WpfDrawingContext context Transform viewTransform Returns Type Description Brush"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFillType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFillType.html",
    "title": "Enum WpfFillType | SharpVectors Documentation",
    "keywords": "Enum WpfFillType Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public enum WpfFillType Fields Gradient None Pattern Solid Name Description Gradient None Pattern Solid"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.html",
    "title": "Class WpfFontFamilyInfo | SharpVectors Documentation",
    "keywords": "Class WpfFontFamilyInfo Inheritance Object WpfFontFamilyInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public class WpfFontFamilyInfo Constructors WpfFontFamilyInfo(WpfFontFamilyType, String, FontFamily, FontWeight, FontStyle, FontStretch) Declaration public WpfFontFamilyInfo(WpfFontFamilyType familyType, string fontName, FontFamily family, FontWeight weight, FontStyle style, FontStretch stretch) Parameters Type Name Description WpfFontFamilyType familyType String fontName FontFamily family FontWeight weight FontStyle style FontStretch stretch WpfFontFamilyInfo(WpfFontFamilyType, FontFamily, FontWeight, FontStyle, FontStretch) Declaration public WpfFontFamilyInfo(WpfFontFamilyType familyType, FontFamily family, FontWeight weight, FontStyle style, FontStretch stretch) Parameters Type Name Description WpfFontFamilyType familyType FontFamily family FontWeight weight FontStyle style FontStretch stretch WpfFontFamilyInfo(String, SvgFontElement, FontWeight, FontStyle, FontStretch) Declaration public WpfFontFamilyInfo(string fontName, SvgFontElement fontElement, FontWeight weight, FontStyle style, FontStretch stretch) Parameters Type Name Description String fontName SvgFontElement fontElement FontWeight weight FontStyle style FontStretch stretch WpfFontFamilyInfo(FontFamily, FontWeight, FontStyle, FontStretch) Declaration public WpfFontFamilyInfo(FontFamily family, FontWeight weight, FontStyle style, FontStretch stretch) Parameters Type Name Description FontFamily family FontWeight weight FontStyle style FontStretch stretch Fields Empty Declaration public static readonly WpfFontFamilyInfo Empty Field Value Type Description WpfFontFamilyInfo Properties Family Declaration public FontFamily Family { get; } Property Value Type Description FontFamily FontElement Declaration public SvgFontElement FontElement { get; } Property Value Type Description SvgFontElement FontFamilyType Declaration public WpfFontFamilyType FontFamilyType { get; } Property Value Type Description WpfFontFamilyType IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Name Declaration public string Name { get; } Property Value Type Description String Stretch Declaration public FontStretch Stretch { get; } Property Value Type Description FontStretch Style Declaration public FontStyle Style { get; } Property Value Type Description FontStyle Variant Declaration public string Variant { get; set; } Property Value Type Description String Weight Declaration public FontWeight Weight { get; } Property Value Type Description FontWeight"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyType.html",
    "title": "Enum WpfFontFamilyType | SharpVectors Documentation",
    "keywords": "Enum WpfFontFamilyType Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public enum WpfFontFamilyType Fields Generic None OpenType Private Svg System Woff Name Description Generic None OpenType Private Svg System Woff"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyVisitor.html",
    "title": "Class WpfFontFamilyVisitor | SharpVectors Documentation",
    "keywords": "Class WpfFontFamilyVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfFontFamilyVisitor FontFamilyVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfFontFamilyVisitor : WpfVisitor, IDisposable Constructors WpfFontFamilyVisitor() Declaration protected WpfFontFamilyVisitor() Methods Visit(String, WpfFontFamilyInfo, WpfDrawingContext) Declaration public abstract WpfFontFamilyInfo Visit(string fontName, WpfFontFamilyInfo familyInfo, WpfDrawingContext context) Parameters Type Name Description String fontName WpfFontFamilyInfo familyInfo WpfDrawingContext context Returns Type Description WpfFontFamilyInfo Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGradientFill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGradientFill.html",
    "title": "Class WpfGradientFill | SharpVectors Documentation",
    "keywords": "Class WpfGradientFill Inheritance Object DispatcherObject DependencyObject WpfFill WpfGradientFill Inherited Members WpfFill.CreateFill(SvgDocument, String) WpfFill.CreateViewportBrush(SvgStyleableElement) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfGradientFill : WpfFill Constructors WpfGradientFill(SvgGradientElement) Declaration public WpfGradientFill(SvgGradientElement gradientElement) Parameters Type Name Description SvgGradientElement gradientElement Properties FillType Declaration public override WpfFillType FillType { get; } Property Value Type Description WpfFillType Overrides WpfFill.FillType IsUserSpace Declaration public override bool IsUserSpace { get; } Property Value Type Description Boolean Overrides WpfFill.IsUserSpace Methods GetBrush(Rect, WpfDrawingContext, Transform) Declaration public override Brush GetBrush(Rect elementBounds, WpfDrawingContext context, Transform viewTransform) Parameters Type Name Description Rect elementBounds WpfDrawingContext context Transform viewTransform Returns Type Description Brush Overrides WpfFill.GetBrush(Rect, WpfDrawingContext, Transform)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.html",
    "title": "Class WpfGroupRendering | SharpVectors Documentation",
    "keywords": "Class WpfGroupRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfGroupRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfGroupRendering : WpfRendering, IDisposable Constructors WpfGroupRendering(SvgElement) Declaration public WpfGroupRendering(SvgElement element) Parameters Type Name Description SvgElement element Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.html",
    "title": "Class WpfHitPath | SharpVectors Documentation",
    "keywords": "Class WpfHitPath Inheritance Object WpfHitPath Implements IEquatable < WpfHitPath > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfHitPath : IEquatable<WpfHitPath> Constructors WpfHitPath() Declaration public WpfHitPath() WpfHitPath(WpfHitPath, String) Declaration public WpfHitPath(WpfHitPath parent, string value) Parameters Type Name Description WpfHitPath parent String value WpfHitPath(String) Declaration public WpfHitPath(string value) Parameters Type Name Description String value Fields RootValue Declaration public const string RootValue = \"(Root)\" Field Value Type Description String Separator Declaration public const string Separator = \"/\" Field Value Type Description String Splitter Declaration public static readonly char[] Splitter Field Value Type Description Char [] Properties Children Declaration public WpfHitPath[] Children { get; } Property Value Type Description WpfHitPath [] FirstChild Declaration public WpfHitPath FirstChild { get; } Property Value Type Description WpfHitPath HasChild Declaration public bool HasChild { get; } Property Value Type Description Boolean IsRoot Declaration public bool IsRoot { get; } Property Value Type Description Boolean LastChild Declaration public WpfHitPath LastChild { get; } Property Value Type Description WpfHitPath Parent Declaration public WpfHitPath Parent { get; set; } Property Value Type Description WpfHitPath Path Declaration public string Path { get; } Property Value Type Description String Root Declaration public WpfHitPath Root { get; } Property Value Type Description WpfHitPath SplitPath Declaration public string[] SplitPath { get; } Property Value Type Description String [] Value Declaration public string Value { get; set; } Property Value Type Description String Methods AddChild(WpfHitPath) Declaration public WpfHitPath AddChild(WpfHitPath child) Parameters Type Name Description WpfHitPath child Returns Type Description WpfHitPath AddChild(String) Declaration public WpfHitPath AddChild(string value) Parameters Type Name Description String value Returns Type Description WpfHitPath Equals(WpfHitPath) Declaration public bool Equals(WpfHitPath other) Parameters Type Name Description WpfHitPath other Returns Type Description Boolean Equals(WpfHitPath, WpfHitPath) Declaration public static bool Equals(WpfHitPath path1, WpfHitPath path2) Parameters Type Name Description WpfHitPath path1 WpfHitPath path2 Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() GetTransform(WpfDrawingDocument, Drawing) Declaration public Transform GetTransform(WpfDrawingDocument document, Drawing hitDrawing) Parameters Type Name Description WpfDrawingDocument document Drawing hitDrawing Returns Type Description Transform ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators Equality(WpfHitPath, WpfHitPath) Declaration public static bool operator ==(WpfHitPath path1, WpfHitPath path2) Parameters Type Name Description WpfHitPath path1 WpfHitPath path2 Returns Type Description Boolean Inequality(WpfHitPath, WpfHitPath) Declaration public static bool operator !=(WpfHitPath path1, WpfHitPath path2) Parameters Type Name Description WpfHitPath path1 WpfHitPath path2 Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.html",
    "title": "Class WpfHitTestResult | SharpVectors Documentation",
    "keywords": "Class WpfHitTestResult Inheritance Object WpfHitTestResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public class WpfHitTestResult Constructors WpfHitTestResult(Int32, Int32, SvgElement, Drawing) Declaration public WpfHitTestResult(int pointX, int pointY, SvgElement element, Drawing drawing) Parameters Type Name Description Int32 pointX Int32 pointY SvgElement element Drawing drawing WpfHitTestResult(Point, SvgElement, Drawing) Declaration public WpfHitTestResult(Point point, SvgElement element, Drawing drawing) Parameters Type Name Description Point point SvgElement element Drawing drawing WpfHitTestResult(Rect, SvgElement, Drawing) Declaration public WpfHitTestResult(Rect rect, SvgElement element, Drawing drawing) Parameters Type Name Description Rect rect SvgElement element Drawing drawing Fields Empty Declaration public static readonly WpfHitTestResult Empty Field Value Type Description WpfHitTestResult Properties Drawing Declaration public Drawing Drawing { get; } Property Value Type Description Drawing Element Gets the SVG object that was hit. Declaration public SvgElement Element { get; } Property Value Type Description SvgElement IsHit Declaration public bool IsHit { get; } Property Value Type Description Boolean Point The point value to hit test against. Declaration public Point? Point { get; } Property Value Type Description Nullable < Point > Rect Declaration public Rect? Rect { get; } Property Value Type Description Nullable < Rect >"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTextLevel.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTextLevel.html",
    "title": "Enum WpfHitTextLevel | SharpVectors Documentation",
    "keywords": "Enum WpfHitTextLevel Hit-test options for text elements. Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public enum WpfHitTextLevel Fields Bounds Glyphs Name Description Bounds Test only the bounds of the rendered text. Glyphs Test the bounds and glyph geometris in the rendered text."
  },
  "api/SharpVectors.Renderers.Wpf.WpfIDVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfIDVisitor.html",
    "title": "Class WpfIDVisitor | SharpVectors Documentation",
    "keywords": "Class WpfIDVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfIDVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfIDVisitor : WpfVisitor, IDisposable Constructors WpfIDVisitor() Declaration protected WpfIDVisitor() Methods Visit(SvgElement, WpfDrawingContext) Declaration public abstract string Visit(SvgElement element, WpfDrawingContext context) Parameters Type Name Description SvgElement element WpfDrawingContext context Returns Type Description String Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfImageRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfImageRendering.html",
    "title": "Class WpfImageRendering | SharpVectors Documentation",
    "keywords": "Class WpfImageRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfImageRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfImageRendering : WpfRendering, IDisposable Constructors WpfImageRendering(SvgElement) Declaration public WpfImageRendering(SvgElement element) Parameters Type Name Description SvgElement element Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.html",
    "title": "Class WpfLinkVisitor | SharpVectors Documentation",
    "keywords": "Class WpfLinkVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfLinkVisitor LinkVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfLinkVisitor : WpfVisitor, IDisposable Constructors WpfLinkVisitor() Declaration protected WpfLinkVisitor() Properties AggregatedLayerName Declaration public abstract string AggregatedLayerName { get; } Property Value Type Description String Aggregates Declaration public abstract bool Aggregates { get; } Property Value Type Description Boolean IsAggregate Declaration public abstract bool IsAggregate { get; } Property Value Type Description Boolean Methods Exists(String) Declaration public abstract bool Exists(string linkId) Parameters Type Name Description String linkId Returns Type Description Boolean Initialize(DrawingGroup, WpfDrawingContext) Declaration public abstract void Initialize(DrawingGroup linkGroup, WpfDrawingContext context) Parameters Type Name Description DrawingGroup linkGroup WpfDrawingContext context Visit(DrawingGroup, SvgAElement, WpfDrawingContext, Single) Declaration public abstract void Visit(DrawingGroup group, SvgAElement element, WpfDrawingContext context, float opacity) Parameters Type Name Description DrawingGroup group SvgAElement element WpfDrawingContext context Single opacity Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.html",
    "title": "Class WpfMarkerRendering | SharpVectors Documentation",
    "keywords": "Class WpfMarkerRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfMarkerRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfMarkerRendering : WpfRendering, IDisposable Constructors WpfMarkerRendering(SvgElement) Declaration public WpfMarkerRendering(SvgElement element) Parameters Type Name Description SvgElement element Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) RenderMarker(WpfDrawingRenderer, WpfDrawingContext, SvgMarkerPosition, SvgStyleableElement) Declaration public void RenderMarker(WpfDrawingRenderer renderer, WpfDrawingContext gr, SvgMarkerPosition markerPos, SvgStyleableElement refElement) Parameters Type Name Description WpfDrawingRenderer renderer WpfDrawingContext gr SvgMarkerPosition markerPos SvgStyleableElement refElement Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPathRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPathRendering.html",
    "title": "Class WpfPathRendering | SharpVectors Documentation",
    "keywords": "Class WpfPathRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfPathRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfPathRendering : WpfRendering, IDisposable Constructors WpfPathRendering(SvgElement) Declaration public WpfPathRendering(SvgElement element) Parameters Type Name Description SvgElement element Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternFill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternFill.html",
    "title": "Class WpfPatternFill | SharpVectors Documentation",
    "keywords": "Class WpfPatternFill Inheritance Object DispatcherObject DependencyObject WpfFill WpfPatternFill Inherited Members WpfFill.CreateFill(SvgDocument, String) WpfFill.CreateViewportBrush(SvgStyleableElement) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfPatternFill : WpfFill Constructors WpfPatternFill(SvgPatternElement) Declaration public WpfPatternFill(SvgPatternElement patternElement) Parameters Type Name Description SvgPatternElement patternElement Properties FillType Declaration public override WpfFillType FillType { get; } Property Value Type Description WpfFillType Overrides WpfFill.FillType IsUserSpace Declaration public override bool IsUserSpace { get; } Property Value Type Description Boolean Overrides WpfFill.IsUserSpace Methods GetBrush(Rect, WpfDrawingContext, Transform) Declaration public override Brush GetBrush(Rect elementBounds, WpfDrawingContext context, Transform viewTransform) Parameters Type Name Description Rect elementBounds WpfDrawingContext context Transform viewTransform Returns Type Description Brush Overrides WpfFill.GetBrush(Rect, WpfDrawingContext, Transform)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.html",
    "title": "Class WpfPatternRendering | SharpVectors Documentation",
    "keywords": "Class WpfPatternRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfPatternRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfPatternRendering : WpfRendering, IDisposable Constructors WpfPatternRendering(SvgElement) Declaration public WpfPatternRendering(SvgElement element) Parameters Type Name Description SvgElement element Properties IsRecursive Declaration public override bool IsRecursive { get; } Property Value Type Description Boolean Overrides WpfRenderingBase.IsRecursive Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.html",
    "title": "Class WpfRendererObject | SharpVectors Documentation",
    "keywords": "Class WpfRendererObject Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfTextRenderer WpfDrawingRenderer WpfRenderingBase WpfVisitor Implements IDisposable Inherited Members DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfRendererObject : DependencyObject, IDisposable Constructors WpfRendererObject() Declaration protected WpfRendererObject() WpfRendererObject(WpfDrawingContext) Declaration protected WpfRendererObject(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context Fields _context Declaration protected WpfDrawingContext _context Field Value Type Description WpfDrawingContext _flattenClosedPath Declaration protected bool _flattenClosedPath Field Value Type Description Boolean _flattenTolerance Declaration protected double _flattenTolerance Field Value Type Description Double _flattenToleranceType Declaration protected ToleranceType _flattenToleranceType Field Value Type Description ToleranceType _isDisposed Declaration protected bool _isDisposed Field Value Type Description Boolean Properties Context Declaration public virtual WpfDrawingContext Context { get; } Property Value Type Description WpfDrawingContext IsDisposed Declaration public bool IsDisposed { get; } Property Value Type Description Boolean IsInitialized Declaration public virtual bool IsInitialized { get; } Property Value Type Description Boolean Methods Combine(Transform, Transform, Boolean, Boolean) Declaration public static Transform Combine(Transform first, Transform second, bool groupedFormat, bool checkEquality = true) Parameters Type Name Description Transform first Transform second Boolean groupedFormat Boolean checkEquality Returns Type Description Transform CreateGeometry(ISvgElement, Boolean) Declaration public Geometry CreateGeometry(ISvgElement element, bool optimizePath) Parameters Type Name Description ISvgElement element Boolean optimizePath Returns Type Description Geometry CreateGeometry(SvgCircleElement) Declaration public Geometry CreateGeometry(SvgCircleElement element) Parameters Type Name Description SvgCircleElement element Returns Type Description Geometry CreateGeometry(SvgEllipseElement) Declaration public Geometry CreateGeometry(SvgEllipseElement element) Parameters Type Name Description SvgEllipseElement element Returns Type Description Geometry CreateGeometry(SvgLineElement) Declaration public Geometry CreateGeometry(SvgLineElement element) Parameters Type Name Description SvgLineElement element Returns Type Description Geometry CreateGeometry(SvgPathElement) Declaration public Geometry CreateGeometry(SvgPathElement element) Parameters Type Name Description SvgPathElement element Returns Type Description Geometry CreateGeometry(SvgPolygonElement) Declaration public Geometry CreateGeometry(SvgPolygonElement element) Parameters Type Name Description SvgPolygonElement element Returns Type Description Geometry CreateGeometry(SvgPolylineElement) Declaration public Geometry CreateGeometry(SvgPolylineElement element) Parameters Type Name Description SvgPolylineElement element Returns Type Description Geometry CreateGeometry(SvgRectElement) Declaration public Geometry CreateGeometry(SvgRectElement element) Parameters Type Name Description SvgRectElement element Returns Type Description Geometry CreateGeometryEx(SvgPathElement) Declaration public Geometry CreateGeometryEx(SvgPathElement element) Parameters Type Name Description SvgPathElement element Returns Type Description Geometry Dispose() Declaration public void Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Finalize() Declaration protected void Finalize() GetElementClassName(SvgElement, WpfDrawingContext) Declaration public static string GetElementClassName(SvgElement element, WpfDrawingContext context = null) Parameters Type Name Description SvgElement element WpfDrawingContext context Returns Type Description String GetElementName(SvgElement, WpfDrawingContext) Declaration public static string GetElementName(SvgElement element, WpfDrawingContext context = null) Parameters Type Name Description SvgElement element WpfDrawingContext context Returns Type Description String IsIdentifierPart(Char) Declaration public static bool IsIdentifierPart(char c) Parameters Type Name Description Char c Returns Type Description Boolean IsIdentifierStart(Char) Declaration public static bool IsIdentifierStart(char c) Parameters Type Name Description Char c Returns Type Description Boolean IsNullOrIdentity(Transform) Declaration public static bool IsNullOrIdentity(Transform transform) Parameters Type Name Description Transform transform Returns Type Description Boolean IsValidIdentifier(String) Declaration public static bool IsValidIdentifier(string identifier) Parameters Type Name Description String identifier Returns Type Description Boolean SplitByCaps(String, out String) Declaration public static bool SplitByCaps(string input, out string output) Parameters Type Name Description String input String output Returns Type Description Boolean Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.html",
    "title": "Class WpfRendering | SharpVectors Documentation",
    "keywords": "Class WpfRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfARendering WpfGroupRendering WpfImageRendering WpfMarkerRendering WpfPathRendering WpfPatternRendering WpfSvgRendering WpfSwitchRendering WpfSymbolRendering WpfTextRendering WpfUseRendering Implements IDisposable Inherited Members WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.Render(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public class WpfRendering : WpfRenderingBase, IDisposable Constructors WpfRendering(SvgElement) Declaration public WpfRendering(SvgElement element) Parameters Type Name Description SvgElement element Properties ClipGeometry Declaration public Geometry ClipGeometry { get; set; } Property Value Type Description Geometry ClipUnits Declaration public SvgUnitType ClipUnits { get; } Property Value Type Description SvgUnitType CombineTransforms Declaration public bool CombineTransforms { get; set; } Property Value Type Description Boolean MaskContentUnits Declaration public SvgUnitType MaskContentUnits { get; } Property Value Type Description SvgUnitType Masking Declaration public Brush Masking { get; set; } Property Value Type Description Brush MaskUnits Declaration public SvgUnitType MaskUnits { get; } Property Value Type Description SvgUnitType Transform Declaration public Transform Transform { get; set; } Property Value Type Description Transform Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.BeforeRender(WpfDrawingRenderer) CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) Declaration protected double CalcLengthUnit(SvgLength length, SvgLengthDirection dir, Rect bounds) Parameters Type Name Description SvgLength length SvgLengthDirection dir Rect bounds Returns Type Description Double Create(ISvgElement) Declaration public static WpfRendering Create(ISvgElement element) Parameters Type Name Description ISvgElement element Returns Type Description WpfRendering CreateByUri(SvgDocument, String, String) Generates a new RenderingNode that corresponds to the given Uri. Declaration public static WpfRendering CreateByUri(SvgDocument document, string baseUri, string url) Parameters Type Name Description SvgDocument document String baseUri The base Uri. String url The url. Returns Type Description WpfRendering The generated RenderingNode that corresponds to the given Uri. Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides WpfRenderingBase.Dispose(Boolean) ExtractMarkerUrl(String) Declaration protected static string ExtractMarkerUrl(string propValue) Parameters Type Name Description String propValue Returns Type Description String FitToViewbox(WpfDrawingContext, SvgElement, Rect) Declaration protected void FitToViewbox(WpfDrawingContext context, SvgElement svgElement, Rect elementBounds) Parameters Type Name Description WpfDrawingContext context SvgElement svgElement Rect elementBounds FitToViewbox(WpfDrawingContext, Rect) Declaration protected void FitToViewbox(WpfDrawingContext context, Rect elementBounds) Parameters Type Name Description WpfDrawingContext context Rect elementBounds GetTitleElement() Declaration protected SvgTitleElement GetTitleElement() Returns Type Description SvgTitleElement Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRenderingBase.Initialize(SvgElement) IsPresentationMarker(SvgStyleableElement) Declaration protected static bool IsPresentationMarker(SvgStyleableElement styleElm) Parameters Type Name Description SvgStyleableElement styleElm Returns Type Description Boolean RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) Declaration protected static void RenderMarkers(WpfDrawingRenderer renderer, SvgStyleableElement styleElm, WpfDrawingContext gr) Parameters Type Name Description WpfDrawingRenderer renderer SvgStyleableElement styleElm WpfDrawingContext gr SetClip(WpfDrawingContext) Declaration protected void SetClip(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context SetMask(WpfDrawingContext) Declaration protected void SetMask(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context SetQuality(WpfDrawingContext) Declaration protected void SetQuality(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context SetTransform(WpfDrawingContext) Declaration protected void SetTransform(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.html",
    "title": "Class WpfRenderingBase | SharpVectors Documentation",
    "keywords": "Class WpfRenderingBase Defines the interface required for a rendering node to interact with the renderer and the SVG DOM Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering Implements IDisposable Inherited Members WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfRenderingBase : WpfRendererObject, IDisposable Remarks Rename: WpfElementRenderer, WpfRenderingObject Constructors WpfRenderingBase(SvgElement) Declaration protected WpfRenderingBase(SvgElement element) Parameters Type Name Description SvgElement element WpfRenderingBase(SvgElement, WpfDrawingContext) Declaration protected WpfRenderingBase(SvgElement element, WpfDrawingContext context) Parameters Type Name Description SvgElement element WpfDrawingContext context Fields _elementId Declaration protected string _elementId Field Value Type Description String _isReady Declaration protected bool _isReady Field Value Type Description Boolean _paintContext Declaration protected WpfSvgPaintContext _paintContext Field Value Type Description WpfSvgPaintContext _svgElement Declaration protected SvgElement _svgElement Field Value Type Description SvgElement _uniqueId Declaration protected string _uniqueId Field Value Type Description String Properties Element Declaration public SvgElement Element { get; } Property Value Type Description SvgElement IsReady Declaration public bool IsReady { get; protected set; } Property Value Type Description Boolean IsRecursive Declaration public virtual bool IsRecursive { get; } Property Value Type Description Boolean PaintContext Declaration public WpfSvgPaintContext PaintContext { get; } Property Value Type Description WpfSvgPaintContext Methods AfterRender(WpfDrawingRenderer) Declaration public virtual void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer BeforeRender(WpfDrawingRenderer) Declaration public virtual void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides WpfRendererObject.Dispose(Boolean) GetElementClass() Declaration protected string GetElementClass() Returns Type Description String GetElementName() Declaration protected string GetElementName() Returns Type Description String Initialize(SvgElement) Declaration protected virtual void Initialize(SvgElement element) Parameters Type Name Description SvgElement element NeedRender(WpfDrawingRenderer) Declaration public virtual bool NeedRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Returns Type Description Boolean Render(WpfDrawingRenderer) Declaration public virtual void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Rendered(Drawing) Declaration protected void Rendered(Drawing drawing) Parameters Type Name Description Drawing drawing Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.html",
    "title": "Class WpfRenderingHelper | SharpVectors Documentation",
    "keywords": "Class WpfRenderingHelper Inheritance Object DispatcherObject DependencyObject WpfRenderingHelper Inherited Members DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfRenderingHelper : DependencyObject Remarks Rename: WpfDocumentRenderer Constructors WpfRenderingHelper(WpfDrawingRenderer) Declaration public WpfRenderingHelper(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Methods Render(ISvgDocument) Declaration public void Render(ISvgDocument docElement) Parameters Type Name Description ISvgDocument docElement Render(ISvgElement) Declaration public void Render(ISvgElement svgElement) Parameters Type Name Description ISvgElement svgElement Render(SvgDocument) Declaration public void Render(SvgDocument docElement) Parameters Type Name Description SvgDocument docElement RenderAs(SvgElement) Declaration public void RenderAs(SvgElement svgElement) Parameters Type Name Description SvgElement svgElement RenderChildren(ISvgElement) Declaration public void RenderChildren(ISvgElement svgElement) Parameters Type Name Description ISvgElement svgElement RenderMask(ISvgElement) Declaration public void RenderMask(ISvgElement svgElement) Parameters Type Name Description ISvgElement svgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.html",
    "title": "Class WpfResourceSettings | SharpVectors Documentation",
    "keywords": "Class WpfResourceSettings Inheritance Object DispatcherObject DependencyObject WpfObject WpfSettings < WpfResourceSettings > WpfResourceSettings Implements ICloneable IXmlSerializable Inherited Members WpfSettings<WpfResourceSettings>._comparer WpfSettings<WpfResourceSettings>.IXmlSerializable.GetSchema() WpfSettings<WpfResourceSettings>.WriteEnum(XmlWriter, String, String) WpfSettings<WpfResourceSettings>.WriteEnum(XmlWriter, String, String, String) WpfSettings<WpfResourceSettings>.WriteCData(XmlWriter, String, String) WpfSettings<WpfResourceSettings>.WriteCData(XmlWriter, String, String, String) WpfSettings<WpfResourceSettings>.WriteProperty(XmlWriter, String, String) WpfSettings<WpfResourceSettings>.WriteProperty(XmlWriter, String, String, String) WpfSettings<WpfResourceSettings>.WriteProperty(XmlWriter, String, Object) WpfSettings<WpfResourceSettings>.WriteProperty(XmlWriter, String, Boolean) WpfSettings<WpfResourceSettings>.WriteProperty(XmlWriter, String, Int32) WpfSettings<WpfResourceSettings>.ICloneable.Clone() WpfObject.NotNull(Object, String) WpfObject.NotNull(String, String) WpfObject.NotEmpty(String, String) WpfObject.NotNullNotEmpty(String, String) WpfObject.NotNullNotEmpty<E>(IList<E>, String) WpfObject.PathMustExist(String, String) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax [Serializable] public sealed class WpfResourceSettings : WpfSettings<WpfResourceSettings>, ICloneable, IXmlSerializable Constructors WpfResourceSettings() Declaration public WpfResourceSettings() WpfResourceSettings(WpfResourceSettings) Declaration public WpfResourceSettings(WpfResourceSettings source) Parameters Type Name Description WpfResourceSettings source Fields XmlTagName Gets the name of the XML tag name, under which this object is stored. Declaration public const string XmlTagName = \"resourceSettings\" Field Value Type Description String XmlVersion Declaration public const string XmlVersion = \"1.0.0\" Field Value Type Description String Properties BindPenToBrushes Declaration public bool BindPenToBrushes { get; set; } Property Value Type Description Boolean BindToColors Declaration public bool BindToColors { get; set; } Property Value Type Description Boolean BindToResources Declaration public bool BindToResources { get; set; } Property Value Type Description Boolean BrushNameFormat Declaration public string BrushNameFormat { get; set; } Property Value Type Description String ColorNameFormat Declaration public string ColorNameFormat { get; set; } Property Value Type Description String ColorPalette Declaration public IDictionary<Color, string> ColorPalette { get; set; } Property Value Type Description IDictionary < Color , String > IndentSpaces Declaration public int IndentSpaces { get; set; } Property Value Type Description Int32 NumericPrecision Declaration public int NumericPrecision { get; set; } Property Value Type Description Int32 PenNameFormat Declaration public string PenNameFormat { get; set; } Property Value Type Description String ResourceAccess Declaration public ResourceAccessType ResourceAccess { get; set; } Property Value Type Description ResourceAccessType ResourceFreeze Declaration public bool ResourceFreeze { get; set; } Property Value Type Description Boolean ResourceMode Declaration public ResourceModeType ResourceMode { get; set; } Property Value Type Description ResourceModeType ResourceResolverType Declaration public ResourceKeyResolverType ResourceResolverType { get; } Property Value Type Description ResourceKeyResolverType SourceCount Declaration public int SourceCount { get; } Property Value Type Description Int32 Sources Declaration public IEnumerable<string> Sources { get; } Property Value Type Description IEnumerable < String > UseResourceIndex Declaration public bool UseResourceIndex { get; set; } Property Value Type Description Boolean Methods AddSource(String) Declaration public bool AddSource(string sourcePath) Parameters Type Name Description String sourcePath Returns Type Description Boolean ClearSources() Declaration public void ClearSources() Clone() Declaration public override WpfResourceSettings Clone() Returns Type Description WpfResourceSettings Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.Wpf.WpfResourceSettings>.Clone() CopyTo(WpfDrawingResources) Declaration public void CopyTo(WpfDrawingResources resources) Parameters Type Name Description WpfDrawingResources resources IsResolverRegistered() Declaration public bool IsResolverRegistered() Returns Type Description Boolean Load(String) Declaration public void Load(string contentFile) Parameters Type Name Description String contentFile ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. Declaration public override void ReadXml(XmlReader reader) Parameters Type Name Description XmlReader reader The reader with which the XML attributes of this object are accessed. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.Wpf.WpfResourceSettings>.ReadXml(System.Xml.XmlReader) Exceptions Type Condition ArgumentNullException If the reader is null . RegisterResolver(IResourceKeyResolver) Declaration public void RegisterResolver(IResourceKeyResolver keyResolver) Parameters Type Name Description IResourceKeyResolver keyResolver RegisterResolver(Func<IResourceKeyResolver>) Declaration public void RegisterResolver(Func<IResourceKeyResolver> keyResolver) Parameters Type Name Description Func < IResourceKeyResolver > keyResolver RemoveSource(String) Declaration public bool RemoveSource(string sourcePath) Parameters Type Name Description String sourcePath Returns Type Description Boolean RetrieveResolver() Declaration public IResourceKeyResolver RetrieveResolver() Returns Type Description IResourceKeyResolver Save() Declaration public string Save() Returns Type Description String Save(Stream) Declaration public void Save(Stream stream) Parameters Type Name Description Stream stream Save(TextWriter) Declaration public void Save(TextWriter textWriter) Parameters Type Name Description TextWriter textWriter Save(String) Declaration public void Save(string contentFile) Parameters Type Name Description String contentFile WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. Declaration public override void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer The XML writer with which the XML format of this object's state is written. Overrides SharpVectors.Renderers.WpfSettings<SharpVectors.Renderers.Wpf.WpfResourceSettings>.WriteXml(System.Xml.XmlWriter) Exceptions Type Condition ArgumentNullException If the reader is null . Implements System.ICloneable System.Xml.Serialization.IXmlSerializable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.html",
    "title": "Class WpfSolidColorFill | SharpVectors Documentation",
    "keywords": "Class WpfSolidColorFill Inheritance Object DispatcherObject DependencyObject WpfFill WpfSolidColorFill Inherited Members WpfFill.CreateFill(SvgDocument, String) WpfFill.CreateViewportBrush(SvgStyleableElement) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfSolidColorFill : WpfFill Constructors WpfSolidColorFill(SvgSolidColorElement) Declaration public WpfSolidColorFill(SvgSolidColorElement gradientElement) Parameters Type Name Description SvgSolidColorElement gradientElement Properties FillType Declaration public override WpfFillType FillType { get; } Property Value Type Description WpfFillType Overrides WpfFill.FillType IsUserSpace Declaration public override bool IsUserSpace { get; } Property Value Type Description Boolean Overrides WpfFill.IsUserSpace Methods GetBrush(Rect, WpfDrawingContext, Transform) Declaration public override Brush GetBrush(Rect elementBounds, WpfDrawingContext context, Transform viewTransform) Parameters Type Name Description Rect elementBounds WpfDrawingContext context Transform viewTransform Returns Type Description Brush Overrides WpfFill.GetBrush(Rect, WpfDrawingContext, Transform)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgColor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgColor.html",
    "title": "Class WpfSvgColor | SharpVectors Documentation",
    "keywords": "Class WpfSvgColor Inheritance Object CssValue SvgColor WpfSvgColor Implements ISvgColor ICssValue Inherited Members SvgColor._rgbColor SvgColor.CssText SvgColor.ColorType SvgColor.RgbColor SvgColor.IccColor SvgColor.SetRgbColor(String) SvgColor.SetRgbColorIccColor(String, String) SvgColor.SetColor(SvgColorType, String, String) SvgColor.ParseColor(String) CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetAbsoluteValue(String, XmlElement) CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfSvgColor : SvgColor, ISvgColor, ICssValue Constructors WpfSvgColor(SvgStyleableElement, String) Declaration public WpfSvgColor(SvgStyleableElement elm, string propertyName) Parameters Type Name Description SvgStyleableElement elm String propertyName Properties Alpha Declaration public int Alpha { get; } Property Value Type Description Int32 Color Declaration public Color Color { get; } Property Value Type Description Color Name Declaration public string Name { get; } Property Value Type Description String Opacity Declaration public double Opacity { get; } Property Value Type Description Double Implements ISvgColor ICssValue"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.html",
    "title": "Class WpfSvgPaint | SharpVectors Documentation",
    "keywords": "Class WpfSvgPaint Inheritance Object CssValue SvgColor SvgPaint WpfSvgPaint Implements ISvgPaint ISvgColor ICssValue Inherited Members SvgPaint.Fallback SvgPaint.CssText SvgPaint.PaintType SvgPaint.Uri SvgPaint.SetUri(String) SvgPaint.SetPaint(SvgPaintType, String, String, String) SvgColor._rgbColor SvgColor.ColorType SvgColor.RgbColor SvgColor.IccColor SvgColor.SetRgbColor(String) SvgColor.SetRgbColorIccColor(String, String) SvgColor.SetColor(SvgColorType, String, String) SvgColor.ParseColor(String) CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetAbsoluteValue(String, XmlElement) CssValue.GetCssValue(String, Boolean) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfSvgPaint : SvgPaint, ISvgPaint, ISvgColor, ICssValue Constructors WpfSvgPaint(WpfDrawingContext, SvgStyleableElement, String) Declaration public WpfSvgPaint(WpfDrawingContext context, SvgStyleableElement elm, string propName) Parameters Type Name Description WpfDrawingContext context SvgStyleableElement elm String propName Properties FillType Declaration public WpfFillType FillType { get; } Property Value Type Description WpfFillType IsFillTransformable Declaration public bool IsFillTransformable { get; } Property Value Type Description Boolean IsUserSpace Declaration public bool IsUserSpace { get; } Property Value Type Description Boolean PaintServer Declaration public WpfFill PaintServer { get; } Property Value Type Description WpfFill WpfFallback Declaration public WpfSvgPaint WpfFallback { get; } Property Value Type Description WpfSvgPaint Methods GetBrush() Declaration public Brush GetBrush() Returns Type Description Brush GetBrush(Boolean) Declaration public Brush GetBrush(bool setOpacity) Parameters Type Name Description Boolean setOpacity Returns Type Description Brush GetBrush(Geometry) Declaration public Brush GetBrush(Geometry geometry) Parameters Type Name Description Geometry geometry Returns Type Description Brush GetBrush(Geometry, Boolean) Declaration public Brush GetBrush(Geometry geometry, bool setOpacity) Parameters Type Name Description Geometry geometry Boolean setOpacity Returns Type Description Brush GetPen(Boolean) Declaration public Pen GetPen(bool setOpacity = true) Parameters Type Name Description Boolean setOpacity Returns Type Description Pen GetPen(Geometry, Boolean) Declaration public Pen GetPen(Geometry geometry, bool setOpacity = true) Parameters Type Name Description Geometry geometry Boolean setOpacity Returns Type Description Pen GetScopeStroke() Declaration public WpfSvgPaint GetScopeStroke() Returns Type Description WpfSvgPaint IsEqual(Brush, Brush) Declaration public static bool IsEqual(Brush brush1, Brush brush2) Parameters Type Name Description Brush brush1 Brush brush2 Returns Type Description Boolean Implements ISvgPaint ISvgColor ICssValue"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.html",
    "title": "Class WpfSvgPaintContext | SharpVectors Documentation",
    "keywords": "Class WpfSvgPaintContext Inheritance Object WpfSvgPaintContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfSvgPaintContext Constructors WpfSvgPaintContext(String) Declaration public WpfSvgPaintContext(string id) Parameters Type Name Description String id Properties Fill Declaration public WpfSvgPaint Fill { get; set; } Property Value Type Description WpfSvgPaint HasTarget Declaration public bool HasTarget { get; } Property Value Type Description Boolean Id Declaration public string Id { get; } Property Value Type Description String Stroke Declaration public WpfSvgPaint Stroke { get; set; } Property Value Type Description WpfSvgPaint Tag Declaration public object Tag { get; set; } Property Value Type Description Object TargetId Declaration public string TargetId { get; set; } Property Value Type Description String"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.html",
    "title": "Class WpfSvgRendering | SharpVectors Documentation",
    "keywords": "Class WpfSvgRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfSvgRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfSvgRendering : WpfRendering, IDisposable Constructors WpfSvgRendering(SvgElement) Declaration public WpfSvgRendering(SvgElement element) Parameters Type Name Description SvgElement element Properties IsRecursive Declaration public override bool IsRecursive { get; } Property Value Type Description Boolean Overrides WpfRenderingBase.IsRecursive Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.html",
    "title": "Class WpfSwitchRendering | SharpVectors Documentation",
    "keywords": "Class WpfSwitchRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfSwitchRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfSwitchRendering : WpfRendering, IDisposable Constructors WpfSwitchRendering(SvgElement) Declaration public WpfSwitchRendering(SvgElement element) Parameters Type Name Description SvgElement element Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.html",
    "title": "Class WpfSymbolRendering | SharpVectors Documentation",
    "keywords": "Class WpfSymbolRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfSymbolRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfSymbolRendering : WpfRendering, IDisposable Constructors WpfSymbolRendering(SvgElement) Declaration public WpfSymbolRendering(SvgElement element) Parameters Type Name Description SvgElement element Properties IsRecursive Declaration public override bool IsRecursive { get; } Property Value Type Description Boolean Overrides WpfRenderingBase.IsRecursive Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.html",
    "title": "Class WpfTextRendering | SharpVectors Documentation",
    "keywords": "Class WpfTextRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfTextRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfTextRendering : WpfRendering, IDisposable Constructors WpfTextRendering(SvgElement) Declaration public WpfTextRendering(SvgElement element) Parameters Type Name Description SvgElement element Properties IsMeasuring Declaration public bool IsMeasuring { get; } Property Value Type Description Boolean IsRecursive Declaration public override bool IsRecursive { get; } Property Value Type Description Boolean Overrides WpfRenderingBase.IsRecursive IsTextPath Declaration public bool IsTextPath { get; set; } Property Value Type Description Boolean TextContext Declaration public WpfTextContext TextContext { get; } Property Value Type Description WpfTextContext TextWidth Declaration public double TextWidth { get; } Property Value Type Description Double Methods AddTextWidth(Double) Declaration public void AddTextWidth(double textWidth) Parameters Type Name Description Double textWidth AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) SetTextWidth(Double) Declaration public void SetTextWidth(double textWidth) Parameters Type Name Description Double textWidth Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfUseRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfUseRendering.html",
    "title": "Class WpfUseRendering | SharpVectors Documentation",
    "keywords": "Class WpfUseRendering Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfUseRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, String, String) WpfRendering.GetTitleElement() WpfRendering.SetClip(WpfDrawingContext) WpfRendering.SetMask(WpfDrawingContext) WpfRendering.SetQuality(WpfDrawingContext) WpfRendering.SetTransform(WpfDrawingContext) WpfRendering.FitToViewbox(WpfDrawingContext, Rect) WpfRendering.FitToViewbox(WpfDrawingContext, SvgElement, Rect) WpfRendering.CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) WpfRendering.ExtractMarkerUrl(String) WpfRendering.RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) WpfRendering.IsPresentationMarker(SvgStyleableElement) WpfRendering.Dispose(Boolean) WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfUseRendering : WpfRendering, IDisposable Constructors WpfUseRendering(SvgElement) Declaration public WpfUseRendering(SvgElement element) Parameters Type Name Description SvgElement element Methods AfterRender(WpfDrawingRenderer) Declaration public override void AfterRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Declaration public override void BeforeRender(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRendering.BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Declaration protected override void Initialize(SvgElement element) Parameters Type Name Description SvgElement element Overrides WpfRendering.Initialize(SvgElement) Render(WpfDrawingRenderer) Declaration public override void Render(WpfDrawingRenderer renderer) Parameters Type Name Description WpfDrawingRenderer renderer Overrides WpfRenderingBase.Render(WpfDrawingRenderer) Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitor.html",
    "title": "Class WpfVisitor | SharpVectors Documentation",
    "keywords": "Class WpfVisitor Inheritance Object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfClassVisitor WpfEmbeddedImageVisitor WpfFontFamilyVisitor WpfIDVisitor WpfLinkVisitor Implements IDisposable Inherited Members WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(String, String) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(String) WpfRendererObject.IsIdentifierStart(Char) WpfRendererObject.IsIdentifierPart(Char) WpfRendererObject.Combine(Transform, Transform, Boolean, Boolean) WpfRendererObject.CreateGeometry(ISvgElement, Boolean) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(Boolean) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfVisitor : WpfRendererObject, IDisposable Constructors WpfVisitor() Declaration protected WpfVisitor() WpfVisitor(WpfDrawingContext) Declaration protected WpfVisitor(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context Fields _isInitialized Declaration protected bool _isInitialized Field Value Type Description Boolean Properties IsInitialized Declaration public override bool IsInitialized { get; } Property Value Type Description Boolean Overrides WpfRendererObject.IsInitialized Methods Initialize(WpfDrawingContext) Declaration public virtual void Initialize(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context Uninitialize() Declaration public virtual void Uninitialize() Implements System.IDisposable"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.html",
    "title": "Class WpfVisitors | SharpVectors Documentation",
    "keywords": "Class WpfVisitors Inheritance Object WpfVisitors Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers.Wpf Assembly : SharpVectors.Rendering.Wpf.dll Syntax public sealed class WpfVisitors Constructors WpfVisitors() Declaration public WpfVisitors() Properties ClassVisitor Declaration public WpfClassVisitor ClassVisitor { get; set; } Property Value Type Description WpfClassVisitor FontFamilyVisitor Declaration public WpfFontFamilyVisitor FontFamilyVisitor { get; set; } Property Value Type Description WpfFontFamilyVisitor IDVisitor Declaration public WpfIDVisitor IDVisitor { get; set; } Property Value Type Description WpfIDVisitor ImageVisitor Declaration public WpfEmbeddedImageVisitor ImageVisitor { get; set; } Property Value Type Description WpfEmbeddedImageVisitor LinkVisitor Declaration public WpfLinkVisitor LinkVisitor { get; set; } Property Value Type Description WpfLinkVisitor Methods Initialize(WpfDrawingContext) Declaration public void Initialize(WpfDrawingContext context) Parameters Type Name Description WpfDrawingContext context Uninitialize() Declaration public void Uninitialize()"
  },
  "api/SharpVectors.Renderers.WpfObject.html": {
    "href": "api/SharpVectors.Renderers.WpfObject.html",
    "title": "Class WpfObject | SharpVectors Documentation",
    "keywords": "Class WpfObject Inheritance Object DispatcherObject DependencyObject WpfObject WpfSettings<T> Inherited Members DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers Assembly : SharpVectors.Rendering.Wpf.dll Syntax public abstract class WpfObject : DependencyObject Constructors WpfObject() Declaration protected WpfObject() Methods NotEmpty(String, String) Declaration public static void NotEmpty(string argObject, string argName) Parameters Type Name Description String argObject String argName NotNull(Object, String) Declaration public static void NotNull(object argObject, string argName) Parameters Type Name Description Object argObject String argName NotNull(String, String) Declaration public static void NotNull(string argObject, string argName) Parameters Type Name Description String argObject String argName NotNullNotEmpty(String, String) Declaration public static void NotNullNotEmpty(string argObject, string argName) Parameters Type Name Description String argObject String argName NotNullNotEmpty<E>(IList<E>, String) Declaration public static void NotNullNotEmpty<E>(IList<E> argObject, string argName) Parameters Type Name Description IList <E> argObject String argName Type Parameters Name Description E PathMustExist(String, String) Declaration public static void PathMustExist(string argObject, string argName) Parameters Type Name Description String argObject String argName"
  },
  "api/SharpVectors.Renderers.WpfSettings-1.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1.html",
    "title": "Class WpfSettings<T> | SharpVectors Documentation",
    "keywords": "Class WpfSettings<T> This is the typed or generic abstract base class for most objects in this build library, and it defines the basic cloneable and serialization interfaces. This is used as the base object to create components object hierarchy. Inheritance Object DispatcherObject DependencyObject WpfObject WpfSettings<T> CodeSnippetKeyResolver DictionaryKeyResolver ResourceKeyResolver WpfDrawingSettings WpfResourceSettings Implements ICloneable IXmlSerializable Inherited Members WpfObject.NotNull(Object, String) WpfObject.NotNull(String, String) WpfObject.NotEmpty(String, String) WpfObject.NotNullNotEmpty(String, String) WpfObject.NotNullNotEmpty<E>(IList<E>, String) WpfObject.PathMustExist(String, String) DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Renderers Assembly : SharpVectors.Rendering.Wpf.dll Syntax [Serializable] public abstract class WpfSettings<T> : WpfObject, ICloneable, IXmlSerializable where T : WpfSettings<T> Type Parameters Name Description T The underlying value type of the WpfSettings<T> generic type. Remarks This also provides a base class for component object hierarchy whose state can be serialized to an XML format. Constructors WpfSettings() Initializes a new instance of the WpfSettings<T> class to the default properties or values. Declaration protected WpfSettings() WpfSettings(WpfSettings<T>) Initializes a new instance of the WpfSettings<T> class with initial parameters copied from the specified instance of the specified WpfSettings<T> class, a copy constructor. Declaration protected WpfSettings(WpfSettings<T> source) Parameters Type Name Description WpfSettings <T> source An instance of the WpfSettings<T> class from which the initialization parameters or values will be copied. Exceptions Type Condition ArgumentNullException If the parameter source is null . Fields _comparer Declaration protected StringComparison _comparer Field Value Type Description StringComparison Methods Clone() This creates a new build object that is a deep copy of the current instance. Declaration public abstract T Clone() Returns Type Description T A new build object that is a deep copy of this instance. Remarks This is deep cloning of the members of this build object. If you need just a copy, use the copy constructor to create a new instance. ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. Declaration public virtual void ReadXml(XmlReader reader) Parameters Type Name Description XmlReader reader The reader with which the XML attributes of this object are accessed. Exceptions Type Condition ArgumentNullException If the reader is null . WriteCData(XmlWriter, String, String) Declaration protected static void WriteCData(XmlWriter writer, string name, string value) Parameters Type Name Description XmlWriter writer String name String value WriteCData(XmlWriter, String, String, String) Declaration protected static void WriteCData(XmlWriter writer, string name, string value, string content) Parameters Type Name Description XmlWriter writer String name String value String content WriteEnum(XmlWriter, String, String) Declaration protected static void WriteEnum(XmlWriter writer, string name, string value) Parameters Type Name Description XmlWriter writer String name String value WriteEnum(XmlWriter, String, String, String) Declaration protected static void WriteEnum(XmlWriter writer, string name, string value, string content) Parameters Type Name Description XmlWriter writer String name String value String content WriteProperty(XmlWriter, String, Boolean) Declaration protected static void WriteProperty(XmlWriter writer, string name, bool value) Parameters Type Name Description XmlWriter writer String name Boolean value WriteProperty(XmlWriter, String, Int32) Declaration protected static void WriteProperty(XmlWriter writer, string name, int value) Parameters Type Name Description XmlWriter writer String name Int32 value WriteProperty(XmlWriter, String, Object) Declaration protected static void WriteProperty(XmlWriter writer, string name, object value) Parameters Type Name Description XmlWriter writer String name Object value WriteProperty(XmlWriter, String, String) Declaration protected static void WriteProperty(XmlWriter writer, string name, string value) Parameters Type Name Description XmlWriter writer String name String value WriteProperty(XmlWriter, String, String, String) Declaration protected static void WriteProperty(XmlWriter writer, string name, string value, string content) Parameters Type Name Description XmlWriter writer String name String value String content WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. Declaration public virtual void WriteXml(XmlWriter writer) Parameters Type Name Description XmlWriter writer The XML writer with which the XML format of this object's state is written. Exceptions Type Condition ArgumentNullException If the reader is null . Explicit Interface Implementations ICloneable.Clone() This creates a new build object that is a deep copy of the current instance. Declaration object ICloneable.Clone() Returns Type Description Object A new build object that is a deep copy of this instance. Remarks This is deep cloning of the members of this style object. If you need just a copy, use the copy constructor to create a new instance. IXmlSerializable.GetSchema() This property is reserved, apply the XmlSchemaProviderAttribute to the class instead. Declaration XmlSchema IXmlSerializable.GetSchema() Returns Type Description XmlSchema An XmlSchema that describes the XML representation of the object that is produced by the WriteXml(XmlWriter) method and consumed by the ReadXml(XmlReader) method. Implements System.ICloneable System.Xml.Serialization.IXmlSerializable"
  },
  "api/SharpVectors.Runtime.DpiScale.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.html",
    "title": "Class DpiScale | SharpVectors Documentation",
    "keywords": "Class DpiScale Stores DPI information from which a Visual or UIElement is rendered. Inheritance Object DpiScale Implements IEquatable < DpiScale > ICloneable Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax [Serializable] public class DpiScale : IEquatable<DpiScale>, ICloneable Constructors DpiScale() Initializes a new instance of the DpiScale class. Declaration public DpiScale() DpiScale(Double) Initializes a new instance of the DpiScale class. Declaration public DpiScale(double value) Parameters Type Name Description Double value DpiScale(Double, Double) Initializes a new instance of the DpiScale class. Declaration public DpiScale(double dpiScaleX, double dpiScaleY) Parameters Type Name Description Double dpiScaleX DPI scale on X-axis Double dpiScaleY DPI scale on Y-axis Properties DpiScaleX Gets the DPI scale on the X axis.When DPI is 96, DpiScaleX is 1. Declaration public double DpiScaleX { get; } Property Value Type Description Double Remarks On Windows Desktop, this value is the same as DpiScaleY DpiScaleY Gets the DPI scale on the Y axis. When DPI is 96, DpiScaleY is 1. Declaration public double DpiScaleY { get; } Property Value Type Description Double Remarks On Windows Desktop, this value is the same as DpiScaleX PixelsPerDip Get or sets the PixelsPerDip at which the text should be rendered. Declaration public double PixelsPerDip { get; } Property Value Type Description Double PixelsPerInchX Gets the PPI along X axis. Declaration public double PixelsPerInchX { get; } Property Value Type Description Double Remarks On Windows Desktop, this value is the same as PixelsPerInchY PixelsPerInchY Gets the PPI along Y axis. Declaration public double PixelsPerInchY { get; } Property Value Type Description Double Remarks On Windows Desktop, this value is the same as PixelsPerInchX Methods Clone() Declaration public DpiScale Clone() Returns Type Description DpiScale Equals(DpiScale) Equality test against a DpiScale object. Declaration public bool Equals(DpiScale other) Parameters Type Name Description DpiScale other Returns Type Description Boolean True if the objects are equal, False otherwise Remarks Two DPI scale values are equal if they are equal after rounding up to hundredths place. Common PPI values in use are: PPI DPI(%) DPI(Ratio) 96 100% 1.00 120 125% 1.25 144 150% 1.50 192 200% 2.00 Equals(Object) Equality test Declaration public sealed override bool Equals(object obj) Parameters Type Name Description Object obj The object being compared against Returns Type Description Boolean True if the objects are equal, False otherwise Overrides Object.Equals(Object) GetHashCode() Returns the hash code of the current object Declaration public override int GetHashCode() Returns Type Description Int32 The hash code of the object Overrides Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators Equality(DpiScale, DpiScale) Checks for equality between two DpiScale instances. Declaration public static bool operator ==(DpiScale dpiScaleA, DpiScale dpiScaleB) Parameters Type Name Description DpiScale dpiScaleA The first object being compared DpiScale dpiScaleB The second object being compared Returns Type Description Boolean True if the two objects are equal, otherwise False Inequality(DpiScale, DpiScale) Checks to inequality between two DpiScale instances. Declaration public static bool operator !=(DpiScale dpiScaleA, DpiScale dpiScaleB) Parameters Type Name Description DpiScale dpiScaleA The first object being compared DpiScale dpiScaleB The second object being compared Returns Type Description Boolean True if the objects are not equal, otherwise False Explicit Interface Implementations ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements System.IEquatable<T> System.ICloneable"
  },
  "api/SharpVectors.Runtime.DpiUtilities.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.html",
    "title": "Class DpiUtilities | SharpVectors Documentation",
    "keywords": "Class DpiUtilities Inheritance Object DpiUtilities Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public static class DpiUtilities Fields DefaultPixelsPerInch This is the default PPI value used in WPF and Windows. Declaration public const double DefaultPixelsPerInch = 96 Field Value Type Description Double Properties DpiAwareness Declaration public static ProcessDpiAwareness DpiAwareness { get; } Property Value Type Description ProcessDpiAwareness Methods CalculateScale(UInt32, UInt32, Double, Double) Declaration public static DpiScale CalculateScale(uint dpi1X, uint dpi1Y, double dpi2X, double dpi2Y) Parameters Type Name Description UInt32 dpi1X UInt32 dpi1Y Double dpi2X Double dpi2Y Returns Type Description DpiScale GetMonitorEffectiveDpi(IntPtr, out UInt32, out UInt32) Get the Effective DPI of a monitor after a user's accessibility preferences have been applied. Declaration public static void GetMonitorEffectiveDpi(IntPtr hMonitor, out uint dpiX, out uint dpiY) Parameters Type Name Description IntPtr hMonitor The monitor. UInt32 dpiX The dpi x. UInt32 dpiY The dpi y. GetScreenScalingFactor(String) Gets scaling factor for a monitor This is defined as current pixel size relative to effective DPI Declaration public static double GetScreenScalingFactor(string deviceName = null) Parameters Type Name Description String deviceName Monitor device name or null for the primary monitor Returns Type Description Double GetSystemEffectiveDpi(out UInt32, out UInt32) Get the System Effective DPI. Declaration public static void GetSystemEffectiveDpi(out uint dpiX, out uint dpiY) Parameters Type Name Description UInt32 dpiX The dpi x. UInt32 dpiY The dpi y. Remarks The System Effective DPI is derived by the operating system by looking across all monitors and determining an \"Effective DPI\" that works well across all the screens for applications that do not support per-monitor DPI. GetSystemScale() Declaration public static DpiScale GetSystemScale() Returns Type Description DpiScale GetVirtualPixelScale(IntPtr) Gets the virtual pixel scale for a window. This is essentially the Effective DPI of the monitor versus a standard 96 DPI. Declaration public static DpiScale GetVirtualPixelScale(IntPtr hwnd) Parameters Type Name Description IntPtr hwnd The HWND. Returns Type Description DpiScale GetVirtualPixelScale(Window) Gets the virtual pixel scale for a window. This is essentially the Effective DPI of the monitor versus a standard 96 DPI. Declaration public static DpiScale GetVirtualPixelScale(Window window) Parameters Type Name Description Window window The window. Returns Type Description DpiScale GetVirtualPixelScaleByMonitor(IntPtr) Gets the virtual pixel scale for a monitor. This is essentially the Effective DPI of the monitor versus a standard 96 DPI. Declaration public static DpiScale GetVirtualPixelScaleByMonitor(IntPtr hMonitor) Parameters Type Name Description IntPtr hMonitor The h monitor. Returns Type Description DpiScale GetWindowEffectiveDpi(IntPtr, out UInt32, out UInt32) Get the Effective DPI of a windows (monitor) after a user's accessibility preferences have been applied. Declaration public static void GetWindowEffectiveDpi(IntPtr hwnd, out uint dpiX, out uint dpiY) Parameters Type Name Description IntPtr hwnd The window. UInt32 dpiX The dpi x. UInt32 dpiY The dpi y. GetWindowEffectiveDpi(Window, out UInt32, out UInt32) Get the Effective DPI of a windows (monitor) after a user's accessibility preferences have been applied. Declaration public static void GetWindowEffectiveDpi(Window window, out uint dpiX, out uint dpiY) Parameters Type Name Description Window window The window. UInt32 dpiX The dpi x. UInt32 dpiY The dpi y. GetWindowScale(IntPtr) Gets the window (monitor) scale versus System DPI. Declaration public static DpiScale GetWindowScale(IntPtr hwnd) Parameters Type Name Description IntPtr hwnd The window. Returns Type Description DpiScale Remarks When developing a DPI-aware application, this is useful for applying a ScaleTransform to your window so all fonts and graphics are scaled and rendered beautifully based on the physical capabilities of the display and the accessibility settings of the user. GetWindowScale(Visual) Gets the window (monitor) scale versus System DPI. Declaration public static DpiScale GetWindowScale(Visual visual) Parameters Type Name Description Visual visual The window. Returns Type Description DpiScale Remarks When developing a DPI-aware application, this is useful for applying a ScaleTransform to your window so all fonts and graphics are scaled and rendered beautifully based on the physical capabilities of the display and the accessibility settings of the user. GetWindowScale(Window) Gets the window (monitor) scale versus System DPI. Declaration public static DpiScale GetWindowScale(Window window) Parameters Type Name Description Window window The window. Returns Type Description DpiScale Remarks When developing a DPI-aware application, this is useful for applying a ScaleTransform to your window so all fonts and graphics are scaled and rendered beautifully based on the physical capabilities of the display and the accessibility settings of the user."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapData.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapData.html",
    "title": "Struct EmbeddedBitmapData | SharpVectors Documentation",
    "keywords": "Struct EmbeddedBitmapData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax [Serializable] [TypeConverter(typeof(EmbeddedBitmapDataConverter))] public struct EmbeddedBitmapData Constructors EmbeddedBitmapData(MemoryStream) Declaration public EmbeddedBitmapData(MemoryStream stream) Parameters Type Name Description MemoryStream stream Properties Stream Declaration public MemoryStream Stream { get; set; } Property Value Type Description MemoryStream"
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.html",
    "title": "Class EmbeddedBitmapDataConverter | SharpVectors Documentation",
    "keywords": "Class EmbeddedBitmapDataConverter Inheritance Object TypeConverter EmbeddedBitmapDataConverter Inherited Members TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(Object) TypeConverter.ConvertFromInvariantString(String) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String) TypeConverter.ConvertFromString(String) TypeConverter.ConvertFromString(ITypeDescriptorContext, String) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String) TypeConverter.ConvertTo(Object, Type) TypeConverter.ConvertToInvariantString(Object) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object) TypeConverter.ConvertToString(Object) TypeConverter.ConvertToString(ITypeDescriptorContext, Object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetConvertFromException(Object) TypeConverter.GetConvertToException(Object, Type) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(Object) TypeConverter.GetProperties(ITypeDescriptorContext, Object) TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[]) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(Object) TypeConverter.IsValid(ITypeDescriptorContext, Object) TypeConverter.SortProperties(PropertyDescriptorCollection, String[]) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public sealed class EmbeddedBitmapDataConverter : TypeConverter Constructors EmbeddedBitmapDataConverter() Declaration public EmbeddedBitmapDataConverter() Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name Description ITypeDescriptorContext context Type sourceType Returns Type Description Boolean Overrides TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type) CanConvertTo(ITypeDescriptorContext, Type) Declaration public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context Type destinationType Returns Type Description Boolean Overrides TypeConverter.CanConvertTo(ITypeDescriptorContext, Type) ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Returns Type Description Object Overrides TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture Object value Type destinationType Returns Type Description Object Overrides TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)"
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.html",
    "title": "Class EmbeddedBitmapSource | SharpVectors Documentation",
    "keywords": "Class EmbeddedBitmapSource Inheritance Object DispatcherObject DependencyObject Freezable Animatable ImageSource BitmapSource EmbeddedBitmapSource Implements IAnimatable IFormattable Inherited Members BitmapSource.Create(Int32, Int32, Double, Double, PixelFormat, BitmapPalette, Array, Int32) BitmapSource.Create(Int32, Int32, Double, Double, PixelFormat, BitmapPalette, IntPtr, Int32, Int32) BitmapSource.Clone() BitmapSource.CloneCurrentValue() BitmapSource.CopyPixels(Int32Rect, Array, Int32, Int32) BitmapSource.CopyPixels(Array, Int32, Int32) BitmapSource.CheckIfSiteOfOrigin() BitmapSource.FreezeCore(Boolean) BitmapSource.IsDownloading BitmapSource.Width BitmapSource.Height BitmapSource.Metadata BitmapSource.DownloadCompleted BitmapSource.DownloadProgress BitmapSource.DownloadFailed BitmapSource.DecodeFailed ImageSource.ToString() ImageSource.ToString(IFormatProvider) ImageSource.IFormattable.ToString(String, IFormatProvider) ImageSource.PixelsToDIPs(Double, Int32) Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock) Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) Animatable.BeginAnimation(DependencyProperty, AnimationTimeline) Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) Animatable.GetAnimationBaseValue(DependencyProperty) Animatable.HasAnimatedProperties Freezable.GetAsFrozen() Freezable.GetCurrentValueAsFrozen() Freezable.Freeze() Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs) Freezable.CreateInstance() Freezable.OnChanged() Freezable.ReadPreamble() Freezable.WritePreamble() Freezable.WritePostscript() Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject) Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty) Freezable.Freeze(Freezable, Boolean) Freezable.CanFreeze Freezable.IsFrozen Freezable.Changed DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public class EmbeddedBitmapSource : BitmapSource, IAnimatable, IFormattable Constructors EmbeddedBitmapSource() Declaration public EmbeddedBitmapSource() EmbeddedBitmapSource(MemoryStream) Declaration public EmbeddedBitmapSource(MemoryStream stream) Parameters Type Name Description MemoryStream stream EmbeddedBitmapSource(MemoryStream, BitmapImage) Declaration public EmbeddedBitmapSource(MemoryStream stream, BitmapImage image) Parameters Type Name Description MemoryStream stream BitmapImage image Properties Data Declaration public EmbeddedBitmapData Data { get; set; } Property Value Type Description EmbeddedBitmapData DpiX Declaration public override double DpiX { get; } Property Value Type Description Double Overrides BitmapSource.DpiX DpiY Declaration public override double DpiY { get; } Property Value Type Description Double Overrides BitmapSource.DpiY Format Declaration public override PixelFormat Format { get; } Property Value Type Description PixelFormat Overrides BitmapSource.Format MimeType Declaration public string MimeType { get; set; } Property Value Type Description String Palette Declaration public override BitmapPalette Palette { get; } Property Value Type Description BitmapPalette Overrides BitmapSource.Palette PixelHeight Declaration public override int PixelHeight { get; } Property Value Type Description Int32 Overrides BitmapSource.PixelHeight PixelWidth Declaration public override int PixelWidth { get; } Property Value Type Description Int32 Overrides BitmapSource.PixelWidth Methods CloneCore(Freezable) Declaration protected override void CloneCore(Freezable sourceFreezable) Parameters Type Name Description Freezable sourceFreezable Overrides BitmapSource.CloneCore(Freezable) CloneCurrentValueCore(Freezable) Declaration protected override void CloneCurrentValueCore(Freezable sourceFreezable) Parameters Type Name Description Freezable sourceFreezable Overrides BitmapSource.CloneCurrentValueCore(Freezable) CopyPixels(Int32Rect, IntPtr, Int32, Int32) Declaration public override void CopyPixels(Int32Rect sourceRect, IntPtr buffer, int bufferSize, int stride) Parameters Type Name Description Int32Rect sourceRect IntPtr buffer Int32 bufferSize Int32 stride Overrides BitmapSource.CopyPixels(Int32Rect, IntPtr, Int32, Int32) CreateInstanceCore() Declaration protected override Freezable CreateInstanceCore() Returns Type Description Freezable Overrides Freezable.CreateInstanceCore() GetAsFrozenCore(Freezable) Declaration protected override void GetAsFrozenCore(Freezable sourceFreezable) Parameters Type Name Description Freezable sourceFreezable Overrides BitmapSource.GetAsFrozenCore(Freezable) GetCurrentValueAsFrozenCore(Freezable) Declaration protected override void GetCurrentValueAsFrozenCore(Freezable sourceFreezable) Parameters Type Name Description Freezable sourceFreezable Overrides BitmapSource.GetCurrentValueAsFrozenCore(Freezable) Implements System.Windows.Media.Animation.IAnimatable System.IFormattable"
  },
  "api/SharpVectors.Runtime.html": {
    "href": "api/SharpVectors.Runtime.html",
    "title": "Namespace SharpVectors.Runtime | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Runtime Classes DpiScale Stores DPI information from which a Visual or UIElement is rendered. DpiUtilities EmbeddedBitmapDataConverter EmbeddedBitmapSource SvgAlertArgs SvgAnimationLayer This creates a host for visuals derived from the Canvas class. SvgAnimator This provides a wrapper for the Scoreboard, which is used for opacity animation. SvgDrawingCanvas This is the main drawing canvas for the rendered SVG diagrams. SvgErrorArgs SvgErrorException SvgFontUriExtension SvgImageNameScope This class, if placed at the root of a XAML file which is loaded by XamlReader.Load() will end up having all named elements contained in its nameTable automatically. If you want to get that list, it is now in your power. SvgLink SvgObject ZoomPanAnimationHelper A helper class to simplify animation. ZoomPanControl A class that wraps up zooming and panning of it's content. Structs EmbeddedBitmapData POINT Enums ProcessDpiAwareness SvgInteractiveModes A value specifying the type of interactivity to be supported by the conversion process and controls. In the conversion process, more information are added to make the interactivity defined possible, and might be unnecessary overhead where no interactivity is needed. In the rendering process at the control level, keyboard and mouse operations are monitored to support interactivities. SvgLinkAction SvgObjectType"
  },
  "api/SharpVectors.Runtime.POINT.html": {
    "href": "api/SharpVectors.Runtime.POINT.html",
    "title": "Struct POINT | SharpVectors Documentation",
    "keywords": "Struct POINT Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public struct POINT Constructors POINT(Int32, Int32) Declaration public POINT(int x, int y) Parameters Type Name Description Int32 x Int32 y Fields X Declaration public int X Field Value Type Description Int32 Y Declaration public int Y Field Value Type Description Int32"
  },
  "api/SharpVectors.Runtime.ProcessDpiAwareness.html": {
    "href": "api/SharpVectors.Runtime.ProcessDpiAwareness.html",
    "title": "Enum ProcessDpiAwareness | SharpVectors Documentation",
    "keywords": "Enum ProcessDpiAwareness Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public enum ProcessDpiAwareness Fields DpiUnaware PerMonitorDpiAware SystemDpiAware Name Description DpiUnaware PerMonitorDpiAware SystemDpiAware"
  },
  "api/SharpVectors.Runtime.SvgAlertArgs.html": {
    "href": "api/SharpVectors.Runtime.SvgAlertArgs.html",
    "title": "Class SvgAlertArgs | SharpVectors Documentation",
    "keywords": "Class SvgAlertArgs Inheritance Object EventArgs SvgAlertArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public sealed class SvgAlertArgs : EventArgs Constructors SvgAlertArgs(String) Declaration public SvgAlertArgs(string message) Parameters Type Name Description String message Properties Handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean Message Declaration public string Message { get; } Property Value Type Description String"
  },
  "api/SharpVectors.Runtime.SvgAnimationLayer.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimationLayer.html",
    "title": "Class SvgAnimationLayer | SharpVectors Documentation",
    "keywords": "Class SvgAnimationLayer This creates a host for visuals derived from the Canvas class. Inheritance Object DispatcherObject DependencyObject SvgAnimationLayer Inherited Members DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public sealed class SvgAnimationLayer : DependencyObject Remarks This class provides layout, event handling, and container support for the child visual objects. Constructors SvgAnimationLayer(SvgDrawingCanvas) Declaration public SvgAnimationLayer(SvgDrawingCanvas drawingCanvas) Parameters Type Name Description SvgDrawingCanvas drawingCanvas Properties DisplayTransform Declaration public Transform DisplayTransform { get; set; } Property Value Type Description Transform Methods HandleMouseDown(MouseButtonEventArgs) Declaration public bool HandleMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e Returns Type Description Boolean HandleMouseLeave() Declaration public bool HandleMouseLeave() Returns Type Description Boolean HandleMouseMove(MouseEventArgs) Declaration public bool HandleMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e Returns Type Description Boolean LoadDiagrams(DrawingGroup, DrawingGroup) Declaration public void LoadDiagrams(DrawingGroup linkGroups, DrawingGroup wholeGroup) Parameters Type Name Description DrawingGroup linkGroups DrawingGroup wholeGroup UnloadDiagrams() Declaration public void UnloadDiagrams()"
  },
  "api/SharpVectors.Runtime.SvgAnimator.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimator.html",
    "title": "Class SvgAnimator | SharpVectors Documentation",
    "keywords": "Class SvgAnimator This provides a wrapper for the Scoreboard, which is used for opacity animation. Inheritance Object DispatcherObject DependencyObject Visual UIElement FrameworkElement SvgAnimator Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient Inherited Members FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean) FrameworkElement.GetVisualChild(Int32) FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable(String) FrameworkElement.GetTemplateChild(String) FrameworkElement.FindResource(Object) FrameworkElement.TryFindResource(Object) FrameworkElement.SetResourceReference(DependencyProperty, Object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, String) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MeasureOverride(Size) FrameworkElement.ArrangeOverride(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(String, Object) FrameworkElement.UnregisterName(String) FrameworkElement.FindName(String) FrameworkElement.AddLogicalChild(Object) FrameworkElement.RemoveLogicalChild(Object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.LogicalChildren FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, Boolean) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.OnRender(DrawingContext) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public sealed class SvgAnimator : FrameworkElement, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient Constructors SvgAnimator() Declaration public SvgAnimator() Properties IsAnimating Declaration public bool IsAnimating { get; } Property Value Type Description Boolean TargetName Declaration public string TargetName { get; } Property Value Type Description String Methods Start(String, Object) Declaration public void Start(string targetName, object scopedElement) Parameters Type Name Description String targetName Object scopedElement Stop() Declaration public void Stop() Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.html",
    "title": "Class SvgDrawingCanvas | SharpVectors Documentation",
    "keywords": "Class SvgDrawingCanvas This is the main drawing canvas for the rendered SVG diagrams. Inheritance Object DispatcherObject DependencyObject Visual UIElement FrameworkElement Panel Canvas SvgDrawingCanvas SvgCanvas Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild Inherited Members Canvas.LeftProperty Canvas.TopProperty Canvas.RightProperty Canvas.BottomProperty Canvas.GetLeft(UIElement) Canvas.SetLeft(UIElement, Double) Canvas.GetTop(UIElement) Canvas.SetTop(UIElement, Double) Canvas.GetRight(UIElement) Canvas.SetRight(UIElement, Double) Canvas.GetBottom(UIElement) Canvas.SetBottom(UIElement, Double) Canvas.ArrangeOverride(Size) Canvas.GetLayoutClip(Size) Panel.BackgroundProperty Panel.IsItemsHostProperty Panel.ZIndexProperty Panel.OnRender(DrawingContext) Panel.IAddChild.AddChild(Object) Panel.IAddChild.AddText(String) Panel.OnIsItemsHostChanged(Boolean, Boolean) Panel.CreateUIElementCollection(FrameworkElement) Panel.OnVisualChildrenChanged(DependencyObject, DependencyObject) Panel.SetZIndex(UIElement, Int32) Panel.GetZIndex(UIElement) Panel.Background Panel.LogicalChildren Panel.Children Panel.IsItemsHost Panel.LogicalOrientation Panel.HasLogicalOrientation Panel.InternalChildren FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean) FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable(String) FrameworkElement.GetTemplateChild(String) FrameworkElement.FindResource(Object) FrameworkElement.TryFindResource(Object) FrameworkElement.SetResourceReference(DependencyProperty, Object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, String) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(String, Object) FrameworkElement.UnregisterName(String) FrameworkElement.FindName(String) FrameworkElement.AddLogicalChild(Object) FrameworkElement.RemoveLogicalChild(Object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, Boolean) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public class SvgDrawingCanvas : Canvas, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild Constructors SvgDrawingCanvas() Declaration public SvgDrawingCanvas() Properties AnimationCanvas Declaration public SvgAnimationLayer AnimationCanvas { get; } Property Value Type Description SvgAnimationLayer AppTitle Gets or sets the application title, which is used to display the alert and error messages not handled by the user. Declaration public string AppTitle { get; set; } Property Value Type Description String A string containg the application title. This cannot be null or empty. The default is SharpVectors . Bounds Declaration public Rect Bounds { get; } Property Value Type Description Rect DesignMode Declaration public bool DesignMode { get; } Property Value Type Description Boolean DisplayOffset Declaration public Point DisplayOffset { get; } Property Value Type Description Point DisplayTransform Declaration public Transform DisplayTransform { get; } Property Value Type Description Transform DrawObjects Declaration public IList<Drawing> DrawObjects { get; } Property Value Type Description IList < Drawing > HostVisual Declaration public DrawingVisual HostVisual { get; } Property Value Type Description DrawingVisual InteractiveMode Gets or sets a value specifying the interactive mode, which controls the level of information attached to the generated drawing. Declaration public SvgInteractiveModes InteractiveMode { get; set; } Property Value Type Description SvgInteractiveModes An enumeration of the type SvgInteractiveModes specifying the interactive mode. The default is None ; no interactivity and may change in the future. LinkObjects Declaration public IList<Drawing> LinkObjects { get; } Property Value Type Description IList < Drawing > VisualChildrenCount Declaration protected override int VisualChildrenCount { get; } Property Value Type Description Int32 Overrides Panel.VisualChildrenCount Methods GetVisualChild(Int32) Declaration protected override Visual GetVisualChild(int index) Parameters Type Name Description Int32 index Returns Type Description Visual Overrides Panel.GetVisualChild(Int32) LoadDiagrams(String) Declaration public void LoadDiagrams(string fileName) Parameters Type Name Description String fileName LoadDiagrams(DrawingGroup, DrawingGroup, DrawingGroup) Declaration public void LoadDiagrams(DrawingGroup whole, DrawingGroup links, DrawingGroup main) Parameters Type Name Description DrawingGroup whole DrawingGroup links DrawingGroup main MeasureOverride(Size) Declaration protected override Size MeasureOverride(Size constraint) Parameters Type Name Description Size constraint Returns Type Description Size Overrides Canvas.MeasureOverride(Size) OnHandleAlert(String) Declaration protected virtual void OnHandleAlert(string message) Parameters Type Name Description String message OnHandleError(String, Exception) Declaration protected virtual void OnHandleError(string message, Exception exception) Parameters Type Name Description String message Exception exception OnMouseDown(MouseButtonEventArgs) Declaration protected override void OnMouseDown(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e Overrides UIElement.OnMouseDown(MouseButtonEventArgs) OnMouseLeave(MouseEventArgs) Declaration protected override void OnMouseLeave(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e Overrides UIElement.OnMouseLeave(MouseEventArgs) OnMouseMove(MouseEventArgs) Declaration protected override void OnMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e Overrides UIElement.OnMouseMove(MouseEventArgs) OnMouseUp(MouseButtonEventArgs) Declaration protected override void OnMouseUp(MouseButtonEventArgs e) Parameters Type Name Description MouseButtonEventArgs e Overrides UIElement.OnMouseUp(MouseButtonEventArgs) RenderDiagrams(SvgImageNameScope) Declaration public void RenderDiagrams(SvgImageNameScope image) Parameters Type Name Description SvgImageNameScope image RenderDiagrams(DrawingGroup) Declaration public void RenderDiagrams(DrawingGroup renderedGroup) Parameters Type Name Description DrawingGroup renderedGroup UnloadDiagrams() Declaration public void UnloadDiagrams() Events Alert Declaration public event EventHandler<SvgAlertArgs> Alert Event Type Type Description EventHandler < SvgAlertArgs > Error Declaration public event EventHandler<SvgErrorArgs> Error Event Type Type Description EventHandler < SvgErrorArgs > Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient System.Windows.Markup.IAddChild"
  },
  "api/SharpVectors.Runtime.SvgErrorArgs.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorArgs.html",
    "title": "Class SvgErrorArgs | SharpVectors Documentation",
    "keywords": "Class SvgErrorArgs Inheritance Object EventArgs SvgErrorArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public sealed class SvgErrorArgs : EventArgs Constructors SvgErrorArgs(Exception) Declaration public SvgErrorArgs(Exception exception) Parameters Type Name Description Exception exception SvgErrorArgs(String) Declaration public SvgErrorArgs(string message) Parameters Type Name Description String message SvgErrorArgs(String, Exception) Declaration public SvgErrorArgs(string message, Exception exception) Parameters Type Name Description String message Exception exception Properties Exception Declaration public Exception Exception { get; } Property Value Type Description Exception Handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean IsException Declaration public bool IsException { get; } Property Value Type Description Boolean Message Declaration public string Message { get; } Property Value Type Description String"
  },
  "api/SharpVectors.Runtime.SvgErrorException.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorException.html",
    "title": "Class SvgErrorException | SharpVectors Documentation",
    "keywords": "Class SvgErrorException Inheritance Object Exception SvgErrorException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax [Serializable] public class SvgErrorException : Exception, ISerializable, _Exception Constructors SvgErrorException(SvgErrorArgs) Declaration public SvgErrorException(SvgErrorArgs errorArgs) Parameters Type Name Description SvgErrorArgs errorArgs SvgErrorException(SerializationInfo, StreamingContext) Declaration protected SvgErrorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context SvgErrorException(String) Declaration public SvgErrorException(string msg) Parameters Type Name Description String msg SvgErrorException(String, Exception) Declaration public SvgErrorException(string msg, Exception innerException) Parameters Type Name Description String msg Exception innerException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/SharpVectors.Runtime.SvgFontUriExtension.html": {
    "href": "api/SharpVectors.Runtime.SvgFontUriExtension.html",
    "title": "Class SvgFontUriExtension | SharpVectors Documentation",
    "keywords": "Class SvgFontUriExtension Inheritance Object MarkupExtension SvgFontUriExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public sealed class SvgFontUriExtension : MarkupExtension Constructors SvgFontUriExtension(String) Declaration public SvgFontUriExtension(string inputUri) Parameters Type Name Description String inputUri Methods ProvideValue(IServiceProvider) Declaration public override object ProvideValue(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description Object Overrides MarkupExtension.ProvideValue(IServiceProvider)"
  },
  "api/SharpVectors.Runtime.SvgImageNameScope.html": {
    "href": "api/SharpVectors.Runtime.SvgImageNameScope.html",
    "title": "Class SvgImageNameScope | SharpVectors Documentation",
    "keywords": "Class SvgImageNameScope This class, if placed at the root of a XAML file which is loaded by XamlReader.Load() will end up having all named elements contained in its nameTable automatically. If you want to get that list, it is now in your power. Inheritance Object DispatcherObject DependencyObject Visual UIElement FrameworkElement Image SvgImageNameScope Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IUriContext INameScope Inherited Members Image.SourceProperty Image.StretchProperty Image.StretchDirectionProperty Image.ImageFailedEvent Image.OnCreateAutomationPeer() Image.MeasureOverride(Size) Image.ArrangeOverride(Size) Image.OnRender(DrawingContext) Image.Source Image.Stretch Image.StretchDirection Image.IUriContext.BaseUri Image.BaseUri Image.ImageFailed FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean) FrameworkElement.GetVisualChild(Int32) FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable(String) FrameworkElement.GetTemplateChild(String) FrameworkElement.FindResource(Object) FrameworkElement.TryFindResource(Object) FrameworkElement.SetResourceReference(DependencyProperty, Object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, String) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(String, Object) FrameworkElement.UnregisterName(String) FrameworkElement.FindName(String) FrameworkElement.AddLogicalChild(Object) FrameworkElement.RemoveLogicalChild(Object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.LogicalChildren FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, Boolean) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public sealed class SvgImageNameScope : Image, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IUriContext, INameScope Remarks This class is based on the discussion, which can be found here http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/5c226430-c54d-45b8-a8a2-7e4a79e3692a Constructors SvgImageNameScope() Declaration public SvgImageNameScope() Explicit Interface Implementations INameScope.FindName(String) Declaration object INameScope.FindName(string name) Parameters Type Name Description String name Returns Type Description Object INameScope.RegisterName(String, Object) Declaration void INameScope.RegisterName(string name, object scopedElement) Parameters Type Name Description String name Object scopedElement INameScope.UnregisterName(String) Declaration void INameScope.UnregisterName(string name) Parameters Type Name Description String name Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient System.Windows.Markup.IUriContext System.Windows.Markup.INameScope"
  },
  "api/SharpVectors.Runtime.SvgInteractiveModes.html": {
    "href": "api/SharpVectors.Runtime.SvgInteractiveModes.html",
    "title": "Enum SvgInteractiveModes | SharpVectors Documentation",
    "keywords": "Enum SvgInteractiveModes A value specifying the type of interactivity to be supported by the conversion process and controls. In the conversion process, more information are added to make the interactivity defined possible, and might be unnecessary overhead where no interactivity is needed. In the rendering process at the control level, keyboard and mouse operations are monitored to support interactivities. Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public enum SvgInteractiveModes Fields Advanced None Standard Name Description Advanced A value specifying extra or custom interactivity features. None A value specifying no interactivity. Standard A value specifying the default or standard interactivity per the SVG specifications."
  },
  "api/SharpVectors.Runtime.SvgLink.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.html",
    "title": "Class SvgLink | SharpVectors Documentation",
    "keywords": "Class SvgLink Inheritance Object DispatcherObject DependencyObject SvgLink Inherited Members DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public sealed class SvgLink : DependencyObject Fields ActionProperty Declaration public static readonly DependencyProperty ActionProperty Field Value Type Description DependencyProperty ColorProperty Declaration public static readonly DependencyProperty ColorProperty Field Value Type Description DependencyProperty KeyProperty Declaration public static readonly DependencyProperty KeyProperty Field Value Type Description DependencyProperty LineIdProperty Declaration public static readonly DependencyProperty LineIdProperty Field Value Type Description DependencyProperty LocationProperty Declaration public static readonly DependencyProperty LocationProperty Field Value Type Description DependencyProperty NumberProperty Declaration public static readonly DependencyProperty NumberProperty Field Value Type Description DependencyProperty PartsIdProperty Declaration public static readonly DependencyProperty PartsIdProperty Field Value Type Description DependencyProperty PinProperty Declaration public static readonly DependencyProperty PinProperty Field Value Type Description DependencyProperty TypeProperty Declaration public static readonly DependencyProperty TypeProperty Field Value Type Description DependencyProperty Methods GetAction(DependencyObject) Declaration public static SvgLinkAction GetAction(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description SvgLinkAction GetColor(DependencyObject) Declaration public static string GetColor(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetKey(DependencyObject) Declaration public static string GetKey(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetLineId(DependencyObject) Declaration public static string GetLineId(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetLocation(DependencyObject) Declaration public static string GetLocation(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetNumber(DependencyObject) Declaration public static string GetNumber(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetPartsId(DependencyObject) Declaration public static string GetPartsId(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetPin(DependencyObject) Declaration public static string GetPin(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetType(DependencyObject) Declaration public static string GetType(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String SetAction(DependencyObject, SvgLinkAction) Declaration public static void SetAction(DependencyObject element, SvgLinkAction value) Parameters Type Name Description DependencyObject element SvgLinkAction value SetColor(DependencyObject, String) Declaration public static void SetColor(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetKey(DependencyObject, String) Declaration public static void SetKey(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetLineId(DependencyObject, String) Declaration public static void SetLineId(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetLocation(DependencyObject, String) Declaration public static void SetLocation(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetNumber(DependencyObject, String) Declaration public static void SetNumber(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetPartsId(DependencyObject, String) Declaration public static void SetPartsId(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetPin(DependencyObject, String) Declaration public static void SetPin(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetType(DependencyObject, String) Declaration public static void SetType(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value"
  },
  "api/SharpVectors.Runtime.SvgLinkAction.html": {
    "href": "api/SharpVectors.Runtime.SvgLinkAction.html",
    "title": "Enum SvgLinkAction | SharpVectors Documentation",
    "keywords": "Enum SvgLinkAction Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public enum SvgLinkAction Fields LinkHtml LinkNone LinkPage LinkTooltip Name Description LinkHtml LinkNone LinkPage LinkTooltip"
  },
  "api/SharpVectors.Runtime.SvgObject.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.html",
    "title": "Class SvgObject | SharpVectors Documentation",
    "keywords": "Class SvgObject Inheritance Object SvgObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public static class SvgObject Fields ClassProperty Declaration public static readonly DependencyProperty ClassProperty Field Value Type Description DependencyProperty DrawLayer Declaration public const string DrawLayer = \"_SvgDrawingLayer\" Field Value Type Description String IdProperty Declaration public static readonly DependencyProperty IdProperty Field Value Type Description DependencyProperty LinksLayer Declaration public const string LinksLayer = \"_SvgAnimationLayer\" Field Value Type Description String OrderProperty Declaration public static readonly DependencyProperty OrderProperty Field Value Type Description DependencyProperty TitleProperty Declaration public static readonly DependencyProperty TitleProperty Field Value Type Description DependencyProperty TypeProperty Declaration public static readonly DependencyProperty TypeProperty Field Value Type Description DependencyProperty UniqueIdProperty Declaration public static readonly DependencyProperty UniqueIdProperty Field Value Type Description DependencyProperty Methods GetClass(DependencyObject) Declaration public static string GetClass(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetId(DependencyObject) Declaration public static string GetId(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetName(DependencyObject) Declaration public static string GetName(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetOrder(DependencyObject) Declaration public static int GetOrder(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description Int32 GetTitle(DependencyObject) Declaration public static string GetTitle(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String GetType(DependencyObject) Declaration public static SvgObjectType GetType(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description SvgObjectType GetUniqueId(DependencyObject) Declaration public static string GetUniqueId(DependencyObject element) Parameters Type Name Description DependencyObject element Returns Type Description String IsEqual(Double, Double) Declaration public static bool IsEqual(double value1, double value2) Parameters Type Name Description Double value1 Double value2 Returns Type Description Boolean IsValid(Double) Declaration public static bool IsValid(double value) Parameters Type Name Description Double value Returns Type Description Boolean IsValid(Single) Declaration public static bool IsValid(float value) Parameters Type Name Description Single value Returns Type Description Boolean RemoveWhitespace(String) Declaration public static string RemoveWhitespace(string str) Parameters Type Name Description String str Returns Type Description String SetClass(DependencyObject, String) Declaration public static void SetClass(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetId(DependencyObject, String) Declaration public static void SetId(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetName(DependencyObject, String) Declaration public static void SetName(DependencyObject element, string name) Parameters Type Name Description DependencyObject element String name SetName(DrawingGroup, String) Declaration public static void SetName(DrawingGroup element, string name) Parameters Type Name Description DrawingGroup element String name SetOrder(DependencyObject, Int32) Declaration public static void SetOrder(DependencyObject element, int value) Parameters Type Name Description DependencyObject element Int32 value SetTitle(DependencyObject, String) Declaration public static void SetTitle(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value SetType(DependencyObject, SvgObjectType) Declaration public static void SetType(DependencyObject element, SvgObjectType value) Parameters Type Name Description DependencyObject element SvgObjectType value SetUniqueId(DependencyObject, String) Declaration public static void SetUniqueId(DependencyObject element, string value) Parameters Type Name Description DependencyObject element String value"
  },
  "api/SharpVectors.Runtime.SvgObjectType.html": {
    "href": "api/SharpVectors.Runtime.SvgObjectType.html",
    "title": "Enum SvgObjectType | SharpVectors Documentation",
    "keywords": "Enum SvgObjectType Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public enum SvgObjectType Fields Circle Ellipse Group Image Link Marker None Path Polygon Polyline Rect Text Name Description Circle Ellipse Group Image Link Marker None Path Polygon Polyline Rect Text"
  },
  "api/SharpVectors.Runtime.ZoomPanAnimationHelper.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanAnimationHelper.html",
    "title": "Class ZoomPanAnimationHelper | SharpVectors Documentation",
    "keywords": "Class ZoomPanAnimationHelper A helper class to simplify animation. Inheritance Object ZoomPanAnimationHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public static class ZoomPanAnimationHelper Methods CancelAnimation(UIElement, DependencyProperty) Cancel any animations that are running on the specified dependency property. Declaration public static void CancelAnimation(UIElement animatableElement, DependencyProperty dependencyProperty) Parameters Type Name Description UIElement animatableElement DependencyProperty dependencyProperty StartAnimation(UIElement, DependencyProperty, Double, Double) Starts an animation to a particular value on the specified dependency property. Declaration public static void StartAnimation(UIElement animatableElement, DependencyProperty dependencyProperty, double toValue, double animationDurationSeconds) Parameters Type Name Description UIElement animatableElement DependencyProperty dependencyProperty Double toValue Double animationDurationSeconds StartAnimation(UIElement, DependencyProperty, Double, Double, Boolean) Starts an animation to a particular value on the specified dependency property. Declaration public static void StartAnimation(UIElement animatableElement, DependencyProperty dependencyProperty, double toValue, double animationDurationSeconds, bool useAnimations) Parameters Type Name Description UIElement animatableElement DependencyProperty dependencyProperty Double toValue Double animationDurationSeconds Boolean useAnimations StartAnimation(UIElement, DependencyProperty, Double, Double, EventHandler) Starts an animation to a particular value on the specified dependency property. You can pass in an event handler to call when the animation has completed. Declaration public static void StartAnimation(UIElement animatableElement, DependencyProperty dependencyProperty, double toValue, double animationDurationSeconds, EventHandler completedEvent) Parameters Type Name Description UIElement animatableElement DependencyProperty dependencyProperty Double toValue Double animationDurationSeconds EventHandler completedEvent StartAnimation(UIElement, DependencyProperty, Double, Double, EventHandler, Boolean) Starts an animation to a particular value on the specified dependency property. You can pass in an event handler to call when the animation has completed. Declaration public static void StartAnimation(UIElement animatableElement, DependencyProperty dependencyProperty, double toValue, double animationDurationSeconds, EventHandler completedEvent, bool useAnimations) Parameters Type Name Description UIElement animatableElement DependencyProperty dependencyProperty Double toValue Double animationDurationSeconds EventHandler completedEvent Boolean useAnimations"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.html",
    "title": "Class ZoomPanControl | SharpVectors Documentation",
    "keywords": "Class ZoomPanControl A class that wraps up zooming and panning of it's content. Inheritance Object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ContentControl ZoomPanControl Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild IScrollInfo Inherited Members ContentControl.ContentProperty ContentControl.HasContentProperty ContentControl.ContentTemplateProperty ContentControl.ContentTemplateSelectorProperty ContentControl.ContentStringFormatProperty ContentControl.IAddChild.AddChild(Object) ContentControl.AddChild(Object) ContentControl.IAddChild.AddText(String) ContentControl.AddText(String) ContentControl.OnContentChanged(Object, Object) ContentControl.OnContentTemplateChanged(DataTemplate, DataTemplate) ContentControl.OnContentTemplateSelectorChanged(DataTemplateSelector, DataTemplateSelector) ContentControl.OnContentStringFormatChanged(String, String) ContentControl.LogicalChildren ContentControl.Content ContentControl.HasContent ContentControl.ContentTemplate ContentControl.ContentTemplateSelector ContentControl.ContentStringFormat Control.BorderBrushProperty Control.BorderThicknessProperty Control.BackgroundProperty Control.ForegroundProperty Control.FontFamilyProperty Control.FontSizeProperty Control.FontStretchProperty Control.FontStyleProperty Control.FontWeightProperty Control.HorizontalContentAlignmentProperty Control.VerticalContentAlignmentProperty Control.TabIndexProperty Control.IsTabStopProperty Control.PaddingProperty Control.TemplateProperty Control.PreviewMouseDoubleClickEvent Control.MouseDoubleClickEvent Control.OnTemplateChanged(ControlTemplate, ControlTemplate) Control.ToString() Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs) Control.OnMouseDoubleClick(MouseButtonEventArgs) Control.BorderBrush Control.BorderThickness Control.Background Control.Foreground Control.FontFamily Control.FontSize Control.FontStretch Control.FontStyle Control.FontWeight Control.HorizontalContentAlignment Control.VerticalContentAlignment Control.TabIndex Control.IsTabStop Control.Padding Control.Template Control.HandlesScrolling Control.PreviewMouseDoubleClick Control.MouseDoubleClick FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean) FrameworkElement.GetVisualChild(Int32) FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable(String) FrameworkElement.GetTemplateChild(String) FrameworkElement.FindResource(Object) FrameworkElement.TryFindResource(Object) FrameworkElement.SetResourceReference(DependencyProperty, Object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, String) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(String, Object) FrameworkElement.UnregisterName(String) FrameworkElement.FindName(String) FrameworkElement.AddLogicalChild(Object) FrameworkElement.RemoveLogicalChild(Object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, Boolean) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.OnRender(DrawingContext) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(Object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, Object) DependencyObject.SetCurrentValue(DependencyProperty, Object) DependencyObject.SetValue(DependencyPropertyKey, Object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Runtime Assembly : SharpVectors.Runtime.Wpf.dll Syntax public class ZoomPanControl : ContentControl, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild, IScrollInfo Constructors ZoomPanControl() Declaration public ZoomPanControl() Fields AnimationDurationProperty Declaration public static readonly DependencyProperty AnimationDurationProperty Field Value Type Description DependencyProperty ContentOffsetXProperty Declaration public static readonly DependencyProperty ContentOffsetXProperty Field Value Type Description DependencyProperty ContentOffsetYProperty Declaration public static readonly DependencyProperty ContentOffsetYProperty Field Value Type Description DependencyProperty ContentScaleProperty Declaration public static readonly DependencyProperty ContentScaleProperty Field Value Type Description DependencyProperty ContentViewportHeightProperty Declaration public static readonly DependencyProperty ContentViewportHeightProperty Field Value Type Description DependencyProperty ContentViewportWidthProperty Declaration public static readonly DependencyProperty ContentViewportWidthProperty Field Value Type Description DependencyProperty ContentZoomFocusXProperty Declaration public static readonly DependencyProperty ContentZoomFocusXProperty Field Value Type Description DependencyProperty ContentZoomFocusYProperty Declaration public static readonly DependencyProperty ContentZoomFocusYProperty Field Value Type Description DependencyProperty IsMouseWheelScrollingEnabledProperty Declaration public static readonly DependencyProperty IsMouseWheelScrollingEnabledProperty Field Value Type Description DependencyProperty MaxContentScaleProperty Declaration public static readonly DependencyProperty MaxContentScaleProperty Field Value Type Description DependencyProperty MinContentScaleProperty Declaration public static readonly DependencyProperty MinContentScaleProperty Field Value Type Description DependencyProperty ViewportZoomFocusXProperty Declaration public static readonly DependencyProperty ViewportZoomFocusXProperty Field Value Type Description DependencyProperty ViewportZoomFocusYProperty Declaration public static readonly DependencyProperty ViewportZoomFocusYProperty Field Value Type Description DependencyProperty Properties AnimationDuration The duration of the animations (in seconds) started by calling AnimatedZoomTo and the other animation methods. Declaration public double AnimationDuration { get; set; } Property Value Type Description Double CanHorizontallyScroll Set to 'true' when the vertical scrollbar is enabled. Declaration public bool CanHorizontallyScroll { get; set; } Property Value Type Description Boolean CanVerticallyScroll Set to 'true' when the vertical scrollbar is enabled. Declaration public bool CanVerticallyScroll { get; set; } Property Value Type Description Boolean ContentElement Declaration public FrameworkElement ContentElement { get; } Property Value Type Description FrameworkElement ContentOffsetX Get/set the X offset (in content coordinates) of the view on the content. Declaration public double ContentOffsetX { get; set; } Property Value Type Description Double ContentOffsetY Get/set the Y offset (in content coordinates) of the view on the content. Declaration public double ContentOffsetY { get; set; } Property Value Type Description Double ContentScale Get/set the current scale (or zoom factor) of the content. Declaration public double ContentScale { get; set; } Property Value Type Description Double ContentViewportHeight Get the viewport height, in content coordinates. Declaration public double ContentViewportHeight { get; set; } Property Value Type Description Double ContentViewportWidth Get the viewport width, in content coordinates. Declaration public double ContentViewportWidth { get; set; } Property Value Type Description Double ContentZoomFocusX The X coordinate of the content focus, this is the point that we are focusing on when zooming. Declaration public double ContentZoomFocusX { get; set; } Property Value Type Description Double ContentZoomFocusY The Y coordinate of the content focus, this is the point that we are focusing on when zooming. Declaration public double ContentZoomFocusY { get; set; } Property Value Type Description Double ExtentHeight The height of the content (with 'ContentScale' applied). Declaration public double ExtentHeight { get; } Property Value Type Description Double ExtentWidth The width of the content (with 'ContentScale' applied). Declaration public double ExtentWidth { get; } Property Value Type Description Double HorizontalOffset The offset of the horizontal scrollbar. Declaration public double HorizontalOffset { get; } Property Value Type Description Double IsMouseWheelScrollingEnabled Set to 'true' to enable the mouse wheel to scroll the zoom and pan control. This is set to 'false' by default. Declaration public bool IsMouseWheelScrollingEnabled { get; set; } Property Value Type Description Boolean MaxContentScale Get/set the maximum value for 'ContentScale'. Declaration public double MaxContentScale { get; set; } Property Value Type Description Double MinContentScale Get/set the minimum value for 'ContentScale'. Declaration public double MinContentScale { get; set; } Property Value Type Description Double ScrollOwner Reference to the ScrollViewer that is wrapped (in XAML) around the ZoomPanControl. Or set to null if there is no ScrollViewer. Declaration public ScrollViewer ScrollOwner { get; set; } Property Value Type Description ScrollViewer VerticalOffset The offset of the vertical scrollbar. Declaration public double VerticalOffset { get; } Property Value Type Description Double ViewportHeight Get the height of the viewport onto the content. Declaration public double ViewportHeight { get; } Property Value Type Description Double ViewportWidth Get the width of the viewport onto the content. Declaration public double ViewportWidth { get; } Property Value Type Description Double ViewportZoomFocusX The X coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) that the content focus point is locked to while zooming in. Declaration public double ViewportZoomFocusX { get; set; } Property Value Type Description Double ViewportZoomFocusY The Y coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) that the content focus point is locked to while zooming in. Declaration public double ViewportZoomFocusY { get; set; } Property Value Type Description Double Methods AnimatedScaleToFit() Do animation that scales the content so that it fits completely in the control. Declaration public void AnimatedScaleToFit() AnimatedSnapTo(Point) Use animation to center the view on the specified point (in content coordinates). Declaration public void AnimatedSnapTo(Point contentPoint) Parameters Type Name Description Point contentPoint AnimatedZoomAboutPoint(Double, Point) Zoom in/out centered on the specified point (in content coordinates). The focus point is kept locked to it's on screen position (ala google maps). Declaration public void AnimatedZoomAboutPoint(double newContentScale, Point contentZoomFocus) Parameters Type Name Description Double newContentScale Point contentZoomFocus AnimatedZoomTo(Double) Zoom in/out centered on the viewport center. Declaration public void AnimatedZoomTo(double contentScale) Parameters Type Name Description Double contentScale AnimatedZoomTo(Double, Rect) Do an animated zoom to view a specific scale and rectangle (in content coordinates). Declaration public void AnimatedZoomTo(double newScale, Rect contentRect) Parameters Type Name Description Double newScale Rect contentRect AnimatedZoomTo(Rect) Do an animated zoom to the specified rectangle (in content coordinates). Declaration public void AnimatedZoomTo(Rect contentRect) Parameters Type Name Description Rect contentRect ArrangeOverride(Size) Arrange the control and it's children. Declaration protected override Size ArrangeOverride(Size arrangeBounds) Parameters Type Name Description Size arrangeBounds Returns Type Description Size Overrides Control.ArrangeOverride(Size) LineDown() Shift the content offset one line down. Declaration public void LineDown() LineLeft() Shift the content offset one line left. Declaration public void LineLeft() LineRight() Shift the content offset one line right. Declaration public void LineRight() LineUp() Shift the content offset one line up. Declaration public void LineUp() MakeVisible(Visual, Rect) Bring the specified rectangle to view. Declaration public Rect MakeVisible(Visual visual, Rect rectangle) Parameters Type Name Description Visual visual Rect rectangle Returns Type Description Rect MeasureOverride(Size) Measure the control and it's children. Declaration protected override Size MeasureOverride(Size constraint) Parameters Type Name Description Size constraint Returns Type Description Size Overrides Control.MeasureOverride(Size) MouseWheelDown() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. Declaration public void MouseWheelDown() MouseWheelLeft() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. Declaration public void MouseWheelLeft() MouseWheelRight() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. Declaration public void MouseWheelRight() MouseWheelUp() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. Declaration public void MouseWheelUp() OnApplyTemplate() Called when a template has been applied to the control. Declaration public override void OnApplyTemplate() Overrides FrameworkElement.OnApplyTemplate() PageDown() Shift the content offset one page down. Declaration public void PageDown() PageLeft() Shift the content offset one page left. Declaration public void PageLeft() PageRight() Shift the content offset one page right. Declaration public void PageRight() PageUp() Shift the content offset one page up. Declaration public void PageUp() ScaleToFit() Instantly scale the content so that it fits completely in the control. Declaration public void ScaleToFit() SetHorizontalOffset(Double) Called when the offset of the horizontal scrollbar has been set. Declaration public void SetHorizontalOffset(double offset) Parameters Type Name Description Double offset SetVerticalOffset(Double) Called when the offset of the vertical scrollbar has been set. Declaration public void SetVerticalOffset(double offset) Parameters Type Name Description Double offset SnapContentOffsetTo(Point) Instantly center the view on the specified point (in content coordinates). Declaration public void SnapContentOffsetTo(Point contentOffset) Parameters Type Name Description Point contentOffset SnapTo(Point) Instantly center the view on the specified point (in content coordinates). Declaration public void SnapTo(Point contentPoint) Parameters Type Name Description Point contentPoint ZoomAboutPoint(Double, Point) Zoom in/out centered on the specified point (in content coordinates). The focus point is kept locked to it's on screen position (ala google maps). Declaration public void ZoomAboutPoint(double newContentScale, Point contentZoomFocus) Parameters Type Name Description Double newContentScale Point contentZoomFocus ZoomTo(Double) Zoom in/out centered on the viewport center. Declaration public void ZoomTo(double contentScale) Parameters Type Name Description Double contentScale ZoomTo(Rect) Instantly zoom to the specified rectangle (in content coordinates). Declaration public void ZoomTo(Rect contentRect) Parameters Type Name Description Rect contentRect Events ContentOffsetXChanged Event raised when the ContentOffsetX property has changed. Declaration public event EventHandler ContentOffsetXChanged Event Type Type Description EventHandler ContentOffsetYChanged Event raised when the ContentOffsetY property has changed. Declaration public event EventHandler ContentOffsetYChanged Event Type Type Description EventHandler ContentScaleChanged Event raised when the ContentScale property has changed. Declaration public event EventHandler ContentScaleChanged Event Type Type Description EventHandler Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient System.Windows.Markup.IAddChild System.Windows.Controls.Primitives.IScrollInfo"
  },
  "api/SharpVectors.Test.Sample.DirectorySvgConverterSample.html": {
    "href": "api/SharpVectors.Test.Sample.DirectorySvgConverterSample.html",
    "title": "Class DirectorySvgConverterSample | SharpVectors Documentation",
    "keywords": "Class DirectorySvgConverterSample Inheritance Object DirectorySvgConverterSample Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Test.Sample Assembly : SharpVectors.Converters.Wpf.dll Syntax public class DirectorySvgConverterSample Constructors DirectorySvgConverterSample() Declaration public DirectorySvgConverterSample() Methods Convert(DirectoryInfo, DirectoryInfo) Declaration public void Convert(DirectoryInfo svgDir, DirectoryInfo xamlDir) Parameters Type Name Description DirectoryInfo svgDir DirectoryInfo xamlDir"
  },
  "api/SharpVectors.Test.Sample.DrawingSvgConverterSample.html": {
    "href": "api/SharpVectors.Test.Sample.DrawingSvgConverterSample.html",
    "title": "Class DrawingSvgConverterSample | SharpVectors Documentation",
    "keywords": "Class DrawingSvgConverterSample Inheritance Object DrawingSvgConverterSample Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Test.Sample Assembly : SharpVectors.Converters.Wpf.dll Syntax public class DrawingSvgConverterSample Constructors DrawingSvgConverterSample() Declaration public DrawingSvgConverterSample() Methods Convert(String) Declaration public DrawingGroup Convert(string svgFile) Parameters Type Name Description String svgFile Returns Type Description DrawingGroup Convert(Uri) Declaration public DrawingGroup Convert(Uri svgFile) Parameters Type Name Description Uri svgFile Returns Type Description DrawingGroup"
  },
  "api/SharpVectors.Test.Sample.FileSvgConverterSample.html": {
    "href": "api/SharpVectors.Test.Sample.FileSvgConverterSample.html",
    "title": "Class FileSvgConverterSample | SharpVectors Documentation",
    "keywords": "Class FileSvgConverterSample Inheritance Object FileSvgConverterSample Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Test.Sample Assembly : SharpVectors.Converters.Wpf.dll Syntax public class FileSvgConverterSample Constructors FileSvgConverterSample() Declaration public FileSvgConverterSample() Methods Convert(String, String) Declaration public void Convert(string svgFile, string xamlFile) Parameters Type Name Description String svgFile String xamlFile"
  },
  "api/SharpVectors.Test.Sample.html": {
    "href": "api/SharpVectors.Test.Sample.html",
    "title": "Namespace SharpVectors.Test.Sample | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Test.Sample Classes DirectorySvgConverterSample DrawingSvgConverterSample FileSvgConverterSample ImageSvgConverterSample ResourceSvgConverterSample StreamSvgConverterSample TestXamlOutput"
  },
  "api/SharpVectors.Test.Sample.ImageSvgConverterSample.html": {
    "href": "api/SharpVectors.Test.Sample.ImageSvgConverterSample.html",
    "title": "Class ImageSvgConverterSample | SharpVectors Documentation",
    "keywords": "Class ImageSvgConverterSample Inheritance Object ImageSvgConverterSample Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Test.Sample Assembly : SharpVectors.Converters.Wpf.dll Syntax public class ImageSvgConverterSample Constructors ImageSvgConverterSample() Declaration public ImageSvgConverterSample() Methods Convert(String, String) Declaration public void Convert(string svgFile, string pngFile) Parameters Type Name Description String svgFile String pngFile"
  },
  "api/SharpVectors.Test.Sample.ResourceSvgConverterSample.html": {
    "href": "api/SharpVectors.Test.Sample.ResourceSvgConverterSample.html",
    "title": "Class ResourceSvgConverterSample | SharpVectors Documentation",
    "keywords": "Class ResourceSvgConverterSample Inheritance Object ResourceSvgConverterSample Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Test.Sample Assembly : SharpVectors.Converters.Wpf.dll Syntax public class ResourceSvgConverterSample Constructors ResourceSvgConverterSample() Declaration public ResourceSvgConverterSample() Methods Save() Declaration public string Save() Returns Type Description String"
  },
  "api/SharpVectors.Test.Sample.StreamSvgConverterSample.html": {
    "href": "api/SharpVectors.Test.Sample.StreamSvgConverterSample.html",
    "title": "Class StreamSvgConverterSample | SharpVectors Documentation",
    "keywords": "Class StreamSvgConverterSample Inheritance Object StreamSvgConverterSample Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Test.Sample Assembly : SharpVectors.Converters.Wpf.dll Syntax public class StreamSvgConverterSample Constructors StreamSvgConverterSample() Declaration public StreamSvgConverterSample() Methods Convert(String, Stream) Declaration public void Convert(string svgFile, Stream outputStream) Parameters Type Name Description String svgFile Stream outputStream"
  },
  "api/SharpVectors.Test.Sample.TestXamlOutput.html": {
    "href": "api/SharpVectors.Test.Sample.TestXamlOutput.html",
    "title": "Class TestXamlOutput | SharpVectors Documentation",
    "keywords": "Class TestXamlOutput Inheritance Object TestXamlOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : SharpVectors.Test.Sample Assembly : SharpVectors.Converters.Wpf.dll Syntax public class TestXamlOutput Constructors TestXamlOutput() Declaration public TestXamlOutput() Methods SvgToXaml(String) Declaration public string SvgToXaml(string svgFile) Parameters Type Name Description String svgFile Returns Type Description String"
  },
  "articles/Applications.html": {
    "href": "articles/Applications.html",
    "title": "4 Applications | SharpVectors Documentation",
    "keywords": "4 Applications The SVG# Reloaded comes with one main end-user application, an SVG Viewer or Browser. The viewer is named Squiggle.NET or simply Squiggle, after a similar viewer in the Batik SVG Toolkit (since the target is to produce something similar to the Batik Squiggle )."
  },
  "articles/controls.html": {
    "href": "articles/controls.html",
    "title": "SVG Controls | SharpVectors Documentation",
    "keywords": "SVG Controls The SVG# Reloaded comes with one main end-user application, an SVG Viewer or Browser. The viewer is named Squiggle.NET or simply Squiggle, after a similar viewer in the Batik SVG Toolkit (since the target is to produce something similar to the Batik Squiggle ). 1.3 Controls and Viewers These are WPF controls for directly viewing the SVG files or sources in the WPF applications. 1.3.1 Viewbox Control - SvgViewbox The SvgViewbox control is a WPF Viewbox derived control for viewing the SVG files in WPF applications, and allowing you to use all the Viewbox decorator properties. It wraps a drawing canvas instead of image, so will support interactivity when added to future release of the drawing canvas. The main property is the SvgViewbox.Source , which is an System.Uri specifying the path to the SVG file. For the illustration, we will create the following WPF sample application: Create a WPF application project, named SvgViewboxSample , similar to the steps in Section 1.2 . Modify the XAML of the main window to the following <Window x:Class=\"SvgViewboxSample.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" Title=\"SvgViewbox Sample\" Height=\"346\" Width=\"430\" Background=\"White\"> <DockPanel> <TabControl SelectedIndex=\"0\" OverridesDefaultStyle=\"False\"> <TabItem> <TabItem.Header>Web File</TabItem.Header> <TabItem.Content> <!-- 1. Load Web SVG file --> <svgc:SvgViewbox Source= \"http://croczilla.com/bits_and_pieces/svg/samples/tiger/tiger.svg\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Local File 1</TabItem.Header> <TabItem.Content> <!-- 2. Load local SVG file --> <svgc:SvgViewbox Source=\"../Test1.svg\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Local File 2</TabItem.Header> <TabItem.Content> <!-- 3. Load local SVG file --> <svgc:SvgViewbox Source=\"Test2.svg\" TextAsGeometry=\"True\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Sub-Folder File</TabItem.Header> <TabItem.Content> <!-- 4. Load local sub-folder SVG file --> <svgc:SvgViewbox Source=\"\\SubFolder\\Test3.svg\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Resource File</TabItem.Header> <TabItem.Content> <!-- 5. Load Resource SVG file --> <svgc:SvgViewbox Source=\"/Resources/Test.svg\" Stretch=\"Uniform\"/> </TabItem.Content> </TabItem> </TabControl> </DockPanel> </Window> Compile and run the program. 1.3.2 Canvas Control - SvgCanvas The SvgCanvas control is a WPF Canvas derived control for viewing the SVG files in WPF applications, and allowing you to use all the canvas properties. It derives from a drawing canvas instead of the generic canvas control, so will support interactivity when added to future release of the drawing canvas. The main property is the SvgCanvas.Source , which is an System.Uri specifying the path to the SVG file. For the illustration, we will create the following WPF sample application: Create a WPF application project, named SvgCanvasSample , similar to the steps in Section 1.2 . Modify the XAML of the main window to the following <Window x:Class=\"SvgCanvasSample.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" Title=\"SvgCanvas Sample\" Height=\"332\" Width=\"413\" Background=\"White\"> <DockPanel> <TabControl SelectedIndex=\"0\" OverridesDefaultStyle=\"False\"> <TabItem> <TabItem.Header>Web File</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 1. Load Web SVG file --> <svgc:SvgCanvas Source= \"http://croczilla.com/bits_and_pieces/svg/samples/butterfly/butterfly.svg\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Local File 1</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 2. Load local SVG file --> <svgc:SvgCanvas Source=\"../Test1.svg\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Local File 2</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 3. Load local SVG file --> <svgc:SvgCanvas Source=\"Test2.svg\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Sub-Folder File</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 4. Load local sub-folder SVG file --> <svgc:SvgCanvas Source=\"\\SubFolder\\Test3.svg\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Resource File</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 5. Load Resource SVG file --> <svgc:SvgCanvas Source=\"/Resources/Test.svg\"/> </ScrollViewer> </TabItem.Content> </TabItem> </TabControl> </DockPanel> </Window> Compile and run the program. 1.4 Sample Codes Download the sample codes from the TutorialSamples Folder tab."
  },
  "articles/converters.html": {
    "href": "articles/converters.html",
    "title": "SVG Converters | SharpVectors Documentation",
    "keywords": "SVG Converters The SVG to WPF conversion is the main use of this SharpVectors library currently. The other uses will be improved with time. The following is a diagram showing all the available converters. FileSvgConverter : This converts the SVG file to the corresponding XAML file, which can be viewed in WPF application. The root object in the converted file is DrawingGroup . FileSvgReader : This converts the SVG file to DrawingGroup and can optionally save the result to a file as XAML. ImageSvgConverter : This converts the SVG file to static or bitmap image, which can be saved to a file. StreamSvgConverter : This converts the SVG file or stream to static or bitmap image, which can be saved to a stream. This can be used for ASP.NET pages. DirectorySvgConverter : This converts a directory (and optionally the sub-directories) of SVG files to XAML files in a specified directory, maintaining the original directory structure. ResourceSvgConverter : This converts multiple directories (without the sub-directories) of SVG files and SVG files a DrawingGroup XAML. Now, as shown SvgConverter is the base class for the converters and defines the following common properties: DrawingSettings : This is the rendering options class, WpfDrawingSettings . SaveXaml : Determines whether to save conversion output to XAML format. SaveZaml : Determines whether to save conversion output to ZAML format, which is a G-zip compression of the XAML format, and similar to the SVGZ (for SVG). UseFrameXamlWriter : Determines whether the use the .NET Framework version of the XAML writer when saving the output to the XAML format. The default is false , and a customized XAML writer is used."
  },
  "articles/directory_converter.html": {
    "href": "articles/directory_converter.html",
    "title": "DirectorySvgConverter | SharpVectors Documentation",
    "keywords": "Directory SVG Converter - DirectorySvgConverter The DirectorySvgConverter converter class converts a directory (and optionally the subdirectories) of SVG input files to directory of XAML or static image files. It uses FileSvgReader : If the requested output is XAML file, or ImageSvgConverter : If the requested output is static image. Sample Code The following codes illustrate how to recursively convert a directory of SVG to a directory of XAML files (the default), maintaining the order of the subdirectories. SVG to XAML C# SVG to XAML VB.NET using System; using System.IO; using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class DirectorySvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public DirectorySvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public void Convert(DirectoryInfo svgDir, DirectoryInfo xamlDir) { // Create an directory converter var converter = new DirectorySvgConverter(_wpfSettings); converter.Recursive = true; // Converts SVG files in the source directory, save the output to the specified directory converter.Convert(svgDir, xamlDir); } } } Imports System.IO Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class DirectorySvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Sub Convert(ByVal svgDir As DirectoryInfo, ByVal xamlDir As DirectoryInfo) ' Create an directory converter Dim converter = New DirectorySvgConverter(_wpfSettings) converter.Recursive = True ' Converts SVG files in the source directory, save the output to the specified directory converter.Convert(svgDir, xamlDir) End Sub End Class End Namespace"
  },
  "articles/drawing_converter.html": {
    "href": "articles/drawing_converter.html",
    "title": "FileSvgReader | SharpVectors Documentation",
    "keywords": "Drawing SVG Converter - FileSvgReader The FileSvgReader converter class takes SVG file as input and outputs DrawingGroup object. The SVG input can also be one of the following Uri : A representation of a resource available to your application locally, on the intranet or internet Stream : A stream object providing access to the SVG input content. TextReader : A text reader file providing access to the SVG input content. XmlReader : An XML reader providing access to the SVG input content. Note With the Uri as input, FileSvgReader provides a wider access to SVG files. It can optionally save the output to XAML file, which is odd as is its naming. This was the first and initial SVG to XAML handler. User demands gave rise to the multiple SVG converters forcing this object to be considered as a converter for simplicity. This converter will be renamed DrawingSvgConverter in SharpVectors 2.x and stripped of some of its shared features (a breaking change). Sample Code SVG to XAML C# SVG to XAML VB.NET using System; using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; using DrawingSvgConverter = SharpVectors.Converters.FileSvgReader; namespace SharpVectors.Test.Sample { public class DrawingSvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public DrawingSvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public DrawingGroup Convert(string svgFile) { // Create the drawing converter var converter = new DrawingSvgConverter(_wpfSettings); // Perform the conversion to DrawingGroup return converter.Read(svgFile); } public DrawingGroup Convert(Uri svgFile) { // Create the drawing converter var converter = new DrawingSvgConverter(_wpfSettings); // Perform the conversion to DrawingGroup return converter.Read(svgFile); } } } Imports System Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Imports DrawingSvgConverter = SharpVectors.Converters.FileSvgReader Namespace SharpVectors.Test.Sample Public Class DrawingSvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Function Convert(ByVal svgFile As String) As DrawingGroup ' Create the drawing converter Dim converter = New SharpVectors.Converters.FileSvgReader(_wpfSettings) ' Perform the conversion to DrawingGroup Return converter.Read(svgFile) End Function Public Function Convert(ByVal svgFile As Uri) As DrawingGroup ' Create the drawing converter Dim converter = New SharpVectors.Converters.FileSvgReader(_wpfSettings) ' Perform the conversion to DrawingGroup Return converter.Read(svgFile) End Function End Class End Namespace"
  },
  "articles/file_converter.html": {
    "href": "articles/file_converter.html",
    "title": "FileSvgConverter | SharpVectors Documentation",
    "keywords": "File SVG Converter - FileSvgConverter The FileSvgConverter converter class takes SVG file as input and outputs XAML file. The SVG input can also be one of the following Stream : A stream object providing access to the SVG input content. TextReader : A text reader file providing access to the SVG input content. XmlReader : An XML reader providing access to the SVG input content. Note The output is always to a local file or a network file. It does not provide a backup of existing file. Sample Code The following illustrate a simple case of using the file SVG converter. SVG to XAML C# SVG to XAML VB.NET using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class FileSvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public FileSvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public void Convert(string svgFile, string xamlFile) { // Create a file converter var converter = new FileSvgConverter(_wpfSettings); // Perform the conversion to XAML converter.Convert(svgFile, xamlFile); } } } Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class FileSvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Sub Convert(ByVal svgFile As String, ByVal xamlFile As String) ' Create a file converter Dim converter = New FileSvgConverter(_wpfSettings) ' Perform the conversion to XAML converter.Convert(svgFile, xamlFile) End Sub End Class End Namespace"
  },
  "articles/getting_started.html": {
    "href": "articles/getting_started.html",
    "title": "Getting Started | SharpVectors Documentation",
    "keywords": "Getting Started The SharpVectors library provides three main uses of the SVG files in WPF applications. In this section, we will provide information to get you started with these uses. For the WPF application, the rendering of the SVG files are provided through classes shown in the diagram below: In some cases, the listed classes are entry points to the actual implementations as shown below for the text rendering. For the GDI+ application, the rendering classes are shown in the diagram below: Options and Settings A class WpfDrawingSettings in the SharpVectors.Rendering.Wpf assembly provides the currently available user-defined options for the rendering. The other options class shown below is the WpfResourceSettings class, ResourceDictionary specific output options that will be discussed later: All the properties of this class are well documented. The most important properties are CultureInfo : This is the culture information used for the text rendering, and it is passed to the FormattedText class. The default is the English culture. IncludeRuntime : This determines whether the application using the output of the conversion will link to the SharpVectors.Runtime.dll. The default is true , set this to false if you do not intend to use the runtime assembly. TextAsGeometry : This determines whether the texts are rendered as path geometry. The default is false . The vertical text does not currently support this option. Set this to true if do not want to use the runtime assembly, so that font path will not be included in the output. Note The TextAsGeometry property is marked as deprecated in this version, and will be removed in version 2.0 of the SharpVectors library. Rendering Process For the WPF system, the rendering process is managed by various classes listed below: named WpfSvgWindow : An class implementing an abstraction of browser window object. WpfDrawingRenderer : The controlling class used by the WPF implementation. WpfDrawingDocument :: This is used to collect rendered drawing information such as a mapping of an SVG ID to the rendered drawing object, WpfDrawingContext : The rendering context, which is not directly accessed by the user. The following code illustrate the basic code required to render an SVG file to a WPF drawing object: Rendering C# Sample Rendering VB.NET Sample using System; using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class TestRendering { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; // The browser window object abstraction. private WpfSvgWindow _wpfWindow; // The main rendering controller. private WpfDrawingRenderer _wpfRenderer; public TestRendering() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); // Set the options to the rendering controller _wpfRenderer = new WpfDrawingRenderer(_wpfSettings); // Create a drawing area of 500x500 pixels and set the rending object to it. _wpfWindow = new WpfSvgWindow(500, 500, _wpfRenderer); } public void Render(string svgFile) { // Create an instance of the rendered document var drawingDocument = new WpfDrawingDocument(); // Signal the start of the rendering process, the drawing context is created. _wpfRenderer.BeginRender(drawingDocument); // Open the specified SVG file for drawin, the SVG DOM is created as SvgDocument _wpfWindow.LoadDocument(svgFile, _wpfSettings); // Get the created SVG document var svgDocument = _wpfWindow.Document as SvgDocument; // Render the SVG document _wpfRenderer.Render(svgDocument); // Retrived the rendered drawing, and do something with it DrawingGroup drawing = _wpfRenderer.Drawing; // Signal an end to the rendering process _wpfRenderer.EndRender(); } } } Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class TestRendering ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings ' The browser window object abstraction. Private _wpfWindow As WpfSvgWindow ' The main rendering controller. Private _wpfRenderer As WpfDrawingRenderer Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() ' Set the options to the rendering controller _wpfRenderer = New WpfDrawingRenderer(_wpfSettings) ' Create a drawing area of 500x500 pixels and set the rending object to it. _wpfWindow = New WpfSvgWindow(500, 500, _wpfRenderer) End Sub Public Sub Render(ByVal svgFile As String) ' Create an instance of the rendered document Dim drawingDocument = New WpfDrawingDocument() ' Signal the start of the rendering process, the drawing context is created. _wpfRenderer.BeginRender(drawingDocument) ' Open the specified SVG file for drawin, the SVG DOM is created as SvgDocument _wpfWindow.LoadDocument(svgFile, _wpfSettings) ' Get the created SVG document Dim svgDocument = TryCast(_wpfWindow.Document, SvgDocument) ' Render the SVG document _wpfRenderer.Render(svgDocument) ' Retrived the rendered drawing, and do something with it Dim drawing As DrawingGroup = _wpfRenderer.Drawing ' Signal an end to the rendering process _wpfRenderer.EndRender() End Sub End Class End Namespace Note The specified dimensions to the window object is not necessarily applied, since the conversion to WPF is a vector-to-vector conversion. This enables the rendered to be scaled in the displaying control, such as the Image or Canvas . To explicitly apply the dimension, set the PixelWidth and PixelHeight properties in the settings object. This is mainly useful for the generation of static images. In order to simplify the above codes and avoid repetitions, utility classes (named: Converters) are provided to handle specific needs such as converting a whole directory or converting a set of SVG files into a ResourceDictionary object. XAML Output - XmlXamlWriter The WPF framework provides an XAML writer to convert framework objects to XAML format. However, the SharpVectors library provides a similar class, named XmlXamlWriter , for the same purpose but specifically for SharpVectors rendered objects. The XmlXamlWriter class makes it possible to control and customize the XAML outputs, and it is particularly useful for the ResourceDictionary XAML output. We will create a simple application for illustration, using the following sample SVG file below: <svg width=\"6cm\" height=\"5cm\" viewBox=\"0 0 600 500\" xmlns=\"http://www.w3.org/2000/svg\"> <rect x=\"1\" y=\"1\" width=\"598\" height=\"498\" fill=\"none\" stroke=\"blue\"/> <circle cx=\"300\" cy=\"225\" r=\"100\" fill=\"red\"/> <text x=\"300\" y=\"480\" font-family=\"Verdana\" font-size=\"35\" text-anchor=\"middle\"> Sample Text </text> </svg> A modified version of the previous codes to output XAML is shown below: XAML C# Sample XAML VB.NET Sample using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class TestXamlOutput { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; // The browser window object abstraction. private WpfSvgWindow _wpfWindow; // The main rendering controller. private WpfDrawingRenderer _wpfRenderer; public TestXamlOutput() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); // Set the options to the rendering controller _wpfRenderer = new WpfDrawingRenderer(_wpfSettings); // Create a drawing area of 500x500 pixels and set the rending object to it. _wpfWindow = new WpfSvgWindow(500, 500, _wpfRenderer); } public string SvgToXaml(string svgFile) { // Create an instance of the rendered document var drawingDocument = new WpfDrawingDocument(); // Signal the start of the rendering process, the drawing context is created. _wpfRenderer.BeginRender(drawingDocument); // Open the specified SVG file for drawin, the SVG DOM is created as SvgDocument _wpfWindow.LoadDocument(svgFile, _wpfSettings); // Get the created SVG document var svgDocument = _wpfWindow.Document as SvgDocument; // Render the SVG document _wpfRenderer.Render(svgDocument); // Retrived the rendered drawing, and do something with it DrawingGroup drawing = _wpfRenderer.Drawing; // Signal an end to the rendering process _wpfRenderer.EndRender(); // Create an instance of the XAML writer, and return XAML output var xamlWriter = new XmlXamlWriter(); return xamlWriter.Save(drawing); } } } Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class TestXamlOutput ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings ' The browser window object abstraction. Private _wpfWindow As WpfSvgWindow ' The main rendering controller. Private _wpfRenderer As WpfDrawingRenderer Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() ' Set the options to the rendering controller _wpfRenderer = New WpfDrawingRenderer(_wpfSettings) ' Create a drawing area of 500x500 pixels and set the rending object to it. _wpfWindow = New WpfSvgWindow(500, 500, _wpfRenderer) End Sub Public Function SvgToXaml(ByVal svgFile As String) As String ' Create an instance of the rendered document Dim drawingDocument = New WpfDrawingDocument() ' Signal the start of the rendering process, the drawing context is created. _wpfRenderer.BeginRender(drawingDocument) ' Open the specified SVG file for drawin, the SVG DOM is created as SvgDocument _wpfWindow.LoadDocument(svgFile, _wpfSettings) ' Get the created SVG document Dim svgDocument = TryCast(_wpfWindow.Document, SvgDocument) ' Render the SVG document _wpfRenderer.Render(svgDocument) ' Retrived the rendered drawing, and do something with it Dim drawing As DrawingGroup = _wpfRenderer.Drawing ' Signal an end to the rendering process _wpfRenderer.EndRender() ' Create an instance of the XAML writer, and return XAML output Dim xamlWriter = New XmlXamlWriter() Return xamlWriter.Save(drawing) End Function End Class End Namespace For the given SVG sample, the output XAML is shown below: <DrawingGroup xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:svg=\"http://sharpvectors.codeplex.com/runtime/\"> <DrawingGroup svg:SvgLink.Key=\"_SvgDrawingLayer\"> <DrawingGroup.ClipGeometry> <RectangleGeometry Rect=\"0,0,600,500\" /> </DrawingGroup.ClipGeometry> <GeometryDrawing svg:SvgObject.UniqueId=\"4f9c747c-3c2a-4ce3-976f-4538181b17b1\"> <GeometryDrawing.Pen> <Pen Brush=\"#FF0000FF\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\"/> </GeometryDrawing.Pen> <GeometryDrawing.Geometry> <RectangleGeometry RadiusX=\"0\" RadiusY=\"0\" Rect=\"1,1,598,498\" /> </GeometryDrawing.Geometry> </GeometryDrawing> <GeometryDrawing Brush=\"#FFFF0000\" svg:SvgObject.UniqueId=\"914b46d1-987f-4e04-9fb8-0609cefd5cf3\"> <GeometryDrawing.Geometry> <EllipseGeometry RadiusX=\"100\" RadiusY=\"100\" Center=\"300,225\" /> </GeometryDrawing.Geometry> </GeometryDrawing> <DrawingGroup svg:SvgObject.UniqueId=\"268b85e1-d9bc-4cc3-9b61-01423f096cf5\" svg:SvgObject.Type=\"Text\"> <GlyphRunDrawing ForegroundBrush=\"#FF000000\"> <GlyphRunDrawing.GlyphRun> <GlyphRun PixelsPerDip=\"1\" BaselineOrigin=\"191.643333333333,480\" FontRenderingEmSize=\"35\" BidiLevel=\"0\" Language=\"en-us\" IsSideways=\"False\" ClusterMap=\"0 1 2 3 4 5 6 7 8 9 10\" Characters=\"Sample Text\" GlyphIndices=\"54 68 80 83 79 72 3 55 72 91 87\" AdvanceWidths=\"23.94 21.035 34.055 21.805 9.59 20.86 12.32 17.815 20.86 20.72 13.79\" GlyphOffsets=\"0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0\"> <GlyphRun.GlyphTypeface> <GlyphTypeface FontUri=\"{svg:SvgFontUri k:/win10/fonts/verdana.ttf}\" StyleSimulations=\"None\" /> </GlyphRun.GlyphTypeface> </GlyphRun> </GlyphRunDrawing.GlyphRun> </GlyphRunDrawing> </DrawingGroup> </DrawingGroup> </DrawingGroup> You will observe the following extra information from the XAML output svg:SvgObject.UniqueId : This is added to uniquely identity the rendered object since not all SVG elements will have identifier (ID) specified. This is only useful if you wish to interact with the rendered drawing. GlyphTypeface FontUri : This uses a SharpVectors extension to output the font URI. This is useful to correctly resolve the font path on the deployment user PC, since the font directory may not be the same. This can be eliminated by setting the TextAsGeometry property to true . The extra information can be turned off by setting the IncludeRuntime property to false ."
  },
  "articles/image_converter.html": {
    "href": "articles/image_converter.html",
    "title": "ImageSvgConverter | SharpVectors Documentation",
    "keywords": "File SVG Converter - ImageSvgConverter The ImageSvgConverter converter class takes SVG file as input and outputs XAML file. The SVG input can also be one of the following Stream : A stream object providing access to the SVG input content. TextReader : A text reader file providing access to the SVG input content. XmlReader : An XML reader providing access to the SVG input content. Note The output is always to a local file or a network file. It does not provide a backup of existing file. Sample Code The following illustrate a simple case of using the static image SVG converter. SVG to XAML C# SVG to XAML VB.NET using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class ImageSvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public ImageSvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public void Convert(string svgFile, string pngFile) { // Create an image converter var converter = new ImageSvgConverter(_wpfSettings); // Perform the conversion to static image converter.Convert(svgFile, pngFile); } } } Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class ImageSvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Sub Convert(ByVal svgFile As String, ByVal pngFile As String) ' Create an image converter Dim converter = New ImageSvgConverter(_wpfSettings) ' Perform the conversion to static image converter.Convert(svgFile, pngFile) End Sub End Class End Namespace"
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "SharpVectors | SharpVectors Documentation",
    "keywords": "Overview The SharpVectors is packaged in several .NET assemblies. Here is the complete list of available assemblies to get you started on developing and using the library. SharpVectors.Core : This the core library defining all the required interfaces as defined by the W3C SVG specifications, including the events and the style sheets interfaces. SharpVectors.Dom : This is an extension to the .NET Framework implementation of the XML DOM (XmlDocument) to support the SVG. SharpVectors.Css : This is an extension to the .NET Framework DOM to support style sheets interfaces. SharpVectors.Model : This is the main implementation of the SVG DOM and interfaces. This is the parser of the SVG documents, reducing the SVG file to memory model of .NET objects. This and the above assemblies do not depend on GDI+ or the WPF libraries. SharpVectors.Runtime.Wpf : This is an optional WPF library providing SVG object specific information at the runtime. This includes conversion classes to handle GlyphTypeface.FontUri , which will otherwise be hard-coded with the full path information that may not work on the user's machine, classes to handle embedded images etc. SharpVectors.Rendering.Wpf : This is WPF library, which handles the rendering of the SVG object to the WPF drawing objects. SharpVectors.Converters.Wpf : This is WPF library, which uses the SharpVectors.Rendering.Wpf library to perform actual conversion for viewing. SharpVectors.Rendering.Gdi : This is GDI+ library, which handles the rendering of the SVG object to the System.Drawing objects. This is less complete compared with the WPF renderer. This is not shown in the above diagram. Its dependency diagram is shown below. For further information, click the documentation links below: Getting Started Usage: Converters Usage: Type Converters Usage: Controls and Viewers Samples and Test Applications WPF Test Sample WPF W3C Test Suite GDI+ Control Test Sample GDI+ Test Viewer Sample Applications"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | SharpVectors Documentation",
    "keywords": "Add your introductions here!"
  },
  "articles/markup_extensions.html": {
    "href": "articles/markup_extensions.html",
    "title": "SVG Markup Extensions | SharpVectors Documentation",
    "keywords": "SVG Markup Extensions The SVG# Reloaded comes with one main end-user application, an SVG Viewer or Browser. The viewer is named Squiggle.NET or simply Squiggle, after a similar viewer in the Batik SVG Toolkit (since the target is to produce something similar to the Batik Squiggle ). 1.2 WPF Extensions and Type Converters These are WPF markup extensions or type converters for handling the SVG files in WPF applications. Currently, the SVG# Reloaded provides one markup extension, SvgImageExtension , which converts an SVG source file to a DrawingImage . As shown in the diagram above, all the rendering settings are available on this markup extension as properties. The main property here is the SvgImageExtension.Source , which is the path to the SVG file, and the file itself can be located in the following: Web/Internet : The path in this case is the HTTP, FTP, etc scheme URI of the file. Local Computer Disk : The path is the absolute or the relative URI to the SVG file. Resources : The path is the Microsoft Pack URI of the SVG resource file. For the illustration, we will create a simple WPF Application shown below, each image displayed is an SVG file in the WPF Image Control : Create a .NET 3.5 WPF Application in C# or VB.NET, we will name it SvgImageSample and rename the main Window, MainWindow . As above, add the following SVG# Reloaded assemblies SharpVectors.Converters.Wpf.dll SharpVectors.Core.dll SharpVectors.Css.dll SharpVectors.Dom.dll SharpVectors.Model.dll SharpVectors.Rendering.Wpf.dll SharpVectors.Runtime.Wpf.dll Modify the generated XAML code to the following (the C# or VB.NET codes are not modified): <Window x:Class=\"SvgImageSample.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" xmlns:sys=\"clr-namespace:System;assembly=mscorlib\" Title=\"SvgImage Sample\" Height=\"346\" Width=\"409\" Background=\"White\"> <Window.Resources> <ResourceDictionary> <sys:String x:Key=\"WebFile\"> http://upload.wikimedia.org/wikipedia/commons/c/c7/SVG.svg </sys:String> </ResourceDictionary> </Window.Resources> <DockPanel> <TabControl SelectedIndex=\"0\" OverridesDefaultStyle=\"False\"> <TabItem> <TabItem.Header>By Local File</TabItem.Header> <TabItem.Content> <!-- 1. Load local SVG file, using the constructor --> <Image Source=\"{svgc:SvgImage ../Test1.svg}\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>By Web File</TabItem.Header> <TabItem.Content> <!-- 2. Load Web SVG file, using the constructor. --> <Image Source=\"{svgc:SvgImage {StaticResource WebFile}}\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>By Local/Resource File</TabItem.Header> <TabItem.Content> <!-- 3. Load local, using the constructor and a property. --> <Image Source=\"{svgc:SvgImage Test2.svg, TextAsGeometry=True}\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>By Sub-Folder File</TabItem.Header> <TabItem.Content> <!-- 4. Load local, using constructor - works, but not recommended syntax, simply use /SubFolder/Test3.svg --> <Image Source=\"{svgc:SvgImage \\\\SubFolder\\\\Test3.svg}\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>By Local/Resource File</TabItem.Header> <TabItem.Content> <!-- 5. Load resource, using the constructor. --> <Image Source=\"{svgc:SvgImage /Resources/Test.svg}\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>By Properties</TabItem.Header> <TabItem.Content> <!-- 6. Load resource, using property. --> <Image Source=\"{svgc:SvgImage Source=/Resources/Test.svg}\"/> </TabItem.Content> </TabItem> </TabControl> </DockPanel> </Window> NOTE : As shown above, the local relative path and resource path are similar, and in this case the local directory is searched at runtime, and if no such file is found, it is assumed to be in the resource. Compile and run the program."
  },
  "articles/resource_converter.html": {
    "href": "articles/resource_converter.html",
    "title": "ResourceSvgConverter | SharpVectors Documentation",
    "keywords": "Resource SVG Converter - ResourceSvgConverter The ResourceSvgConverter converter class takes multiple files and directories as input and outputs a ResourceDictionary in XAML format. This is useful for vector icons, but required supports in the rendering process to track brushes and pens, and an extension to the XmlXamlWriter class to format a compact XAML output. It is the most recent SharpVector SVG converter and adds extension features that will be supported in the other converters. Note Currently, the input is restricted to local or network files and directories. The output is String or local or network file or one of the following Stream : A stream object created by the user. TextWriter : A text writer object created by the user. XmlWriter : An XML writer object created by the user Resource Options This converter offers extra settings or options in the form of WpfResourceSettings class. The following are the properties exposed by the resource options to customize the output resource dictionary XAML: ResourceMode : An enumeration specifying the type of the resource object; DrawingGroup or DrawingImage . DrawingGroup Resource DrawingImage Resource <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:po=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation/options\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"po\"> <DrawingGroup x:Key=\"shapes-rect-01-t\" po:Freeze=\"True\" ClipGeometry=\"F0M0,0L480,0L480,360L0,360z\"> </DrawingGroup> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:po=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation/options\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"po\"> <DrawingImage x:Key=\"shapes-rect-01-t\" po:Freeze=\"True\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L480,0L480,360L0,360z\"> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> ResourceFreeze : Makes the freezable resource object unmodifiable and sets its IsFrozen property to true . To freeze a resource object declared in markup, the PresentationOptions:Freeze attribute is used, as shown above as po.Freeze , and the xmlns:po=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation/options\" namespace is added. Note If this property is set to true , it is admisable to set the ResourceAccessType type below to Static . IndentSpaces : This specifies the number of spaces used for the indentation of the XAML output. It is honored with the XmlReaderSettings . The default is 2 spaces . NumericPrecision : This specifies numeric precision or number of decimal places for the floating number. The default is 4 , in complaince to the SVG specifications. Setting this to -1 will disable this property. ColorNameFormat : This determines the key name of color objects, if both BindToResources and BindToColors properties are enabled. The default is Color{0} . BrushNameFormat : This determines the key name of brush objects, if the BindToResources property is enabled. The default is Brush{0} . Note Only solid color brushes are supported and extracted from the drawings. PenNameFormat : This determines the key name of pen or stroke objects, if the BindToResources property is enabled. The default is Pen{0} BindToResources : This determines whether the media basic objects; color, brush and stroke/pen are extracted and the drawing objects bind to them. The default is true . BindToResources == true BindToResources == false <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"#FF000000\"> <GeometryDrawing.Pen> <Pen Brush=\"#FF008000\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> </GeometryDrawing.Pen> <GeometryDrawing.Geometry> <PathGeometry FillRule=\"Nonzero\" Figures=\"M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </GeometryDrawing.Geometry> </GeometryDrawing> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> BindToColors : This determines if the color object of brushes is extracted. The default is true . BindToColors == true BindToColors == false <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <SolidColorBrush x:Key=\"Brush1\" Color=\"#FF000000\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"#FF008000\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> BindPenToBrushes : This determines if solid color brushes of pen/stroke is extracted. The default is true . BindPenToBrushes == true BindPenToBrushes == false <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <Pen x:Key=\"Pen1\" Brush=\"#FF008000\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> Note If BindToResources property is set to false , then BindToColors and BindPenToBrushes values have no effect. UseResourceIndex : This specifies whether a zero-based numbering is applied to the key names. The default is false . UseResourceIndex == true UseResourceIndex == false <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color0\">#FF000000</Color> <Color x:Key=\"Color1\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush0\" Color=\"{DynamicResource Color0}\" /> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <Pen x:Key=\"Pen0\" Brush=\"{DynamicResource Brush1}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush0}\" Pen=\"{DynamicResource Pen0}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> ColorPalette : This is a dictionary of color to resource key, specifying a predefined resource keys for the colors. Color Palette C# Color Palette VB.NET XAML Output // Create the resource settings or options var resourceSettings = new WpfResourceSettings() { ColorPalette = new Dictionary<Color, string>(WpfDrawingResources.ColorComparer) { { (Color)ColorConverter.ConvertFromString(\"#FF000000\"), \"IconFill\" }, { (Color)ColorConverter.ConvertFromString(\"#FF008000\"), \"IconBorder\" }, } }; // Add a directory as SVG source resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(resourceSettings); // Perform the conversion to ResourceDictionary XAML var xamlText = converter.Convert(); ' Create the resource settings or options Dim resourceSettings = New WpfResourceSettings() With { .ColorPalette = New Dictionary(Of Color, String)(WpfDrawingResources.ColorComparer) From { {CType(ColorConverter.ConvertFromString(\"#FF000000\"), Color), \"IconFill\"}, {CType(ColorConverter.ConvertFromString(\"#FF008000\"), Color), \"IconBorder\"} } } ' Add a directory as SVG source resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(resourceSettings) ' Perform the conversion to ResourceDictionary XAML Dim xamlText = converter.Convert() <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"IconFill\">#FF000000</Color> <Color x:Key=\"IconBorder\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource IconFill}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource IconBorder}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> Sources : Gets an enumeration of all the SVG sources to be converted to the resource dictionary. SourceCount : Gets the count of the SVG sources to be converted to the resource dictionary. ResourceAccess : This specifies the type of the resource access, DynamicResource or StaticResource , to be applied to the resource objects. ResourceAccessType.Dynamic ResourceAccessType.Static <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{StaticResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{StaticResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{StaticResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{StaticResource Brush1}\" Pen=\"{StaticResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> ResourceResolverType : Get a value specifying the current type of the resource object key resolver, which is implemented through the IResourceKeyResolver interface. This applies to the main resource objects; DrawingGroup or DrawingImage (and not the color, brush or pen objects). It returns None , if no resource key resolver is attached, in which case the default resolver will be used. ResourceKeyResolverType - Default For the illustration of the resource key resolvers, we will assume a directory containing the following three SVG files about.svg area_chart.svg crystal_oscillator.svg The following sample code uses the default resource key resolver, or ResourceKeyResolver , to resolve the keys. If not specified, the keys are simply the SVG file names without the file extension. C# VB.NET XAML using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"area_chart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> <DrawingGroup x:Key=\"about\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7,7.7,6,11,6L37, 6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24,17C22.8954, 17,22,16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> <DrawingGroup x:Key=\"crystal_oscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43,37C44.1,37,45,36.1, 45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1,39,22,38.1, 22,37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> </ResourceDictionary> The default resource key resolver supports simple string substitution template to customize the resource keys with the following two tags ${name} : Representing the SVG file name without the extension. ${number} : Representing the resource number or index, depending on the value of the UseResourceIndex property. For instance, using a key format of icon_${name} , an SVG file with the name about.svg will be have a resource key: icon_about . The following sample code illustrates how the customized resource key format is applied with the default resolver, and the resulting XAML output: C# VB.NET XAML using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Initialize the default key resolver and register it var resolver = new ResourceKeyResolver(\"icon_${name}\"); _resourceSettings.RegisterResolver(resolver); } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Initialize the default key resolver and register it Dim resolver = New ResourceKeyResolver(\"icon_${name}\") _resourceSettings.RegisterResolver(resolver) End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"icon_area_chart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> <DrawingGroup x:Key=\"icon_crystal_oscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43,37C44.1,37,45,36.1, 45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1,39,22,38.1,22, 37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> <DrawingGroup x:Key=\"icon_about\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7,7.7,6,11,6L37, 6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24,17C22.8954,17,22, 16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> </ResourceDictionary> ResourceKeyResolverType - Dictionary For the cases where the resource keys are already defined, you can use the dictionary resolver, or DictionaryKeyResolver , which maps the SVG file names without the extension to the predefined keys. The following sample code uses the dictionary resource key resolver, or DictionaryKeyResolver , to resolve the keys of the previous SVG sample files. C# VB.NET XAML using System; using System.Collections.Generic; using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Create a dictionary of SVG file name to predefined names var dictionaryKeys = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase) { { \"about\", \"About\" }, { \"area_chart\", \"AreaChart\" }, { \"crystal_oscillator\", \"CrystalOscillator\" } }; // Initialize the dictionary key resolver and register it var resolver = new DictionaryKeyResolver(dictionaryKeys); _resourceSettings.RegisterResolver(resolver); } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System Imports System.Collections.Generic Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Create a dictionary of SVG file name to predefined names Dim dictionaryKeys = New Dictionary(Of String, String)(StringComparer.OrdinalIgnoreCase) From { {\"about\", \"About\"}, {\"area_chart\", \"AreaChart\"}, {\"crystal_oscillator\", \"CrystalOscillator\"} } ' Initialize the dictionary key resolver and register it Dim resolver = New DictionaryKeyResolver(dictionaryKeys) _resourceSettings.RegisterResolver(resolver) End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"CrystalOscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43,37C44.1,37, 45,36.1,45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1,39,22, 38.1,22,37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> <DrawingGroup x:Key=\"About\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7,7.7,6, 11,6L37,6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24,17C22.8954, 17,22,16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> <DrawingGroup x:Key=\"AreaChart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> </ResourceDictionary> ResourceKeyResolverType - CodeSnippet In applications you need to use a code snippet to implement the IResourceKeyResolver interface, we provider the code snippet resolver, or CodeSnippetKeyResolver , which uses @System.CodeDom.Compiler.CSharpCodeProvider to compile the implementation in memory and use it to resolve the keys. This is used to reduce dependencies but limit the snippets to C# and lanagauge feature support. For the code snippet, the following conditions are required The namespace must be SharpVectors.Renderers . The class name must be SnippetKeyResolver . The following sample code uses the snippet resource key resolver, or CodeSnippetKeyResolver , to resolve the keys. To reduce the code length for the screen, we will assume the snippet is stored in a file, and load it from the file. The test code snippet will convert the specified SVG file name to the lower camel case naming format as the resource key. C# VB.NET Snippet XAML using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample(string snippetFile) { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Get the code snippet, here assumed from a file string codeSnippet = string.Empty; using (var reader = new System.IO.StreamReader(snippetFile)) { codeSnippet = reader.ReadToEnd(); } // Initialize the code snippet key resolver and register it var resolver = new CodeSnippetKeyResolver(codeSnippet); _resourceSettings.RegisterResolver(resolver); } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New(ByVal snippetFile As String) ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Get the code snippet, here assumed from a file Dim codeSnippet = String.Empty Using reader = New StreamReader(snippetFile) codeSnippet = reader.ReadToEnd() End Using ' Initialize the code snippet key resolver and register it Dim resolver = New CodeSnippetKeyResolver(codeSnippet) _resourceSettings.RegisterResolver(resolver) End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace using System; using System.Xml; using System.Windows; namespace SharpVectors.Renderers { public sealed class SnippetKeyResolver : WpfSettings<SnippetKeyResolver>, IResourceKeyResolver { public SnippetKeyResolver() { } public ResourceKeyResolverType ResolverType { get { return ResourceKeyResolverType.Custom; } } public bool IsValid { get { return true; } } public void BeginResolve() { } public void EndResolve() { } public override SnippetKeyResolver Clone() { return new SnippetKeyResolver(); } public override void ReadXml(XmlReader reader) { } public override void WriteXml(XmlWriter writer) { } public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) { if (index < 0) { throw new ArgumentException(\"The specified index is invalid\", \"index\"); } NotNullNotEmpty(fileName, \"fileName\"); var keyValue = ToLowerCamelCase(fileName.ToUpper()); if (!string.IsNullOrWhiteSpace(keyValue) && keyValue.Length >= 3 && keyValue.Length < 255) { return keyValue; } return fileName; } private static string ToLowerCamelCase(string fileName) { if (string.IsNullOrWhiteSpace(fileName)) { return string.Empty; } string camelCaseStr = char.ToLower(fileName[0]).ToString(); if (fileName.Length > 1) { bool isStartOfWord = false; for (int i = 1; i < fileName.Length; i++) { char currChar = fileName[i]; if (currChar == '_' || currChar == '-') { isStartOfWord = true; } else if (char.IsUpper(currChar)) { if (isStartOfWord) { camelCaseStr += currChar; } else { camelCaseStr += char.ToLower(currChar); } isStartOfWord = false; } else { camelCaseStr += currChar; isStartOfWord = false; } } } return camelCaseStr; } } } <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"crystalOscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43,37C44.1,37, 45,36.1,45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1,39,22, 38.1,22,37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> <DrawingGroup x:Key=\"about\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7,7.7,6,11, 6L37,6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24, 17C22.8954,17,22,16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> <DrawingGroup x:Key=\"areaChart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> </ResourceDictionary> ResourceKeyResolverType - Custom You can create a custom resource key resolver by implementing the IResourceKeyResolver interface. The following sample code implements a resource key resolver that will convert the specified SVG file name to the upper camel case naming format as the resource key. C# VB.NET Custom XAML using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Initialize the custom key resolver and register it var resolver = new CustomResourceKeyResolver(); _resourceSettings.RegisterResolver(resolver); } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Initialize the custom key resolver and register it Dim resolver = New CustomResourceKeyResolver() _resourceSettings.RegisterResolver(resolver) End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace using System; using System.Xml; using System.Windows; using SharpVectors.Renderers; namespace SharpVectors.Test.Sample { internal sealed class CustomResourceKeyResolver : WpfSettings<CustomResourceKeyResolver>, IResourceKeyResolver { public CustomResourceKeyResolver() { } public override CustomResourceKeyResolver Clone() { return new CustomResourceKeyResolver(); } public override void ReadXml(XmlReader reader) { NotNull(reader, nameof(reader)); } public override void WriteXml(XmlWriter writer) { NotNull(writer, nameof(writer)); } public ResourceKeyResolverType ResolverType { get { return ResourceKeyResolverType.Custom; } } public bool IsValid { get { return true; } } public void BeginResolve() { } public void EndResolve() { } public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) { if (index < 0) { throw new ArgumentException(\"The specified index is invalid\", \"index\"); } NotNullNotEmpty(fileName, \"fileName\"); var keyValue = ToUpperCamelCase(fileName.ToUpper()); if (!string.IsNullOrWhiteSpace(keyValue) && keyValue.Length >= 3 && keyValue.Length < 255) { return keyValue; } return fileName; } internal static string ToUpperCamelCase(string fileName) { if (string.IsNullOrWhiteSpace(fileName)) { return string.Empty; } string camelCaseStr = fileName[0].ToString(); if (fileName.Length > 1) { bool isStartOfWord = false; for (int i = 1; i < fileName.Length; i++) { char currChar = fileName[i]; if (currChar == '_' || currChar == '-') { isStartOfWord = true; } else if (char.IsUpper(currChar)) { if (isStartOfWord) { camelCaseStr += currChar; } else { camelCaseStr += char.ToLower(currChar); } isStartOfWord = false; } else { camelCaseStr += currChar; isStartOfWord = false; } } } return camelCaseStr; } } } <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"CrystalOscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43, 37C44.1,37,45,36.1,45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1, 39,22,38.1,22,37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> <DrawingGroup x:Key=\"About\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7, 7.7,6,11,6L37,6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24, 17C22.8954,17,22,16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> <DrawingGroup x:Key=\"AreaChart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> </ResourceDictionary> Options XML Serialization The resource settings, WpfResourceSettings object can be saved to file in an XML format, or initialized from an XML format file. You can, therefore, create a resource dictionary converter options for a project and share with other developers or projects. The following code defines a sample resource dictionary converter options and serializes WpfResourceSettings object to XML. C# VB.NET XAML using System.Collections.Generic; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Initialize the default key resolver and register it var resolver = new ResourceKeyResolver(\"icon_${name}\"); _resourceSettings.RegisterResolver(resolver); // Add predefined color palette _resourceSettings.ColorPalette = new Dictionary<Color, string>(WpfDrawingResources.ColorComparer) { {(Color)ColorConverter.ConvertFromString(\"#FF008000\"), \"SvgColor01\"}, {(Color)ColorConverter.ConvertFromString(\"#FF000000\"), \"SvgColor02\"}, {(Color)ColorConverter.ConvertFromString(\"#FFFFFF00\"), \"SvgColor03\"}, {(Color)ColorConverter.ConvertFromString(\"#FF0000FF\"), \"SvgColor04\"}, {(Color)ColorConverter.ConvertFromString(\"#FF00FF00\"), \"SvgColor05\"}, {(Color)ColorConverter.ConvertFromString(\"#FF339966\"), \"SvgColor06\"}, {(Color)ColorConverter.ConvertFromString(\"#FFFF00FF\"), \"SvgColor07\"}, {(Color)ColorConverter.ConvertFromString(\"#FFFFA500\"), \"SvgColor08\"}, {(Color)ColorConverter.ConvertFromString(\"#FF007700\"), \"SvgColor09\"}, {(Color)ColorConverter.ConvertFromString(\"#FF33CC66\"), \"SvgColor10\"} }; // Add directories as SVG source _resourceSettings.AddSource(@\"C:\\Abc-Project\\Icons1\"); _resourceSettings.AddSource(@\"C:\\Abc-Project\\Icons2\"); } public string Save() { // Serialize the resource settings to XML return _resourceSettings.Save(); } } } Imports System.Collections.Generic Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Initialize the default key resolver and register it Dim resolver = New ResourceKeyResolver(\"icon_${name}\") _resourceSettings.RegisterResolver(resolver) ' Add predefined color palette _resourceSettings.ColorPalette = New Dictionary(Of Color, String)(WpfDrawingResources.ColorComparer) From { {CType(ColorConverter.ConvertFromString(\"#FF008000\"), Color), \"SvgColor01\"}, {CType(ColorConverter.ConvertFromString(\"#FF000000\"), Color), \"SvgColor02\"}, {CType(ColorConverter.ConvertFromString(\"#FFFFFF00\"), Color), \"SvgColor03\"}, {CType(ColorConverter.ConvertFromString(\"#FF0000FF\"), Color), \"SvgColor04\"}, {CType(ColorConverter.ConvertFromString(\"#FF00FF00\"), Color), \"SvgColor05\"}, {CType(ColorConverter.ConvertFromString(\"#FF339966\"), Color), \"SvgColor06\"}, {CType(ColorConverter.ConvertFromString(\"#FFFF00FF\"), Color), \"SvgColor07\"}, {CType(ColorConverter.ConvertFromString(\"#FFFFA500\"), Color), \"SvgColor08\"}, {CType(ColorConverter.ConvertFromString(\"#FF007700\"), Color), \"SvgColor09\"}, {CType(ColorConverter.ConvertFromString(\"#FF33CC66\"), Color), \"SvgColor10\"} } ' Add directories as SVG source _resourceSettings.AddSource(\"C:\\Abc-Project\\Icons1\") _resourceSettings.AddSource(\"C:\\Abc-Project\\Icons2\") End Sub Public Function Save() As String ' Serialize the resource settings to XML Return _resourceSettings.Save() End Function End Class End Namespace <?xml version=\"1.0\" encoding=\"utf-16\"?> <resourceSettings version=\"1.0.0\"> <properties> <property name=\"ResourceFreeze\" type=\"bool\" value=\"false\" /> <property name=\"UseResourceIndex\" type=\"bool\" value=\"false\" /> <property name=\"ResourceMode\" type=\"enum\" value=\"Drawing\" /> <property name=\"ResourceAccess\" type=\"enum\" value=\"Dynamic\" /> <property name=\"IndentSpaces\" type=\"int\" value=\"2\" /> <property name=\"NumericPrecision\" type=\"int\" value=\"4\" /> </properties> <naming> <property name=\"PenNameFormat\" type=\"string\" value=\"Pen{0}\" /> <property name=\"ColorNameFormat\" type=\"string\" value=\"Color{0}\" /> <property name=\"BrushNameFormat\" type=\"string\" value=\"Brush{0}\" /> <resolver type=\"Default\"> <property name=\"ResourceNameFormat\" type=\"string\" value=\"icon_${name}\" /> </resolver> </naming> <binding> <property name=\"BindToResources\" type=\"bool\" value=\"true\" /> <property name=\"BindPenToBrushes\" type=\"bool\" value=\"true\" /> <property name=\"BindToColors\" type=\"bool\" value=\"true\" /> </binding> <palettes> <palette color=\"#FF008000\" name=\"SvgColor01\" /> <palette color=\"#FF000000\" name=\"SvgColor02\" /> <palette color=\"#FFFFFF00\" name=\"SvgColor03\" /> <palette color=\"#FF0000FF\" name=\"SvgColor04\" /> <palette color=\"#FF00FF00\" name=\"SvgColor05\" /> <palette color=\"#FF339966\" name=\"SvgColor06\" /> <palette color=\"#FFFF00FF\" name=\"SvgColor07\" /> <palette color=\"#FFFFA500\" name=\"SvgColor08\" /> <palette color=\"#FF007700\" name=\"SvgColor09\" /> <palette color=\"#FF33CC66\" name=\"SvgColor10\" /> </palettes> <sources> <source>C:/Abc-Project/Icons1</source> <source>C:/Abc-Project/Icons2</source> </sources> </resourceSettings>"
  },
  "articles/Samples.html": {
    "href": "articles/Samples.html",
    "title": "3 Samples and Test Applications | SharpVectors Documentation",
    "keywords": "3 Samples and Test Applications The SVG# Reloaded is packaged with a number of illustrative and test samples or applications. In this section, we provide an overview of these sample applications."
  },
  "articles/stream_converter.html": {
    "href": "articles/stream_converter.html",
    "title": "StreamSvgConverter | SharpVectors Documentation",
    "keywords": "Stream SVG Converter - StreamSvgConverter The StreamSvgConverter converter class takes SVG file as input and outputs XAML file. The SVG input can also be one of the following Stream : A stream object providing access to the SVG input content. TextReader : A text reader file providing access to the SVG input content. XmlReader : An XML reader providing access to the SVG input content. Note This strictly converts the input SVG source to Stream , which is created by the user. Sample Code The following illustrate a simple case of using the stream SVG converter. SVG to XAML C# SVG to XAML VB.NET using System.IO; using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class StreamSvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public StreamSvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public void Convert(string svgFile, Stream outputStream) { // Create an image converter var converter = new StreamSvgConverter(_wpfSettings); // Perform the conversion to static image converter.Convert(svgFile, outputStream); } } } Imports System.IO Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class StreamSvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Sub Convert(ByVal svgFile As String, ByVal outputStream As Stream) ' Create an image converter Dim converter = New StreamSvgConverter(_wpfSettings) ' Perform the conversion XAML and save to the specified stream converter.Convert(svgFile, outputStream) End Sub End Class End Namespace"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction | SharpVectors Documentation",
    "keywords": "Introduction The Scalable Vector Graphics (SVG) is a well-known graphics format developed and maintained by the W3C SVG Working Group. The SVG is designed to be used on the web, but format is flexible enough to applications outside the web. SVG is a markup language for describing two-dimensional graphics applications and images, and a set of related graphics script interfaces. The SharpVectors project aims to provide libraries and tools to parse, convert and view the SVG on Windows, especially on the Windows Presentation Foundation platform. Installation The SharpVectors library targets the following frameworks .NET Framework, Version 4.0 .NET Framework, Version 4.5 .NET Framework, Version 4.6 .NET Framework, Version 4.7 .NET Framework, Version 4.8 .NET Standard, Version 2.1 .NET Core, Version 3.1 .NET 5.0 .NET 6.0 The library can be used in WPF and Windows Forms applications. For the Libraries The library can be downloaded from the following sources NuGet (Full Package - Recommended) , Version 1.8.0 - SharpVectors . NuGet (Full Package - Old Name, same as above) , Version 1.8.0 - SharpVectors.Reloaded . NuGet (For WPF Applications) , Version 1.8.0 - SharpVectors.Wpf . GitHub Releases Page , Version 1.8.0 . For the Applications The following are related SharpVectors application repositories SvgXaml : SharpVectors based SVG to XAML converter application. SvgViewer : SharpVectors based SVG viewer application. Getting Started This section provides Getting Start information to help you get started. Credits SharpVectors uses source codes from articles and other open source projects. We wish to acknowledge and thank the authors of these great articles and projects SharpVectorGraphics (aka SVG#) by SVG# Team of Developers (SourceForge) WPF Zooming and Panning Control by Ashley Davis (CodeProject) Render Text On A Path With WPF by Charles Petzold (MSDN Magazine - December 2008) MinIoC by Microsoft (Single-file minimal C# IoC container) .NET ZLib Implementation by Alberto M (CodeProject) Brotli compression format by Google (C# Decoder) Links to Resources Overview About SVG Scalable Vector Graphics (SVG) Specifications SVG 1.1 (First Edition) - This version is outdated! SVG 1.1 (Second Edition) Libraries and Frameworks Batik SVG Toolkit , the most complete SVG toolkit available (Java)."
  }
}