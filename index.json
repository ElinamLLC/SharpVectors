{
  "api/SharpVectors.Converters.DirectorySvgConverter.-ctor.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.-ctor.html",
    "title": "Constructor DirectorySvgConverter | SharpVectors Documentation",
    "keywords": "Constructor DirectorySvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll DirectorySvgConverter(WpfDrawingSettings) Initializes a new instance of the WpfDrawingSettings class with the specified drawing or rendering settings. public DirectorySvgConverter(WpfDrawingSettings settings) Parameters settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.Convert.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.Convert.html",
    "title": "Method Convert | SharpVectors Documentation",
    "keywords": "Method Convert Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Convert(DirectoryInfo, DirectoryInfo) Convert the SVG files in the specified source directory, saving the results in the specified destination directory. public void Convert(DirectoryInfo sourceInfo, DirectoryInfo destInfo) Parameters sourceInfo DirectoryInfo A DirectoryInfo specifying the source directory of the SVG files. destInfo DirectoryInfo A DirectoryInfo specifying the source directory of the SVG files. Exceptions ArgumentNullException If the sourceInfo is null. -or- If the destInfo is null. ArgumentException If the directory specified by sourceInfo does not exists."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.DestinationDir.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.DestinationDir.html",
    "title": "Property DestinationDir | SharpVectors Documentation",
    "keywords": "Property DestinationDir Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll DestinationDir Gets the destination directory of the converted XAML files. public DirectoryInfo DestinationDir { get; } Property Value DirectoryInfo A DirectoryInfo specifying the destination directory of the converted XAML files."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.Encoder.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.Encoder.html",
    "title": "Property Encoder | SharpVectors Documentation",
    "keywords": "Property Encoder Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Encoder Gets or sets a custom bitmap encoder to use in encoding the drawing to an image file. public BitmapEncoder Encoder { get; set; } Property Value BitmapEncoder A derived BitmapEncoder object specifying the bitmap encoder for encoding the images. The default is null, and the EncoderType property determines the encoder used. Remarks If the value of this is set, it must match the MIME type or file extension defined by the EncoderType property for it to be used."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.EncoderType.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.EncoderType.html",
    "title": "Property EncoderType | SharpVectors Documentation",
    "keywords": "Property EncoderType Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EncoderType Gets or set the bitmap encoder type to use in encoding the drawing to an image file. public ImageEncoderType EncoderType { get; set; } Property Value ImageEncoderType An enumeration of the type ImageEncoderType specifying the bitmap encoder. The default is the PngBitmap."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.ErrorFile.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.ErrorFile.html",
    "title": "Property ErrorFile | SharpVectors Documentation",
    "keywords": "Property ErrorFile Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ErrorFile Gets the full path of the last SVG file not successfully converted. public string ErrorFile { get; } Property Value string A string containing the full path of the last SVG file not successfully converted to the XAML Remarks Whenever an error occurred in the conversion of a file, the conversion process will stop. Use this property to retrieve the full path of the SVG file causing the error."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.FallbackOnWriterError.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.FallbackOnWriterError.html",
    "title": "Property FallbackOnWriterError | SharpVectors Documentation",
    "keywords": "Property FallbackOnWriterError Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework XAML writer when an error occurred in using the custom writer. public bool FallbackOnWriterError { get; set; } Property Value bool This is true if the converter falls back to using the system XAML writer when an error occurred in using the custom writer; otherwise, it is false. If false, an exception, which occurred in using the custom writer will be thrown. The default is false."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.IncludeHidden.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.IncludeHidden.html",
    "title": "Property IncludeHidden | SharpVectors Documentation",
    "keywords": "Property IncludeHidden Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IncludeHidden Gets or sets a value indicating whether the copy operation includes hidden directories and files. public bool IncludeHidden { get; set; } Property Value bool This property is true if hidden directories and files are included in the copy operation; otherwise, it is false. The default is false."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.IncludeSecurity.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.IncludeSecurity.html",
    "title": "Property IncludeSecurity | SharpVectors Documentation",
    "keywords": "Property IncludeSecurity Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IncludeSecurity Gets or sets a value indicating whether the security settings of the copied file is retained. public bool IncludeSecurity { get; set; } Property Value bool This property is true if the security settings of the file is also copied; otherwise, it is false. The default is false."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.Overwrite.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.Overwrite.html",
    "title": "Property Overwrite | SharpVectors Documentation",
    "keywords": "Property Overwrite Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Overwrite Gets or sets a value indicating whether an existing file is overwritten. public bool Overwrite { get; set; } Property Value bool This property is true if existing file is overwritten; otherwise, it is false. The default is true."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.Recursive.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.Recursive.html",
    "title": "Property Recursive | SharpVectors Documentation",
    "keywords": "Property Recursive Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Recursive Gets or sets a value indicating whether the directory copying is recursive, that is includes the sub-directories. public bool Recursive { get; set; } Property Value bool This property is true if the sub-directories are included in the directory copy; otherwise, it is false. The default is true."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.SaveImage.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.SaveImage.html",
    "title": "Property SaveImage | SharpVectors Documentation",
    "keywords": "Property SaveImage Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SaveImage Gets or sets a value indicating whether to save static or bitmap image output. public bool SaveImage { get; set; } Property Value bool This is true if the conversion saves static or bitmap image file; otherwise, it is false. The default value is false."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.SourceDir.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.SourceDir.html",
    "title": "Property SourceDir | SharpVectors Documentation",
    "keywords": "Property SourceDir Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SourceDir Gets the source directory of the SVG files to be converted. public DirectoryInfo SourceDir { get; } Property Value DirectoryInfo A DirectoryInfo specifying the source directory of the SVG files."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.WriterErrorOccurred.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.WriterErrorOccurred.html",
    "title": "Property WriterErrorOccurred | SharpVectors Documentation",
    "keywords": "Property WriterErrorOccurred Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom XAML writer. public bool WriterErrorOccurred { get; } Property Value bool This is true if an error occurred when using the custom XAML writer; otherwise, it is false."
  },
  "api/SharpVectors.Converters.DirectorySvgConverter.html": {
    "href": "api/SharpVectors.Converters.DirectorySvgConverter.html",
    "title": "Class DirectorySvgConverter | SharpVectors Documentation",
    "keywords": "Class DirectorySvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This converts a directory (and optionally the sub-directories) of SVG files to XAML files in a specified directory, maintaining the original directory structure. It uses FileSvgConverter or ImageSvgConverter converter to process each SVG file in the specified directory. public sealed class DirectorySvgConverter : SvgConverter, IDisposable Inheritance object DispatcherObject DependencyObject SvgConverter DirectorySvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors DirectorySvgConverter(WpfDrawingSettings) Initializes a new instance of the WpfDrawingSettings class with the specified drawing or rendering settings. Properties DestinationDir Gets the destination directory of the converted XAML files. Encoder Gets or sets a custom bitmap encoder to use in encoding the drawing to an image file. EncoderType Gets or set the bitmap encoder type to use in encoding the drawing to an image file. ErrorFile Gets the full path of the last SVG file not successfully converted. FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework XAML writer when an error occurred in using the custom writer. IncludeHidden Gets or sets a value indicating whether the copy operation includes hidden directories and files. IncludeSecurity Gets or sets a value indicating whether the security settings of the copied file is retained. Overwrite Gets or sets a value indicating whether an existing file is overwritten. Recursive Gets or sets a value indicating whether the directory copying is recursive, that is includes the sub-directories. SaveImage Gets or sets a value indicating whether to save static or bitmap image output. SourceDir Gets the source directory of the SVG files to be converted. WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom XAML writer. Methods Convert(DirectoryInfo, DirectoryInfo) Convert the SVG files in the specified source directory, saving the results in the specified destination directory."
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.-ctor.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.-ctor.html",
    "title": "Constructor EmbeddedImageSerializerArgs | SharpVectors Documentation",
    "keywords": "Constructor EmbeddedImageSerializerArgs Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EmbeddedImageSerializerArgs(string, BitmapImage) public EmbeddedImageSerializerArgs(string imagePath, BitmapImage image) Parameters imagePath string image BitmapImage"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.Image.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.Image.html",
    "title": "Property Image | SharpVectors Documentation",
    "keywords": "Property Image Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Image public BitmapImage Image { get; } Property Value BitmapImage"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.ImagePath.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.ImagePath.html",
    "title": "Property ImagePath | SharpVectors Documentation",
    "keywords": "Property ImagePath Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ImagePath public string ImagePath { get; } Property Value string"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerArgs.html",
    "title": "Class EmbeddedImageSerializerArgs | SharpVectors Documentation",
    "keywords": "Class EmbeddedImageSerializerArgs Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public sealed class EmbeddedImageSerializerArgs : EventArgs Inheritance object EventArgs EmbeddedImageSerializerArgs Inherited Members EventArgs.Empty object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors EmbeddedImageSerializerArgs(string, BitmapImage) Properties Image ImagePath"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.-ctor.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.-ctor.html",
    "title": "Constructor EmbeddedImageSerializerVisitor | SharpVectors Documentation",
    "keywords": "Constructor EmbeddedImageSerializerVisitor Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EmbeddedImageSerializerVisitor(bool) public EmbeddedImageSerializerVisitor(bool converterFallback) Parameters converterFallback bool EmbeddedImageSerializerVisitor(string) public EmbeddedImageSerializerVisitor(string saveDirectory) Parameters saveDirectory string EmbeddedImageSerializerVisitor(bool, string) public EmbeddedImageSerializerVisitor(bool saveImages, string saveDirectory) Parameters saveImages bool saveDirectory string"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.ConverterFallback.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.ConverterFallback.html",
    "title": "Property ConverterFallback | SharpVectors Documentation",
    "keywords": "Property ConverterFallback Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ConverterFallback public bool ConverterFallback { get; set; } Property Value bool"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.ImageCreated.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.ImageCreated.html",
    "title": "Event ImageCreated | SharpVectors Documentation",
    "keywords": "Event ImageCreated Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public event EventHandler<EmbeddedImageSerializerArgs> ImageCreated Returns EventHandler<EmbeddedImageSerializerArgs>"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.ImageExt.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.ImageExt.html",
    "title": "Field ImageExt | SharpVectors Documentation",
    "keywords": "Field ImageExt Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public const string ImageExt = \".png\" Returns string"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.ImageNamePrefix.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.ImageNamePrefix.html",
    "title": "Property ImageNamePrefix | SharpVectors Documentation",
    "keywords": "Property ImageNamePrefix Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ImageNamePrefix public string ImageNamePrefix { get; set; } Property Value string"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.Initialize.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Initialize(WpfDrawingContext) public override void Initialize(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.SaveDirectory.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.SaveDirectory.html",
    "title": "Property SaveDirectory | SharpVectors Documentation",
    "keywords": "Property SaveDirectory Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SaveDirectory public string SaveDirectory { get; set; } Property Value string"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.SaveImages.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.SaveImages.html",
    "title": "Property SaveImages | SharpVectors Documentation",
    "keywords": "Property SaveImages Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SaveImages public bool SaveImages { get; set; } Property Value bool"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.Uninitialize.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.Uninitialize.html",
    "title": "Method Uninitialize | SharpVectors Documentation",
    "keywords": "Method Uninitialize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Uninitialize() public override void Uninitialize()"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.Visit.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Visit(SvgImageElement, WpfDrawingContext) public override ImageSource Visit(SvgImageElement element, WpfDrawingContext context) Parameters element SvgImageElement context WpfDrawingContext Returns ImageSource"
  },
  "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageSerializerVisitor.html",
    "title": "Class EmbeddedImageSerializerVisitor | SharpVectors Documentation",
    "keywords": "Class EmbeddedImageSerializerVisitor Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public sealed class EmbeddedImageSerializerVisitor : WpfEmbeddedImageVisitor, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfEmbeddedImageVisitor EmbeddedImageSerializerVisitor Implements IDisposable Inherited Members WpfVisitor.IsInitialized WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors EmbeddedImageSerializerVisitor(bool) EmbeddedImageSerializerVisitor(bool, string) EmbeddedImageSerializerVisitor(string) Fields ImageExt Properties ConverterFallback ImageNamePrefix SaveDirectory SaveImages Methods Initialize(WpfDrawingContext) Uninitialize() Visit(SvgImageElement, WpfDrawingContext) Events ImageCreated"
  },
  "api/SharpVectors.Converters.EmbeddedImageVisitor.-ctor.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageVisitor.-ctor.html",
    "title": "Constructor EmbeddedImageVisitor | SharpVectors Documentation",
    "keywords": "Constructor EmbeddedImageVisitor Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EmbeddedImageVisitor() public EmbeddedImageVisitor()"
  },
  "api/SharpVectors.Converters.EmbeddedImageVisitor.Initialize.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageVisitor.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Initialize(WpfDrawingContext) public override void Initialize(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Converters.EmbeddedImageVisitor.Uninitialize.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageVisitor.Uninitialize.html",
    "title": "Method Uninitialize | SharpVectors Documentation",
    "keywords": "Method Uninitialize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Uninitialize() public override void Uninitialize()"
  },
  "api/SharpVectors.Converters.EmbeddedImageVisitor.Visit.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Visit(SvgImageElement, WpfDrawingContext) public override ImageSource Visit(SvgImageElement element, WpfDrawingContext context) Parameters element SvgImageElement context WpfDrawingContext Returns ImageSource"
  },
  "api/SharpVectors.Converters.EmbeddedImageVisitor.html": {
    "href": "api/SharpVectors.Converters.EmbeddedImageVisitor.html",
    "title": "Class EmbeddedImageVisitor | SharpVectors Documentation",
    "keywords": "Class EmbeddedImageVisitor Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public sealed class EmbeddedImageVisitor : WpfEmbeddedImageVisitor, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfEmbeddedImageVisitor EmbeddedImageVisitor Implements IDisposable Inherited Members WpfVisitor.IsInitialized WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors EmbeddedImageVisitor() Methods Initialize(WpfDrawingContext) Uninitialize() Visit(SvgImageElement, WpfDrawingContext)"
  },
  "api/SharpVectors.Converters.FileSvgConverter.-ctor.html": {
    "href": "api/SharpVectors.Converters.FileSvgConverter.-ctor.html",
    "title": "Constructor FileSvgConverter | SharpVectors Documentation",
    "keywords": "Constructor FileSvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll FileSvgConverter(WpfDrawingSettings) Initializes a new instance of the FileSvgConverter class with the specified drawing or rendering settings. public FileSvgConverter(WpfDrawingSettings settings) Parameters settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. FileSvgConverter(bool, bool, WpfDrawingSettings) Initializes a new instance of the FileSvgConverter class with the specified drawing or rendering settings and the saving options. public FileSvgConverter(bool saveXaml, bool saveZaml, WpfDrawingSettings settings) Parameters saveXaml bool This specifies whether to save result object tree in XAML file. saveZaml bool This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed XAML format, similar to the SVGZ. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used."
  },
  "api/SharpVectors.Converters.FileSvgConverter.Convert.html": {
    "href": "api/SharpVectors.Converters.FileSvgConverter.Convert.html",
    "title": "Method Convert | SharpVectors Documentation",
    "keywords": "Method Convert Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Convert(string) This performs the conversion of the specified SVG file, and saves the output to an XAML file with the same file name. public bool Convert(string svgFileName) Parameters svgFileName string The full path of the SVG source file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the svgFileName is null. ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(string, string) This performs the conversion of the specified SVG file, and saves the output to the specified XAML file. public bool Convert(string svgFileName, string xamlFileName) Parameters svgFileName string The full path of the SVG source file. xamlFileName string The output XAML file. This is optional. If not specified, an XAML file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the svgFileName is null. ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(Stream, string) This performs the conversion of the specified SVG source, and saves the output to the specified XAML file. public bool Convert(Stream svgStream, string xamlFileName) Parameters svgStream Stream A stream providing access to the SVG source data. xamlFileName string The output XAML file. This is optional. If not specified, an XAML file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the xamlFileName is null. -or- If the svgStream is null. ArgumentException If the xamlFileName is empty. Convert(TextReader, string) This performs the conversion of the specified SVG source, and saves the output to the specified XAML file. public bool Convert(TextReader svgTextReader, string xamlFileName) Parameters svgTextReader TextReader A text reader providing access to the SVG source data. xamlFileName string The output XAML file. This is optional. If not specified, an XAML file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the xamlFileName is null. -or- If the svgTextReader is null. ArgumentException If the xamlFileName is empty. Convert(XmlReader, string) This performs the conversion of the specified SVG source, and saves the output to the specified XAML file. public bool Convert(XmlReader svgXmlReader, string xamlFileName) Parameters svgXmlReader XmlReader An XML reader providing access to the SVG source data. xamlFileName string The output XAML file. This is optional. If not specified, an XAML file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the xamlFileName is null. -or- If the svgXmlReader is null. ArgumentException If the xamlFileName is empty."
  },
  "api/SharpVectors.Converters.FileSvgConverter.Drawing.html": {
    "href": "api/SharpVectors.Converters.FileSvgConverter.Drawing.html",
    "title": "Property Drawing | SharpVectors Documentation",
    "keywords": "Property Drawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Drawing Gets the last created drawing. public DrawingGroup Drawing { get; } Property Value DrawingGroup A DrawingGroup specifying the last converted drawing."
  },
  "api/SharpVectors.Converters.FileSvgConverter.FallbackOnWriterError.html": {
    "href": "api/SharpVectors.Converters.FileSvgConverter.FallbackOnWriterError.html",
    "title": "Property FallbackOnWriterError | SharpVectors Documentation",
    "keywords": "Property FallbackOnWriterError Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework XAML writer when an error occurred in using the custom writer. public bool FallbackOnWriterError { get; set; } Property Value bool This is true if the converter falls back to using the system XAML writer when an error occurred in using the custom writer; otherwise, it is false. If false, an exception, which occurred in using the custom writer will be thrown. The default is false."
  },
  "api/SharpVectors.Converters.FileSvgConverter.WriterErrorOccurred.html": {
    "href": "api/SharpVectors.Converters.FileSvgConverter.WriterErrorOccurred.html",
    "title": "Property WriterErrorOccurred | SharpVectors Documentation",
    "keywords": "Property WriterErrorOccurred Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom XAML writer. public bool WriterErrorOccurred { get; } Property Value bool This is true if an error occurred when using the custom XAML writer; otherwise, it is false."
  },
  "api/SharpVectors.Converters.FileSvgConverter.XamlFile.html": {
    "href": "api/SharpVectors.Converters.FileSvgConverter.XamlFile.html",
    "title": "Property XamlFile | SharpVectors Documentation",
    "keywords": "Property XamlFile Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll XamlFile Gets the output XAML file path if generated. public string XamlFile { get; } Property Value string A string containing the full path to the XAML if generated; otherwise, it is null."
  },
  "api/SharpVectors.Converters.FileSvgConverter.ZamlFile.html": {
    "href": "api/SharpVectors.Converters.FileSvgConverter.ZamlFile.html",
    "title": "Property ZamlFile | SharpVectors Documentation",
    "keywords": "Property ZamlFile Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ZamlFile Gets the output ZAML file path if generated. public string ZamlFile { get; } Property Value string A string containing the full path to the ZAML if generated; otherwise, it is null."
  },
  "api/SharpVectors.Converters.FileSvgConverter.html": {
    "href": "api/SharpVectors.Converters.FileSvgConverter.html",
    "title": "Class FileSvgConverter | SharpVectors Documentation",
    "keywords": "Class FileSvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This converts an SVG file to the corresponding XAML file, which can be viewed in WPF application. The root object in the converted file is DrawingGroup. public sealed class FileSvgConverter : SvgConverter, IDisposable Inheritance object DispatcherObject DependencyObject SvgConverter FileSvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors FileSvgConverter(WpfDrawingSettings) Initializes a new instance of the FileSvgConverter class with the specified drawing or rendering settings. FileSvgConverter(bool, bool, WpfDrawingSettings) Initializes a new instance of the FileSvgConverter class with the specified drawing or rendering settings and the saving options. Properties Drawing Gets the last created drawing. FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework XAML writer when an error occurred in using the custom writer. WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom XAML writer. XamlFile Gets the output XAML file path if generated. ZamlFile Gets the output ZAML file path if generated. Methods Convert(Stream, string) This performs the conversion of the specified SVG source, and saves the output to the specified XAML file. Convert(TextReader, string) This performs the conversion of the specified SVG source, and saves the output to the specified XAML file. Convert(string) This performs the conversion of the specified SVG file, and saves the output to an XAML file with the same file name. Convert(string, string) This performs the conversion of the specified SVG file, and saves the output to the specified XAML file. Convert(XmlReader, string) This performs the conversion of the specified SVG source, and saves the output to the specified XAML file."
  },
  "api/SharpVectors.Converters.FileSvgReader.-ctor.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.-ctor.html",
    "title": "Constructor FileSvgReader | SharpVectors Documentation",
    "keywords": "Constructor FileSvgReader Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll FileSvgReader(WpfDrawingSettings, bool) Initializes a new instance of the FileSvgReader class with the specified drawing or rendering settings. public FileSvgReader(WpfDrawingSettings settings, bool isEmbedded = false) Parameters settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. isEmbedded bool A value indicating whether this converter is embedded or not. FileSvgReader(bool, bool, DirectoryInfo, WpfDrawingSettings, bool) Initializes a new instance of the FileSvgConverter class with the specified drawing or rendering settings, the saving options and the working directory. public FileSvgReader(bool saveXaml, bool saveZaml, DirectoryInfo workingDir, WpfDrawingSettings settings, bool isEmbedded = false) Parameters saveXaml bool This specifies whether to save result object tree in XAML file. saveZaml bool This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed XAML format, similar to the SVGZ. workingDir DirectoryInfo The working directory, where converted outputs are saved. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. isEmbedded bool"
  },
  "api/SharpVectors.Converters.FileSvgReader.Dispose.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.Dispose.html",
    "title": "Method Dispose | SharpVectors Documentation",
    "keywords": "Method Dispose Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Dispose(bool) This releases the unmanaged resources used by the SvgConverter and optionally releases the managed resources. protected override void Dispose(bool disposing) Parameters disposing bool This is true if managed resources should be disposed; otherwise, false."
  },
  "api/SharpVectors.Converters.FileSvgReader.Drawing.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.Drawing.html",
    "title": "Property Drawing | SharpVectors Documentation",
    "keywords": "Property Drawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Drawing Gets or sets the last created drawing. public DrawingGroup Drawing { get; set; } Property Value DrawingGroup A DrawingGroup specifying the last converted drawing."
  },
  "api/SharpVectors.Converters.FileSvgReader.DrawingDocument.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.DrawingDocument.html",
    "title": "Property DrawingDocument | SharpVectors Documentation",
    "keywords": "Property DrawingDocument Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll DrawingDocument public WpfDrawingDocument DrawingDocument { get; } Property Value WpfDrawingDocument"
  },
  "api/SharpVectors.Converters.FileSvgReader.FallbackOnWriterError.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.FallbackOnWriterError.html",
    "title": "Property FallbackOnWriterError | SharpVectors Documentation",
    "keywords": "Property FallbackOnWriterError Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework XAML writer when an error occurred in using the custom writer. public bool FallbackOnWriterError { get; set; } Property Value bool This is true if the converter falls back to using the system XAML writer when an error occurred in using the custom writer; otherwise, it is false. If false, an exception, which occurred in using the custom writer will be thrown. The default is false."
  },
  "api/SharpVectors.Converters.FileSvgReader.ImageFile.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.ImageFile.html",
    "title": "Property ImageFile | SharpVectors Documentation",
    "keywords": "Property ImageFile Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ImageFile Gets the output image file path if generated. public string ImageFile { get; } Property Value string A string containing the full path to the image if generated; otherwise, it is null."
  },
  "api/SharpVectors.Converters.FileSvgReader.Read.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.Read.html",
    "title": "Method Read | SharpVectors Documentation",
    "keywords": "Method Read Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Read(string) Reads in the specified SVG file and converts it to WPF drawing. public DrawingGroup Read(string svgFileName) Parameters svgFileName string The full path of the SVG source file. Returns DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null. Exceptions ArgumentNullException If the svgFileName is null. ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Read(Uri) Reads in the specified SVG file and converts it to WPF drawing. public DrawingGroup Read(Uri svgUri) Parameters svgUri Uri A Uri specifying the path to the SVG file. Returns DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null. Exceptions ArgumentNullException If the svgUri is null. Read(Stream) Reads in the specified SVG file stream and converts it to WPF drawing. public DrawingGroup Read(Stream svgStream) Parameters svgStream Stream The source SVG file stream. Returns DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null. Exceptions ArgumentNullException If the svgStream is null. Read(TextReader) Reads in the specified source from the SVG file reader and converts it to WPF drawing. public DrawingGroup Read(TextReader svgTextReader) Parameters svgTextReader TextReader A text reader providing access to the SVG file data. Returns DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null. Exceptions ArgumentNullException If the svgTextReader is null. Read(XmlReader) Reads in the specified source SVG file reader and converts it to WPF drawing. public DrawingGroup Read(XmlReader svgXmlReader) Parameters svgXmlReader XmlReader An XML reader providing access to the SVG file data. Returns DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null. Exceptions ArgumentNullException If the svgXmlReader is null. Read(string, DirectoryInfo) Reads in the specified SVG file, converting it to WPF drawing and saving the results to the specified directory if successful. public DrawingGroup Read(string svgFileName, DirectoryInfo destinationDir) Parameters svgFileName string The full path of the SVG source file. destinationDir DirectoryInfo The destination of the output XAML file, if the saving properties are enabled. Returns DrawingGroup This returns the DrawingGroup representing the SVG file, if successful; otherwise, it returns null. Exceptions ArgumentNullException If the svgFileName is null. ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists."
  },
  "api/SharpVectors.Converters.FileSvgReader.Save.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.Save.html",
    "title": "Method Save | SharpVectors Documentation",
    "keywords": "Method Save Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Save(string, bool, bool) Saves the last converted file to the specified file name. public bool Save(string fileName, bool asXaml, bool asZaml) Parameters fileName string The full path of the output file. asXaml bool A value indicating whether to save the output to XAML file. asZaml bool A value indicating whether to save the output to ZAML file, which is a G-zip compression of the XAML file. Returns bool This returns true if either asXaml or asZaml is true and the operation is successful. Remarks If the output serialization properties are not enabled, this method can be used to save the output to a file. This will not change the output serialization properties of this object. Exceptions InvalidOperationException If there is no converted drawing from a previous conversion process to be saved. Save(TextWriter) public bool Save(TextWriter textWriter) Parameters textWriter TextWriter Returns bool Save(Stream) public bool Save(Stream stream) Parameters stream Stream Returns bool"
  },
  "api/SharpVectors.Converters.FileSvgReader.SaveImage.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.SaveImage.html",
    "title": "Method SaveImage | SharpVectors Documentation",
    "keywords": "Method SaveImage Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SaveImage(string, DirectoryInfo, ImageEncoderType) public bool SaveImage(string fileName, DirectoryInfo imageFileDir, ImageEncoderType encoderType) Parameters fileName string imageFileDir DirectoryInfo encoderType ImageEncoderType Returns bool SaveImage(string, FileInfo, ImageEncoderType) public bool SaveImage(string fileName, FileInfo imageFileName, ImageEncoderType encoderType) Parameters fileName string imageFileName FileInfo encoderType ImageEncoderType Returns bool"
  },
  "api/SharpVectors.Converters.FileSvgReader.WriterErrorOccurred.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.WriterErrorOccurred.html",
    "title": "Property WriterErrorOccurred | SharpVectors Documentation",
    "keywords": "Property WriterErrorOccurred Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom XAML writer. public bool WriterErrorOccurred { get; } Property Value bool This is true if an error occurred when using the custom XAML writer; otherwise, it is false."
  },
  "api/SharpVectors.Converters.FileSvgReader.XamlFile.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.XamlFile.html",
    "title": "Property XamlFile | SharpVectors Documentation",
    "keywords": "Property XamlFile Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll XamlFile Gets the output XAML file path if generated. public string XamlFile { get; } Property Value string A string containing the full path to the XAML if generated; otherwise, it is null."
  },
  "api/SharpVectors.Converters.FileSvgReader.ZamlFile.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.ZamlFile.html",
    "title": "Property ZamlFile | SharpVectors Documentation",
    "keywords": "Property ZamlFile Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ZamlFile Gets the output ZAML file path if generated. public string ZamlFile { get; } Property Value string A string containing the full path to the ZAML if generated; otherwise, it is null."
  },
  "api/SharpVectors.Converters.FileSvgReader.html": {
    "href": "api/SharpVectors.Converters.FileSvgReader.html",
    "title": "Class FileSvgReader | SharpVectors Documentation",
    "keywords": "Class FileSvgReader Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This converts a SVG file to DrawingGroup object, and can optionally save the result to a file as XAML. public sealed class FileSvgReader : SvgConverter, IDisposable Inheritance object DispatcherObject DependencyObject SvgConverter FileSvgReader Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors FileSvgReader(WpfDrawingSettings, bool) Initializes a new instance of the FileSvgReader class with the specified drawing or rendering settings. FileSvgReader(bool, bool, DirectoryInfo, WpfDrawingSettings, bool) Initializes a new instance of the FileSvgConverter class with the specified drawing or rendering settings, the saving options and the working directory. Properties Drawing Gets or sets the last created drawing. DrawingDocument FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework XAML writer when an error occurred in using the custom writer. ImageFile Gets the output image file path if generated. WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom XAML writer. XamlFile Gets the output XAML file path if generated. ZamlFile Gets the output ZAML file path if generated. Methods Dispose(bool) This releases the unmanaged resources used by the SvgConverter and optionally releases the managed resources. Read(Stream) Reads in the specified SVG file stream and converts it to WPF drawing. Read(TextReader) Reads in the specified source from the SVG file reader and converts it to WPF drawing. Read(string) Reads in the specified SVG file and converts it to WPF drawing. Read(string, DirectoryInfo) Reads in the specified SVG file, converting it to WPF drawing and saving the results to the specified directory if successful. Read(Uri) Reads in the specified SVG file and converts it to WPF drawing. Read(XmlReader) Reads in the specified source SVG file reader and converts it to WPF drawing. Save(Stream) Save(TextWriter) Save(string, bool, bool) Saves the last converted file to the specified file name. SaveImage(string, DirectoryInfo, ImageEncoderType) SaveImage(string, FileInfo, ImageEncoderType)"
  },
  "api/SharpVectors.Converters.FontFamilyVisitor.-ctor.html": {
    "href": "api/SharpVectors.Converters.FontFamilyVisitor.-ctor.html",
    "title": "Constructor FontFamilyVisitor | SharpVectors Documentation",
    "keywords": "Constructor FontFamilyVisitor Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll FontFamilyVisitor() public FontFamilyVisitor()"
  },
  "api/SharpVectors.Converters.FontFamilyVisitor.Visit.html": {
    "href": "api/SharpVectors.Converters.FontFamilyVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Visit(string, WpfFontFamilyInfo, WpfDrawingContext) public override WpfFontFamilyInfo Visit(string fontName, WpfFontFamilyInfo familyInfo, WpfDrawingContext context) Parameters fontName string familyInfo WpfFontFamilyInfo context WpfDrawingContext Returns WpfFontFamilyInfo"
  },
  "api/SharpVectors.Converters.FontFamilyVisitor.html": {
    "href": "api/SharpVectors.Converters.FontFamilyVisitor.html",
    "title": "Class FontFamilyVisitor | SharpVectors Documentation",
    "keywords": "Class FontFamilyVisitor Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public sealed class FontFamilyVisitor : WpfFontFamilyVisitor, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfFontFamilyVisitor FontFamilyVisitor Implements IDisposable Inherited Members WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors FontFamilyVisitor() Methods Visit(string, WpfFontFamilyInfo, WpfDrawingContext)"
  },
  "api/SharpVectors.Converters.ImageEncoderType.html": {
    "href": "api/SharpVectors.Converters.ImageEncoderType.html",
    "title": "Enum ImageEncoderType | SharpVectors Documentation",
    "keywords": "Enum ImageEncoderType Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This specifies the encoder type used to encode a collection of bitmap frame objects to an image stream. This is used by the ImageSvgConverter converter. public enum ImageEncoderType Fields BmpBitmap = 0 Specifies an encoder that is used to encode bitmap (BMP) format images, that is BmpBitmapEncoder. GifBitmap = 1 Specifies an encoder that is used to encode Graphics Interchange Format (GIF) images, that is GifBitmapEncoder. JpegBitmap = 2 Specifies an encoder that is used to encode Joint Photographics Experts Group (JPEG) format images, that is JpegBitmapEncoder. PngBitmap = 3 Specifies an encoder that is used to encode Portable Network Graphics (PNG) format images, that is PngBitmapEncoder. TiffBitmap = 4 Specifies an encoder that is used to encode Tagged Image File Format (TIFF) images, that is TiffBitmapEncoder. WmpBitmap = 5 Specifies an encoder that is used to Microsoft Windows Media Photo (WDP) images, that is WmpBitmapEncoder. See Also ImageSvgConverter"
  },
  "api/SharpVectors.Converters.ImageSvgConverter.-ctor.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.-ctor.html",
    "title": "Constructor ImageSvgConverter | SharpVectors Documentation",
    "keywords": "Constructor ImageSvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ImageSvgConverter(WpfDrawingSettings) Initializes a new instance of the ImageSvgConverter class with the specified drawing or rendering settings. public ImageSvgConverter(WpfDrawingSettings settings) Parameters settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. ImageSvgConverter(bool, bool, WpfDrawingSettings) Initializes a new instance of the ImageSvgConverter class with the specified drawing or rendering settings and the saving options. public ImageSvgConverter(bool saveXaml, bool saveZaml, WpfDrawingSettings settings) Parameters saveXaml bool This specifies whether to save result object tree in image file. saveZaml bool This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed image format, similar to the SVGZ. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used."
  },
  "api/SharpVectors.Converters.ImageSvgConverter.Convert.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.Convert.html",
    "title": "Method Convert | SharpVectors Documentation",
    "keywords": "Method Convert Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Convert(string) This performs the conversion of the specified SVG file, and saves the output to an image file with the same file name. public bool Convert(string svgFileName) Parameters svgFileName string The full path of the SVG source file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the svgFileName is null. ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(string, string) This performs the conversion of the specified SVG file, and saves the output to the specified image file. public bool Convert(string svgFileName, string imageFileName) Parameters svgFileName string The full path of the SVG source file. imageFileName string The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the svgFileName is null. ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(Stream, string) This performs the conversion of the specified SVG source, and saves the output to the specified image file. public bool Convert(Stream svgStream, string imageFileName) Parameters svgStream Stream A stream providing access to the SVG source data. imageFileName string The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the imageFileName is null. -or- If the svgStream is null. ArgumentException If the imageFileName is empty. Convert(TextReader, string) This performs the conversion of the specified SVG source, and saves the output to the specified image file. public bool Convert(TextReader svgTextReader, string imageFileName) Parameters svgTextReader TextReader A text reader providing access to the SVG source data. imageFileName string The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the imageFileName is null. -or- If the svgTextReader is null. ArgumentException If the imageFileName is empty. Convert(XmlReader, string) This performs the conversion of the specified SVG source, and saves the output to the specified image file. public bool Convert(XmlReader svgXmlReader, string imageFileName) Parameters svgXmlReader XmlReader An XML reader providing access to the SVG source data. imageFileName string The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the imageFileName is null. -or- If the svgXmlReader is null. ArgumentException If the imageFileName is empty."
  },
  "api/SharpVectors.Converters.ImageSvgConverter.Drawing.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.Drawing.html",
    "title": "Property Drawing | SharpVectors Documentation",
    "keywords": "Property Drawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Drawing Gets the last created drawing. public DrawingGroup Drawing { get; } Property Value DrawingGroup A DrawingGroup specifying the last converted drawing."
  },
  "api/SharpVectors.Converters.ImageSvgConverter.Encoder.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.Encoder.html",
    "title": "Property Encoder | SharpVectors Documentation",
    "keywords": "Property Encoder Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Encoder Gets or sets a custom bitmap encoder to use in encoding the drawing to an image file. public BitmapEncoder Encoder { get; set; } Property Value BitmapEncoder A derived BitmapEncoder object specifying the bitmap encoder for encoding the images. The default is null, and the EncoderType property determines the encoder used. Remarks If the value of this is set, it must match the MIME type or file extension defined by the EncoderType property for it to be used."
  },
  "api/SharpVectors.Converters.ImageSvgConverter.EncoderType.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.EncoderType.html",
    "title": "Property EncoderType | SharpVectors Documentation",
    "keywords": "Property EncoderType Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EncoderType Gets or set the bitmap encoder type to use in encoding the drawing to an image file. public ImageEncoderType EncoderType { get; set; } Property Value ImageEncoderType An enumeration of the type ImageEncoderType specifying the bitmap encoder. The default is the PngBitmap."
  },
  "api/SharpVectors.Converters.ImageSvgConverter.FallbackOnWriterError.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.FallbackOnWriterError.html",
    "title": "Property FallbackOnWriterError | SharpVectors Documentation",
    "keywords": "Property FallbackOnWriterError Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework image writer when an error occurred in using the custom writer. public bool FallbackOnWriterError { get; set; } Property Value bool This is true if the converter falls back to using the system image writer when an error occurred in using the custom writer; otherwise, it is false. If false, an exception, which occurred in using the custom writer will be thrown. The default is false."
  },
  "api/SharpVectors.Converters.ImageSvgConverter.WriterErrorOccurred.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.WriterErrorOccurred.html",
    "title": "Property WriterErrorOccurred | SharpVectors Documentation",
    "keywords": "Property WriterErrorOccurred Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom image writer. public bool WriterErrorOccurred { get; } Property Value bool This is true if an error occurred when using the custom image writer; otherwise, it is false."
  },
  "api/SharpVectors.Converters.ImageSvgConverter.XamlFile.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.XamlFile.html",
    "title": "Property XamlFile | SharpVectors Documentation",
    "keywords": "Property XamlFile Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll XamlFile Gets the output XAML file path if generated. public string XamlFile { get; } Property Value string A string containing the full path to the XAML if generated; otherwise, it is null."
  },
  "api/SharpVectors.Converters.ImageSvgConverter.ZamlFile.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.ZamlFile.html",
    "title": "Property ZamlFile | SharpVectors Documentation",
    "keywords": "Property ZamlFile Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ZamlFile Gets the output ZAML file path if generated. public string ZamlFile { get; } Property Value string A string containing the full path to the ZAML if generated; otherwise, it is null."
  },
  "api/SharpVectors.Converters.ImageSvgConverter.html": {
    "href": "api/SharpVectors.Converters.ImageSvgConverter.html",
    "title": "Class ImageSvgConverter | SharpVectors Documentation",
    "keywords": "Class ImageSvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This converts the SVG file to static or bitmap image, which is saved to a file. public sealed class ImageSvgConverter : SvgConverter, IDisposable Inheritance object DispatcherObject DependencyObject SvgConverter ImageSvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Remarks The image is save with the Pbgra32 format, since that is the only pixel format which does not throw an exception with the RenderTargetBitmap. The DPI used is 96. Constructors ImageSvgConverter(WpfDrawingSettings) Initializes a new instance of the ImageSvgConverter class with the specified drawing or rendering settings. ImageSvgConverter(bool, bool, WpfDrawingSettings) Initializes a new instance of the ImageSvgConverter class with the specified drawing or rendering settings and the saving options. Properties Drawing Gets the last created drawing. Encoder Gets or sets a custom bitmap encoder to use in encoding the drawing to an image file. EncoderType Gets or set the bitmap encoder type to use in encoding the drawing to an image file. FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework image writer when an error occurred in using the custom writer. WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom image writer. XamlFile Gets the output XAML file path if generated. ZamlFile Gets the output ZAML file path if generated. Methods Convert(Stream, string) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Convert(TextReader, string) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Convert(string) This performs the conversion of the specified SVG file, and saves the output to an image file with the same file name. Convert(string, string) This performs the conversion of the specified SVG file, and saves the output to the specified image file. Convert(XmlReader, string) This performs the conversion of the specified SVG source, and saves the output to the specified image file."
  },
  "api/SharpVectors.Converters.LinkVisitor.-ctor.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.-ctor.html",
    "title": "Constructor LinkVisitor | SharpVectors Documentation",
    "keywords": "Constructor LinkVisitor Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll LinkVisitor() public LinkVisitor()"
  },
  "api/SharpVectors.Converters.LinkVisitor.AggregatedLayerName.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.AggregatedLayerName.html",
    "title": "Property AggregatedLayerName | SharpVectors Documentation",
    "keywords": "Property AggregatedLayerName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AggregatedLayerName public override string AggregatedLayerName { get; } Property Value string"
  },
  "api/SharpVectors.Converters.LinkVisitor.Aggregates.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.Aggregates.html",
    "title": "Property Aggregates | SharpVectors Documentation",
    "keywords": "Property Aggregates Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Aggregates public override bool Aggregates { get; } Property Value bool"
  },
  "api/SharpVectors.Converters.LinkVisitor.Exists.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.Exists.html",
    "title": "Method Exists | SharpVectors Documentation",
    "keywords": "Method Exists Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Exists(string) public override bool Exists(string linkId) Parameters linkId string Returns bool"
  },
  "api/SharpVectors.Converters.LinkVisitor.GetElementName.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.GetElementName.html",
    "title": "Method GetElementName | SharpVectors Documentation",
    "keywords": "Method GetElementName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetElementName(SvgElement) public static string GetElementName(SvgElement element) Parameters element SvgElement Returns string"
  },
  "api/SharpVectors.Converters.LinkVisitor.Initialize.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Initialize(DrawingGroup, WpfDrawingContext) public override void Initialize(DrawingGroup linkGroup, WpfDrawingContext context) Parameters linkGroup DrawingGroup context WpfDrawingContext"
  },
  "api/SharpVectors.Converters.LinkVisitor.IsAggregate.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.IsAggregate.html",
    "title": "Property IsAggregate | SharpVectors Documentation",
    "keywords": "Property IsAggregate Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IsAggregate public override bool IsAggregate { get; } Property Value bool"
  },
  "api/SharpVectors.Converters.LinkVisitor.Visit.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Visit(DrawingGroup, SvgAElement, WpfDrawingContext, float) public override void Visit(DrawingGroup group, SvgAElement element, WpfDrawingContext context, float opacity) Parameters group DrawingGroup element SvgAElement context WpfDrawingContext opacity float"
  },
  "api/SharpVectors.Converters.LinkVisitor.html": {
    "href": "api/SharpVectors.Converters.LinkVisitor.html",
    "title": "Class LinkVisitor | SharpVectors Documentation",
    "keywords": "Class LinkVisitor Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public sealed class LinkVisitor : WpfLinkVisitor, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfLinkVisitor LinkVisitor Implements IDisposable Inherited Members WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors LinkVisitor() Properties AggregatedLayerName Aggregates IsAggregate Methods Exists(string) GetElementName(SvgElement) Initialize(DrawingGroup, WpfDrawingContext) Visit(DrawingGroup, SvgAElement, WpfDrawingContext, float)"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.-ctor.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.-ctor.html",
    "title": "Constructor ResourceSvgConverter | SharpVectors Documentation",
    "keywords": "Constructor ResourceSvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ResourceSvgConverter(WpfDrawingSettings) Initializes a new instance of the ResourceSvgConverter class with the specified drawing or rendering settings. public ResourceSvgConverter(WpfDrawingSettings drawingSettings) Parameters drawingSettings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. ResourceSvgConverter(WpfResourceSettings) public ResourceSvgConverter(WpfResourceSettings resourceSettings) Parameters resourceSettings WpfResourceSettings ResourceSvgConverter(WpfDrawingSettings, WpfResourceSettings) public ResourceSvgConverter(WpfDrawingSettings drawingSettings, WpfResourceSettings resourceSettings) Parameters drawingSettings WpfDrawingSettings resourceSettings WpfResourceSettings"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.AddSource.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.AddSource.html",
    "title": "Method AddSource | SharpVectors Documentation",
    "keywords": "Method AddSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AddSource(string) public bool AddSource(string sourcePath) Parameters sourcePath string Returns bool"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ClearSources.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ClearSources.html",
    "title": "Method ClearSources | SharpVectors Documentation",
    "keywords": "Method ClearSources Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ClearSources() public void ClearSources()"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.Convert.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.Convert.html",
    "title": "Method Convert | SharpVectors Documentation",
    "keywords": "Method Convert Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Convert() public string Convert() Returns string Convert(string) public void Convert(string outputPath) Parameters outputPath string Convert(Stream) public void Convert(Stream outputStream) Parameters outputStream Stream Convert(TextWriter) public void Convert(TextWriter outputWriter) Parameters outputWriter TextWriter"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.IsResolverRegistered.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.IsResolverRegistered.html",
    "title": "Property IsResolverRegistered | SharpVectors Documentation",
    "keywords": "Property IsResolverRegistered Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IsResolverRegistered public bool IsResolverRegistered { get; } Property Value bool"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.RegisterResolver.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.RegisterResolver.html",
    "title": "Method RegisterResolver | SharpVectors Documentation",
    "keywords": "Method RegisterResolver Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll RegisterResolver(IResourceKeyResolver) public void RegisterResolver(IResourceKeyResolver keyResolver) Parameters keyResolver IResourceKeyResolver RegisterResolver(Func<IResourceKeyResolver>) public void RegisterResolver(Func<IResourceKeyResolver> keyResolver) Parameters keyResolver Func<IResourceKeyResolver>"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.RemoveSource.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.RemoveSource.html",
    "title": "Method RemoveSource | SharpVectors Documentation",
    "keywords": "Method RemoveSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll RemoveSource(string) public bool RemoveSource(string sourcePath) Parameters sourcePath string Returns bool"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.-ctor.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.-ctor.html",
    "title": "Constructor ResourceItem | SharpVectors Documentation",
    "keywords": "Constructor ResourceItem Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ResourceItem() public ResourceItem() ResourceItem(int, DrawingGroup, string) public ResourceItem(int index, DrawingGroup drawing, string fileName) Parameters index int drawing DrawingGroup fileName string"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.Drawing.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.Drawing.html",
    "title": "Property Drawing | SharpVectors Documentation",
    "keywords": "Property Drawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Drawing public DrawingGroup Drawing { get; } Property Value DrawingGroup"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.FileName.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.FileName.html",
    "title": "Property FileName | SharpVectors Documentation",
    "keywords": "Property FileName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll FileName public string FileName { get; } Property Value string"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.Image.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.Image.html",
    "title": "Property Image | SharpVectors Documentation",
    "keywords": "Property Image Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Image public DrawingImage Image { get; } Property Value DrawingImage"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.Index.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.Index.html",
    "title": "Property Index | SharpVectors Documentation",
    "keywords": "Property Index Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Index public int Index { get; } Property Value int"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.Name.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Name public string Name { get; } Property Value string"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.ResourceName.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.ResourceName.html",
    "title": "Property ResourceName | SharpVectors Documentation",
    "keywords": "Property ResourceName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ResourceName public string ResourceName { get; set; } Property Value string"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceItem.html",
    "title": "Class ResourceSvgConverter.ResourceItem | SharpVectors Documentation",
    "keywords": "Class ResourceSvgConverter.ResourceItem Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public sealed class ResourceSvgConverter.ResourceItem Inheritance object ResourceSvgConverter.ResourceItem Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors ResourceItem() ResourceItem(int, DrawingGroup, string) Properties Drawing FileName Image Index Name ResourceName"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.ResourceSettings.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.ResourceSettings.html",
    "title": "Property ResourceSettings | SharpVectors Documentation",
    "keywords": "Property ResourceSettings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ResourceSettings public WpfResourceSettings ResourceSettings { get; set; } Property Value WpfResourceSettings"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.RetrieveResolver.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.RetrieveResolver.html",
    "title": "Method RetrieveResolver | SharpVectors Documentation",
    "keywords": "Method RetrieveResolver Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll RetrieveResolver() public IResourceKeyResolver RetrieveResolver() Returns IResourceKeyResolver"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.SourceCount.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.SourceCount.html",
    "title": "Property SourceCount | SharpVectors Documentation",
    "keywords": "Property SourceCount Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SourceCount public int SourceCount { get; } Property Value int"
  },
  "api/SharpVectors.Converters.ResourceSvgConverter.html": {
    "href": "api/SharpVectors.Converters.ResourceSvgConverter.html",
    "title": "Class ResourceSvgConverter | SharpVectors Documentation",
    "keywords": "Class ResourceSvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public sealed class ResourceSvgConverter : SvgConverter, IDisposable Inheritance object DispatcherObject DependencyObject SvgConverter ResourceSvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors ResourceSvgConverter(WpfDrawingSettings) Initializes a new instance of the ResourceSvgConverter class with the specified drawing or rendering settings. ResourceSvgConverter(WpfDrawingSettings, WpfResourceSettings) ResourceSvgConverter(WpfResourceSettings) Properties IsResolverRegistered ResourceSettings SourceCount Methods AddSource(string) ClearSources() Convert() Convert(Stream) Convert(TextWriter) Convert(string) RegisterResolver(IResourceKeyResolver) RegisterResolver(Func<IResourceKeyResolver>) RemoveSource(string) RetrieveResolver()"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.-ctor.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.-ctor.html",
    "title": "Constructor ShapeSvgCanvas | SharpVectors Documentation",
    "keywords": "Constructor ShapeSvgCanvas Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ShapeSvgCanvas() public ShapeSvgCanvas()"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.Bounds.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.Bounds.html",
    "title": "Property Bounds | SharpVectors Documentation",
    "keywords": "Property Bounds Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Bounds Gets the bounding box of the svg document. public Rect Bounds { get; } Property Value Rect"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.Drawing.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.Drawing.html",
    "title": "Property Drawing | SharpVectors Documentation",
    "keywords": "Property Drawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Drawing public Canvas Drawing { get; } Property Value Canvas"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.ItemStyle.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.ItemStyle.html",
    "title": "Property ItemStyle | SharpVectors Documentation",
    "keywords": "Property ItemStyle Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ItemStyle Gets or sets an item style that will be applied to all svg elements. public Style ItemStyle { get; set; } Property Value Style Remarks This style will be used as a BasedOn style for all shapes created from svg elements."
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.ItemStyleProperty.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.ItemStyleProperty.html",
    "title": "Field ItemStyleProperty | SharpVectors Documentation",
    "keywords": "Field ItemStyleProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public static readonly DependencyProperty ItemStyleProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.MeasureOverride.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.MeasureOverride.html",
    "title": "Method MeasureOverride | SharpVectors Documentation",
    "keywords": "Method MeasureOverride Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MeasureOverride(Size) Measures the child elements of a Canvas in anticipation of arranging them during the ArrangeOverride(Size) pass. protected override Size MeasureOverride(Size constraint) Parameters constraint Size An upper limit Size that should not be exceeded. Returns Size A Size that represents the size that is required to arrange child content."
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.RenderDiagrams.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.RenderDiagrams.html",
    "title": "Method RenderDiagrams | SharpVectors Documentation",
    "keywords": "Method RenderDiagrams Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll RenderDiagrams(string) public bool RenderDiagrams(string sourceUri) Parameters sourceUri string Returns bool"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.Source.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.Source.html",
    "title": "Property Source | SharpVectors Documentation",
    "keywords": "Property Source Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Source Gets or sets svg document source. public string Source { get; set; } Property Value string"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.SourceProperty.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.SourceProperty.html",
    "title": "Field SourceProperty | SharpVectors Documentation",
    "keywords": "Field SourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public static readonly DependencyProperty SourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.UnloadDiagrams.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.UnloadDiagrams.html",
    "title": "Method UnloadDiagrams | SharpVectors Documentation",
    "keywords": "Method UnloadDiagrams Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll UnloadDiagrams() Unloads loaded svg. public void UnloadDiagrams()"
  },
  "api/SharpVectors.Converters.ShapeSvgCanvas.html": {
    "href": "api/SharpVectors.Converters.ShapeSvgCanvas.html",
    "title": "Class ShapeSvgCanvas | SharpVectors Documentation",
    "keywords": "Class ShapeSvgCanvas Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Component that visualizes svg document contents. public class ShapeSvgCanvas : Canvas, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Panel Canvas ShapeSvgCanvas Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild Inherited Members Canvas.LeftProperty Canvas.TopProperty Canvas.RightProperty Canvas.BottomProperty Canvas.GetLeft(UIElement) Canvas.SetLeft(UIElement, double) Canvas.GetTop(UIElement) Canvas.SetTop(UIElement, double) Canvas.GetRight(UIElement) Canvas.SetRight(UIElement, double) Canvas.GetBottom(UIElement) Canvas.SetBottom(UIElement, double) Canvas.ArrangeOverride(Size) Canvas.GetLayoutClip(Size) Panel.BackgroundProperty Panel.IsItemsHostProperty Panel.ZIndexProperty Panel.OnRender(DrawingContext) Panel.OnIsItemsHostChanged(bool, bool) Panel.GetVisualChild(int) Panel.CreateUIElementCollection(FrameworkElement) Panel.OnVisualChildrenChanged(DependencyObject, DependencyObject) Panel.SetZIndex(UIElement, int) Panel.GetZIndex(UIElement) Panel.Background Panel.LogicalChildren Panel.Children Panel.IsItemsHost Panel.LogicalOrientation Panel.HasLogicalOrientation Panel.InternalChildren Panel.VisualChildrenCount FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors ShapeSvgCanvas() Fields ItemStyleProperty SourceProperty Properties Bounds Gets the bounding box of the svg document. Drawing ItemStyle Gets or sets an item style that will be applied to all svg elements. Source Gets or sets svg document source. Methods MeasureOverride(Size) Measures the child elements of a Canvas in anticipation of arranging them during the ArrangeOverride(Size) pass. RenderDiagrams(string) UnloadDiagrams() Unloads loaded svg."
  },
  "api/SharpVectors.Converters.StreamSvgConverter.-ctor.html": {
    "href": "api/SharpVectors.Converters.StreamSvgConverter.-ctor.html",
    "title": "Constructor StreamSvgConverter | SharpVectors Documentation",
    "keywords": "Constructor StreamSvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll StreamSvgConverter(WpfDrawingSettings) Initializes a new instance of the StreamSvgConverter class with the specified drawing or rendering settings. public StreamSvgConverter(WpfDrawingSettings settings) Parameters settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. StreamSvgConverter(bool, bool, WpfDrawingSettings) Initializes a new instance of the StreamSvgConverter class with the specified drawing or rendering settings and the saving options. public StreamSvgConverter(bool saveXaml, bool saveZaml, WpfDrawingSettings settings) Parameters saveXaml bool This specifies whether to save result object tree in image file. saveZaml bool This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed image format, similar to the SVGZ. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used."
  },
  "api/SharpVectors.Converters.StreamSvgConverter.Convert.html": {
    "href": "api/SharpVectors.Converters.StreamSvgConverter.Convert.html",
    "title": "Method Convert | SharpVectors Documentation",
    "keywords": "Method Convert Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Convert(string, Stream) This performs the conversion of the specified SVG file, and saves the output to the specified image file. public bool Convert(string svgFileName, Stream imageStream) Parameters svgFileName string The full path of the SVG source file. imageStream Stream The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the svgFileName is null. ArgumentException If the svgFileName is empty. -or- If the svgFileName does not exists. Convert(Stream, Stream) This performs the conversion of the specified SVG source, and saves the output to the specified image file. public bool Convert(Stream svgStream, Stream imageStream) Parameters svgStream Stream A stream providing access to the SVG source data. imageStream Stream The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the imageStream is null. -or- If the svgStream is null. ArgumentException If the imageStream is empty. Convert(TextReader, Stream) This performs the conversion of the specified SVG source, and saves the output to the specified image file. public bool Convert(TextReader svgTextReader, Stream imageStream) Parameters svgTextReader TextReader A text reader providing access to the SVG source data. imageStream Stream The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the imageStream is null. -or- If the svgTextReader is null. ArgumentException If the imageStream is empty. Convert(XmlReader, Stream) This performs the conversion of the specified SVG source, and saves the output to the specified image file. public bool Convert(XmlReader svgXmlReader, Stream imageStream) Parameters svgXmlReader XmlReader An XML reader providing access to the SVG source data. imageStream Stream The output image file. This is optional. If not specified, an image file is created in the same directory as the SVG file. Returns bool This returns true if the conversion is successful; otherwise, it return false. Exceptions ArgumentNullException If the imageStream is null. -or- If the svgXmlReader is null. ArgumentException If the imageStream is empty."
  },
  "api/SharpVectors.Converters.StreamSvgConverter.Drawing.html": {
    "href": "api/SharpVectors.Converters.StreamSvgConverter.Drawing.html",
    "title": "Property Drawing | SharpVectors Documentation",
    "keywords": "Property Drawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Drawing Gets the last created drawing. public DrawingGroup Drawing { get; } Property Value DrawingGroup A DrawingGroup specifying the last converted drawing."
  },
  "api/SharpVectors.Converters.StreamSvgConverter.Encoder.html": {
    "href": "api/SharpVectors.Converters.StreamSvgConverter.Encoder.html",
    "title": "Property Encoder | SharpVectors Documentation",
    "keywords": "Property Encoder Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Encoder Gets or sets a custom bitmap encoder to use in encoding the drawing to an image file. public BitmapEncoder Encoder { get; set; } Property Value BitmapEncoder A derived BitmapEncoder object specifying the bitmap encoder for encoding the images. The default is null, and the EncoderType property determines the encoder used. Remarks If the value of this is set, it must match the MIME type or file extension defined by the EncoderType property for it to be used."
  },
  "api/SharpVectors.Converters.StreamSvgConverter.EncoderType.html": {
    "href": "api/SharpVectors.Converters.StreamSvgConverter.EncoderType.html",
    "title": "Property EncoderType | SharpVectors Documentation",
    "keywords": "Property EncoderType Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EncoderType Gets or set the bitmap encoder type to use in encoding the drawing to an image file. public ImageEncoderType EncoderType { get; set; } Property Value ImageEncoderType An enumeration of the type ImageEncoderType specifying the bitmap encoder. The default is the PngBitmap."
  },
  "api/SharpVectors.Converters.StreamSvgConverter.FallbackOnWriterError.html": {
    "href": "api/SharpVectors.Converters.StreamSvgConverter.FallbackOnWriterError.html",
    "title": "Property FallbackOnWriterError | SharpVectors Documentation",
    "keywords": "Property FallbackOnWriterError Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework image writer when an error occurred in using the custom writer. public bool FallbackOnWriterError { get; set; } Property Value bool This is true if the converter falls back to using the system image writer when an error occurred in using the custom writer; otherwise, it is false. If false, an exception, which occurred in using the custom writer will be thrown. The default is false."
  },
  "api/SharpVectors.Converters.StreamSvgConverter.WriterErrorOccurred.html": {
    "href": "api/SharpVectors.Converters.StreamSvgConverter.WriterErrorOccurred.html",
    "title": "Property WriterErrorOccurred | SharpVectors Documentation",
    "keywords": "Property WriterErrorOccurred Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom image writer. public bool WriterErrorOccurred { get; } Property Value bool This is true if an error occurred when using the custom image writer; otherwise, it is false."
  },
  "api/SharpVectors.Converters.StreamSvgConverter.html": {
    "href": "api/SharpVectors.Converters.StreamSvgConverter.html",
    "title": "Class StreamSvgConverter | SharpVectors Documentation",
    "keywords": "Class StreamSvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This converts the SVG file to static or bitmap image, which is saved to a file. public sealed class StreamSvgConverter : SvgConverter, IDisposable Inheritance object DispatcherObject DependencyObject SvgConverter StreamSvgConverter Implements IDisposable Inherited Members SvgConverter.SvgExt SvgConverter.CompressedSvgExt SvgConverter.XamlExt SvgConverter.CompressedXamlExt SvgConverter.BackupExt SvgConverter.SaveXaml SvgConverter.SaveZaml SvgConverter.UseFrameXamlWriter SvgConverter.Background SvgConverter.DrawingSettings SvgConverter.SvgWindow SvgConverter.SvgDocument SvgConverter.DpiX SvgConverter.DpiY SvgConverter.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Remarks The image is save with the Pbgra32 format, since that is the only pixel format which does not throw an exception with the RenderTargetBitmap. The DPI used is 96. Constructors StreamSvgConverter(WpfDrawingSettings) Initializes a new instance of the StreamSvgConverter class with the specified drawing or rendering settings. StreamSvgConverter(bool, bool, WpfDrawingSettings) Initializes a new instance of the StreamSvgConverter class with the specified drawing or rendering settings and the saving options. Properties Drawing Gets the last created drawing. Encoder Gets or sets a custom bitmap encoder to use in encoding the drawing to an image file. EncoderType Gets or set the bitmap encoder type to use in encoding the drawing to an image file. FallbackOnWriterError Gets or sets a value indicating whether to fall back and use the .NET Framework image writer when an error occurred in using the custom writer. WriterErrorOccurred Gets a value indicating whether a writer error occurred when using the custom image writer. Methods Convert(Stream, Stream) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Convert(TextReader, Stream) This performs the conversion of the specified SVG source, and saves the output to the specified image file. Convert(string, Stream) This performs the conversion of the specified SVG file, and saves the output to the specified image file. Convert(XmlReader, Stream) This performs the conversion of the specified SVG source, and saves the output to the specified image file."
  },
  "api/SharpVectors.Converters.SvgBitmap.-ctor.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.-ctor.html",
    "title": "Constructor SvgBitmap | SharpVectors Documentation",
    "keywords": "Constructor SvgBitmap Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgBitmap() Initializes a new instance of the SvgBitmap class. public SvgBitmap()"
  },
  "api/SharpVectors.Converters.SvgBitmap.AppName.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.AppName.html",
    "title": "Property AppName | SharpVectors Documentation",
    "keywords": "Property AppName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AppName Gets or sets the name of the parent assembly for this element. [Bindable(true)] public string AppName { get; set; } Property Value string A string containing the name of the parent assembly or the name of the assembly containing SVG file referenced on this control in XAML, if the source type is Uri."
  },
  "api/SharpVectors.Converters.SvgBitmap.AppNameProperty.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.AppNameProperty.html",
    "title": "Field AppNameProperty | SharpVectors Documentation",
    "keywords": "Field AppNameProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the AppName property. public static readonly DependencyProperty AppNameProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgBitmap.CreateDrawing.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.CreateDrawing.html",
    "title": "Method CreateDrawing | SharpVectors Documentation",
    "keywords": "Method CreateDrawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup. protected virtual DrawingGroup CreateDrawing() Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(Uri svgSource, WpfDrawingSettings settings) Parameters svgSource Uri A Uri defining the path to the SVG source. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(string, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(string svgSource, WpfDrawingSettings settings) Parameters svgSource string A stream providing access to the SVG source data. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null."
  },
  "api/SharpVectors.Converters.SvgBitmap.GetDrawingSettings.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.GetDrawingSettings.html",
    "title": "Method GetDrawingSettings | SharpVectors Documentation",
    "keywords": "Method GetDrawingSettings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetDrawingSettings() protected virtual WpfDrawingSettings GetDrawingSettings() Returns WpfDrawingSettings"
  },
  "api/SharpVectors.Converters.SvgBitmap.OnInitialized.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.OnInitialized.html",
    "title": "Method OnInitialized | SharpVectors Documentation",
    "keywords": "Method OnInitialized Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. protected override void OnInitialized(EventArgs e) Parameters e EventArgs Event data for the event."
  },
  "api/SharpVectors.Converters.SvgBitmap.OnLoadDrawing.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.OnLoadDrawing.html",
    "title": "Method OnLoadDrawing | SharpVectors Documentation",
    "keywords": "Method OnLoadDrawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnLoadDrawing(DrawingGroup) protected virtual void OnLoadDrawing(DrawingGroup drawing) Parameters drawing DrawingGroup"
  },
  "api/SharpVectors.Converters.SvgBitmap.OnSettingsChanged.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.OnSettingsChanged.html",
    "title": "Method OnSettingsChanged | SharpVectors Documentation",
    "keywords": "Method OnSettingsChanged Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnSettingsChanged() This handles changes in the rendering settings of this control. protected virtual void OnSettingsChanged()"
  },
  "api/SharpVectors.Converters.SvgBitmap.OnUnloadDiagram.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.OnUnloadDiagram.html",
    "title": "Method OnUnloadDiagram | SharpVectors Documentation",
    "keywords": "Method OnUnloadDiagram Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnUnloadDiagram() protected virtual void OnUnloadDiagram()"
  },
  "api/SharpVectors.Converters.SvgBitmap.SvgSource.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.SvgSource.html",
    "title": "Property SvgSource | SharpVectors Documentation",
    "keywords": "Property SvgSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgSource Gets or sets the SVG contents to load into this SvgBitmap. public string SvgSource { get; set; } Property Value string A string specifying the embedded SVG contents. Settings this to null will close any opened diagram. See Also UriSource"
  },
  "api/SharpVectors.Converters.SvgBitmap.SvgSourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.SvgSourceProperty.html",
    "title": "Field SvgSourceProperty | SharpVectors Documentation",
    "keywords": "Field SvgSourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the SvgSource dependency property. public static readonly DependencyProperty SvgSourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgBitmap.UriSource.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.UriSource.html",
    "title": "Property UriSource | SharpVectors Documentation",
    "keywords": "Property UriSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll UriSource Gets or sets the path to the SVG file to load into this SvgBitmap. public Uri UriSource { get; set; } Property Value Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any opened diagram. See Also SvgSource"
  },
  "api/SharpVectors.Converters.SvgBitmap.UriSourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.UriSourceProperty.html",
    "title": "Field UriSourceProperty | SharpVectors Documentation",
    "keywords": "Field UriSourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the UriSource dependency property. public static readonly DependencyProperty UriSourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgBitmap.html": {
    "href": "api/SharpVectors.Converters.SvgBitmap.html",
    "title": "Class SvgBitmap | SharpVectors Documentation",
    "keywords": "Class SvgBitmap Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This is an extension of the WPF Image control to provide SVG-based image sources. public class SvgBitmap : Image, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IUriContext Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Image SvgBitmap Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IUriContext Derived SvgIcon Inherited Members Image.SourceProperty Image.StretchProperty Image.StretchDirectionProperty Image.ImageFailedEvent Image.OnCreateAutomationPeer() Image.MeasureOverride(Size) Image.ArrangeOverride(Size) Image.OnRender(DrawingContext) Image.Source Image.Stretch Image.StretchDirection Image.BaseUri Image.ImageFailed FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetVisualChild(int) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.LogicalChildren FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors SvgBitmap() Initializes a new instance of the SvgBitmap class. Fields AppNameProperty The DependencyProperty for the AppName property. SvgSourceProperty Identifies the SvgSource dependency property. UriSourceProperty Identifies the UriSource dependency property. Properties AppName Gets or sets the name of the parent assembly for this element. SvgSource Gets or sets the SVG contents to load into this SvgBitmap. UriSource Gets or sets the path to the SVG file to load into this SvgBitmap. Methods CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup. CreateDrawing(string, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup. GetDrawingSettings() OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. OnLoadDrawing(DrawingGroup) OnSettingsChanged() This handles changes in the rendering settings of this control. OnUnloadDiagram() See Also SvgIcon"
  },
  "api/SharpVectors.Converters.SvgCanvas.-ctor.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.-ctor.html",
    "title": "Constructor SvgCanvas | SharpVectors Documentation",
    "keywords": "Constructor SvgCanvas Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgCanvas() Initializes a new instance of the SvgCanvas class. public SvgCanvas()"
  },
  "api/SharpVectors.Converters.SvgCanvas.AppName.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.AppName.html",
    "title": "Property AppName | SharpVectors Documentation",
    "keywords": "Property AppName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AppName Gets or sets the name of the parent assembly for this element. [Bindable(true)] public string AppName { get; set; } Property Value string A string containing the name of the parent assembly or the name of the assembly containing SVG file referenced on this control in XAML, if the source type is Uri."
  },
  "api/SharpVectors.Converters.SvgCanvas.AppNameProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.AppNameProperty.html",
    "title": "Field AppNameProperty | SharpVectors Documentation",
    "keywords": "Field AppNameProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the AppName property. public static readonly DependencyProperty AppNameProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.AutoSize.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.AutoSize.html",
    "title": "Property AutoSize | SharpVectors Documentation",
    "keywords": "Property AutoSize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AutoSize Gets or sets a value indicating whether to automatically resize this Canvas based on the size of the loaded drawing. public bool AutoSize { get; set; } Property Value bool This is true if this Canvas is automatically resized based on the size of the loaded drawing; otherwise, it is false. The default is false, and the user-defined size or the parent assigned layout size is used."
  },
  "api/SharpVectors.Converters.SvgCanvas.BaseUri.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.BaseUri.html",
    "title": "Property BaseUri | SharpVectors Documentation",
    "keywords": "Property BaseUri Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll BaseUri Gets or sets the base URI of the current application context. public Uri BaseUri { get; set; } Property Value Uri The base URI of the application context."
  },
  "api/SharpVectors.Converters.SvgCanvas.CreateDrawing.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.CreateDrawing.html",
    "title": "Method CreateDrawing | SharpVectors Documentation",
    "keywords": "Method CreateDrawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup. protected virtual DrawingGroup CreateDrawing() Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(Uri svgSource, WpfDrawingSettings settings) Parameters svgSource Uri A Uri defining the path to the SVG source. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(Stream, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(Stream svgStream, WpfDrawingSettings settings) Parameters svgStream Stream A stream providing access to the SVG source data. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(string, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(string svgSource, WpfDrawingSettings settings) Parameters svgSource string A stream providing access to the SVG source data. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null."
  },
  "api/SharpVectors.Converters.SvgCanvas.CultureInfo.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.CultureInfo.html",
    "title": "Property CultureInfo | SharpVectors Documentation",
    "keywords": "Property CultureInfo Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll CultureInfo Gets or sets the main culture information used for rendering texts. public CultureInfo CultureInfo { get; set; } Property Value CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts."
  },
  "api/SharpVectors.Converters.SvgCanvas.Drawings.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.Drawings.html",
    "title": "Property Drawings | SharpVectors Documentation",
    "keywords": "Property Drawings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Drawings Gets the drawing from the SVG file conversion. public DrawingGroup Drawings { get; } Property Value DrawingGroup An instance of the DrawingGroup specifying the converted drawings which is rendered in this canvas."
  },
  "api/SharpVectors.Converters.SvgCanvas.EnsureViewboxPosition.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.EnsureViewboxPosition.html",
    "title": "Property EnsureViewboxPosition | SharpVectors Documentation",
    "keywords": "Property EnsureViewboxPosition Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. public bool EnsureViewboxPosition { get; set; } Property Value bool This determines whether a transformation is applied to the rendered drawing. For drawings where the top-left position of the viewbox is off the screen, due to negative values, this will ensure the drawing is visible. The default value is true. Set this value to false if you wish to apply your own transformations to the drawings."
  },
  "api/SharpVectors.Converters.SvgCanvas.EnsureViewboxSize.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.EnsureViewboxSize.html",
    "title": "Property EnsureViewboxSize | SharpVectors Documentation",
    "keywords": "Property EnsureViewboxSize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. public bool EnsureViewboxSize { get; set; } Property Value bool For image outputs, this will force the original size to be saved. The default value is false. However, the ImageSvgConverter converted sets this to true by default. Remarks Setting this to true will cause the rendering process to draw a transparent box around the output, if a viewbox is defined. This will ensure that the original image size is saved."
  },
  "api/SharpVectors.Converters.SvgCanvas.GetDrawingSettings.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.GetDrawingSettings.html",
    "title": "Method GetDrawingSettings | SharpVectors Documentation",
    "keywords": "Method GetDrawingSettings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetDrawingSettings() Gets the rendering settings or options to be used in rendering the SVG in this control. protected virtual WpfDrawingSettings GetDrawingSettings() Returns WpfDrawingSettings An instance of WpfDrawingSettings specifying the rendering options or settings."
  },
  "api/SharpVectors.Converters.SvgCanvas.IgnoreRootViewbox.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.IgnoreRootViewbox.html",
    "title": "Property IgnoreRootViewbox | SharpVectors Documentation",
    "keywords": "Property IgnoreRootViewbox Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. public bool IgnoreRootViewbox { get; set; } Property Value bool For image outputs, this will force the original size to be saved. The default value is false. Remarks There are reported cases where are diagrams displayed in Inkscape program, but will not show when converted. These are diagrams on the drawing canvas of Inkspace but outside the svg viewbox. When converted the drawings are also converted but not displayed due to clipping. Setting this property to true will clear the clipping region on conversion."
  },
  "api/SharpVectors.Converters.SvgCanvas.IncludeRuntime.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.IncludeRuntime.html",
    "title": "Property IncludeRuntime | SharpVectors Documentation",
    "keywords": "Property IncludeRuntime Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. public bool IncludeRuntime { get; set; } Property Value bool This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false. The default is true. Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc."
  },
  "api/SharpVectors.Converters.SvgCanvas.Load.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.Load.html",
    "title": "Method Load | SharpVectors Documentation",
    "keywords": "Method Load Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Load(Uri, bool) This sets the source SVG for a SvgCanvas by using the supplied Uniform Resource Identifier (URI) and optionally processing the result asynchronously. public bool Load(Uri uriSource, bool useAsync = false) Parameters uriSource Uri A reference to the SVG source file. useAsync bool A value indicating whether to process the result asynchronously. The default value is false, the SVG conversion is processed synchronously. Returns bool A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Load(string, bool) This sets the source SVG for a SvgCanvas by accessing text content and optionally processing the result asynchronously. public bool Load(string svgSource, bool useAsync = false) Parameters svgSource string The stream source that sets the SVG source value. useAsync bool A value indicating whether to process the result asynchronously. The default value is false, the SVG conversion is processed synchronously. Returns bool A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Load(Stream, bool, bool) This sets the source SVG for a SvgCanvas by accessing a stream and optionally processing the result asynchronously. public bool Load(Stream streamSource, bool useCopyStream = true, bool useAsync = false) Parameters streamSource Stream The stream source that sets the SVG source value. useCopyStream bool A value specifying whether to use a copy of the stream. The default is true, the SVG source stream is copied, rendered and stored. useAsync bool A value indicating whether to process the result asynchronously. The default value is false, the SVG conversion is processed synchronously. Returns bool A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy."
  },
  "api/SharpVectors.Converters.SvgCanvas.LoadAsync.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.LoadAsync.html",
    "title": "Method LoadAsync | SharpVectors Documentation",
    "keywords": "Method LoadAsync Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll LoadAsync(Uri) This sets the source SVG for a SvgCanvas by using the supplied Uniform Resource Identifier (URI) and processing the result asynchronously. public Task<bool> LoadAsync(Uri uriSource) Parameters uriSource Uri A reference to the SVG source file. Returns Task<bool> A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. LoadAsync(string) This sets the source SVG for a SvgCanvas by accessing text contents and processing the result asynchronously. public Task<bool> LoadAsync(string svgSource) Parameters svgSource string The stream source that sets the SVG source value. Returns Task<bool> A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. LoadAsync(Stream, bool) This sets the source SVG for a SvgCanvas by accessing a stream and processing the result asynchronously. public Task<bool> LoadAsync(Stream streamSource, bool useCopyStream = true) Parameters streamSource Stream The stream source that sets the SVG source value. useCopyStream bool A value specifying whether to use a copy of the stream. The default is true, the SVG source stream is copied, rendered and stored. Returns Task<bool> A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy."
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageBackground.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageBackground.html",
    "title": "Property MessageBackground | SharpVectors Documentation",
    "keywords": "Property MessageBackground Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageBackground Gets or sets a brush that describes the background of a message text. public Brush MessageBackground { get; set; } Property Value Brush A Brush specifying the brush that is used to fill the background of the message text. The default is PapayaWhip. If set to null, the background will not be drawn."
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageBackgroundProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageBackgroundProperty.html",
    "title": "Field MessageBackgroundProperty | SharpVectors Documentation",
    "keywords": "Field MessageBackgroundProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageBackground property. Flags: Can be used in style rules Default Value: PapayaWhip public static readonly DependencyProperty MessageBackgroundProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageFillBrush.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageFillBrush.html",
    "title": "Property MessageFillBrush | SharpVectors Documentation",
    "keywords": "Property MessageFillBrush Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageFillBrush Gets or sets the brush with which to fill the message text. This is optional, and can be null. If the brush is null, no fill is drawn. public Brush MessageFillBrush { get; set; } Property Value Brush A Brush specifying the fill of the message text. The default is Gold. Remarks If both the fill and stroke brushes of the message text are null, no text is drawn."
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageFillBrushProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageFillBrushProperty.html",
    "title": "Field MessageFillBrushProperty | SharpVectors Documentation",
    "keywords": "Field MessageFillBrushProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageFillBrush property. Flags: Can be used in style rules Default Value: Gold public static readonly DependencyProperty MessageFillBrushProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageFontFamily.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageFontFamily.html",
    "title": "Property MessageFontFamily | SharpVectors Documentation",
    "keywords": "Property MessageFontFamily Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageFontFamily Gets or sets the font family of the desired font for the message text. public FontFamily MessageFontFamily { get; set; } Property Value FontFamily A FontFamily specifying the font for the message text. The default value is MessageFontFamily."
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageFontFamilyProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageFontFamilyProperty.html",
    "title": "Field MessageFontFamilyProperty | SharpVectors Documentation",
    "keywords": "Field MessageFontFamilyProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageFontFamily property. Flags: Can be used in style rules Default Value: System Dialog Font public static readonly DependencyProperty MessageFontFamilyProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageFontSize.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageFontSize.html",
    "title": "Property MessageFontSize | SharpVectors Documentation",
    "keywords": "Property MessageFontSize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageFontSize Gets or sets the size of the desired font for the message text. public double MessageFontSize { get; set; } Property Value double A value specifying the font size of the message text. The default is 48 pixels. The font size must be a positive number."
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageFontSizeProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageFontSizeProperty.html",
    "title": "Field MessageFontSizeProperty | SharpVectors Documentation",
    "keywords": "Field MessageFontSizeProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageFontSize property. Flags: Can be used in style rules Default Value: 48 pixels public static readonly DependencyProperty MessageFontSizeProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageOpacity.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageOpacity.html",
    "title": "Property MessageOpacity | SharpVectors Documentation",
    "keywords": "Property MessageOpacity Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageOpacity Gets or sets the opacity factor applied to the entire message text when it is rendered in the user interface (UI). public double MessageOpacity { get; set; } Property Value double The opacity factor. Default opacity is 1.0. Expected values are between 0.0 and 1.0."
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageOpacityProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageOpacityProperty.html",
    "title": "Field MessageOpacityProperty | SharpVectors Documentation",
    "keywords": "Field MessageOpacityProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageOpacity property. Flags: Can be used in style rules Default Value: 1 (full opacity) public static readonly DependencyProperty MessageOpacityProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageStrokeBrush.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageStrokeBrush.html",
    "title": "Property MessageStrokeBrush | SharpVectors Documentation",
    "keywords": "Property MessageStrokeBrush Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageStrokeBrush Gets or sets the brush of the Pen with which to stroke the message text. This is optional, and can be null. If the brush is null, no stroke is drawn. public Brush MessageStrokeBrush { get; set; } Property Value Brush A Brush specifying the brush of the Pen for stroking the message text. The default is Maroon. Remarks If both the fill and stroke brushes of the message text are null, no text is drawn."
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageStrokeBrushProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageStrokeBrushProperty.html",
    "title": "Field MessageStrokeBrushProperty | SharpVectors Documentation",
    "keywords": "Field MessageStrokeBrushProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageStrokeBrush property. Flags: Can be used in style rules Default Value: Maroon public static readonly DependencyProperty MessageStrokeBrushProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageText.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageText.html",
    "title": "Property MessageText | SharpVectors Documentation",
    "keywords": "Property MessageText Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageText Gets or sets the content of the message. public string MessageText { get; set; } Property Value string A string specifying the content of the message text. The default is \"Loading...\". This value can be overriden in the Unload(bool, string) method."
  },
  "api/SharpVectors.Converters.SvgCanvas.MessageTextProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.MessageTextProperty.html",
    "title": "Field MessageTextProperty | SharpVectors Documentation",
    "keywords": "Field MessageTextProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageText property. Flags: Can be used in style rules Default Value: \"Loading...\" public static readonly DependencyProperty MessageTextProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.OnAutoSizeChanged.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.OnAutoSizeChanged.html",
    "title": "Method OnAutoSizeChanged | SharpVectors Documentation",
    "keywords": "Method OnAutoSizeChanged Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnAutoSizeChanged() This handles changes in the automatic resizing property of this control. protected virtual void OnAutoSizeChanged()"
  },
  "api/SharpVectors.Converters.SvgCanvas.OnInitialized.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.OnInitialized.html",
    "title": "Method OnInitialized | SharpVectors Documentation",
    "keywords": "Method OnInitialized Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. protected override void OnInitialized(EventArgs e) Parameters e EventArgs Event data for the event."
  },
  "api/SharpVectors.Converters.SvgCanvas.OnSettingsChanged.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.OnSettingsChanged.html",
    "title": "Method OnSettingsChanged | SharpVectors Documentation",
    "keywords": "Method OnSettingsChanged Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnSettingsChanged() This handles changes in the rendering settings of this control. protected virtual void OnSettingsChanged()"
  },
  "api/SharpVectors.Converters.SvgCanvas.OptimizePath.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.OptimizePath.html",
    "title": "Property OptimizePath | SharpVectors Documentation",
    "keywords": "Property OptimizePath Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. public bool OptimizePath { get; set; } Property Value bool This is true if the path geometry is optimized using the StreamGeometry; otherwise, it is false. The default is true."
  },
  "api/SharpVectors.Converters.SvgCanvas.Source.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.Source.html",
    "title": "Property Source | SharpVectors Documentation",
    "keywords": "Property Source Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Source Gets or sets the path to the SVG file to load into this Canvas. public Uri Source { get; set; } Property Value Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any rendered SVG diagram. See Also UriSource StreamSource"
  },
  "api/SharpVectors.Converters.SvgCanvas.SourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.SourceProperty.html",
    "title": "Field SourceProperty | SharpVectors Documentation",
    "keywords": "Field SourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the Source dependency property. public static readonly DependencyProperty SourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.StreamSource.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.StreamSource.html",
    "title": "Property StreamSource | SharpVectors Documentation",
    "keywords": "Property StreamSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll StreamSource Gets or sets the Stream to the SVG source to load into this Canvas. public Stream StreamSource { get; set; } Property Value Stream A Stream specifying the stream to the SVG source. Settings this to null will close any opened diagram. Remarks The stream source has precedence over the Uri Source property. If set (not null), the stream source will be rendered instead of the Uri source. WPF controls do not implement the IDisposable interface and cannot properly dispose any stream set to it. To avoid this issue and also any problem of the user accidentally closing the stream, this control makes a copy of the stream to memory stream. See Also Source UriSource SvgSource"
  },
  "api/SharpVectors.Converters.SvgCanvas.StreamSourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.StreamSourceProperty.html",
    "title": "Field StreamSourceProperty | SharpVectors Documentation",
    "keywords": "Field StreamSourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the StreamSource dependency property. public static readonly DependencyProperty StreamSourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.SvgSource.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.SvgSource.html",
    "title": "Property SvgSource | SharpVectors Documentation",
    "keywords": "Property SvgSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgSource Gets or sets the SVG contents to load into this Canvas. public string SvgSource { get; set; } Property Value string A string specifying the embedded SVG contents. Settings this to null will close any opened diagram. See Also Source UriSource StreamSource"
  },
  "api/SharpVectors.Converters.SvgCanvas.SvgSourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.SvgSourceProperty.html",
    "title": "Field SvgSourceProperty | SharpVectors Documentation",
    "keywords": "Field SvgSourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the SvgSource dependency property. public static readonly DependencyProperty SvgSourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.TextAsGeometry.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.TextAsGeometry.html",
    "title": "Property TextAsGeometry | SharpVectors Documentation",
    "keywords": "Property TextAsGeometry Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. public bool TextAsGeometry { get; set; } Property Value bool This is true if texts are rendered as path geometries; otherwise, this is false. The default is true. Remarks The text features of the SVG format are complex and difficult to fully support without directly reverting the text paths (or glyph geometry). This options will, therefore, be removed in future versions of the library, as it is not always honored when set to false."
  },
  "api/SharpVectors.Converters.SvgCanvas.Unload.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.Unload.html",
    "title": "Method Unload | SharpVectors Documentation",
    "keywords": "Method Unload Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Unload(bool, string) This clears the SvgCanvas of any drawn diagram and optionally displays a message. public void Unload(bool displayMessage = false, string message = \"\") Parameters displayMessage bool A value indicating whether to display a message after clearing the SVG rendered diagram. The value is false, not message is displayed. message string This specifies the message to be displayed after clearing the diagram. Setting this parameter to a non-empty text will override any message set in the MessageText. The default value is Empty."
  },
  "api/SharpVectors.Converters.SvgCanvas.UriSource.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.UriSource.html",
    "title": "Property UriSource | SharpVectors Documentation",
    "keywords": "Property UriSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll UriSource Gets or sets the path to the SVG file to load into this Canvas. public Uri UriSource { get; set; } Property Value Uri A Uri specifying the path to the SVG source file. The SVG file can be located on a computer, network or assembly resources. Settings this to null will close any rendered SVG diagram. Remarks This is the same as the Source property, it is added for consistency in naming the SVG sources. See Also Source SvgSource StreamSource"
  },
  "api/SharpVectors.Converters.SvgCanvas.UriSourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.UriSourceProperty.html",
    "title": "Field UriSourceProperty | SharpVectors Documentation",
    "keywords": "Field UriSourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the UriSource dependency property. public static readonly DependencyProperty UriSourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgCanvas.html": {
    "href": "api/SharpVectors.Converters.SvgCanvas.html",
    "title": "Class SvgCanvas | SharpVectors Documentation",
    "keywords": "Class SvgCanvas Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This is a Canvas control for viewing SVG file in WPF applications. public class SvgCanvas : SvgDrawingCanvas, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild, ISvgControl, IUriContext Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Panel Canvas SvgDrawingCanvas SvgCanvas Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild ISvgControl IUriContext Inherited Members SvgDrawingCanvas.AppTitle SvgDrawingCanvas.DesignMode SvgDrawingCanvas.AnimationCanvas SvgDrawingCanvas.DisplayTransform SvgDrawingCanvas.Bounds SvgDrawingCanvas.DisplayOffset SvgDrawingCanvas.DrawObjects SvgDrawingCanvas.LinkObjects SvgDrawingCanvas.HostVisual SvgDrawingCanvas.InteractiveMode SvgDrawingCanvas.Alert SvgDrawingCanvas.Error SvgDrawingCanvas.VisualChildrenCount SvgDrawingCanvas.LoadDiagrams(string) SvgDrawingCanvas.LoadDiagrams(DrawingGroup, DrawingGroup, DrawingGroup) SvgDrawingCanvas.UnloadDiagrams() SvgDrawingCanvas.RenderDiagrams(SvgImageNameScope) SvgDrawingCanvas.RenderDiagrams(DrawingGroup) SvgDrawingCanvas.GetVisualChild(int) SvgDrawingCanvas.MeasureOverride(Size) SvgDrawingCanvas.OnMouseDown(MouseButtonEventArgs) SvgDrawingCanvas.OnMouseMove(MouseEventArgs) SvgDrawingCanvas.OnMouseUp(MouseButtonEventArgs) SvgDrawingCanvas.OnMouseLeave(MouseEventArgs) SvgDrawingCanvas.OnHandleAlert(string) SvgDrawingCanvas.OnHandleError(string, Exception) Canvas.LeftProperty Canvas.TopProperty Canvas.RightProperty Canvas.BottomProperty Canvas.GetLeft(UIElement) Canvas.SetLeft(UIElement, double) Canvas.GetTop(UIElement) Canvas.SetTop(UIElement, double) Canvas.GetRight(UIElement) Canvas.SetRight(UIElement, double) Canvas.GetBottom(UIElement) Canvas.SetBottom(UIElement, double) Canvas.ArrangeOverride(Size) Canvas.GetLayoutClip(Size) Panel.BackgroundProperty Panel.IsItemsHostProperty Panel.ZIndexProperty Panel.OnRender(DrawingContext) Panel.OnIsItemsHostChanged(bool, bool) Panel.CreateUIElementCollection(FrameworkElement) Panel.OnVisualChildrenChanged(DependencyObject, DependencyObject) Panel.SetZIndex(UIElement, int) Panel.GetZIndex(UIElement) Panel.Background Panel.LogicalChildren Panel.Children Panel.IsItemsHost Panel.LogicalOrientation Panel.HasLogicalOrientation Panel.InternalChildren FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Remarks It extends the drawing canvas, SvgDrawingCanvas, instead of generic Canvas control, therefore any interactivity support implemented in the drawing canvas will be available in the Canvas. Constructors SvgCanvas() Initializes a new instance of the SvgCanvas class. Fields AppNameProperty The DependencyProperty for the AppName property. MessageBackgroundProperty The DependencyProperty for the MessageBackground property. Flags: Can be used in style rules Default Value: PapayaWhip MessageFillBrushProperty The DependencyProperty for the MessageFillBrush property. Flags: Can be used in style rules Default Value: Gold MessageFontFamilyProperty The DependencyProperty for the MessageFontFamily property. Flags: Can be used in style rules Default Value: System Dialog Font MessageFontSizeProperty The DependencyProperty for the MessageFontSize property. Flags: Can be used in style rules Default Value: 48 pixels MessageOpacityProperty The DependencyProperty for the MessageOpacity property. Flags: Can be used in style rules Default Value: 1 (full opacity) MessageStrokeBrushProperty The DependencyProperty for the MessageStrokeBrush property. Flags: Can be used in style rules Default Value: Maroon MessageTextProperty The DependencyProperty for the MessageText property. Flags: Can be used in style rules Default Value: \"Loading...\" SourceProperty Identifies the Source dependency property. StreamSourceProperty Identifies the StreamSource dependency property. SvgSourceProperty Identifies the SvgSource dependency property. UriSourceProperty Identifies the UriSource dependency property. Properties AppName Gets or sets the name of the parent assembly for this element. AutoSize Gets or sets a value indicating whether to automatically resize this Canvas based on the size of the loaded drawing. BaseUri Gets or sets the base URI of the current application context. CultureInfo Gets or sets the main culture information used for rendering texts. Drawings Gets the drawing from the SVG file conversion. EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. MessageBackground Gets or sets a brush that describes the background of a message text. MessageFillBrush Gets or sets the brush with which to fill the message text. This is optional, and can be null. If the brush is null, no fill is drawn. MessageFontFamily Gets or sets the font family of the desired font for the message text. MessageFontSize Gets or sets the size of the desired font for the message text. MessageOpacity Gets or sets the opacity factor applied to the entire message text when it is rendered in the user interface (UI). MessageStrokeBrush Gets or sets the brush of the Pen with which to stroke the message text. This is optional, and can be null. If the brush is null, no stroke is drawn. MessageText Gets or sets the content of the message. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. Source Gets or sets the path to the SVG file to load into this Canvas. StreamSource Gets or sets the Stream to the SVG source to load into this Canvas. SvgSource Gets or sets the SVG contents to load into this Canvas. TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. UriSource Gets or sets the path to the SVG file to load into this Canvas. Methods CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup. CreateDrawing(Stream, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. CreateDrawing(string, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup. GetDrawingSettings() Gets the rendering settings or options to be used in rendering the SVG in this control. Load(Stream, bool, bool) This sets the source SVG for a SvgCanvas by accessing a stream and optionally processing the result asynchronously. Load(string, bool) This sets the source SVG for a SvgCanvas by accessing text content and optionally processing the result asynchronously. Load(Uri, bool) This sets the source SVG for a SvgCanvas by using the supplied Uniform Resource Identifier (URI) and optionally processing the result asynchronously. LoadAsync(Stream, bool) This sets the source SVG for a SvgCanvas by accessing a stream and processing the result asynchronously. LoadAsync(string) This sets the source SVG for a SvgCanvas by accessing text contents and processing the result asynchronously. LoadAsync(Uri) This sets the source SVG for a SvgCanvas by using the supplied Uniform Resource Identifier (URI) and processing the result asynchronously. OnAutoSizeChanged() This handles changes in the automatic resizing property of this control. OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. OnSettingsChanged() This handles changes in the rendering settings of this control. Unload(bool, string) This clears the SvgCanvas of any drawn diagram and optionally displays a message. See Also SvgViewbox"
  },
  "api/SharpVectors.Converters.SvgControl.-ctor.html": {
    "href": "api/SharpVectors.Converters.SvgControl.-ctor.html",
    "title": "Constructor SvgControl | SharpVectors Documentation",
    "keywords": "Constructor SvgControl Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgControl() public SvgControl()"
  },
  "api/SharpVectors.Converters.SvgControl.ArrangeOverride.html": {
    "href": "api/SharpVectors.Converters.SvgControl.ArrangeOverride.html",
    "title": "Method ArrangeOverride | SharpVectors Documentation",
    "keywords": "Method ArrangeOverride Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ArrangeOverride(Size) Called to arrange and size the content of a Control object. protected override Size ArrangeOverride(Size arrangeBounds) Parameters arrangeBounds Size The computed size that is used to arrange the content. Returns Size The size of the control."
  },
  "api/SharpVectors.Converters.SvgControl.AutoSize.html": {
    "href": "api/SharpVectors.Converters.SvgControl.AutoSize.html",
    "title": "Property AutoSize | SharpVectors Documentation",
    "keywords": "Property AutoSize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AutoSize Gets or sets a value indicating whether to automatically resize this Canvas based on the size of the loaded drawing. public bool AutoSize { get; set; } Property Value bool This is true if this Canvas is automatically resized based on the size of the loaded drawing; otherwise, it is false. The default is false, and the user-defined size or the parent assigned layout size is used."
  },
  "api/SharpVectors.Converters.SvgControl.BaseUri.html": {
    "href": "api/SharpVectors.Converters.SvgControl.BaseUri.html",
    "title": "Property BaseUri | SharpVectors Documentation",
    "keywords": "Property BaseUri Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll BaseUri Gets or sets the base URI of the current application context. public Uri BaseUri { get; set; } Property Value Uri The base URI of the application context."
  },
  "api/SharpVectors.Converters.SvgControl.CreateDrawing.html": {
    "href": "api/SharpVectors.Converters.SvgControl.CreateDrawing.html",
    "title": "Method CreateDrawing | SharpVectors Documentation",
    "keywords": "Method CreateDrawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup. protected virtual DrawingGroup CreateDrawing() Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(Uri svgSource, WpfDrawingSettings settings) Parameters svgSource Uri A Uri defining the path to the SVG source. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(Stream, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(Stream svgStream, WpfDrawingSettings settings) Parameters svgStream Stream A stream providing access to the SVG source data. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null."
  },
  "api/SharpVectors.Converters.SvgControl.CultureInfo.html": {
    "href": "api/SharpVectors.Converters.SvgControl.CultureInfo.html",
    "title": "Property CultureInfo | SharpVectors Documentation",
    "keywords": "Property CultureInfo Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll CultureInfo Gets or sets the main culture information used for rendering texts. public CultureInfo CultureInfo { get; set; } Property Value CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts."
  },
  "api/SharpVectors.Converters.SvgControl.Drawings.html": {
    "href": "api/SharpVectors.Converters.SvgControl.Drawings.html",
    "title": "Property Drawings | SharpVectors Documentation",
    "keywords": "Property Drawings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Drawings Gets the drawing from the SVG file conversion. public DrawingGroup Drawings { get; } Property Value DrawingGroup An instance of the DrawingGroup specifying the converted drawings which is rendered in this canvas."
  },
  "api/SharpVectors.Converters.SvgControl.EnsureViewboxPosition.html": {
    "href": "api/SharpVectors.Converters.SvgControl.EnsureViewboxPosition.html",
    "title": "Property EnsureViewboxPosition | SharpVectors Documentation",
    "keywords": "Property EnsureViewboxPosition Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. public bool EnsureViewboxPosition { get; set; } Property Value bool This determines whether a transformation is applied to the rendered drawing. For drawings where the top-left position of the viewbox is off the screen, due to negative values, this will ensure the drawing is visible. The default value is true. Set this value to false if you wish to apply your own transformations to the drawings."
  },
  "api/SharpVectors.Converters.SvgControl.EnsureViewboxSize.html": {
    "href": "api/SharpVectors.Converters.SvgControl.EnsureViewboxSize.html",
    "title": "Property EnsureViewboxSize | SharpVectors Documentation",
    "keywords": "Property EnsureViewboxSize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. public bool EnsureViewboxSize { get; set; } Property Value bool For image outputs, this will force the original size to be saved. The default value is false. However, the ImageSvgConverter converted sets this to true by default. Remarks Setting this to true will cause the rendering process to draw a transparent box around the output, if a viewbox is defined. This will ensure that the original image size is saved."
  },
  "api/SharpVectors.Converters.SvgControl.GetDrawingSettings.html": {
    "href": "api/SharpVectors.Converters.SvgControl.GetDrawingSettings.html",
    "title": "Method GetDrawingSettings | SharpVectors Documentation",
    "keywords": "Method GetDrawingSettings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetDrawingSettings() protected virtual WpfDrawingSettings GetDrawingSettings() Returns WpfDrawingSettings"
  },
  "api/SharpVectors.Converters.SvgControl.IgnoreRootViewbox.html": {
    "href": "api/SharpVectors.Converters.SvgControl.IgnoreRootViewbox.html",
    "title": "Property IgnoreRootViewbox | SharpVectors Documentation",
    "keywords": "Property IgnoreRootViewbox Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. public bool IgnoreRootViewbox { get; set; } Property Value bool For image outputs, this will force the original size to be saved. The default value is false. Remarks There are reported cases where are diagrams displayed in Inkscape program, but will not show when converted. These are diagrams on the drawing canvas of Inkspace but outside the svg viewbox. When converted the drawings are also converted but not displayed due to clipping. Setting this property to true will clear the clipping region on conversion."
  },
  "api/SharpVectors.Converters.SvgControl.IncludeRuntime.html": {
    "href": "api/SharpVectors.Converters.SvgControl.IncludeRuntime.html",
    "title": "Property IncludeRuntime | SharpVectors Documentation",
    "keywords": "Property IncludeRuntime Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. public bool IncludeRuntime { get; set; } Property Value bool This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false. The default is true. Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc."
  },
  "api/SharpVectors.Converters.SvgControl.Load.html": {
    "href": "api/SharpVectors.Converters.SvgControl.Load.html",
    "title": "Method Load | SharpVectors Documentation",
    "keywords": "Method Load Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Load(Uri, bool) This sets the source SVG for a SvgControl by using the supplied Uniform Resource Identifier (URI) and optionally processing the result asynchronously. public bool Load(Uri uriSource, bool useAsync = false) Parameters uriSource Uri A reference to the SVG source file. useAsync bool A value indicating whether to process the result asynchronously. The default value is false, the SVG conversion is processed synchronously. Returns bool A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Load(Stream, bool, bool) This sets the source SVG for a SvgControl by accessing a stream and optionally processing the result asynchronously. public bool Load(Stream streamSource, bool useCopyStream = true, bool useAsync = false) Parameters streamSource Stream The stream source that sets the SVG source value. useCopyStream bool A value specifying whether to use a copy of the stream. The default is true, the SVG source stream is copied, rendered and stored. useAsync bool A value indicating whether to process the result asynchronously. The default value is false, the SVG conversion is processed synchronously. Returns bool A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy."
  },
  "api/SharpVectors.Converters.SvgControl.LoadAsync.html": {
    "href": "api/SharpVectors.Converters.SvgControl.LoadAsync.html",
    "title": "Method LoadAsync | SharpVectors Documentation",
    "keywords": "Method LoadAsync Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll LoadAsync(Uri) This sets the source SVG for a SvgControl by using the supplied Uniform Resource Identifier (URI) and processing the result asynchronously. public Task<bool> LoadAsync(Uri uriSource) Parameters uriSource Uri A reference to the SVG source file. Returns Task<bool> A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. LoadAsync(Stream, bool) This sets the source SVG for a SvgControl by accessing a stream and processing the result asynchronously. public Task<bool> LoadAsync(Stream streamSource, bool useCopyStream = true) Parameters streamSource Stream The stream source that sets the SVG source value. useCopyStream bool A value specifying whether to use a copy of the stream. The default is true, the SVG source stream is copied, rendered and stored. Returns Task<bool> A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy."
  },
  "api/SharpVectors.Converters.SvgControl.MeasureOverride.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MeasureOverride.html",
    "title": "Method MeasureOverride | SharpVectors Documentation",
    "keywords": "Method MeasureOverride Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MeasureOverride(Size) Called to remeasure a control. protected override Size MeasureOverride(Size constraint) Parameters constraint Size The maximum size that the method can return. Returns Size The size of the control, up to the maximum specified by constraint."
  },
  "api/SharpVectors.Converters.SvgControl.MessageBackground.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageBackground.html",
    "title": "Property MessageBackground | SharpVectors Documentation",
    "keywords": "Property MessageBackground Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageBackground Gets or sets a brush that describes the background of a message text. public Brush MessageBackground { get; set; } Property Value Brush A Brush specifying the brush that is used to fill the background of the message text. The default is PapayaWhip. If set to null, the background will not be drawn."
  },
  "api/SharpVectors.Converters.SvgControl.MessageBackgroundProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageBackgroundProperty.html",
    "title": "Field MessageBackgroundProperty | SharpVectors Documentation",
    "keywords": "Field MessageBackgroundProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageBackground property. Flags: Can be used in style rules Default Value: PapayaWhip public static readonly DependencyProperty MessageBackgroundProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.MessageFillBrush.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageFillBrush.html",
    "title": "Property MessageFillBrush | SharpVectors Documentation",
    "keywords": "Property MessageFillBrush Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageFillBrush Gets or sets the brush with which to fill the message text. This is optional, and can be null. If the brush is null, no fill is drawn. public Brush MessageFillBrush { get; set; } Property Value Brush A Brush specifying the fill of the message text. The default is Gold. Remarks If both the fill and stroke brushes of the message text are null, no text is drawn."
  },
  "api/SharpVectors.Converters.SvgControl.MessageFillBrushProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageFillBrushProperty.html",
    "title": "Field MessageFillBrushProperty | SharpVectors Documentation",
    "keywords": "Field MessageFillBrushProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageFillBrush property. Flags: Can be used in style rules Default Value: Gold public static readonly DependencyProperty MessageFillBrushProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.MessageFontFamily.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageFontFamily.html",
    "title": "Property MessageFontFamily | SharpVectors Documentation",
    "keywords": "Property MessageFontFamily Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageFontFamily Gets or sets the font family of the desired font for the message text. public FontFamily MessageFontFamily { get; set; } Property Value FontFamily A FontFamily specifying the font for the message text. The default value is MessageFontFamily."
  },
  "api/SharpVectors.Converters.SvgControl.MessageFontFamilyProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageFontFamilyProperty.html",
    "title": "Field MessageFontFamilyProperty | SharpVectors Documentation",
    "keywords": "Field MessageFontFamilyProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageFontFamily property. Flags: Can be used in style rules Default Value: System Dialog Font public static readonly DependencyProperty MessageFontFamilyProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.MessageFontSize.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageFontSize.html",
    "title": "Property MessageFontSize | SharpVectors Documentation",
    "keywords": "Property MessageFontSize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageFontSize Gets or sets the size of the desired font for the message text. public double MessageFontSize { get; set; } Property Value double A value specifying the font size of the message text. The default is 48 pixels. The font size must be a positive number."
  },
  "api/SharpVectors.Converters.SvgControl.MessageFontSizeProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageFontSizeProperty.html",
    "title": "Field MessageFontSizeProperty | SharpVectors Documentation",
    "keywords": "Field MessageFontSizeProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageFontSize property. Flags: Can be used in style rules Default Value: 48 pixels public static readonly DependencyProperty MessageFontSizeProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.MessageOpacity.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageOpacity.html",
    "title": "Property MessageOpacity | SharpVectors Documentation",
    "keywords": "Property MessageOpacity Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageOpacity Gets or sets the opacity factor applied to the entire message text when it is rendered in the user interface (UI). public double MessageOpacity { get; set; } Property Value double The opacity factor. Default opacity is 1.0. Expected values are between 0.0 and 1.0."
  },
  "api/SharpVectors.Converters.SvgControl.MessageOpacityProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageOpacityProperty.html",
    "title": "Field MessageOpacityProperty | SharpVectors Documentation",
    "keywords": "Field MessageOpacityProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageOpacity property. Flags: Can be used in style rules Default Value: 1 (full opacity) public static readonly DependencyProperty MessageOpacityProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.MessageStrokeBrush.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageStrokeBrush.html",
    "title": "Property MessageStrokeBrush | SharpVectors Documentation",
    "keywords": "Property MessageStrokeBrush Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageStrokeBrush Gets or sets the brush of the Pen with which to stroke the message text. This is optional, and can be null. If the brush is null, no stroke is drawn. public Brush MessageStrokeBrush { get; set; } Property Value Brush A Brush specifying the brush of the Pen for stroking the message text. The default is Maroon. Remarks If both the fill and stroke brushes of the message text are null, no text is drawn."
  },
  "api/SharpVectors.Converters.SvgControl.MessageStrokeBrushProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageStrokeBrushProperty.html",
    "title": "Field MessageStrokeBrushProperty | SharpVectors Documentation",
    "keywords": "Field MessageStrokeBrushProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageStrokeBrush property. Flags: Can be used in style rules Default Value: Maroon public static readonly DependencyProperty MessageStrokeBrushProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.MessageText.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageText.html",
    "title": "Property MessageText | SharpVectors Documentation",
    "keywords": "Property MessageText Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageText Gets or sets the content of the message. public string MessageText { get; set; } Property Value string A string specifying the content of the message text. The default is \"Loading...\". This value can be overriden in the Unload(bool, string) method."
  },
  "api/SharpVectors.Converters.SvgControl.MessageTextProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.MessageTextProperty.html",
    "title": "Field MessageTextProperty | SharpVectors Documentation",
    "keywords": "Field MessageTextProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageText property. Flags: Can be used in style rules Default Value: \"Loading...\" public static readonly DependencyProperty MessageTextProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.OnAutoSizeChanged.html": {
    "href": "api/SharpVectors.Converters.SvgControl.OnAutoSizeChanged.html",
    "title": "Method OnAutoSizeChanged | SharpVectors Documentation",
    "keywords": "Method OnAutoSizeChanged Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnAutoSizeChanged() This handles changes in the automatic resizing property of this control. protected virtual void OnAutoSizeChanged()"
  },
  "api/SharpVectors.Converters.SvgControl.OnInitialized.html": {
    "href": "api/SharpVectors.Converters.SvgControl.OnInitialized.html",
    "title": "Method OnInitialized | SharpVectors Documentation",
    "keywords": "Method OnInitialized Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. protected override void OnInitialized(EventArgs e) Parameters e EventArgs Event data for the event."
  },
  "api/SharpVectors.Converters.SvgControl.OnRender.html": {
    "href": "api/SharpVectors.Converters.SvgControl.OnRender.html",
    "title": "Method OnRender | SharpVectors Documentation",
    "keywords": "Method OnRender Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnRender(DrawingContext) When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing. protected override void OnRender(DrawingContext drawingContext) Parameters drawingContext DrawingContext The drawing instructions for a specific element. This context is provided to the layout system."
  },
  "api/SharpVectors.Converters.SvgControl.OnRenderSizeChanged.html": {
    "href": "api/SharpVectors.Converters.SvgControl.OnRenderSizeChanged.html",
    "title": "Method OnRenderSizeChanged | SharpVectors Documentation",
    "keywords": "Method OnRenderSizeChanged Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnRenderSizeChanged(SizeChangedInfo) Raises the SizeChanged event, using the specified information as part of the eventual event data. protected override void OnRenderSizeChanged(SizeChangedInfo sizeInfo) Parameters sizeInfo SizeChangedInfo Details of the old and new size involved in the change."
  },
  "api/SharpVectors.Converters.SvgControl.OnSettingsChanged.html": {
    "href": "api/SharpVectors.Converters.SvgControl.OnSettingsChanged.html",
    "title": "Method OnSettingsChanged | SharpVectors Documentation",
    "keywords": "Method OnSettingsChanged Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnSettingsChanged() This handles changes in the rendering settings of this control. protected virtual void OnSettingsChanged()"
  },
  "api/SharpVectors.Converters.SvgControl.OptimizePath.html": {
    "href": "api/SharpVectors.Converters.SvgControl.OptimizePath.html",
    "title": "Property OptimizePath | SharpVectors Documentation",
    "keywords": "Property OptimizePath Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. public bool OptimizePath { get; set; } Property Value bool This is true if the path geometry is optimized using the StreamGeometry; otherwise, it is false. The default is true."
  },
  "api/SharpVectors.Converters.SvgControl.RenderDiagrams.html": {
    "href": "api/SharpVectors.Converters.SvgControl.RenderDiagrams.html",
    "title": "Method RenderDiagrams | SharpVectors Documentation",
    "keywords": "Method RenderDiagrams Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll RenderDiagrams(DrawingGroup) public void RenderDiagrams(DrawingGroup renderedGroup) Parameters renderedGroup DrawingGroup"
  },
  "api/SharpVectors.Converters.SvgControl.RenderedDrawing.html": {
    "href": "api/SharpVectors.Converters.SvgControl.RenderedDrawing.html",
    "title": "Property RenderedDrawing | SharpVectors Documentation",
    "keywords": "Property RenderedDrawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll RenderedDrawing public DrawingGroup RenderedDrawing { get; protected set; } Property Value DrawingGroup"
  },
  "api/SharpVectors.Converters.SvgControl.SizeMode.html": {
    "href": "api/SharpVectors.Converters.SvgControl.SizeMode.html",
    "title": "Property SizeMode | SharpVectors Documentation",
    "keywords": "Property SizeMode Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SizeMode public SvgControlSizeMode SizeMode { get; set; } Property Value SvgControlSizeMode"
  },
  "api/SharpVectors.Converters.SvgControl.SizeModeProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.SizeModeProperty.html",
    "title": "Field SizeModeProperty | SharpVectors Documentation",
    "keywords": "Field SizeModeProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public static DependencyProperty SizeModeProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.Source.html": {
    "href": "api/SharpVectors.Converters.SvgControl.Source.html",
    "title": "Property Source | SharpVectors Documentation",
    "keywords": "Property Source Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Source Gets or sets the path to the SVG file to load into this Canvas. public Uri Source { get; set; } Property Value Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any opened diagram. See Also StreamSource"
  },
  "api/SharpVectors.Converters.SvgControl.SourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.SourceProperty.html",
    "title": "Field SourceProperty | SharpVectors Documentation",
    "keywords": "Field SourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the Source dependency property. public static readonly DependencyProperty SourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.StreamSource.html": {
    "href": "api/SharpVectors.Converters.SvgControl.StreamSource.html",
    "title": "Property StreamSource | SharpVectors Documentation",
    "keywords": "Property StreamSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll StreamSource Gets or sets the Stream to the SVG source to load into this Canvas. public Stream StreamSource { get; set; } Property Value Stream A Stream specifying the stream to the SVG source. Settings this to null will close any opened diagram. Remarks The stream source has precedence over the Uri Source property. If set (not null), the stream source will be rendered instead of the Uri source. WPF controls do not implement the IDisposable interface and cannot properly dispose any stream set to it. To avoid this issue and also any problem of the user accidentally closing the stream, this control makes a copy of the stream to memory stream. See Also Source"
  },
  "api/SharpVectors.Converters.SvgControl.StreamSourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgControl.StreamSourceProperty.html",
    "title": "Field StreamSourceProperty | SharpVectors Documentation",
    "keywords": "Field StreamSourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the StreamSource dependency property. public static readonly DependencyProperty StreamSourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgControl.TextAsGeometry.html": {
    "href": "api/SharpVectors.Converters.SvgControl.TextAsGeometry.html",
    "title": "Property TextAsGeometry | SharpVectors Documentation",
    "keywords": "Property TextAsGeometry Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. public bool TextAsGeometry { get; set; } Property Value bool This is true if texts are rendered as path geometries; otherwise, this is false. The default is false."
  },
  "api/SharpVectors.Converters.SvgControl.Unload.html": {
    "href": "api/SharpVectors.Converters.SvgControl.Unload.html",
    "title": "Method Unload | SharpVectors Documentation",
    "keywords": "Method Unload Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Unload(bool, string) This clears the SvgControl of any drawn diagram and optionally displays a message. public void Unload(bool displayMessage = false, string message = \"\") Parameters displayMessage bool A value indicating whether to display a message after clearing the SVG rendered diagram. The value is false, not message is displayed. message string This specifies the message to be displayed after clearing the diagram. Setting this parameter to a non-empty text will override any message set in the MessageText. The default value is Empty."
  },
  "api/SharpVectors.Converters.SvgControl.html": {
    "href": "api/SharpVectors.Converters.SvgControl.html",
    "title": "Class SvgControl | SharpVectors Documentation",
    "keywords": "Class SvgControl Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public class SvgControl : Control, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IUriContext Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control SvgControl Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IUriContext Inherited Members Control.BorderBrushProperty Control.BorderThicknessProperty Control.BackgroundProperty Control.ForegroundProperty Control.FontFamilyProperty Control.FontSizeProperty Control.FontStretchProperty Control.FontStyleProperty Control.FontWeightProperty Control.HorizontalContentAlignmentProperty Control.VerticalContentAlignmentProperty Control.TabIndexProperty Control.IsTabStopProperty Control.PaddingProperty Control.TemplateProperty Control.PreviewMouseDoubleClickEvent Control.MouseDoubleClickEvent Control.OnTemplateChanged(ControlTemplate, ControlTemplate) Control.ToString() Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs) Control.OnMouseDoubleClick(MouseButtonEventArgs) Control.BorderBrush Control.BorderThickness Control.Background Control.Foreground Control.FontFamily Control.FontSize Control.FontStretch Control.FontStyle Control.FontWeight Control.HorizontalContentAlignment Control.VerticalContentAlignment Control.TabIndex Control.IsTabStop Control.Padding Control.Template Control.HandlesScrolling Control.PreviewMouseDoubleClick Control.MouseDoubleClick FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetVisualChild(int) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.LogicalChildren FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors SvgControl() Fields MessageBackgroundProperty The DependencyProperty for the MessageBackground property. Flags: Can be used in style rules Default Value: PapayaWhip MessageFillBrushProperty The DependencyProperty for the MessageFillBrush property. Flags: Can be used in style rules Default Value: Gold MessageFontFamilyProperty The DependencyProperty for the MessageFontFamily property. Flags: Can be used in style rules Default Value: System Dialog Font MessageFontSizeProperty The DependencyProperty for the MessageFontSize property. Flags: Can be used in style rules Default Value: 48 pixels MessageOpacityProperty The DependencyProperty for the MessageOpacity property. Flags: Can be used in style rules Default Value: 1 (full opacity) MessageStrokeBrushProperty The DependencyProperty for the MessageStrokeBrush property. Flags: Can be used in style rules Default Value: Maroon MessageTextProperty The DependencyProperty for the MessageText property. Flags: Can be used in style rules Default Value: \"Loading...\" SizeModeProperty SourceProperty Identifies the Source dependency property. StreamSourceProperty Identifies the StreamSource dependency property. Properties AutoSize Gets or sets a value indicating whether to automatically resize this Canvas based on the size of the loaded drawing. BaseUri Gets or sets the base URI of the current application context. CultureInfo Gets or sets the main culture information used for rendering texts. Drawings Gets the drawing from the SVG file conversion. EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. MessageBackground Gets or sets a brush that describes the background of a message text. MessageFillBrush Gets or sets the brush with which to fill the message text. This is optional, and can be null. If the brush is null, no fill is drawn. MessageFontFamily Gets or sets the font family of the desired font for the message text. MessageFontSize Gets or sets the size of the desired font for the message text. MessageOpacity Gets or sets the opacity factor applied to the entire message text when it is rendered in the user interface (UI). MessageStrokeBrush Gets or sets the brush of the Pen with which to stroke the message text. This is optional, and can be null. If the brush is null, no stroke is drawn. MessageText Gets or sets the content of the message. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. RenderedDrawing SizeMode Source Gets or sets the path to the SVG file to load into this Canvas. StreamSource Gets or sets the Stream to the SVG source to load into this Canvas. TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. Methods ArrangeOverride(Size) Called to arrange and size the content of a Control object. CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup. CreateDrawing(Stream, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup. GetDrawingSettings() Load(Stream, bool, bool) This sets the source SVG for a SvgControl by accessing a stream and optionally processing the result asynchronously. Load(Uri, bool) This sets the source SVG for a SvgControl by using the supplied Uniform Resource Identifier (URI) and optionally processing the result asynchronously. LoadAsync(Stream, bool) This sets the source SVG for a SvgControl by accessing a stream and processing the result asynchronously. LoadAsync(Uri) This sets the source SVG for a SvgControl by using the supplied Uniform Resource Identifier (URI) and processing the result asynchronously. MeasureOverride(Size) Called to remeasure a control. OnAutoSizeChanged() This handles changes in the automatic resizing property of this control. OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. OnRender(DrawingContext) When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing. OnRenderSizeChanged(SizeChangedInfo) Raises the SizeChanged event, using the specified information as part of the eventual event data. OnSettingsChanged() This handles changes in the rendering settings of this control. RenderDiagrams(DrawingGroup) Unload(bool, string) This clears the SvgControl of any drawn diagram and optionally displays a message."
  },
  "api/SharpVectors.Converters.SvgControlSizeMode.html": {
    "href": "api/SharpVectors.Converters.SvgControlSizeMode.html",
    "title": "Enum SvgControlSizeMode | SharpVectors Documentation",
    "keywords": "Enum SvgControlSizeMode Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public enum SvgControlSizeMode Fields None = 0 ContentToSizeNoStretch = 1 ContentToSizeStretch = 2 SizeToContent = 3"
  },
  "api/SharpVectors.Converters.SvgConverter.-ctor.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.-ctor.html",
    "title": "Constructor SvgConverter | SharpVectors Documentation",
    "keywords": "Constructor SvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgConverter() Initializes a new instance of the SvgConverter class with the default parameters and settings. protected SvgConverter() SvgConverter(WpfDrawingSettings) Initializes a new instance of the SvgConverter class with the specified drawing or rendering settings. protected SvgConverter(WpfDrawingSettings settings) Parameters settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. SvgConverter(bool, bool, WpfDrawingSettings) Initializes a new instance of the SvgConverter class with the specified drawing or rendering settings and the saving options. protected SvgConverter(bool saveXaml, bool saveZaml, WpfDrawingSettings settings) Parameters saveXaml bool This specifies whether to save result object tree in XAML file. saveZaml bool This specifies whether to save result object tree in ZAML file. The ZAML is simply a G-Zip compressed XAML format, similar to the SVGZ. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used."
  },
  "api/SharpVectors.Converters.SvgConverter.Background.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.Background.html",
    "title": "Property Background | SharpVectors Documentation",
    "keywords": "Property Background Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Background Gets or sets a brush that describes the background of a image. public SolidColorBrush Background { get; set; } Property Value SolidColorBrush The brush that is used to fill the background of the control. The default is null or transparent."
  },
  "api/SharpVectors.Converters.SvgConverter.BackupExt.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.BackupExt.html",
    "title": "Field BackupExt | SharpVectors Documentation",
    "keywords": "Field BackupExt Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public const string BackupExt = \".bak\" Returns string"
  },
  "api/SharpVectors.Converters.SvgConverter.BeginProcessing.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.BeginProcessing.html",
    "title": "Method BeginProcessing | SharpVectors Documentation",
    "keywords": "Method BeginProcessing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll BeginProcessing(WpfDrawingDocument) protected virtual void BeginProcessing(WpfDrawingDocument drawingDocument = null) Parameters drawingDocument WpfDrawingDocument"
  },
  "api/SharpVectors.Converters.SvgConverter.CompressedSvgExt.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.CompressedSvgExt.html",
    "title": "Field CompressedSvgExt | SharpVectors Documentation",
    "keywords": "Field CompressedSvgExt Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public const string CompressedSvgExt = \".svgz\" Returns string"
  },
  "api/SharpVectors.Converters.SvgConverter.CompressedXamlExt.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.CompressedXamlExt.html",
    "title": "Field CompressedXamlExt | SharpVectors Documentation",
    "keywords": "Field CompressedXamlExt Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public const string CompressedXamlExt = \".zaml\" Returns string"
  },
  "api/SharpVectors.Converters.SvgConverter.Dispose.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.Dispose.html",
    "title": "Method Dispose | SharpVectors Documentation",
    "keywords": "Method Dispose Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Dispose() This releases all resources used by the SvgConverter object. public void Dispose() Dispose(bool) This releases the unmanaged resources used by the SvgConverter and optionally releases the managed resources. protected virtual void Dispose(bool disposing) Parameters disposing bool This is true if managed resources should be disposed; otherwise, false."
  },
  "api/SharpVectors.Converters.SvgConverter.DpiX.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.DpiX.html",
    "title": "Property DpiX | SharpVectors Documentation",
    "keywords": "Property DpiX Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll DpiX Gets the horizontal dots per inch (dpi) of the static image. public double DpiX { get; set; } Property Value double The horizontal dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the x-axis."
  },
  "api/SharpVectors.Converters.SvgConverter.DpiY.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.DpiY.html",
    "title": "Property DpiY | SharpVectors Documentation",
    "keywords": "Property DpiY Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll DpiY Gets the vertical dots per inch (dpi) of the static image. public double DpiY { get; set; } Property Value double The vertical dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the y-axis."
  },
  "api/SharpVectors.Converters.SvgConverter.DrawingSettings.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.DrawingSettings.html",
    "title": "Property DrawingSettings | SharpVectors Documentation",
    "keywords": "Property DrawingSettings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll DrawingSettings Gets the settings used by the rendering or drawing engine. public WpfDrawingSettings DrawingSettings { get; } Property Value WpfDrawingSettings An instance of WpfDrawingSettings specifying all the options for rendering or drawing."
  },
  "api/SharpVectors.Converters.SvgConverter.EndProcessing.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.EndProcessing.html",
    "title": "Method EndProcessing | SharpVectors Documentation",
    "keywords": "Method EndProcessing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EndProcessing() protected virtual void EndProcessing()"
  },
  "api/SharpVectors.Converters.SvgConverter.Finalize.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.Finalize.html",
    "title": "Method ~SvgConverter | SharpVectors Documentation",
    "keywords": "Method ~SvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ~SvgConverter() This allows a converter to attempt to free resources and perform other cleanup operations before the converter is reclaimed by garbage collection. protected ~SvgConverter()"
  },
  "api/SharpVectors.Converters.SvgConverter.GetBitmapEncoder.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.GetBitmapEncoder.html",
    "title": "Method GetBitmapEncoder | SharpVectors Documentation",
    "keywords": "Method GetBitmapEncoder Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetBitmapEncoder(ImageEncoderType) protected static BitmapEncoder GetBitmapEncoder(ImageEncoderType encoderType) Parameters encoderType ImageEncoderType Returns BitmapEncoder"
  },
  "api/SharpVectors.Converters.SvgConverter.GetImageFileExtention.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.GetImageFileExtention.html",
    "title": "Method GetImageFileExtention | SharpVectors Documentation",
    "keywords": "Method GetImageFileExtention Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetImageFileExtention(ImageEncoderType) protected static string GetImageFileExtention(ImageEncoderType encoderType) Parameters encoderType ImageEncoderType Returns string"
  },
  "api/SharpVectors.Converters.SvgConverter.SaveXaml.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.SaveXaml.html",
    "title": "Property SaveXaml | SharpVectors Documentation",
    "keywords": "Property SaveXaml Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SaveXaml Gets or sets a value indicating whether to save the conversion output to the XAML file. public bool SaveXaml { get; set; } Property Value bool This is true if the conversion output is saved to the XAML file; otherwise, it is false. The default depends on the converter."
  },
  "api/SharpVectors.Converters.SvgConverter.SaveZaml.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.SaveZaml.html",
    "title": "Property SaveZaml | SharpVectors Documentation",
    "keywords": "Property SaveZaml Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SaveZaml Gets or sets a value indicating whether to save the conversion output to the ZAML file. public bool SaveZaml { get; set; } Property Value bool This is true if the conversion output is saved to the ZAML file; otherwise, it is false. The default depends on the converter. Remarks The ZAML is simply a G-Zip compressed XAML format, similar to the SVGZ."
  },
  "api/SharpVectors.Converters.SvgConverter.SvgDocument.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.SvgDocument.html",
    "title": "Property SvgDocument | SharpVectors Documentation",
    "keywords": "Property SvgDocument Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgDocument Gets the current SVG Document created by this converter. public SvgDocument SvgDocument { get; } Property Value SvgDocument An instance of SvgDocument specifying the SVG DOM currently opened by the converter; or null if no SVG document is currently opened."
  },
  "api/SharpVectors.Converters.SvgConverter.SvgExt.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.SvgExt.html",
    "title": "Field SvgExt | SharpVectors Documentation",
    "keywords": "Field SvgExt Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public const string SvgExt = \".svg\" Returns string"
  },
  "api/SharpVectors.Converters.SvgConverter.SvgWindow.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.SvgWindow.html",
    "title": "Property SvgWindow | SharpVectors Documentation",
    "keywords": "Property SvgWindow Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgWindow Gets the SVG Window object created by this converter. public WpfSvgWindow SvgWindow { get; } Property Value WpfSvgWindow An instance of WpfSvgWindow specifying the WPF implementation of the ISvgWindow."
  },
  "api/SharpVectors.Converters.SvgConverter.UseFrameXamlWriter.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.UseFrameXamlWriter.html",
    "title": "Property UseFrameXamlWriter | SharpVectors Documentation",
    "keywords": "Property UseFrameXamlWriter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll UseFrameXamlWriter Gets or sets a value indicating whether to use the .NET framework version of the XAML writer. public bool UseFrameXamlWriter { get; set; } Property Value bool This is true if the .NET framework version of the XAML writer is used; otherwise, a customized XAML writer, XmlXamlWriter, is used. The default is false. Remarks The customized XAML writer is optimized for the conversion process, and it is recommended as the writer, unless in cases where it fails to produce accurate result."
  },
  "api/SharpVectors.Converters.SvgConverter.XamlExt.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.XamlExt.html",
    "title": "Field XamlExt | SharpVectors Documentation",
    "keywords": "Field XamlExt Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public const string XamlExt = \".xaml\" Returns string"
  },
  "api/SharpVectors.Converters.SvgConverter._background.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._background.html",
    "title": "Field _background | SharpVectors Documentation",
    "keywords": "Field _background Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected SolidColorBrush _background Returns SolidColorBrush"
  },
  "api/SharpVectors.Converters.SvgConverter._dpiX.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._dpiX.html",
    "title": "Field _dpiX | SharpVectors Documentation",
    "keywords": "Field _dpiX Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected double _dpiX Returns double"
  },
  "api/SharpVectors.Converters.SvgConverter._dpiY.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._dpiY.html",
    "title": "Field _dpiY | SharpVectors Documentation",
    "keywords": "Field _dpiY Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected double _dpiY Returns double"
  },
  "api/SharpVectors.Converters.SvgConverter._isEmbedded.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._isEmbedded.html",
    "title": "Field _isEmbedded | SharpVectors Documentation",
    "keywords": "Field _isEmbedded Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected bool _isEmbedded Returns bool"
  },
  "api/SharpVectors.Converters.SvgConverter._saveXaml.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._saveXaml.html",
    "title": "Field _saveXaml | SharpVectors Documentation",
    "keywords": "Field _saveXaml Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected bool _saveXaml Returns bool"
  },
  "api/SharpVectors.Converters.SvgConverter._saveZaml.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._saveZaml.html",
    "title": "Field _saveZaml | SharpVectors Documentation",
    "keywords": "Field _saveZaml Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected bool _saveZaml Returns bool"
  },
  "api/SharpVectors.Converters.SvgConverter._useFrameXamlWriter.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._useFrameXamlWriter.html",
    "title": "Field _useFrameXamlWriter | SharpVectors Documentation",
    "keywords": "Field _useFrameXamlWriter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected bool _useFrameXamlWriter Returns bool"
  },
  "api/SharpVectors.Converters.SvgConverter._wpfRenderer.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._wpfRenderer.html",
    "title": "Field _wpfRenderer | SharpVectors Documentation",
    "keywords": "Field _wpfRenderer Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected WpfDrawingRenderer _wpfRenderer Returns WpfDrawingRenderer"
  },
  "api/SharpVectors.Converters.SvgConverter._wpfSettings.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._wpfSettings.html",
    "title": "Field _wpfSettings | SharpVectors Documentation",
    "keywords": "Field _wpfSettings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected WpfDrawingSettings _wpfSettings Returns WpfDrawingSettings"
  },
  "api/SharpVectors.Converters.SvgConverter._wpfWindow.html": {
    "href": "api/SharpVectors.Converters.SvgConverter._wpfWindow.html",
    "title": "Field _wpfWindow | SharpVectors Documentation",
    "keywords": "Field _wpfWindow Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Required designer variable. protected WpfSvgWindow _wpfWindow Returns WpfSvgWindow"
  },
  "api/SharpVectors.Converters.SvgConverter.html": {
    "href": "api/SharpVectors.Converters.SvgConverter.html",
    "title": "Class SvgConverter | SharpVectors Documentation",
    "keywords": "Class SvgConverter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This is the abstract base class for all SVG to WPF converters. public abstract class SvgConverter : DependencyObject, IDisposable Inheritance object DispatcherObject DependencyObject SvgConverter Implements IDisposable Derived DirectorySvgConverter FileSvgConverter FileSvgReader ImageSvgConverter ResourceSvgConverter StreamSvgConverter Inherited Members DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors SvgConverter() Initializes a new instance of the SvgConverter class with the default parameters and settings. SvgConverter(WpfDrawingSettings) Initializes a new instance of the SvgConverter class with the specified drawing or rendering settings. SvgConverter(bool, bool, WpfDrawingSettings) Initializes a new instance of the SvgConverter class with the specified drawing or rendering settings and the saving options. Fields BackupExt CompressedSvgExt CompressedXamlExt SvgExt XamlExt _background _dpiX _dpiY _isEmbedded _saveXaml _saveZaml _useFrameXamlWriter _wpfRenderer _wpfSettings _wpfWindow Required designer variable. Properties Background Gets or sets a brush that describes the background of a image. DpiX Gets the horizontal dots per inch (dpi) of the static image. DpiY Gets the vertical dots per inch (dpi) of the static image. DrawingSettings Gets the settings used by the rendering or drawing engine. SaveXaml Gets or sets a value indicating whether to save the conversion output to the XAML file. SaveZaml Gets or sets a value indicating whether to save the conversion output to the ZAML file. SvgDocument Gets the current SVG Document created by this converter. SvgWindow Gets the SVG Window object created by this converter. UseFrameXamlWriter Gets or sets a value indicating whether to use the .NET framework version of the XAML writer. Methods BeginProcessing(WpfDrawingDocument) Dispose() This releases all resources used by the SvgConverter object. Dispose(bool) This releases the unmanaged resources used by the SvgConverter and optionally releases the managed resources. EndProcessing() ~SvgConverter() This allows a converter to attempt to free resources and perform other cleanup operations before the converter is reclaimed by garbage collection. GetBitmapEncoder(ImageEncoderType) GetImageFileExtention(ImageEncoderType)"
  },
  "api/SharpVectors.Converters.SvgIcon.-ctor.html": {
    "href": "api/SharpVectors.Converters.SvgIcon.-ctor.html",
    "title": "Constructor SvgIcon | SharpVectors Documentation",
    "keywords": "Constructor SvgIcon Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgIcon() Initializes a new instance of the SvgIcon class. public SvgIcon()"
  },
  "api/SharpVectors.Converters.SvgIcon.Fill.html": {
    "href": "api/SharpVectors.Converters.SvgIcon.Fill.html",
    "title": "Property Fill | SharpVectors Documentation",
    "keywords": "Property Fill Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Fill public Brush Fill { get; set; } Property Value Brush"
  },
  "api/SharpVectors.Converters.SvgIcon.FillProperty.html": {
    "href": "api/SharpVectors.Converters.SvgIcon.FillProperty.html",
    "title": "Field FillProperty | SharpVectors Documentation",
    "keywords": "Field FillProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public static readonly DependencyProperty FillProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgIcon.OnLoadDrawing.html": {
    "href": "api/SharpVectors.Converters.SvgIcon.OnLoadDrawing.html",
    "title": "Method OnLoadDrawing | SharpVectors Documentation",
    "keywords": "Method OnLoadDrawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnLoadDrawing(DrawingGroup) protected override void OnLoadDrawing(DrawingGroup drawing) Parameters drawing DrawingGroup"
  },
  "api/SharpVectors.Converters.SvgIcon.OnUnloadDiagram.html": {
    "href": "api/SharpVectors.Converters.SvgIcon.OnUnloadDiagram.html",
    "title": "Method OnUnloadDiagram | SharpVectors Documentation",
    "keywords": "Method OnUnloadDiagram Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnUnloadDiagram() protected override void OnUnloadDiagram()"
  },
  "api/SharpVectors.Converters.SvgIcon.Stroke.html": {
    "href": "api/SharpVectors.Converters.SvgIcon.Stroke.html",
    "title": "Property Stroke | SharpVectors Documentation",
    "keywords": "Property Stroke Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Stroke public Brush Stroke { get; set; } Property Value Brush"
  },
  "api/SharpVectors.Converters.SvgIcon.StrokeProperty.html": {
    "href": "api/SharpVectors.Converters.SvgIcon.StrokeProperty.html",
    "title": "Field StrokeProperty | SharpVectors Documentation",
    "keywords": "Field StrokeProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll public static readonly DependencyProperty StrokeProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgIcon.html": {
    "href": "api/SharpVectors.Converters.SvgIcon.html",
    "title": "Class SvgIcon | SharpVectors Documentation",
    "keywords": "Class SvgIcon Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This is an extension of the WPF Image control to provide SVG-based image sources. public sealed class SvgIcon : SvgBitmap, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IUriContext Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Image SvgBitmap SvgIcon Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IUriContext Inherited Members SvgBitmap.UriSourceProperty SvgBitmap.SvgSourceProperty SvgBitmap.AppNameProperty SvgBitmap.AppName SvgBitmap.UriSource SvgBitmap.SvgSource Image.SourceProperty Image.StretchProperty Image.StretchDirectionProperty Image.ImageFailedEvent Image.Source Image.Stretch Image.StretchDirection Image.ImageFailed FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SvgIcon() Initializes a new instance of the SvgIcon class. Fields FillProperty StrokeProperty Properties Fill Stroke Methods OnLoadDrawing(DrawingGroup) OnUnloadDiagram()"
  },
  "api/SharpVectors.Converters.SvgImageBase.-ctor.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.-ctor.html",
    "title": "Constructor SvgImageBase | SharpVectors Documentation",
    "keywords": "Constructor SvgImageBase Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgImageBase() Initializes a new instance of the SvgImageBase class with the default parameters. protected SvgImageBase()"
  },
  "api/SharpVectors.Converters.SvgImageBase.AppName.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.AppName.html",
    "title": "Property AppName | SharpVectors Documentation",
    "keywords": "Property AppName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AppName Gets or sets the project or application name of the target assembly. public string AppName { get; set; } Property Value string A string specifying the application project name. Remarks This is optional and is only used to resolve the resource Uri at the design time."
  },
  "api/SharpVectors.Converters.SvgImageBase.CultureInfo.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.CultureInfo.html",
    "title": "Property CultureInfo | SharpVectors Documentation",
    "keywords": "Property CultureInfo Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll CultureInfo Gets or sets the main culture information used for rendering texts. public CultureInfo CultureInfo { get; set; } Property Value CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts."
  },
  "api/SharpVectors.Converters.SvgImageBase.GetAppName.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.GetAppName.html",
    "title": "Method GetAppName | SharpVectors Documentation",
    "keywords": "Method GetAppName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetAppName() protected void GetAppName()"
  },
  "api/SharpVectors.Converters.SvgImageBase.GetDrawing.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.GetDrawing.html",
    "title": "Method GetDrawing | SharpVectors Documentation",
    "keywords": "Method GetDrawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetDrawing(Uri) This converts the SVG resource specified by the Uri to DrawingGroup. protected virtual DrawingGroup GetDrawing(Uri svgSource) Parameters svgSource Uri A Uri specifying the source of the SVG resource. Returns DrawingGroup A DrawingGroup of the converted SVG resource."
  },
  "api/SharpVectors.Converters.SvgImageBase.GetEntryAssembly.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.GetEntryAssembly.html",
    "title": "Method GetEntryAssembly | SharpVectors Documentation",
    "keywords": "Method GetEntryAssembly Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetEntryAssembly() protected Assembly GetEntryAssembly() Returns Assembly"
  },
  "api/SharpVectors.Converters.SvgImageBase.GetExecutingAssembly.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.GetExecutingAssembly.html",
    "title": "Method GetExecutingAssembly | SharpVectors Documentation",
    "keywords": "Method GetExecutingAssembly Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetExecutingAssembly() protected Assembly GetExecutingAssembly() Returns Assembly"
  },
  "api/SharpVectors.Converters.SvgImageBase.GetImage.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.GetImage.html",
    "title": "Method GetImage | SharpVectors Documentation",
    "keywords": "Method GetImage Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetImage(Uri) This converts the SVG resource specified by the Uri to DrawingImage. protected virtual DrawingImage GetImage(Uri svgSource) Parameters svgSource Uri A Uri specifying the source of the SVG resource. Returns DrawingImage A DrawingImage of the converted SVG resource. Remarks This uses the GetDrawing(Uri) method to convert the SVG resource to DrawingGroup, which is then wrapped in DrawingImage."
  },
  "api/SharpVectors.Converters.SvgImageBase.IncludeRuntime.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.IncludeRuntime.html",
    "title": "Property IncludeRuntime | SharpVectors Documentation",
    "keywords": "Property IncludeRuntime Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. public bool IncludeRuntime { get; set; } Property Value bool This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false. The default is true. Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc."
  },
  "api/SharpVectors.Converters.SvgImageBase.IsDesignMode.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.IsDesignMode.html",
    "title": "Method IsDesignMode | SharpVectors Documentation",
    "keywords": "Method IsDesignMode Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IsDesignMode(IServiceProvider) protected bool IsDesignMode(IServiceProvider serviceProvider = null) Parameters serviceProvider IServiceProvider Returns bool"
  },
  "api/SharpVectors.Converters.SvgImageBase.OptimizePath.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.OptimizePath.html",
    "title": "Property OptimizePath | SharpVectors Documentation",
    "keywords": "Property OptimizePath Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. public bool OptimizePath { get; set; } Property Value bool This is true if the path geometry is optimized using the StreamGeometry; otherwise, it is false. The default is true."
  },
  "api/SharpVectors.Converters.SvgImageBase.TextAsGeometry.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.TextAsGeometry.html",
    "title": "Property TextAsGeometry | SharpVectors Documentation",
    "keywords": "Property TextAsGeometry Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. public bool TextAsGeometry { get; set; } Property Value bool This is true if texts are rendered as path geometries; otherwise, this is false. The default is false."
  },
  "api/SharpVectors.Converters.SvgImageBase._appName.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase._appName.html",
    "title": "Field _appName | SharpVectors Documentation",
    "keywords": "Field _appName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected string _appName Returns string"
  },
  "api/SharpVectors.Converters.SvgImageBase._culture.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase._culture.html",
    "title": "Field _culture | SharpVectors Documentation",
    "keywords": "Field _culture Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected CultureInfo _culture Returns CultureInfo"
  },
  "api/SharpVectors.Converters.SvgImageBase._includeRuntime.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase._includeRuntime.html",
    "title": "Field _includeRuntime | SharpVectors Documentation",
    "keywords": "Field _includeRuntime Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected bool _includeRuntime Returns bool"
  },
  "api/SharpVectors.Converters.SvgImageBase._optimizePath.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase._optimizePath.html",
    "title": "Field _optimizePath | SharpVectors Documentation",
    "keywords": "Field _optimizePath Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected bool _optimizePath Returns bool"
  },
  "api/SharpVectors.Converters.SvgImageBase._textAsGeometry.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase._textAsGeometry.html",
    "title": "Field _textAsGeometry | SharpVectors Documentation",
    "keywords": "Field _textAsGeometry Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll protected bool _textAsGeometry Returns bool"
  },
  "api/SharpVectors.Converters.SvgImageBase.html": {
    "href": "api/SharpVectors.Converters.SvgImageBase.html",
    "title": "Class SvgImageBase | SharpVectors Documentation",
    "keywords": "Class SvgImageBase Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This is an abstract implementation of a markup extension that enables the creation of DrawingImage from SVG sources. public abstract class SvgImageBase : MarkupExtension Inheritance object MarkupExtension SvgImageBase Derived SvgImageConverterExtension SvgImageExtension Inherited Members MarkupExtension.ProvideValue(IServiceProvider) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgImageBase() Initializes a new instance of the SvgImageBase class with the default parameters. Fields _appName _culture _includeRuntime _optimizePath _textAsGeometry Properties AppName Gets or sets the project or application name of the target assembly. CultureInfo Gets or sets the main culture information used for rendering texts. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. Methods GetAppName() GetDrawing(Uri) This converts the SVG resource specified by the Uri to DrawingGroup. GetEntryAssembly() GetExecutingAssembly() GetImage(Uri) This converts the SVG resource specified by the Uri to DrawingImage. IsDesignMode(IServiceProvider)"
  },
  "api/SharpVectors.Converters.SvgImageConverterExtension.-ctor.html": {
    "href": "api/SharpVectors.Converters.SvgImageConverterExtension.-ctor.html",
    "title": "Constructor SvgImageConverterExtension | SharpVectors Documentation",
    "keywords": "Constructor SvgImageConverterExtension Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgImageConverterExtension() Initializes a new instance of the SvgImageConverterExtension class with the default parameters. public SvgImageConverterExtension() SvgImageConverterExtension(Uri) public SvgImageConverterExtension(Uri baseUri) Parameters baseUri Uri"
  },
  "api/SharpVectors.Converters.SvgImageConverterExtension.Convert.html": {
    "href": "api/SharpVectors.Converters.SvgImageConverterExtension.Convert.html",
    "title": "Method Convert | SharpVectors Documentation",
    "keywords": "Method Convert Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Convert(object, Type, object, CultureInfo) Converts a value. public object Convert(object value, Type targetType, object parameter, CultureInfo culture) Parameters value object The value produced by the binding source. targetType Type The type of the binding target property. parameter object The converter parameter to use. culture CultureInfo The culture to use in the converter. Returns object A converted value. If the method returns null, the valid null value is used."
  },
  "api/SharpVectors.Converters.SvgImageConverterExtension.ConvertBack.html": {
    "href": "api/SharpVectors.Converters.SvgImageConverterExtension.ConvertBack.html",
    "title": "Method ConvertBack | SharpVectors Documentation",
    "keywords": "Method ConvertBack Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ConvertBack(object, Type, object, CultureInfo) Converts a value. public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) Parameters value object The value that is produced by the binding target. targetType Type The type to convert to. parameter object The converter parameter to use. culture CultureInfo The culture to use in the converter. Returns object A converted value. If the method returns null, the valid null value is used."
  },
  "api/SharpVectors.Converters.SvgImageConverterExtension.ProvideValue.html": {
    "href": "api/SharpVectors.Converters.SvgImageConverterExtension.ProvideValue.html",
    "title": "Method ProvideValue | SharpVectors Documentation",
    "keywords": "Method ProvideValue Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ProvideValue(IServiceProvider) Performs the conversion of a valid SVG source file to the DrawingImage that is set as the value of the target property for this markup extension. public override object ProvideValue(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Object that can provide services for the markup extension. Returns object This returns DrawingImage if successful; otherwise, it returns null."
  },
  "api/SharpVectors.Converters.SvgImageConverterExtension.html": {
    "href": "api/SharpVectors.Converters.SvgImageConverterExtension.html",
    "title": "Class SvgImageConverterExtension | SharpVectors Documentation",
    "keywords": "Class SvgImageConverterExtension Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This implements a markup extension that enables the creation of DrawingImage from SVG sources. public sealed class SvgImageConverterExtension : SvgImageBase, IValueConverter Inheritance object MarkupExtension SvgImageBase SvgImageConverterExtension Implements IValueConverter Inherited Members SvgImageBase.OptimizePath SvgImageBase.TextAsGeometry SvgImageBase.IncludeRuntime SvgImageBase.CultureInfo SvgImageBase.AppName object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks The SVG source file can be: From the web From the local computer (relative or absolute paths) From the resources. The rendering settings are provided as properties for customizations. Constructors SvgImageConverterExtension() Initializes a new instance of the SvgImageConverterExtension class with the default parameters. SvgImageConverterExtension(Uri) Methods Convert(object, Type, object, CultureInfo) Converts a value. ConvertBack(object, Type, object, CultureInfo) Converts a value. ProvideValue(IServiceProvider) Performs the conversion of a valid SVG source file to the DrawingImage that is set as the value of the target property for this markup extension."
  },
  "api/SharpVectors.Converters.SvgImageExtension.-ctor.html": {
    "href": "api/SharpVectors.Converters.SvgImageExtension.-ctor.html",
    "title": "Constructor SvgImageExtension | SharpVectors Documentation",
    "keywords": "Constructor SvgImageExtension Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgImageExtension() Initializes a new instance of the SvgImageExtension class with the default parameters. public SvgImageExtension() SvgImageExtension(string) Initializes a new instance of the SvgImageExtension class with the specified SVG file path. public SvgImageExtension(string svgPath) Parameters svgPath string"
  },
  "api/SharpVectors.Converters.SvgImageExtension.ProvideValue.html": {
    "href": "api/SharpVectors.Converters.SvgImageExtension.ProvideValue.html",
    "title": "Method ProvideValue | SharpVectors Documentation",
    "keywords": "Method ProvideValue Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll ProvideValue(IServiceProvider) Performs the conversion of a valid SVG source file to the DrawingImage that is set as the value of the target property for this markup extension. public override object ProvideValue(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Object that can provide services for the markup extension. Returns object This returns DrawingImage if successful; otherwise, it returns null."
  },
  "api/SharpVectors.Converters.SvgImageExtension.Source.html": {
    "href": "api/SharpVectors.Converters.SvgImageExtension.Source.html",
    "title": "Property Source | SharpVectors Documentation",
    "keywords": "Property Source Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Source Gets or sets the SVG source file. public string Source { get; set; } Property Value string A string specifying the path of the SVG source file. The default is null."
  },
  "api/SharpVectors.Converters.SvgImageExtension.html": {
    "href": "api/SharpVectors.Converters.SvgImageExtension.html",
    "title": "Class SvgImageExtension | SharpVectors Documentation",
    "keywords": "Class SvgImageExtension Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This implements a markup extension that enables the creation of DrawingImage from SVG sources. public sealed class SvgImageExtension : SvgImageBase Inheritance object MarkupExtension SvgImageBase SvgImageExtension Inherited Members SvgImageBase.OptimizePath SvgImageBase.TextAsGeometry SvgImageBase.IncludeRuntime SvgImageBase.CultureInfo SvgImageBase.AppName object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks The SVG source file can be: From the web From the local computer (relative or absolute paths) From the resources. The rendering settings are provided as properties for customizations. Constructors SvgImageExtension() Initializes a new instance of the SvgImageExtension class with the default parameters. SvgImageExtension(string) Initializes a new instance of the SvgImageExtension class with the specified SVG file path. Properties Source Gets or sets the SVG source file. Methods ProvideValue(IServiceProvider) Performs the conversion of a valid SVG source file to the DrawingImage that is set as the value of the target property for this markup extension."
  },
  "api/SharpVectors.Converters.SvgViewbox.-ctor.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.-ctor.html",
    "title": "Constructor SvgViewbox | SharpVectors Documentation",
    "keywords": "Constructor SvgViewbox Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgViewbox() Initializes a new instance of the SvgViewbox class. public SvgViewbox()"
  },
  "api/SharpVectors.Converters.SvgViewbox.Alert.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.Alert.html",
    "title": "Event Alert | SharpVectors Documentation",
    "keywords": "Event Alert Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This event occurs when an alert message needs to be displayed. public event EventHandler<SvgAlertArgs> Alert Returns EventHandler<SvgAlertArgs> Remarks If this event is not handled, the control may display the alert message using the standard message dialog. If you do not want to display the alert messages, handle this event and set Handled property to true."
  },
  "api/SharpVectors.Converters.SvgViewbox.AppName.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.AppName.html",
    "title": "Property AppName | SharpVectors Documentation",
    "keywords": "Property AppName Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AppName Gets or sets the name of the parent assembly for this element. [Bindable(true)] public string AppName { get; set; } Property Value string A string containing the name of the parent assembly or the name of the assembly containing SVG file referenced on this control in XAML, if the source type is Uri."
  },
  "api/SharpVectors.Converters.SvgViewbox.AppNameProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.AppNameProperty.html",
    "title": "Field AppNameProperty | SharpVectors Documentation",
    "keywords": "Field AppNameProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the AppName property. public static readonly DependencyProperty AppNameProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.AppTitle.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.AppTitle.html",
    "title": "Property AppTitle | SharpVectors Documentation",
    "keywords": "Property AppTitle Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AppTitle Gets or sets the application title, which is used to display the alert and error messages not handled by the user. public string AppTitle { get; set; } Property Value string A string containg the application title. This cannot be null or empty. The default is SharpVectors."
  },
  "api/SharpVectors.Converters.SvgViewbox.AutoSize.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.AutoSize.html",
    "title": "Property AutoSize | SharpVectors Documentation",
    "keywords": "Property AutoSize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll AutoSize Gets or sets a value indicating whether to automatically resize this Viewbox based on the size of the loaded drawing. public bool AutoSize { get; set; } Property Value bool This is true if this Viewbox is automatically resized based on the size of the loaded drawing; otherwise, it is false. The default is false, and the user-defined size or the parent assigned layout size is used."
  },
  "api/SharpVectors.Converters.SvgViewbox.BaseUri.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.BaseUri.html",
    "title": "Property BaseUri | SharpVectors Documentation",
    "keywords": "Property BaseUri Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll BaseUri Gets or sets the base URI of the current application context. public Uri BaseUri { get; set; } Property Value Uri The base URI of the application context."
  },
  "api/SharpVectors.Converters.SvgViewbox.CreateDrawing.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.CreateDrawing.html",
    "title": "Method CreateDrawing | SharpVectors Documentation",
    "keywords": "Method CreateDrawing Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup. protected virtual DrawingGroup CreateDrawing() Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(Uri svgSource, WpfDrawingSettings settings) Parameters svgSource Uri A Uri defining the path to the SVG source. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(Stream, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(Stream svgStream, WpfDrawingSettings settings) Parameters svgStream Stream A stream providing access to the SVG source data. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null. CreateDrawing(string, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. protected virtual DrawingGroup CreateDrawing(string svgSource, WpfDrawingSettings settings) Parameters svgSource string A stream providing access to the SVG source data. settings WpfDrawingSettings This specifies the settings used by the rendering or drawing engine. If this is null, the default settings is used. Returns DrawingGroup This returns DrawingGroup if successful; otherwise, it returns null."
  },
  "api/SharpVectors.Converters.SvgViewbox.CultureInfo.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.CultureInfo.html",
    "title": "Property CultureInfo | SharpVectors Documentation",
    "keywords": "Property CultureInfo Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll CultureInfo Gets or sets the main culture information used for rendering texts. public CultureInfo CultureInfo { get; set; } Property Value CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts."
  },
  "api/SharpVectors.Converters.SvgViewbox.DesignMode.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.DesignMode.html",
    "title": "Property DesignMode | SharpVectors Documentation",
    "keywords": "Property DesignMode Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll DesignMode Gets a value specifying whether the viewer control is in design-mode. public bool DesignMode { get; } Property Value bool This is true if the viewer control is in design-mode, otherwise; it is false."
  },
  "api/SharpVectors.Converters.SvgViewbox.DrawingCanvas.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.DrawingCanvas.html",
    "title": "Property DrawingCanvas | SharpVectors Documentation",
    "keywords": "Property DrawingCanvas Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll DrawingCanvas Gets the drawing canvas, which is the child of this Viewbox. public SvgDrawingCanvas DrawingCanvas { get; } Property Value SvgDrawingCanvas An instance of the SvgDrawingCanvas specifying the child of this Viewbox, which handles the rendering."
  },
  "api/SharpVectors.Converters.SvgViewbox.Drawings.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.Drawings.html",
    "title": "Property Drawings | SharpVectors Documentation",
    "keywords": "Property Drawings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Drawings Gets the drawing from the SVG file conversion. public DrawingGroup Drawings { get; } Property Value DrawingGroup An instance of the DrawingGroup specifying the converted drawings which is rendered in the canvas and displayed in the this viewbox."
  },
  "api/SharpVectors.Converters.SvgViewbox.EnsureViewboxPosition.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.EnsureViewboxPosition.html",
    "title": "Property EnsureViewboxPosition | SharpVectors Documentation",
    "keywords": "Property EnsureViewboxPosition Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. public bool EnsureViewboxPosition { get; set; } Property Value bool This determines whether a transformation is applied to the rendered drawing. For drawings where the top-left position of the viewbox is off the screen, due to negative values, this will ensure the drawing is visible. The default value is true. Set this value to false if you wish to apply your own transformations to the drawings."
  },
  "api/SharpVectors.Converters.SvgViewbox.EnsureViewboxSize.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.EnsureViewboxSize.html",
    "title": "Property EnsureViewboxSize | SharpVectors Documentation",
    "keywords": "Property EnsureViewboxSize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. public bool EnsureViewboxSize { get; set; } Property Value bool For image outputs, this will force the original size to be saved. The default value is false. However, the ImageSvgConverter converted sets this to true by default. Remarks Setting this to true will cause the rendering process to draw a transparent box around the output, if a viewbox is defined. This will ensure that the original image size is saved."
  },
  "api/SharpVectors.Converters.SvgViewbox.Error.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.Error.html",
    "title": "Event Error | SharpVectors Documentation",
    "keywords": "Event Error Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This event occurs when an error message needs to be displayed. public event EventHandler<SvgErrorArgs> Error Returns EventHandler<SvgErrorArgs> Remarks If this event is not handled, the control may display the error message using the standard message dialog. If you do not want to display the error messages, handle this event and set Handled property to true."
  },
  "api/SharpVectors.Converters.SvgViewbox.GetDrawingSettings.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.GetDrawingSettings.html",
    "title": "Method GetDrawingSettings | SharpVectors Documentation",
    "keywords": "Method GetDrawingSettings Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll GetDrawingSettings() Gets the rendering settings or options to be used in rendering the SVG in this control. protected virtual WpfDrawingSettings GetDrawingSettings() Returns WpfDrawingSettings An instance of WpfDrawingSettings specifying the rendering options or settings."
  },
  "api/SharpVectors.Converters.SvgViewbox.IgnoreRootViewbox.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.IgnoreRootViewbox.html",
    "title": "Property IgnoreRootViewbox | SharpVectors Documentation",
    "keywords": "Property IgnoreRootViewbox Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. public bool IgnoreRootViewbox { get; set; } Property Value bool For image outputs, this will force the original size to be saved. The default value is false. Remarks There are reported cases where are diagrams displayed in Inkscape program, but will not show when converted. These are diagrams on the drawing canvas of Inkspace but outside the svg viewbox. When converted the drawings are also converted but not displayed due to clipping. Setting this property to true will clear the clipping region on conversion."
  },
  "api/SharpVectors.Converters.SvgViewbox.IncludeRuntime.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.IncludeRuntime.html",
    "title": "Property IncludeRuntime | SharpVectors Documentation",
    "keywords": "Property IncludeRuntime Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. public bool IncludeRuntime { get; set; } Property Value bool This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false. The default is true. Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc."
  },
  "api/SharpVectors.Converters.SvgViewbox.InteractiveMode.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.InteractiveMode.html",
    "title": "Property InteractiveMode | SharpVectors Documentation",
    "keywords": "Property InteractiveMode Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll InteractiveMode Gets or sets a value specifying the interactive mode, which controls the level of information attached to the generated drawing. public SvgInteractiveModes InteractiveMode { get; set; } Property Value SvgInteractiveModes An enumeration of the type SvgInteractiveModes specifying the interactive mode. The default is None; no interactivity and may change in the future."
  },
  "api/SharpVectors.Converters.SvgViewbox.Load.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.Load.html",
    "title": "Method Load | SharpVectors Documentation",
    "keywords": "Method Load Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Load(Uri, bool) This sets the source SVG for a SvgViewbox by using the supplied Uniform Resource Identifier (URI) and optionally processing the result asynchronously. public bool Load(Uri uriSource, bool useAsync = false) Parameters uriSource Uri A reference to the SVG source file. useAsync bool A value indicating whether to process the result asynchronously. The default value is false, the SVG conversion is processed synchronously. Returns bool A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Load(string, bool) This sets the source SVG for a SvgViewbox by accessing text contents and optionally processing the result asynchronously. public bool Load(string svgSource, bool useAsync = false) Parameters svgSource string The stream source that sets the SVG source value. useAsync bool A value indicating whether to process the result asynchronously. The default value is false, the SVG conversion is processed synchronously. Returns bool A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Load(Stream, bool, bool) This sets the source SVG for a SvgViewbox by accessing a stream and optionally processing the result asynchronously. public bool Load(Stream streamSource, bool useCopyStream = true, bool useAsync = false) Parameters streamSource Stream The stream source that sets the SVG source value. useCopyStream bool A value specifying whether to use a copy of the stream. The default is true, the SVG source stream is copied, rendered and stored. useAsync bool A value indicating whether to process the result asynchronously. The default value is false, the SVG conversion is processed synchronously. Returns bool A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy."
  },
  "api/SharpVectors.Converters.SvgViewbox.LoadAsync.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.LoadAsync.html",
    "title": "Method LoadAsync | SharpVectors Documentation",
    "keywords": "Method LoadAsync Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll LoadAsync(Uri) This sets the source SVG for a SvgViewbox by using the supplied Uniform Resource Identifier (URI) and processing the result asynchronously. public Task<bool> LoadAsync(Uri uriSource) Parameters uriSource Uri A reference to the SVG source file. Returns Task<bool> A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. LoadAsync(string) This sets the source SVG for a SvgViewbox by accessing text contents and processing the result asynchronously. public Task<bool> LoadAsync(string svgSource) Parameters svgSource string The stream source that sets the SVG source value. Returns Task<bool> A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. LoadAsync(Stream, bool) This sets the source SVG for a SvgViewbox by accessing a stream and processing the result asynchronously. public Task<bool> LoadAsync(Stream streamSource, bool useCopyStream = true) Parameters streamSource Stream The stream source that sets the SVG source value. useCopyStream bool A value specifying whether to use a copy of the stream. The default is true, the SVG source stream is copied, rendered and stored. Returns Task<bool> A value that indicates whether the operation was successful. This is true if successful, otherwise, it is false. Remarks The control will by default create a copy of the source stream to prevent any effect of disposing. If the source stream is stored, then use the useCopyStream to prevent the control from creating its own copy."
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageBackground.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageBackground.html",
    "title": "Property MessageBackground | SharpVectors Documentation",
    "keywords": "Property MessageBackground Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageBackground Gets or sets a brush that describes the background of a message text. public Brush MessageBackground { get; set; } Property Value Brush A Brush specifying the brush that is used to fill the background of the message text. The default is PapayaWhip. If set to null, the background will not be drawn."
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageBackgroundProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageBackgroundProperty.html",
    "title": "Field MessageBackgroundProperty | SharpVectors Documentation",
    "keywords": "Field MessageBackgroundProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageBackground property. Flags: Can be used in style rules Default Value: PapayaWhip public static readonly DependencyProperty MessageBackgroundProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageFillBrush.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageFillBrush.html",
    "title": "Property MessageFillBrush | SharpVectors Documentation",
    "keywords": "Property MessageFillBrush Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageFillBrush Gets or sets the brush with which to fill the message text. This is optional, and can be null. If the brush is null, no fill is drawn. public Brush MessageFillBrush { get; set; } Property Value Brush A Brush specifying the fill of the message text. The default is Gold. Remarks If both the fill and stroke brushes of the message text are null, no text is drawn."
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageFillBrushProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageFillBrushProperty.html",
    "title": "Field MessageFillBrushProperty | SharpVectors Documentation",
    "keywords": "Field MessageFillBrushProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageFillBrush property. Flags: Can be used in style rules Default Value: Gold public static readonly DependencyProperty MessageFillBrushProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageFontFamily.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageFontFamily.html",
    "title": "Property MessageFontFamily | SharpVectors Documentation",
    "keywords": "Property MessageFontFamily Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageFontFamily Gets or sets the font family of the desired font for the message text. public FontFamily MessageFontFamily { get; set; } Property Value FontFamily A FontFamily specifying the font for the message text. The default value is MessageFontFamily."
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageFontFamilyProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageFontFamilyProperty.html",
    "title": "Field MessageFontFamilyProperty | SharpVectors Documentation",
    "keywords": "Field MessageFontFamilyProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageFontFamily property. Flags: Can be used in style rules Default Value: System Dialog Font public static readonly DependencyProperty MessageFontFamilyProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageFontSize.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageFontSize.html",
    "title": "Property MessageFontSize | SharpVectors Documentation",
    "keywords": "Property MessageFontSize Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageFontSize Gets or sets the size of the desired font for the message text. public double MessageFontSize { get; set; } Property Value double A value specifying the font size of the message text. The default is 48 pixels. The font size must be a positive number."
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageFontSizeProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageFontSizeProperty.html",
    "title": "Field MessageFontSizeProperty | SharpVectors Documentation",
    "keywords": "Field MessageFontSizeProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageFontSize property. Flags: Can be used in style rules Default Value: 48 pixels public static readonly DependencyProperty MessageFontSizeProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageOpacity.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageOpacity.html",
    "title": "Property MessageOpacity | SharpVectors Documentation",
    "keywords": "Property MessageOpacity Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageOpacity Gets or sets the opacity factor applied to the entire message text when it is rendered in the user interface (UI). public double MessageOpacity { get; set; } Property Value double The opacity factor. Default opacity is 1.0. Expected values are between 0.0 and 1.0."
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageOpacityProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageOpacityProperty.html",
    "title": "Field MessageOpacityProperty | SharpVectors Documentation",
    "keywords": "Field MessageOpacityProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageOpacity property. Flags: Can be used in style rules Default Value: 1 (full opacity) public static readonly DependencyProperty MessageOpacityProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageStrokeBrush.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageStrokeBrush.html",
    "title": "Property MessageStrokeBrush | SharpVectors Documentation",
    "keywords": "Property MessageStrokeBrush Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageStrokeBrush Gets or sets the brush of the Pen with which to stroke the message text. This is optional, and can be null. If the brush is null, no stroke is drawn. public Brush MessageStrokeBrush { get; set; } Property Value Brush A Brush specifying the brush of the Pen for stroking the message text. The default is Maroon. Remarks If both the fill and stroke brushes of the message text are null, no text is drawn."
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageStrokeBrushProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageStrokeBrushProperty.html",
    "title": "Field MessageStrokeBrushProperty | SharpVectors Documentation",
    "keywords": "Field MessageStrokeBrushProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageStrokeBrush property. Flags: Can be used in style rules Default Value: Maroon public static readonly DependencyProperty MessageStrokeBrushProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageText.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageText.html",
    "title": "Property MessageText | SharpVectors Documentation",
    "keywords": "Property MessageText Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll MessageText Gets or sets the content of the message. public string MessageText { get; set; } Property Value string A string specifying the content of the message text. The default is \"Loading...\". This value can be overriden in the Unload(bool, string) method."
  },
  "api/SharpVectors.Converters.SvgViewbox.MessageTextProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.MessageTextProperty.html",
    "title": "Field MessageTextProperty | SharpVectors Documentation",
    "keywords": "Field MessageTextProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll The DependencyProperty for the MessageText property. Flags: Can be used in style rules Default Value: \"Loading...\" public static readonly DependencyProperty MessageTextProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.OnAutoSizeChanged.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.OnAutoSizeChanged.html",
    "title": "Method OnAutoSizeChanged | SharpVectors Documentation",
    "keywords": "Method OnAutoSizeChanged Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnAutoSizeChanged() This handles changes in the automatic resizing property of this control. protected virtual void OnAutoSizeChanged()"
  },
  "api/SharpVectors.Converters.SvgViewbox.OnHandleAlert.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.OnHandleAlert.html",
    "title": "Method OnHandleAlert | SharpVectors Documentation",
    "keywords": "Method OnHandleAlert Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnHandleAlert(string) protected virtual void OnHandleAlert(string message) Parameters message string"
  },
  "api/SharpVectors.Converters.SvgViewbox.OnHandleError.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.OnHandleError.html",
    "title": "Method OnHandleError | SharpVectors Documentation",
    "keywords": "Method OnHandleError Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnHandleError(string, Exception) protected virtual void OnHandleError(string message, Exception exception) Parameters message string exception Exception"
  },
  "api/SharpVectors.Converters.SvgViewbox.OnInitialized.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.OnInitialized.html",
    "title": "Method OnInitialized | SharpVectors Documentation",
    "keywords": "Method OnInitialized Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. protected override void OnInitialized(EventArgs e) Parameters e EventArgs Event data for the event."
  },
  "api/SharpVectors.Converters.SvgViewbox.OnSettingsChanged.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.OnSettingsChanged.html",
    "title": "Method OnSettingsChanged | SharpVectors Documentation",
    "keywords": "Method OnSettingsChanged Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OnSettingsChanged() This handles changes in the rendering settings of this control. protected virtual void OnSettingsChanged()"
  },
  "api/SharpVectors.Converters.SvgViewbox.OptimizePath.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.OptimizePath.html",
    "title": "Property OptimizePath | SharpVectors Documentation",
    "keywords": "Property OptimizePath Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. public bool OptimizePath { get; set; } Property Value bool This is true if the path geometry is optimized using the StreamGeometry; otherwise, it is false. The default is true."
  },
  "api/SharpVectors.Converters.SvgViewbox.Source.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.Source.html",
    "title": "Property Source | SharpVectors Documentation",
    "keywords": "Property Source Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Source Gets or sets the path to the SVG file to load into this Viewbox. public Uri Source { get; set; } Property Value Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any rendered SVG diagram. See Also UriSource SvgSource StreamSource"
  },
  "api/SharpVectors.Converters.SvgViewbox.SourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.SourceProperty.html",
    "title": "Field SourceProperty | SharpVectors Documentation",
    "keywords": "Field SourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the Source dependency property. public static readonly DependencyProperty SourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.StreamSource.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.StreamSource.html",
    "title": "Property StreamSource | SharpVectors Documentation",
    "keywords": "Property StreamSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll StreamSource Gets or sets the Stream to the SVG source to load into this Viewbox. public Stream StreamSource { get; set; } Property Value Stream A Stream specifying the stream to the SVG source. Settings this to null will close any opened diagram. Remarks The stream source has precedence over the Uri Source property. If set (not null), the stream source will be rendered instead of the Uri source. WPF controls do not implement the IDisposable interface and cannot properly dispose any stream set to it. To avoid this issue and also any problem of the user accidentally closing the stream, this control makes a copy of the stream to memory stream. See Also Source SvgSource UriSource"
  },
  "api/SharpVectors.Converters.SvgViewbox.StreamSourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.StreamSourceProperty.html",
    "title": "Field StreamSourceProperty | SharpVectors Documentation",
    "keywords": "Field StreamSourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the StreamSource dependency property. public static readonly DependencyProperty StreamSourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.SvgSource.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.SvgSource.html",
    "title": "Property SvgSource | SharpVectors Documentation",
    "keywords": "Property SvgSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll SvgSource Gets or sets the SVG contents to load into this Viewbox. public string SvgSource { get; set; } Property Value string A string specifying the embedded SVG contents. Settings this to null will close any opened diagram. See Also UriSource StreamSource"
  },
  "api/SharpVectors.Converters.SvgViewbox.SvgSourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.SvgSourceProperty.html",
    "title": "Field SvgSourceProperty | SharpVectors Documentation",
    "keywords": "Field SvgSourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the SvgSource dependency property. public static readonly DependencyProperty SvgSourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.TextAsGeometry.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.TextAsGeometry.html",
    "title": "Property TextAsGeometry | SharpVectors Documentation",
    "keywords": "Property TextAsGeometry Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. public bool TextAsGeometry { get; set; } Property Value bool This is true if texts are rendered as path geometries; otherwise, this is false. The default is false. Remarks The text features of the SVG format are complex and difficult to fully support without directly reverting the text paths (or glyph geometry). This options will, therefore, be removed in future versions of the library, as it is not always honored when set to false."
  },
  "api/SharpVectors.Converters.SvgViewbox.Unload.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.Unload.html",
    "title": "Method Unload | SharpVectors Documentation",
    "keywords": "Method Unload Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Unload(bool, string) This clears the SvgViewbox of any drawn diagram and optionally displays a message. public void Unload(bool displayMessage = false, string message = \"\") Parameters displayMessage bool A value indicating whether to display a message after clearing the SVG rendered diagram. The value is false, not message is displayed. message string This specifies the message to be displayed after clearing the diagram. Setting this parameter to a non-empty text will override any message set in the MessageText. The default value is Empty."
  },
  "api/SharpVectors.Converters.SvgViewbox.UriSource.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.UriSource.html",
    "title": "Property UriSource | SharpVectors Documentation",
    "keywords": "Property UriSource Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll UriSource Gets or sets the path to the SVG file to load into this Viewbox. public Uri UriSource { get; set; } Property Value Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any rendered SVG diagram. Remarks This is the same as the Source property, and added for consistency. See Also SvgSource StreamSource"
  },
  "api/SharpVectors.Converters.SvgViewbox.UriSourceProperty.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.UriSourceProperty.html",
    "title": "Field UriSourceProperty | SharpVectors Documentation",
    "keywords": "Field UriSourceProperty Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Identifies the UriSource dependency property. public static readonly DependencyProperty UriSourceProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Converters.SvgViewbox.html": {
    "href": "api/SharpVectors.Converters.SvgViewbox.html",
    "title": "Class SvgViewbox | SharpVectors Documentation",
    "keywords": "Class SvgViewbox Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This is a Viewbox control for viewing SVG file in WPF applications. public class SvgViewbox : Viewbox, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild, ISvgControl, IUriContext Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Decorator Viewbox SvgViewbox Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild ISvgControl IUriContext Inherited Members Viewbox.StretchProperty Viewbox.StretchDirectionProperty Viewbox.GetVisualChild(int) Viewbox.MeasureOverride(Size) Viewbox.ArrangeOverride(Size) Viewbox.Child Viewbox.VisualChildrenCount Viewbox.LogicalChildren Viewbox.Stretch Viewbox.StretchDirection FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.OnRender(DrawingContext) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Remarks It wraps the drawing canvas, SvgDrawingCanvas, instead of image control, therefore any interactivity support implemented in the drawing canvas will be available in the Viewbox. Constructors SvgViewbox() Initializes a new instance of the SvgViewbox class. Fields AppNameProperty The DependencyProperty for the AppName property. MessageBackgroundProperty The DependencyProperty for the MessageBackground property. Flags: Can be used in style rules Default Value: PapayaWhip MessageFillBrushProperty The DependencyProperty for the MessageFillBrush property. Flags: Can be used in style rules Default Value: Gold MessageFontFamilyProperty The DependencyProperty for the MessageFontFamily property. Flags: Can be used in style rules Default Value: System Dialog Font MessageFontSizeProperty The DependencyProperty for the MessageFontSize property. Flags: Can be used in style rules Default Value: 48 pixels MessageOpacityProperty The DependencyProperty for the MessageOpacity property. Flags: Can be used in style rules Default Value: 1 (full opacity) MessageStrokeBrushProperty The DependencyProperty for the MessageStrokeBrush property. Flags: Can be used in style rules Default Value: Maroon MessageTextProperty The DependencyProperty for the MessageText property. Flags: Can be used in style rules Default Value: \"Loading...\" SourceProperty Identifies the Source dependency property. StreamSourceProperty Identifies the StreamSource dependency property. SvgSourceProperty Identifies the SvgSource dependency property. UriSourceProperty Identifies the UriSource dependency property. Properties AppName Gets or sets the name of the parent assembly for this element. AppTitle Gets or sets the application title, which is used to display the alert and error messages not handled by the user. AutoSize Gets or sets a value indicating whether to automatically resize this Viewbox based on the size of the loaded drawing. BaseUri Gets or sets the base URI of the current application context. CultureInfo Gets or sets the main culture information used for rendering texts. DesignMode Gets a value specifying whether the viewer control is in design-mode. DrawingCanvas Gets the drawing canvas, which is the child of this Viewbox. Drawings Gets the drawing from the SVG file conversion. EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. IgnoreRootViewbox Gets or sets a value to indicate turning off viewbox at the root of the drawing. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. InteractiveMode Gets or sets a value specifying the interactive mode, which controls the level of information attached to the generated drawing. MessageBackground Gets or sets a brush that describes the background of a message text. MessageFillBrush Gets or sets the brush with which to fill the message text. This is optional, and can be null. If the brush is null, no fill is drawn. MessageFontFamily Gets or sets the font family of the desired font for the message text. MessageFontSize Gets or sets the size of the desired font for the message text. MessageOpacity Gets or sets the opacity factor applied to the entire message text when it is rendered in the user interface (UI). MessageStrokeBrush Gets or sets the brush of the Pen with which to stroke the message text. This is optional, and can be null. If the brush is null, no stroke is drawn. MessageText Gets or sets the content of the message. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. Source Gets or sets the path to the SVG file to load into this Viewbox. StreamSource Gets or sets the Stream to the SVG source to load into this Viewbox. SvgSource Gets or sets the SVG contents to load into this Viewbox. TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. UriSource Gets or sets the path to the SVG file to load into this Viewbox. Methods CreateDrawing() Performs the conversion of a valid SVG source to the DrawingGroup. CreateDrawing(Stream, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. CreateDrawing(string, WpfDrawingSettings) Performs the conversion of a valid SVG source stream to the DrawingGroup. CreateDrawing(Uri, WpfDrawingSettings) Performs the conversion of a valid SVG source file to the DrawingGroup. GetDrawingSettings() Gets the rendering settings or options to be used in rendering the SVG in this control. Load(Stream, bool, bool) This sets the source SVG for a SvgViewbox by accessing a stream and optionally processing the result asynchronously. Load(string, bool) This sets the source SVG for a SvgViewbox by accessing text contents and optionally processing the result asynchronously. Load(Uri, bool) This sets the source SVG for a SvgViewbox by using the supplied Uniform Resource Identifier (URI) and optionally processing the result asynchronously. LoadAsync(Stream, bool) This sets the source SVG for a SvgViewbox by accessing a stream and processing the result asynchronously. LoadAsync(string) This sets the source SVG for a SvgViewbox by accessing text contents and processing the result asynchronously. LoadAsync(Uri) This sets the source SVG for a SvgViewbox by using the supplied Uniform Resource Identifier (URI) and processing the result asynchronously. OnAutoSizeChanged() This handles changes in the automatic resizing property of this control. OnHandleAlert(string) OnHandleError(string, Exception) OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true. OnSettingsChanged() This handles changes in the rendering settings of this control. Unload(bool, string) This clears the SvgViewbox of any drawn diagram and optionally displays a message. Events Alert This event occurs when an alert message needs to be displayed. Error This event occurs when an error message needs to be displayed. See Also SvgCanvas"
  },
  "api/SharpVectors.Converters.XmlXamlWriter.-ctor.html": {
    "href": "api/SharpVectors.Converters.XmlXamlWriter.-ctor.html",
    "title": "Constructor XmlXamlWriter | SharpVectors Documentation",
    "keywords": "Constructor XmlXamlWriter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll XmlXamlWriter() Initializes a new instance of the XmlXamlWriter class with the default settings. public XmlXamlWriter() XmlXamlWriter(WpfDrawingSettings) Initializes a new instance of the XmlXamlWriter class with the specified settings. public XmlXamlWriter(WpfDrawingSettings settings) Parameters settings WpfDrawingSettings An instance of WpfDrawingSettings specifying the rendering options."
  },
  "api/SharpVectors.Converters.XmlXamlWriter.Convert.html": {
    "href": "api/SharpVectors.Converters.XmlXamlWriter.Convert.html",
    "title": "Method Convert | SharpVectors Documentation",
    "keywords": "Method Convert Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Convert(object) Returns a Extensible Application Markup Language (XAML) string that serializes the provided object. public static string Convert(object obj) Parameters obj object The element to be serialized. Typically, this is the root element of a page or application. Returns string Extensible Application Markup Language (XAML) string that can be written to a stream or file. The logical tree of all elements that fall under the provided obj element will be serialized."
  },
  "api/SharpVectors.Converters.XmlXamlWriter.IncludeNullExtension.html": {
    "href": "api/SharpVectors.Converters.XmlXamlWriter.IncludeNullExtension.html",
    "title": "Property IncludeNullExtension | SharpVectors Documentation",
    "keywords": "Property IncludeNullExtension Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IncludeNullExtension Gets or sets a value indicating whether to include a null markup extension in the output XAML. public bool IncludeNullExtension { get; set; } Property Value bool This is true if the null markup extension is included in the output XAML; otherwise, it is false. The default is false."
  },
  "api/SharpVectors.Converters.XmlXamlWriter.IndentSpaces.html": {
    "href": "api/SharpVectors.Converters.XmlXamlWriter.IndentSpaces.html",
    "title": "Property IndentSpaces | SharpVectors Documentation",
    "keywords": "Property IndentSpaces Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll IndentSpaces Gets or sets the number of character string to use when indenting. public int IndentSpaces { get; set; } Property Value int A non-negative value (from 0 to 8) specifying the number of character string. The default is 2 or two spaces."
  },
  "api/SharpVectors.Converters.XmlXamlWriter.NumberDecimalDigits.html": {
    "href": "api/SharpVectors.Converters.XmlXamlWriter.NumberDecimalDigits.html",
    "title": "Property NumberDecimalDigits | SharpVectors Documentation",
    "keywords": "Property NumberDecimalDigits Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll NumberDecimalDigits public int NumberDecimalDigits { get; set; } Property Value int"
  },
  "api/SharpVectors.Converters.XmlXamlWriter.Save.html": {
    "href": "api/SharpVectors.Converters.XmlXamlWriter.Save.html",
    "title": "Method Save | SharpVectors Documentation",
    "keywords": "Method Save Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll Save(object) Returns a Extensible Application Markup Language (XAML) string that serializes the provided object. public string Save(object obj) Parameters obj object The element to be serialized. Typically, this is the root element of a page or application. Returns string Extensible Application Markup Language (XAML) string that can be written to a stream or file. The logical tree of all elements that fall under the provided obj element will be serialized. Save(object, Stream) Saves Extensible Application Markup Language (XAML) information into a provided stream to serialize the provided object. public void Save(object obj, Stream stream) Parameters obj object The element to be serialized. Typically, this is the root element of a page or application. stream Stream Destination stream for the serialized XAML information. Save(object, TextWriter) Saves Extensible Application Markup Language (XAML) information as the source for a provided text writer object. The output of the text writer can then be used to serialize the provided object. public void Save(object obj, TextWriter writer) Parameters obj object The element to be serialized. Typically, this is the root element of a page or application. writer TextWriter TextWriter instance to use to write the serialized XAML information. Save(object, XmlWriter) Saves Extensible Application Markup Language (XAML) information as the source for a provided XML writer object. The output of the XML writer can then be used to serialize the provided object. public void Save(object obj, XmlWriter xmlWriter) Parameters obj object The element to be serialized. Typically, this is the root element of a page or application. xmlWriter XmlWriter Writer to use to write the serialized XAML information."
  },
  "api/SharpVectors.Converters.XmlXamlWriter.html": {
    "href": "api/SharpVectors.Converters.XmlXamlWriter.html",
    "title": "Class XmlXamlWriter | SharpVectors Documentation",
    "keywords": "Class XmlXamlWriter Namespace SharpVectors.Converters Assembly SharpVectors.Converters.Wpf.dll This is a customized XAML writer, which provides Extensible Application Markup Language (XAML) serialization of provided runtime objects into XAML. public sealed class XmlXamlWriter Inheritance object XmlXamlWriter Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks This is designed to be used by the SVG to XAML converters, and may not be useful in general applications. The writer is created with help from the following posts (Archived Forums): XAML Serialization Replacement Saving and Loading of Interface in XAML Format XamlWriter, MarkupObject How to? Constructors XmlXamlWriter() Initializes a new instance of the XmlXamlWriter class with the default settings. XmlXamlWriter(WpfDrawingSettings) Initializes a new instance of the XmlXamlWriter class with the specified settings. Properties IncludeNullExtension Gets or sets a value indicating whether to include a null markup extension in the output XAML. IndentSpaces Gets or sets the number of character string to use when indenting. NumberDecimalDigits Methods Convert(object) Returns a Extensible Application Markup Language (XAML) string that serializes the provided object. Save(object) Returns a Extensible Application Markup Language (XAML) string that serializes the provided object. Save(object, Stream) Saves Extensible Application Markup Language (XAML) information into a provided stream to serialize the provided object. Save(object, TextWriter) Saves Extensible Application Markup Language (XAML) information as the source for a provided text writer object. The output of the text writer can then be used to serialize the provided object. Save(object, XmlWriter) Saves Extensible Application Markup Language (XAML) information as the source for a provided XML writer object. The output of the XML writer can then be used to serialize the provided object."
  },
  "api/SharpVectors.Converters.html": {
    "href": "api/SharpVectors.Converters.html",
    "title": "Namespace SharpVectors.Converters | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Converters The SharpVectors.Converters namespace contains a bunch of classes and interfaces. Classes DirectorySvgConverter This converts a directory (and optionally the sub-directories) of SVG files to XAML files in a specified directory, maintaining the original directory structure. It uses FileSvgConverter or ImageSvgConverter converter to process each SVG file in the specified directory. EmbeddedImageSerializerArgs EmbeddedImageSerializerVisitor EmbeddedImageVisitor FileSvgConverter This converts an SVG file to the corresponding XAML file, which can be viewed in WPF application. The root object in the converted file is DrawingGroup. FileSvgReader This converts a SVG file to DrawingGroup object, and can optionally save the result to a file as XAML. FontFamilyVisitor ImageSvgConverter This converts the SVG file to static or bitmap image, which is saved to a file. LinkVisitor ResourceSvgConverter ResourceSvgConverter.ResourceItem ShapeSvgCanvas Component that visualizes svg document contents. StreamSvgConverter This converts the SVG file to static or bitmap image, which is saved to a file. SvgBitmap This is an extension of the WPF Image control to provide SVG-based image sources. SvgCanvas This is a Canvas control for viewing SVG file in WPF applications. SvgControl SvgConverter This is the abstract base class for all SVG to WPF converters. SvgIcon This is an extension of the WPF Image control to provide SVG-based image sources. SvgImageBase This is an abstract implementation of a markup extension that enables the creation of DrawingImage from SVG sources. SvgImageConverterExtension This implements a markup extension that enables the creation of DrawingImage from SVG sources. SvgImageExtension This implements a markup extension that enables the creation of DrawingImage from SVG sources. SvgViewbox This is a Viewbox control for viewing SVG file in WPF applications. XmlXamlWriter This is a customized XAML writer, which provides Extensible Application Markup Language (XAML) serialization of provided runtime objects into XAML. Enums ImageEncoderType This specifies the encoder type used to encode a collection of bitmap frame objects to an image stream. This is used by the ImageSvgConverter converter. SvgControlSizeMode"
  },
  "api/SharpVectors.Dom.Attribute.-ctor.html": {
    "href": "api/SharpVectors.Dom.Attribute.-ctor.html",
    "title": "Constructor Attribute | SharpVectors Documentation",
    "keywords": "Constructor Attribute Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Attribute(string, string, string, Document) public Attribute(string prefix, string localName, string namespaceUri, Document document) Parameters prefix string localName string namespaceUri string document Document"
  },
  "api/SharpVectors.Dom.Attribute.html": {
    "href": "api/SharpVectors.Dom.Attribute.html",
    "title": "Class Attribute | SharpVectors Documentation",
    "keywords": "Class Attribute Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for Attribute. public class Attribute : XmlAttribute, ICloneable, IEnumerable, IXPathNavigable, IAttribute, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlAttribute Attribute Implements ICloneable IEnumerable IXPathNavigable IAttribute INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlAttribute.CloneNode(bool) XmlAttribute.InsertBefore(XmlNode, XmlNode) XmlAttribute.InsertAfter(XmlNode, XmlNode) XmlAttribute.ReplaceChild(XmlNode, XmlNode) XmlAttribute.RemoveChild(XmlNode) XmlAttribute.PrependChild(XmlNode) XmlAttribute.AppendChild(XmlNode) XmlAttribute.WriteTo(XmlWriter) XmlAttribute.WriteContentTo(XmlWriter) XmlAttribute.ParentNode XmlAttribute.Name XmlAttribute.LocalName XmlAttribute.NamespaceURI XmlAttribute.Prefix XmlAttribute.NodeType XmlAttribute.OwnerDocument XmlAttribute.Value XmlAttribute.SchemaInfo XmlAttribute.InnerText XmlAttribute.Specified XmlAttribute.OwnerElement XmlAttribute.InnerXml XmlAttribute.BaseURI XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Attribute(string, string, string, Document)"
  },
  "api/SharpVectors.Dom.CDataSection.-ctor.html": {
    "href": "api/SharpVectors.Dom.CDataSection.-ctor.html",
    "title": "Constructor CDataSection | SharpVectors Documentation",
    "keywords": "Constructor CDataSection Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CDataSection(string, Document) public CDataSection(string data, Document document) Parameters data string document Document"
  },
  "api/SharpVectors.Dom.CDataSection.Value.html": {
    "href": "api/SharpVectors.Dom.CDataSection.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Value Gets or sets the value of the node. public override string Value { get; set; } Property Value string The value of the node. Exceptions ArgumentException Node is read-only."
  },
  "api/SharpVectors.Dom.CDataSection.html": {
    "href": "api/SharpVectors.Dom.CDataSection.html",
    "title": "Class CDataSection | SharpVectors Documentation",
    "keywords": "Class CDataSection Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for CDataSection. public class CDataSection : XmlCDataSection, ICloneable, IEnumerable, IXPathNavigable, ICDataSection, ICharacterData, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlCharacterData XmlCDataSection CDataSection Implements ICloneable IEnumerable IXPathNavigable ICDataSection ICharacterData INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlCDataSection.CloneNode(bool) XmlCDataSection.WriteTo(XmlWriter) XmlCDataSection.WriteContentTo(XmlWriter) XmlCDataSection.Name XmlCDataSection.LocalName XmlCDataSection.NodeType XmlCDataSection.ParentNode XmlCharacterData.Substring(int, int) XmlCharacterData.AppendData(string) XmlCharacterData.InsertData(int, string) XmlCharacterData.DeleteData(int, int) XmlCharacterData.ReplaceData(int, int, string) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CDataSection(string, Document) Properties Value Gets or sets the value of the node."
  },
  "api/SharpVectors.Dom.Comment.-ctor.html": {
    "href": "api/SharpVectors.Dom.Comment.-ctor.html",
    "title": "Constructor Comment | SharpVectors Documentation",
    "keywords": "Constructor Comment Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Comment(string, Document) public Comment(string comment, Document document) Parameters comment string document Document"
  },
  "api/SharpVectors.Dom.Comment.Value.html": {
    "href": "api/SharpVectors.Dom.Comment.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Value Gets or sets the value of the node. public override string Value { get; set; } Property Value string The value of the node. Exceptions ArgumentException Node is read-only."
  },
  "api/SharpVectors.Dom.Comment.html": {
    "href": "api/SharpVectors.Dom.Comment.html",
    "title": "Class Comment | SharpVectors Documentation",
    "keywords": "Class Comment Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for Comment. public class Comment : XmlComment, ICloneable, IEnumerable, IXPathNavigable, IComment, ICharacterData, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlCharacterData XmlComment Comment Implements ICloneable IEnumerable IXPathNavigable IComment ICharacterData INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlComment.CloneNode(bool) XmlComment.WriteTo(XmlWriter) XmlComment.WriteContentTo(XmlWriter) XmlComment.Name XmlComment.LocalName XmlComment.NodeType XmlCharacterData.Substring(int, int) XmlCharacterData.AppendData(string) XmlCharacterData.InsertData(int, string) XmlCharacterData.DeleteData(int, int) XmlCharacterData.ReplaceData(int, int, string) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Comment(string, Document) Properties Value Gets or sets the value of the node."
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.-ctor.html",
    "title": "Constructor CssAbsPrimitiveLengthValue | SharpVectors Documentation",
    "keywords": "Constructor CssAbsPrimitiveLengthValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssAbsPrimitiveLengthValue(CssPrimitiveValue, string, XmlElement) public CssAbsPrimitiveLengthValue(CssPrimitiveValue cssValue, string propertyName, XmlElement element) Parameters cssValue CssPrimitiveValue propertyName string element XmlElement"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.CssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.CssValue.html",
    "title": "Property CssValue | SharpVectors Documentation",
    "keywords": "Property CssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssValue public CssPrimitiveValue CssValue { get; } Property Value CssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.GetFloatValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.GetFloatValue.html",
    "title": "Method GetFloatValue | SharpVectors Documentation",
    "keywords": "Method GetFloatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised public override double GetFloatValue(CssPrimitiveType unitType) Parameters unitType CssPrimitiveType A unit code to get the float value. The unit code can only be a float unit type (i.e. CSS_NUMBER, CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION). Returns double The float value in the specified unit. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value."
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.IsAbsolute.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.IsAbsolute.html",
    "title": "Property IsAbsolute | SharpVectors Documentation",
    "keywords": "Property IsAbsolute Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification. public override bool IsAbsolute { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.PropertyName.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.PropertyName.html",
    "title": "Property PropertyName | SharpVectors Documentation",
    "keywords": "Property PropertyName Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll PropertyName public string PropertyName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.ReadOnly.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.ReadOnly.html",
    "title": "Property ReadOnly | SharpVectors Documentation",
    "keywords": "Property ReadOnly Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ReadOnly public override bool ReadOnly { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveLengthValue.html",
    "title": "Class CssAbsPrimitiveLengthValue | SharpVectors Documentation",
    "keywords": "Class CssAbsPrimitiveLengthValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public sealed class CssAbsPrimitiveLengthValue : CssPrimitiveLengthValue, ICssPrimitiveValue, ICssValue Inheritance object CssValue CssPrimitiveValue CssPrimitiveLengthValue CssAbsPrimitiveLengthValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveLengthValue.CssText CssPrimitiveLengthValue.GetAbsoluteValue(string, XmlElement) CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, bool) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, string) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue.GetCssValue(string, bool) CssValue.CssValueType CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssAbsPrimitiveLengthValue(CssPrimitiveValue, string, XmlElement) Properties CssValue IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification. PropertyName ReadOnly Methods GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.-ctor.html",
    "title": "Constructor CssAbsPrimitiveValue | SharpVectors Documentation",
    "keywords": "Constructor CssAbsPrimitiveValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssAbsPrimitiveValue(CssPrimitiveValue, string, XmlElement) public CssAbsPrimitiveValue(CssPrimitiveValue cssValue, string propertyName, XmlElement element) Parameters cssValue CssPrimitiveValue propertyName string element XmlElement"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText A string representation of the current value. public override string CssText { get; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.CssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.CssValue.html",
    "title": "Property CssValue | SharpVectors Documentation",
    "keywords": "Property CssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssValue public CssPrimitiveValue CssValue { get; } Property Value CssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.GetFloatValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.GetFloatValue.html",
    "title": "Method GetFloatValue | SharpVectors Documentation",
    "keywords": "Method GetFloatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised public override double GetFloatValue(CssPrimitiveType unitType) Parameters unitType CssPrimitiveType A unit code to get the float value. The unit code can only be a float unit type (i.e. CSS_NUMBER, CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION). Returns double The float value in the specified unit. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value."
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.GetRectValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.GetRectValue.html",
    "title": "Method GetRectValue | SharpVectors Documentation",
    "keywords": "Method GetRectValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetRectValue() This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a DomException is raised. Modification to the corresponding style property can be achieved using the Rect interface. public override ICssRect GetRectValue() Returns ICssRect The Rect value. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a rect value."
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.GetRgbColorValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.GetRgbColorValue.html",
    "title": "Method GetRgbColorValue | SharpVectors Documentation",
    "keywords": "Method GetRgbColorValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetRgbColorValue() This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DomException is raised. Modification to the corresponding style property can be achieved using the RGBColor interface. public override ICssColor GetRgbColorValue() Returns ICssColor the RGB color value. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a rgb value."
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.GetStringValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.GetStringValue.html",
    "title": "Method GetStringValue | SharpVectors Documentation",
    "keywords": "Method GetStringValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetStringValue() This method is used to get the string value. If the CSS value doesn't contain a string value, a DomException is raised. Note: Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string. public override string GetStringValue() Returns string The string value in the current unit. The current primitiveType can only be a string unit type (i.e. CSS_STRING, CSS_URI, CSS_IDENT and CSS_ATTR). Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value."
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.IsAbsolute.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.IsAbsolute.html",
    "title": "Property IsAbsolute | SharpVectors Documentation",
    "keywords": "Property IsAbsolute Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification. public override bool IsAbsolute { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.PrimitiveType.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.PrimitiveType.html",
    "title": "Property PrimitiveType | SharpVectors Documentation",
    "keywords": "Property PrimitiveType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll PrimitiveType The type of the value as defined by the constants specified above. public override CssPrimitiveType PrimitiveType { get; } Property Value CssPrimitiveType"
  },
  "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsPrimitiveValue.html",
    "title": "Class CssAbsPrimitiveValue | SharpVectors Documentation",
    "keywords": "Class CssAbsPrimitiveValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public sealed class CssAbsPrimitiveValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Inheritance object CssValue CssPrimitiveValue CssAbsPrimitiveValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, bool) CssPrimitiveValue.GetAbsoluteValue(string, XmlElement) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, string) CssPrimitiveValue.GetCounterValue() CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssAbsPrimitiveValue(CssPrimitiveValue, string, XmlElement) Properties CssText A string representation of the current value. CssValue IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification. PrimitiveType The type of the value as defined by the constants specified above. Methods GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised GetRectValue() This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a DomException is raised. Modification to the corresponding style property can be achieved using the Rect interface. GetRgbColorValue() This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DomException is raised. Modification to the corresponding style property can be achieved using the RGBColor interface. GetStringValue() This method is used to get the string value. If the CSS value doesn't contain a string value, a DomException is raised. Note: Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string."
  },
  "api/SharpVectors.Dom.Css.CssAbsValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsValue.-ctor.html",
    "title": "Constructor CssAbsValue | SharpVectors Documentation",
    "keywords": "Constructor CssAbsValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssAbsValue(CssValue, string, XmlElement) public CssAbsValue(CssValue cssValue, string propertyName, XmlElement element) Parameters cssValue CssValue propertyName string element XmlElement"
  },
  "api/SharpVectors.Dom.Css.CssAbsValue.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsValue.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText A string representation of the current value. public override string CssText { get; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Css.CssAbsValue.CssValueType.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsValue.CssValueType.html",
    "title": "Property CssValueType | SharpVectors Documentation",
    "keywords": "Property CssValueType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssValueType A code defining the type of the value as defined above public override CssValueType CssValueType { get; } Property Value CssValueType"
  },
  "api/SharpVectors.Dom.Css.CssAbsValue.IsAbsolute.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsValue.IsAbsolute.html",
    "title": "Property IsAbsolute | SharpVectors Documentation",
    "keywords": "Property IsAbsolute Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification. public override bool IsAbsolute { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssAbsValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssAbsValue.html",
    "title": "Class CssAbsValue | SharpVectors Documentation",
    "keywords": "Class CssAbsValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public sealed class CssAbsValue : CssValue, ICssValue Inheritance object CssValue CssAbsValue Implements ICssValue Inherited Members CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue.GetAbsoluteValue(string, XmlElement) CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssAbsValue(CssValue, string, XmlElement) Properties CssText A string representation of the current value. CssValueType A code defining the type of the value as defined above IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification."
  },
  "api/SharpVectors.Dom.Css.CssChangeHandler.html": {
    "href": "api/SharpVectors.Dom.Css.CssChangeHandler.html",
    "title": "Delegate CssChangeHandler | SharpVectors Documentation",
    "keywords": "Delegate CssChangeHandler Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public delegate void CssChangeHandler()"
  },
  "api/SharpVectors.Dom.Css.CssCharsetRule.Encoding.html": {
    "href": "api/SharpVectors.Dom.Css.CssCharsetRule.Encoding.html",
    "title": "Property Encoding | SharpVectors Documentation",
    "keywords": "Property Encoding Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Encoding The encoding information used in this @charset rule public string Encoding { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssCharsetRule.Type.html": {
    "href": "api/SharpVectors.Dom.Css.CssCharsetRule.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. public override CssRuleType Type { get; } Property Value CssRuleType"
  },
  "api/SharpVectors.Dom.Css.CssCharsetRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssCharsetRule.html",
    "title": "Class CssCharsetRule | SharpVectors Documentation",
    "keywords": "Class CssCharsetRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The CSSCharsetRule interface represents a @charset rule in a CSS style sheet. The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no CSSCharsetRule is created. The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet. The value of the @charset rule (and therefore of the CSSCharsetRule) may not correspond to the encoding the document actually came in; character encoding information e.g. in an HTTP header, has priority (see CSS document representation) but this is not reflected in the CSSCharsetRule. public sealed class CssCharsetRule : CssRule, ICssCharsetRule, ICssRule Inheritance object CssRule CssCharsetRule Implements ICssCharsetRule ICssRule Inherited Members CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Encoding The encoding information used in this @charset rule Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type."
  },
  "api/SharpVectors.Dom.Css.CssCollectedProperty.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedProperty.-ctor.html",
    "title": "Constructor CssCollectedProperty | SharpVectors Documentation",
    "keywords": "Constructor CssCollectedProperty Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssCollectedProperty(string, int, CssValue, CssStyleSheetType, string) public CssCollectedProperty(string name, int specificity, CssValue cssValue, CssStyleSheetType origin, string priority) Parameters name string specificity int cssValue CssValue origin CssStyleSheetType priority string"
  },
  "api/SharpVectors.Dom.Css.CssCollectedProperty.CssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedProperty.CssValue.html",
    "title": "Property CssValue | SharpVectors Documentation",
    "keywords": "Property CssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssValue public CssValue CssValue { get; set; } Property Value CssValue"
  },
  "api/SharpVectors.Dom.Css.CssCollectedProperty.Name.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedProperty.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Name public string Name { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssCollectedProperty.Origin.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedProperty.Origin.html",
    "title": "Property Origin | SharpVectors Documentation",
    "keywords": "Property Origin Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Origin public CssStyleSheetType Origin { get; set; } Property Value CssStyleSheetType"
  },
  "api/SharpVectors.Dom.Css.CssCollectedProperty.Priority.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedProperty.Priority.html",
    "title": "Property Priority | SharpVectors Documentation",
    "keywords": "Property Priority Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Priority public string Priority { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssCollectedProperty.Specificity.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedProperty.Specificity.html",
    "title": "Property Specificity | SharpVectors Documentation",
    "keywords": "Property Specificity Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Specificity public int Specificity { get; set; } Property Value int"
  },
  "api/SharpVectors.Dom.Css.CssCollectedProperty.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedProperty.html",
    "title": "Class CssCollectedProperty | SharpVectors Documentation",
    "keywords": "Class CssCollectedProperty Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Used internally to store collected properties. public sealed class CssCollectedProperty Inheritance object CssCollectedProperty Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssCollectedProperty(string, int, CssValue, CssStyleSheetType, string) Properties CssValue Name Origin Priority Specificity"
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.-ctor.html",
    "title": "Constructor CssCollectedStyleDeclaration | SharpVectors Documentation",
    "keywords": "Constructor CssCollectedStyleDeclaration Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssCollectedStyleDeclaration(XmlElement) public CssCollectedStyleDeclaration(XmlElement elm) Parameters elm XmlElement"
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.CollectProperty.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.CollectProperty.html",
    "title": "Method CollectProperty | SharpVectors Documentation",
    "keywords": "Method CollectProperty Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CollectProperty(string, int, CssValue, CssStyleSheetType, string) public void CollectProperty(string name, int specificity, CssValue cssValue, CssStyleSheetType origin, string priority) Parameters name string specificity int cssValue CssValue origin CssStyleSheetType priority string"
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties. public override string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or a property is readonly."
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.GetPropertyCssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.GetPropertyCssValue.html",
    "title": "Method GetPropertyCssValue | SharpVectors Documentation",
    "keywords": "Method GetPropertyCssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetPropertyCssValue(string) Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the getPropertyValue and setProperty methods. public override ICssValue GetPropertyCssValue(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns ICssValue Returns the value of the property if it has been explicitly set for this declaration block. Returns null if the property has not been set."
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.GetPropertyOrigin.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.GetPropertyOrigin.html",
    "title": "Method GetPropertyOrigin | SharpVectors Documentation",
    "keywords": "Method GetPropertyOrigin Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetPropertyOrigin(string) Returns the origin type of the collected property public CssStyleSheetType GetPropertyOrigin(string propertyName) Parameters propertyName string The name of the property Returns CssStyleSheetType The origin type"
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.GetPropertyPriority.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.GetPropertyPriority.html",
    "title": "Method GetPropertyPriority | SharpVectors Documentation",
    "keywords": "Method GetPropertyPriority Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetPropertyPriority(string) Used to retrieve the priority of a CSS property (e.g. the \"important\" qualifier) if the property has been explicitly set in this declaration block. public override string GetPropertyPriority(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns string A string representing the priority (e.g. \"important\") if one exists. The empty string if none exists."
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.GetPropertyValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.GetPropertyValue.html",
    "title": "Method GetPropertyValue | SharpVectors Documentation",
    "keywords": "Method GetPropertyValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetPropertyValue(string) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. public override string GetPropertyValue(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns string Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set."
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.Item.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll this[ulong] Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block. The name of the property at this ordinal position. The empty string if no property exists at this position. public override string this[ulong index] { get; } Parameters index ulong Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.Length.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Length The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive. public override ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.html": {
    "href": "api/SharpVectors.Dom.Css.CssCollectedStyleDeclaration.html",
    "title": "Class CssCollectedStyleDeclaration | SharpVectors Documentation",
    "keywords": "Class CssCollectedStyleDeclaration Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Used internally for collection of styles for a specific element public sealed class CssCollectedStyleDeclaration : CssStyleDeclaration, ICssStyleDeclaration Inheritance object CssStyleDeclaration CssCollectedStyleDeclaration Implements ICssStyleDeclaration Inherited Members CssStyleDeclaration.ReadOnly CssStyleDeclaration.Origin CssStyleDeclaration.GetStylesForElement(CssCollectedStyleDeclaration, int) CssStyleDeclaration.GetValidUrlFromCSS(string, string) CssStyleDeclaration.GetValidUrlsFromCSS(string) CssStyleDeclaration.SetProperty(string, string, string) CssStyleDeclaration.SetPropertyValue(string, string) CssStyleDeclaration.RemoveProperty(string) CssStyleDeclaration.GetPropertyValue(string[]) CssStyleDeclaration.ParentRule object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssCollectedStyleDeclaration(XmlElement) Properties CssText The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties. this[ulong] Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block. The name of the property at this ordinal position. The empty string if no property exists at this position. Length The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive. Methods CollectProperty(string, int, CssValue, CssStyleSheetType, string) GetPropertyCssValue(string) Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the getPropertyValue and setProperty methods. GetPropertyOrigin(string) Returns the origin type of the collected property GetPropertyPriority(string) Used to retrieve the priority of a CSS property (e.g. the \"important\" qualifier) if the property has been explicitly set in this declaration block. GetPropertyValue(string) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block."
  },
  "api/SharpVectors.Dom.Css.CssColor.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.-ctor.html",
    "title": "Constructor CssColor | SharpVectors Documentation",
    "keywords": "Constructor CssColor Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssColor(int, int, int) Constructs a RgbColor based on the GDI color public CssColor(int red, int green, int blue) Parameters red int green int blue int CssColor(int, int, int, int) Constructs a RgbColor based on the GDI color public CssColor(int red, int green, int blue, int alpha) Parameters red int green int blue int alpha int CssColor(string) Parses a constructs a RgbColor public CssColor(string str) Parameters str string String to parse to find the color"
  },
  "api/SharpVectors.Dom.Css.CssColor.Alpha.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.Alpha.html",
    "title": "Property Alpha | SharpVectors Documentation",
    "keywords": "Property Alpha Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Alpha This attribute is used for the alpha value of the RGBA color public ICssPrimitiveValue Alpha { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssColor.Blue.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.Blue.html",
    "title": "Property Blue | SharpVectors Documentation",
    "keywords": "Property Blue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Blue This attribute is used for the blue value of the RGB color public ICssPrimitiveValue Blue { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssColor.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText public string CssText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssColor.Green.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.Green.html",
    "title": "Property Green | SharpVectors Documentation",
    "keywords": "Property Green Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Green This attribute is used for the green value of the RGB color. public ICssPrimitiveValue Green { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssColor.HasAlpha.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.HasAlpha.html",
    "title": "Property HasAlpha | SharpVectors Documentation",
    "keywords": "Property HasAlpha Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll HasAlpha Gets a value which indicates whether the color value has alpha value or not. public bool HasAlpha { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssColor.IsSystemColor.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.IsSystemColor.html",
    "title": "Property IsSystemColor | SharpVectors Documentation",
    "keywords": "Property IsSystemColor Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsSystemColor Gets a value which indicates whether the color is system-defined color. public bool IsSystemColor { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssColor.IsVarColor.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.IsVarColor.html",
    "title": "Property IsVarColor | SharpVectors Documentation",
    "keywords": "Property IsVarColor Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsVarColor Gets a value which indicates whether the color is defined by custom properties. public bool IsVarColor { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssColor.Name.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Name Gets the name of the color, if available. public string Name { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssColor.Red.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.Red.html",
    "title": "Property Red | SharpVectors Documentation",
    "keywords": "Property Red Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Red This attribute is used for the red value of the RGB color public ICssPrimitiveValue Red { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssColor.html": {
    "href": "api/SharpVectors.Dom.Css.CssColor.html",
    "title": "Class CssColor | SharpVectors Documentation",
    "keywords": "Class CssColor Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The RGB-Color interface is used to represent any RGB color value. public sealed class CssColor : ICssColor Inheritance object CssColor Implements ICssColor Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property. A specified RGB color is not clipped (even if the number is outside the range 0-255 or 0%-100%). A computed RGB color is clipped depending on the device. Even if a style sheet can only contain an integer for a color value, the internal storage of this integer is a float, and this can be used as a float in the specified or the computed style. A color percentage value can always be converted to a number and vice versa. Constructors CssColor(int, int, int) Constructs a RgbColor based on the GDI color CssColor(int, int, int, int) Constructs a RgbColor based on the GDI color CssColor(string) Parses a constructs a RgbColor Properties Alpha This attribute is used for the alpha value of the RGBA color Blue This attribute is used for the blue value of the RGB color CssText Green This attribute is used for the green value of the RGB color. HasAlpha Gets a value which indicates whether the color value has alpha value or not. IsSystemColor Gets a value which indicates whether the color is system-defined color. IsVarColor Gets a value which indicates whether the color is defined by custom properties. Name Gets the name of the color, if available. Red This attribute is used for the red value of the RGB color"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value. public override string CssText { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.EmbeddedData.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.EmbeddedData.html",
    "title": "Property EmbeddedData | SharpVectors Documentation",
    "keywords": "Property EmbeddedData Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll EmbeddedData public string EmbeddedData { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.EmbeddedEncoding.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.EmbeddedEncoding.html",
    "title": "Property EmbeddedEncoding | SharpVectors Documentation",
    "keywords": "Property EmbeddedEncoding Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll EmbeddedEncoding public string EmbeddedEncoding { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.EmbeddedMimeType.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.EmbeddedMimeType.html",
    "title": "Property EmbeddedMimeType | SharpVectors Documentation",
    "keywords": "Property EmbeddedMimeType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll EmbeddedMimeType public string EmbeddedMimeType { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.FeatureSettings.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.FeatureSettings.html",
    "title": "Property FeatureSettings | SharpVectors Documentation",
    "keywords": "Property FeatureSettings Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FeatureSettings public string FeatureSettings { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.FontFamily.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.FontFamily.html",
    "title": "Property FontFamily | SharpVectors Documentation",
    "keywords": "Property FontFamily Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FontFamily public string FontFamily { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.FontStyle.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.FontStyle.html",
    "title": "Property FontStyle | SharpVectors Documentation",
    "keywords": "Property FontStyle Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FontStyle public string FontStyle { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.FontUrl.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.FontUrl.html",
    "title": "Property FontUrl | SharpVectors Documentation",
    "keywords": "Property FontUrl Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FontUrl public string FontUrl { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.FontVariant.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.FontVariant.html",
    "title": "Property FontVariant | SharpVectors Documentation",
    "keywords": "Property FontVariant Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FontVariant public string FontVariant { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.FontWeight.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.FontWeight.html",
    "title": "Property FontWeight | SharpVectors Documentation",
    "keywords": "Property FontWeight Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FontWeight public string FontWeight { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.IsEmbedded.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.IsEmbedded.html",
    "title": "Property IsEmbedded | SharpVectors Documentation",
    "keywords": "Property IsEmbedded Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsEmbedded public bool IsEmbedded { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.Src.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.Src.html",
    "title": "Property Src | SharpVectors Documentation",
    "keywords": "Property Src Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Src public string Src { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.Stretch.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.Stretch.html",
    "title": "Property Stretch | SharpVectors Documentation",
    "keywords": "Property Stretch Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Stretch public string Stretch { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.Style.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Style The declaration-block of this rule. public ICssStyleDeclaration Style { get; } Property Value ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.Type.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. public override CssRuleType Type { get; } Property Value CssRuleType"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.UnicodeRange.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.UnicodeRange.html",
    "title": "Property UnicodeRange | SharpVectors Documentation",
    "keywords": "Property UnicodeRange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll UnicodeRange public string UnicodeRange { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssFontFaceRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssFontFaceRule.html",
    "title": "Class CssFontFaceRule | SharpVectors Documentation",
    "keywords": "Class CssFontFaceRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The ICssFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions. public sealed class CssFontFaceRule : CssRule, ICssFontFaceRule, ICssRule Inheritance object CssRule CssFontFaceRule Implements ICssFontFaceRule ICssRule Inherited Members CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties CssText The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value. EmbeddedData EmbeddedEncoding EmbeddedMimeType FeatureSettings FontFamily FontStyle FontUrl FontVariant FontWeight IsEmbedded Src Stretch Style The declaration-block of this rule. Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. UnicodeRange"
  },
  "api/SharpVectors.Dom.Css.CssImportRule.GetStylesForElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssImportRule.GetStylesForElement.html",
    "title": "Method GetStylesForElement | SharpVectors Documentation",
    "keywords": "Method GetStylesForElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order protected override void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters elt XmlElement The element to find styles for pseudoElt string The pseudo-element to find styles for ml MediaList The medialist that the document is using csd CssCollectedStyleDeclaration A CssStyleDeclaration that holds the collected styles"
  },
  "api/SharpVectors.Dom.Css.CssImportRule.Href.html": {
    "href": "api/SharpVectors.Dom.Css.CssImportRule.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Href The location of the style sheet to be imported. The attribute will not contain the \"url(...)\" specifier around the URI public string Href { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssImportRule.Media.html": {
    "href": "api/SharpVectors.Dom.Css.CssImportRule.Media.html",
    "title": "Property Media | SharpVectors Documentation",
    "keywords": "Property Media Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Media A list of media types for which this style sheet may be used. public IMediaList Media { get; } Property Value IMediaList"
  },
  "api/SharpVectors.Dom.Css.CssImportRule.StyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.CssImportRule.StyleSheet.html",
    "title": "Property StyleSheet | SharpVectors Documentation",
    "keywords": "Property StyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll StyleSheet The style sheet referred to by this rule, if it has been loaded. The value of this attribute is null if the style sheet has not yet been loaded or if it will not be loaded (e.g. if the style sheet is for a media type not supported by the user agent). public ICssStyleSheet StyleSheet { get; } Property Value ICssStyleSheet"
  },
  "api/SharpVectors.Dom.Css.CssImportRule.Type.html": {
    "href": "api/SharpVectors.Dom.Css.CssImportRule.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. public override CssRuleType Type { get; } Property Value CssRuleType"
  },
  "api/SharpVectors.Dom.Css.CssImportRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssImportRule.html",
    "title": "Class CssImportRule | SharpVectors Documentation",
    "keywords": "Class CssImportRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The CSSImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets. public sealed class CssImportRule : CssRule, ICssImportRule, ICssRule Inheritance object CssRule CssImportRule Implements ICssImportRule ICssRule Inherited Members CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Href The location of the style sheet to be imported. The attribute will not contain the \"url(...)\" specifier around the URI Media A list of media types for which this style sheet may be used. StyleSheet The style sheet referred to by this rule, if it has been loaded. The value of this attribute is null if the style sheet has not yet been loaded or if it will not be loaded (e.g. if the style sheet is for a media type not supported by the user agent). Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Methods GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order"
  },
  "api/SharpVectors.Dom.Css.CssMediaRule.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssMediaRule.-ctor.html",
    "title": "Constructor CssMediaRule | SharpVectors Documentation",
    "keywords": "Constructor CssMediaRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssMediaRule(string, object, bool, IList<string>, CssStyleSheetType) public CssMediaRule(string cssText, object parent, bool readOnly, IList<string> replacedStrings, CssStyleSheetType origin) Parameters cssText string parent object readOnly bool replacedStrings IList<string> origin CssStyleSheetType"
  },
  "api/SharpVectors.Dom.Css.CssMediaRule.CssRules.html": {
    "href": "api/SharpVectors.Dom.Css.CssMediaRule.CssRules.html",
    "title": "Property CssRules | SharpVectors Documentation",
    "keywords": "Property CssRules Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssRules A list of all CSS rules contained within the media block. public ICssRuleList CssRules { get; } Property Value ICssRuleList"
  },
  "api/SharpVectors.Dom.Css.CssMediaRule.DeleteRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssMediaRule.DeleteRule.html",
    "title": "Method DeleteRule | SharpVectors Documentation",
    "keywords": "Method DeleteRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll DeleteRule(ulong) Used to delete a rule from the media block. public void DeleteRule(ulong index) Parameters index ulong The index within the media block's rule collection of the rule to remove. Exceptions DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the media rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is readonly."
  },
  "api/SharpVectors.Dom.Css.CssMediaRule.GetStylesForElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssMediaRule.GetStylesForElement.html",
    "title": "Method GetStylesForElement | SharpVectors Documentation",
    "keywords": "Method GetStylesForElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order protected override void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters elt XmlElement The element to find styles for pseudoElt string The pseudo-element to find styles for ml MediaList The medialist that the document is using csd CssCollectedStyleDeclaration A CssStyleDeclaration that holds the collected styles"
  },
  "api/SharpVectors.Dom.Css.CssMediaRule.InsertRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssMediaRule.InsertRule.html",
    "title": "Method InsertRule | SharpVectors Documentation",
    "keywords": "Method InsertRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll InsertRule(string, ulong) Used to insert a new rule into the media block public ulong InsertRule(string rule, ulong index) Parameters rule string The parsable text representing the rule. For rule sets this contains both the selector and the style declaration. For at-rules, this specifies both the at-identifier and the rule content. index ulong The index within the media block's rule collection of the rule before which to insert the specified rule. If the specified index is equal to the length of the media blocks's rule collection, the rule will be added to the end of the media block. Returns ulong The index within the media block's rule collection of the newly inserted rule. Exceptions DomException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the specified index, e.g., if an @import rule is inserted after a standard rule set or other at-rule. DomException INDEX_SIZE_ERR: Raised if the specified index is not a valid insertion point. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is readonly DomException SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable"
  },
  "api/SharpVectors.Dom.Css.CssMediaRule.Media.html": {
    "href": "api/SharpVectors.Dom.Css.CssMediaRule.Media.html",
    "title": "Property Media | SharpVectors Documentation",
    "keywords": "Property Media Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Media A list of media types for this rule public IMediaList Media { get; } Property Value IMediaList"
  },
  "api/SharpVectors.Dom.Css.CssMediaRule.Type.html": {
    "href": "api/SharpVectors.Dom.Css.CssMediaRule.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. public override CssRuleType Type { get; } Property Value CssRuleType"
  },
  "api/SharpVectors.Dom.Css.CssMediaRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssMediaRule.html",
    "title": "Class CssMediaRule | SharpVectors Documentation",
    "keywords": "Class CssMediaRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The CSSMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types. public class CssMediaRule : CssRule, ICssMediaRule, ICssRule Inheritance object CssRule CssMediaRule Implements ICssMediaRule ICssRule Inherited Members CssRule._origin CssRule._isReadOnly CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CssMediaRule(string, object, bool, IList<string>, CssStyleSheetType) Properties CssRules A list of all CSS rules contained within the media block. Media A list of media types for this rule Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Methods DeleteRule(ulong) Used to delete a rule from the media block. GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order InsertRule(string, ulong) Used to insert a new rule into the media block"
  },
  "api/SharpVectors.Dom.Css.CssNumber.Format.html": {
    "href": "api/SharpVectors.Dom.Css.CssNumber.Format.html",
    "title": "Property Format | SharpVectors Documentation",
    "keywords": "Property Format Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Format public static NumberFormatInfo Format { get; } Property Value NumberFormatInfo"
  },
  "api/SharpVectors.Dom.Css.CssNumber.html": {
    "href": "api/SharpVectors.Dom.Css.CssNumber.html",
    "title": "Class CssNumber | SharpVectors Documentation",
    "keywords": "Class CssNumber Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public static class CssNumber Inheritance object CssNumber Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Format"
  },
  "api/SharpVectors.Dom.Css.CssPageRule.SelectorText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPageRule.SelectorText.html",
    "title": "Property SelectorText | SharpVectors Documentation",
    "keywords": "Property SelectorText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SelectorText The parsable textual representation of the page selector for the rule. public string SelectorText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly."
  },
  "api/SharpVectors.Dom.Css.CssPageRule.Style.html": {
    "href": "api/SharpVectors.Dom.Css.CssPageRule.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Style The declaration-block of this rule. public ICssStyleDeclaration Style { get; } Property Value ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.CssPageRule.Type.html": {
    "href": "api/SharpVectors.Dom.Css.CssPageRule.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. public override CssRuleType Type { get; } Property Value CssRuleType"
  },
  "api/SharpVectors.Dom.Css.CssPageRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssPageRule.html",
    "title": "Class CssPageRule | SharpVectors Documentation",
    "keywords": "Class CssPageRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The CSSPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media. public sealed class CssPageRule : CssRule, ICssPageRule, ICssRule Inheritance object CssRule CssPageRule Implements ICssPageRule ICssRule Inherited Members CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties SelectorText The parsable textual representation of the page selector for the rule. Style The declaration-block of this rule. Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.-ctor.html",
    "title": "Constructor CssPrimitiveAngleValue | SharpVectors Documentation",
    "keywords": "Constructor CssPrimitiveAngleValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssPrimitiveAngleValue(string, string, bool) public CssPrimitiveAngleValue(string number, string unit, bool readOnly) Parameters number string unit string readOnly bool CssPrimitiveAngleValue(string, bool) public CssPrimitiveAngleValue(string cssText, bool readOnly) Parameters cssText string readOnly bool CssPrimitiveAngleValue(double, string, bool) public CssPrimitiveAngleValue(double number, string unit, bool readOnly) Parameters number double unit string readOnly bool"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText A string representation of the current value. public override string CssText { get; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.GetFloatValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.GetFloatValue.html",
    "title": "Method GetFloatValue | SharpVectors Documentation",
    "keywords": "Method GetFloatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised public override double GetFloatValue(CssPrimitiveType unitType) Parameters unitType CssPrimitiveType A unit code to get the float value. The unit code can only be a float unit type (i.e. CSS_NUMBER, CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION). Returns double The float value in the specified unit. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.OnSetCssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.OnSetCssText.html",
    "title": "Method OnSetCssText | SharpVectors Documentation",
    "keywords": "Method OnSetCssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll OnSetCssText(string) protected override void OnSetCssText(string cssText) Parameters cssText string"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveAngleValue.html",
    "title": "Class CssPrimitiveAngleValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveAngleValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public sealed class CssPrimitiveAngleValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Inheritance object CssValue CssPrimitiveValue CssPrimitiveAngleValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, bool) CssPrimitiveValue.GetAbsoluteValue(string, XmlElement) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, string) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssPrimitiveAngleValue(double, string, bool) CssPrimitiveAngleValue(string, bool) CssPrimitiveAngleValue(string, string, bool) Properties CssText A string representation of the current value. Methods GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised OnSetCssText(string)"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.-ctor.html",
    "title": "Constructor CssPrimitiveColorValue | SharpVectors Documentation",
    "keywords": "Constructor CssPrimitiveColorValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssPrimitiveColorValue(int, bool) public CssPrimitiveColorValue(int color, bool readOnly) Parameters color int readOnly bool CssPrimitiveColorValue(string, bool) public CssPrimitiveColorValue(string cssText, bool readOnly) Parameters cssText string readOnly bool"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText A string representation of the current value. public override string CssText { get; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.GetFloatValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.GetFloatValue.html",
    "title": "Method GetFloatValue | SharpVectors Documentation",
    "keywords": "Method GetFloatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised public override double GetFloatValue(CssPrimitiveType unitType) Parameters unitType CssPrimitiveType A unit code to get the float value. The unit code can only be a float unit type (i.e. CSS_NUMBER, CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION). Returns double The float value in the specified unit. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.OnSetCssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.OnSetCssText.html",
    "title": "Method OnSetCssText | SharpVectors Documentation",
    "keywords": "Method OnSetCssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll OnSetCssText(string) protected override void OnSetCssText(string cssText) Parameters cssText string"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveColorValue.html",
    "title": "Class CssPrimitiveColorValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveColorValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public sealed class CssPrimitiveColorValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Inheritance object CssValue CssPrimitiveValue CssPrimitiveColorValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, bool) CssPrimitiveValue.GetAbsoluteValue(string, XmlElement) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, string) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssPrimitiveColorValue(int, bool) CssPrimitiveColorValue(string, bool) Properties CssText A string representation of the current value. Methods GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised OnSetCssText(string)"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.-ctor.html",
    "title": "Constructor CssPrimitiveLengthValue | SharpVectors Documentation",
    "keywords": "Constructor CssPrimitiveLengthValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssPrimitiveLengthValue(string, string, bool) public CssPrimitiveLengthValue(string number, string unit, bool readOnly) Parameters number string unit string readOnly bool CssPrimitiveLengthValue(string, bool) public CssPrimitiveLengthValue(string cssText, bool readOnly) Parameters cssText string readOnly bool CssPrimitiveLengthValue(double, string, bool) public CssPrimitiveLengthValue(double number, string unit, bool readOnly) Parameters number double unit string readOnly bool CssPrimitiveLengthValue() protected CssPrimitiveLengthValue()"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.CmPerIn.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.CmPerIn.html",
    "title": "Field CmPerIn | SharpVectors Documentation",
    "keywords": "Field CmPerIn Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll protected const double CmPerIn = 2.54 Returns double"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText A string representation of the current value. public override string CssText { get; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.Dpi.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.Dpi.html",
    "title": "Field Dpi | SharpVectors Documentation",
    "keywords": "Field Dpi Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll protected const double Dpi = 96 Returns double"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.GetAbsoluteValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.GetAbsoluteValue.html",
    "title": "Method GetAbsoluteValue | SharpVectors Documentation",
    "keywords": "Method GetAbsoluteValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetAbsoluteValue(string, XmlElement) public override CssValue GetAbsoluteValue(string propertyName, XmlElement elm) Parameters propertyName string elm XmlElement Returns CssValue"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.GetFloatValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.GetFloatValue.html",
    "title": "Method GetFloatValue | SharpVectors Documentation",
    "keywords": "Method GetFloatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised public override double GetFloatValue(CssPrimitiveType unitType) Parameters unitType CssPrimitiveType A unit code to get the float value. The unit code can only be a float unit type (i.e. CSS_NUMBER, CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION). Returns double The float value in the specified unit. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.OnSetCssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.OnSetCssText.html",
    "title": "Method OnSetCssText | SharpVectors Documentation",
    "keywords": "Method OnSetCssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll OnSetCssText(string) protected override void OnSetCssText(string cssText) Parameters cssText string"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveLengthValue.html",
    "title": "Class CssPrimitiveLengthValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveLengthValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public class CssPrimitiveLengthValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Inheritance object CssValue CssPrimitiveValue CssPrimitiveLengthValue Implements ICssPrimitiveValue ICssValue Derived CssAbsPrimitiveLengthValue Inherited Members CssPrimitiveValue._floatValue CssPrimitiveValue._colorValue CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, bool) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, double) CssPrimitiveValue.SetFloatValue(string) CssPrimitiveValue.SetFloatValue(double) CssPrimitiveValue.SetStringValue(CssPrimitiveType, string) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.SetPrimitiveType(CssPrimitiveType) CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CssPrimitiveLengthValue() CssPrimitiveLengthValue(double, string, bool) CssPrimitiveLengthValue(string, bool) CssPrimitiveLengthValue(string, string, bool) Fields CmPerIn Dpi Properties CssText A string representation of the current value. Methods GetAbsoluteValue(string, XmlElement) GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised OnSetCssText(string)"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.-ctor.html",
    "title": "Constructor CssPrimitiveRgbValue | SharpVectors Documentation",
    "keywords": "Constructor CssPrimitiveRgbValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssPrimitiveRgbValue(string, bool) public CssPrimitiveRgbValue(string cssText, bool readOnly) Parameters cssText string readOnly bool"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText A string representation of the current value. public override string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.IsColorName.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.IsColorName.html",
    "title": "Method IsColorName | SharpVectors Documentation",
    "keywords": "Method IsColorName Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsColorName(string) public static bool IsColorName(string cssText) Parameters cssText string Returns bool"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.OnSetCssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.OnSetCssText.html",
    "title": "Method OnSetCssText | SharpVectors Documentation",
    "keywords": "Method OnSetCssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll OnSetCssText(string) protected override void OnSetCssText(string cssText) Parameters cssText string"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveRgbValue.html",
    "title": "Class CssPrimitiveRgbValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveRgbValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public sealed class CssPrimitiveRgbValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Inheritance object CssValue CssPrimitiveValue CssPrimitiveRgbValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.Create(Match, bool) CssPrimitiveValue.GetAbsoluteValue(string, XmlElement) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, double) CssPrimitiveValue.GetFloatValue(CssPrimitiveType) CssPrimitiveValue.SetStringValue(CssPrimitiveType, string) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssPrimitiveRgbValue(string, bool) Properties CssText A string representation of the current value. Methods IsColorName(string) OnSetCssText(string)"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveType.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveType.html",
    "title": "Enum CssPrimitiveType | SharpVectors Documentation",
    "keywords": "Enum CssPrimitiveType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The CssPrimitiveType enumeration contains the list of possible primitive value types in CSS. This class is an extension of the CSS spec. The CSS spec has a list of constants instead of an enum class. public enum CssPrimitiveType Fields Unknown = 0 The value is not a recognized CSS2 value. The value can only be obtained by using the cssText attribute. Number = 1 The value is a simple number. The value can be obtained by using the getFloatValue method. Percentage = 2 The value is a percentage. The value can be obtained by using the getFloatValue method. Ems = 3 The value is a length (ems). The value can be obtained by using the getFloatValue method. Exs = 4 The value is a length (exs). The value can be obtained by using the getFloatValue method. Px = 5 The value is a length (px). The value can be obtained by using the getFloatValue method. Cm = 6 The value is a length (cm). The value can be obtained by using the getFloatValue method. Mm = 7 The value is a length (mm). The value can be obtained by using the getFloatValue method. In = 8 The value is a length (in). The value can be obtained by using the getFloatValue method. Pt = 9 The value is a length (pt). The value can be obtained by using the getFloatValue method. Pc = 10 The value is a length (pc). The value can be obtained by using the getFloatValue method. Deg = 11 The value is an angle (deg). The value can be obtained by using the getFloatValue method. Rad = 12 The value is an angle (rad). The value can be obtained by using the getFloatValue method. Grad = 13 The value is an angle (grad). The value can be obtained by using the getFloatValue method. Ms = 14 The value is a time (ms). The value can be obtained by using the getFloatValue method. S = 15 The value is a time (s). The value can be obtained by using the getFloatValue method. Hz = 16 The value is a frequency (Hz). The value can be obtained by using the getFloatValue method. KHz = 17 The value is a frequency (kHz). The value can be obtained by using the getFloatValue method. Dimension = 18 The value is a number with an unknown dimension. The value can be obtained by using the getFloatValue method. String = 19 The value is a STRING. The value can be obtained by using the getStringValue method. Uri = 20 The value is a URI. The value can be obtained by using the getStringValue method. Ident = 21 The value is an identifier. The value can be obtained by using the getStringValue method. Attr = 22 The value is a attribute function. The value can be obtained by using the getStringValue method. Counter = 23 The value is a counter or counters function. The value can be obtained by using the getCounterValue method. Rect = 24 The value is a rect function. The value can be obtained by using the getRectValue method. RgbColor = 25 The value is a RGB color. The value can be obtained by using the getRGBColorValue method. Vars = 25 The value is a var() or custom properties."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.-ctor.html",
    "title": "Constructor CssPrimitiveValue | SharpVectors Documentation",
    "keywords": "Constructor CssPrimitiveValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssPrimitiveValue(string, bool) protected CssPrimitiveValue(string cssText, bool readOnly) Parameters cssText string readOnly bool CssPrimitiveValue() Only for internal use protected CssPrimitiveValue()"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.Create.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.Create.html",
    "title": "Method Create | SharpVectors Documentation",
    "keywords": "Method Create Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Create(Match, bool) public static CssPrimitiveValue Create(Match match, bool readOnly) Parameters match Match readOnly bool Returns CssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText A string representation of the current value. public override string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetAbsoluteValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetAbsoluteValue.html",
    "title": "Method GetAbsoluteValue | SharpVectors Documentation",
    "keywords": "Method GetAbsoluteValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetAbsoluteValue(string, XmlElement) public override CssValue GetAbsoluteValue(string propertyName, XmlElement elm) Parameters propertyName string elm XmlElement Returns CssValue"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetCounterValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetCounterValue.html",
    "title": "Method GetCounterValue | SharpVectors Documentation",
    "keywords": "Method GetCounterValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetCounterValue() This method is used to get the Counter value. If this CSS value doesn't contain a counter value, a DomException is raised. Modification to the corresponding style property can be achieved using the Counter interface public virtual ICssCounter GetCounterValue() Returns ICssCounter The Counter value. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Counter value (e.g. this is not CSS_COUNTER)."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetFloatValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetFloatValue.html",
    "title": "Method GetFloatValue | SharpVectors Documentation",
    "keywords": "Method GetFloatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised public virtual double GetFloatValue(CssPrimitiveType unitType) Parameters unitType CssPrimitiveType A unit code to get the float value. The unit code can only be a float unit type (i.e. CSS_NUMBER, CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION). Returns double The float value in the specified unit. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetRectValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetRectValue.html",
    "title": "Method GetRectValue | SharpVectors Documentation",
    "keywords": "Method GetRectValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetRectValue() This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a DomException is raised. Modification to the corresponding style property can be achieved using the Rect interface. public virtual ICssRect GetRectValue() Returns ICssRect The Rect value. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a rect value."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetRgbColorValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetRgbColorValue.html",
    "title": "Method GetRgbColorValue | SharpVectors Documentation",
    "keywords": "Method GetRgbColorValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetRgbColorValue() This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DomException is raised. Modification to the corresponding style property can be achieved using the RGBColor interface. public virtual ICssColor GetRgbColorValue() Returns ICssColor the RGB color value. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a rgb value."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetStringValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.GetStringValue.html",
    "title": "Method GetStringValue | SharpVectors Documentation",
    "keywords": "Method GetStringValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetStringValue() This method is used to get the string value. If the CSS value doesn't contain a string value, a DomException is raised. Note: Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string. public virtual string GetStringValue() Returns string The string value in the current unit. The current primitiveType can only be a string unit type (i.e. CSS_STRING, CSS_URI, CSS_IDENT and CSS_ATTR). Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.OnSetCssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.OnSetCssText.html",
    "title": "Method OnSetCssText | SharpVectors Documentation",
    "keywords": "Method OnSetCssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll OnSetCssText(string) protected virtual void OnSetCssText(string cssText) Parameters cssText string"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.PrimitiveType.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.PrimitiveType.html",
    "title": "Property PrimitiveType | SharpVectors Documentation",
    "keywords": "Property PrimitiveType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll PrimitiveType The type of the value as defined by the constants specified above. public virtual CssPrimitiveType PrimitiveType { get; protected set; } Property Value CssPrimitiveType"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.PrimitiveTypeAsString.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.PrimitiveTypeAsString.html",
    "title": "Property PrimitiveTypeAsString | SharpVectors Documentation",
    "keywords": "Property PrimitiveTypeAsString Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll PrimitiveTypeAsString public string PrimitiveTypeAsString { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.SetFloatValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.SetFloatValue.html",
    "title": "Method SetFloatValue | SharpVectors Documentation",
    "keywords": "Method SetFloatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SetFloatValue(CssPrimitiveType, double) A method to set the float value with a specified unit. If the property attached with this value can not accept the specified unit or the float value, the value will be unchanged and a DomException will be raised. public virtual void SetFloatValue(CssPrimitiveType unitType, double floatValue) Parameters unitType CssPrimitiveType A unit code as defined above. The unit code can only be a float unit type (i.e. CSS_NUMBER, CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION). floatValue double The new float value. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly. SetFloatValue(string) protected void SetFloatValue(string floatValue) Parameters floatValue string SetFloatValue(double) protected void SetFloatValue(double floatValue) Parameters floatValue double"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.SetPrimitiveType.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.SetPrimitiveType.html",
    "title": "Method SetPrimitiveType | SharpVectors Documentation",
    "keywords": "Method SetPrimitiveType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SetPrimitiveType(CssPrimitiveType) protected void SetPrimitiveType(CssPrimitiveType type) Parameters type CssPrimitiveType"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.SetStringValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.SetStringValue.html",
    "title": "Method SetStringValue | SharpVectors Documentation",
    "keywords": "Method SetStringValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SetStringValue(CssPrimitiveType, string) A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a DomException will be raised. public virtual void SetStringValue(CssPrimitiveType stringType, string stringValue) Parameters stringType CssPrimitiveType A string code as defined above. The string code can only be a string unit type (i.e. CSS_STRING, CSS_URI, CSS_IDENT, and CSS_ATTR). stringValue string The new string value Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue._colorValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue._colorValue.html",
    "title": "Field _colorValue | SharpVectors Documentation",
    "keywords": "Field _colorValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll protected CssColor _colorValue Returns CssColor"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue._floatValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue._floatValue.html",
    "title": "Field _floatValue | SharpVectors Documentation",
    "keywords": "Field _floatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll protected double _floatValue Returns double"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveValue.html",
    "title": "Class CssPrimitiveValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll This implements the ICssPrimitiveValue interface which represents a single CSS value. public class CssPrimitiveValue : CssValue, ICssPrimitiveValue, ICssValue Inheritance object CssValue CssPrimitiveValue Implements ICssPrimitiveValue ICssValue Derived CssAbsPrimitiveValue CssPrimitiveAngleValue CssPrimitiveColorValue CssPrimitiveLengthValue CssPrimitiveRgbValue CssPrimitiveVarsValue Inherited Members CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks This interface may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the getPropertyCSSValue method of the CSSStyleDeclaration interface. A CSSPrimitiveValue object only occurs in a context of a CSS property. Conversions are allowed between absolute values (from millimeters to centimeters, from degrees to radians, and so on) but not between relative values. (For example, a pixel value cannot be converted to a centimeter value.) Percentage values can't be converted since they are relative to the parent value (or another property value). There is one exception for color percentage values: since a color percentage value is relative to the range 0-255, a color percentage value can be converted to a number; (see also the RGBColor interface). Constructors CssPrimitiveValue() Only for internal use CssPrimitiveValue(string, bool) Fields _colorValue _floatValue Properties CssText A string representation of the current value. PrimitiveType The type of the value as defined by the constants specified above. PrimitiveTypeAsString Methods Create(Match, bool) GetAbsoluteValue(string, XmlElement) GetCounterValue() This method is used to get the Counter value. If this CSS value doesn't contain a counter value, a DomException is raised. Modification to the corresponding style property can be achieved using the Counter interface GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised GetRectValue() This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a DomException is raised. Modification to the corresponding style property can be achieved using the Rect interface. GetRgbColorValue() This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DomException is raised. Modification to the corresponding style property can be achieved using the RGBColor interface. GetStringValue() This method is used to get the string value. If the CSS value doesn't contain a string value, a DomException is raised. Note: Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string. OnSetCssText(string) SetFloatValue(CssPrimitiveType, double) A method to set the float value with a specified unit. If the property attached with this value can not accept the specified unit or the float value, the value will be unchanged and a DomException will be raised. SetFloatValue(double) SetFloatValue(string) SetPrimitiveType(CssPrimitiveType) SetStringValue(CssPrimitiveType, string) A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a DomException will be raised."
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.-ctor.html",
    "title": "Constructor CssPrimitiveVarsValue | SharpVectors Documentation",
    "keywords": "Constructor CssPrimitiveVarsValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssPrimitiveVarsValue(string, bool) public CssPrimitiveVarsValue(string cssText, bool readOnly) Parameters cssText string readOnly bool"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.VarName.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.VarName.html",
    "title": "Property VarName | SharpVectors Documentation",
    "keywords": "Property VarName Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll VarName public string VarName { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.VarValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.VarValue.html",
    "title": "Property VarValue | SharpVectors Documentation",
    "keywords": "Property VarValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll VarValue public string VarValue { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPrimitiveVarsValue.html",
    "title": "Class CssPrimitiveVarsValue | SharpVectors Documentation",
    "keywords": "Class CssPrimitiveVarsValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public sealed class CssPrimitiveVarsValue : CssPrimitiveValue, ICssPrimitiveValue, ICssValue Inheritance object CssValue CssPrimitiveValue CssPrimitiveVarsValue Implements ICssPrimitiveValue ICssValue Inherited Members CssPrimitiveValue.PrimitiveTypeAsString CssPrimitiveValue.CssText CssPrimitiveValue.Create(Match, bool) CssPrimitiveValue.GetAbsoluteValue(string, XmlElement) CssPrimitiveValue.SetFloatValue(CssPrimitiveType, double) CssPrimitiveValue.GetFloatValue(CssPrimitiveType) CssPrimitiveValue.SetStringValue(CssPrimitiveType, string) CssPrimitiveValue.GetStringValue() CssPrimitiveValue.GetCounterValue() CssPrimitiveValue.GetRectValue() CssPrimitiveValue.GetRgbColorValue() CssPrimitiveValue.PrimitiveType CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssPrimitiveVarsValue(string, bool) Properties VarName VarValue"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.-ctor.html",
    "title": "Constructor CssPropertyProfile | SharpVectors Documentation",
    "keywords": "Constructor CssPropertyProfile Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssPropertyProfile() public CssPropertyProfile()"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.Add.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.Add.html",
    "title": "Method Add | SharpVectors Documentation",
    "keywords": "Method Add Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Add(string, bool, string) public void Add(string propertyName, bool isInheritable, string initialValue) Parameters propertyName string isInheritable bool initialValue string"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.GetAllPropertyNames.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.GetAllPropertyNames.html",
    "title": "Method GetAllPropertyNames | SharpVectors Documentation",
    "keywords": "Method GetAllPropertyNames Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetAllPropertyNames() public ICollection<string> GetAllPropertyNames() Returns ICollection<string>"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.GetInitialCssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.GetInitialCssValue.html",
    "title": "Method GetInitialCssValue | SharpVectors Documentation",
    "keywords": "Method GetInitialCssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetInitialCssValue(string) public CssValue GetInitialCssValue(string propertyName) Parameters propertyName string Returns CssValue"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.GetInitialValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.GetInitialValue.html",
    "title": "Method GetInitialValue | SharpVectors Documentation",
    "keywords": "Method GetInitialValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetInitialValue(string) public string GetInitialValue(string propertyName) Parameters propertyName string Returns string"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.IsInheritable.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.IsInheritable.html",
    "title": "Method IsInheritable | SharpVectors Documentation",
    "keywords": "Method IsInheritable Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsInheritable(string) public bool IsInheritable(string propertyName) Parameters propertyName string Returns bool"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.Length.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Length public int Length { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.SvgProfile.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.SvgProfile.html",
    "title": "Property SvgProfile | SharpVectors Documentation",
    "keywords": "Property SvgProfile Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SvgProfile public static CssPropertyProfile SvgProfile { get; } Property Value CssPropertyProfile"
  },
  "api/SharpVectors.Dom.Css.CssPropertyProfile.html": {
    "href": "api/SharpVectors.Dom.Css.CssPropertyProfile.html",
    "title": "Class CssPropertyProfile | SharpVectors Documentation",
    "keywords": "Class CssPropertyProfile Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public sealed class CssPropertyProfile Inheritance object CssPropertyProfile Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssPropertyProfile() Properties Length SvgProfile Methods Add(string, bool, string) GetAllPropertyNames() GetInitialCssValue(string) GetInitialValue(string) IsInheritable(string)"
  },
  "api/SharpVectors.Dom.Css.CssRect.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssRect.-ctor.html",
    "title": "Constructor CssRect | SharpVectors Documentation",
    "keywords": "Constructor CssRect Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssRect(string, bool) Constructs a new Rect public CssRect(string rectString, bool readOnly) Parameters rectString string readOnly bool Specifies if the Rect should be read-only"
  },
  "api/SharpVectors.Dom.Css.CssRect.Bottom.html": {
    "href": "api/SharpVectors.Dom.Css.CssRect.Bottom.html",
    "title": "Property Bottom | SharpVectors Documentation",
    "keywords": "Property Bottom Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Bottom This attribute is used for the bottom of the rect. public ICssPrimitiveValue Bottom { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssRect.Left.html": {
    "href": "api/SharpVectors.Dom.Css.CssRect.Left.html",
    "title": "Property Left | SharpVectors Documentation",
    "keywords": "Property Left Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Left This attribute is used for the left of the rect. public ICssPrimitiveValue Left { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssRect.Right.html": {
    "href": "api/SharpVectors.Dom.Css.CssRect.Right.html",
    "title": "Property Right | SharpVectors Documentation",
    "keywords": "Property Right Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Right This attribute is used for the right of the rect. public ICssPrimitiveValue Right { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssRect.Top.html": {
    "href": "api/SharpVectors.Dom.Css.CssRect.Top.html",
    "title": "Property Top | SharpVectors Documentation",
    "keywords": "Property Top Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Top This attribute is used for the top of the rect. public ICssPrimitiveValue Top { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.CssRect.html": {
    "href": "api/SharpVectors.Dom.Css.CssRect.html",
    "title": "Class CssRect | SharpVectors Documentation",
    "keywords": "Class CssRect Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The Rect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property. public sealed class CssRect : ICssRect Inheritance object CssRect Implements ICssRect Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssRect(string, bool) Constructs a new Rect Properties Bottom This attribute is used for the bottom of the rect. Left This attribute is used for the left of the rect. Right This attribute is used for the right of the rect. Top This attribute is used for the top of the rect."
  },
  "api/SharpVectors.Dom.Css.CssRule.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule.-ctor.html",
    "title": "Constructor CssRule | SharpVectors Documentation",
    "keywords": "Constructor CssRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssRule(object, bool, IList<string>, CssStyleSheetType) protected CssRule(object parent, bool readOnly, IList<string> replacedStrings, CssStyleSheetType origin) Parameters parent object readOnly bool replacedStrings IList<string> origin CssStyleSheetType"
  },
  "api/SharpVectors.Dom.Css.CssRule.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value. public virtual string CssText { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssRule.GetStylesForElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule.GetStylesForElement.html",
    "title": "Method GetStylesForElement | SharpVectors Documentation",
    "keywords": "Method GetStylesForElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order protected virtual void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters elt XmlElement The element to find styles for pseudoElt string The pseudo-element to find styles for ml MediaList The medialist that the document is using csd CssCollectedStyleDeclaration A CssStyleDeclaration that holds the collected styles"
  },
  "api/SharpVectors.Dom.Css.CssRule.ParentRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule.ParentRule.html",
    "title": "Property ParentRule | SharpVectors Documentation",
    "keywords": "Property ParentRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ParentRule If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule. If this rule is not nested inside any other rules, this returns null public ICssRule ParentRule { get; } Property Value ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssRule.ParentStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule.ParentStyleSheet.html",
    "title": "Property ParentStyleSheet | SharpVectors Documentation",
    "keywords": "Property ParentStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ParentStyleSheet The style sheet that contains this rule public ICssStyleSheet ParentStyleSheet { get; } Property Value ICssStyleSheet"
  },
  "api/SharpVectors.Dom.Css.CssRule.ResolveOwnerNode.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule.ResolveOwnerNode.html",
    "title": "Method ResolveOwnerNode | SharpVectors Documentation",
    "keywords": "Method ResolveOwnerNode Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ResolveOwnerNode() Finds the owner node of this rule public XmlNode ResolveOwnerNode() Returns XmlNode The owner XmlNode"
  },
  "api/SharpVectors.Dom.Css.CssRule.Type.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Type The type of the rule, as defined above. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. public abstract CssRuleType Type { get; } Property Value CssRuleType"
  },
  "api/SharpVectors.Dom.Css.CssRule._isReadOnly.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule._isReadOnly.html",
    "title": "Field _isReadOnly | SharpVectors Documentation",
    "keywords": "Field _isReadOnly Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Specifies the read/write state of the instance protected bool _isReadOnly Returns bool"
  },
  "api/SharpVectors.Dom.Css.CssRule._origin.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule._origin.html",
    "title": "Field _origin | SharpVectors Documentation",
    "keywords": "Field _origin Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The origin stylesheet type of this rule protected CssStyleSheetType _origin Returns CssStyleSheetType"
  },
  "api/SharpVectors.Dom.Css.CssRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssRule.html",
    "title": "Class CssRule | SharpVectors Documentation",
    "keywords": "Class CssRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public abstract class CssRule : ICssRule Inheritance object CssRule Implements ICssRule Derived CssCharsetRule CssFontFaceRule CssImportRule CssMediaRule CssPageRule CssStyleRule CssUnknownRule Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CssRule(object, bool, IList<string>, CssStyleSheetType) Fields _isReadOnly Specifies the read/write state of the instance _origin The origin stylesheet type of this rule Properties CssText The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value. ParentRule If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule. If this rule is not nested inside any other rules, this returns null ParentStyleSheet The style sheet that contains this rule Type The type of the rule, as defined above. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Methods GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order ResolveOwnerNode() Finds the owner node of this rule"
  },
  "api/SharpVectors.Dom.Css.CssRuleList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.-ctor.html",
    "title": "Constructor CssRuleList | SharpVectors Documentation",
    "keywords": "Constructor CssRuleList Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssRuleList(ref string, object, IList<string>, bool, CssStyleSheetType) Constructor for CssRuleList public CssRuleList(ref string cssText, object parent, IList<string> replacedStrings, bool readOnly, CssStyleSheetType origin) Parameters cssText string The CSS text containing the rules that will be in this list parent object The parent rule or parent stylesheet replacedStrings IList<string> An array of strings that have been replaced in the string used for matching. These needs to be put back use the DereplaceStrings method. readOnly bool True if this instance is readonly origin CssStyleSheetType The type of CssStyleSheet"
  },
  "api/SharpVectors.Dom.Css.CssRuleList.Add.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.Add.html",
    "title": "Method Add | SharpVectors Documentation",
    "keywords": "Method Add Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Add(ICssRule) Adds an item to the ICollection<T>. public void Add(ICssRule item) Parameters item ICssRule The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.Clear.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.Contains.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.Contains.html",
    "title": "Method Contains | SharpVectors Documentation",
    "keywords": "Method Contains Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Contains(ICssRule) Determines whether the ICollection<T> contains a specific value. public bool Contains(ICssRule item) Parameters item ICssRule The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.CopyTo.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.CopyTo.html",
    "title": "Method CopyTo | SharpVectors Documentation",
    "keywords": "Method CopyTo Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CopyTo(ICssRule[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(ICssRule[] array, int arrayIndex) Parameters array ICssRule[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.Count.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.GetEnumerator.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.GetEnumerator.html",
    "title": "Method GetEnumerator | SharpVectors Documentation",
    "keywords": "Method GetEnumerator Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<ICssRule> GetEnumerator() Returns IEnumerator<ICssRule> A IEnumerator<T> that can be used to iterate through the collection."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.HasFontRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.HasFontRule.html",
    "title": "Property HasFontRule | SharpVectors Documentation",
    "keywords": "Property HasFontRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll HasFontRule Gets a value specifying whether the contents of this list includes a font rule. This is an implementation extension, not CSS specification. public bool HasFontRule { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssRuleList.IndexOf.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.IndexOf.html",
    "title": "Method IndexOf | SharpVectors Documentation",
    "keywords": "Method IndexOf Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IndexOf(ICssRule) Determines the index of a specific item in the IList<T>. public int IndexOf(ICssRule item) Parameters item ICssRule The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.Insert.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.Insert.html",
    "title": "Method Insert | SharpVectors Documentation",
    "keywords": "Method Insert Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Insert(int, ICssRule) Inserts an item to the IList<T> at the specified index. public void Insert(int index, ICssRule item) Parameters index int The zero-based index at which item should be inserted. item ICssRule The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.IsReadOnly.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.IsReadOnly.html",
    "title": "Property IsReadOnly | SharpVectors Documentation",
    "keywords": "Property IsReadOnly Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.Item.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll this[ulong] Used to retrieve a CSS rule by ordinal index. The order in this collection represents the order of the rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, this returns null. public ICssRule this[ulong index] { get; set; } Parameters index ulong Property Value ICssRule this[int] Gets or sets the element at the specified index. public ICssRule this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value ICssRule The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.Length.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Length The number of CSSRules in the list. The range of valid child rule indices is 0 to length-1 inclusive. public ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Css.CssRuleList.Remove.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.Remove.html",
    "title": "Method Remove | SharpVectors Documentation",
    "keywords": "Method Remove Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Remove(ICssRule) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(ICssRule item) Parameters item ICssRule The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.RemoveAt.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.RemoveAt.html",
    "title": "Method RemoveAt | SharpVectors Documentation",
    "keywords": "Method RemoveAt Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/SharpVectors.Dom.Css.CssRuleList.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleList.html",
    "title": "Class CssRuleList | SharpVectors Documentation",
    "keywords": "Class CssRuleList Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules. The items in the CSSRuleList are accessible via an integral index, starting from 0. public sealed class CssRuleList : ICssRuleList, IList<ICssRule>, ICollection<ICssRule>, IEnumerable<ICssRule>, IEnumerable Inheritance object CssRuleList Implements ICssRuleList IList<ICssRule> ICollection<ICssRule> IEnumerable<ICssRule> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssRuleList(ref string, object, IList<string>, bool, CssStyleSheetType) Constructor for CssRuleList Properties Count Gets the number of elements contained in the ICollection<T>. HasFontRule Gets a value specifying whether the contents of this list includes a font rule. This is an implementation extension, not CSS specification. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. this[int] Gets or sets the element at the specified index. this[ulong] Used to retrieve a CSS rule by ordinal index. The order in this collection represents the order of the rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, this returns null. Length The number of CSSRules in the list. The range of valid child rule indices is 0 to length-1 inclusive. Methods Add(ICssRule) Adds an item to the ICollection<T>. Clear() Removes all items from the ICollection<T>. Contains(ICssRule) Determines whether the ICollection<T> contains a specific value. CopyTo(ICssRule[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. GetEnumerator() Returns an enumerator that iterates through the collection. IndexOf(ICssRule) Determines the index of a specific item in the IList<T>. Insert(int, ICssRule) Inserts an item to the IList<T> at the specified index. Remove(ICssRule) Removes the first occurrence of a specific object from the ICollection<T>. RemoveAt(int) Removes the IList<T> item at the specified index."
  },
  "api/SharpVectors.Dom.Css.CssRuleType.html": {
    "href": "api/SharpVectors.Dom.Css.CssRuleType.html",
    "title": "Enum CssRuleType | SharpVectors Documentation",
    "keywords": "Enum CssRuleType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The CssRuleType Enum contains the possible Rule Type Values. This is an extension of the CSS specification. The spec contains only a list of contstant in the ICssRule interface. public enum CssRuleType Fields UnknownRule = 0 The rule is a CSSUnknownRule. StyleRule = 1 The rule is a CSSStyleRule. CharsetRule = 2 The rule is a CSSCharsetRule. ImportRule = 3 The rule is a CSSImportRule. MediaRule = 4 The rule is a CSSMediaRule. FontFaceRule = 5 The rule is a CSSFontFaceRule. PageRule = 6 The rule is a CSSPageRule."
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.-ctor.html",
    "title": "Constructor CssStyleDeclaration | SharpVectors Documentation",
    "keywords": "Constructor CssStyleDeclaration Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssStyleDeclaration() The constructor used internally when collecting styles for a specified element protected CssStyleDeclaration() CssStyleDeclaration(ref string, CssRule, bool, CssStyleSheetType) The constructor for CssStyleDeclaration public CssStyleDeclaration(ref string css, CssRule parentRule, bool readOnly, CssStyleSheetType origin) Parameters css string The string to parse for CSS parentRule CssRule The parent rule or parent stylesheet readOnly bool True if this instance is readonly origin CssStyleSheetType The type of CssStyleSheet CssStyleDeclaration(string, CssRule, bool, CssStyleSheetType) public CssStyleDeclaration(string css, CssRule parentRule, bool readOnly, CssStyleSheetType origin) Parameters css string parentRule CssRule readOnly bool origin CssStyleSheetType"
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties. public virtual string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or a property is readonly."
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetPropertyCssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetPropertyCssValue.html",
    "title": "Method GetPropertyCssValue | SharpVectors Documentation",
    "keywords": "Method GetPropertyCssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetPropertyCssValue(string) Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the getPropertyValue and setProperty methods. public virtual ICssValue GetPropertyCssValue(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns ICssValue Returns the value of the property if it has been explicitly set for this declaration block. Returns null if the property has not been set."
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetPropertyPriority.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetPropertyPriority.html",
    "title": "Method GetPropertyPriority | SharpVectors Documentation",
    "keywords": "Method GetPropertyPriority Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetPropertyPriority(string) Used to retrieve the priority of a CSS property (e.g. the \"important\" qualifier) if the property has been explicitly set in this declaration block. public virtual string GetPropertyPriority(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns string A string representing the priority (e.g. \"important\") if one exists. The empty string if none exists."
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetPropertyValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetPropertyValue.html",
    "title": "Method GetPropertyValue | SharpVectors Documentation",
    "keywords": "Method GetPropertyValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetPropertyValue(string) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. public virtual string GetPropertyValue(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns string Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set. GetPropertyValue(string[]) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. public virtual string GetPropertyValue(string[] propertyNames) Parameters propertyNames string[] The name of the CSS property. See the CSS property index. Returns string Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set."
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetStylesForElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetStylesForElement.html",
    "title": "Method GetStylesForElement | SharpVectors Documentation",
    "keywords": "Method GetStylesForElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetStylesForElement(CssCollectedStyleDeclaration, int) Used to find matching style rules in the cascading order public void GetStylesForElement(CssCollectedStyleDeclaration csd, int specificity) Parameters csd CssCollectedStyleDeclaration specificity int"
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetValidUrlFromCSS.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetValidUrlFromCSS.html",
    "title": "Method GetValidUrlFromCSS | SharpVectors Documentation",
    "keywords": "Method GetValidUrlFromCSS Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetValidUrlFromCSS(string, string) Parsing CSS in C#: extracting all URLs public static string GetValidUrlFromCSS(string cssStr, string validProperty) Parameters cssStr string validProperty string Returns string Remarks https://stackoverflow.com/questions/18262390/parsing-css-in-c-extracting-all-urls"
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetValidUrlsFromCSS.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.GetValidUrlsFromCSS.html",
    "title": "Method GetValidUrlsFromCSS | SharpVectors Documentation",
    "keywords": "Method GetValidUrlsFromCSS Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetValidUrlsFromCSS(string) public static IList<string> GetValidUrlsFromCSS(string cssStr) Parameters cssStr string Returns IList<string>"
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.Item.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll this[ulong] Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block. The name of the property at this ordinal position. The empty string if no property exists at this position. public virtual string this[ulong index] { get; } Parameters index ulong Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.Length.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Length The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive. public virtual ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.Origin.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.Origin.html",
    "title": "Property Origin | SharpVectors Documentation",
    "keywords": "Property Origin Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Origin public CssStyleSheetType Origin { get; } Property Value CssStyleSheetType"
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.ParentRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.ParentRule.html",
    "title": "Property ParentRule | SharpVectors Documentation",
    "keywords": "Property ParentRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ParentRule The CSS rule that contains this declaration block or null if this CSSStyleDeclaration is not attached to a CSSRule. public ICssRule ParentRule { get; } Property Value ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.ReadOnly.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.ReadOnly.html",
    "title": "Property ReadOnly | SharpVectors Documentation",
    "keywords": "Property ReadOnly Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ReadOnly public bool ReadOnly { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.RemoveProperty.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.RemoveProperty.html",
    "title": "Method RemoveProperty | SharpVectors Documentation",
    "keywords": "Method RemoveProperty Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll RemoveProperty(string) Used to remove a CSS property if it has been explicitly set within this declaration block. public string RemoveProperty(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns string Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set or the property name does not correspond to a known CSS property. Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly."
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.SetProperty.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.SetProperty.html",
    "title": "Method SetProperty | SharpVectors Documentation",
    "keywords": "Method SetProperty Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SetProperty(string, string, string) Used to set a property value and priority within this declaration block public void SetProperty(string propertyName, string value, string priority) Parameters propertyName string The name of the CSS property. See the CSS property index. value string The new value of the property. priority string The new priority of the property (e.g. \"important\"). Exceptions DomException SYNTAX_ERR: Raised if the specified value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly."
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.SetPropertyValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.SetPropertyValue.html",
    "title": "Method SetPropertyValue | SharpVectors Documentation",
    "keywords": "Method SetPropertyValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SetPropertyValue(string, string) Used to set a property value and priority within this declaration block public void SetPropertyValue(string propertyName, string value) Parameters propertyName string The name of the CSS property. See the CSS property index. value string The new value of the property. Exceptions DomException SYNTAX_ERR: Raised if the specified value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly."
  },
  "api/SharpVectors.Dom.Css.CssStyleDeclaration.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleDeclaration.html",
    "title": "Class CssStyleDeclaration | SharpVectors Documentation",
    "keywords": "Class CssStyleDeclaration Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The ICssStyleDeclaration interface represents a single CSS declaration block. This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block. While an implementation may not recognize all CSS properties within a CSS declaration block, it is expected to provide access to all specified properties in the style sheet through the ICssStyleDeclaration interface. Furthermore, implementations that support a specific level of CSS should correctly handle CSS shorthand properties for that level. For a further discussion of shorthand properties, see the CSS2Properties interface. This interface is also used to provide a read-only access to the computed values of an element. See also the ViewCSS interface. Note: The CSS Object Model doesn't provide an access to the specified or actual values of the CSS cascade public class CssStyleDeclaration : ICssStyleDeclaration Inheritance object CssStyleDeclaration Implements ICssStyleDeclaration Derived CssCollectedStyleDeclaration Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CssStyleDeclaration() The constructor used internally when collecting styles for a specified element CssStyleDeclaration(string, CssRule, bool, CssStyleSheetType) CssStyleDeclaration(ref string, CssRule, bool, CssStyleSheetType) The constructor for CssStyleDeclaration Properties CssText The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties. this[ulong] Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block. The name of the property at this ordinal position. The empty string if no property exists at this position. Length The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive. Origin ParentRule The CSS rule that contains this declaration block or null if this CSSStyleDeclaration is not attached to a CSSRule. ReadOnly Methods GetPropertyCssValue(string) Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the getPropertyValue and setProperty methods. GetPropertyPriority(string) Used to retrieve the priority of a CSS property (e.g. the \"important\" qualifier) if the property has been explicitly set in this declaration block. GetPropertyValue(string) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. GetPropertyValue(string[]) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. GetStylesForElement(CssCollectedStyleDeclaration, int) Used to find matching style rules in the cascading order GetValidUrlFromCSS(string, string) Parsing CSS in C#: extracting all URLs GetValidUrlsFromCSS(string) RemoveProperty(string) Used to remove a CSS property if it has been explicitly set within this declaration block. SetProperty(string, string, string) Used to set a property value and priority within this declaration block SetPropertyValue(string, string) Used to set a property value and priority within this declaration block"
  },
  "api/SharpVectors.Dom.Css.CssStyleRule.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleRule.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText The entire text of the CssStyleRule public override string CssText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssStyleRule.GetStylesForElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleRule.GetStylesForElement.html",
    "title": "Method GetStylesForElement | SharpVectors Documentation",
    "keywords": "Method GetStylesForElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order protected override void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters elt XmlElement The element to find styles for pseudoElt string The pseudo-element to find styles for ml MediaList The medialist that the document is using csd CssCollectedStyleDeclaration A CssStyleDeclaration that holds the collected styles"
  },
  "api/SharpVectors.Dom.Css.CssStyleRule.SelectorText.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleRule.SelectorText.html",
    "title": "Property SelectorText | SharpVectors Documentation",
    "keywords": "Property SelectorText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SelectorText The textual representation of the selector for the rule set. The implementation may have stripped out insignificant whitespace while parsing the selector. public string SelectorText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly"
  },
  "api/SharpVectors.Dom.Css.CssStyleRule.Style.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleRule.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Style The declaration-block of this rule set. public ICssStyleDeclaration Style { get; } Property Value ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.CssStyleRule.Type.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleRule.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. public override CssRuleType Type { get; } Property Value CssRuleType"
  },
  "api/SharpVectors.Dom.Css.CssStyleRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleRule.html",
    "title": "Class CssStyleRule | SharpVectors Documentation",
    "keywords": "Class CssStyleRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The CSSStyleRule interface represents a single rule set in a CSS style sheet. public class CssStyleRule : CssRule, ICssStyleRule, ICssRule Inheritance object CssRule CssStyleRule Implements ICssStyleRule ICssRule Inherited Members CssRule._origin CssRule._isReadOnly CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties CssText The entire text of the CssStyleRule SelectorText The textual representation of the selector for the rule set. The implementation may have stripped out insignificant whitespace while parsing the selector. Style The declaration-block of this rule set. Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. Methods GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order"
  },
  "api/SharpVectors.Dom.Css.CssStyleSheet.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheet.-ctor.html",
    "title": "Constructor CssStyleSheet | SharpVectors Documentation",
    "keywords": "Constructor CssStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssStyleSheet(XmlNode, string, string, string, CssRule, CssStyleSheetType) Constructor for CssStyleSheet public CssStyleSheet(XmlNode ownerNode, string href, string title, string media, CssRule ownerRule, CssStyleSheetType origin) Parameters ownerNode XmlNode The node that owns this stylesheet. E.g. used for getting the BaseUri href string The URL of the stylesheet title string The title of the stylesheet media string List of medias for the stylesheet ownerRule CssRule The rule (e.g. ImportRule) that referenced this stylesheet origin CssStyleSheetType The type of stylesheet"
  },
  "api/SharpVectors.Dom.Css.CssStyleSheet.CssRules.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheet.CssRules.html",
    "title": "Property CssRules | SharpVectors Documentation",
    "keywords": "Property CssRules Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssRules The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules. public ICssRuleList CssRules { get; } Property Value ICssRuleList"
  },
  "api/SharpVectors.Dom.Css.CssStyleSheet.DeleteRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheet.DeleteRule.html",
    "title": "Method DeleteRule | SharpVectors Documentation",
    "keywords": "Method DeleteRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll DeleteRule(ulong) Used to delete a rule from the style sheet. public void DeleteRule(ulong index) Parameters index ulong The index within the style sheet's rule list of the rule to remove. Exceptions DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the style sheet's rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly."
  },
  "api/SharpVectors.Dom.Css.CssStyleSheet.GetStylesForElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheet.GetStylesForElement.html",
    "title": "Method GetStylesForElement | SharpVectors Documentation",
    "keywords": "Method GetStylesForElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order protected override void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters elt XmlElement The element to find styles for pseudoElt string The pseudo-element to find styles for ml MediaList The medialist that the document is using csd CssCollectedStyleDeclaration A CssStyleDeclaration that holds the collected styles"
  },
  "api/SharpVectors.Dom.Css.CssStyleSheet.InsertRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheet.InsertRule.html",
    "title": "Method InsertRule | SharpVectors Documentation",
    "keywords": "Method InsertRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll InsertRule(string, ulong) Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade. public ulong InsertRule(string rule, ulong index) Parameters rule string The parsable text representing the rule. For rule sets this contains both the selector and the style declaration. For at-rules, this specifies both the at-identifier and the rule content. index ulong The index within the style sheet's rule list of the rule before which to insert the specified rule. If the specified index is equal to the length of the style sheet's rule collection, the rule will be added to the end of the style sheet. Returns ulong The index within the style sheet's rule collection of the newly inserted rule. Exceptions DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the style sheet's rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly. DomException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the specified index e.g. if an @import rule is inserted after a standard rule set or other at-rule. DomException SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable."
  },
  "api/SharpVectors.Dom.Css.CssStyleSheet.OwnerRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheet.OwnerRule.html",
    "title": "Property OwnerRule | SharpVectors Documentation",
    "keywords": "Property OwnerRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll OwnerRule If this style sheet comes from an @import rule, the ownerRule attribute will contain the CSSImportRule. In that case, the ownerNode attribute in the StyleSheet interface will be null. If the style sheet comes from an element or a processing instruction, the ownerRule attribute will be null and the ownerNode attribute will contain the Node. public ICssRule OwnerRule { get; } Property Value ICssRule"
  },
  "api/SharpVectors.Dom.Css.CssStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheet.html",
    "title": "Class CssStyleSheet | SharpVectors Documentation",
    "keywords": "Class CssStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The ICssStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is \"text/css\". public class CssStyleSheet : StyleSheet, ICssStyleSheet, IStyleSheet Inheritance object StyleSheet CssStyleSheet Implements ICssStyleSheet IStyleSheet Inherited Members StyleSheet.SheetContent StyleSheet.Media StyleSheet.Title StyleSheet.Href StyleSheet.AbsoluteHref StyleSheet.ParentStyleSheet StyleSheet.OwnerNode StyleSheet.Disabled StyleSheet.Type object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CssStyleSheet(XmlNode, string, string, string, CssRule, CssStyleSheetType) Constructor for CssStyleSheet Properties CssRules The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules. OwnerRule If this style sheet comes from an @import rule, the ownerRule attribute will contain the CSSImportRule. In that case, the ownerNode attribute in the StyleSheet interface will be null. If the style sheet comes from an element or a processing instruction, the ownerRule attribute will be null and the ownerNode attribute will contain the Node. Methods DeleteRule(ulong) Used to delete a rule from the style sheet. GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order InsertRule(string, ulong) Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade."
  },
  "api/SharpVectors.Dom.Css.CssStyleSheetType.html": {
    "href": "api/SharpVectors.Dom.Css.CssStyleSheetType.html",
    "title": "Enum CssStyleSheetType | SharpVectors Documentation",
    "keywords": "Enum CssStyleSheetType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The different types of CssStyleSheets public enum CssStyleSheetType Fields UserAgent = 0 The stylesheet is a user agent stylesheet Author = 1 The stylesheet is a author stylesheet User = 2 The stylesheet is a user stylesheet Inline = 3 The styles comes from a inline style attribute NonCssPresentationalHints = 4 Collector = 5 Used internally for collection of styles for an element Unknown = 6 Used internally for unknown properties"
  },
  "api/SharpVectors.Dom.Css.CssUnknownRule.Type.html": {
    "href": "api/SharpVectors.Dom.Css.CssUnknownRule.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type. public override CssRuleType Type { get; } Property Value CssRuleType"
  },
  "api/SharpVectors.Dom.Css.CssUnknownRule.html": {
    "href": "api/SharpVectors.Dom.Css.CssUnknownRule.html",
    "title": "Class CssUnknownRule | SharpVectors Documentation",
    "keywords": "Class CssUnknownRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll The CSSUnknownRule interface represents an at-rule not supported by this user agent. public sealed class CssUnknownRule : CssRule, ICssUnknownRule, ICssRule Inheritance object CssRule CssUnknownRule Implements ICssUnknownRule ICssRule Inherited Members CssRule.ResolveOwnerNode() CssRule.ParentStyleSheet CssRule.ParentRule CssRule.CssText object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Type The type of the rule. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type."
  },
  "api/SharpVectors.Dom.Css.CssValue.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.-ctor.html",
    "title": "Constructor CssValue | SharpVectors Documentation",
    "keywords": "Constructor CssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssValue(CssValueType, string, bool) Constructor for CssValue public CssValue(CssValueType type, string cssText, bool readOnly) Parameters type CssValueType The type of value cssText string The entire content of the value readOnly bool Specifies if the instance is read-only CssValue() Only for internal use protected CssValue()"
  },
  "api/SharpVectors.Dom.Css.CssValue.AnglePattern.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.AnglePattern.html",
    "title": "Field AnglePattern | SharpVectors Documentation",
    "keywords": "Field AnglePattern Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public static readonly string AnglePattern Returns string"
  },
  "api/SharpVectors.Dom.Css.CssValue.AngleUnitPattern.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.AngleUnitPattern.html",
    "title": "Field AngleUnitPattern | SharpVectors Documentation",
    "keywords": "Field AngleUnitPattern Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public static readonly string AngleUnitPattern Returns string"
  },
  "api/SharpVectors.Dom.Css.CssValue.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssText A string representation of the current value. public virtual string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Css.CssValue.CssValueType.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.CssValueType.html",
    "title": "Property CssValueType | SharpVectors Documentation",
    "keywords": "Property CssValueType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssValueType A code defining the type of the value as defined above public virtual CssValueType CssValueType { get; } Property Value CssValueType"
  },
  "api/SharpVectors.Dom.Css.CssValue.GetAbsoluteValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.GetAbsoluteValue.html",
    "title": "Method GetAbsoluteValue | SharpVectors Documentation",
    "keywords": "Method GetAbsoluteValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetAbsoluteValue(string, XmlElement) public virtual CssValue GetAbsoluteValue(string propertyName, XmlElement elm) Parameters propertyName string elm XmlElement Returns CssValue"
  },
  "api/SharpVectors.Dom.Css.CssValue.GetCssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.GetCssValue.html",
    "title": "Method GetCssValue | SharpVectors Documentation",
    "keywords": "Method GetCssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetCssValue(string, bool) Detects what kind of value cssText contains and returns an instance of the correct CssValue class public static CssValue GetCssValue(string cssText, bool readOnly) Parameters cssText string The text to parse for a CSS value readOnly bool Specifies if this instance is read-only Returns CssValue The correct type of CSS value"
  },
  "api/SharpVectors.Dom.Css.CssValue.IsAbsolute.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.IsAbsolute.html",
    "title": "Property IsAbsolute | SharpVectors Documentation",
    "keywords": "Property IsAbsolute Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification. public virtual bool IsAbsolute { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssValue.LengthPattern.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.LengthPattern.html",
    "title": "Field LengthPattern | SharpVectors Documentation",
    "keywords": "Field LengthPattern Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public static readonly string LengthPattern Returns string"
  },
  "api/SharpVectors.Dom.Css.CssValue.LengthUnitPattern.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.LengthUnitPattern.html",
    "title": "Field LengthUnitPattern | SharpVectors Documentation",
    "keywords": "Field LengthUnitPattern Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public static readonly string LengthUnitPattern Returns string"
  },
  "api/SharpVectors.Dom.Css.CssValue.ReadOnly.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.ReadOnly.html",
    "title": "Property ReadOnly | SharpVectors Documentation",
    "keywords": "Property ReadOnly Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ReadOnly public virtual bool ReadOnly { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssValue.ToString.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.ToString.html",
    "title": "Method ToString | SharpVectors Documentation",
    "keywords": "Method ToString Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/SharpVectors.Dom.Css.CssValue._cssValueType.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue._cssValueType.html",
    "title": "Field _cssValueType | SharpVectors Documentation",
    "keywords": "Field _cssValueType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll protected CssValueType _cssValueType Returns CssValueType"
  },
  "api/SharpVectors.Dom.Css.CssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssValue.html",
    "title": "Class CssValue | SharpVectors Documentation",
    "keywords": "Class CssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll This implements the ICssValue interface, which represents a simple or a complex value. A ICssValue object only occurs in a context of a CSS property. public class CssValue : ICssValue Inheritance object CssValue Implements ICssValue Derived CssAbsValue CssPrimitiveValue SvgColor Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CssValue() Only for internal use CssValue(CssValueType, string, bool) Constructor for CssValue Fields AnglePattern AngleUnitPattern LengthPattern LengthUnitPattern _cssValueType Properties CssText A string representation of the current value. CssValueType A code defining the type of the value as defined above IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification. ReadOnly Methods GetAbsoluteValue(string, XmlElement) GetCssValue(string, bool) Detects what kind of value cssText contains and returns an instance of the correct CssValue class ToString() Returns a string that represents the current object."
  },
  "api/SharpVectors.Dom.Css.CssValueType.html": {
    "href": "api/SharpVectors.Dom.Css.CssValueType.html",
    "title": "Enum CssValueType | SharpVectors Documentation",
    "keywords": "Enum CssValueType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The CssValueType Enum contains the possible CSS Value Types. This is an extension to the CSS specification. The specification has a list of constants defined within the ICssValue Interface public enum CssValueType Fields Inherit = 0 The value is inherited and the cssText contains \"inherit\". PrimitiveValue = 1 The value is a primitive value and an instance of the ICssPrimitiveValue interface can be obtained by using binding-specific casting methods on this instance of the ICssValue interface. ValueList = 2 The value is a ICssValue list and an instance of the ICssValueList interface can be obtained by using binding-specific casting methods on this instance of the ICssValue interface. Custom = 3 The value is a custom value."
  },
  "api/SharpVectors.Dom.Css.CssXPathSelector.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssXPathSelector.-ctor.html",
    "title": "Constructor CssXPathSelector | SharpVectors Documentation",
    "keywords": "Constructor CssXPathSelector Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssXPathSelector(string) public CssXPathSelector(string selector) Parameters selector string CssXPathSelector(string, IDictionary<string, string>) public CssXPathSelector(string selector, IDictionary<string, string> namespaceTable) Parameters selector string namespaceTable IDictionary<string, string>"
  },
  "api/SharpVectors.Dom.Css.CssXPathSelector.CssSelector.html": {
    "href": "api/SharpVectors.Dom.Css.CssXPathSelector.CssSelector.html",
    "title": "Property CssSelector | SharpVectors Documentation",
    "keywords": "Property CssSelector Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssSelector public string CssSelector { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssXPathSelector.Matches.html": {
    "href": "api/SharpVectors.Dom.Css.CssXPathSelector.Matches.html",
    "title": "Method Matches | SharpVectors Documentation",
    "keywords": "Method Matches Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Matches(XPathNavigator) public bool Matches(XPathNavigator nav) Parameters nav XPathNavigator Returns bool"
  },
  "api/SharpVectors.Dom.Css.CssXPathSelector.Specificity.html": {
    "href": "api/SharpVectors.Dom.Css.CssXPathSelector.Specificity.html",
    "title": "Property Specificity | SharpVectors Documentation",
    "keywords": "Property Specificity Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Specificity public int Specificity { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Css.CssXPathSelector.XPath.html": {
    "href": "api/SharpVectors.Dom.Css.CssXPathSelector.XPath.html",
    "title": "Property XPath | SharpVectors Documentation",
    "keywords": "Property XPath Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll XPath Only used for testing! public string XPath { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssXPathSelector.html": {
    "href": "api/SharpVectors.Dom.Css.CssXPathSelector.html",
    "title": "Class CssXPathSelector | SharpVectors Documentation",
    "keywords": "Class CssXPathSelector Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public sealed class CssXPathSelector Inheritance object CssXPathSelector Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CssXPathSelector(string) CssXPathSelector(string, IDictionary<string, string>) Properties CssSelector Specificity XPath Only used for testing! Methods Matches(XPathNavigator)"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.-ctor.html",
    "title": "Constructor CssXmlDocument | SharpVectors Documentation",
    "keywords": "Constructor CssXmlDocument Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssXmlDocument() Initializes a new instance of CssXmlDocument public CssXmlDocument() CssXmlDocument(XmlNameTable) Initializes a new instance of CssXmlDocument public CssXmlDocument(XmlNameTable nt) Parameters nt XmlNameTable The name table to use"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.AddStyleElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.AddStyleElement.html",
    "title": "Method AddStyleElement | SharpVectors Documentation",
    "keywords": "Method AddStyleElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll AddStyleElement(string, string) Adds a element type to be used as style elements (e.g. as in the HTML style element) public void AddStyleElement(string ns, string localName) Parameters ns string The namespace URI of the element localName string The local-name of the element"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.AddStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.AddStyleSheet.html",
    "title": "Method AddStyleSheet | SharpVectors Documentation",
    "keywords": "Method AddStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll AddStyleSheet(string) public void AddStyleSheet(string href) Parameters href string"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.CreateElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.CreateElement.html",
    "title": "Method CreateElement | SharpVectors Documentation",
    "keywords": "Method CreateElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CreateElement(string, string, string) Creates an element with the specified Prefix, LocalName, and NamespaceURI. public override XmlElement CreateElement(string prefix, string localName, string ns) Parameters prefix string The prefix of the new element (if any). String.Empty and null are equivalent. localName string The local name of the new element. ns string Returns XmlElement The new XmlElement."
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.CssPropertyProfile.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.CssPropertyProfile.html",
    "title": "Property CssPropertyProfile | SharpVectors Documentation",
    "keywords": "Property CssPropertyProfile Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssPropertyProfile public CssPropertyProfile CssPropertyProfile { get; set; } Property Value CssPropertyProfile"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.Document.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.Document.html",
    "title": "Property Document | SharpVectors Documentation",
    "keywords": "Property Document Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Document The source SharpVectors.Dom.Views.IDocumentView of which this is an IAbstractView. public IDocumentView Document { get; } Property Value IDocumentView An instance of SharpVectors.Dom.Views.IDocumentView representing the document view."
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.GetComputedStyle.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.GetComputedStyle.html",
    "title": "Method GetComputedStyle | SharpVectors Documentation",
    "keywords": "Method GetComputedStyle Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetComputedStyle(XmlElement, string) This method is used to get the computed style as it is defined in [CSS2]. public ICssStyleDeclaration GetComputedStyle(XmlElement elt, string pseudoElt) Parameters elt XmlElement The element whose style is to be computed. This parameter cannot be null. pseudoElt string The pseudo-element or null if none. Returns ICssStyleDeclaration The computed style. The CSSStyleDeclaration is read-only and contains only absolute values."
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.GetOverrideStyle.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.GetOverrideStyle.html",
    "title": "Method GetOverrideStyle | SharpVectors Documentation",
    "keywords": "Method GetOverrideStyle Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetOverrideStyle(XmlElement, string) This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element. public ICssStyleDeclaration GetOverrideStyle(XmlElement elt, string pseudoElt) Parameters elt XmlElement The element whose style is to be modified. This parameter cannot be null. pseudoElt string The pseudo-element or null if none. Returns ICssStyleDeclaration The override style declaration."
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.GetResource.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.GetResource.html",
    "title": "Method GetResource | SharpVectors Documentation",
    "keywords": "Method GetResource Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetResource(Uri) public WebResponse GetResource(Uri absoluteUri) Parameters absoluteUri Uri Returns WebResponse"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.IsLoaded.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.IsLoaded.html",
    "title": "Property IsLoaded | SharpVectors Documentation",
    "keywords": "Property IsLoaded Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll IsLoaded public bool IsLoaded { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.Load.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.Load.html",
    "title": "Method Load | SharpVectors Documentation",
    "keywords": "Method Load Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Load(string) Loads a XML document, compare to XmlDocument.Load() public override void Load(string filename) Parameters filename string Load(XmlReader) Loads the XML document from the specified XmlReader. public override void Load(XmlReader reader) Parameters reader XmlReader The XmlReader used to feed the XML data into the document. Exceptions XmlException There is a load or parse error in the XML. In this case, the document remains empty. Load(Stream) Loads the XML document from the specified stream. public override void Load(Stream inStream) Parameters inStream Stream The stream containing the XML document to load. Exceptions XmlException There is a load or parse error in the XML. In this case, a FileNotFoundException is raised."
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.LoadXml.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.LoadXml.html",
    "title": "Method LoadXml | SharpVectors Documentation",
    "keywords": "Method LoadXml Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll LoadXml(string) Loads the XML document from the specified string. public override void LoadXml(string xml) Parameters xml string String containing the XML document to load. Exceptions XmlException There is a load or parse error in the XML. In this case, the document remains empty."
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.Media.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.Media.html",
    "title": "Property Media | SharpVectors Documentation",
    "keywords": "Property Media Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Media public MediaList Media { get; set; } Property Value MediaList"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.NodeChangedEvent.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.NodeChangedEvent.html",
    "title": "Method NodeChangedEvent | SharpVectors Documentation",
    "keywords": "Method NodeChangedEvent Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll NodeChangedEvent(object, XmlNodeChangedEventArgs) public void NodeChangedEvent(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.OnLoaded.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.OnLoaded.html",
    "title": "Method OnLoaded | SharpVectors Documentation",
    "keywords": "Method OnLoaded Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll OnLoaded() protected virtual void OnLoaded()"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.SetUserAgentStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.SetUserAgentStyleSheet.html",
    "title": "Method SetUserAgentStyleSheet | SharpVectors Documentation",
    "keywords": "Method SetUserAgentStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SetUserAgentStyleSheet(string) Sets the user agent stylesheet for this document public void SetUserAgentStyleSheet(string href) Parameters href string The URI to the stylesheet"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.SetUserStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.SetUserStyleSheet.html",
    "title": "Method SetUserStyleSheet | SharpVectors Documentation",
    "keywords": "Method SetUserStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll SetUserStyleSheet(string) Sets the user stylesheet for this document public void SetUserStyleSheet(string href) Parameters href string The URI to the stylesheet"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.Static.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.Static.html",
    "title": "Property Static | SharpVectors Documentation",
    "keywords": "Property Static Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Static Gets or sets a value indicating whether this CssXmlDocument handles DOM dynamic changes. Sometimes (when loading or rendering) this needs to be disabled. See StaticSection for more information about use public bool Static { get; set; } Property Value bool true if static; otherwise, false."
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.StyleSheets.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.StyleSheets.html",
    "title": "Property StyleSheets | SharpVectors Documentation",
    "keywords": "Property StyleSheets Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll StyleSheets All the stylesheets associated with this document public IStyleSheetList StyleSheets { get; } Property Value IStyleSheetList"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.Url.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.Url.html",
    "title": "Property Url | SharpVectors Documentation",
    "keywords": "Property Url Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Url public string Url { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.UserAgentStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.UserAgentStyleSheet.html",
    "title": "Property UserAgentStyleSheet | SharpVectors Documentation",
    "keywords": "Property UserAgentStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll UserAgentStyleSheet public CssStyleSheet UserAgentStyleSheet { get; set; } Property Value CssStyleSheet"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.UserStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.UserStyleSheet.html",
    "title": "Property UserStyleSheet | SharpVectors Documentation",
    "keywords": "Property UserStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll UserStyleSheet public CssStyleSheet UserStyleSheet { get; set; } Property Value CssStyleSheet"
  },
  "api/SharpVectors.Dom.Css.CssXmlDocument.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlDocument.html",
    "title": "Class CssXmlDocument | SharpVectors Documentation",
    "keywords": "Class CssXmlDocument Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll A XmlDocument with CSS support public class CssXmlDocument : Document, ICloneable, IEnumerable, IXPathNavigable, IDocument, INode, IXmlNode, IEventTargetSupport, IEventTarget, IDocumentEvent, IDocumentCss, IDocumentStyle, ICssView Inheritance object XmlNode XmlDocument Document CssXmlDocument Implements ICloneable IEnumerable IXPathNavigable IDocument INode IXmlNode IEventTargetSupport IEventTarget IDocumentEvent IDocumentCss IDocumentStyle ICssView Derived SvgDocument Inherited Members Document.MutationEvents Document.ExternalResourcesAccessMode Document.CanUseBitmap Document.ReplacedText(INode) Document.DeletedText(INode, int, int) Document.InsertedText(INode, int, int) Document.ModifyingCharacterData(INode) Document.ModifiedCharacterData(INode, string, string) Document.InsertingNode(INode, bool) Document.InsertedNode(INode, INode, bool) Document.RemovingNode(INode, INode, bool) Document.RemovedNode(INode, bool) Document.replacingNode(INode) Document.ReplacedNode(INode) Document.ModifiedAttrValue(IAttribute, string) Document.SetAttrNode(IAttribute, IAttribute) Document.RemovedAttrNode(IAttribute, INode, string) Document.RenamedAttrNode(IAttribute, IAttribute) Document.RenamedElement(IElement, IElement) Document.CreateAttribute(string, string, string) Document.CreateCDataSection(string) Document.CreateComment(string) Document.CreateDocumentFragment() Document.CreateDocumentType(string, string, string, string) Document.CreateEntityReference(string) Document.CreateProcessingInstruction(string, string) Document.CreateSignificantWhitespace(string) Document.CreateTextNode(string) Document.CreateWhitespace(string) Document.CreateXmlDeclaration(string, string, string) Document.CanAccessExternalResources(string) Document.CanAccessExternalResources(Uri) Document.CreateEvent(string) Document.CanDispatch(string, string) XmlDocument.CloneNode(bool) XmlDocument.CreateAttribute(string) XmlDocument.CreateElement(string) XmlDocument.CreateNavigator() XmlDocument.CreateNavigator(XmlNode) XmlDocument.GetElementsByTagName(string) XmlDocument.CreateAttribute(string, string) XmlDocument.CreateElement(string, string) XmlDocument.GetElementsByTagName(string, string) XmlDocument.GetElementById(string) XmlDocument.ImportNode(XmlNode, bool) XmlDocument.CreateDefaultAttribute(string, string, string) XmlDocument.CreateNode(XmlNodeType, string, string, string) XmlDocument.CreateNode(string, string, string) XmlDocument.CreateNode(XmlNodeType, string, string) XmlDocument.ReadNode(XmlReader) XmlDocument.Load(TextReader) XmlDocument.Save(string) XmlDocument.Save(Stream) XmlDocument.Save(TextWriter) XmlDocument.Save(XmlWriter) XmlDocument.WriteTo(XmlWriter) XmlDocument.WriteContentTo(XmlWriter) XmlDocument.Validate(ValidationEventHandler) XmlDocument.Validate(ValidationEventHandler, XmlNode) XmlDocument.NodeType XmlDocument.ParentNode XmlDocument.DocumentType XmlDocument.Implementation XmlDocument.Name XmlDocument.LocalName XmlDocument.DocumentElement XmlDocument.OwnerDocument XmlDocument.Schemas XmlDocument.XmlResolver XmlDocument.NameTable XmlDocument.PreserveWhitespace XmlDocument.IsReadOnly XmlDocument.InnerText XmlDocument.InnerXml XmlDocument.SchemaInfo XmlDocument.BaseURI XmlDocument.NodeInserting XmlDocument.NodeInserted XmlDocument.NodeRemoving XmlDocument.NodeRemoved XmlDocument.NodeChanging XmlDocument.NodeChanged XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.OuterXml XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CssXmlDocument() Initializes a new instance of CssXmlDocument CssXmlDocument(XmlNameTable) Initializes a new instance of CssXmlDocument Properties CssPropertyProfile Document The source SharpVectors.Dom.Views.IDocumentView of which this is an IAbstractView. IsLoaded Media Static Gets or sets a value indicating whether this CssXmlDocument handles DOM dynamic changes. Sometimes (when loading or rendering) this needs to be disabled. See StaticSection for more information about use StyleSheets All the stylesheets associated with this document Url UserAgentStyleSheet UserStyleSheet Methods AddStyleElement(string, string) Adds a element type to be used as style elements (e.g. as in the HTML style element) AddStyleSheet(string) CreateElement(string, string, string) Creates an element with the specified Prefix, LocalName, and NamespaceURI. GetComputedStyle(XmlElement, string) This method is used to get the computed style as it is defined in [CSS2]. GetOverrideStyle(XmlElement, string) This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element. GetResource(Uri) Load(Stream) Loads the XML document from the specified stream. Load(string) Loads a XML document, compare to XmlDocument.Load() Load(XmlReader) Loads the XML document from the specified XmlReader. LoadXml(string) Loads the XML document from the specified string. NodeChangedEvent(object, XmlNodeChangedEventArgs) OnLoaded() SetUserAgentStyleSheet(string) Sets the user agent stylesheet for this document SetUserStyleSheet(string) Sets the user stylesheet for this document"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.-ctor.html",
    "title": "Constructor CssXmlElement | SharpVectors Documentation",
    "keywords": "Constructor CssXmlElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssXmlElement(string, string, string, CssXmlDocument) public CssXmlElement(string prefix, string localname, string ns, CssXmlDocument doc) Parameters prefix string localname string ns string doc CssXmlDocument"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.AttributeChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.AttributeChange.html",
    "title": "Method AttributeChange | SharpVectors Documentation",
    "keywords": "Method AttributeChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll AttributeChange(object, XmlNodeChangedEventArgs) Called when any attribute is changing. This is typically triggered by calls to setAttribute() and should only be called from the CssXmlDocument. public virtual void AttributeChange(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.ChildNodeChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.ChildNodeChange.html",
    "title": "Method ChildNodeChange | SharpVectors Documentation",
    "keywords": "Method ChildNodeChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ChildNodeChange(object, XmlNodeChangedEventArgs) Called when any child node is changing. If an element is moved the CSS heirarchy for that element will need to change. This is mainly useful when one of the child nodes parent is a referenced node (for example in a <use> element. public virtual void ChildNodeChange(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.CssInvalidate.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.CssInvalidate.html",
    "title": "Method CssInvalidate | SharpVectors Documentation",
    "keywords": "Method CssInvalidate Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll CssInvalidate() public virtual void CssInvalidate()"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.ElementChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.ElementChange.html",
    "title": "Method ElementChange | SharpVectors Documentation",
    "keywords": "Method ElementChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ElementChange(object, XmlNodeChangedEventArgs) Called when this element is changing in one of the following ways public virtual void ElementChange(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.FireAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.FireAttributeChange.html",
    "title": "Method FireAttributeChange | SharpVectors Documentation",
    "keywords": "Method FireAttributeChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FireAttributeChange(object, XmlNodeChangedEventArgs) protected void FireAttributeChange(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.FireChildNodeChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.FireChildNodeChange.html",
    "title": "Method FireChildNodeChange | SharpVectors Documentation",
    "keywords": "Method FireChildNodeChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) protected void FireChildNodeChange(object src, XmlNodeChangedEventArgs args, bool fireEvent) Parameters src object args XmlNodeChangedEventArgs fireEvent bool"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.FireCssChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.FireCssChange.html",
    "title": "Method FireCssChange | SharpVectors Documentation",
    "keywords": "Method FireCssChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FireCssChange() protected void FireCssChange()"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.FireElementChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.FireElementChange.html",
    "title": "Method FireElementChange | SharpVectors Documentation",
    "keywords": "Method FireElementChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FireElementChange(object, XmlNodeChangedEventArgs) protected void FireElementChange(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.FireParentNodeChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.FireParentNodeChange.html",
    "title": "Method FireParentNodeChange | SharpVectors Documentation",
    "keywords": "Method FireParentNodeChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) protected void FireParentNodeChange(object src, XmlNodeChangedEventArgs args, bool fireEvent) Parameters src object args XmlNodeChangedEventArgs fireEvent bool"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.GetComputedCssValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.GetComputedCssValue.html",
    "title": "Method GetComputedCssValue | SharpVectors Documentation",
    "keywords": "Method GetComputedCssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetComputedCssValue(string, string) public virtual ICssValue GetComputedCssValue(string propertyName, string pseudoElt) Parameters propertyName string pseudoElt string Returns ICssValue"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.GetComputedStringValue.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.GetComputedStringValue.html",
    "title": "Method GetComputedStringValue | SharpVectors Documentation",
    "keywords": "Method GetComputedStringValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetComputedStringValue(string, string) public virtual string GetComputedStringValue(string propertyName, string pseudoElt) Parameters propertyName string pseudoElt string Returns string"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.GetComputedStyle.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.GetComputedStyle.html",
    "title": "Method GetComputedStyle | SharpVectors Documentation",
    "keywords": "Method GetComputedStyle Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll GetComputedStyle(string) public virtual ICssStyleDeclaration GetComputedStyle(string pseudoElt) Parameters pseudoElt string Returns ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public virtual void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.Imported.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.Imported.html",
    "title": "Property Imported | SharpVectors Documentation",
    "keywords": "Property Imported Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Imported public bool Imported { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.OwnerDocument.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.OwnerDocument.html",
    "title": "Property OwnerDocument | SharpVectors Documentation",
    "keywords": "Property OwnerDocument Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll OwnerDocument public CssXmlDocument OwnerDocument { get; } Property Value CssXmlDocument"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.ParentNodeChange.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.ParentNodeChange.html",
    "title": "Method ParentNodeChange | SharpVectors Documentation",
    "keywords": "Method ParentNodeChange Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll ParentNodeChange(object, XmlNodeChangedEventArgs) Called when any parent element is changing. If an element is moved the CSS heirarchy for that element will need to change. public virtual void ParentNodeChange(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.Style.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Style The style attribute public ICssStyleDeclaration Style { get; } Property Value ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.Supports.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.Supports.html",
    "title": "Method Supports | SharpVectors Documentation",
    "keywords": "Method Supports Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Supports(string, string) Test if the DOM implementation implements a specific feature. public override bool Supports(string feature, string version) Parameters feature string The package name of the feature to test. This name is not case-sensitive. version string This is the version number of the package name to test. If the version is not specified (null), supporting any version of the feature causes the method to return true. Returns bool true if the feature is implemented in the specified version; otherwise, false. The following table describes the combinations that return true.Feature Version XML 1.0 XML 2.0"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement._cachedCSD.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement._cachedCSD.html",
    "title": "Field _cachedCSD | SharpVectors Documentation",
    "keywords": "Field _cachedCSD Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll protected ICssStyleDeclaration _cachedCSD Returns ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement._importDocument.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement._importDocument.html",
    "title": "Field _importDocument | SharpVectors Documentation",
    "keywords": "Field _importDocument Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll protected CssXmlDocument _importDocument Returns CssXmlDocument"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement._importNode.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement._importNode.html",
    "title": "Field _importNode | SharpVectors Documentation",
    "keywords": "Field _importNode Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll protected CssXmlElement _importNode Returns CssXmlElement"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement._isImported.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement._isImported.html",
    "title": "Field _isImported | SharpVectors Documentation",
    "keywords": "Field _isImported Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll protected bool _isImported Returns bool"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.attributeChangeHandler.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.attributeChangeHandler.html",
    "title": "Event attributeChangeHandler | SharpVectors Documentation",
    "keywords": "Event attributeChangeHandler Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public virtual event NodeChangeHandler attributeChangeHandler Returns NodeChangeHandler"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.childNodeChangeHandler.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.childNodeChangeHandler.html",
    "title": "Event childNodeChangeHandler | SharpVectors Documentation",
    "keywords": "Event childNodeChangeHandler Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public virtual event NodeChangeHandler childNodeChangeHandler Returns NodeChangeHandler"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.cssChangeHandler.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.cssChangeHandler.html",
    "title": "Event cssChangeHandler | SharpVectors Documentation",
    "keywords": "Event cssChangeHandler Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public virtual event CssChangeHandler cssChangeHandler Returns CssChangeHandler"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.elementChangeHandler.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.elementChangeHandler.html",
    "title": "Event elementChangeHandler | SharpVectors Documentation",
    "keywords": "Event elementChangeHandler Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public virtual event NodeChangeHandler elementChangeHandler Returns NodeChangeHandler"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.html",
    "title": "Class CssXmlElement | SharpVectors Documentation",
    "keywords": "Class CssXmlElement Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public class CssXmlElement : Element, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget, IElementCssInlineStyle Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget IElementCssInlineStyle Derived SvgElement Inherited Members XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CssXmlElement(string, string, string, CssXmlDocument) Fields _cachedCSD _importDocument _importNode _isImported Properties Imported OwnerDocument Style The style attribute Methods AttributeChange(object, XmlNodeChangedEventArgs) Called when any attribute is changing. This is typically triggered by calls to setAttribute() and should only be called from the CssXmlDocument. ChildNodeChange(object, XmlNodeChangedEventArgs) Called when any child node is changing. If an element is moved the CSS heirarchy for that element will need to change. This is mainly useful when one of the child nodes parent is a referenced node (for example in a <use> element. CssInvalidate() ElementChange(object, XmlNodeChangedEventArgs) Called when this element is changing in one of the following ways FireAttributeChange(object, XmlNodeChangedEventArgs) FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) FireCssChange() FireElementChange(object, XmlNodeChangedEventArgs) FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) GetComputedCssValue(string, string) GetComputedStringValue(string, string) GetComputedStyle(string) HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. ParentNodeChange(object, XmlNodeChangedEventArgs) Called when any parent element is changing. If an element is moved the CSS heirarchy for that element will need to change. Supports(string, string) Test if the DOM implementation implements a specific feature. Events attributeChangeHandler childNodeChangeHandler cssChangeHandler elementChangeHandler parentNodeChangeHandler"
  },
  "api/SharpVectors.Dom.Css.CssXmlElement.parentNodeChangeHandler.html": {
    "href": "api/SharpVectors.Dom.Css.CssXmlElement.parentNodeChangeHandler.html",
    "title": "Event parentNodeChangeHandler | SharpVectors Documentation",
    "keywords": "Event parentNodeChangeHandler Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public virtual event NodeChangeHandler parentNodeChangeHandler Returns NodeChangeHandler"
  },
  "api/SharpVectors.Dom.Css.ICssCharsetRule.Encoding.html": {
    "href": "api/SharpVectors.Dom.Css.ICssCharsetRule.Encoding.html",
    "title": "Property Encoding | SharpVectors Documentation",
    "keywords": "Property Encoding Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Encoding The encoding information used in this @charset rule. string Encoding { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified encoding value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this encoding rule is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssCharsetRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssCharsetRule.html",
    "title": "Interface ICssCharsetRule | SharpVectors Documentation",
    "keywords": "Interface ICssCharsetRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssCharsetRule interface represents a @charset rule in a CSS style sheet. The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no ICssCharsetRule is created. The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet. public interface ICssCharsetRule : ICssRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Properties Encoding The encoding information used in this @charset rule."
  },
  "api/SharpVectors.Dom.Css.ICssColor.Alpha.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.Alpha.html",
    "title": "Property Alpha | SharpVectors Documentation",
    "keywords": "Property Alpha Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Alpha This attribute is used for the alpha value of the RGBA color ICssPrimitiveValue Alpha { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssColor.Blue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.Blue.html",
    "title": "Property Blue | SharpVectors Documentation",
    "keywords": "Property Blue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Blue This attribute is used for the blue value of the RGB color ICssPrimitiveValue Blue { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssColor.Green.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.Green.html",
    "title": "Property Green | SharpVectors Documentation",
    "keywords": "Property Green Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Green This attribute is used for the green value of the RGB color. ICssPrimitiveValue Green { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssColor.HasAlpha.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.HasAlpha.html",
    "title": "Property HasAlpha | SharpVectors Documentation",
    "keywords": "Property HasAlpha Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll HasAlpha Gets a value which indicates whether the color value has alpha value or not. bool HasAlpha { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.ICssColor.IsSystemColor.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.IsSystemColor.html",
    "title": "Property IsSystemColor | SharpVectors Documentation",
    "keywords": "Property IsSystemColor Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll IsSystemColor Gets a value which indicates whether the color is system-defined color. bool IsSystemColor { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.ICssColor.IsVarColor.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.IsVarColor.html",
    "title": "Property IsVarColor | SharpVectors Documentation",
    "keywords": "Property IsVarColor Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll IsVarColor Gets a value which indicates whether the color is defined by custom properties. bool IsVarColor { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.ICssColor.Name.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Name Gets the name of the color, if available. string Name { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.ICssColor.Red.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.Red.html",
    "title": "Property Red | SharpVectors Documentation",
    "keywords": "Property Red Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Red This attribute is used for the red value of the RGB color ICssPrimitiveValue Red { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssColor.html": {
    "href": "api/SharpVectors.Dom.Css.ICssColor.html",
    "title": "Interface ICssColor | SharpVectors Documentation",
    "keywords": "Interface ICssColor Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The RGB-Color interface is used to represent any RGB color value. This interface reflects the values in the underlying style property. Hence, modifications made to the ICssPrimitiveValue objects modify the style property. public interface ICssColor Properties Alpha This attribute is used for the alpha value of the RGBA color Blue This attribute is used for the blue value of the RGB color Green This attribute is used for the green value of the RGB color. HasAlpha Gets a value which indicates whether the color value has alpha value or not. IsSystemColor Gets a value which indicates whether the color is system-defined color. IsVarColor Gets a value which indicates whether the color is defined by custom properties. Name Gets the name of the color, if available. Red This attribute is used for the red value of the RGB color"
  },
  "api/SharpVectors.Dom.Css.ICssCounter.Identifier.html": {
    "href": "api/SharpVectors.Dom.Css.ICssCounter.Identifier.html",
    "title": "Property Identifier | SharpVectors Documentation",
    "keywords": "Property Identifier Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Identifier This attribute is used for the identifier of the counter. string Identifier { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.ICssCounter.ListStyle.html": {
    "href": "api/SharpVectors.Dom.Css.ICssCounter.ListStyle.html",
    "title": "Property ListStyle | SharpVectors Documentation",
    "keywords": "Property ListStyle Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll ListStyle This attribute is used for the style of the list. string ListStyle { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.ICssCounter.Separator.html": {
    "href": "api/SharpVectors.Dom.Css.ICssCounter.Separator.html",
    "title": "Property Separator | SharpVectors Documentation",
    "keywords": "Property Separator Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Separator This attribute is used for the separator of the nested counters. string Separator { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.ICssCounter.html": {
    "href": "api/SharpVectors.Dom.Css.ICssCounter.html",
    "title": "Interface ICssCounter | SharpVectors Documentation",
    "keywords": "Interface ICssCounter Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The Counter interface is used to represent any counter or counters function value. This interface reflects the values in the underlying style property. public interface ICssCounter Properties Identifier This attribute is used for the identifier of the counter. ListStyle This attribute is used for the style of the list. Separator This attribute is used for the separator of the nested counters."
  },
  "api/SharpVectors.Dom.Css.ICssFontFaceRule.Style.html": {
    "href": "api/SharpVectors.Dom.Css.ICssFontFaceRule.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Style The declaration-block of this rule. ICssStyleDeclaration Style { get; } Property Value ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.ICssFontFaceRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssFontFaceRule.html",
    "title": "Interface ICssFontFaceRule | SharpVectors Documentation",
    "keywords": "Interface ICssFontFaceRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions. public interface ICssFontFaceRule : ICssRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Properties Style The declaration-block of this rule."
  },
  "api/SharpVectors.Dom.Css.ICssImportRule.Href.html": {
    "href": "api/SharpVectors.Dom.Css.ICssImportRule.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Href The location of the style sheet to be imported. The attribute will not contain the \"url(...)\" specifier around the URI. string Href { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Css.ICssImportRule.Media.html": {
    "href": "api/SharpVectors.Dom.Css.ICssImportRule.Media.html",
    "title": "Property Media | SharpVectors Documentation",
    "keywords": "Property Media Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Media A list of media types for which this style sheet may be used. IMediaList Media { get; } Property Value IMediaList"
  },
  "api/SharpVectors.Dom.Css.ICssImportRule.StyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.ICssImportRule.StyleSheet.html",
    "title": "Property StyleSheet | SharpVectors Documentation",
    "keywords": "Property StyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll StyleSheet The style sheet referred to by this rule, if it has been loaded. The value of this attribute is null if the style sheet has not yet been loaded or if it will not be loaded (e.g. if the style sheet is for a media type not supported by the user agent). ICssStyleSheet StyleSheet { get; } Property Value ICssStyleSheet"
  },
  "api/SharpVectors.Dom.Css.ICssImportRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssImportRule.html",
    "title": "Interface ICssImportRule | SharpVectors Documentation",
    "keywords": "Interface ICssImportRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets. public interface ICssImportRule : ICssRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Properties Href The location of the style sheet to be imported. The attribute will not contain the \"url(...)\" specifier around the URI. Media A list of media types for which this style sheet may be used. StyleSheet The style sheet referred to by this rule, if it has been loaded. The value of this attribute is null if the style sheet has not yet been loaded or if it will not be loaded (e.g. if the style sheet is for a media type not supported by the user agent)."
  },
  "api/SharpVectors.Dom.Css.ICssMediaRule.CssRules.html": {
    "href": "api/SharpVectors.Dom.Css.ICssMediaRule.CssRules.html",
    "title": "Property CssRules | SharpVectors Documentation",
    "keywords": "Property CssRules Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll CssRules A list of all CSS rules contained within the media block. ICssRuleList CssRules { get; } Property Value ICssRuleList"
  },
  "api/SharpVectors.Dom.Css.ICssMediaRule.DeleteRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssMediaRule.DeleteRule.html",
    "title": "Method DeleteRule | SharpVectors Documentation",
    "keywords": "Method DeleteRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll DeleteRule(ulong) Used to delete a rule from the media block. void DeleteRule(ulong index) Parameters index ulong The index within the media block's rule collection of the rule to remove. Exceptions DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the media rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is readonly"
  },
  "api/SharpVectors.Dom.Css.ICssMediaRule.InsertRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssMediaRule.InsertRule.html",
    "title": "Method InsertRule | SharpVectors Documentation",
    "keywords": "Method InsertRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll InsertRule(string, ulong) Used to insert a new rule into the media block. ulong InsertRule(string rule, ulong index) Parameters rule string The parsable text representing the rule. For rule sets this contains both the selector and the style declaration. For at-rules, this specifies both the at-identifier and the rule content. index ulong The index within the media block's rule collection of the rule before which to insert the specified rule. If the specified index is equal to the length of the media blocks's rule collection, the rule will be added to the end of the media block. Returns ulong The index within the media block's rule collection of the newly inserted rule"
  },
  "api/SharpVectors.Dom.Css.ICssMediaRule.Media.html": {
    "href": "api/SharpVectors.Dom.Css.ICssMediaRule.Media.html",
    "title": "Property Media | SharpVectors Documentation",
    "keywords": "Property Media Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Media A list of media types for this rule IMediaList Media { get; } Property Value IMediaList"
  },
  "api/SharpVectors.Dom.Css.ICssMediaRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssMediaRule.html",
    "title": "Interface ICssMediaRule | SharpVectors Documentation",
    "keywords": "Interface ICssMediaRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types public interface ICssMediaRule : ICssRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Properties CssRules A list of all CSS rules contained within the media block. Media A list of media types for this rule Methods DeleteRule(ulong) Used to delete a rule from the media block. InsertRule(string, ulong) Used to insert a new rule into the media block."
  },
  "api/SharpVectors.Dom.Css.ICssPageRule.SelectorText.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPageRule.SelectorText.html",
    "title": "Property SelectorText | SharpVectors Documentation",
    "keywords": "Property SelectorText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll SelectorText The parsable textual representation of the page selector for the rule. string SelectorText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssPageRule.Style.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPageRule.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Style The declaration-block of this rule. ICssStyleDeclaration Style { get; } Property Value ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.ICssPageRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPageRule.html",
    "title": "Interface ICssPageRule | SharpVectors Documentation",
    "keywords": "Interface ICssPageRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media. public interface ICssPageRule : ICssRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Properties SelectorText The parsable textual representation of the page selector for the rule. Style The declaration-block of this rule."
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetCounterValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetCounterValue.html",
    "title": "Method GetCounterValue | SharpVectors Documentation",
    "keywords": "Method GetCounterValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetCounterValue() This method is used to get the ICssCounter value. If this CSS value doesn't contain a counter value, a DomException is raised. Modification to the corresponding style property can be achieved using the ICssCounter interface ICssCounter GetCounterValue() Returns ICssCounter The Counter value Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Counter value (e.g. this is not COUNTER)."
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetFloatValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetFloatValue.html",
    "title": "Method GetFloatValue | SharpVectors Documentation",
    "keywords": "Method GetFloatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised. double GetFloatValue(CssPrimitiveType unitType) Parameters unitType CssPrimitiveType A unit code to get the float value. The unit code can only be a float unit type (i.e. NUMBER, PERCENTAGE, EMS, EXS, PX, CM, MM, IN, PT, PC, DEG, RAD, GRAD, MS, S, HZ, KHZ, DIMENSION). Returns double The float value in the specified unit. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value or if the float value can't be converted into the specified unit."
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetRectValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetRectValue.html",
    "title": "Method GetRectValue | SharpVectors Documentation",
    "keywords": "Method GetRectValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetRectValue() This method is used to get the ICssRect value. If this CSS value doesn't contain a rect value, a DomException is raised. Modification to the corresponding style property can be achieved using the ICssRect interface. ICssRect GetRectValue() Returns ICssRect The Rect value Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Rect value. (e.g. this is not RECT)."
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetRgbColorValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetRgbColorValue.html",
    "title": "Method GetRgbColorValue | SharpVectors Documentation",
    "keywords": "Method GetRgbColorValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetRgbColorValue() This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DomException is raised. Modification to the corresponding style property can be achieved using the ICssColor interface. ICssColor GetRgbColorValue() Returns ICssColor the RGB color value. Exceptions DomException INVALID_ACCESS_ERR: Raised if the attached property can't return a RGB color value (e.g. this is not RGBCOLOR)."
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetStringValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.GetStringValue.html",
    "title": "Method GetStringValue | SharpVectors Documentation",
    "keywords": "Method GetStringValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetStringValue() This method is used to get the string value. If the CSS value doesn't contain a string value, a DomException is raised. Note: Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string. string GetStringValue() Returns string The string value in the current unit. The current primitiveType can only be a string unit type (i.e. STRING, URI, IDENT, and ATTR). Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value."
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.PrimitiveType.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.PrimitiveType.html",
    "title": "Property PrimitiveType | SharpVectors Documentation",
    "keywords": "Property PrimitiveType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll PrimitiveType The type of the value as defined by the constants specified above. CssPrimitiveType PrimitiveType { get; } Property Value CssPrimitiveType"
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.SetFloatValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.SetFloatValue.html",
    "title": "Method SetFloatValue | SharpVectors Documentation",
    "keywords": "Method SetFloatValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll SetFloatValue(CssPrimitiveType, double) A method to set the float value with a specified unit. If the property attached with this value cannot accept the specified unit or the float value, the value will be unchanged and a DomException will be raised. void SetFloatValue(CssPrimitiveType unitType, double floatValue) Parameters unitType CssPrimitiveType A unit code as defined above. The unit code can only be a float unit type (i.e. NUMBER, PERCENTAGE, EMS, EXS, PX, CM, MM, IN, PT, PC, DEG, RAD, GRAD, MS, S, HZ, KHZ, DIMENSION). floatValue double The new float value. Exceptions DomException INVALID_ACCESS_ERR: Raised if the attached property doesn't support the float value or the unit type. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.SetStringValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.SetStringValue.html",
    "title": "Method SetStringValue | SharpVectors Documentation",
    "keywords": "Method SetStringValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll SetStringValue(CssPrimitiveType, string) A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a DomException will be raised. void SetStringValue(CssPrimitiveType stringType, string stringValue) Parameters stringType CssPrimitiveType A string code as defined above. The string code can only be a string unit type (i.e. STRING, URI, IDENT, and ATTR). stringValue string The new string value. Exceptions DomException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value or if the string value can't be converted into the specified unit. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssPrimitiveValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssPrimitiveValue.html",
    "title": "Interface ICssPrimitiveValue | SharpVectors Documentation",
    "keywords": "Interface ICssPrimitiveValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssPrimitiveValue interface represents a single CSS value. public interface ICssPrimitiveValue : ICssValue Inherited Members ICssValue.CssText ICssValue.CssValueType ICssValue.IsAbsolute Remarks This interface may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the GetPropertyCssValue(string) method of the ICssStyleDeclaration interface. A ICssPrimitiveValue object only occurs in a context of a CSS property. Properties PrimitiveType The type of the value as defined by the constants specified above. Methods GetCounterValue() This method is used to get the ICssCounter value. If this CSS value doesn't contain a counter value, a DomException is raised. Modification to the corresponding style property can be achieved using the ICssCounter interface GetFloatValue(CssPrimitiveType) This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DomException is raised. GetRectValue() This method is used to get the ICssRect value. If this CSS value doesn't contain a rect value, a DomException is raised. Modification to the corresponding style property can be achieved using the ICssRect interface. GetRgbColorValue() This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DomException is raised. Modification to the corresponding style property can be achieved using the ICssColor interface. GetStringValue() This method is used to get the string value. If the CSS value doesn't contain a string value, a DomException is raised. Note: Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string. SetFloatValue(CssPrimitiveType, double) A method to set the float value with a specified unit. If the property attached with this value cannot accept the specified unit or the float value, the value will be unchanged and a DomException will be raised. SetStringValue(CssPrimitiveType, string) A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a DomException will be raised."
  },
  "api/SharpVectors.Dom.Css.ICssRect.Bottom.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRect.Bottom.html",
    "title": "Property Bottom | SharpVectors Documentation",
    "keywords": "Property Bottom Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Bottom This attribute is used for the bottom of the rect. ICssPrimitiveValue Bottom { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssRect.Left.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRect.Left.html",
    "title": "Property Left | SharpVectors Documentation",
    "keywords": "Property Left Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Left This attribute is used for the left of the rect. ICssPrimitiveValue Left { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssRect.Right.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRect.Right.html",
    "title": "Property Right | SharpVectors Documentation",
    "keywords": "Property Right Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Right This attribute is used for the right of the rect. ICssPrimitiveValue Right { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssRect.Top.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRect.Top.html",
    "title": "Property Top | SharpVectors Documentation",
    "keywords": "Property Top Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Top This attribute is used for the top of the rect. ICssPrimitiveValue Top { get; } Property Value ICssPrimitiveValue"
  },
  "api/SharpVectors.Dom.Css.ICssRect.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRect.html",
    "title": "Interface ICssRect | SharpVectors Documentation",
    "keywords": "Interface ICssRect Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssRect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the ICssPrimitiveValue objects modify the style property. public interface ICssRect Properties Bottom This attribute is used for the bottom of the rect. Left This attribute is used for the left of the rect. Right This attribute is used for the right of the rect. Top This attribute is used for the top of the rect."
  },
  "api/SharpVectors.Dom.Css.ICssRule.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRule.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll CssText The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value. string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of rule than the current one. DomException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at this point in the style sheet. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if the rule is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssRule.ParentRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRule.ParentRule.html",
    "title": "Property ParentRule | SharpVectors Documentation",
    "keywords": "Property ParentRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll ParentRule The style sheet that contains this rule. ICssRule ParentRule { get; } Property Value ICssRule"
  },
  "api/SharpVectors.Dom.Css.ICssRule.ParentStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRule.ParentStyleSheet.html",
    "title": "Property ParentStyleSheet | SharpVectors Documentation",
    "keywords": "Property ParentStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll ParentStyleSheet The type of the rule, as defined above. The expectation is that binding-specific casting methods can be used to cast down from an instance of the ICssRule interface to the specific derived interface implied by the type. ICssStyleSheet ParentStyleSheet { get; } Property Value ICssStyleSheet"
  },
  "api/SharpVectors.Dom.Css.ICssRule.Type.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRule.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Type If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule. If this rule is not nested inside any other rules, this returns null CssRuleType Type { get; } Property Value CssRuleType"
  },
  "api/SharpVectors.Dom.Css.ICssRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRule.html",
    "title": "Interface ICssRule | SharpVectors Documentation",
    "keywords": "Interface ICssRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssRule interface is the abstract base interface for any type of CSS statement. This includes both rule sets and at-rules. An implementation is expected to preserve all rules specified in a CSS style sheet, even if the rule is not recognized by the parser. Unrecognized rules are represented using the ICssUnknownRule interface. public interface ICssRule Properties CssText The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value. ParentRule The style sheet that contains this rule. ParentStyleSheet The type of the rule, as defined above. The expectation is that binding-specific casting methods can be used to cast down from an instance of the ICssRule interface to the specific derived interface implied by the type. Type If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule. If this rule is not nested inside any other rules, this returns null"
  },
  "api/SharpVectors.Dom.Css.ICssRuleList.HasFontRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRuleList.HasFontRule.html",
    "title": "Property HasFontRule | SharpVectors Documentation",
    "keywords": "Property HasFontRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll HasFontRule Gets a value specifying whether the contents of this list includes a font rule. This is an implementation extension, not CSS specification. bool HasFontRule { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.ICssRuleList.Item.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRuleList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll this[ulong] Used to retrieve a CSS rule by ordinal index. The order in this collection represents the order of the rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, this returns null. ICssRule this[ulong Item] { get; } Parameters Item ulong Property Value ICssRule"
  },
  "api/SharpVectors.Dom.Css.ICssRuleList.Length.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRuleList.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Length The number of CSS rules in the list. The range of valid child rule indices is 0 to length-1 inclusive. ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Css.ICssRuleList.html": {
    "href": "api/SharpVectors.Dom.Css.ICssRuleList.html",
    "title": "Interface ICssRuleList | SharpVectors Documentation",
    "keywords": "Interface ICssRuleList Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssRuleList interface provides the abstraction of an ordered collection of CSS rules. public interface ICssRuleList : IList<ICssRule>, ICollection<ICssRule>, IEnumerable<ICssRule>, IEnumerable Inherited Members IList<ICssRule>.IndexOf(ICssRule) IList<ICssRule>.Insert(int, ICssRule) IList<ICssRule>.RemoveAt(int) IList<ICssRule>.this[int] ICollection<ICssRule>.Add(ICssRule) ICollection<ICssRule>.Clear() ICollection<ICssRule>.Contains(ICssRule) ICollection<ICssRule>.CopyTo(ICssRule[], int) ICollection<ICssRule>.Remove(ICssRule) ICollection<ICssRule>.Count ICollection<ICssRule>.IsReadOnly IEnumerable<ICssRule>.GetEnumerator() Properties HasFontRule Gets a value specifying whether the contents of this list includes a font rule. This is an implementation extension, not CSS specification. this[ulong] Used to retrieve a CSS rule by ordinal index. The order in this collection represents the order of the rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, this returns null. Length The number of CSS rules in the list. The range of valid child rule indices is 0 to length-1 inclusive."
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll CssText The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties. string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or a property is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.GetPropertyCssValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.GetPropertyCssValue.html",
    "title": "Method GetPropertyCssValue | SharpVectors Documentation",
    "keywords": "Method GetPropertyCssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetPropertyCssValue(string) Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the GetPropertyValue(string) and SetProperty(string, string, string) methods. ICssValue GetPropertyCssValue(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns ICssValue Returns the value of the property if it has been explicitly set for this declaration block. Returns null if the property has not been set."
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.GetPropertyPriority.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.GetPropertyPriority.html",
    "title": "Method GetPropertyPriority | SharpVectors Documentation",
    "keywords": "Method GetPropertyPriority Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetPropertyPriority(string) Used to retrieve the priority of a CSS property (e.g. the \"important\" qualifier) if the property has been explicitly set in this declaration block. string GetPropertyPriority(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns string A string representing the priority (e.g. \"important\") if one exists. The empty string if none exists."
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.GetPropertyValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.GetPropertyValue.html",
    "title": "Method GetPropertyValue | SharpVectors Documentation",
    "keywords": "Method GetPropertyValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetPropertyValue(string) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. string GetPropertyValue(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns string Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set. GetPropertyValue(string[]) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. string GetPropertyValue(string[] propertyNames) Parameters propertyNames string[] The name of the CSS property. See the CSS property index. Returns string Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set."
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.Item.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll this[ulong] Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block. string this[ulong index] { get; } Parameters index ulong Property Value string"
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.Length.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Length The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive. ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.ParentRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.ParentRule.html",
    "title": "Property ParentRule | SharpVectors Documentation",
    "keywords": "Property ParentRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll ParentRule The CSS rule that contains this declaration block or null if this ICssStyleDeclaration is not attached to a ICssRule. ICssRule ParentRule { get; } Property Value ICssRule"
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.RemoveProperty.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.RemoveProperty.html",
    "title": "Method RemoveProperty | SharpVectors Documentation",
    "keywords": "Method RemoveProperty Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll RemoveProperty(string) Used to remove a CSS property if it has been explicitly set within this declaration block. string RemoveProperty(string propertyName) Parameters propertyName string The name of the CSS property. See the CSS property index. Returns string Returns the value of the property if it has been explicitly set for this declaration block. Returns the empty string if the property has not been set or the property name does not correspond to a known CSS property. Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.SetProperty.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.SetProperty.html",
    "title": "Method SetProperty | SharpVectors Documentation",
    "keywords": "Method SetProperty Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll SetProperty(string, string, string) Used to set a property value and priority within this declaration block. void SetProperty(string propertyName, string value, string priority) Parameters propertyName string The name of the CSS property. See the CSS property index. value string The new value of the property. priority string The new priority of the property (e.g. \"important\"). Exceptions DomException SYNTAX_ERR: Raised if the specified value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly or the property is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssStyleDeclaration.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleDeclaration.html",
    "title": "Interface ICssStyleDeclaration | SharpVectors Documentation",
    "keywords": "Interface ICssStyleDeclaration Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssStyleDeclaration interface represents a single CSS declaration block. public interface ICssStyleDeclaration Remarks This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block. Properties CssText The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties. this[ulong] Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block. Length The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive. ParentRule The CSS rule that contains this declaration block or null if this ICssStyleDeclaration is not attached to a ICssRule. Methods GetPropertyCssValue(string) Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the GetPropertyValue(string) and SetProperty(string, string, string) methods. GetPropertyPriority(string) Used to retrieve the priority of a CSS property (e.g. the \"important\" qualifier) if the property has been explicitly set in this declaration block. GetPropertyValue(string) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. GetPropertyValue(string[]) Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. RemoveProperty(string) Used to remove a CSS property if it has been explicitly set within this declaration block. SetProperty(string, string, string) Used to set a property value and priority within this declaration block."
  },
  "api/SharpVectors.Dom.Css.ICssStyleRule.SelectorText.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleRule.SelectorText.html",
    "title": "Property SelectorText | SharpVectors Documentation",
    "keywords": "Property SelectorText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll SelectorText The textual representation of the selector for the rule set. The implementation may have stripped out insignificant whitespace while parsing the selector. string SelectorText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssStyleRule.Style.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleRule.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Style The declaration-block of this rule set. ICssStyleDeclaration Style { get; } Property Value ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.ICssStyleRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleRule.html",
    "title": "Interface ICssStyleRule | SharpVectors Documentation",
    "keywords": "Interface ICssStyleRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssStyleRule interface represents a single rule set in a CSS style sheet. public interface ICssStyleRule : ICssRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Properties SelectorText The textual representation of the selector for the rule set. The implementation may have stripped out insignificant whitespace while parsing the selector. Style The declaration-block of this rule set."
  },
  "api/SharpVectors.Dom.Css.ICssStyleSheet.CssRules.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleSheet.CssRules.html",
    "title": "Property CssRules | SharpVectors Documentation",
    "keywords": "Property CssRules Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll CssRules The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules. ICssRuleList CssRules { get; } Property Value ICssRuleList"
  },
  "api/SharpVectors.Dom.Css.ICssStyleSheet.DeleteRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleSheet.DeleteRule.html",
    "title": "Method DeleteRule | SharpVectors Documentation",
    "keywords": "Method DeleteRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll DeleteRule(ulong) Used to delete a rule from the style sheet. void DeleteRule(ulong index) Parameters index ulong The index within the style sheet's rule list of the rule to remove. Exceptions DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the style sheet's rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssStyleSheet.InsertRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleSheet.InsertRule.html",
    "title": "Method InsertRule | SharpVectors Documentation",
    "keywords": "Method InsertRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll InsertRule(string, ulong) Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade. ulong InsertRule(string rule, ulong index) Parameters rule string The parsable text representing the rule. For rule sets this contains both the selector and the style declaration. For at-rules, this specifies both the at-identifier and the rule content. index ulong The index within the style sheet's rule list of the rule before which to insert the specified rule. If the specified index is equal to the length of the style sheet's rule collection, the rule will be added to the end of the style sheet. Returns ulong The index within the style sheet's rule collection of the newly inserted rule. Exceptions DomException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the specified index e.g. if an @import rule is inserted after a standard rule set or other at-rule. DomException INDEX_SIZE_ERR: Raised if the specified index does not correspond to a rule in the style sheet's rule list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly. DomException SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable."
  },
  "api/SharpVectors.Dom.Css.ICssStyleSheet.OwnerRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleSheet.OwnerRule.html",
    "title": "Property OwnerRule | SharpVectors Documentation",
    "keywords": "Property OwnerRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll OwnerRule If this style sheet comes from an @import rule, the ownerRule attribute will contain the ICssImportRule. ICssRule OwnerRule { get; } Property Value ICssRule Remarks In that case, the OwnerNode attribute in the IStyleSheet interface will be null. If the style sheet comes from an element or a processing instruction, the OwnerRule attribute will be null and the OwnerNode attribute will contain the node."
  },
  "api/SharpVectors.Dom.Css.ICssStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.ICssStyleSheet.html",
    "title": "Interface ICssStyleSheet | SharpVectors Documentation",
    "keywords": "Interface ICssStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is text/css. public interface ICssStyleSheet : IStyleSheet Inherited Members IStyleSheet.Media IStyleSheet.Title IStyleSheet.Href IStyleSheet.ParentStyleSheet IStyleSheet.OwnerNode IStyleSheet.Disabled IStyleSheet.Type Properties CssRules The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules. OwnerRule If this style sheet comes from an @import rule, the ownerRule attribute will contain the ICssImportRule. Methods DeleteRule(ulong) Used to delete a rule from the style sheet. InsertRule(string, ulong) Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade."
  },
  "api/SharpVectors.Dom.Css.ICssUnknownRule.html": {
    "href": "api/SharpVectors.Dom.Css.ICssUnknownRule.html",
    "title": "Interface ICssUnknownRule | SharpVectors Documentation",
    "keywords": "Interface ICssUnknownRule Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssUnknownRule interface represents an at-rule not supported by this user agent. public interface ICssUnknownRule : ICssRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText"
  },
  "api/SharpVectors.Dom.Css.ICssValue.CssText.html": {
    "href": "api/SharpVectors.Dom.Css.ICssValue.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll CssText A string representation of the current value. string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Css.ICssValue.CssValueType.html": {
    "href": "api/SharpVectors.Dom.Css.ICssValue.CssValueType.html",
    "title": "Property CssValueType | SharpVectors Documentation",
    "keywords": "Property CssValueType Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll CssValueType An enumeration code defining the type of the value. CssValueType CssValueType { get; } Property Value CssValueType"
  },
  "api/SharpVectors.Dom.Css.ICssValue.IsAbsolute.html": {
    "href": "api/SharpVectors.Dom.Css.ICssValue.IsAbsolute.html",
    "title": "Property IsAbsolute | SharpVectors Documentation",
    "keywords": "Property IsAbsolute Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification. bool IsAbsolute { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Css.ICssValue.html": {
    "href": "api/SharpVectors.Dom.Css.ICssValue.html",
    "title": "Interface ICssValue | SharpVectors Documentation",
    "keywords": "Interface ICssValue Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssValue interface represents the current computed value of a CSS property. public interface ICssValue Properties CssText A string representation of the current value. CssValueType An enumeration code defining the type of the value. IsAbsolute Gets a value specifiying whether this CSS value an absolute or variable. This is an implementation extension, not part of the CSS specification."
  },
  "api/SharpVectors.Dom.Css.ICssValueList.Item.html": {
    "href": "api/SharpVectors.Dom.Css.ICssValueList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll this[ulong] Used to retrieve a ICssValue by ordinal index. The order in this collection represents the order of the values in the CSS style property. If index is greater than or equal to the number of values in the list, this returns null. ICssValue this[ulong index] { get; } Parameters index ulong Property Value ICssValue"
  },
  "api/SharpVectors.Dom.Css.ICssValueList.Length.html": {
    "href": "api/SharpVectors.Dom.Css.ICssValueList.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Length The number of CSS Values in the list. The range of valid values of the indices is 0 to length-1 inclusive. ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Css.ICssValueList.html": {
    "href": "api/SharpVectors.Dom.Css.ICssValueList.html",
    "title": "Interface ICssValueList | SharpVectors Documentation",
    "keywords": "Interface ICssValueList Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll The ICssValueList interface provides the abstraction of an ordered collection of CSS values. public interface ICssValueList : ICssValue Inherited Members ICssValue.CssText ICssValue.CssValueType ICssValue.IsAbsolute Properties this[ulong] Used to retrieve a ICssValue by ordinal index. The order in this collection represents the order of the values in the CSS style property. If index is greater than or equal to the number of values in the list, this returns null. Length The number of CSS Values in the list. The range of valid values of the indices is 0 to length-1 inclusive."
  },
  "api/SharpVectors.Dom.Css.ICssView.GetComputedStyle.html": {
    "href": "api/SharpVectors.Dom.Css.ICssView.GetComputedStyle.html",
    "title": "Method GetComputedStyle | SharpVectors Documentation",
    "keywords": "Method GetComputedStyle Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetComputedStyle(XmlElement, string) This method is used to get the computed style as it is defined in [CSS2]. ICssStyleDeclaration GetComputedStyle(XmlElement elt, string pseudoElt) Parameters elt XmlElement The element whose style is to be computed. This parameter cannot be null. pseudoElt string The pseudo-element or null if none Returns ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.ICssView.html": {
    "href": "api/SharpVectors.Dom.Css.ICssView.html",
    "title": "Interface ICssView | SharpVectors Documentation",
    "keywords": "Interface ICssView Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll This interface represents a CSS view. The GetComputedStyle(XmlElement, string) method provides a read only access to the computed values of an element. public interface ICssView Methods GetComputedStyle(XmlElement, string) This method is used to get the computed style as it is defined in [CSS2]."
  },
  "api/SharpVectors.Dom.Css.IDocumentCss.GetOverrideStyle.html": {
    "href": "api/SharpVectors.Dom.Css.IDocumentCss.GetOverrideStyle.html",
    "title": "Method GetOverrideStyle | SharpVectors Documentation",
    "keywords": "Method GetOverrideStyle Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll GetOverrideStyle(XmlElement, string) This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element. ICssStyleDeclaration GetOverrideStyle(XmlElement elt, string pseudoElt) Parameters elt XmlElement pseudoElt string Returns ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.IDocumentCss.html": {
    "href": "api/SharpVectors.Dom.Css.IDocumentCss.html",
    "title": "Interface IDocumentCss | SharpVectors Documentation",
    "keywords": "Interface IDocumentCss Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll This interface represents a document with a CSS view. public interface IDocumentCss : IDocumentStyle Inherited Members IDocumentStyle.StyleSheets Methods GetOverrideStyle(XmlElement, string) This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element."
  },
  "api/SharpVectors.Dom.Css.IDomImplementationCss.CreateCssStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Css.IDomImplementationCss.CreateCssStyleSheet.html",
    "title": "Method CreateCssStyleSheet | SharpVectors Documentation",
    "keywords": "Method CreateCssStyleSheet Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll CreateCssStyleSheet(string, string) Creates a new ICssStyleSheet. ICssStyleSheet CreateCssStyleSheet(string title, string media) Parameters title string The advisory title. See also the Style Sheet Interfaces section. media string The comma-separated list of media associated with the new style sheet. See also the Style Sheet Interfaces section. Returns ICssStyleSheet A new CSS style sheet."
  },
  "api/SharpVectors.Dom.Css.IDomImplementationCss.html": {
    "href": "api/SharpVectors.Dom.Css.IDomImplementationCss.html",
    "title": "Interface IDomImplementationCss | SharpVectors Documentation",
    "keywords": "Interface IDomImplementationCss Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll This interface allows the DOM user to create a ICssStyleSheet outside the context of a document. There is no way to associate the new ICssStyleSheet with a document in DOM Level 2. public interface IDomImplementationCss : IDomImplementation Inherited Members IDomImplementation.HasFeature(string, string) IDomImplementation.CreateDocumentType(string, string, string) IDomImplementation.CreateDocument(string, string, IDocumentType) Remarks This interface should inherit from IDomImplementation but System.Xml does not have this interface, just a class. You can not inherit from a class in an interface. Methods CreateCssStyleSheet(string, string) Creates a new ICssStyleSheet."
  },
  "api/SharpVectors.Dom.Css.IElementCssInlineStyle.Style.html": {
    "href": "api/SharpVectors.Dom.Css.IElementCssInlineStyle.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Style The style attribute ICssStyleDeclaration Style { get; } Property Value ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Css.IElementCssInlineStyle.html": {
    "href": "api/SharpVectors.Dom.Css.IElementCssInlineStyle.html",
    "title": "Interface IElementCssInlineStyle | SharpVectors Documentation",
    "keywords": "Interface IElementCssInlineStyle Namespace SharpVectors.Dom.Css Assembly SharpVectors.Core.dll Inline style information attached to elements is exposed through the style attribute. public interface IElementCssInlineStyle Remarks This represents the contents of the STYLE attribute for HTML elements (or elements in other schemas or DTDs which use the STYLE attribute in the same way). The expectation is that an instance of the IElementCssInlineStyle interface can be obtained by using binding-specific casting methods on an instance of the Element interface when the element supports inline CSS style informations. Properties Style The style attribute"
  },
  "api/SharpVectors.Dom.Css.NodeChangeHandler.html": {
    "href": "api/SharpVectors.Dom.Css.NodeChangeHandler.html",
    "title": "Delegate NodeChangeHandler | SharpVectors Documentation",
    "keywords": "Delegate NodeChangeHandler Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll public delegate void NodeChangeHandler(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Css.StaticSection.Dispose.html": {
    "href": "api/SharpVectors.Dom.Css.StaticSection.Dispose.html",
    "title": "Method Dispose | SharpVectors Documentation",
    "keywords": "Method Dispose Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/SharpVectors.Dom.Css.StaticSection.Use.html": {
    "href": "api/SharpVectors.Dom.Css.StaticSection.Use.html",
    "title": "Method Use | SharpVectors Documentation",
    "keywords": "Method Use Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Use(CssXmlDocument) Uses the specified CSS XML document with Static state to true. public static IDisposable Use(CssXmlDocument cssXmlDocument) Parameters cssXmlDocument CssXmlDocument The CSS XML document. Returns IDisposable"
  },
  "api/SharpVectors.Dom.Css.StaticSection.html": {
    "href": "api/SharpVectors.Dom.Css.StaticSection.html",
    "title": "Class StaticSection | SharpVectors Documentation",
    "keywords": "Class StaticSection Namespace SharpVectors.Dom.Css Assembly SharpVectors.Css.dll Creates a static section for a CssXmlDocument. Typical use: using(StaticSection.Use(doc)) { // blah blah } public sealed class StaticSection : IDisposable Inheritance object StaticSection Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Use(CssXmlDocument) Uses the specified CSS XML document with Static state to true."
  },
  "api/SharpVectors.Dom.Css.html": {
    "href": "api/SharpVectors.Dom.Css.html",
    "title": "Namespace SharpVectors.Dom.Css | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom.Css The SharpVectors.Dom.Css namespace contains a bunch of classes and interfaces. Classes CssAbsPrimitiveLengthValue CssAbsPrimitiveValue CssAbsValue CssCharsetRule The CSSCharsetRule interface represents a @charset rule in a CSS style sheet. The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no CSSCharsetRule is created. The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet. The value of the @charset rule (and therefore of the CSSCharsetRule) may not correspond to the encoding the document actually came in; character encoding information e.g. in an HTTP header, has priority (see CSS document representation) but this is not reflected in the CSSCharsetRule. CssCollectedProperty Used internally to store collected properties. CssCollectedStyleDeclaration Used internally for collection of styles for a specific element CssColor The RGB-Color interface is used to represent any RGB color value. CssFontFaceRule The ICssFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions. CssImportRule The CSSImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets. CssMediaRule The CSSMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types. CssNumber CssPageRule The CSSPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media. CssPrimitiveAngleValue CssPrimitiveColorValue CssPrimitiveLengthValue CssPrimitiveRgbValue CssPrimitiveValue This implements the ICssPrimitiveValue interface which represents a single CSS value. CssPrimitiveVarsValue CssPropertyProfile CssRect The Rect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property. CssRule CssRuleList The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules. The items in the CSSRuleList are accessible via an integral index, starting from 0. CssStyleDeclaration The ICssStyleDeclaration interface represents a single CSS declaration block. This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block. While an implementation may not recognize all CSS properties within a CSS declaration block, it is expected to provide access to all specified properties in the style sheet through the ICssStyleDeclaration interface. Furthermore, implementations that support a specific level of CSS should correctly handle CSS shorthand properties for that level. For a further discussion of shorthand properties, see the CSS2Properties interface. This interface is also used to provide a read-only access to the computed values of an element. See also the ViewCSS interface. Note: The CSS Object Model doesn't provide an access to the specified or actual values of the CSS cascade CssStyleRule The CSSStyleRule interface represents a single rule set in a CSS style sheet. CssStyleSheet The ICssStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is \"text/css\". CssUnknownRule The CSSUnknownRule interface represents an at-rule not supported by this user agent. CssValue This implements the ICssValue interface, which represents a simple or a complex value. A ICssValue object only occurs in a context of a CSS property. CssXPathSelector CssXmlDocument A XmlDocument with CSS support CssXmlElement StaticSection Creates a static section for a CssXmlDocument. Typical use: using(StaticSection.Use(doc)) { // blah blah } Interfaces ICssCharsetRule The ICssCharsetRule interface represents a @charset rule in a CSS style sheet. The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no ICssCharsetRule is created. The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet. ICssColor The RGB-Color interface is used to represent any RGB color value. This interface reflects the values in the underlying style property. Hence, modifications made to the ICssPrimitiveValue objects modify the style property. ICssCounter The Counter interface is used to represent any counter or counters function value. This interface reflects the values in the underlying style property. ICssFontFaceRule The ICssFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions. ICssImportRule The ICssImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets. ICssMediaRule The ICssMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types ICssPageRule The ICssPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media. ICssPrimitiveValue The ICssPrimitiveValue interface represents a single CSS value. ICssRect The ICssRect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the ICssPrimitiveValue objects modify the style property. ICssRule The ICssRule interface is the abstract base interface for any type of CSS statement. This includes both rule sets and at-rules. An implementation is expected to preserve all rules specified in a CSS style sheet, even if the rule is not recognized by the parser. Unrecognized rules are represented using the ICssUnknownRule interface. ICssRuleList The ICssRuleList interface provides the abstraction of an ordered collection of CSS rules. ICssStyleDeclaration The ICssStyleDeclaration interface represents a single CSS declaration block. ICssStyleRule The ICssStyleRule interface represents a single rule set in a CSS style sheet. ICssStyleSheet The ICssStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is text/css. ICssUnknownRule The ICssUnknownRule interface represents an at-rule not supported by this user agent. ICssValue The ICssValue interface represents the current computed value of a CSS property. ICssValueList The ICssValueList interface provides the abstraction of an ordered collection of CSS values. ICssView This interface represents a CSS view. The GetComputedStyle(XmlElement, string) method provides a read only access to the computed values of an element. IDocumentCss This interface represents a document with a CSS view. IDomImplementationCss This interface allows the DOM user to create a ICssStyleSheet outside the context of a document. There is no way to associate the new ICssStyleSheet with a document in DOM Level 2. IElementCssInlineStyle Inline style information attached to elements is exposed through the style attribute. Enums CssPrimitiveType The CssPrimitiveType enumeration contains the list of possible primitive value types in CSS. This class is an extension of the CSS spec. The CSS spec has a list of constants instead of an enum class. CssRuleType The CssRuleType Enum contains the possible Rule Type Values. This is an extension of the CSS specification. The spec contains only a list of contstant in the ICssRule interface. CssStyleSheetType The different types of CssStyleSheets CssValueType The CssValueType Enum contains the possible CSS Value Types. This is an extension to the CSS specification. The specification has a list of constants defined within the ICssValue Interface Delegates CssChangeHandler NodeChangeHandler"
  },
  "api/SharpVectors.Dom.Declaration.-ctor.html": {
    "href": "api/SharpVectors.Dom.Declaration.-ctor.html",
    "title": "Constructor Declaration | SharpVectors Documentation",
    "keywords": "Constructor Declaration Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Declaration(string, string, string, Document) protected Declaration(string version, string encoding, string standAlone, Document document) Parameters version string encoding string standAlone string document Document"
  },
  "api/SharpVectors.Dom.Declaration.html": {
    "href": "api/SharpVectors.Dom.Declaration.html",
    "title": "Class Declaration | SharpVectors Documentation",
    "keywords": "Class Declaration Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for Declaration. public class Declaration : XmlDeclaration, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlDeclaration Declaration Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlDeclaration.CloneNode(bool) XmlDeclaration.WriteTo(XmlWriter) XmlDeclaration.WriteContentTo(XmlWriter) XmlDeclaration.Version XmlDeclaration.Encoding XmlDeclaration.Standalone XmlDeclaration.Value XmlDeclaration.InnerText XmlDeclaration.Name XmlDeclaration.LocalName XmlDeclaration.NodeType XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Declaration(string, string, string, Document)"
  },
  "api/SharpVectors.Dom.Document.-ctor.html": {
    "href": "api/SharpVectors.Dom.Document.-ctor.html",
    "title": "Constructor Document | SharpVectors Documentation",
    "keywords": "Constructor Document Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Document() public Document() Document(DomImplementation) protected Document(DomImplementation domImplementation) Parameters domImplementation DomImplementation Document(XmlNameTable) public Document(XmlNameTable nameTable) Parameters nameTable XmlNameTable"
  },
  "api/SharpVectors.Dom.Document.CanAccessExternalResources.html": {
    "href": "api/SharpVectors.Dom.Document.CanAccessExternalResources.html",
    "title": "Method CanAccessExternalResources | SharpVectors Documentation",
    "keywords": "Method CanAccessExternalResources Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CanAccessExternalResources(string) Check if the Document allows access of external resource public bool CanAccessExternalResources(string resourcesUri) Parameters resourcesUri string the URI to the external resource Returns bool This returns true if access of external resource is allowed; otherwise, it return false. CanAccessExternalResources(Uri) public bool CanAccessExternalResources(Uri resourcesUri) Parameters resourcesUri Uri Returns bool"
  },
  "api/SharpVectors.Dom.Document.CanDispatch.html": {
    "href": "api/SharpVectors.Dom.Document.CanDispatch.html",
    "title": "Method CanDispatch | SharpVectors Documentation",
    "keywords": "Method CanDispatch Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CanDispatch(string, string) Test if the implementation can generate events of a specified type. public virtual bool CanDispatch(string namespaceUri, string type) Parameters namespaceUri string Specifies the IEvent.NamespaceUri of the event. type string Specifies the IEvent.Type of the event. Returns bool true if the implementation can generate and dispatch this event type, false otherwise."
  },
  "api/SharpVectors.Dom.Document.CanUseBitmap.html": {
    "href": "api/SharpVectors.Dom.Document.CanUseBitmap.html",
    "title": "Property CanUseBitmap | SharpVectors Documentation",
    "keywords": "Property CanUseBitmap Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CanUseBitmap Gets or sets a value indicating if image elements will render bitmaps. public bool CanUseBitmap { get; set; } Property Value bool A value specifying how bitmaps are rendered. If true elements will render bitmaps; otherwise, it is false elements will not render bitmaps. The default is true."
  },
  "api/SharpVectors.Dom.Document.CreateAttribute.html": {
    "href": "api/SharpVectors.Dom.Document.CreateAttribute.html",
    "title": "Method CreateAttribute | SharpVectors Documentation",
    "keywords": "Method CreateAttribute Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateAttribute(string, string, string) Creates an XmlAttribute with the specified Prefix, LocalName, and NamespaceURI. public override XmlAttribute CreateAttribute(string prefix, string localName, string namespaceURI) Parameters prefix string The prefix of the attribute (if any). String.Empty and null are equivalent. localName string The local name of the attribute. namespaceURI string The namespace URI of the attribute (if any). String.Empty and null are equivalent. If prefix is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown. Returns XmlAttribute The new XmlAttribute."
  },
  "api/SharpVectors.Dom.Document.CreateCDataSection.html": {
    "href": "api/SharpVectors.Dom.Document.CreateCDataSection.html",
    "title": "Method CreateCDataSection | SharpVectors Documentation",
    "keywords": "Method CreateCDataSection Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateCDataSection(string) Creates an XmlCDataSection containing the specified data. public override XmlCDataSection CreateCDataSection(string data) Parameters data string The content of the new XmlCDataSection. Returns XmlCDataSection The new XmlCDataSection."
  },
  "api/SharpVectors.Dom.Document.CreateComment.html": {
    "href": "api/SharpVectors.Dom.Document.CreateComment.html",
    "title": "Method CreateComment | SharpVectors Documentation",
    "keywords": "Method CreateComment Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateComment(string) Creates an XmlComment containing the specified data. public override XmlComment CreateComment(string data) Parameters data string The content of the new XmlComment. Returns XmlComment The new XmlComment."
  },
  "api/SharpVectors.Dom.Document.CreateDocumentFragment.html": {
    "href": "api/SharpVectors.Dom.Document.CreateDocumentFragment.html",
    "title": "Method CreateDocumentFragment | SharpVectors Documentation",
    "keywords": "Method CreateDocumentFragment Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateDocumentFragment() Creates an XmlDocumentFragment. public override XmlDocumentFragment CreateDocumentFragment() Returns XmlDocumentFragment The new XmlDocumentFragment."
  },
  "api/SharpVectors.Dom.Document.CreateDocumentType.html": {
    "href": "api/SharpVectors.Dom.Document.CreateDocumentType.html",
    "title": "Method CreateDocumentType | SharpVectors Documentation",
    "keywords": "Method CreateDocumentType Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateDocumentType(string, string, string, string) Returns a new XmlDocumentType object. public override XmlDocumentType CreateDocumentType(string name, string publicId, string systemId, string internalSubset) Parameters name string Name of the document type. publicId string The public identifier of the document type or null. You can specify a public URI and also a system identifier to identify the location of the external DTD subset. systemId string The system identifier of the document type or null. Specifies the URL of the file location for the external DTD subset. internalSubset string The DTD internal subset of the document type or null. Returns XmlDocumentType The new XmlDocumentType."
  },
  "api/SharpVectors.Dom.Document.CreateElement.html": {
    "href": "api/SharpVectors.Dom.Document.CreateElement.html",
    "title": "Method CreateElement | SharpVectors Documentation",
    "keywords": "Method CreateElement Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateElement(string, string, string) Creates an element with the specified Prefix, LocalName, and NamespaceURI. public override XmlElement CreateElement(string prefix, string localName, string namespaceURI) Parameters prefix string The prefix of the new element (if any). String.Empty and null are equivalent. localName string The local name of the new element. namespaceURI string The namespace URI of the new element (if any). String.Empty and null are equivalent. Returns XmlElement The new XmlElement."
  },
  "api/SharpVectors.Dom.Document.CreateEntityReference.html": {
    "href": "api/SharpVectors.Dom.Document.CreateEntityReference.html",
    "title": "Method CreateEntityReference | SharpVectors Documentation",
    "keywords": "Method CreateEntityReference Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateEntityReference(string) Creates an XmlEntityReference with the specified name. public override XmlEntityReference CreateEntityReference(string name) Parameters name string The name of the entity reference. Returns XmlEntityReference The new XmlEntityReference. Exceptions ArgumentException The name is invalid (for example, names starting with'#' are invalid.)"
  },
  "api/SharpVectors.Dom.Document.CreateEvent.html": {
    "href": "api/SharpVectors.Dom.Document.CreateEvent.html",
    "title": "Method CreateEvent | SharpVectors Documentation",
    "keywords": "Method CreateEvent Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateEvent(string) The CreateEvent method is used in creating IEvents when it is either inconvenient or unnecessary for the user to create an IEvent themselves. public virtual IEvent CreateEvent(string eventType) Parameters eventType string The eventType parameter specifies the name of the DOM Events interface to be supported by the created event object, e.g. \"Event\", \"MouseEvent\", \"MutationEvent\" ... If the IEvent is to be dispatched via the IEventTarget.DispatchEvent method the appropriate event init method must be called after creation in order to initialize the IEvent's values. As an example, a user wishing to synthesize some kind of IUiEvent would call IDocumentEvent.CreateEvent with the parameter \"UIEvent\". The IUiEvent.InitUiEventNs method could then be called on the newly created IUiEvent object to set the specific type of user interface event to be dispatched, {\"http://www.w3.org/2001/xml-events\", \"DOMActivate\"} for example, and set its context information, e.g. IUiEvent.Detail in this example. Returns IEvent The newly created event object. Remarks In cases where the implementation provided IEvent is insufficient, users may supply their own IEvent implementations for use with the IEventTarget.DispatchEvent method. However, the DOM implementation needs access to the attributes IEvent.CurrentTarget and IEvent.EventPhase to propagate appropriately the event in the DOM tree. Therefore users' IEvent implementations might need to support the ICustomEvent interface for that effect. Note: For backward compatibility reason, \"UIEvents\", \"MouseEvents\", \"MutationEvents\", and \"HTMLEvents\" feature names are valid values for the parameter eventType and represent respectively the interfaces \"UIEvent\", \"MouseEvent\", \"MutationEvent\", and \"Event\". Exceptions DomException NOT_SUPPORTED_ERR: Raised if the implementation does not support the Event interface requested."
  },
  "api/SharpVectors.Dom.Document.CreateProcessingInstruction.html": {
    "href": "api/SharpVectors.Dom.Document.CreateProcessingInstruction.html",
    "title": "Method CreateProcessingInstruction | SharpVectors Documentation",
    "keywords": "Method CreateProcessingInstruction Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateProcessingInstruction(string, string) Creates an XmlProcessingInstruction with the specified name and data. public override XmlProcessingInstruction CreateProcessingInstruction(string target, string data) Parameters target string The name of the processing instruction. data string The data for the processing instruction. Returns XmlProcessingInstruction The new XmlProcessingInstruction."
  },
  "api/SharpVectors.Dom.Document.CreateSignificantWhitespace.html": {
    "href": "api/SharpVectors.Dom.Document.CreateSignificantWhitespace.html",
    "title": "Method CreateSignificantWhitespace | SharpVectors Documentation",
    "keywords": "Method CreateSignificantWhitespace Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateSignificantWhitespace(string) Creates an XmlSignificantWhitespace node. public override XmlSignificantWhitespace CreateSignificantWhitespace(string text) Parameters text string The string must contain only the following characters &#20; &#10; &#13; and &#9; Returns XmlSignificantWhitespace A new XmlSignificantWhitespace node."
  },
  "api/SharpVectors.Dom.Document.CreateTextNode.html": {
    "href": "api/SharpVectors.Dom.Document.CreateTextNode.html",
    "title": "Method CreateTextNode | SharpVectors Documentation",
    "keywords": "Method CreateTextNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateTextNode(string) Creates an XmlText with the specified text. public override XmlText CreateTextNode(string text) Parameters text string The text for the Text node. Returns XmlText The new XmlText node."
  },
  "api/SharpVectors.Dom.Document.CreateWhitespace.html": {
    "href": "api/SharpVectors.Dom.Document.CreateWhitespace.html",
    "title": "Method CreateWhitespace | SharpVectors Documentation",
    "keywords": "Method CreateWhitespace Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateWhitespace(string) Creates an XmlWhitespace node. public override XmlWhitespace CreateWhitespace(string text) Parameters text string The string must contain only the following characters &#20; &#10; &#13; and &#9; Returns XmlWhitespace A new XmlWhitespace node."
  },
  "api/SharpVectors.Dom.Document.CreateXmlDeclaration.html": {
    "href": "api/SharpVectors.Dom.Document.CreateXmlDeclaration.html",
    "title": "Method CreateXmlDeclaration | SharpVectors Documentation",
    "keywords": "Method CreateXmlDeclaration Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll CreateXmlDeclaration(string, string, string) Creates an XmlDeclaration node with the specified values. public override XmlDeclaration CreateXmlDeclaration(string version, string encoding, string standalone) Parameters version string The version must be \"1.0\". encoding string The value of the encoding attribute. This is the encoding that is used when you save the XmlDocument to a file or a stream; therefore, it must be set to a string supported by the Encoding class, otherwise Save(string) fails. If this is null or String.Empty, the Save method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.Note: If the XmlDocument is saved to either a TextWriter or an XmlTextWriter, this encoding value is discarded. Instead, the encoding of the TextWriter or the XmlTextWriter is used. This ensures that the XML written out can be read back using the correct encoding. standalone string The value must be either \"yes\" or \"no\". If this is null or String.Empty, the Save method does not write a standalone attribute on the XML declaration. Returns XmlDeclaration The new XmlDeclaration node. Exceptions ArgumentException The values of version or standalone are something other than the ones specified above."
  },
  "api/SharpVectors.Dom.Document.DeletedText.html": {
    "href": "api/SharpVectors.Dom.Document.DeletedText.html",
    "title": "Method DeletedText | SharpVectors Documentation",
    "keywords": "Method DeletedText Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll DeletedText(INode, int, int) A method to be called when some text was deleted from a text node, so that live objects can be notified. protected virtual void DeletedText(INode node, int offset, int count) Parameters node INode offset int count int"
  },
  "api/SharpVectors.Dom.Document.ExternalResourcesAccessMode.html": {
    "href": "api/SharpVectors.Dom.Document.ExternalResourcesAccessMode.html",
    "title": "Property ExternalResourcesAccessMode | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesAccessMode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll ExternalResourcesAccessMode Gets or sets a value indicating how to handled external resources. public ExternalResourcesAccessModes ExternalResourcesAccessMode { get; set; } Property Value ExternalResourcesAccessModes An enumeration of the type ExternalResourcesAccessModes specifying the access mode. The default is Allow."
  },
  "api/SharpVectors.Dom.Document.InsertedNode.html": {
    "href": "api/SharpVectors.Dom.Document.InsertedNode.html",
    "title": "Method InsertedNode | SharpVectors Documentation",
    "keywords": "Method InsertedNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll InsertedNode(INode, INode, bool) A method to be called when a node has been inserted in the tree. protected virtual void InsertedNode(INode node, INode newInternal, bool replace) Parameters node INode newInternal INode replace bool"
  },
  "api/SharpVectors.Dom.Document.InsertedText.html": {
    "href": "api/SharpVectors.Dom.Document.InsertedText.html",
    "title": "Method InsertedText | SharpVectors Documentation",
    "keywords": "Method InsertedText Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll InsertedText(INode, int, int) A method to be called when some text was inserted into a text node, so that live objects can be notified. protected virtual void InsertedText(INode node, int offset, int count) Parameters node INode offset int count int"
  },
  "api/SharpVectors.Dom.Document.InsertingNode.html": {
    "href": "api/SharpVectors.Dom.Document.InsertingNode.html",
    "title": "Method InsertingNode | SharpVectors Documentation",
    "keywords": "Method InsertingNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll InsertingNode(INode, bool) A method to be called when a node is about to be inserted in the tree. protected virtual void InsertingNode(INode node, bool replace) Parameters node INode replace bool"
  },
  "api/SharpVectors.Dom.Document.ModifiedAttrValue.html": {
    "href": "api/SharpVectors.Dom.Document.ModifiedAttrValue.html",
    "title": "Method ModifiedAttrValue | SharpVectors Documentation",
    "keywords": "Method ModifiedAttrValue Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll ModifiedAttrValue(IAttribute, string) A method to be called when an attribute value has been modified. protected virtual void ModifiedAttrValue(IAttribute attr, string oldvalue) Parameters attr IAttribute oldvalue string"
  },
  "api/SharpVectors.Dom.Document.ModifiedCharacterData.html": {
    "href": "api/SharpVectors.Dom.Document.ModifiedCharacterData.html",
    "title": "Method ModifiedCharacterData | SharpVectors Documentation",
    "keywords": "Method ModifiedCharacterData Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll ModifiedCharacterData(INode, string, string) A method to be called when a character data node has been modified. protected virtual void ModifiedCharacterData(INode node, string oldvalue, string value) Parameters node INode oldvalue string value string"
  },
  "api/SharpVectors.Dom.Document.ModifyingCharacterData.html": {
    "href": "api/SharpVectors.Dom.Document.ModifyingCharacterData.html",
    "title": "Method ModifyingCharacterData | SharpVectors Documentation",
    "keywords": "Method ModifyingCharacterData Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll ModifyingCharacterData(INode) A method to be called when a character data node has been modified. protected virtual void ModifyingCharacterData(INode node) Parameters node INode"
  },
  "api/SharpVectors.Dom.Document.MutationEvents.html": {
    "href": "api/SharpVectors.Dom.Document.MutationEvents.html",
    "title": "Property MutationEvents | SharpVectors Documentation",
    "keywords": "Property MutationEvents Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll MutationEvents Gets or sets a value to enable or disable mutation events. public bool MutationEvents { get; set; } Property Value bool A value specifying whether to enable or disable mutation events. The default is false."
  },
  "api/SharpVectors.Dom.Document.RemovedAttrNode.html": {
    "href": "api/SharpVectors.Dom.Document.RemovedAttrNode.html",
    "title": "Method RemovedAttrNode | SharpVectors Documentation",
    "keywords": "Method RemovedAttrNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll RemovedAttrNode(IAttribute, INode, string) A method to be called when an attribute node has been removed. protected virtual void RemovedAttrNode(IAttribute attribute, INode oldOwner, string name) Parameters attribute IAttribute oldOwner INode name string"
  },
  "api/SharpVectors.Dom.Document.RemovedNode.html": {
    "href": "api/SharpVectors.Dom.Document.RemovedNode.html",
    "title": "Method RemovedNode | SharpVectors Documentation",
    "keywords": "Method RemovedNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll RemovedNode(INode, bool) A method to be called when a node has been removed from the tree. protected virtual void RemovedNode(INode node, bool replace) Parameters node INode replace bool"
  },
  "api/SharpVectors.Dom.Document.RemovingNode.html": {
    "href": "api/SharpVectors.Dom.Document.RemovingNode.html",
    "title": "Method RemovingNode | SharpVectors Documentation",
    "keywords": "Method RemovingNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll RemovingNode(INode, INode, bool) A method to be called when a node is about to be removed from the tree. protected virtual void RemovingNode(INode node, INode oldChild, bool replace) Parameters node INode oldChild INode replace bool"
  },
  "api/SharpVectors.Dom.Document.RenamedAttrNode.html": {
    "href": "api/SharpVectors.Dom.Document.RenamedAttrNode.html",
    "title": "Method RenamedAttrNode | SharpVectors Documentation",
    "keywords": "Method RenamedAttrNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll RenamedAttrNode(IAttribute, IAttribute) A method to be called when an attribute node has been renamed. protected virtual void RenamedAttrNode(IAttribute oldAttribute, IAttribute newAttribute) Parameters oldAttribute IAttribute newAttribute IAttribute"
  },
  "api/SharpVectors.Dom.Document.RenamedElement.html": {
    "href": "api/SharpVectors.Dom.Document.RenamedElement.html",
    "title": "Method RenamedElement | SharpVectors Documentation",
    "keywords": "Method RenamedElement Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll RenamedElement(IElement, IElement) A method to be called when an element has been renamed. protected virtual void RenamedElement(IElement oldElement, IElement newElement) Parameters oldElement IElement newElement IElement"
  },
  "api/SharpVectors.Dom.Document.ReplacedNode.html": {
    "href": "api/SharpVectors.Dom.Document.ReplacedNode.html",
    "title": "Method ReplacedNode | SharpVectors Documentation",
    "keywords": "Method ReplacedNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll ReplacedNode(INode) A method to be called when a node has been replaced in the tree. protected virtual void ReplacedNode(INode node) Parameters node INode"
  },
  "api/SharpVectors.Dom.Document.ReplacedText.html": {
    "href": "api/SharpVectors.Dom.Document.ReplacedText.html",
    "title": "Method ReplacedText | SharpVectors Documentation",
    "keywords": "Method ReplacedText Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll ReplacedText(INode) A method to be called when some text was changed in a text node, so that live objects can be notified. protected virtual void ReplacedText(INode node) Parameters node INode"
  },
  "api/SharpVectors.Dom.Document.SetAttrNode.html": {
    "href": "api/SharpVectors.Dom.Document.SetAttrNode.html",
    "title": "Method SetAttrNode | SharpVectors Documentation",
    "keywords": "Method SetAttrNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll SetAttrNode(IAttribute, IAttribute) A method to be called when an attribute node has been set. protected virtual void SetAttrNode(IAttribute attribute, IAttribute previous) Parameters attribute IAttribute previous IAttribute"
  },
  "api/SharpVectors.Dom.Document.html": {
    "href": "api/SharpVectors.Dom.Document.html",
    "title": "Class Document | SharpVectors Documentation",
    "keywords": "Class Document Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll The base implementation of an XML document to support both SVG and CSS documents. public class Document : XmlDocument, ICloneable, IEnumerable, IXPathNavigable, IDocument, INode, IXmlNode, IEventTargetSupport, IEventTarget, IDocumentEvent Inheritance object XmlNode XmlDocument Document Implements ICloneable IEnumerable IXPathNavigable IDocument INode IXmlNode IEventTargetSupport IEventTarget IDocumentEvent Derived CssXmlDocument Inherited Members XmlDocument.CloneNode(bool) XmlDocument.CreateAttribute(string) XmlDocument.CreateElement(string) XmlDocument.CreateNavigator() XmlDocument.CreateNavigator(XmlNode) XmlDocument.GetElementsByTagName(string) XmlDocument.CreateAttribute(string, string) XmlDocument.CreateElement(string, string) XmlDocument.GetElementsByTagName(string, string) XmlDocument.GetElementById(string) XmlDocument.ImportNode(XmlNode, bool) XmlDocument.CreateDefaultAttribute(string, string, string) XmlDocument.CreateNode(XmlNodeType, string, string, string) XmlDocument.CreateNode(string, string, string) XmlDocument.CreateNode(XmlNodeType, string, string) XmlDocument.ReadNode(XmlReader) XmlDocument.Load(string) XmlDocument.Load(Stream) XmlDocument.Load(TextReader) XmlDocument.Load(XmlReader) XmlDocument.LoadXml(string) XmlDocument.Save(string) XmlDocument.Save(Stream) XmlDocument.Save(TextWriter) XmlDocument.Save(XmlWriter) XmlDocument.WriteTo(XmlWriter) XmlDocument.WriteContentTo(XmlWriter) XmlDocument.Validate(ValidationEventHandler) XmlDocument.Validate(ValidationEventHandler, XmlNode) XmlDocument.NodeType XmlDocument.ParentNode XmlDocument.DocumentType XmlDocument.Implementation XmlDocument.Name XmlDocument.LocalName XmlDocument.DocumentElement XmlDocument.OwnerDocument XmlDocument.Schemas XmlDocument.XmlResolver XmlDocument.NameTable XmlDocument.PreserveWhitespace XmlDocument.IsReadOnly XmlDocument.InnerText XmlDocument.InnerXml XmlDocument.SchemaInfo XmlDocument.BaseURI XmlDocument.NodeInserting XmlDocument.NodeInserted XmlDocument.NodeRemoving XmlDocument.NodeRemoved XmlDocument.NodeChanging XmlDocument.NodeChanged XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.OuterXml XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Document() Document(DomImplementation) Document(XmlNameTable) Properties CanUseBitmap Gets or sets a value indicating if image elements will render bitmaps. ExternalResourcesAccessMode Gets or sets a value indicating how to handled external resources. MutationEvents Gets or sets a value to enable or disable mutation events. Methods CanAccessExternalResources(string) Check if the Document allows access of external resource CanAccessExternalResources(Uri) CanDispatch(string, string) Test if the implementation can generate events of a specified type. CreateAttribute(string, string, string) Creates an XmlAttribute with the specified Prefix, LocalName, and NamespaceURI. CreateCDataSection(string) Creates an XmlCDataSection containing the specified data. CreateComment(string) Creates an XmlComment containing the specified data. CreateDocumentFragment() Creates an XmlDocumentFragment. CreateDocumentType(string, string, string, string) Returns a new XmlDocumentType object. CreateElement(string, string, string) Creates an element with the specified Prefix, LocalName, and NamespaceURI. CreateEntityReference(string) Creates an XmlEntityReference with the specified name. CreateEvent(string) The CreateEvent method is used in creating IEvents when it is either inconvenient or unnecessary for the user to create an IEvent themselves. CreateProcessingInstruction(string, string) Creates an XmlProcessingInstruction with the specified name and data. CreateSignificantWhitespace(string) Creates an XmlSignificantWhitespace node. CreateTextNode(string) Creates an XmlText with the specified text. CreateWhitespace(string) Creates an XmlWhitespace node. CreateXmlDeclaration(string, string, string) Creates an XmlDeclaration node with the specified values. DeletedText(INode, int, int) A method to be called when some text was deleted from a text node, so that live objects can be notified. InsertedNode(INode, INode, bool) A method to be called when a node has been inserted in the tree. InsertedText(INode, int, int) A method to be called when some text was inserted into a text node, so that live objects can be notified. InsertingNode(INode, bool) A method to be called when a node is about to be inserted in the tree. ModifiedAttrValue(IAttribute, string) A method to be called when an attribute value has been modified. ModifiedCharacterData(INode, string, string) A method to be called when a character data node has been modified. ModifyingCharacterData(INode) A method to be called when a character data node has been modified. RemovedAttrNode(IAttribute, INode, string) A method to be called when an attribute node has been removed. RemovedNode(INode, bool) A method to be called when a node has been removed from the tree. RemovingNode(INode, INode, bool) A method to be called when a node is about to be removed from the tree. RenamedAttrNode(IAttribute, IAttribute) A method to be called when an attribute node has been renamed. RenamedElement(IElement, IElement) A method to be called when an element has been renamed. ReplacedNode(INode) A method to be called when a node has been replaced in the tree. ReplacedText(INode) A method to be called when some text was changed in a text node, so that live objects can be notified. SetAttrNode(IAttribute, IAttribute) A method to be called when an attribute node has been set. replacingNode(INode) A method to be called when a node is about to be replaced in the tree."
  },
  "api/SharpVectors.Dom.Document.replacingNode.html": {
    "href": "api/SharpVectors.Dom.Document.replacingNode.html",
    "title": "Method replacingNode | SharpVectors Documentation",
    "keywords": "Method replacingNode Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll replacingNode(INode) A method to be called when a node is about to be replaced in the tree. protected virtual void replacingNode(INode node) Parameters node INode"
  },
  "api/SharpVectors.Dom.DocumentFragment.-ctor.html": {
    "href": "api/SharpVectors.Dom.DocumentFragment.-ctor.html",
    "title": "Constructor DocumentFragment | SharpVectors Documentation",
    "keywords": "Constructor DocumentFragment Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll DocumentFragment(Document) protected DocumentFragment(Document document) Parameters document Document"
  },
  "api/SharpVectors.Dom.DocumentFragment.html": {
    "href": "api/SharpVectors.Dom.DocumentFragment.html",
    "title": "Class DocumentFragment | SharpVectors Documentation",
    "keywords": "Class DocumentFragment Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for DocumentFragment. public class DocumentFragment : XmlDocumentFragment, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlDocumentFragment DocumentFragment Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlDocumentFragment.CloneNode(bool) XmlDocumentFragment.WriteTo(XmlWriter) XmlDocumentFragment.WriteContentTo(XmlWriter) XmlDocumentFragment.Name XmlDocumentFragment.LocalName XmlDocumentFragment.NodeType XmlDocumentFragment.ParentNode XmlDocumentFragment.OwnerDocument XmlDocumentFragment.InnerXml XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.InnerText XmlNode.OuterXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DocumentFragment(Document)"
  },
  "api/SharpVectors.Dom.DocumentType.-ctor.html": {
    "href": "api/SharpVectors.Dom.DocumentType.-ctor.html",
    "title": "Constructor DocumentType | SharpVectors Documentation",
    "keywords": "Constructor DocumentType Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll DocumentType(string, string, string, string, Document) public DocumentType(string name, string publicId, string systemId, string internalSubset, Document document) Parameters name string publicId string systemId string internalSubset string document Document"
  },
  "api/SharpVectors.Dom.DocumentType.html": {
    "href": "api/SharpVectors.Dom.DocumentType.html",
    "title": "Class DocumentType | SharpVectors Documentation",
    "keywords": "Class DocumentType Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for DocumentType. public class DocumentType : XmlDocumentType, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlDocumentType DocumentType Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlDocumentType.CloneNode(bool) XmlDocumentType.WriteTo(XmlWriter) XmlDocumentType.WriteContentTo(XmlWriter) XmlDocumentType.Name XmlDocumentType.LocalName XmlDocumentType.NodeType XmlDocumentType.IsReadOnly XmlDocumentType.Entities XmlDocumentType.Notations XmlDocumentType.PublicId XmlDocumentType.SystemId XmlDocumentType.InternalSubset XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.InnerText XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DocumentType(string, string, string, string, Document)"
  },
  "api/SharpVectors.Dom.DomException.-ctor.html": {
    "href": "api/SharpVectors.Dom.DomException.-ctor.html",
    "title": "Constructor DomException | SharpVectors Documentation",
    "keywords": "Constructor DomException Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll DomException() Initializes a new instance of the System.Exception class. public DomException() DomException(string, Exception) Initializes a new instance of the System.Exception class with a specified error message and a reference to the inner exception that is the cause of this exception. protected DomException(string msg, Exception innerException) Parameters msg string The message that describes the error. innerException Exception The exception that is the cause of the current exception, or null if no inner exception is specified. DomException(DomExceptionType) Initializes a new instance of the System.Exception class with a specified error code. public DomException(DomExceptionType code) Parameters code DomExceptionType The DOM exception code. DomException(DomExceptionType, string) Initializes a new instance of the System.Exception class with a specified error message and error code. public DomException(DomExceptionType code, string msg) Parameters code DomExceptionType The DOM exception code. msg string The message that describes the error. DomException(DomExceptionType, string, Exception) Initializes a new instance of the System.Exception class with a specified error message, error code and a reference to the inner exception that is the cause of this exception. public DomException(DomExceptionType code, string msg, Exception innerException) Parameters code DomExceptionType The DOM exception code. msg string The message that describes the error. innerException Exception The exception that is the cause of the current exception, or null if no inner exception is specified. DomException(SerializationInfo, StreamingContext) Initializes a new instance of the System.Exception class with serialized data. protected DomException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The SerializationInfo that holds the serialized object data about the exception being thrown. context StreamingContext The StreamingContext that contains contextual information about the source or destination."
  },
  "api/SharpVectors.Dom.DomException.Code.html": {
    "href": "api/SharpVectors.Dom.DomException.Code.html",
    "title": "Property Code | SharpVectors Documentation",
    "keywords": "Property Code Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Code Gets or sets a code specifying the type of the error. public DomExceptionType Code { get; protected set; } Property Value DomExceptionType An enumeration of the type DomExceptionType specifying the code defining the error."
  },
  "api/SharpVectors.Dom.DomException.html": {
    "href": "api/SharpVectors.Dom.DomException.html",
    "title": "Class DomException | SharpVectors Documentation",
    "keywords": "Class DomException Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Represents errors that occur during DOM operation execution. [Serializable] public class DomException : Exception, ISerializable, _Exception Inheritance object Exception DomException Implements ISerializable _Exception Derived SvgException SvgExternalResourcesRequiredException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Remarks DOM operations only raise exceptions in \"exceptional\" circumstances, i.e., when an operation is impossible to perform (either for logical reasons, because data is lost, or because the implementation has become unstable). In general, DOM methods return specific error values in ordinary processing situations, such as out-of-bound errors when using INodeList. Implementations should raise other exceptions under other circumstances. For example, implementations should raise an implementation-dependent exception if a null argument is passed. Some languages and object systems do not support the concept of exceptions. For such systems, error conditions may be indicated using native error reporting mechanisms. For some bindings, for example, methods may return error codes similar to those listed in the corresponding method descriptions. Constructors DomException() Initializes a new instance of the System.Exception class. DomException(DomExceptionType) Initializes a new instance of the System.Exception class with a specified error code. DomException(DomExceptionType, string) Initializes a new instance of the System.Exception class with a specified error message and error code. DomException(DomExceptionType, string, Exception) Initializes a new instance of the System.Exception class with a specified error message, error code and a reference to the inner exception that is the cause of this exception. DomException(SerializationInfo, StreamingContext) Initializes a new instance of the System.Exception class with serialized data. DomException(string, Exception) Initializes a new instance of the System.Exception class with a specified error message and a reference to the inner exception that is the cause of this exception. Properties Code Gets or sets a code specifying the type of the error. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.DomExceptionType.html": {
    "href": "api/SharpVectors.Dom.DomExceptionType.html",
    "title": "Enum DomExceptionType | SharpVectors Documentation",
    "keywords": "Enum DomExceptionType Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll DOM exception code types. public enum DomExceptionType Fields UnknowError = 0 If there is no defined error code for this exception or the exception is unknown. IndexSizeErr = 1 If index or size is negative, or greater than the allowed value. DomstringSizeErr = 2 If the specified range of text does not fit into a string. HierarchyRequestErr = 3 If any node is inserted somewhere it doesn't belong. WrongDocumentErr = 4 If a node is used in a different document than the one that created it (that doesn't support it). InvalidCharacterErr = 5 If an invalid or illegal character is specified, such as in a name. See production 2 in the XML specification for the definition of a legal character, and production 5 for the definition of a legal name character. NoDataAllowedErr = 6 If data is specified for a node which does not support data. NoModificationAllowedErr = 7 If an attempt is made to modify an object where modifications are not allowed. NotFoundErr = 8 If an attempt is made to reference a node in a context where it does not exist. NotSupportedErr = 9 If the implementation does not support the requested type of object or operation. InuseAttributeErr = 10 If an attempt is made to add an attribute that is already in use elsewhere. InvalidStateErr = 11 If an attempt is made to use an object that is not, or is no longer, usable. SyntaxErr = 12 If an invalid or illegal string is specified. InvalidModificationErr = 13 If an attempt is made to modify the type of the underlying object. NamespaceErr = 14 If an attempt is made to create or change an object in a way which is incorrect with regard to namespaces. InvalidAccessErr = 15 If a parameter or an operation is not supported by the underlying object."
  },
  "api/SharpVectors.Dom.DomImplementation.-ctor.html": {
    "href": "api/SharpVectors.Dom.DomImplementation.-ctor.html",
    "title": "Constructor DomImplementation | SharpVectors Documentation",
    "keywords": "Constructor DomImplementation Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll DomImplementation() public DomImplementation()"
  },
  "api/SharpVectors.Dom.DomImplementation.html": {
    "href": "api/SharpVectors.Dom.DomImplementation.html",
    "title": "Class DomImplementation | SharpVectors Documentation",
    "keywords": "Class DomImplementation Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for DomImplementation. public class DomImplementation : XmlImplementation Inheritance object XmlImplementation DomImplementation Inherited Members XmlImplementation.HasFeature(string, string) XmlImplementation.CreateDocument() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DomImplementation()"
  },
  "api/SharpVectors.Dom.Element.-ctor.html": {
    "href": "api/SharpVectors.Dom.Element.-ctor.html",
    "title": "Constructor Element | SharpVectors Documentation",
    "keywords": "Constructor Element Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Element(string, string, string, Document) public Element(string prefix, string localName, string namespaceUri, Document document) Parameters prefix string localName string namespaceUri string document Document"
  },
  "api/SharpVectors.Dom.Element.html": {
    "href": "api/SharpVectors.Dom.Element.html",
    "title": "Class Element | SharpVectors Documentation",
    "keywords": "Class Element Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for Element. public class Element : XmlElement, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Derived CssXmlElement Inherited Members XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.OwnerDocument XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Element(string, string, string, Document)"
  },
  "api/SharpVectors.Dom.EntityReference.-ctor.html": {
    "href": "api/SharpVectors.Dom.EntityReference.-ctor.html",
    "title": "Constructor EntityReference | SharpVectors Documentation",
    "keywords": "Constructor EntityReference Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll EntityReference(string, Document) protected EntityReference(string name, Document document) Parameters name string document Document"
  },
  "api/SharpVectors.Dom.EntityReference.html": {
    "href": "api/SharpVectors.Dom.EntityReference.html",
    "title": "Class EntityReference | SharpVectors Documentation",
    "keywords": "Class EntityReference Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for EntityReference. public class EntityReference : XmlEntityReference, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlEntityReference EntityReference Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlEntityReference.CloneNode(bool) XmlEntityReference.WriteTo(XmlWriter) XmlEntityReference.WriteContentTo(XmlWriter) XmlEntityReference.Name XmlEntityReference.LocalName XmlEntityReference.Value XmlEntityReference.NodeType XmlEntityReference.IsReadOnly XmlEntityReference.BaseURI XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.InnerText XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EntityReference(string, Document)"
  },
  "api/SharpVectors.Dom.Events.AttrChangeType.html": {
    "href": "api/SharpVectors.Dom.Events.AttrChangeType.html",
    "title": "Enum AttrChangeType | SharpVectors Documentation",
    "keywords": "Enum AttrChangeType Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll An integer indicating in which way the attribute was changed. public enum AttrChangeType : ushort Fields None = 1 No attribute was modified, added nor removed. Modification = 1 The attribute was modified in place. Addition = 2 The attribute was just added. Removal = 3 The attribute was just removed."
  },
  "api/SharpVectors.Dom.Events.Event.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.Event.-ctor.html",
    "title": "Constructor Event | SharpVectors Documentation",
    "keywords": "Constructor Event Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Event() public Event() Event(string, bool, bool) public Event(string eventType, bool bubbles, bool cancelable) Parameters eventType string bubbles bool cancelable bool Event(string, string, bool, bool) public Event(string namespaceUri, string eventType, bool bubbles, bool cancelable) Parameters namespaceUri string eventType string bubbles bool cancelable bool"
  },
  "api/SharpVectors.Dom.Events.Event.Bubbles.html": {
    "href": "api/SharpVectors.Dom.Events.Event.Bubbles.html",
    "title": "Property Bubbles | SharpVectors Documentation",
    "keywords": "Property Bubbles Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Bubbles (DOM Level 2) Used to indicate whether or not an event is a bubbling event. public bool Bubbles { get; } Property Value bool Remarks If the event can bubble the value is true, otherwise the value is false."
  },
  "api/SharpVectors.Dom.Events.Event.Cancelable.html": {
    "href": "api/SharpVectors.Dom.Events.Event.Cancelable.html",
    "title": "Property Cancelable | SharpVectors Documentation",
    "keywords": "Property Cancelable Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Cancelable (DOM Level 2) Used to indicate whether or not an event can have its default action prevented. public bool Cancelable { get; } Property Value bool Remarks If the default action can be prevented the value is true, otherwise the value is false. See Also Default actions and cancelable events"
  },
  "api/SharpVectors.Dom.Events.Event.CurrentTarget.html": {
    "href": "api/SharpVectors.Dom.Events.Event.CurrentTarget.html",
    "title": "Property CurrentTarget | SharpVectors Documentation",
    "keywords": "Property CurrentTarget Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll CurrentTarget (DOM Level 2) Used to indicate the IEventTarget whose EventListeners are currently being processed. public IEventTarget CurrentTarget { get; } Property Value IEventTarget Remarks This is particularly useful during the capture and bubbling phases. This attribute could contain the target node or a target ancestor when used with the DOM event flow."
  },
  "api/SharpVectors.Dom.Events.Event.EventPhase.html": {
    "href": "api/SharpVectors.Dom.Events.Event.EventPhase.html",
    "title": "Property EventPhase | SharpVectors Documentation",
    "keywords": "Property EventPhase Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll EventPhase (DOM Level 2) Used to indicate which phase of event flow is currently being accomplished. public EventPhase EventPhase { get; } Property Value EventPhase"
  },
  "api/SharpVectors.Dom.Events.Event.InitEvent.html": {
    "href": "api/SharpVectors.Dom.Events.Event.InitEvent.html",
    "title": "Method InitEvent | SharpVectors Documentation",
    "keywords": "Method InitEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitEvent(string, bool, bool) (DOM Level 2) The InitEvent method is used to initialize the value of an IEvent created through the IDocumentEvent.CreateEvent method. public void InitEvent(string eventType, bool bubbles, bool cancelable) Parameters eventType string bubbles bool cancelable bool Remarks This method may only be called before the IEvent has been dispatched via the IEventTarget.DispatchEvent method. If the method is called several times before invoking IEventTarget.DispatchEvent, only the final invocation takes precedence. If called from a subclass of Event interface only the values specified in this method are modified, all other attributes are left unchanged. This method sets the IEvent.Type attribute to eventTypeArg, and IEvent.NamespaceUri to null. To initialize an event with a local name and namespace URI, use the InitEventNs method."
  },
  "api/SharpVectors.Dom.Events.Event.InitEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.Event.InitEventNs.html",
    "title": "Method InitEventNs | SharpVectors Documentation",
    "keywords": "Method InitEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitEventNs(string, string, bool, bool) (DOM Level 3 Experimental) The InitEventNs method is used to initialize the value of an IEvent created through the IDocumentEvent interface. public void InitEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable) Parameters namespaceUri string eventType string bubbles bool cancelable bool Remarks This method may only be called before the IEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times the event has been dispatched. If called multiple times the final invocation takes precedence. If a call to InitEventNs is made after one of the IEvent derived interfaces' init methods has been called, only the values specified in the InitEventNs method are modified, all other attributes are left unchanged. This method sets the IEvent.Type attribute to eventTypeArg, and IEvent.NamespaceUri to namespaceUriArg."
  },
  "api/SharpVectors.Dom.Events.Event.IsCustom.html": {
    "href": "api/SharpVectors.Dom.Events.Event.IsCustom.html",
    "title": "Property IsCustom | SharpVectors Documentation",
    "keywords": "Property IsCustom Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll IsCustom (DOM Level 3 Experimental) This method will always return false, unless the event implements the ICustomEvent interface. public bool IsCustom { get; } Property Value bool true if the event implements the ICustomEvent interface. false otherwise."
  },
  "api/SharpVectors.Dom.Events.Event.IsDefaultPrevented.html": {
    "href": "api/SharpVectors.Dom.Events.Event.IsDefaultPrevented.html",
    "title": "Property IsDefaultPrevented | SharpVectors Documentation",
    "keywords": "Property IsDefaultPrevented Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll IsDefaultPrevented (DOM Level 3 Experimental) This method will return true if the method PreventDefault has been called for this event, false otherwise. public bool IsDefaultPrevented { get; } Property Value bool true if PreventDefault has been called for this event."
  },
  "api/SharpVectors.Dom.Events.Event.NamespaceUri.html": {
    "href": "api/SharpVectors.Dom.Events.Event.NamespaceUri.html",
    "title": "Property NamespaceUri | SharpVectors Documentation",
    "keywords": "Property NamespaceUri Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll NamespaceUri (DOM Level 3 Experimental) The namespace URI associated with this event at creation time, or null if it is unspecified. public string NamespaceUri { get; } Property Value string Remarks For events initialized with a DOM Level 2 Events method, such as InitEvent, this is always null."
  },
  "api/SharpVectors.Dom.Events.Event.PreventDefault.html": {
    "href": "api/SharpVectors.Dom.Events.Event.PreventDefault.html",
    "title": "Method PreventDefault | SharpVectors Documentation",
    "keywords": "Method PreventDefault Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll PreventDefault() (DOM Level 2) Signify that the event is to be canceled. public void PreventDefault() Remarks If an event is cancelable, the PreventDefault method is used to signify that the event is to be canceled, meaning any default action normally taken by the implementation as a result of the event will not occur and thus independently of event groups. Calling this method for a non-cancelable event has no effect. Note: This method does not stop the event propagation; use StopPropagation or StopImmediatePropagation for that effect. See Also Default actions and cancelable events"
  },
  "api/SharpVectors.Dom.Events.Event.StopImmediatePropagation.html": {
    "href": "api/SharpVectors.Dom.Events.Event.StopImmediatePropagation.html",
    "title": "Method StopImmediatePropagation | SharpVectors Documentation",
    "keywords": "Method StopImmediatePropagation Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll StopImmediatePropagation() (DOM Level 3 Experimental) Immediately prevent event listeners of the same group to be triggered. public void StopImmediatePropagation() Remarks This method is used to prevent event listeners of the same group to be triggered and, unlike StopPropagation its effect is immediate. Once it has been called, further calls to that method have no additional effect. Note: This method does not prevent the default action from being invoked; use PreventDefault for that effect. See Also Event propagation and event groups"
  },
  "api/SharpVectors.Dom.Events.Event.StopPropagation.html": {
    "href": "api/SharpVectors.Dom.Events.Event.StopPropagation.html",
    "title": "Method StopPropagation | SharpVectors Documentation",
    "keywords": "Method StopPropagation Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll StopPropagation() (DOM Level 2) Prevent event listeners of the same group to be triggered. public void StopPropagation() Remarks This method is used to prevent event listeners of the same group to be triggered but its effect is differed until all event listeners attached on the currentTarget have been triggered. Once it has been called, further calls to that method have no additional effect. Note: This method does not prevent the default action from being invoked; use preventDefault for that effect. See Also Event propagation and event groups"
  },
  "api/SharpVectors.Dom.Events.Event.Target.html": {
    "href": "api/SharpVectors.Dom.Events.Event.Target.html",
    "title": "Property Target | SharpVectors Documentation",
    "keywords": "Property Target Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Target (DOM Level 2) Used to indicate the event target. public IEventTarget Target { get; } Property Value IEventTarget Remarks This attribute contains the target node when used with the DOM event flow."
  },
  "api/SharpVectors.Dom.Events.Event.TimeStamp.html": {
    "href": "api/SharpVectors.Dom.Events.Event.TimeStamp.html",
    "title": "Property TimeStamp | SharpVectors Documentation",
    "keywords": "Property TimeStamp Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll TimeStamp (DOM Level 2) Used to specify the time at which the event was created. public DateTime TimeStamp { get; } Property Value DateTime Remarks Due to the fact that some systems may not provide this information the value of TimeStamp may be not available for all events. When not available, a value of 0 will be returned. Examples of epoch time are the time of the system start or 0:0:0 UTC 1st January 1970."
  },
  "api/SharpVectors.Dom.Events.Event.Type.html": {
    "href": "api/SharpVectors.Dom.Events.Event.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Type (DOM Level 2) The name must be an NCName as defined in [XML Namespaces] and is case-sensitive. public string Type { get; } Property Value string Remarks The character \":\" (colon) should not be used in this attribute. If the attribute IEvent.NamespaceUri is different from null, this attribute represents a local name."
  },
  "api/SharpVectors.Dom.Events.Event._eventType.html": {
    "href": "api/SharpVectors.Dom.Events.Event._eventType.html",
    "title": "Field _eventType | SharpVectors Documentation",
    "keywords": "Field _eventType Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll protected string _eventType Returns string"
  },
  "api/SharpVectors.Dom.Events.Event.html": {
    "href": "api/SharpVectors.Dom.Events.Event.html",
    "title": "Class Event | SharpVectors Documentation",
    "keywords": "Class Event Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for Event. public class Event : IEvent Inheritance object Event Implements IEvent Derived MutationEvent UiEvent Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Event() Event(string, bool, bool) Event(string, string, bool, bool) Fields _eventType Properties Bubbles (DOM Level 2) Used to indicate whether or not an event is a bubbling event. Cancelable (DOM Level 2) Used to indicate whether or not an event can have its default action prevented. CurrentTarget (DOM Level 2) Used to indicate the IEventTarget whose EventListeners are currently being processed. EventPhase (DOM Level 2) Used to indicate which phase of event flow is currently being accomplished. IsCustom (DOM Level 3 Experimental) This method will always return false, unless the event implements the ICustomEvent interface. IsDefaultPrevented (DOM Level 3 Experimental) This method will return true if the method PreventDefault has been called for this event, false otherwise. NamespaceUri (DOM Level 3 Experimental) The namespace URI associated with this event at creation time, or null if it is unspecified. Target (DOM Level 2) Used to indicate the event target. TimeStamp (DOM Level 2) Used to specify the time at which the event was created. Type (DOM Level 2) The name must be an NCName as defined in [XML Namespaces] and is case-sensitive. Methods InitEvent(string, bool, bool) (DOM Level 2) The InitEvent method is used to initialize the value of an IEvent created through the IDocumentEvent.CreateEvent method. InitEventNs(string, string, bool, bool) (DOM Level 3 Experimental) The InitEventNs method is used to initialize the value of an IEvent created through the IDocumentEvent interface. PreventDefault() (DOM Level 2) Signify that the event is to be canceled. StopImmediatePropagation() (DOM Level 3 Experimental) Immediately prevent event listeners of the same group to be triggered. StopPropagation() (DOM Level 2) Prevent event listeners of the same group to be triggered."
  },
  "api/SharpVectors.Dom.Events.EventClasses.XmlEvents2001.html": {
    "href": "api/SharpVectors.Dom.Events.EventClasses.XmlEvents2001.html",
    "title": "Field XmlEvents2001 | SharpVectors Documentation",
    "keywords": "Field XmlEvents2001 Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly string XmlEvents2001 Returns string"
  },
  "api/SharpVectors.Dom.Events.EventClasses.html": {
    "href": "api/SharpVectors.Dom.Events.EventClasses.html",
    "title": "Class EventClasses | SharpVectors Documentation",
    "keywords": "Class EventClasses Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for EventClasses. public static class EventClasses Inheritance object EventClasses Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields XmlEvents2001"
  },
  "api/SharpVectors.Dom.Events.EventException.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.EventException.-ctor.html",
    "title": "Constructor EventException | SharpVectors Documentation",
    "keywords": "Constructor EventException Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll EventException(EventExceptionCode) Initializes a new instance of the EventException class with event exception code. public EventException(EventExceptionCode code) Parameters code EventExceptionCode An instance of EventExceptionCode defining the event exception code. EventException(SerializationInfo, StreamingContext) Initializes a new instance of the EventException class with serialized data. protected EventException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The SerializationInfo that holds the serialized object data about the exception being thrown. context StreamingContext The StreamingContext that contains contextual information about the source or destination."
  },
  "api/SharpVectors.Dom.Events.EventException.Code.html": {
    "href": "api/SharpVectors.Dom.Events.EventException.Code.html",
    "title": "Property Code | SharpVectors Documentation",
    "keywords": "Property Code Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Code An integer indicating the type of error generated. public EventExceptionCode Code { get; } Property Value EventExceptionCode An enumeration of the type EventExceptionCode specifying the type of error generated."
  },
  "api/SharpVectors.Dom.Events.EventException.html": {
    "href": "api/SharpVectors.Dom.Events.EventException.html",
    "title": "Class EventException | SharpVectors Documentation",
    "keywords": "Class EventException Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Event operations may throw an EventException as specified in their method descriptions. [Serializable] public class EventException : Exception, ISerializable, _Exception Inheritance object Exception EventException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors EventException(EventExceptionCode) Initializes a new instance of the EventException class with event exception code. EventException(SerializationInfo, StreamingContext) Initializes a new instance of the EventException class with serialized data. Properties Code An integer indicating the type of error generated."
  },
  "api/SharpVectors.Dom.Events.EventExceptionCode.html": {
    "href": "api/SharpVectors.Dom.Events.EventExceptionCode.html",
    "title": "Enum EventExceptionCode | SharpVectors Documentation",
    "keywords": "Enum EventExceptionCode Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll An integer indicating the type of error generated. public enum EventExceptionCode Fields UnspecifiedEventTypeErr = 0 If the IEvent.Type was not specified by initializing the event before the method was called. Specification of the IEvent.Type as null or an empty string will also trigger this exception. DispatchRequestErr = 1 If the IEvent object is already dispatched in the tree."
  },
  "api/SharpVectors.Dom.Events.EventListener.html": {
    "href": "api/SharpVectors.Dom.Events.EventListener.html",
    "title": "Delegate EventListener | SharpVectors Documentation",
    "keywords": "Delegate EventListener Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The EventListener delegate is the primary way for handling events. public delegate void EventListener(IEvent e) Parameters e IEvent Remarks Users register their event listener on an IEventTarget. The users should also remove their EventListener from its IEventTarget after they have completed using the listener. Copying a INode does not copy the event listeners attached to it. Event listeners must be attached to the newly created INode afterwards if so desired."
  },
  "api/SharpVectors.Dom.Events.EventListenerMap.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMap.-ctor.html",
    "title": "Constructor EventListenerMap | SharpVectors Documentation",
    "keywords": "Constructor EventListenerMap Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll EventListenerMap() public EventListenerMap()"
  },
  "api/SharpVectors.Dom.Events.EventListenerMap.AddEventListener.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMap.AddEventListener.html",
    "title": "Method AddEventListener | SharpVectors Documentation",
    "keywords": "Method AddEventListener Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll AddEventListener(string, string, object, EventListener) public void AddEventListener(string namespaceUri, string eventType, object eventGroup, EventListener listener) Parameters namespaceUri string eventType string eventGroup object listener EventListener"
  },
  "api/SharpVectors.Dom.Events.EventListenerMap.FireEvent.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMap.FireEvent.html",
    "title": "Method FireEvent | SharpVectors Documentation",
    "keywords": "Method FireEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll FireEvent(IEvent) public void FireEvent(IEvent eventArg) Parameters eventArg IEvent"
  },
  "api/SharpVectors.Dom.Events.EventListenerMap.HasEventListenerNs.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMap.HasEventListenerNs.html",
    "title": "Method HasEventListenerNs | SharpVectors Documentation",
    "keywords": "Method HasEventListenerNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll HasEventListenerNs(string, string) public bool HasEventListenerNs(string namespaceUri, string eventType) Parameters namespaceUri string eventType string Returns bool"
  },
  "api/SharpVectors.Dom.Events.EventListenerMap.Lock.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMap.Lock.html",
    "title": "Method Lock | SharpVectors Documentation",
    "keywords": "Method Lock Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Lock() public void Lock()"
  },
  "api/SharpVectors.Dom.Events.EventListenerMap.RemoveEventListener.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMap.RemoveEventListener.html",
    "title": "Method RemoveEventListener | SharpVectors Documentation",
    "keywords": "Method RemoveEventListener Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll RemoveEventListener(string, string, EventListener) public void RemoveEventListener(string namespaceUri, string eventType, EventListener listener) Parameters namespaceUri string eventType string listener EventListener"
  },
  "api/SharpVectors.Dom.Events.EventListenerMap.Unlock.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMap.Unlock.html",
    "title": "Method Unlock | SharpVectors Documentation",
    "keywords": "Method Unlock Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Unlock() public void Unlock()"
  },
  "api/SharpVectors.Dom.Events.EventListenerMap.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMap.html",
    "title": "Class EventListenerMap | SharpVectors Documentation",
    "keywords": "Class EventListenerMap Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for EventListenerMap. public class EventListenerMap Inheritance object EventListenerMap Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EventListenerMap() Methods AddEventListener(string, string, object, EventListener) FireEvent(IEvent) HasEventListenerNs(string, string) Lock() RemoveEventListener(string, string, EventListener) Unlock()"
  },
  "api/SharpVectors.Dom.Events.EventListenerMapEntry.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMapEntry.-ctor.html",
    "title": "Constructor EventListenerMapEntry | SharpVectors Documentation",
    "keywords": "Constructor EventListenerMapEntry Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll EventListenerMapEntry() public EventListenerMapEntry() EventListenerMapEntry(string, string, object, EventListener, bool) public EventListenerMapEntry(string namespaceUri, string type, object group, EventListener listener, bool locked) Parameters namespaceUri string type string group object listener EventListener locked bool"
  },
  "api/SharpVectors.Dom.Events.EventListenerMapEntry.Group.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMapEntry.Group.html",
    "title": "Property Group | SharpVectors Documentation",
    "keywords": "Property Group Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Group public object Group { get; set; } Property Value object"
  },
  "api/SharpVectors.Dom.Events.EventListenerMapEntry.Listener.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMapEntry.Listener.html",
    "title": "Property Listener | SharpVectors Documentation",
    "keywords": "Property Listener Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Listener public EventListener Listener { get; set; } Property Value EventListener"
  },
  "api/SharpVectors.Dom.Events.EventListenerMapEntry.Locked.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMapEntry.Locked.html",
    "title": "Property Locked | SharpVectors Documentation",
    "keywords": "Property Locked Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Locked public bool Locked { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.EventListenerMapEntry.NamespaceUri.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMapEntry.NamespaceUri.html",
    "title": "Property NamespaceUri | SharpVectors Documentation",
    "keywords": "Property NamespaceUri Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll NamespaceUri public string NamespaceUri { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.EventListenerMapEntry.Type.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMapEntry.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Type public string Type { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.EventListenerMapEntry.html": {
    "href": "api/SharpVectors.Dom.Events.EventListenerMapEntry.html",
    "title": "Class EventListenerMapEntry | SharpVectors Documentation",
    "keywords": "Class EventListenerMapEntry Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for EventListenerMapEntry. public class EventListenerMapEntry Inheritance object EventListenerMapEntry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EventListenerMapEntry() EventListenerMapEntry(string, string, object, EventListener, bool) Properties Group Listener Locked NamespaceUri Type"
  },
  "api/SharpVectors.Dom.Events.EventPhase.html": {
    "href": "api/SharpVectors.Dom.Events.EventPhase.html",
    "title": "Enum EventPhase | SharpVectors Documentation",
    "keywords": "Enum EventPhase Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll An integer indicating which phase of the event flow is being processed as defined in DOM event flow. public enum EventPhase Fields CapturingPhase = 1 (DOM Level 2) The current event phase is the capture phase. AtTarget = 2 (DOM Level 2) The current event is in the target phase, i.e. it is being evaluated at the event target. BubblingPhase = 3 (DOM Level 2) The current event phase is the bubbling phase."
  },
  "api/SharpVectors.Dom.Events.EventTarget.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.-ctor.html",
    "title": "Constructor EventTarget | SharpVectors Documentation",
    "keywords": "Constructor EventTarget Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll EventTarget(IEventTargetSupport) public EventTarget(IEventTargetSupport eventTarget) Parameters eventTarget IEventTargetSupport"
  },
  "api/SharpVectors.Dom.Events.EventTarget.AddEventListener.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.AddEventListener.html",
    "title": "Method AddEventListener | SharpVectors Documentation",
    "keywords": "Method AddEventListener Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll AddEventListener(string, EventListener, bool) This method allows the registration of an event listener in the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. https://www.w3.org/TR/SVG/interact.html#SVGEvents public void AddEventListener(string type, EventListener listener, bool useCapture) Parameters type string Specifies the IEvent.Type associated with the event for which the user is registering. listener EventListener The listener parameter takes an object implemented by the user which implements the EventListener interface and contains the method to be called when the event occurs. useCapture bool If true, useCapture indicates that the user wishes to add the event listener for the capture phase only, i.e. this event listener will not be triggered during the target and bubbling phases. If false, the event listener will only be triggered during the target and bubbling phases."
  },
  "api/SharpVectors.Dom.Events.EventTarget.AddEventListenerNs.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.AddEventListenerNs.html",
    "title": "Method AddEventListenerNs | SharpVectors Documentation",
    "keywords": "Method AddEventListenerNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll AddEventListenerNs(string, string, EventListener, bool, object) This method allows the registration of an event listener in a specified group or the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. public void AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object evtGroup) Parameters namespaceUri string Specifies the IEvent.NamespaceUri associated with the event for which the user is registering. type string Specifies the IEvent.Type associated with the event for which the user is registering. listener EventListener The listener parameter takes an object implemented by the user which implements the EventListener interface and contains the method to be called when the event occurs. useCapture bool If true, useCapture indicates that the user wishes to add the event listener for the capture phase only, i.e. this event listener will not be triggered during the target and bubbling phases. If false, the event listener will only be triggered during the target and bubbling phases. evtGroup object The object that represents the event group to associate with the EventListener. Use null to attach the event listener to the default group. See Also Event propagation and event groups"
  },
  "api/SharpVectors.Dom.Events.EventTarget.DispatchEvent.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.DispatchEvent.html",
    "title": "Method DispatchEvent | SharpVectors Documentation",
    "keywords": "Method DispatchEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll DispatchEvent(IEvent) This method allows the dispatch of events into the implementation's event model. public bool DispatchEvent(IEvent eventInfo) Parameters eventInfo IEvent Returns bool Indicates whether any of the listeners which handled the event called IEvent.PreventDefault. If IEvent.PreventDefault was called the returned value is false, else it is true. Remarks The event target of the event is the IEventTarget object on which DispatchEvent is called. Exceptions EventException UNSPECIFIED_EVENT_TYPE_ERR: Raised if the Event.type was not specified by initializing the event before dispatchEvent was called. Specification of the Event.type as null or an empty string will also trigger this exception. DISPATCH_REQUEST_ERR: Raised if the Event object is already being dispatched in the tree. NOT_SUPPORTED_ERR: Raised if the Event object has not been created using DocumentEvent.createEvent or does not support the interface CustomEvent."
  },
  "api/SharpVectors.Dom.Events.EventTarget.FireEvent.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.FireEvent.html",
    "title": "Method FireEvent | SharpVectors Documentation",
    "keywords": "Method FireEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll FireEvent(IEvent) public void FireEvent(IEvent eventInfo) Parameters eventInfo IEvent"
  },
  "api/SharpVectors.Dom.Events.EventTarget.HasEventListenerNs.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.HasEventListenerNs.html",
    "title": "Method HasEventListenerNs | SharpVectors Documentation",
    "keywords": "Method HasEventListenerNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll HasEventListenerNs(string, string) This method allows the DOM application to know if this IEventTarget contains an event listener registered for the specified event type. public bool HasEventListenerNs(string namespaceUri, string eventType) Parameters namespaceUri string Specifies the IEvent.NamespaceUri associated with the event. eventType string Returns bool true if an event listener is registered on this IEventTarget for the specified event type, false otherwise. Remarks This is useful for determining at which nodes within a hierarchy altered handling of specific event types has been introduced, but should not be used to determine whether the specified event type triggers an event listener. See Also WillTriggerNs(string, string)"
  },
  "api/SharpVectors.Dom.Events.EventTarget.OnMouseMove.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.OnMouseMove.html",
    "title": "Event OnMouseMove | SharpVectors Documentation",
    "keywords": "Event OnMouseMove Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public event EventListener OnMouseMove Returns EventListener"
  },
  "api/SharpVectors.Dom.Events.EventTarget.RemoveEventListener.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.RemoveEventListener.html",
    "title": "Method RemoveEventListener | SharpVectors Documentation",
    "keywords": "Method RemoveEventListener Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll RemoveEventListener(string, EventListener, bool) This method allows the removal of event listeners from the default group. public void RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters type string Specifies the IEvent.Type for which the user registered the event listener. listener EventListener The EventListener to be removed. useCapture bool Specifies whether the EventListener being removed was registered for the capture phase or not. If a listener was registered twice, once for the capture phase and once for the target and bubbling phases, each must be removed separately. Removal of an event listener registered for the capture phase does not affect the same event listener registered for the target and bubbling phases, and vice versa. Remarks Calling RemoveEventListener with arguments which do not identify any currently registered EventListener on the IEventTarget has no effect."
  },
  "api/SharpVectors.Dom.Events.EventTarget.RemoveEventListenerNs.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.RemoveEventListenerNs.html",
    "title": "Method RemoveEventListenerNs | SharpVectors Documentation",
    "keywords": "Method RemoveEventListenerNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll RemoveEventListenerNs(string, string, EventListener, bool) This method allows the removal of event listeners from a specified group or the default group. public void RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters namespaceUri string Specifies the IEvent.NamespaceUri associated with the event for which the user registered the event listener. type string Specifies the IEvent.Type associated with the event for which the user registered the event listener. listener EventListener The EventListener parameter indicates the EventListener to be removed. useCapture bool Specifies whether the EventListener being removed was registered for the capture phase or not. If a listener was registered twice, once for the capture phase and once for the target and bubbling phases, each must be removed separately. Removal of an event listener registered for the capture phase does not affect the same event listener registered for the target and bubbling phases, and vice versa. Remarks Calling RemoveEventListenerNs with arguments which do not identify any currently registered EventListener on the EventTarget has no effect."
  },
  "api/SharpVectors.Dom.Events.EventTarget.WillTriggerNs.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.WillTriggerNs.html",
    "title": "Method WillTriggerNs | SharpVectors Documentation",
    "keywords": "Method WillTriggerNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll WillTriggerNs(string, string) This method allows the DOM application to know if an event listener, attached to this IEventTarget or one of its ancestors, will be triggered by the specified event type during the dispatch of the event to this event target or one of its descendants. public bool WillTriggerNs(string namespaceUri, string type) Parameters namespaceUri string Specifies the IEvent.NamespaceUri associated with the event. type string Specifies the IEvent.Type associated with the event. Returns bool true if an event listener will be triggered on the IEventTarget with the specified event type, false otherwise."
  },
  "api/SharpVectors.Dom.Events.EventTarget.html": {
    "href": "api/SharpVectors.Dom.Events.EventTarget.html",
    "title": "Class EventTarget | SharpVectors Documentation",
    "keywords": "Class EventTarget Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for EventTarget. public class EventTarget : IEventTargetSupport, IEventTarget Inheritance object EventTarget Implements IEventTargetSupport IEventTarget Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors EventTarget(IEventTargetSupport) Methods AddEventListener(string, EventListener, bool) This method allows the registration of an event listener in the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. https://www.w3.org/TR/SVG/interact.html#SVGEvents AddEventListenerNs(string, string, EventListener, bool, object) This method allows the registration of an event listener in a specified group or the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. DispatchEvent(IEvent) This method allows the dispatch of events into the implementation's event model. FireEvent(IEvent) HasEventListenerNs(string, string) This method allows the DOM application to know if this IEventTarget contains an event listener registered for the specified event type. RemoveEventListener(string, EventListener, bool) This method allows the removal of event listeners from the default group. RemoveEventListenerNs(string, string, EventListener, bool) This method allows the removal of event listeners from a specified group or the default group. WillTriggerNs(string, string) This method allows the DOM application to know if an event listener, attached to this IEventTarget or one of its ancestors, will be triggered by the specified event type during the dispatch of the event to this event target or one of its descendants. Events OnMouseMove"
  },
  "api/SharpVectors.Dom.Events.EventType.Abort.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Abort.html",
    "title": "Field Abort | SharpVectors Documentation",
    "keywords": "Field Abort Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Abort Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Change.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Change.html",
    "title": "Field Change | SharpVectors Documentation",
    "keywords": "Field Change Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Change Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Click.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Click.html",
    "title": "Field Click | SharpVectors Documentation",
    "keywords": "Field Click Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Click Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomActivate.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomActivate.html",
    "title": "Field DomActivate | SharpVectors Documentation",
    "keywords": "Field DomActivate Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomActivate Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomAttrModified.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomAttrModified.html",
    "title": "Field DomAttrModified | SharpVectors Documentation",
    "keywords": "Field DomAttrModified Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomAttrModified Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomAttributeNameChanged.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomAttributeNameChanged.html",
    "title": "Field DomAttributeNameChanged | SharpVectors Documentation",
    "keywords": "Field DomAttributeNameChanged Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomAttributeNameChanged Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomCharacterDataModified.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomCharacterDataModified.html",
    "title": "Field DomCharacterDataModified | SharpVectors Documentation",
    "keywords": "Field DomCharacterDataModified Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomCharacterDataModified Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomElementNameChanged.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomElementNameChanged.html",
    "title": "Field DomElementNameChanged | SharpVectors Documentation",
    "keywords": "Field DomElementNameChanged Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomElementNameChanged Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomFocusIn.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomFocusIn.html",
    "title": "Field DomFocusIn | SharpVectors Documentation",
    "keywords": "Field DomFocusIn Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomFocusIn Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomFocusOut.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomFocusOut.html",
    "title": "Field DomFocusOut | SharpVectors Documentation",
    "keywords": "Field DomFocusOut Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomFocusOut Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomNodeInserted.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomNodeInserted.html",
    "title": "Field DomNodeInserted | SharpVectors Documentation",
    "keywords": "Field DomNodeInserted Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomNodeInserted Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomNodeInsertedIntoDocument.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomNodeInsertedIntoDocument.html",
    "title": "Field DomNodeInsertedIntoDocument | SharpVectors Documentation",
    "keywords": "Field DomNodeInsertedIntoDocument Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomNodeInsertedIntoDocument Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomNodeRemoved.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomNodeRemoved.html",
    "title": "Field DomNodeRemoved | SharpVectors Documentation",
    "keywords": "Field DomNodeRemoved Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomNodeRemoved Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomNodeRemovedFromDocument.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomNodeRemovedFromDocument.html",
    "title": "Field DomNodeRemovedFromDocument | SharpVectors Documentation",
    "keywords": "Field DomNodeRemovedFromDocument Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomNodeRemovedFromDocument Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.DomSubtreeModified.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.DomSubtreeModified.html",
    "title": "Field DomSubtreeModified | SharpVectors Documentation",
    "keywords": "Field DomSubtreeModified Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType DomSubtreeModified Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Error.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Error.html",
    "title": "Field Error | SharpVectors Documentation",
    "keywords": "Field Error Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Error Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.KeyDown.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.KeyDown.html",
    "title": "Field KeyDown | SharpVectors Documentation",
    "keywords": "Field KeyDown Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType KeyDown Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.KeyUp.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.KeyUp.html",
    "title": "Field KeyUp | SharpVectors Documentation",
    "keywords": "Field KeyUp Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType KeyUp Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Load.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Load.html",
    "title": "Field Load | SharpVectors Documentation",
    "keywords": "Field Load Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Load Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.MouseDown.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.MouseDown.html",
    "title": "Field MouseDown | SharpVectors Documentation",
    "keywords": "Field MouseDown Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType MouseDown Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.MouseMove.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.MouseMove.html",
    "title": "Field MouseMove | SharpVectors Documentation",
    "keywords": "Field MouseMove Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType MouseMove Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.MouseOut.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.MouseOut.html",
    "title": "Field MouseOut | SharpVectors Documentation",
    "keywords": "Field MouseOut Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType MouseOut Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.MouseOver.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.MouseOver.html",
    "title": "Field MouseOver | SharpVectors Documentation",
    "keywords": "Field MouseOver Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType MouseOver Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.MouseUp.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.MouseUp.html",
    "title": "Field MouseUp | SharpVectors Documentation",
    "keywords": "Field MouseUp Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType MouseUp Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Name.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Name public string Name { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.EventType.NamespaceUri.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.NamespaceUri.html",
    "title": "Property NamespaceUri | SharpVectors Documentation",
    "keywords": "Property NamespaceUri Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll NamespaceUri public string NamespaceUri { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.EventType.Reset.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Reset.html",
    "title": "Field Reset | SharpVectors Documentation",
    "keywords": "Field Reset Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Reset Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Resize.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Resize.html",
    "title": "Field Resize | SharpVectors Documentation",
    "keywords": "Field Resize Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Resize Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Scroll.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Scroll.html",
    "title": "Field Scroll | SharpVectors Documentation",
    "keywords": "Field Scroll Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Scroll Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Select.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Select.html",
    "title": "Field Select | SharpVectors Documentation",
    "keywords": "Field Select Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Select Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Submit.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Submit.html",
    "title": "Field Submit | SharpVectors Documentation",
    "keywords": "Field Submit Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Submit Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.TextInput.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.TextInput.html",
    "title": "Field TextInput | SharpVectors Documentation",
    "keywords": "Field TextInput Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType TextInput Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.Unload.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.Unload.html",
    "title": "Field Unload | SharpVectors Documentation",
    "keywords": "Field Unload Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll public static readonly EventType Unload Returns EventType"
  },
  "api/SharpVectors.Dom.Events.EventType.html": {
    "href": "api/SharpVectors.Dom.Events.EventType.html",
    "title": "Class EventType | SharpVectors Documentation",
    "keywords": "Class EventType Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for MutationEventType. public sealed class EventType Inheritance object EventType Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields Abort Change Click DomActivate DomAttrModified DomAttributeNameChanged DomCharacterDataModified DomElementNameChanged DomFocusIn DomFocusOut DomNodeInserted DomNodeInsertedIntoDocument DomNodeRemoved DomNodeRemovedFromDocument DomSubtreeModified Error KeyDown KeyUp Load MouseDown MouseMove MouseOut MouseOver MouseUp Reset Resize Scroll Select Submit TextInput Unload Properties Name NamespaceUri"
  },
  "api/SharpVectors.Dom.Events.ICustomEvent.IsImmediatePropagationStopped.html": {
    "href": "api/SharpVectors.Dom.Events.ICustomEvent.IsImmediatePropagationStopped.html",
    "title": "Property IsImmediatePropagationStopped | SharpVectors Documentation",
    "keywords": "Property IsImmediatePropagationStopped Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll IsImmediatePropagationStopped The IsImmediatePropagationStopped method is used by the DOM Events implementation to know if the method IEvent.StopImmediatePropagation has been called for this event. It returns true if the method has been called, false otherwise. bool IsImmediatePropagationStopped { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.ICustomEvent.IsPropagationStopped.html": {
    "href": "api/SharpVectors.Dom.Events.ICustomEvent.IsPropagationStopped.html",
    "title": "Property IsPropagationStopped | SharpVectors Documentation",
    "keywords": "Property IsPropagationStopped Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll IsPropagationStopped This method will return true if the method IEvent.StopPropagation has been called for this event, false in any other cases. bool IsPropagationStopped { get; } Property Value bool true if the event propagation has been stopped in the current group."
  },
  "api/SharpVectors.Dom.Events.ICustomEvent.SetDispatchState.html": {
    "href": "api/SharpVectors.Dom.Events.ICustomEvent.SetDispatchState.html",
    "title": "Method SetDispatchState | SharpVectors Documentation",
    "keywords": "Method SetDispatchState Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll SetDispatchState(IEventTarget, ushort) The SetDispatchState method is used by the DOM Events implementation to set the values of IEvent.CurrentTarget and IEvent.EventPhase. void SetDispatchState(IEventTarget target, ushort phase) Parameters target IEventTarget Specifies the new value for the IEvent.CurrentTarget attribute. phase ushort Specifies the new value for the IEvent.EventPhase attribute. Remarks It also reset the states of IsPropagationStopped and IsImmediatePropagationStopped."
  },
  "api/SharpVectors.Dom.Events.ICustomEvent.html": {
    "href": "api/SharpVectors.Dom.Events.ICustomEvent.html",
    "title": "Interface ICustomEvent | SharpVectors Documentation",
    "keywords": "Interface ICustomEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The ICustomEvent interface gives access to the attributes IEvent.CurrentTarget and IEvent.EventPhase. public interface ICustomEvent : IEvent Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(string, bool, bool) IEvent.InitEventNs(string, string, bool, bool) IEvent.StopImmediatePropagation() Remarks It is intended to be used by the DOM Events implementation to access the underlying current target and event phase while dispatching a custom IEvent in the tree; it is also intended to be implemented, and not used, by DOM applications. The methods contained in this interface are not intended to be used by a DOM application, especially during the dispatch on the Event object. Changing the current target or the current phase may conduct into unpredictable results of the event flow. The DOM Events implementation should ensure that both methods return the appropriate current target and phase before invoking each event listener on the current target to protect DOM applications from malicious event listeners. Note: If this interface is supported by the event object, IEvent.IsCustom must return true. Properties IsImmediatePropagationStopped The IsImmediatePropagationStopped method is used by the DOM Events implementation to know if the method IEvent.StopImmediatePropagation has been called for this event. It returns true if the method has been called, false otherwise. IsPropagationStopped This method will return true if the method IEvent.StopPropagation has been called for this event, false in any other cases. Methods SetDispatchState(IEventTarget, ushort) The SetDispatchState method is used by the DOM Events implementation to set the values of IEvent.CurrentTarget and IEvent.EventPhase."
  },
  "api/SharpVectors.Dom.Events.IDocumentEvent.CanDispatch.html": {
    "href": "api/SharpVectors.Dom.Events.IDocumentEvent.CanDispatch.html",
    "title": "Method CanDispatch | SharpVectors Documentation",
    "keywords": "Method CanDispatch Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll CanDispatch(string, string) Test if the implementation can generate events of a specified type. bool CanDispatch(string namespaceUri, string type) Parameters namespaceUri string Specifies the IEvent.NamespaceUri of the event. type string Specifies the IEvent.Type of the event. Returns bool true if the implementation can generate and dispatch this event type, false otherwise."
  },
  "api/SharpVectors.Dom.Events.IDocumentEvent.CreateEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IDocumentEvent.CreateEvent.html",
    "title": "Method CreateEvent | SharpVectors Documentation",
    "keywords": "Method CreateEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll CreateEvent(string) The CreateEvent method is used in creating IEvents when it is either inconvenient or unnecessary for the user to create an IEvent themselves. IEvent CreateEvent(string eventType) Parameters eventType string The eventType parameter specifies the name of the DOM Events interface to be supported by the created event object, e.g. \"Event\", \"MouseEvent\", \"MutationEvent\" ... If the IEvent is to be dispatched via the IEventTarget.DispatchEvent method the appropriate event init method must be called after creation in order to initialize the IEvent's values. As an example, a user wishing to synthesize some kind of IUiEvent would call IDocumentEvent.CreateEvent with the parameter \"UIEvent\". The IUiEvent.InitUiEventNs method could then be called on the newly created IUiEvent object to set the specific type of user interface event to be dispatched, {\"http://www.w3.org/2001/xml-events\", \"DOMActivate\"} for example, and set its context information, e.g. IUiEvent.Detail in this example. Returns IEvent The newly created event object. Remarks In cases where the implementation provided IEvent is insufficient, users may supply their own IEvent implementations for use with the IEventTarget.DispatchEvent method. However, the DOM implementation needs access to the attributes IEvent.CurrentTarget and IEvent.EventPhase to propagate appropriately the event in the DOM tree. Therefore users' IEvent implementations might need to support the ICustomEvent interface for that effect. Note: For backward compatibility reason, \"UIEvents\", \"MouseEvents\", \"MutationEvents\", and \"HTMLEvents\" feature names are valid values for the parameter eventType and represent respectively the interfaces \"UIEvent\", \"MouseEvent\", \"MutationEvent\", and \"Event\". Exceptions DomException NOT_SUPPORTED_ERR: Raised if the implementation does not support the Event interface requested."
  },
  "api/SharpVectors.Dom.Events.IDocumentEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IDocumentEvent.html",
    "title": "Interface IDocumentEvent | SharpVectors Documentation",
    "keywords": "Interface IDocumentEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The IDocumentEvent interface provides a mechanism by which the user can create an IEvent object of a type supported by the implementation. It is expected that the IDocumentEvent interface will be implemented on the same object which implements the IDocument interface in an implementation which supports the IEvent model. public interface IDocumentEvent Methods CanDispatch(string, string) Test if the implementation can generate events of a specified type. CreateEvent(string) The CreateEvent method is used in creating IEvents when it is either inconvenient or unnecessary for the user to create an IEvent themselves."
  },
  "api/SharpVectors.Dom.Events.IEvent.Bubbles.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.Bubbles.html",
    "title": "Property Bubbles | SharpVectors Documentation",
    "keywords": "Property Bubbles Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Bubbles (DOM Level 2) Used to indicate whether or not an event is a bubbling event. bool Bubbles { get; } Property Value bool Remarks If the event can bubble the value is true, otherwise the value is false."
  },
  "api/SharpVectors.Dom.Events.IEvent.Cancelable.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.Cancelable.html",
    "title": "Property Cancelable | SharpVectors Documentation",
    "keywords": "Property Cancelable Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Cancelable (DOM Level 2) Used to indicate whether or not an event can have its default action prevented. bool Cancelable { get; } Property Value bool Remarks If the default action can be prevented the value is true, otherwise the value is false. See Also Default actions and cancelable events"
  },
  "api/SharpVectors.Dom.Events.IEvent.CurrentTarget.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.CurrentTarget.html",
    "title": "Property CurrentTarget | SharpVectors Documentation",
    "keywords": "Property CurrentTarget Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll CurrentTarget (DOM Level 2) Used to indicate the IEventTarget whose EventListeners are currently being processed. IEventTarget CurrentTarget { get; } Property Value IEventTarget Remarks This is particularly useful during the capture and bubbling phases. This attribute could contain the target node or a target ancestor when used with the DOM event flow."
  },
  "api/SharpVectors.Dom.Events.IEvent.EventPhase.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.EventPhase.html",
    "title": "Property EventPhase | SharpVectors Documentation",
    "keywords": "Property EventPhase Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll EventPhase (DOM Level 2) Used to indicate which phase of event flow is currently being accomplished. EventPhase EventPhase { get; } Property Value EventPhase"
  },
  "api/SharpVectors.Dom.Events.IEvent.InitEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.InitEvent.html",
    "title": "Method InitEvent | SharpVectors Documentation",
    "keywords": "Method InitEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitEvent(string, bool, bool) (DOM Level 2) The InitEvent method is used to initialize the value of an IEvent created through the IDocumentEvent.CreateEvent method. void InitEvent(string eventTypeArg, bool canBubbleArg, bool cancelableArg) Parameters eventTypeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. cancelableArg bool Specifies whether or not the event's default action can be prevented. This parameter overrides the intrinsic cancelable behavior of the event. Remarks This method may only be called before the IEvent has been dispatched via the IEventTarget.DispatchEvent method. If the method is called several times before invoking IEventTarget.DispatchEvent, only the final invocation takes precedence. If called from a subclass of Event interface only the values specified in this method are modified, all other attributes are left unchanged. This method sets the IEvent.Type attribute to eventTypeArg, and IEvent.NamespaceUri to null. To initialize an event with a local name and namespace URI, use the InitEventNs method."
  },
  "api/SharpVectors.Dom.Events.IEvent.InitEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.InitEventNs.html",
    "title": "Method InitEventNs | SharpVectors Documentation",
    "keywords": "Method InitEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitEventNs(string, string, bool, bool) (DOM Level 3 Experimental) The InitEventNs method is used to initialize the value of an IEvent created through the IDocumentEvent interface. void InitEventNs(string namespaceUriArg, string eventTypeArg, bool canBubbleArg, bool cancelableArg) Parameters namespaceUriArg string Specifies the namespace URI associated with this event, or null if no namespace. eventTypeArg string Specifies the local name of the event type (see also the description of IEvent.Type). canBubbleArg bool Specifies whether or not the event can bubble. cancelableArg bool Specifies whether or not the event's default action can be prevented. Remarks This method may only be called before the IEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times the event has been dispatched. If called multiple times the final invocation takes precedence. If a call to InitEventNs is made after one of the IEvent derived interfaces' init methods has been called, only the values specified in the InitEventNs method are modified, all other attributes are left unchanged. This method sets the IEvent.Type attribute to eventTypeArg, and IEvent.NamespaceUri to namespaceUriArg."
  },
  "api/SharpVectors.Dom.Events.IEvent.IsCustom.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.IsCustom.html",
    "title": "Property IsCustom | SharpVectors Documentation",
    "keywords": "Property IsCustom Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll IsCustom (DOM Level 3 Experimental) This method will always return false, unless the event implements the ICustomEvent interface. bool IsCustom { get; } Property Value bool true if the event implements the ICustomEvent interface. false otherwise."
  },
  "api/SharpVectors.Dom.Events.IEvent.IsDefaultPrevented.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.IsDefaultPrevented.html",
    "title": "Property IsDefaultPrevented | SharpVectors Documentation",
    "keywords": "Property IsDefaultPrevented Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll IsDefaultPrevented (DOM Level 3 Experimental) This method will return true if the method PreventDefault has been called for this event, false otherwise. bool IsDefaultPrevented { get; } Property Value bool true if PreventDefault has been called for this event."
  },
  "api/SharpVectors.Dom.Events.IEvent.NamespaceUri.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.NamespaceUri.html",
    "title": "Property NamespaceUri | SharpVectors Documentation",
    "keywords": "Property NamespaceUri Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll NamespaceUri (DOM Level 3 Experimental) The namespace URI associated with this event at creation time, or null if it is unspecified. string NamespaceUri { get; } Property Value string Remarks For events initialized with a DOM Level 2 Events method, such as InitEvent, this is always null."
  },
  "api/SharpVectors.Dom.Events.IEvent.PreventDefault.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.PreventDefault.html",
    "title": "Method PreventDefault | SharpVectors Documentation",
    "keywords": "Method PreventDefault Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll PreventDefault() (DOM Level 2) Signify that the event is to be canceled. void PreventDefault() Remarks If an event is cancelable, the PreventDefault method is used to signify that the event is to be canceled, meaning any default action normally taken by the implementation as a result of the event will not occur and thus independently of event groups. Calling this method for a non-cancelable event has no effect. Note: This method does not stop the event propagation; use StopPropagation or StopImmediatePropagation for that effect. See Also Default actions and cancelable events"
  },
  "api/SharpVectors.Dom.Events.IEvent.StopImmediatePropagation.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.StopImmediatePropagation.html",
    "title": "Method StopImmediatePropagation | SharpVectors Documentation",
    "keywords": "Method StopImmediatePropagation Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll StopImmediatePropagation() (DOM Level 3 Experimental) Immediately prevent event listeners of the same group to be triggered. void StopImmediatePropagation() Remarks This method is used to prevent event listeners of the same group to be triggered and, unlike StopPropagation its effect is immediate. Once it has been called, further calls to that method have no additional effect. Note: This method does not prevent the default action from being invoked; use PreventDefault for that effect. See Also Event propagation and event groups"
  },
  "api/SharpVectors.Dom.Events.IEvent.StopPropagation.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.StopPropagation.html",
    "title": "Method StopPropagation | SharpVectors Documentation",
    "keywords": "Method StopPropagation Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll StopPropagation() (DOM Level 2) Prevent event listeners of the same group to be triggered. void StopPropagation() Remarks This method is used to prevent event listeners of the same group to be triggered but its effect is differed until all event listeners attached on the currentTarget have been triggered. Once it has been called, further calls to that method have no additional effect. Note: This method does not prevent the default action from being invoked; use preventDefault for that effect. See Also Event propagation and event groups"
  },
  "api/SharpVectors.Dom.Events.IEvent.Target.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.Target.html",
    "title": "Property Target | SharpVectors Documentation",
    "keywords": "Property Target Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Target (DOM Level 2) Used to indicate the event target. IEventTarget Target { get; } Property Value IEventTarget Remarks This attribute contains the target node when used with the DOM event flow."
  },
  "api/SharpVectors.Dom.Events.IEvent.TimeStamp.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.TimeStamp.html",
    "title": "Property TimeStamp | SharpVectors Documentation",
    "keywords": "Property TimeStamp Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll TimeStamp (DOM Level 2) Used to specify the time at which the event was created. DateTime TimeStamp { get; } Property Value DateTime Remarks Due to the fact that some systems may not provide this information the value of TimeStamp may be not available for all events. When not available, a value of 0 will be returned. Examples of epoch time are the time of the system start or 0:0:0 UTC 1st January 1970."
  },
  "api/SharpVectors.Dom.Events.IEvent.Type.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Type (DOM Level 2) The name must be an NCName as defined in [XML Namespaces] and is case-sensitive. string Type { get; } Property Value string Remarks The character \":\" (colon) should not be used in this attribute. If the attribute IEvent.NamespaceUri is different from null, this attribute represents a local name."
  },
  "api/SharpVectors.Dom.Events.IEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IEvent.html",
    "title": "Interface IEvent | SharpVectors Documentation",
    "keywords": "Interface IEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The Event interface is used to provide contextual information about an event to the listener processing the event. public interface IEvent Remarks An object which implements the IEvent interface is passed as the parameter to an EventListener. More specific context information is passed to event listeners by deriving additional interfaces from IEvent which contain information directly relating to the type of event they represent. These derived interfaces are also implemented by the object passed to the event listener. Properties Bubbles (DOM Level 2) Used to indicate whether or not an event is a bubbling event. Cancelable (DOM Level 2) Used to indicate whether or not an event can have its default action prevented. CurrentTarget (DOM Level 2) Used to indicate the IEventTarget whose EventListeners are currently being processed. EventPhase (DOM Level 2) Used to indicate which phase of event flow is currently being accomplished. IsCustom (DOM Level 3 Experimental) This method will always return false, unless the event implements the ICustomEvent interface. IsDefaultPrevented (DOM Level 3 Experimental) This method will return true if the method PreventDefault has been called for this event, false otherwise. NamespaceUri (DOM Level 3 Experimental) The namespace URI associated with this event at creation time, or null if it is unspecified. Target (DOM Level 2) Used to indicate the event target. TimeStamp (DOM Level 2) Used to specify the time at which the event was created. Type (DOM Level 2) The name must be an NCName as defined in [XML Namespaces] and is case-sensitive. Methods InitEvent(string, bool, bool) (DOM Level 2) The InitEvent method is used to initialize the value of an IEvent created through the IDocumentEvent.CreateEvent method. InitEventNs(string, string, bool, bool) (DOM Level 3 Experimental) The InitEventNs method is used to initialize the value of an IEvent created through the IDocumentEvent interface. PreventDefault() (DOM Level 2) Signify that the event is to be canceled. StopImmediatePropagation() (DOM Level 3 Experimental) Immediately prevent event listeners of the same group to be triggered. StopPropagation() (DOM Level 2) Prevent event listeners of the same group to be triggered."
  },
  "api/SharpVectors.Dom.Events.IEventListener.HandleEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IEventListener.HandleEvent.html",
    "title": "Method HandleEvent | SharpVectors Documentation",
    "keywords": "Method HandleEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll HandleEvent(IEvent) A function that is called whenever an event of the specified type occurs. void HandleEvent(IEvent evt) Parameters evt IEvent"
  },
  "api/SharpVectors.Dom.Events.IEventListener.html": {
    "href": "api/SharpVectors.Dom.Events.IEventListener.html",
    "title": "Interface IEventListener | SharpVectors Documentation",
    "keywords": "Interface IEventListener Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll This interface represents an object that can handle an event dispatched by an IEventTarget object. public interface IEventListener Methods HandleEvent(IEvent) A function that is called whenever an event of the specified type occurs."
  },
  "api/SharpVectors.Dom.Events.IEventTarget.AddEventListener.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTarget.AddEventListener.html",
    "title": "Method AddEventListener | SharpVectors Documentation",
    "keywords": "Method AddEventListener Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll AddEventListener(string, EventListener, bool) This method allows the registration of an event listener in the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. https://www.w3.org/TR/SVG/interact.html#SVGEvents void AddEventListener(string type, EventListener listener, bool useCapture) Parameters type string Specifies the IEvent.Type associated with the event for which the user is registering. listener EventListener The listener parameter takes an object implemented by the user which implements the EventListener interface and contains the method to be called when the event occurs. useCapture bool If true, useCapture indicates that the user wishes to add the event listener for the capture phase only, i.e. this event listener will not be triggered during the target and bubbling phases. If false, the event listener will only be triggered during the target and bubbling phases."
  },
  "api/SharpVectors.Dom.Events.IEventTarget.AddEventListenerNs.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTarget.AddEventListenerNs.html",
    "title": "Method AddEventListenerNs | SharpVectors Documentation",
    "keywords": "Method AddEventListenerNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll AddEventListenerNs(string, string, EventListener, bool, object) This method allows the registration of an event listener in a specified group or the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. void AddEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture, object evtGroup) Parameters namespaceUri string Specifies the IEvent.NamespaceUri associated with the event for which the user is registering. type string Specifies the IEvent.Type associated with the event for which the user is registering. listener EventListener The listener parameter takes an object implemented by the user which implements the EventListener interface and contains the method to be called when the event occurs. useCapture bool If true, useCapture indicates that the user wishes to add the event listener for the capture phase only, i.e. this event listener will not be triggered during the target and bubbling phases. If false, the event listener will only be triggered during the target and bubbling phases. evtGroup object The object that represents the event group to associate with the EventListener. Use null to attach the event listener to the default group. See Also Event propagation and event groups"
  },
  "api/SharpVectors.Dom.Events.IEventTarget.DispatchEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTarget.DispatchEvent.html",
    "title": "Method DispatchEvent | SharpVectors Documentation",
    "keywords": "Method DispatchEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll DispatchEvent(IEvent) This method allows the dispatch of events into the implementation's event model. bool DispatchEvent(IEvent evt) Parameters evt IEvent The event to be dispatched. Returns bool Indicates whether any of the listeners which handled the event called IEvent.PreventDefault. If IEvent.PreventDefault was called the returned value is false, else it is true. Remarks The event target of the event is the IEventTarget object on which DispatchEvent is called. Exceptions EventException UNSPECIFIED_EVENT_TYPE_ERR: Raised if the Event.type was not specified by initializing the event before dispatchEvent was called. Specification of the Event.type as null or an empty string will also trigger this exception. DISPATCH_REQUEST_ERR: Raised if the Event object is already being dispatched in the tree. NOT_SUPPORTED_ERR: Raised if the Event object has not been created using DocumentEvent.createEvent or does not support the interface CustomEvent."
  },
  "api/SharpVectors.Dom.Events.IEventTarget.HasEventListenerNs.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTarget.HasEventListenerNs.html",
    "title": "Method HasEventListenerNs | SharpVectors Documentation",
    "keywords": "Method HasEventListenerNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll HasEventListenerNs(string, string) This method allows the DOM application to know if this IEventTarget contains an event listener registered for the specified event type. bool HasEventListenerNs(string namespaceUri, string type) Parameters namespaceUri string Specifies the IEvent.NamespaceUri associated with the event. type string Specifies the IEvent.Type associated with the event. Returns bool true if an event listener is registered on this IEventTarget for the specified event type, false otherwise. Remarks This is useful for determining at which nodes within a hierarchy altered handling of specific event types has been introduced, but should not be used to determine whether the specified event type triggers an event listener. See Also WillTriggerNs(string, string)"
  },
  "api/SharpVectors.Dom.Events.IEventTarget.RemoveEventListener.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTarget.RemoveEventListener.html",
    "title": "Method RemoveEventListener | SharpVectors Documentation",
    "keywords": "Method RemoveEventListener Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll RemoveEventListener(string, EventListener, bool) This method allows the removal of event listeners from the default group. void RemoveEventListener(string type, EventListener listener, bool useCapture) Parameters type string Specifies the IEvent.Type for which the user registered the event listener. listener EventListener The EventListener to be removed. useCapture bool Specifies whether the EventListener being removed was registered for the capture phase or not. If a listener was registered twice, once for the capture phase and once for the target and bubbling phases, each must be removed separately. Removal of an event listener registered for the capture phase does not affect the same event listener registered for the target and bubbling phases, and vice versa. Remarks Calling RemoveEventListener with arguments which do not identify any currently registered EventListener on the IEventTarget has no effect."
  },
  "api/SharpVectors.Dom.Events.IEventTarget.RemoveEventListenerNs.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTarget.RemoveEventListenerNs.html",
    "title": "Method RemoveEventListenerNs | SharpVectors Documentation",
    "keywords": "Method RemoveEventListenerNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll RemoveEventListenerNs(string, string, EventListener, bool) This method allows the removal of event listeners from a specified group or the default group. void RemoveEventListenerNs(string namespaceUri, string type, EventListener listener, bool useCapture) Parameters namespaceUri string Specifies the IEvent.NamespaceUri associated with the event for which the user registered the event listener. type string Specifies the IEvent.Type associated with the event for which the user registered the event listener. listener EventListener The EventListener parameter indicates the EventListener to be removed. useCapture bool Specifies whether the EventListener being removed was registered for the capture phase or not. If a listener was registered twice, once for the capture phase and once for the target and bubbling phases, each must be removed separately. Removal of an event listener registered for the capture phase does not affect the same event listener registered for the target and bubbling phases, and vice versa. Remarks Calling RemoveEventListenerNs with arguments which do not identify any currently registered EventListener on the EventTarget has no effect."
  },
  "api/SharpVectors.Dom.Events.IEventTarget.WillTriggerNs.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTarget.WillTriggerNs.html",
    "title": "Method WillTriggerNs | SharpVectors Documentation",
    "keywords": "Method WillTriggerNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll WillTriggerNs(string, string) This method allows the DOM application to know if an event listener, attached to this IEventTarget or one of its ancestors, will be triggered by the specified event type during the dispatch of the event to this event target or one of its descendants. bool WillTriggerNs(string namespaceUri, string type) Parameters namespaceUri string Specifies the IEvent.NamespaceUri associated with the event. type string Specifies the IEvent.Type associated with the event. Returns bool true if an event listener will be triggered on the IEventTarget with the specified event type, false otherwise."
  },
  "api/SharpVectors.Dom.Events.IEventTarget.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTarget.html",
    "title": "Interface IEventTarget | SharpVectors Documentation",
    "keywords": "Interface IEventTarget Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The IEventTarget interface is implemented by all the objects which could be event targets in an implementation which supports the Event flows. public interface IEventTarget Remarks The interface allows registration, removal or query of event listeners, and dispatch of events to an event target. When used with DOM event flow, this interface is implemented by all target nodes and target ancestors, i.e. all DOM INodes of the tree support this interface when the implementation conforms to DOM Level 3 Events and, therefore, this interface can be obtained by using binding-specific casting methods on an instance of the Node interface. Invoking multiple times AddEventListener or AddEventListenerNs on the same IEventTarget with the same parameters (namespaceUri, type, listener, and useCapture) is considered to be a no-op and thus independently of the event group. They do not cause the EventListener to be called more than once and do not cause a change in the triggering order. In order to guarantee that an event listener will be added to the event target for the specified event group, one needs to invoke RemoveEventListener or RemoveEventListenerNs first. Methods AddEventListener(string, EventListener, bool) This method allows the registration of an event listener in the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. https://www.w3.org/TR/SVG/interact.html#SVGEvents AddEventListenerNs(string, string, EventListener, bool, object) This method allows the registration of an event listener in a specified group or the default group and, depending on the useCapture parameter, on the capture phase of the DOM event flow or its target and bubbling phases. DispatchEvent(IEvent) This method allows the dispatch of events into the implementation's event model. HasEventListenerNs(string, string) This method allows the DOM application to know if this IEventTarget contains an event listener registered for the specified event type. RemoveEventListener(string, EventListener, bool) This method allows the removal of event listeners from the default group. RemoveEventListenerNs(string, string, EventListener, bool) This method allows the removal of event listeners from a specified group or the default group. WillTriggerNs(string, string) This method allows the DOM application to know if an event listener, attached to this IEventTarget or one of its ancestors, will be triggered by the specified event type during the dispatch of the event to this event target or one of its descendants."
  },
  "api/SharpVectors.Dom.Events.IEventTargetSupport.FireEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTargetSupport.FireEvent.html",
    "title": "Method FireEvent | SharpVectors Documentation",
    "keywords": "Method FireEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll FireEvent(IEvent) void FireEvent(IEvent evt) Parameters evt IEvent"
  },
  "api/SharpVectors.Dom.Events.IEventTargetSupport.html": {
    "href": "api/SharpVectors.Dom.Events.IEventTargetSupport.html",
    "title": "Interface IEventTargetSupport | SharpVectors Documentation",
    "keywords": "Interface IEventTargetSupport Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for IEventTargetSupports. public interface IEventTargetSupport : IEventTarget Inherited Members IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) Methods FireEvent(IEvent)"
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.AltGraphKey.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.AltGraphKey.html",
    "title": "Property AltGraphKey | SharpVectors Documentation",
    "keywords": "Property AltGraphKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. bool AltGraphKey { get; } Property Value bool Remarks Note: Some operating systems simulate the alt-graph key modifier with the combinaison of alt and ctrl key modifiers. Implementations are encouraged to use this modifier instead."
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.AltKey.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.AltKey.html",
    "title": "Property AltKey | SharpVectors Documentation",
    "keywords": "Property AltKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll AltKey true if the alt (alternative) key modifier is activated. bool AltKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.CtrlKey.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.CtrlKey.html",
    "title": "Property CtrlKey | SharpVectors Documentation",
    "keywords": "Property CtrlKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll CtrlKey true if the control (Ctrl) key modifier is activated. bool CtrlKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.InitKeyboardEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.InitKeyboardEvent.html",
    "title": "Method InitKeyboardEvent | SharpVectors Documentation",
    "keywords": "Method InitKeyboardEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitKeyboardEvent(string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) The InitKeyboardEvent method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method. void InitKeyboardEvent(string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, string keyIdentifierArg, KeyLocationCode keyLocationArg, bool ctrlKeyArg, bool shiftKeyArg, bool altKeyArg, bool metaKeyArg, bool altGraphKeyArg) Parameters typeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. cancelableArg bool Specifies whether or not the event's default action can be prevent. This parameter overrides the intrinsic cancelable behavior of the event. viewArg IAbstractView Specifies the IKeyboardEvent's IAbstractView. keyIdentifierArg string Specifies the IKeyboardEvent's KeyIdentifier attribute. keyLocationArg KeyLocationCode Specifies the IKeyboardEvent's KeyLocation attribute. ctrlKeyArg bool Specifies the IKeyboardEvent's CtrlKey attribute. shiftKeyArg bool Specifies the IKeyboardEvent's ShiftKey attribute. altKeyArg bool Specifies the IKeyboardEvent's AltKey attribute. metaKeyArg bool Specifies the IKeyboardEvent's MetaKey attribute. altGraphKeyArg bool Specifies the IKeyboardEvent's AltGraphKey attribute. Remarks This method may only be called before the IKeyboardEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched."
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.InitKeyboardEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.InitKeyboardEventNs.html",
    "title": "Method InitKeyboardEventNs | SharpVectors Documentation",
    "keywords": "Method InitKeyboardEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitKeyboardEventNs(string, string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) The InitKeyboardEventNs method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method. void InitKeyboardEventNs(string namespaceUri, string type, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, string keyIdentifierArg, KeyLocationCode keyLocationArg, bool ctrlKeyArg, bool shiftKeyArg, bool altKeyArg, bool metaKeyArg, bool altGraphKeyArg) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the applications wish to have no namespace. type string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. cancelableArg bool Specifies whether or not the event's default action can be prevent. viewArg IAbstractView Specifies the IKeyboardEvent's IAbstractView. keyIdentifierArg string Specifies the IKeyboardEvent's KeyIdentifier attribute. keyLocationArg KeyLocationCode Specifies the IKeyboardEvent's KeyLocation attribute. ctrlKeyArg bool Specifies the IKeyboardEvent's CtrlKey attribute. shiftKeyArg bool Specifies the IKeyboardEvent's ShiftKey attribute. altKeyArg bool Specifies the IKeyboardEvent's AltKey attribute. metaKeyArg bool Specifies the IKeyboardEvent's MetaKey attribute. altGraphKeyArg bool Specifies the IKeyboardEvent's AltGraphKey attribute. Remarks This method may only be called before the IKeyboardEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched."
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.KeyIdentifier.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.KeyIdentifier.html",
    "title": "Property KeyIdentifier | SharpVectors Documentation",
    "keywords": "Property KeyIdentifier Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll KeyIdentifier Holds the identifier of the key. string KeyIdentifier { get; } Property Value string Remarks For a list of possible values, refer to Key identifiers for keyboard events. Note: Implementations that are unable to identify a key must use the key identifier \"Unidentified\"."
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.KeyLocation.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.KeyLocation.html",
    "title": "Property KeyLocation | SharpVectors Documentation",
    "keywords": "Property KeyLocation Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll KeyLocation Contains an indication of the location of they key on the device. KeyLocationCode KeyLocation { get; } Property Value KeyLocationCode"
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.MetaKey.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.MetaKey.html",
    "title": "Property MetaKey | SharpVectors Documentation",
    "keywords": "Property MetaKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll MetaKey true if the meta (Meta) key modifier is activated. bool MetaKey { get; } Property Value bool Remarks Note: The Command key modifier on Macintosh system must be represented using this key modifier."
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.ShiftKey.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.ShiftKey.html",
    "title": "Property ShiftKey | SharpVectors Documentation",
    "keywords": "Property ShiftKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll ShiftKey true if the shift (Shift) key modifier is activated. bool ShiftKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.IKeyboardEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IKeyboardEvent.html",
    "title": "Interface IKeyboardEvent | SharpVectors Documentation",
    "keywords": "Interface IKeyboardEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The IKeyboardEvent interface provides specific contextual information associated with keyboard devices. public interface IKeyboardEvent : IUiEvent, IEvent Inherited Members IUiEvent.View IUiEvent.Detail IUiEvent.InitUiEvent(string, bool, bool, IAbstractView, long) IUiEvent.InitUiEventNs(string, string, bool, bool, IAbstractView, long) IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(string, bool, bool) IEvent.InitEventNs(string, string, bool, bool) IEvent.StopImmediatePropagation() Remarks Each keyboard event reference a key using an identifier. Each modifier attribute (CtrlKey, ShiftKey, AltKey, MetaKey, and AltGraphKey) is activated when the key modifier is being pressed down or maintained pressed, i.e. the modifier attribute is not in use when the key modifier is being released. Note: To create an instance of the IKeyboardEvent interface, use the feature string \"KeyboardEvent\" as the value of the input parameter used with the IDocumentEvent.CreateEvent method. Properties AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. AltKey true if the alt (alternative) key modifier is activated. CtrlKey true if the control (Ctrl) key modifier is activated. KeyIdentifier Holds the identifier of the key. KeyLocation Contains an indication of the location of they key on the device. MetaKey true if the meta (Meta) key modifier is activated. ShiftKey true if the shift (Shift) key modifier is activated. Methods InitKeyboardEvent(string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) The InitKeyboardEvent method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method. InitKeyboardEventNs(string, string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) The InitKeyboardEventNs method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method."
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.AltGraphKey.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.AltGraphKey.html",
    "title": "Property AltGraphKey | SharpVectors Documentation",
    "keywords": "Property AltGraphKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. bool AltGraphKey { get; } Property Value bool Remarks Note: Some operating systems simulate the alt-graph key modifier with the combinaison of alt and ctrl key modifiers. Implementations are encouraged to use this modifier instead."
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.AltKey.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.AltKey.html",
    "title": "Property AltKey | SharpVectors Documentation",
    "keywords": "Property AltKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll AltKey true if the alt (alternative) key modifier is activated. bool AltKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.Button.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.Button.html",
    "title": "Property Button | SharpVectors Documentation",
    "keywords": "Property Button Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Button During mouse events caused by the depression or release of a mouse button, button is used to indicate which mouse button changed state. ushort Button { get; } Property Value ushort Remarks 0 indicates the normal (in general on the left or the one button on Macintosh mice, used to activate a button or select text) button of the mouse. 2 indicates the contextual property (in general on the right, used to display a context menu) button of the mouse if present. 1 indicates the extra (in general in the middle and often combined with the mouse wheel) button. Some mice may provide or simulate more buttons and values higher than 2 could be used to represent such buttons."
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.ClientX.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.ClientX.html",
    "title": "Property ClientX | SharpVectors Documentation",
    "keywords": "Property ClientX Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll ClientX The horizontal coordinate at which the event occurred relative to the DOM implementation's client area. long ClientX { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.ClientY.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.ClientY.html",
    "title": "Property ClientY | SharpVectors Documentation",
    "keywords": "Property ClientY Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll ClientY The vertical coordinate at which the event occurred relative to the DOM implementation's client area. long ClientY { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.CtrlKey.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.CtrlKey.html",
    "title": "Property CtrlKey | SharpVectors Documentation",
    "keywords": "Property CtrlKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll CtrlKey true if the control (Ctrl) key modifier is activated. bool CtrlKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.InitMouseEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.InitMouseEvent.html",
    "title": "Method InitMouseEvent | SharpVectors Documentation",
    "keywords": "Method InitMouseEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitMouseEvent(string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget) The InitMouseEvent method is used to initialize the value of a MouseEvent created using the IDocumentEvent.CreateEvent method. void InitMouseEvent(string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, long detailArg, long screenXArg, long screenYArg, long clientXArg, long clientYArg, bool ctrlKeyArg, bool altKeyArg, bool shiftKeyArg, bool metaKeyArg, ushort buttonArg, IEventTarget relatedTargetArg) Parameters typeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. cancelableArg bool Specifies whether or not the event's default action can be prevented. viewArg IAbstractView Specifies the IEvent's view. detailArg long Specifies the IEvent's mouse click count. screenXArg long Specifies the IEvent's screen x coordinate. screenYArg long Specifies the IEvent's screen y coordinate. clientXArg long Specifies the IEvent's client x coordinate. clientYArg long Specifies the IEvent's client y coordinate. ctrlKeyArg bool Specifies whether or not control key was depressed during the IEvent. altKeyArg bool Specifies whether or not alt key was depressed during the IEvent. shiftKeyArg bool Specifies whether or not shift key was depressed during the IEvent. metaKeyArg bool Specifies whether or not meta key was depressed during the IEvent. buttonArg ushort Specifies the IEvent's mouse button. relatedTargetArg IEventTarget Specifies the IEvent's related IEventTarget. Remarks This method may only be called before the IMouseEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.InitMouseEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.InitMouseEventNs.html",
    "title": "Method InitMouseEventNs | SharpVectors Documentation",
    "keywords": "Method InitMouseEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitMouseEventNs(string, string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget, bool) The InitMouseEventNs method is used to initialize the value of a IMouseEvent created using the IDocumentEvent.CreateEvent interface. void InitMouseEventNs(string namespaceUri, string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, long detailArg, long screenXArg, long screenYArg, long clientXArg, long clientYArg, bool ctrlKeyArg, bool altKeyArg, bool shiftKeyArg, bool metaKeyArg, ushort buttonArg, IEventTarget relatedTargetArg, bool altGraphKeyArg) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the application wish to have no namespace. typeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. cancelableArg bool Specifies whether or not the event's default action can be prevented. viewArg IAbstractView Specifies the IEvent's AbstractView. detailArg long Specifies the IEvent's mouse click count. screenXArg long Specifies the IEvent's screen x coordinate. screenYArg long Specifies the IEvent's screen y coordinate. clientXArg long Specifies the IEvent's client x coordinate. clientYArg long Specifies the IEvent's client y coordinate. ctrlKeyArg bool Specifies whether or not control key was depressed during the IEvent. altKeyArg bool Specifies whether or not alt key was depressed during the IEvent. shiftKeyArg bool Specifies whether or not shift key was depressed during the IEvent. metaKeyArg bool Specifies whether or not meta key was depressed during the Event. buttonArg ushort Specifies the IEvent's mouse button. relatedTargetArg IEventTarget Specifies the IEvent's related IEventTarget. altGraphKeyArg bool Specifies whether or not alt graph key was depressed during the IEvent. Remarks This method may only be called before the IMouseEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.MetaKey.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.MetaKey.html",
    "title": "Property MetaKey | SharpVectors Documentation",
    "keywords": "Property MetaKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll MetaKey true if the meta (Meta) key modifier is activated. bool MetaKey { get; } Property Value bool Remarks Note: The Command key modifier on Macintosh system must be represented using this key modifier."
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.RelatedTarget.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.RelatedTarget.html",
    "title": "Property RelatedTarget | SharpVectors Documentation",
    "keywords": "Property RelatedTarget Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll RelatedTarget Used to identify a secondary EventTarget related to a UI event. IEventTarget RelatedTarget { get; } Property Value IEventTarget Remarks Currently this attribute is used with the mouseover event to indicate the IEventTarget which the pointing device exited and with the mouseout event to indicate the IEventTarget which the pointing device entered."
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.ScreenX.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.ScreenX.html",
    "title": "Property ScreenX | SharpVectors Documentation",
    "keywords": "Property ScreenX Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll ScreenX The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system. long ScreenX { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.ScreenY.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.ScreenY.html",
    "title": "Property ScreenY | SharpVectors Documentation",
    "keywords": "Property ScreenY Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll ScreenY The vertical coordinate at which the event occurred relative to the origin of the screen coordinate system. long ScreenY { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.ShiftKey.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.ShiftKey.html",
    "title": "Property ShiftKey | SharpVectors Documentation",
    "keywords": "Property ShiftKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll ShiftKey true if the shift (Shift) key modifier is activated. bool ShiftKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.IMouseEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IMouseEvent.html",
    "title": "Interface IMouseEvent | SharpVectors Documentation",
    "keywords": "Interface IMouseEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The IMouseEvent interface provides specific contextual information associated with Mouse events. public interface IMouseEvent : IUiEvent, IEvent Inherited Members IUiEvent.View IUiEvent.Detail IUiEvent.InitUiEvent(string, bool, bool, IAbstractView, long) IUiEvent.InitUiEventNs(string, string, bool, bool, IAbstractView, long) IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(string, bool, bool) IEvent.InitEventNs(string, string, bool, bool) IEvent.StopImmediatePropagation() Remarks In the case of nested elements mouse events are always targeted at the most deeply nested element. Ancestors of the targeted element may use bubbling to obtain notification of mouse events which occur within its descendent elements. Note: To create an instance of the MouseEvent interface, use the feature string \"MouseEvent\" as the value of the input parameter used with the DocumentEvent.createEvent method. Properties AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. AltKey true if the alt (alternative) key modifier is activated. Button During mouse events caused by the depression or release of a mouse button, button is used to indicate which mouse button changed state. ClientX The horizontal coordinate at which the event occurred relative to the DOM implementation's client area. ClientY The vertical coordinate at which the event occurred relative to the DOM implementation's client area. CtrlKey true if the control (Ctrl) key modifier is activated. MetaKey true if the meta (Meta) key modifier is activated. RelatedTarget Used to identify a secondary EventTarget related to a UI event. ScreenX The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system. ScreenY The vertical coordinate at which the event occurred relative to the origin of the screen coordinate system. ShiftKey true if the shift (Shift) key modifier is activated. Methods InitMouseEvent(string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget) The InitMouseEvent method is used to initialize the value of a MouseEvent created using the IDocumentEvent.CreateEvent method. InitMouseEventNs(string, string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget, bool) The InitMouseEventNs method is used to initialize the value of a IMouseEvent created using the IDocumentEvent.CreateEvent interface."
  },
  "api/SharpVectors.Dom.Events.IMutationEvent.AttrChange.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationEvent.AttrChange.html",
    "title": "Property AttrChange | SharpVectors Documentation",
    "keywords": "Property AttrChange Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll AttrChange attrChange indicates the type of change which triggered the DOMAttrModified event. The values can be AttrChangeType.Modification, AttrChangeType.Addition, or AttrChangeType.Removal. AttrChangeType AttrChange { get; } Property Value AttrChangeType"
  },
  "api/SharpVectors.Dom.Events.IMutationEvent.AttrName.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationEvent.AttrName.html",
    "title": "Property AttrName | SharpVectors Documentation",
    "keywords": "Property AttrName Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll AttrName AttrName indicates the name of the changed attribute node in a AttrChangeType.Modification event. string AttrName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.IMutationEvent.InitMutationEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationEvent.InitMutationEvent.html",
    "title": "Method InitMutationEvent | SharpVectors Documentation",
    "keywords": "Method InitMutationEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitMutationEvent(string, bool, bool, INode, string, string, string, AttrChangeType) The InitMutationEvent method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched if necessary. If called multiple times, the final invocation takes precedence. void InitMutationEvent(string typeArg, bool canBubbleArg, bool cancelableArg, INode relatedNodeArg, string prevValueArg, string newValueArg, string attrNameArg, AttrChangeType attrChangeArg) Parameters typeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. cancelableArg bool Specifies whether or not the event's default action can be prevented. This parameter overrides the intrinsic cancelable behavior of the event. relatedNodeArg INode Specifies the IEvent's related Node. prevValueArg string Specifies the IEvent's PrevValue attribute. This value may be null. newValueArg string Specifies the IEvent's NewValue attribute. This value may be null. attrNameArg string Specifies the IEvent's AttrName attribute. This value may be null. attrChangeArg AttrChangeType Specifies the IEvent's AttrChange attribute."
  },
  "api/SharpVectors.Dom.Events.IMutationEvent.InitMutationEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationEvent.InitMutationEventNs.html",
    "title": "Method InitMutationEventNs | SharpVectors Documentation",
    "keywords": "Method InitMutationEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitMutationEventNs(string, string, bool, bool, INode, string, string, string, AttrChangeType) The InitMutationEventNs method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method. void InitMutationEventNs(string namespaceUri, string typeArg, bool canBubbleArg, bool cancelableArg, INode relatedNodeArg, string prevValueArg, string newValueArg, string attrNameArg, AttrChangeType attrChangeArg) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the application wish to have no namespace. typeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. cancelableArg bool Specifies whether or not the event's default action can be prevented. relatedNodeArg INode Specifies the IEvent's related Node. prevValueArg string Specifies the IEvent's PrevValue attribute. This value may be null. newValueArg string Specifies the IEvent's NewValue attribute. This value may be null. attrNameArg string Specifies the IEvent's AttrName attribute. This value may be null. attrChangeArg AttrChangeType Specifies the IEvent's AttrChange attribute. Remarks This method may only be called before the IMutationEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.IMutationEvent.NewValue.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationEvent.NewValue.html",
    "title": "Property NewValue | SharpVectors Documentation",
    "keywords": "Property NewValue Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll NewValue NewValue indicates the new value of the attribute node in DOMAttrModified events, and of the ICharacterData node in DOMCharacterDataModified events. string NewValue { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.IMutationEvent.PrevValue.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationEvent.PrevValue.html",
    "title": "Property PrevValue | SharpVectors Documentation",
    "keywords": "Property PrevValue Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll PrevValue PrevValue indicates the previous value of the attribute node in AttrChangeType.Modification events, and of the ICharacterData node in DOMCharacterDataModified events. string PrevValue { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.IMutationEvent.RelatedNode.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationEvent.RelatedNode.html",
    "title": "Property RelatedNode | SharpVectors Documentation",
    "keywords": "Property RelatedNode Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll RelatedNode RelatedNode is used to identify a secondary node related to a mutation event. INode RelatedNode { get; } Property Value INode Remarks For example, if a mutation event is dispatched to a node indicating that its parent has changed, the RelatedNode is the changed parent. If an event is instead dispatched to a subtree indicating a node was changed within it, the RelatedNode is the changed node. In the case of the AttrChangeType.Modification event it indicates the attribute node which was modified, added, or removed."
  },
  "api/SharpVectors.Dom.Events.IMutationEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationEvent.html",
    "title": "Interface IMutationEvent | SharpVectors Documentation",
    "keywords": "Interface IMutationEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The IMutationEvent interface provides specific contextual information associated with Mutation events. public interface IMutationEvent : IEvent Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(string, bool, bool) IEvent.InitEventNs(string, string, bool, bool) IEvent.StopImmediatePropagation() Remarks Note: To create an instance of the IMutationEvent interface, use the feature string \"MutationEvent\" as the value of the input parameter used with the IDocumentEvent.CreateEvent method. Properties AttrChange attrChange indicates the type of change which triggered the DOMAttrModified event. The values can be AttrChangeType.Modification, AttrChangeType.Addition, or AttrChangeType.Removal. AttrName AttrName indicates the name of the changed attribute node in a AttrChangeType.Modification event. NewValue NewValue indicates the new value of the attribute node in DOMAttrModified events, and of the ICharacterData node in DOMCharacterDataModified events. PrevValue PrevValue indicates the previous value of the attribute node in AttrChangeType.Modification events, and of the ICharacterData node in DOMCharacterDataModified events. RelatedNode RelatedNode is used to identify a secondary node related to a mutation event. Methods InitMutationEvent(string, bool, bool, INode, string, string, string, AttrChangeType) The InitMutationEvent method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched if necessary. If called multiple times, the final invocation takes precedence. InitMutationEventNs(string, string, bool, bool, INode, string, string, string, AttrChangeType) The InitMutationEventNs method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method."
  },
  "api/SharpVectors.Dom.Events.IMutationNameEvent.InitMutationNameEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationNameEvent.InitMutationNameEvent.html",
    "title": "Method InitMutationNameEvent | SharpVectors Documentation",
    "keywords": "Method InitMutationNameEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitMutationNameEvent(string, bool, bool, INode, string, string) The InitMutationNameEvent method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. void InitMutationNameEvent(string typeArg, bool canBubbleArg, bool cancelableArg, INode relatedNodeArg, string prevNamespaceUri, string prevNodeName) Parameters typeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. cancelableArg bool Specifies whether or not the event's default action can be prevented. relatedNodeArg INode Specifies the IEvent's related Node. prevNamespaceUri string Specifies the previous NamespaceUri of the related INode. This value may be null. prevNodeName string Specifies the previous NodeName of the related Node."
  },
  "api/SharpVectors.Dom.Events.IMutationNameEvent.InitMutationNameEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationNameEvent.InitMutationNameEventNs.html",
    "title": "Method InitMutationNameEventNs | SharpVectors Documentation",
    "keywords": "Method InitMutationNameEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitMutationNameEventNs(string, string, bool, bool, INode, string, string) The InitMutationNameEventNs method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. void InitMutationNameEventNs(string namespaceUri, string typeArg, bool canBubbleArg, bool cancelableArg, INode relatedNodeArg, string prevNamespaceUri, string prevNodeName) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the application wish to have no namespace. typeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. cancelableArg bool Specifies whether or not the event's default action can be prevented. relatedNodeArg INode Specifies the IEvent's related Node. prevNamespaceUri string Specifies the previous NamespaceUri of the related Node. This value may be null. prevNodeName string Specifies the previous NodeName of the related Node."
  },
  "api/SharpVectors.Dom.Events.IMutationNameEvent.PrevNamespaceUri.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationNameEvent.PrevNamespaceUri.html",
    "title": "Property PrevNamespaceUri | SharpVectors Documentation",
    "keywords": "Property PrevNamespaceUri Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll PrevNamespaceUri The previous value of the RelatedNode's namespace URI. string PrevNamespaceUri { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.IMutationNameEvent.PrevNodeName.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationNameEvent.PrevNodeName.html",
    "title": "Property PrevNodeName | SharpVectors Documentation",
    "keywords": "Property PrevNodeName Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll PrevNodeName The previous value of the RelatedNode's nodeName. string PrevNodeName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.IMutationNameEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IMutationNameEvent.html",
    "title": "Interface IMutationNameEvent | SharpVectors Documentation",
    "keywords": "Interface IMutationNameEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The IMutationNameEvent interface provides specific contextual information associated with Mutation name event types. public interface IMutationNameEvent Remarks Note: To create an instance of the IMutationNameEvent interface, use the feature string \"MutationNameEvent\" as the value of the input parameter used with the CreateEvent method of the IDocumentEvent interface. Properties PrevNamespaceUri The previous value of the RelatedNode's namespace URI. PrevNodeName The previous value of the RelatedNode's nodeName. Methods InitMutationNameEvent(string, bool, bool, INode, string, string) The InitMutationNameEvent method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. InitMutationNameEventNs(string, string, bool, bool, INode, string, string) The InitMutationNameEventNs method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.ITextEvent.Data.html": {
    "href": "api/SharpVectors.Dom.Events.ITextEvent.Data.html",
    "title": "Property Data | SharpVectors Documentation",
    "keywords": "Property Data Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Data Data holds the value of the characters generated by the character device. This may be a single Unicode character or it may be a string. string Data { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.ITextEvent.InitTextEvent.html": {
    "href": "api/SharpVectors.Dom.Events.ITextEvent.InitTextEvent.html",
    "title": "Method InitTextEvent | SharpVectors Documentation",
    "keywords": "Method InitTextEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitTextEvent(string, bool, bool, IAbstractView, string) The InitTextEvent method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. void InitTextEvent(string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, string dataArg) Parameters typeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. cancelableArg bool Specifies whether or not the event's default action can be prevent. This parameter overrides the intrinsic cancelable behavior of the event. viewArg IAbstractView Specifies the TextEvent's view. dataArg string Specifies the TextEvent's data attribute. Remarks This method may only be called before the ITextEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched."
  },
  "api/SharpVectors.Dom.Events.ITextEvent.InitTextEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.ITextEvent.InitTextEventNs.html",
    "title": "Method InitTextEventNs | SharpVectors Documentation",
    "keywords": "Method InitTextEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitTextEventNs(string, string, bool, bool, IAbstractView, string) The InitTextEventNs method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the ITextEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched. void InitTextEventNs(string namespaceUri, string type, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, string dataArg) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the applications wish to have no namespace. type string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. cancelableArg bool Specifies whether or not the event's default action can be prevent. viewArg IAbstractView Specifies the ITextEvent's view. dataArg string Specifies the ITextEvent's data attribute"
  },
  "api/SharpVectors.Dom.Events.ITextEvent.html": {
    "href": "api/SharpVectors.Dom.Events.ITextEvent.html",
    "title": "Interface ITextEvent | SharpVectors Documentation",
    "keywords": "Interface ITextEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The ITextEvent interface provides specific contextual information associated with Text Events. public interface ITextEvent : IUiEvent, IEvent Inherited Members IUiEvent.View IUiEvent.Detail IUiEvent.InitUiEvent(string, bool, bool, IAbstractView, long) IUiEvent.InitUiEventNs(string, string, bool, bool, IAbstractView, long) IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(string, bool, bool) IEvent.InitEventNs(string, string, bool, bool) IEvent.StopImmediatePropagation() Remarks Note: To create an instance of the ITextEvent interface, use the feature string \"TextEvent\" as the value of the input parameter used with the IDocumentEvent.CreateEvent method. Properties Data Data holds the value of the characters generated by the character device. This may be a single Unicode character or it may be a string. Methods InitTextEvent(string, bool, bool, IAbstractView, string) The InitTextEvent method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. InitTextEventNs(string, string, bool, bool, IAbstractView, string) The InitTextEventNs method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the ITextEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched."
  },
  "api/SharpVectors.Dom.Events.ITimeEvent.Detail.html": {
    "href": "api/SharpVectors.Dom.Events.ITimeEvent.Detail.html",
    "title": "Property Detail | SharpVectors Documentation",
    "keywords": "Property Detail Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Detail Specifies some detail information about the Event, depending on the type of the event. For this event type, indicates the repeat number for the animation. long Detail { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.ITimeEvent.InitTimeEvent.html": {
    "href": "api/SharpVectors.Dom.Events.ITimeEvent.InitTimeEvent.html",
    "title": "Method InitTimeEvent | SharpVectors Documentation",
    "keywords": "Method InitTimeEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitTimeEvent(string, IAbstractView, long) This method is used to initialize the value of a ITimeEvent created through the IDocumentEvent interface. This method may only be called before the ITimeEvent has been dispatched via the dispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. void InitTimeEvent(string typeArg, IAbstractView viewArg, long detailArg) Parameters typeArg string Specifies the event type. viewArg IAbstractView Specifies the event's IAbstractView. detailArg long Specifies the event's detail."
  },
  "api/SharpVectors.Dom.Events.ITimeEvent.View.html": {
    "href": "api/SharpVectors.Dom.Events.ITimeEvent.View.html",
    "title": "Property View | SharpVectors Documentation",
    "keywords": "Property View Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll View The view attribute identifies the IAbstractView from which the event was generated. IAbstractView View { get; } Property Value IAbstractView"
  },
  "api/SharpVectors.Dom.Events.ITimeEvent.html": {
    "href": "api/SharpVectors.Dom.Events.ITimeEvent.html",
    "title": "Interface ITimeEvent | SharpVectors Documentation",
    "keywords": "Interface ITimeEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll This interface, defined in SMIL Animation: Supported interfaces, provides specific contextual information associated with Time events. public interface ITimeEvent : IEvent Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(string, bool, bool) IEvent.InitEventNs(string, string, bool, bool) IEvent.StopImmediatePropagation() Remarks The different types of events that can occur are: Properties Detail Specifies some detail information about the Event, depending on the type of the event. For this event type, indicates the repeat number for the animation. View The view attribute identifies the IAbstractView from which the event was generated. Methods InitTimeEvent(string, IAbstractView, long) This method is used to initialize the value of a ITimeEvent created through the IDocumentEvent interface. This method may only be called before the ITimeEvent has been dispatched via the dispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.IUiEvent.Detail.html": {
    "href": "api/SharpVectors.Dom.Events.IUiEvent.Detail.html",
    "title": "Property Detail | SharpVectors Documentation",
    "keywords": "Property Detail Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll Detail Specifies some detail information about the IEvent, depending on the type of event. long Detail { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.IUiEvent.InitUiEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IUiEvent.InitUiEvent.html",
    "title": "Method InitUiEvent | SharpVectors Documentation",
    "keywords": "Method InitUiEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitUiEvent(string, bool, bool, IAbstractView, long) The InitUiEvent method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. void InitUiEvent(string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, long detailArg) Parameters typeArg string Specifies the event type. canBubbleArg bool Specifies whether or not the event can bubble. This parameter overrides the intrinsic bubbling behavior of the event. cancelableArg bool Specifies whether or not the event's default action can be prevented. This parameter overrides the intrinsic cancelable behavior of the event. viewArg IAbstractView Specifies the IEvent's IAbstractView. detailArg long Specifies the IEvent's detail. Remarks This method may only be called before the InitUiEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.IUiEvent.InitUiEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.IUiEvent.InitUiEventNs.html",
    "title": "Method InitUiEventNs | SharpVectors Documentation",
    "keywords": "Method InitUiEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll InitUiEventNs(string, string, bool, bool, IAbstractView, long) The InitUiEventNs method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IUiEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. void InitUiEventNs(string namespaceURI, string typeArg, bool canBubbleArg, bool cancelableArg, IAbstractView viewArg, long detailArg) Parameters namespaceURI string Specifies the namespace URI associated with this event, or null if the application wish not to use namespaces. typeArg string Specifies the event type (see also the description of the type attribute in the IEvent interface). canBubbleArg bool Specifies whether or not the event can bubble. cancelableArg bool Specifies whether or not the event's default action can be prevented. viewArg IAbstractView Specifies the Event's IAbstractView detailArg long Specifies the IEvent's detail."
  },
  "api/SharpVectors.Dom.Events.IUiEvent.View.html": {
    "href": "api/SharpVectors.Dom.Events.IUiEvent.View.html",
    "title": "Property View | SharpVectors Documentation",
    "keywords": "Property View Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll View The View attribute identifies the IAbstractView from which the event was generated. IAbstractView View { get; } Property Value IAbstractView"
  },
  "api/SharpVectors.Dom.Events.IUiEvent.html": {
    "href": "api/SharpVectors.Dom.Events.IUiEvent.html",
    "title": "Interface IUiEvent | SharpVectors Documentation",
    "keywords": "Interface IUiEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll The IUiEvent interface provides specific contextual information associated with User Interface events. public interface IUiEvent : IEvent Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(string, bool, bool) IEvent.InitEventNs(string, string, bool, bool) IEvent.StopImmediatePropagation() Remarks Note: To create an instance of the IUiEvent interface, use the feature string \"UIEvent\" as the value of the input parameter used with the IDocumentEvent.CreateEvent method. Properties Detail Specifies some detail information about the IEvent, depending on the type of event. View The View attribute identifies the IAbstractView from which the event was generated. Methods InitUiEvent(string, bool, bool, IAbstractView, long) The InitUiEvent method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. InitUiEventNs(string, string, bool, bool, IAbstractView, long) The InitUiEventNs method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IUiEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.KeyLocationCode.html": {
    "href": "api/SharpVectors.Dom.Events.KeyLocationCode.html",
    "title": "Enum KeyLocationCode | SharpVectors Documentation",
    "keywords": "Enum KeyLocationCode Namespace SharpVectors.Dom.Events Assembly SharpVectors.Core.dll public enum KeyLocationCode : ulong Fields Standard = 0 The key activation is not distinguished as the left or right version of the key, and did not originate from the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad). Example: the 'Q' key on a PC 101 Key US. Left = 1 The key activated is in the left key location (there is more than one possible location for this key). Example: the left Shift key on a PC 101 Key US. Right = 2 The key activation is in the right key location (there is more than one possible location for this key). Example: the right Shift key on a PC 101 Key US. Numpad = 3 The key activation originated on the numeric keypad or with a virtual key corresponding to the numeric keypad. Example: the '1' key on a PC 101 Key US. Unknown = 4 Implementations can use this constant to indicate that the location of the key cannot be determined. Remarks Note: In case a DOM implementation wishes to provide new location information, all values above the value of this constant can be used for that effect and generic DOM applications should consider values above the value of this constant as being equivalent to Unknown."
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.-ctor.html",
    "title": "Constructor KeyboardEvent | SharpVectors Documentation",
    "keywords": "Constructor KeyboardEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll KeyboardEvent() public KeyboardEvent() KeyboardEvent(string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) public KeyboardEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, string keyIdentifier, KeyLocationCode keyLocation, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey, bool altGraphKey) Parameters eventType string bubbles bool cancelable bool view IAbstractView keyIdentifier string keyLocation KeyLocationCode ctrlKey bool shiftKey bool altKey bool metaKey bool altGraphKey bool KeyboardEvent(string, string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) public KeyboardEvent(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, string keyIdentifier, KeyLocationCode keyLocation, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey, bool altGraphKey) Parameters namespaceUri string eventType string bubbles bool cancelable bool view IAbstractView keyIdentifier string keyLocation KeyLocationCode ctrlKey bool shiftKey bool altKey bool metaKey bool altGraphKey bool"
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.AltGraphKey.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.AltGraphKey.html",
    "title": "Property AltGraphKey | SharpVectors Documentation",
    "keywords": "Property AltGraphKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. public bool AltGraphKey { get; } Property Value bool Remarks Note: Some operating systems simulate the alt-graph key modifier with the combinaison of alt and ctrl key modifiers. Implementations are encouraged to use this modifier instead."
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.AltKey.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.AltKey.html",
    "title": "Property AltKey | SharpVectors Documentation",
    "keywords": "Property AltKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll AltKey true if the alt (alternative) key modifier is activated. public bool AltKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.CtrlKey.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.CtrlKey.html",
    "title": "Property CtrlKey | SharpVectors Documentation",
    "keywords": "Property CtrlKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll CtrlKey true if the control (Ctrl) key modifier is activated. public bool CtrlKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.InitKeyboardEvent.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.InitKeyboardEvent.html",
    "title": "Method InitKeyboardEvent | SharpVectors Documentation",
    "keywords": "Method InitKeyboardEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitKeyboardEvent(string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) The InitKeyboardEvent method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method. public void InitKeyboardEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, string keyIdentifier, KeyLocationCode keyLocation, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey, bool altGraphKey) Parameters eventType string bubbles bool cancelable bool view IAbstractView keyIdentifier string keyLocation KeyLocationCode ctrlKey bool shiftKey bool altKey bool metaKey bool altGraphKey bool Remarks This method may only be called before the IKeyboardEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched."
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.InitKeyboardEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.InitKeyboardEventNs.html",
    "title": "Method InitKeyboardEventNs | SharpVectors Documentation",
    "keywords": "Method InitKeyboardEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitKeyboardEventNs(string, string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) The InitKeyboardEventNs method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method. public void InitKeyboardEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, string keyIdentifier, KeyLocationCode keyLocation, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey, bool altGraphKey) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the applications wish to have no namespace. eventType string bubbles bool cancelable bool view IAbstractView keyIdentifier string keyLocation KeyLocationCode ctrlKey bool shiftKey bool altKey bool metaKey bool altGraphKey bool Remarks This method may only be called before the IKeyboardEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched."
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.KeyIdentifier.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.KeyIdentifier.html",
    "title": "Property KeyIdentifier | SharpVectors Documentation",
    "keywords": "Property KeyIdentifier Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll KeyIdentifier Holds the identifier of the key. public string KeyIdentifier { get; } Property Value string Remarks For a list of possible values, refer to Key identifiers for keyboard events. Note: Implementations that are unable to identify a key must use the key identifier \"Unidentified\"."
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.KeyLocation.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.KeyLocation.html",
    "title": "Property KeyLocation | SharpVectors Documentation",
    "keywords": "Property KeyLocation Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll KeyLocation Contains an indication of the location of they key on the device. public KeyLocationCode KeyLocation { get; } Property Value KeyLocationCode"
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.MetaKey.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.MetaKey.html",
    "title": "Property MetaKey | SharpVectors Documentation",
    "keywords": "Property MetaKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll MetaKey true if the meta (Meta) key modifier is activated. public bool MetaKey { get; } Property Value bool Remarks Note: The Command key modifier on Macintosh system must be represented using this key modifier."
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.ShiftKey.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.ShiftKey.html",
    "title": "Property ShiftKey | SharpVectors Documentation",
    "keywords": "Property ShiftKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll ShiftKey true if the shift (Shift) key modifier is activated. public bool ShiftKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.KeyboardEvent.html": {
    "href": "api/SharpVectors.Dom.Events.KeyboardEvent.html",
    "title": "Class KeyboardEvent | SharpVectors Documentation",
    "keywords": "Class KeyboardEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for KeyboardEvent. public class KeyboardEvent : UiEvent, IKeyboardEvent, IUiEvent, IEvent Inheritance object Event UiEvent KeyboardEvent Implements IKeyboardEvent IUiEvent IEvent Inherited Members UiEvent.View UiEvent.Detail UiEvent.InitUiEvent(string, bool, bool, IAbstractView, long) UiEvent.InitUiEventNs(string, string, bool, bool, IAbstractView, long) Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(string, bool, bool) Event.InitEventNs(string, string, bool, bool) Event.StopImmediatePropagation() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors KeyboardEvent() KeyboardEvent(string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) KeyboardEvent(string, string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) Properties AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. AltKey true if the alt (alternative) key modifier is activated. CtrlKey true if the control (Ctrl) key modifier is activated. KeyIdentifier Holds the identifier of the key. KeyLocation Contains an indication of the location of they key on the device. MetaKey true if the meta (Meta) key modifier is activated. ShiftKey true if the shift (Shift) key modifier is activated. Methods InitKeyboardEvent(string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) The InitKeyboardEvent method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method. InitKeyboardEventNs(string, string, bool, bool, IAbstractView, string, KeyLocationCode, bool, bool, bool, bool, bool) The InitKeyboardEventNs method is used to initialize the value of a IKeyboardEvent created using the IDocumentEvent.CreateEvent method."
  },
  "api/SharpVectors.Dom.Events.MouseEvent.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.-ctor.html",
    "title": "Constructor MouseEvent | SharpVectors Documentation",
    "keywords": "Constructor MouseEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll MouseEvent() public MouseEvent() MouseEvent(string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget) public MouseEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget) Parameters eventType string bubbles bool cancelable bool view IAbstractView detail long screenX long screenY long clientX long clientY long ctrlKey bool altKey bool shiftKey bool metaKey bool button ushort relatedTarget IEventTarget MouseEvent(string, string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget, bool) public MouseEvent(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget, bool altGraphKey) Parameters namespaceUri string eventType string bubbles bool cancelable bool view IAbstractView detail long screenX long screenY long clientX long clientY long ctrlKey bool altKey bool shiftKey bool metaKey bool button ushort relatedTarget IEventTarget altGraphKey bool MouseEvent(EventType, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget, bool) public MouseEvent(EventType eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget, bool altGraphKey) Parameters eventType EventType bubbles bool cancelable bool view IAbstractView detail long screenX long screenY long clientX long clientY long ctrlKey bool altKey bool shiftKey bool metaKey bool button ushort relatedTarget IEventTarget altGraphKey bool"
  },
  "api/SharpVectors.Dom.Events.MouseEvent.AltGraphKey.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.AltGraphKey.html",
    "title": "Property AltGraphKey | SharpVectors Documentation",
    "keywords": "Property AltGraphKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. public bool AltGraphKey { get; } Property Value bool Remarks Note: Some operating systems simulate the alt-graph key modifier with the combinaison of alt and ctrl key modifiers. Implementations are encouraged to use this modifier instead."
  },
  "api/SharpVectors.Dom.Events.MouseEvent.AltKey.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.AltKey.html",
    "title": "Property AltKey | SharpVectors Documentation",
    "keywords": "Property AltKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll AltKey true if the alt (alternative) key modifier is activated. public bool AltKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.MouseEvent.Button.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.Button.html",
    "title": "Property Button | SharpVectors Documentation",
    "keywords": "Property Button Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Button During mouse events caused by the depression or release of a mouse button, button is used to indicate which mouse button changed state. public ushort Button { get; } Property Value ushort Remarks 0 indicates the normal (in general on the left or the one button on Macintosh mice, used to activate a button or select text) button of the mouse. 2 indicates the contextual property (in general on the right, used to display a context menu) button of the mouse if present. 1 indicates the extra (in general in the middle and often combined with the mouse wheel) button. Some mice may provide or simulate more buttons and values higher than 2 could be used to represent such buttons."
  },
  "api/SharpVectors.Dom.Events.MouseEvent.ClientX.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.ClientX.html",
    "title": "Property ClientX | SharpVectors Documentation",
    "keywords": "Property ClientX Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll ClientX The horizontal coordinate at which the event occurred relative to the DOM implementation's client area. public long ClientX { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.MouseEvent.ClientY.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.ClientY.html",
    "title": "Property ClientY | SharpVectors Documentation",
    "keywords": "Property ClientY Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll ClientY The vertical coordinate at which the event occurred relative to the DOM implementation's client area. public long ClientY { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.MouseEvent.CtrlKey.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.CtrlKey.html",
    "title": "Property CtrlKey | SharpVectors Documentation",
    "keywords": "Property CtrlKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll CtrlKey true if the control (Ctrl) key modifier is activated. public bool CtrlKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.MouseEvent.InitMouseEvent.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.InitMouseEvent.html",
    "title": "Method InitMouseEvent | SharpVectors Documentation",
    "keywords": "Method InitMouseEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitMouseEvent(string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget) The InitMouseEvent method is used to initialize the value of a MouseEvent created using the IDocumentEvent.CreateEvent method. public void InitMouseEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget) Parameters eventType string bubbles bool cancelable bool view IAbstractView detail long screenX long screenY long clientX long clientY long ctrlKey bool altKey bool shiftKey bool metaKey bool button ushort relatedTarget IEventTarget Remarks This method may only be called before the IMouseEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.MouseEvent.InitMouseEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.InitMouseEventNs.html",
    "title": "Method InitMouseEventNs | SharpVectors Documentation",
    "keywords": "Method InitMouseEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitMouseEventNs(string, string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget, bool) The InitMouseEventNs method is used to initialize the value of a IMouseEvent created using the IDocumentEvent.CreateEvent interface. public void InitMouseEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail, long screenX, long screenY, long clientX, long clientY, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey, ushort button, IEventTarget relatedTarget, bool altGraphKey) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the application wish to have no namespace. eventType string bubbles bool cancelable bool view IAbstractView detail long screenX long screenY long clientX long clientY long ctrlKey bool altKey bool shiftKey bool metaKey bool button ushort relatedTarget IEventTarget altGraphKey bool Remarks This method may only be called before the IMouseEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.MouseEvent.MetaKey.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.MetaKey.html",
    "title": "Property MetaKey | SharpVectors Documentation",
    "keywords": "Property MetaKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll MetaKey true if the meta (Meta) key modifier is activated. public bool MetaKey { get; } Property Value bool Remarks Note: The Command key modifier on Macintosh system must be represented using this key modifier."
  },
  "api/SharpVectors.Dom.Events.MouseEvent.RelatedTarget.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.RelatedTarget.html",
    "title": "Property RelatedTarget | SharpVectors Documentation",
    "keywords": "Property RelatedTarget Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll RelatedTarget Used to identify a secondary EventTarget related to a UI event. public IEventTarget RelatedTarget { get; } Property Value IEventTarget Remarks Currently this attribute is used with the mouseover event to indicate the IEventTarget which the pointing device exited and with the mouseout event to indicate the IEventTarget which the pointing device entered."
  },
  "api/SharpVectors.Dom.Events.MouseEvent.ScreenX.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.ScreenX.html",
    "title": "Property ScreenX | SharpVectors Documentation",
    "keywords": "Property ScreenX Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll ScreenX The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system. public long ScreenX { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.MouseEvent.ScreenY.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.ScreenY.html",
    "title": "Property ScreenY | SharpVectors Documentation",
    "keywords": "Property ScreenY Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll ScreenY The vertical coordinate at which the event occurred relative to the origin of the screen coordinate system. public long ScreenY { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.MouseEvent.ShiftKey.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.ShiftKey.html",
    "title": "Property ShiftKey | SharpVectors Documentation",
    "keywords": "Property ShiftKey Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll ShiftKey true if the shift (Shift) key modifier is activated. public bool ShiftKey { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Events.MouseEvent.html": {
    "href": "api/SharpVectors.Dom.Events.MouseEvent.html",
    "title": "Class MouseEvent | SharpVectors Documentation",
    "keywords": "Class MouseEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for MouseEvent. public class MouseEvent : UiEvent, IMouseEvent, IUiEvent, IEvent Inheritance object Event UiEvent MouseEvent Implements IMouseEvent IUiEvent IEvent Inherited Members UiEvent.View UiEvent.Detail UiEvent.InitUiEvent(string, bool, bool, IAbstractView, long) UiEvent.InitUiEventNs(string, string, bool, bool, IAbstractView, long) Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(string, bool, bool) Event.InitEventNs(string, string, bool, bool) Event.StopImmediatePropagation() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MouseEvent() MouseEvent(EventType, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget, bool) MouseEvent(string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget) MouseEvent(string, string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget, bool) Properties AltGraphKey true if the alt-graph (Alt Gr) key modifier is activated. AltKey true if the alt (alternative) key modifier is activated. Button During mouse events caused by the depression or release of a mouse button, button is used to indicate which mouse button changed state. ClientX The horizontal coordinate at which the event occurred relative to the DOM implementation's client area. ClientY The vertical coordinate at which the event occurred relative to the DOM implementation's client area. CtrlKey true if the control (Ctrl) key modifier is activated. MetaKey true if the meta (Meta) key modifier is activated. RelatedTarget Used to identify a secondary EventTarget related to a UI event. ScreenX The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system. ScreenY The vertical coordinate at which the event occurred relative to the origin of the screen coordinate system. ShiftKey true if the shift (Shift) key modifier is activated. Methods InitMouseEvent(string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget) The InitMouseEvent method is used to initialize the value of a MouseEvent created using the IDocumentEvent.CreateEvent method. InitMouseEventNs(string, string, bool, bool, IAbstractView, long, long, long, long, long, bool, bool, bool, bool, ushort, IEventTarget, bool) The InitMouseEventNs method is used to initialize the value of a IMouseEvent created using the IDocumentEvent.CreateEvent interface."
  },
  "api/SharpVectors.Dom.Events.MutationEvent.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.-ctor.html",
    "title": "Constructor MutationEvent | SharpVectors Documentation",
    "keywords": "Constructor MutationEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll MutationEvent() public MutationEvent()"
  },
  "api/SharpVectors.Dom.Events.MutationEvent.AttrChange.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.AttrChange.html",
    "title": "Property AttrChange | SharpVectors Documentation",
    "keywords": "Property AttrChange Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll AttrChange attrChange indicates the type of change which triggered the DOMAttrModified event. The values can be AttrChangeType.Modification, AttrChangeType.Addition, or AttrChangeType.Removal. public AttrChangeType AttrChange { get; } Property Value AttrChangeType"
  },
  "api/SharpVectors.Dom.Events.MutationEvent.AttrName.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.AttrName.html",
    "title": "Property AttrName | SharpVectors Documentation",
    "keywords": "Property AttrName Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll AttrName AttrName indicates the name of the changed attribute node in a AttrChangeType.Modification event. public string AttrName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.MutationEvent.InitMutationEvent.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.InitMutationEvent.html",
    "title": "Method InitMutationEvent | SharpVectors Documentation",
    "keywords": "Method InitMutationEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitMutationEvent(string, bool, bool, INode, string, string, string, AttrChangeType) The InitMutationEvent method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched if necessary. If called multiple times, the final invocation takes precedence. public void InitMutationEvent(string eventType, bool bubbles, bool cancelable, INode relatedNode, string prevValue, string newValue, string attrName, AttrChangeType attrChange) Parameters eventType string bubbles bool cancelable bool relatedNode INode prevValue string newValue string attrName string attrChange AttrChangeType"
  },
  "api/SharpVectors.Dom.Events.MutationEvent.InitMutationEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.InitMutationEventNs.html",
    "title": "Method InitMutationEventNs | SharpVectors Documentation",
    "keywords": "Method InitMutationEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitMutationEventNs(string, string, bool, bool, INode, string, string, string, AttrChangeType) The InitMutationEventNs method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method. public void InitMutationEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, INode relatedNode, string prevValue, string newValue, string attrName, AttrChangeType attrChange) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the application wish to have no namespace. eventType string bubbles bool cancelable bool relatedNode INode prevValue string newValue string attrName string attrChange AttrChangeType Remarks This method may only be called before the IMutationEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.MutationEvent.NewValue.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.NewValue.html",
    "title": "Property NewValue | SharpVectors Documentation",
    "keywords": "Property NewValue Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll NewValue NewValue indicates the new value of the attribute node in DOMAttrModified events, and of the ICharacterData node in DOMCharacterDataModified events. public string NewValue { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.MutationEvent.PrevValue.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.PrevValue.html",
    "title": "Property PrevValue | SharpVectors Documentation",
    "keywords": "Property PrevValue Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll PrevValue PrevValue indicates the previous value of the attribute node in AttrChangeType.Modification events, and of the ICharacterData node in DOMCharacterDataModified events. public string PrevValue { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.MutationEvent.RelatedNode.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.RelatedNode.html",
    "title": "Property RelatedNode | SharpVectors Documentation",
    "keywords": "Property RelatedNode Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll RelatedNode RelatedNode is used to identify a secondary node related to a mutation event. public INode RelatedNode { get; } Property Value INode Remarks For example, if a mutation event is dispatched to a node indicating that its parent has changed, the RelatedNode is the changed parent. If an event is instead dispatched to a subtree indicating a node was changed within it, the RelatedNode is the changed node. In the case of the AttrChangeType.Modification event it indicates the attribute node which was modified, added, or removed."
  },
  "api/SharpVectors.Dom.Events.MutationEvent.html": {
    "href": "api/SharpVectors.Dom.Events.MutationEvent.html",
    "title": "Class MutationEvent | SharpVectors Documentation",
    "keywords": "Class MutationEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for MutationEvent. public class MutationEvent : Event, IMutationEvent, IEvent Inheritance object Event MutationEvent Implements IMutationEvent IEvent Derived MutationNameEvent Inherited Members Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(string, bool, bool) Event.InitEventNs(string, string, bool, bool) Event.StopImmediatePropagation() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors MutationEvent() Properties AttrChange attrChange indicates the type of change which triggered the DOMAttrModified event. The values can be AttrChangeType.Modification, AttrChangeType.Addition, or AttrChangeType.Removal. AttrName AttrName indicates the name of the changed attribute node in a AttrChangeType.Modification event. NewValue NewValue indicates the new value of the attribute node in DOMAttrModified events, and of the ICharacterData node in DOMCharacterDataModified events. PrevValue PrevValue indicates the previous value of the attribute node in AttrChangeType.Modification events, and of the ICharacterData node in DOMCharacterDataModified events. RelatedNode RelatedNode is used to identify a secondary node related to a mutation event. Methods InitMutationEvent(string, bool, bool, INode, string, string, string, AttrChangeType) The InitMutationEvent method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times before being dispatched if necessary. If called multiple times, the final invocation takes precedence. InitMutationEventNs(string, string, bool, bool, INode, string, string, string, AttrChangeType) The InitMutationEventNs method is used to initialize the value of a IMutationEvent created using the IDocumentEvent.CreateEvent method."
  },
  "api/SharpVectors.Dom.Events.MutationNameEvent.InitMutationNameEvent.html": {
    "href": "api/SharpVectors.Dom.Events.MutationNameEvent.InitMutationNameEvent.html",
    "title": "Method InitMutationNameEvent | SharpVectors Documentation",
    "keywords": "Method InitMutationNameEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitMutationNameEvent(string, bool, bool, INode, string, string) The InitMutationNameEvent method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. public void InitMutationNameEvent(string eventType, bool bubbles, bool cancelable, INode relatedNode, string prevNamespaceUri, string prevNodeName) Parameters eventType string bubbles bool cancelable bool relatedNode INode prevNamespaceUri string Specifies the previous NamespaceUri of the related INode. This value may be null. prevNodeName string Specifies the previous NodeName of the related Node."
  },
  "api/SharpVectors.Dom.Events.MutationNameEvent.InitMutationNameEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.MutationNameEvent.InitMutationNameEventNs.html",
    "title": "Method InitMutationNameEventNs | SharpVectors Documentation",
    "keywords": "Method InitMutationNameEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitMutationNameEventNs(string, string, bool, bool, INode, string, string) The InitMutationNameEventNs method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. public void InitMutationNameEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, INode relatedNode, string prevNamespaceUri, string prevNodeName) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the application wish to have no namespace. eventType string bubbles bool cancelable bool relatedNode INode prevNamespaceUri string Specifies the previous NamespaceUri of the related Node. This value may be null. prevNodeName string Specifies the previous NodeName of the related Node."
  },
  "api/SharpVectors.Dom.Events.MutationNameEvent.PrevNamespaceUri.html": {
    "href": "api/SharpVectors.Dom.Events.MutationNameEvent.PrevNamespaceUri.html",
    "title": "Property PrevNamespaceUri | SharpVectors Documentation",
    "keywords": "Property PrevNamespaceUri Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll PrevNamespaceUri The previous value of the RelatedNode's namespace URI. public string PrevNamespaceUri { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.MutationNameEvent.PrevNodeName.html": {
    "href": "api/SharpVectors.Dom.Events.MutationNameEvent.PrevNodeName.html",
    "title": "Property PrevNodeName | SharpVectors Documentation",
    "keywords": "Property PrevNodeName Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll PrevNodeName The previous value of the RelatedNode's nodeName. public string PrevNodeName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.MutationNameEvent.html": {
    "href": "api/SharpVectors.Dom.Events.MutationNameEvent.html",
    "title": "Class MutationNameEvent | SharpVectors Documentation",
    "keywords": "Class MutationNameEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for MutationNameEvent. public class MutationNameEvent : MutationEvent, IMutationEvent, IEvent, IMutationNameEvent Inheritance object Event MutationEvent MutationNameEvent Implements IMutationEvent IEvent IMutationNameEvent Inherited Members MutationEvent.RelatedNode MutationEvent.PrevValue MutationEvent.NewValue MutationEvent.AttrName MutationEvent.AttrChange MutationEvent.InitMutationEvent(string, bool, bool, INode, string, string, string, AttrChangeType) MutationEvent.InitMutationEventNs(string, string, bool, bool, INode, string, string, string, AttrChangeType) Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(string, bool, bool) Event.InitEventNs(string, string, bool, bool) Event.StopImmediatePropagation() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties PrevNamespaceUri The previous value of the RelatedNode's namespace URI. PrevNodeName The previous value of the RelatedNode's nodeName. Methods InitMutationNameEvent(string, bool, bool, INode, string, string) The InitMutationNameEvent method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. InitMutationNameEventNs(string, string, bool, bool, INode, string, string) The InitMutationNameEventNs method is used to initialize the value of a IMutationNameEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IMutationNameEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.TextEvent.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.TextEvent.-ctor.html",
    "title": "Constructor TextEvent | SharpVectors Documentation",
    "keywords": "Constructor TextEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll TextEvent() public TextEvent() TextEvent(string, bool, bool, IAbstractView, string) public TextEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, string data) Parameters eventType string bubbles bool cancelable bool view IAbstractView data string TextEvent(string, string, bool, bool, IAbstractView, string) public TextEvent(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, string data) Parameters namespaceUri string eventType string bubbles bool cancelable bool view IAbstractView data string"
  },
  "api/SharpVectors.Dom.Events.TextEvent.Data.html": {
    "href": "api/SharpVectors.Dom.Events.TextEvent.Data.html",
    "title": "Property Data | SharpVectors Documentation",
    "keywords": "Property Data Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Data Data holds the value of the characters generated by the character device. This may be a single Unicode character or it may be a string. public string Data { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Events.TextEvent.InitTextEvent.html": {
    "href": "api/SharpVectors.Dom.Events.TextEvent.InitTextEvent.html",
    "title": "Method InitTextEvent | SharpVectors Documentation",
    "keywords": "Method InitTextEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitTextEvent(string, bool, bool, IAbstractView, string) The InitTextEvent method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. public void InitTextEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, string data) Parameters eventType string bubbles bool cancelable bool view IAbstractView data string Remarks This method may only be called before the ITextEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched."
  },
  "api/SharpVectors.Dom.Events.TextEvent.InitTextEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.TextEvent.InitTextEventNs.html",
    "title": "Method InitTextEventNs | SharpVectors Documentation",
    "keywords": "Method InitTextEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitTextEventNs(string, string, bool, bool, IAbstractView, string) The InitTextEventNs method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the ITextEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched. public void InitTextEventNs(string namespaceUri, string type, bool bubbles, bool cancelable, IAbstractView view, string data) Parameters namespaceUri string Specifies the namespace URI associated with this event, or null if the applications wish to have no namespace. type string Specifies the event type. bubbles bool cancelable bool view IAbstractView data string"
  },
  "api/SharpVectors.Dom.Events.TextEvent.html": {
    "href": "api/SharpVectors.Dom.Events.TextEvent.html",
    "title": "Class TextEvent | SharpVectors Documentation",
    "keywords": "Class TextEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for TextEvent. public class TextEvent : UiEvent, ITextEvent, IUiEvent, IEvent Inheritance object Event UiEvent TextEvent Implements ITextEvent IUiEvent IEvent Inherited Members UiEvent.View UiEvent.Detail UiEvent.InitUiEvent(string, bool, bool, IAbstractView, long) UiEvent.InitUiEventNs(string, string, bool, bool, IAbstractView, long) Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(string, bool, bool) Event.InitEventNs(string, string, bool, bool) Event.StopImmediatePropagation() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TextEvent() TextEvent(string, bool, bool, IAbstractView, string) TextEvent(string, string, bool, bool, IAbstractView, string) Properties Data Data holds the value of the characters generated by the character device. This may be a single Unicode character or it may be a string. Methods InitTextEvent(string, bool, bool, IAbstractView, string) The InitTextEvent method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. InitTextEventNs(string, string, bool, bool, IAbstractView, string) The InitTextEventNs method is used to initialize the value of a ITextEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the ITextEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. This method has no effect if called after the event has been dispatched."
  },
  "api/SharpVectors.Dom.Events.UiEvent.-ctor.html": {
    "href": "api/SharpVectors.Dom.Events.UiEvent.-ctor.html",
    "title": "Constructor UiEvent | SharpVectors Documentation",
    "keywords": "Constructor UiEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll UiEvent() public UiEvent() UiEvent(string, bool, bool, IAbstractView, long) public UiEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail) Parameters eventType string bubbles bool cancelable bool view IAbstractView detail long UiEvent(string, string, bool, bool, IAbstractView, long) public UiEvent(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail) Parameters namespaceUri string eventType string bubbles bool cancelable bool view IAbstractView detail long"
  },
  "api/SharpVectors.Dom.Events.UiEvent.Detail.html": {
    "href": "api/SharpVectors.Dom.Events.UiEvent.Detail.html",
    "title": "Property Detail | SharpVectors Documentation",
    "keywords": "Property Detail Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Detail Specifies some detail information about the IEvent, depending on the type of event. public long Detail { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Events.UiEvent.InitUiEvent.html": {
    "href": "api/SharpVectors.Dom.Events.UiEvent.InitUiEvent.html",
    "title": "Method InitUiEvent | SharpVectors Documentation",
    "keywords": "Method InitUiEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitUiEvent(string, bool, bool, IAbstractView, long) The InitUiEvent method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. public void InitUiEvent(string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail) Parameters eventType string bubbles bool cancelable bool view IAbstractView detail long Remarks This method may only be called before the InitUiEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.UiEvent.InitUiEventNs.html": {
    "href": "api/SharpVectors.Dom.Events.UiEvent.InitUiEventNs.html",
    "title": "Method InitUiEventNs | SharpVectors Documentation",
    "keywords": "Method InitUiEventNs Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll InitUiEventNs(string, string, bool, bool, IAbstractView, long) The InitUiEventNs method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IUiEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence. public void InitUiEventNs(string namespaceUri, string eventType, bool bubbles, bool cancelable, IAbstractView view, long detail) Parameters namespaceUri string eventType string bubbles bool cancelable bool view IAbstractView detail long"
  },
  "api/SharpVectors.Dom.Events.UiEvent.View.html": {
    "href": "api/SharpVectors.Dom.Events.UiEvent.View.html",
    "title": "Property View | SharpVectors Documentation",
    "keywords": "Property View Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll View The View attribute identifies the IAbstractView from which the event was generated. public IAbstractView View { get; } Property Value IAbstractView"
  },
  "api/SharpVectors.Dom.Events.UiEvent.html": {
    "href": "api/SharpVectors.Dom.Events.UiEvent.html",
    "title": "Class UiEvent | SharpVectors Documentation",
    "keywords": "Class UiEvent Namespace SharpVectors.Dom.Events Assembly SharpVectors.Dom.dll Summary description for UiEvent. public class UiEvent : Event, IUiEvent, IEvent Inheritance object Event UiEvent Implements IUiEvent IEvent Derived KeyboardEvent MouseEvent TextEvent Inherited Members Event._eventType Event.Type Event.Target Event.CurrentTarget Event.EventPhase Event.Bubbles Event.Cancelable Event.TimeStamp Event.NamespaceUri Event.IsCustom Event.IsDefaultPrevented Event.StopPropagation() Event.PreventDefault() Event.InitEvent(string, bool, bool) Event.InitEventNs(string, string, bool, bool) Event.StopImmediatePropagation() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UiEvent() UiEvent(string, bool, bool, IAbstractView, long) UiEvent(string, string, bool, bool, IAbstractView, long) Properties Detail Specifies some detail information about the IEvent, depending on the type of event. View The View attribute identifies the IAbstractView from which the event was generated. Methods InitUiEvent(string, bool, bool, IAbstractView, long) The InitUiEvent method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. InitUiEventNs(string, string, bool, bool, IAbstractView, long) The InitUiEventNs method is used to initialize the value of a IUiEvent created using the IDocumentEvent.CreateEvent method. This method may only be called before the IUiEvent has been dispatched via the IEventTarget.DispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence."
  },
  "api/SharpVectors.Dom.Events.html": {
    "href": "api/SharpVectors.Dom.Events.html",
    "title": "Namespace SharpVectors.Dom.Events | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom.Events The SharpVectors.Dom.Events namespace contains a bunch of classes and interfaces. Classes Event Summary description for Event. EventClasses Summary description for EventClasses. EventException Event operations may throw an EventException as specified in their method descriptions. EventListenerMap Summary description for EventListenerMap. EventListenerMapEntry Summary description for EventListenerMapEntry. EventTarget Summary description for EventTarget. EventType Summary description for MutationEventType. KeyboardEvent Summary description for KeyboardEvent. MouseEvent Summary description for MouseEvent. MutationEvent Summary description for MutationEvent. MutationNameEvent Summary description for MutationNameEvent. TextEvent Summary description for TextEvent. UiEvent Summary description for UiEvent. Interfaces ICustomEvent The ICustomEvent interface gives access to the attributes IEvent.CurrentTarget and IEvent.EventPhase. IDocumentEvent The IDocumentEvent interface provides a mechanism by which the user can create an IEvent object of a type supported by the implementation. It is expected that the IDocumentEvent interface will be implemented on the same object which implements the IDocument interface in an implementation which supports the IEvent model. IEvent The Event interface is used to provide contextual information about an event to the listener processing the event. IEventListener This interface represents an object that can handle an event dispatched by an IEventTarget object. IEventTarget The IEventTarget interface is implemented by all the objects which could be event targets in an implementation which supports the Event flows. IEventTargetSupport Summary description for IEventTargetSupports. IKeyboardEvent The IKeyboardEvent interface provides specific contextual information associated with keyboard devices. IMouseEvent The IMouseEvent interface provides specific contextual information associated with Mouse events. IMutationEvent The IMutationEvent interface provides specific contextual information associated with Mutation events. IMutationNameEvent The IMutationNameEvent interface provides specific contextual information associated with Mutation name event types. ITextEvent The ITextEvent interface provides specific contextual information associated with Text Events. ITimeEvent This interface, defined in SMIL Animation: Supported interfaces, provides specific contextual information associated with Time events. IUiEvent The IUiEvent interface provides specific contextual information associated with User Interface events. Enums AttrChangeType An integer indicating in which way the attribute was changed. EventExceptionCode An integer indicating the type of error generated. EventPhase An integer indicating which phase of the event flow is being processed as defined in DOM event flow. KeyLocationCode Delegates EventListener The EventListener delegate is the primary way for handling events."
  },
  "api/SharpVectors.Dom.ExternalResourcesAccessModes.html": {
    "href": "api/SharpVectors.Dom.ExternalResourcesAccessModes.html",
    "title": "Enum ExternalResourcesAccessModes | SharpVectors Documentation",
    "keywords": "Enum ExternalResourcesAccessModes Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll This provides possible options to controls how external resources will be handled. public enum ExternalResourcesAccessModes Fields Allow = 0 An option that allows access of external resources. Ignore = 1 An option that ignores access of external resources. ThrowError = 2 An option that throws error on access of a external resource."
  },
  "api/SharpVectors.Dom.IAttribute.OwnerElement.html": {
    "href": "api/SharpVectors.Dom.IAttribute.OwnerElement.html",
    "title": "Property OwnerElement | SharpVectors Documentation",
    "keywords": "Property OwnerElement Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll OwnerElement XmlElement OwnerElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.IAttribute.Specified.html": {
    "href": "api/SharpVectors.Dom.IAttribute.Specified.html",
    "title": "Property Specified | SharpVectors Documentation",
    "keywords": "Property Specified Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Specified bool Specified { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.IAttribute.html": {
    "href": "api/SharpVectors.Dom.IAttribute.html",
    "title": "Interface IAttribute | SharpVectors Documentation",
    "keywords": "Interface IAttribute Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Summary description for IAttribute. public interface IAttribute : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties OwnerElement Specified"
  },
  "api/SharpVectors.Dom.ICDataSection.html": {
    "href": "api/SharpVectors.Dom.ICDataSection.html",
    "title": "Interface ICDataSection | SharpVectors Documentation",
    "keywords": "Interface ICDataSection Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Summary description for ICDataSection. public interface ICDataSection : ICharacterData, INode, IXmlNode Inherited Members ICharacterData.Data ICharacterData.Length ICharacterData.AppendData(string) ICharacterData.DeleteData(int, int) ICharacterData.InsertData(int, string) ICharacterData.ReplaceData(int, int, string) ICharacterData.Substring(int, int) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.ICharacterData.AppendData.html": {
    "href": "api/SharpVectors.Dom.ICharacterData.AppendData.html",
    "title": "Method AppendData | SharpVectors Documentation",
    "keywords": "Method AppendData Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll AppendData(string) Appends the specified string to the end of the character data of the node. void AppendData(string strData) Parameters strData string The string to insert into the existing string."
  },
  "api/SharpVectors.Dom.ICharacterData.Data.html": {
    "href": "api/SharpVectors.Dom.ICharacterData.Data.html",
    "title": "Property Data | SharpVectors Documentation",
    "keywords": "Property Data Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Data Contains the data of the node. string Data { get; set; } Property Value string The data of the node."
  },
  "api/SharpVectors.Dom.ICharacterData.DeleteData.html": {
    "href": "api/SharpVectors.Dom.ICharacterData.DeleteData.html",
    "title": "Method DeleteData | SharpVectors Documentation",
    "keywords": "Method DeleteData Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll DeleteData(int, int) Removes a range of characters from the node. void DeleteData(int offset, int count) Parameters offset int The position within the string to start deleting. count int The number of characters to delete."
  },
  "api/SharpVectors.Dom.ICharacterData.InsertData.html": {
    "href": "api/SharpVectors.Dom.ICharacterData.InsertData.html",
    "title": "Method InsertData | SharpVectors Documentation",
    "keywords": "Method InsertData Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll InsertData(int, string) Inserts the specified string at the specified character offset. void InsertData(int offset, string strData) Parameters offset int The position within the string to insert the supplied string data. strData string The string data that is to be inserted into the existing string."
  },
  "api/SharpVectors.Dom.ICharacterData.Length.html": {
    "href": "api/SharpVectors.Dom.ICharacterData.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Length Gets the length of the data, in characters. int Length { get; } Property Value int The length, in characters, of the string in the Data property. The length may be zero; that is, ICharacterData nodes can be empty."
  },
  "api/SharpVectors.Dom.ICharacterData.ReplaceData.html": {
    "href": "api/SharpVectors.Dom.ICharacterData.ReplaceData.html",
    "title": "Method ReplaceData | SharpVectors Documentation",
    "keywords": "Method ReplaceData Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll ReplaceData(int, int, string) Replaces the specified number of characters starting at the specified offset with the specified string. void ReplaceData(int offset, int count, string strData) Parameters offset int The position within the string to start replacing. count int The number of characters to replace. strData string The new data that replaces the old string data."
  },
  "api/SharpVectors.Dom.ICharacterData.Substring.html": {
    "href": "api/SharpVectors.Dom.ICharacterData.Substring.html",
    "title": "Method Substring | SharpVectors Documentation",
    "keywords": "Method Substring Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Substring(int, int) Retrieves a substring of the full string from the specified range. string Substring(int offset, int count) Parameters offset int The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data. count int The number of characters to retrieve. Returns string The substring corresponding to the specified range."
  },
  "api/SharpVectors.Dom.ICharacterData.html": {
    "href": "api/SharpVectors.Dom.ICharacterData.html",
    "title": "Interface ICharacterData | SharpVectors Documentation",
    "keywords": "Interface ICharacterData Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Provides text manipulation methods that are used by several classes. public interface ICharacterData : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties Data Contains the data of the node. Length Gets the length of the data, in characters. Methods AppendData(string) Appends the specified string to the end of the character data of the node. DeleteData(int, int) Removes a range of characters from the node. InsertData(int, string) Inserts the specified string at the specified character offset. ReplaceData(int, int, string) Replaces the specified number of characters starting at the specified offset with the specified string. Substring(int, int) Retrieves a substring of the full string from the specified range."
  },
  "api/SharpVectors.Dom.IComment.html": {
    "href": "api/SharpVectors.Dom.IComment.html",
    "title": "Interface IComment | SharpVectors Documentation",
    "keywords": "Interface IComment Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Summary description for IComment. public interface IComment : ICharacterData, INode, IXmlNode Inherited Members ICharacterData.Data ICharacterData.Length ICharacterData.AppendData(string) ICharacterData.DeleteData(int, int) ICharacterData.InsertData(int, string) ICharacterData.ReplaceData(int, int, string) ICharacterData.Substring(int, int) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.IDocument.CanAccessExternalResources.html": {
    "href": "api/SharpVectors.Dom.IDocument.CanAccessExternalResources.html",
    "title": "Method CanAccessExternalResources | SharpVectors Documentation",
    "keywords": "Method CanAccessExternalResources Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CanAccessExternalResources(string) Check if the Document allows access of external resource bool CanAccessExternalResources(string resourcesUri) Parameters resourcesUri string the URI to the external resource Returns bool This returns true if access of external resource is allowed; otherwise, it return false. CanAccessExternalResources(Uri) bool CanAccessExternalResources(Uri resourcesUri) Parameters resourcesUri Uri Returns bool"
  },
  "api/SharpVectors.Dom.IDocument.CreateAttribute.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateAttribute.html",
    "title": "Method CreateAttribute | SharpVectors Documentation",
    "keywords": "Method CreateAttribute Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateAttribute(string) IAttribute CreateAttribute(string name) Parameters name string Returns IAttribute"
  },
  "api/SharpVectors.Dom.IDocument.CreateAttributeNs.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateAttributeNs.html",
    "title": "Method CreateAttributeNs | SharpVectors Documentation",
    "keywords": "Method CreateAttributeNs Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateAttributeNs(string, string) IAttribute CreateAttributeNs(string namespaceUri, string qualifiedName) Parameters namespaceUri string qualifiedName string Returns IAttribute"
  },
  "api/SharpVectors.Dom.IDocument.CreateCDataSection.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateCDataSection.html",
    "title": "Method CreateCDataSection | SharpVectors Documentation",
    "keywords": "Method CreateCDataSection Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateCDataSection(string) ICDataSection CreateCDataSection(string data) Parameters data string Returns ICDataSection"
  },
  "api/SharpVectors.Dom.IDocument.CreateComment.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateComment.html",
    "title": "Method CreateComment | SharpVectors Documentation",
    "keywords": "Method CreateComment Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateComment(string) IComment CreateComment(string data) Parameters data string Returns IComment"
  },
  "api/SharpVectors.Dom.IDocument.CreateDocumentFragment.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateDocumentFragment.html",
    "title": "Method CreateDocumentFragment | SharpVectors Documentation",
    "keywords": "Method CreateDocumentFragment Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateDocumentFragment() IDocumentFragment CreateDocumentFragment() Returns IDocumentFragment"
  },
  "api/SharpVectors.Dom.IDocument.CreateElement.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateElement.html",
    "title": "Method CreateElement | SharpVectors Documentation",
    "keywords": "Method CreateElement Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateElement(string) IElement CreateElement(string tagName) Parameters tagName string Returns IElement"
  },
  "api/SharpVectors.Dom.IDocument.CreateElementNs.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateElementNs.html",
    "title": "Method CreateElementNs | SharpVectors Documentation",
    "keywords": "Method CreateElementNs Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateElementNs(string, string) IElement CreateElementNs(string namespaceUri, string qualifiedName) Parameters namespaceUri string qualifiedName string Returns IElement"
  },
  "api/SharpVectors.Dom.IDocument.CreateEntityReference.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateEntityReference.html",
    "title": "Method CreateEntityReference | SharpVectors Documentation",
    "keywords": "Method CreateEntityReference Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateEntityReference(string) IEntityReference CreateEntityReference(string name) Parameters name string Returns IEntityReference"
  },
  "api/SharpVectors.Dom.IDocument.CreateProcessingInstruction.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateProcessingInstruction.html",
    "title": "Method CreateProcessingInstruction | SharpVectors Documentation",
    "keywords": "Method CreateProcessingInstruction Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateProcessingInstruction(string, string) IProcessingInstruction CreateProcessingInstruction(string target, string data) Parameters target string data string Returns IProcessingInstruction"
  },
  "api/SharpVectors.Dom.IDocument.CreateTextNode.html": {
    "href": "api/SharpVectors.Dom.IDocument.CreateTextNode.html",
    "title": "Method CreateTextNode | SharpVectors Documentation",
    "keywords": "Method CreateTextNode Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateTextNode(string) IText CreateTextNode(string data) Parameters data string Returns IText"
  },
  "api/SharpVectors.Dom.IDocument.Doctype.html": {
    "href": "api/SharpVectors.Dom.IDocument.Doctype.html",
    "title": "Property Doctype | SharpVectors Documentation",
    "keywords": "Property Doctype Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Doctype IDocumentType Doctype { get; } Property Value IDocumentType"
  },
  "api/SharpVectors.Dom.IDocument.DocumentElement.html": {
    "href": "api/SharpVectors.Dom.IDocument.DocumentElement.html",
    "title": "Property DocumentElement | SharpVectors Documentation",
    "keywords": "Property DocumentElement Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll DocumentElement IElement DocumentElement { get; } Property Value IElement"
  },
  "api/SharpVectors.Dom.IDocument.GetElementById.html": {
    "href": "api/SharpVectors.Dom.IDocument.GetElementById.html",
    "title": "Method GetElementById | SharpVectors Documentation",
    "keywords": "Method GetElementById Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll GetElementById(string) IElement GetElementById(string elementId) Parameters elementId string Returns IElement"
  },
  "api/SharpVectors.Dom.IDocument.GetElementsByTagName.html": {
    "href": "api/SharpVectors.Dom.IDocument.GetElementsByTagName.html",
    "title": "Method GetElementsByTagName | SharpVectors Documentation",
    "keywords": "Method GetElementsByTagName Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll GetElementsByTagName(string) INodeList GetElementsByTagName(string tagname) Parameters tagname string Returns INodeList"
  },
  "api/SharpVectors.Dom.IDocument.GetElementsByTagNameNs.html": {
    "href": "api/SharpVectors.Dom.IDocument.GetElementsByTagNameNs.html",
    "title": "Method GetElementsByTagNameNs | SharpVectors Documentation",
    "keywords": "Method GetElementsByTagNameNs Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll GetElementsByTagNameNs(string, string) INodeList GetElementsByTagNameNs(string namespaceURI, string localName) Parameters namespaceURI string localName string Returns INodeList"
  },
  "api/SharpVectors.Dom.IDocument.Implementation.html": {
    "href": "api/SharpVectors.Dom.IDocument.Implementation.html",
    "title": "Property Implementation | SharpVectors Documentation",
    "keywords": "Property Implementation Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Implementation IDomImplementation Implementation { get; } Property Value IDomImplementation"
  },
  "api/SharpVectors.Dom.IDocument.ImportNode.html": {
    "href": "api/SharpVectors.Dom.IDocument.ImportNode.html",
    "title": "Method ImportNode | SharpVectors Documentation",
    "keywords": "Method ImportNode Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll ImportNode(INode, bool) INode ImportNode(INode importedNode, bool deep) Parameters importedNode INode deep bool Returns INode"
  },
  "api/SharpVectors.Dom.IDocument.html": {
    "href": "api/SharpVectors.Dom.IDocument.html",
    "title": "Interface IDocument | SharpVectors Documentation",
    "keywords": "Interface IDocument Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll public interface IDocument : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties Doctype DocumentElement Implementation Methods CanAccessExternalResources(string) Check if the Document allows access of external resource CanAccessExternalResources(Uri) CreateAttribute(string) CreateAttributeNs(string, string) CreateCDataSection(string) CreateComment(string) CreateDocumentFragment() CreateElement(string) CreateElementNs(string, string) CreateEntityReference(string) CreateProcessingInstruction(string, string) CreateTextNode(string) GetElementById(string) GetElementsByTagName(string) GetElementsByTagNameNs(string, string) ImportNode(INode, bool)"
  },
  "api/SharpVectors.Dom.IDocumentFragment.html": {
    "href": "api/SharpVectors.Dom.IDocumentFragment.html",
    "title": "Interface IDocumentFragment | SharpVectors Documentation",
    "keywords": "Interface IDocumentFragment Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Represents a lightweight object that is useful for tree insert operations. public interface IDocumentFragment : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.IDocumentType.Entities.html": {
    "href": "api/SharpVectors.Dom.IDocumentType.Entities.html",
    "title": "Property Entities | SharpVectors Documentation",
    "keywords": "Property Entities Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Entities Gets the collection of XmlEntity nodes declared in the document type declaration. XmlNamedNodeMap Entities { get; } Property Value XmlNamedNodeMap An XmlNamedNodeMap containing the XmlEntity nodes. The returned XmlNamedNodeMap is read-only."
  },
  "api/SharpVectors.Dom.IDocumentType.InternalSubset.html": {
    "href": "api/SharpVectors.Dom.IDocumentType.InternalSubset.html",
    "title": "Property InternalSubset | SharpVectors Documentation",
    "keywords": "Property InternalSubset Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll InternalSubset Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration. string InternalSubset { get; } Property Value string The DTD internal subset on the DOCTYPE. If there is no DTD internal subset, Empty is returned."
  },
  "api/SharpVectors.Dom.IDocumentType.Notations.html": {
    "href": "api/SharpVectors.Dom.IDocumentType.Notations.html",
    "title": "Property Notations | SharpVectors Documentation",
    "keywords": "Property Notations Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Notations Gets the collection of XmlNotation nodes present in the document type declaration. XmlNamedNodeMap Notations { get; } Property Value XmlNamedNodeMap An XmlNamedNodeMap containing the XmlNotation nodes. The returned XmlNamedNodeMap is read-only."
  },
  "api/SharpVectors.Dom.IDocumentType.PublicId.html": {
    "href": "api/SharpVectors.Dom.IDocumentType.PublicId.html",
    "title": "Property PublicId | SharpVectors Documentation",
    "keywords": "Property PublicId Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll PublicId Gets the value of the public identifier on the DOCTYPE declaration. string PublicId { get; } Property Value string The public identifier on the DOCTYPE. If there is no public identifier, null is returned."
  },
  "api/SharpVectors.Dom.IDocumentType.SystemId.html": {
    "href": "api/SharpVectors.Dom.IDocumentType.SystemId.html",
    "title": "Property SystemId | SharpVectors Documentation",
    "keywords": "Property SystemId Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll SystemId Gets the value of the system identifier on the DOCTYPE declaration. string SystemId { get; } Property Value string The system identifier on the DOCTYPE. If there is no system identifier, null is returned."
  },
  "api/SharpVectors.Dom.IDocumentType.html": {
    "href": "api/SharpVectors.Dom.IDocumentType.html",
    "title": "Interface IDocumentType | SharpVectors Documentation",
    "keywords": "Interface IDocumentType Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll This represents the document type declaration. public interface IDocumentType : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties Entities Gets the collection of XmlEntity nodes declared in the document type declaration. InternalSubset Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration. Notations Gets the collection of XmlNotation nodes present in the document type declaration. PublicId Gets the value of the public identifier on the DOCTYPE declaration. SystemId Gets the value of the system identifier on the DOCTYPE declaration. See Also XmlDocumentType"
  },
  "api/SharpVectors.Dom.IDomConfiguration.CanSetParameter.html": {
    "href": "api/SharpVectors.Dom.IDomConfiguration.CanSetParameter.html",
    "title": "Method CanSetParameter | SharpVectors Documentation",
    "keywords": "Method CanSetParameter Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CanSetParameter(string, object) Check if setting a parameter to a specific value is supported. bool CanSetParameter(string name, object value) Parameters name string The name of the parameter to check. value object An object. If null, the returned value is true. Returns bool Returns true if the parameter could be successfully set to the specified value, or false if the parameter is not recognized or the requested value is not supported. This does not change the current value of the parameter itself."
  },
  "api/SharpVectors.Dom.IDomConfiguration.GetParameter.html": {
    "href": "api/SharpVectors.Dom.IDomConfiguration.GetParameter.html",
    "title": "Method GetParameter | SharpVectors Documentation",
    "keywords": "Method GetParameter Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll GetParameter(string) Gets the value of the known parameter with the specified name. object GetParameter(string name) Parameters name string The name of the parameter. Returns object The current object associated with the specified parameter or null if no object has been associated or if the parameter is not supported."
  },
  "api/SharpVectors.Dom.IDomConfiguration.GetParameterNames.html": {
    "href": "api/SharpVectors.Dom.IDomConfiguration.GetParameterNames.html",
    "title": "Method GetParameterNames | SharpVectors Documentation",
    "keywords": "Method GetParameterNames Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll GetParameterNames() The list of the parameters supported by this IDomConfiguration object. ICollection<string> GetParameterNames() Returns ICollection<string> A collection specifying the names of the parameters."
  },
  "api/SharpVectors.Dom.IDomConfiguration.SetParameter.html": {
    "href": "api/SharpVectors.Dom.IDomConfiguration.SetParameter.html",
    "title": "Method SetParameter | SharpVectors Documentation",
    "keywords": "Method SetParameter Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll SetParameter(string, object) Sets the name and the value of a parameter. If the name is already set, the value is changed. void SetParameter(string name, object value) Parameters name string The name of the parameter to set. value object The value or null to unset the parameter."
  },
  "api/SharpVectors.Dom.IDomConfiguration.html": {
    "href": "api/SharpVectors.Dom.IDomConfiguration.html",
    "title": "Interface IDomConfiguration | SharpVectors Documentation",
    "keywords": "Interface IDomConfiguration Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll The IDomConfiguration interface represents the configuration of a document and maintains a table of recognized parameters. public interface IDomConfiguration Methods CanSetParameter(string, object) Check if setting a parameter to a specific value is supported. GetParameter(string) Gets the value of the known parameter with the specified name. GetParameterNames() The list of the parameters supported by this IDomConfiguration object. SetParameter(string, object) Sets the name and the value of a parameter. If the name is already set, the value is changed. See Also DOMConfiguration"
  },
  "api/SharpVectors.Dom.IDomImplementation.CreateDocument.html": {
    "href": "api/SharpVectors.Dom.IDomImplementation.CreateDocument.html",
    "title": "Method CreateDocument | SharpVectors Documentation",
    "keywords": "Method CreateDocument Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateDocument(string, string, IDocumentType) Creates an XML IDocument object of the specified type with its document element. HTML-only DOM implementations do not need to implement this method. IDocument CreateDocument(string namespaceURI, string qualifiedName, IDocumentType doctype) Parameters namespaceURI string namespace URI of the document element to create. qualifiedName string qualified name of the document element to be created. doctype IDocumentType type of document to be created or null. When doctype is not null, its OwnerDocument attribute is set to the document being created. Returns IDocument A new IDocument object. Exceptions DomException INVALID_CHARACTER_ERR: Raised if the specified qualified name contains an illegal character. NAMESPACE_ERR: Raised if the qualifiedName is malformed, if the qualifiedName has a prefix and the namespaceURI is null, or if the qualifiedName has a prefix that is \"xml\" and the namespaceURI is different from https://www.w3.org/XML/1998/namespace. WRONG_DOCUMENT_ERR: Raised if doctype has already been used with a different document or was created from a different implementation."
  },
  "api/SharpVectors.Dom.IDomImplementation.CreateDocumentType.html": {
    "href": "api/SharpVectors.Dom.IDomImplementation.CreateDocumentType.html",
    "title": "Method CreateDocumentType | SharpVectors Documentation",
    "keywords": "Method CreateDocumentType Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CreateDocumentType(string, string, string) Creates an empty IDocumentType node. Entity declarations and notations are not made available. IDocumentType CreateDocumentType(string qualifiedName, string publicId, string systemId) Parameters qualifiedName string qualified name of the document type to be created. publicId string external subset public identifier. systemId string external subset system identifier. Returns IDocumentType A new IDocumentType node with OwnerDocument set to null. Remarks Entity reference expansions and default attribute additions do not occur. It is expected that a future version of the DOM will provide a way for populating a IDocumentType. HTML-only DOM implementations do not need to implement this method. Exceptions DomException INVALID_CHARACTER_ERR: Raised if the specified qualified name contains an illegal character. NAMESPACE_ERR: Raised if the qualifiedName is malformed."
  },
  "api/SharpVectors.Dom.IDomImplementation.HasFeature.html": {
    "href": "api/SharpVectors.Dom.IDomImplementation.HasFeature.html",
    "title": "Method HasFeature | SharpVectors Documentation",
    "keywords": "Method HasFeature Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll HasFeature(string, string) Test if the DOM implementation implements a specific feature. bool HasFeature(string feature, string version) Parameters feature string name of the feature to test (case-insensitive). The values used by DOM features are defined throughout the DOM Level 2 specifications and listed in the section. The name must be an XML name. To avoid possible conflicts, as a convention, names referring to features defined outside the DOM specification should be made unique by reversing the name of the Internet domain name of the person (or the organization that the person belongs to) who defines the feature, component by component, and using this as a prefix. For instance, the W3C SVG Working Group defines the feature \"org.w3c.dom.svg\". version string is the version number of the feature to test. In Level 2, the string can be either \"2.0\" or \"1.0\". If the version is not specified, supporting any version of the feature causes the method to return true. Returns bool true if the feature is implemented in the specified version, false otherwise."
  },
  "api/SharpVectors.Dom.IDomImplementation.html": {
    "href": "api/SharpVectors.Dom.IDomImplementation.html",
    "title": "Interface IDomImplementation | SharpVectors Documentation",
    "keywords": "Interface IDomImplementation Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll The IDomImplementation interface provides a number of methods for performing operations that are independent of any particular instance of the document object model. public interface IDomImplementation Methods CreateDocument(string, string, IDocumentType) Creates an XML IDocument object of the specified type with its document element. HTML-only DOM implementations do not need to implement this method. CreateDocumentType(string, string, string) Creates an empty IDocumentType node. Entity declarations and notations are not made available. HasFeature(string, string) Test if the DOM implementation implements a specific feature. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IDomTimeStamp.html": {
    "href": "api/SharpVectors.Dom.IDomTimeStamp.html",
    "title": "Interface IDomTimeStamp | SharpVectors Documentation",
    "keywords": "Interface IDomTimeStamp Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll The DOMTimeStamp type represents an absolute or relative number of milliseconds, depending on the specification in which it appears. public interface IDomTimeStamp See Also https://developer.mozilla.org/en-US/docs/Web/API/DOMTimeStamp"
  },
  "api/SharpVectors.Dom.IElement.html": {
    "href": "api/SharpVectors.Dom.IElement.html",
    "title": "Interface IElement | SharpVectors Documentation",
    "keywords": "Interface IElement Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll The IElement interface represents an element in an HTML or XML document. public interface IElement : IXmlElement, INode, IXmlNode Inherited Members IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Remarks Elements may have attributes associated with them; since the IElement interface inherits from INode, the generic INode interface attribute IAttribute may be used to retrieve the set of all attributes for an element. There are methods on the IElement interface to retrieve either an IAttribute object by name or an attribute value by name. In XML, where an attribute value may contain entity references, an IAttribute object should be retrieved to examine the possibly fairly complex sub-tree representing the attribute value. On the other hand, in HTML, where all attributes have simple string values, methods to directly access an attribute value can safely be used as a convenience.In DOM Level 2, the method Normalize() is inherited from the INode interface where it was moved. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IElementTimeControl.BeginElement.html": {
    "href": "api/SharpVectors.Dom.IElementTimeControl.BeginElement.html",
    "title": "Method BeginElement | SharpVectors Documentation",
    "keywords": "Method BeginElement Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll BeginElement() Creates a begin instance time for the current time. The new instance time is added to the begin instance times list. The behavior of this method is equivalent to BeginElementAt(0). void BeginElement()"
  },
  "api/SharpVectors.Dom.IElementTimeControl.BeginElementAt.html": {
    "href": "api/SharpVectors.Dom.IElementTimeControl.BeginElementAt.html",
    "title": "Method BeginElementAt | SharpVectors Documentation",
    "keywords": "Method BeginElementAt Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll BeginElementAt(float) Creates a begin instance time for the current time plus the specified offset. The new instance time is added to the begin instance times list. void BeginElementAt(float offset) Parameters offset float The offset from the current document time, in seconds, at which to begin the element."
  },
  "api/SharpVectors.Dom.IElementTimeControl.EndElement.html": {
    "href": "api/SharpVectors.Dom.IElementTimeControl.EndElement.html",
    "title": "Method EndElement | SharpVectors Documentation",
    "keywords": "Method EndElement Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll EndElement() Creates an end instance time for the current time. The new instance time is added to the end instance times list. The behavior of this method is equivalent to EndElementAt(0). void EndElement()"
  },
  "api/SharpVectors.Dom.IElementTimeControl.EndElementAt.html": {
    "href": "api/SharpVectors.Dom.IElementTimeControl.EndElementAt.html",
    "title": "Method EndElementAt | SharpVectors Documentation",
    "keywords": "Method EndElementAt Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll EndElementAt(float) Creates a end instance time for the current time plus the specified offset. The new instance time is added to the end instance times list. void EndElementAt(float offset) Parameters offset float The offset from the current document time, in seconds, at which to end the element."
  },
  "api/SharpVectors.Dom.IElementTimeControl.html": {
    "href": "api/SharpVectors.Dom.IElementTimeControl.html",
    "title": "Interface IElementTimeControl | SharpVectors Documentation",
    "keywords": "Interface IElementTimeControl Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll An SMIL animation interface to supports several methods for controlling the behavior of animation. public interface IElementTimeControl Methods BeginElement() Creates a begin instance time for the current time. The new instance time is added to the begin instance times list. The behavior of this method is equivalent to BeginElementAt(0). BeginElementAt(float) Creates a begin instance time for the current time plus the specified offset. The new instance time is added to the begin instance times list. EndElement() Creates an end instance time for the current time. The new instance time is added to the end instance times list. The behavior of this method is equivalent to EndElementAt(0). EndElementAt(float) Creates a end instance time for the current time plus the specified offset. The new instance time is added to the end instance times list."
  },
  "api/SharpVectors.Dom.IEntity.NotationName.html": {
    "href": "api/SharpVectors.Dom.IEntity.NotationName.html",
    "title": "Property NotationName | SharpVectors Documentation",
    "keywords": "Property NotationName Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll NotationName Gets the name of the optional NDATA attribute on the entity declaration. For unparsed entities, the name of the notation for the entity. For parsed entities, this is null. string NotationName { get; } Property Value string The name of the NDATA attribute. If there is no NDATA, null is returned."
  },
  "api/SharpVectors.Dom.IEntity.PublicId.html": {
    "href": "api/SharpVectors.Dom.IEntity.PublicId.html",
    "title": "Property PublicId | SharpVectors Documentation",
    "keywords": "Property PublicId Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll PublicId Gets the public identifier associated with the entity, if specified. If the public identifier was not specified, this is null. string PublicId { get; } Property Value string The public identifier on the entity. If there is no public identifier, null is returned."
  },
  "api/SharpVectors.Dom.IEntity.SystemId.html": {
    "href": "api/SharpVectors.Dom.IEntity.SystemId.html",
    "title": "Property SystemId | SharpVectors Documentation",
    "keywords": "Property SystemId Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll SystemId Gets the value of system identifier associated with the entity declaration, if specified. If the system identifier was not specified, this is null. string SystemId { get; } Property Value string The system identifier on the entity. If there is no system identifier, null is returned."
  },
  "api/SharpVectors.Dom.IEntity.html": {
    "href": "api/SharpVectors.Dom.IEntity.html",
    "title": "Interface IEntity | SharpVectors Documentation",
    "keywords": "Interface IEntity Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll This interface represents an entity, either parsed or unparsed, in an XML document. Note that this models the entity itself not the entity declaration. IEntity declaration modeling has been left for a later Level of the DOM specification. Represents an entity declaration, such as <!ENTITY... >. public interface IEntity : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Remarks The Name attribute that is inherited from INode contains the name of the entity. An XML processor may choose to completely expand entities before the structure model is passed to the DOM; in this case there will be no IEntityReference nodes in the document tree. XML does not mandate that a non-validating XML processor read and process entity declarations made in the external subset or declared in external parameter entities. This means that parsed entities declared in the external subset need not be expanded by some classes of applications, and that the replacement value of the entity may not be available. When the replacement value is available, the corresponding IEntity node's child list represents the structure of that replacement text. Otherwise, the child list is empty. The DOM Level 2 does not support editing IEntity nodes; if a user wants to make changes to the contents of an IEntity, every related IEntityReference node has to be replaced in the structure model by a clone of the IEntity's contents, and then the desired changes must be made to each of those clones instead. IEntity nodes and all their descendants are readonly. An IEntity node does not have any parent. If the entity contains an unbound namespace prefix, the NamespaceURI of the corresponding node in the IEntity node subtree is null. The same is true for IEntityReference nodes that refer to this entity, when they are created using the CreateEntityReference(string) method of the IDocument interface. The DOM Level 2 does not support any mechanism to resolve namespace prefixes. Properties NotationName Gets the name of the optional NDATA attribute on the entity declaration. For unparsed entities, the name of the notation for the entity. For parsed entities, this is null. PublicId Gets the public identifier associated with the entity, if specified. If the public identifier was not specified, this is null. SystemId Gets the value of system identifier associated with the entity declaration, if specified. If the system identifier was not specified, this is null. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IEntityReference.html": {
    "href": "api/SharpVectors.Dom.IEntityReference.html",
    "title": "Interface IEntityReference | SharpVectors Documentation",
    "keywords": "Interface IEntityReference Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll IEntityReference objects may be inserted into the structure model when an entity reference is in the source document, or when the user wishes to insert an entity reference. public interface IEntityReference : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Remarks Note that character references and references to predefined entities are considered to be expanded by the HTML or XML processor so that characters are represented by their Unicode equivalent rather than by an entity reference. Moreover, the XML processor may completely expand references to entities while building the structure model, instead of providing IEntityReference objects. If it does provide such objects, then for a given IEntityReference node, it may be that there is no IEntity node representing the referenced entity. If such an IEntity exists, then the subtree of the IEntityReference node is in general a copy of the IEntity node subtree. However, this may not be true when an entity contains an unbound namespace prefix. In such a case, because the namespace prefix resolution depends on where the entity reference is, the descendants of the IEntityReference node may be bound to different namespace URIs. As for IEntity nodes, IEntityReference nodes and all their descendants are readonly. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.INamedNodeMap.Count.html": {
    "href": "api/SharpVectors.Dom.INamedNodeMap.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Count Gets the number of nodes in the INamedNodeMap. int Count { get; } Property Value int The number of nodes."
  },
  "api/SharpVectors.Dom.INamedNodeMap.GetNamedItem.html": {
    "href": "api/SharpVectors.Dom.INamedNodeMap.GetNamedItem.html",
    "title": "Method GetNamedItem | SharpVectors Documentation",
    "keywords": "Method GetNamedItem Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll GetNamedItem(string) Retrieves an XmlNode specified by name. XmlNode GetNamedItem(string name) Parameters name string The qualified name of the node to retrieve. It is matched against the Name property of the matching node. Returns XmlNode An XmlNode with the specified name or null if a matching node is not found. GetNamedItem(string, string) Retrieves a node with the matching LocalName and NamespaceURI. XmlNode GetNamedItem(string localName, string namespaceURI) Parameters localName string The local name of the node to retrieve. namespaceURI string The namespace Uniform Resource Identifier (URI) of the node to retrieve. Returns XmlNode An XmlNode with the matching local name and namespace URI or null if a matching node was not found."
  },
  "api/SharpVectors.Dom.INamedNodeMap.Item.html": {
    "href": "api/SharpVectors.Dom.INamedNodeMap.Item.html",
    "title": "Method Item | SharpVectors Documentation",
    "keywords": "Method Item Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Item(int) Retrieves the node at the specified index in the INamedNodeMap. XmlNode Item(int index) Parameters index int The index position of the node to retrieve from the INamedNodeMap. The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is Count -1. Returns XmlNode The XmlNode at the specified index. If index is less than 0 or greater than or equal to the Count property, null is returned."
  },
  "api/SharpVectors.Dom.INamedNodeMap.RemoveNamedItem.html": {
    "href": "api/SharpVectors.Dom.INamedNodeMap.RemoveNamedItem.html",
    "title": "Method RemoveNamedItem | SharpVectors Documentation",
    "keywords": "Method RemoveNamedItem Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll RemoveNamedItem(string) Removes the node from the INamedNodeMap. XmlNode RemoveNamedItem(string name) Parameters name string The qualified name of the node to remove. The name is matched against the Name property of the matching node. Returns XmlNode The XmlNode removed from this INamedNodeMap or null if a matching node was not found. RemoveNamedItem(string, string) Removes a node with the matching LocalName and NamespaceURI. XmlNode RemoveNamedItem(string localName, string namespaceURI) Parameters localName string The local name of the node to remove. namespaceURI string The namespace URI of the node to remove. Returns XmlNode The XmlNode removed or null if a matching node was not found."
  },
  "api/SharpVectors.Dom.INamedNodeMap.SetNamedItem.html": {
    "href": "api/SharpVectors.Dom.INamedNodeMap.SetNamedItem.html",
    "title": "Method SetNamedItem | SharpVectors Documentation",
    "keywords": "Method SetNamedItem Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll SetNamedItem(XmlNode) Adds an XmlNode using its Name property XmlNode SetNamedItem(XmlNode node) Parameters node XmlNode An XmlNode to store in the INamedNodeMap. If a node with that name is already present in the map, it is replaced by the new one. Returns XmlNode If the node replaces an existing node with the same name, the old node is returned; otherwise, null is returned. Exceptions ArgumentException The node was created from a different XmlDocument than the one that created the INamedNodeMap; or the INamedNodeMap is read-only."
  },
  "api/SharpVectors.Dom.INamedNodeMap.html": {
    "href": "api/SharpVectors.Dom.INamedNodeMap.html",
    "title": "Interface INamedNodeMap | SharpVectors Documentation",
    "keywords": "Interface INamedNodeMap Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Represents a collection of nodes that can be accessed by name or index. Objects implementing the INamedNodeMap interface are used to represent collections of nodes that can be accessed by name. public interface INamedNodeMap : IEnumerable Inherited Members IEnumerable.GetEnumerator() Remarks Note that INamedNodeMap does not inherit from INodeList; INamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing INamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a INamedNodeMap, and does not imply that the DOM specifies an order to these Nodes. INamedNodeMap objects in the DOM are live. Properties Count Gets the number of nodes in the INamedNodeMap. Methods GetNamedItem(string) Retrieves an XmlNode specified by name. GetNamedItem(string, string) Retrieves a node with the matching LocalName and NamespaceURI. Item(int) Retrieves the node at the specified index in the INamedNodeMap. RemoveNamedItem(string) Removes the node from the INamedNodeMap. RemoveNamedItem(string, string) Removes a node with the matching LocalName and NamespaceURI. SetNamedItem(XmlNode) Adds an XmlNode using its Name property See Also Document Object Model (DOM) Level 2 Core Specification XmlAttributeCollection"
  },
  "api/SharpVectors.Dom.INode.html": {
    "href": "api/SharpVectors.Dom.INode.html",
    "title": "Interface INode | SharpVectors Documentation",
    "keywords": "Interface INode Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll The INode interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. public interface INode : IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Remarks While all objects implementing the INode interface expose methods for dealing with children, not all objects implementing the INode interface may have children. For example, IText nodes may not have children, and adding children to such nodes results in a DomException being raised. The attributes Name, Value and Attributes are included as a mechanism to get at node information without casting down to the specific derived interface. In cases where there is no obvious mapping of these attributes for a specific NodeType (e.g., Value for an IElement or Attributes for a IComment), this returns null. Note that the specialized interfaces may contain additional and more convenient mechanisms to get and set the relevant information. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.INodeList.Count.html": {
    "href": "api/SharpVectors.Dom.INodeList.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Count Gets the number of nodes in the list. The range of valid child node indices is 0 to Count-1 inclusive. ulong Count { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.INodeList.Item.html": {
    "href": "api/SharpVectors.Dom.INodeList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll this[ulong] Gets the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null. INode this[ulong index] { get; } Parameters index ulong into the collection. Property Value INode The node at the indexth position in the INodeList, or null if that is not a valid index."
  },
  "api/SharpVectors.Dom.INodeList.html": {
    "href": "api/SharpVectors.Dom.INodeList.html",
    "title": "Interface INodeList | SharpVectors Documentation",
    "keywords": "Interface INodeList Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll The INodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. INodeList objects in the DOM are live. The items in the INodeList are accessible via an integral index, starting from 0. public interface INodeList Properties Count Gets the number of nodes in the list. The range of valid child node indices is 0 to Count-1 inclusive. this[ulong] Gets the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.INotation.PublicId.html": {
    "href": "api/SharpVectors.Dom.INotation.PublicId.html",
    "title": "Property PublicId | SharpVectors Documentation",
    "keywords": "Property PublicId Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll PublicId Gets the value of the public identifier on the notation declaration. If the public identifier was not specified, this is null. string PublicId { get; } Property Value string The public identifier on the notation. If there is no public identifier, null is returned."
  },
  "api/SharpVectors.Dom.INotation.SystemId.html": {
    "href": "api/SharpVectors.Dom.INotation.SystemId.html",
    "title": "Property SystemId | SharpVectors Documentation",
    "keywords": "Property SystemId Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll SystemId Gets the value of the system identifier on the notation declaration. If the system identifier was not specified, this is null. string SystemId { get; } Property Value string The system identifier on the notation. If there is no system identifier, null is returned."
  },
  "api/SharpVectors.Dom.INotation.html": {
    "href": "api/SharpVectors.Dom.INotation.html",
    "title": "Interface INotation | SharpVectors Documentation",
    "keywords": "Interface INotation Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll This interface represents a notation declared in the DTD. A notation either declares, by name, the format of an unparsed entity (see section 4.7 of the XML 1.0 specification ), or is used for formal declaration of processing instruction targets (see section 2.6 of the XML 1.0 specification ). The Name attribute inherited from INode is set to the declared name of the notation. The DOM Level 1 does not support editing INotation nodes; they are therefore readonly. A INotation node does not have any parent. public interface INotation : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties PublicId Gets the value of the public identifier on the notation declaration. If the public identifier was not specified, this is null. SystemId Gets the value of the system identifier on the notation declaration. If the system identifier was not specified, this is null. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IProcessingInstruction.Data.html": {
    "href": "api/SharpVectors.Dom.IProcessingInstruction.Data.html",
    "title": "Property Data | SharpVectors Documentation",
    "keywords": "Property Data Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Data Gets or sets the content of the processing instruction, excluding the target. string Data { get; set; } Property Value string The content of the processing instruction, excluding the target."
  },
  "api/SharpVectors.Dom.IProcessingInstruction.Target.html": {
    "href": "api/SharpVectors.Dom.IProcessingInstruction.Target.html",
    "title": "Property Target | SharpVectors Documentation",
    "keywords": "Property Target Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Target Gets the target of the processing instruction. string Target { get; } Property Value string The target of the processing instruction. Remarks The target of this processing instruction. XML defines this as being the first token following the markup that begins the processing instruction."
  },
  "api/SharpVectors.Dom.IProcessingInstruction.html": {
    "href": "api/SharpVectors.Dom.IProcessingInstruction.html",
    "title": "Interface IProcessingInstruction | SharpVectors Documentation",
    "keywords": "Interface IProcessingInstruction Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document. public interface IProcessingInstruction : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties Data Gets or sets the content of the processing instruction, excluding the target. Target Gets the target of the processing instruction. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IText.SplitText.html": {
    "href": "api/SharpVectors.Dom.IText.SplitText.html",
    "title": "Method SplitText | SharpVectors Documentation",
    "keywords": "Method SplitText Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll SplitText(int) Splits the node into two nodes at the specified offset, keeping both in the tree as siblings. XmlText SplitText(int offset) Parameters offset int The offset at which to split the node. Returns XmlText The new node."
  },
  "api/SharpVectors.Dom.IText.html": {
    "href": "api/SharpVectors.Dom.IText.html",
    "title": "Interface IText | SharpVectors Documentation",
    "keywords": "Interface IText Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Represents the text content of an element or attribute. public interface IText : ICharacterData, INode, IXmlNode Inherited Members ICharacterData.Data ICharacterData.Length ICharacterData.AppendData(string) ICharacterData.DeleteData(int, int) ICharacterData.InsertData(int, string) ICharacterData.ReplaceData(int, int, string) ICharacterData.Substring(int, int) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Methods SplitText(int) Splits the node into two nodes at the specified offset, keeping both in the tree as siblings."
  },
  "api/SharpVectors.Dom.IXmlElement.GetAttribute.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.GetAttribute.html",
    "title": "Method GetAttribute | SharpVectors Documentation",
    "keywords": "Method GetAttribute Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll GetAttribute(string) Returns the value for the attribute with the specified name. string GetAttribute(string name) Parameters name string The name of the attribute to retrieve. This is a qualified name. It is matched against the Name property of the matching node. Returns string The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value. GetAttribute(string, string) Returns the value for the attribute with the specified local name and namespace URI. string GetAttribute(string localName, string namespaceURI) Parameters localName string The local name of the attribute to retrieve. namespaceURI string The namespace URI of the attribute to retrieve. Returns string The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value."
  },
  "api/SharpVectors.Dom.IXmlElement.GetAttributeNode.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.GetAttributeNode.html",
    "title": "Method GetAttributeNode | SharpVectors Documentation",
    "keywords": "Method GetAttributeNode Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll GetAttributeNode(string) Returns the XmlAttribute with the specified name. XmlAttribute GetAttributeNode(string name) Parameters name string The name of the attribute to retrieve. This is a qualified name. It is matched against the Name property of the matching node. Returns XmlAttribute The specified XmlAttribute or null if a matching attribute was not found. GetAttributeNode(string, string) Returns the XmlAttribute with the specified local name and namespace URI. XmlAttribute GetAttributeNode(string localName, string namespaceURI) Parameters localName string The local name of the attribute. namespaceURI string The namespace URI of the attribute. Returns XmlAttribute The specified XmlAttribute or null if a matching attribute was not found."
  },
  "api/SharpVectors.Dom.IXmlElement.GetElementsByTagName.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.GetElementsByTagName.html",
    "title": "Method GetElementsByTagName | SharpVectors Documentation",
    "keywords": "Method GetElementsByTagName Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll GetElementsByTagName(string) Returns an XmlNodeList containing a list of all descendant elements that match the specified Name. XmlNodeList GetElementsByTagName(string name) Parameters name string The name tag to match. This is a qualified name. It is matched against the Name property of the matching node. The asterisk (*) is a special value that matches all tags. Returns XmlNodeList An XmlNodeList containing a list of all matching nodes. See Also INodeList GetElementsByTagName(string, string) Returns an XmlNodeList containing a list of all descendant elements that match the specified LocalName and NamespaceURI. XmlNodeList GetElementsByTagName(string localName, string namespaceURI) Parameters localName string The local name to match. The asterisk (*) is a special value that matches all tags. namespaceURI string The namespace URI to match. Returns XmlNodeList An XmlNodeList containing a list of all matching nodes. See Also INodeList"
  },
  "api/SharpVectors.Dom.IXmlElement.HasAttribute.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.HasAttribute.html",
    "title": "Method HasAttribute | SharpVectors Documentation",
    "keywords": "Method HasAttribute Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll HasAttribute(string) Determines whether the current node has an attribute with the specified name. bool HasAttribute(string name) Parameters name string The name of the attribute to find. This is a qualified name. It is matched against the Name property of the matching node. Returns bool true if the current node has the specified attribute; otherwise, false. HasAttribute(string, string) Determines whether the current node has an attribute with the specified local name and namespace URI. bool HasAttribute(string localName, string namespaceURI) Parameters localName string The local name of the attribute to find. namespaceURI string The namespace URI of the attribute to find. Returns bool true if the current node has the specified attribute; otherwise, false."
  },
  "api/SharpVectors.Dom.IXmlElement.HasAttributes.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.HasAttributes.html",
    "title": "Property HasAttributes | SharpVectors Documentation",
    "keywords": "Property HasAttributes Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll HasAttributes Gets a value indicating whether this node (if it is an element) has any attributes. bool HasAttributes { get; } Property Value bool true if this node has any attributes, false otherwise."
  },
  "api/SharpVectors.Dom.IXmlElement.RemoveAttribute.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.RemoveAttribute.html",
    "title": "Method RemoveAttribute | SharpVectors Documentation",
    "keywords": "Method RemoveAttribute Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll RemoveAttribute(string) Removes an attribute by name. void RemoveAttribute(string name) Parameters name string The name of the attribute to remove.This is a qualified name. It is matched against the Name property of the matching node. RemoveAttribute(string, string) Removes an attribute with the specified local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced). void RemoveAttribute(string localName, string namespaceURI) Parameters localName string The local name of the attribute to remove. namespaceURI string The namespace URI of the attribute to remove."
  },
  "api/SharpVectors.Dom.IXmlElement.RemoveAttributeNode.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.RemoveAttributeNode.html",
    "title": "Method RemoveAttributeNode | SharpVectors Documentation",
    "keywords": "Method RemoveAttributeNode Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll RemoveAttributeNode(XmlAttribute) Removes the specified XmlAttribute. XmlAttribute RemoveAttributeNode(XmlAttribute oldAttr) Parameters oldAttr XmlAttribute The XmlAttribute node to remove. If the removed attribute has a default value, it is immediately replaced. Returns XmlAttribute The removed XmlAttribute or null if oldAttr is not an attribute node of the XmlElement . RemoveAttributeNode(string, string) Removes the XmlAttribute specified by the local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced). XmlAttribute RemoveAttributeNode(string localName, string namespaceURI) Parameters localName string The local name of the attribute. namespaceURI string The namespace URI of the attribute. Returns XmlAttribute The removed XmlAttribute or null if the XmlElement does not have a matching attribute node."
  },
  "api/SharpVectors.Dom.IXmlElement.SetAttribute.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.SetAttribute.html",
    "title": "Method SetAttribute | SharpVectors Documentation",
    "keywords": "Method SetAttribute Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll SetAttribute(string, string) Sets the value of the attribute with the specified name. void SetAttribute(string name, string value) Parameters name string The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components. value string The value to set for the attribute. SetAttribute(string, string, string) Sets the value of the attribute with the specified local name and namespace URI. string SetAttribute(string qualifiedName, string namespaceURI, string value) Parameters qualifiedName string The local name of the attribute. namespaceURI string The namespace URI of the attribute. value string The value to set for the attribute. Returns string The attribute value."
  },
  "api/SharpVectors.Dom.IXmlElement.SetAttributeNode.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.SetAttributeNode.html",
    "title": "Method SetAttributeNode | SharpVectors Documentation",
    "keywords": "Method SetAttributeNode Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll SetAttributeNode(string, string) Adds the specified XmlAttribute. XmlAttribute SetAttributeNode(string localName, string namespaceURI) Parameters localName string The local name of the attribute. namespaceURI string The namespace URI of the attribute. Returns XmlAttribute The XmlAttribute to add. SetAttributeNode(XmlAttribute) Adds the specified XmlAttribute. XmlAttribute SetAttributeNode(XmlAttribute newAttr) Parameters newAttr XmlAttribute The XmlAttribute node to add to the attribute collection for this element. Returns XmlAttribute If the attribute replaces an existing attribute with the same name, the old XmlAttribute is returned; otherwise, null is returned."
  },
  "api/SharpVectors.Dom.IXmlElement.html": {
    "href": "api/SharpVectors.Dom.IXmlElement.html",
    "title": "Interface IXmlElement | SharpVectors Documentation",
    "keywords": "Interface IXmlElement Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll The IElement interface represents an element in an HTML or XML document. public interface IXmlElement : INode, IXmlNode Inherited Members IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Remarks Elements may have attributes associated with them; since the IElement interface inherits from INode, the generic INode interface attribute IAttribute may be used to retrieve the set of all attributes for an element. There are methods on the IElement interface to retrieve either an IAttribute object by name or an attribute value by name. In XML, where an attribute value may contain entity references, an IAttribute object should be retrieved to examine the possibly fairly complex sub-tree representing the attribute value. On the other hand, in HTML, where all attributes have simple string values, methods to directly access an attribute value can safely be used as a convenience. In DOM Level 2, the method Normalize() is inherited from the INode interface where it was moved. Properties HasAttributes Gets a value indicating whether this node (if it is an element) has any attributes. Methods GetAttribute(string) Returns the value for the attribute with the specified name. GetAttribute(string, string) Returns the value for the attribute with the specified local name and namespace URI. GetAttributeNode(string) Returns the XmlAttribute with the specified name. GetAttributeNode(string, string) Returns the XmlAttribute with the specified local name and namespace URI. GetElementsByTagName(string) Returns an XmlNodeList containing a list of all descendant elements that match the specified Name. GetElementsByTagName(string, string) Returns an XmlNodeList containing a list of all descendant elements that match the specified LocalName and NamespaceURI. HasAttribute(string) Determines whether the current node has an attribute with the specified name. HasAttribute(string, string) Determines whether the current node has an attribute with the specified local name and namespace URI. RemoveAttribute(string) Removes an attribute by name. RemoveAttribute(string, string) Removes an attribute with the specified local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced). RemoveAttributeNode(string, string) Removes the XmlAttribute specified by the local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced). RemoveAttributeNode(XmlAttribute) Removes the specified XmlAttribute. SetAttribute(string, string) Sets the value of the attribute with the specified name. SetAttribute(string, string, string) Sets the value of the attribute with the specified local name and namespace URI. SetAttributeNode(string, string) Adds the specified XmlAttribute. SetAttributeNode(XmlAttribute) Adds the specified XmlAttribute. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.IXmlNode.AppendChild.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.AppendChild.html",
    "title": "Method AppendChild | SharpVectors Documentation",
    "keywords": "Method AppendChild Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll AppendChild(XmlNode) Adds the node newChild to the end of the list of children of this node. If the newChild is already in the tree, it is first removed. XmlNode AppendChild(XmlNode newChild) Parameters newChild XmlNode The node to add. If it is a IDocumentFragment object, the entire contents of the document fragment are moved into the child list of this node Returns XmlNode The node added. Exceptions DomException HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not allow children of the type of the newChild node, or if the node to append is one of this node's ancestors. WRONG_DOCUMENT_ERR: Raised if newChild was created from a different document than the one that created this node. NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly."
  },
  "api/SharpVectors.Dom.IXmlNode.Attributes.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.Attributes.html",
    "title": "Property Attributes | SharpVectors Documentation",
    "keywords": "Property Attributes Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Attributes Gets a INamedNodeMap containing the attributes of this node (if it is an IElement) or null otherwise. This implementation returns an System.Xml.XmlAttributeCollection containing the attributes of this node. XmlAttributeCollection Attributes { get; } Property Value XmlAttributeCollection An XmlAttributeCollection containing the attributes of the node. If the node is of type XmlNodeType.Element, the attributes of the node are returned. Otherwise, this property returns null. See Also INamedNodeMap"
  },
  "api/SharpVectors.Dom.IXmlNode.ChildNodes.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.ChildNodes.html",
    "title": "Property ChildNodes | SharpVectors Documentation",
    "keywords": "Property ChildNodes Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll ChildNodes Gets all the child nodes of the node. XmlNodeList ChildNodes { get; } Property Value XmlNodeList An System.Xml.XmlNodeList that contains all the child nodes of the node. If there are no child nodes, this property returns an empty System.Xml.XmlNodeList not null."
  },
  "api/SharpVectors.Dom.IXmlNode.CloneNode.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.CloneNode.html",
    "title": "Method CloneNode | SharpVectors Documentation",
    "keywords": "Method CloneNode Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll CloneNode(bool) Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent; (ParentNode is null.). XmlNode CloneNode(bool deep) Parameters deep bool true, recursively clone the subtree under the specified node; if false, clone only the node itself (and its attributes, if it is an IElement). Returns XmlNode The duplicate node. Remarks Cloning an IElement copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes, but this method does not copy any text it contains unless it is a deep clone, since the text is contained in a child IText node. Cloning an IAttribute directly, as opposed to be cloned as part of an IElement cloning operation, returns a specified attribute (Specified is true). Cloning any other type of node simply returns a copy of this node. Note that cloning an immutable subtree results in a mutable copy, but the children of an IEntityReference clone are readonly. In addition, clones of unspecified IAttribute nodes are specified. And, cloning IDocument, IDocumentType, IEntity, and INotation nodes is implementation dependent."
  },
  "api/SharpVectors.Dom.IXmlNode.FirstChild.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.FirstChild.html",
    "title": "Property FirstChild | SharpVectors Documentation",
    "keywords": "Property FirstChild Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll FirstChild Gets the first child of this node. If there is no such node, this returns null. XmlNode FirstChild { get; } Property Value XmlNode The first child of the node. If there is no such node, null is returned."
  },
  "api/SharpVectors.Dom.IXmlNode.HasChildNodes.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.HasChildNodes.html",
    "title": "Property HasChildNodes | SharpVectors Documentation",
    "keywords": "Property HasChildNodes Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll HasChildNodes Gets a value indicating whether this node has any children. bool HasChildNodes { get; } Property Value bool true if this node has any children, false otherwise."
  },
  "api/SharpVectors.Dom.IXmlNode.InsertBefore.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.InsertBefore.html",
    "title": "Method InsertBefore | SharpVectors Documentation",
    "keywords": "Method InsertBefore Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll InsertBefore(XmlNode, XmlNode) Inserts the node newChild before the existing child node refChild. XmlNode InsertBefore(XmlNode newChild, XmlNode refChild) Parameters newChild XmlNode node to insert. refChild XmlNode reference node, i.e., the node before which the new node must be inserted. Returns XmlNode The node being inserted. Remarks If refChild is null, insert newChild at the end of the list of children. If newChild is a IDocumentFragment object, all of its children are inserted, in the same order, before refChild. If the newChild is already in the tree, it is first removed. Exceptions DomException HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not allow children of the type of the newChild node, or if the node to insert is one of this node's ancestors. WRONG_DOCUMENT_ERR: Raised if newChild was created from a different document than the one that created this node. NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly or if the parent of the node being inserted is readonly. NOT_FOUND_ERR: Raised if refChild is not a child of this node."
  },
  "api/SharpVectors.Dom.IXmlNode.LastChild.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.LastChild.html",
    "title": "Property LastChild | SharpVectors Documentation",
    "keywords": "Property LastChild Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll LastChild Gets the last child of this node. If there is no such node, this returns null. XmlNode LastChild { get; } Property Value XmlNode The last child of the node. If there is no such node, null is returned."
  },
  "api/SharpVectors.Dom.IXmlNode.LocalName.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.LocalName.html",
    "title": "Property LocalName | SharpVectors Documentation",
    "keywords": "Property LocalName Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll LocalName Gets the local part of the qualified name of this node. string LocalName { get; } Property Value string The name of the node with the prefix removed. For example, LocalName is label for the element < inkscape:label >.The name returned is dependent on the System.Xml.XmlNode.NodeType of the node. Remarks For nodes of any type other than Element and Attribute and nodes created with a DOM Level 1 method, such as CreateElement(string) from the IDocument interface, this is always null."
  },
  "api/SharpVectors.Dom.IXmlNode.Name.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Name Gets the qualified name of the node. string Name { get; } Property Value string The qualified name of the node. The name returned is dependent on the NodeType of the node."
  },
  "api/SharpVectors.Dom.IXmlNode.NamespaceURI.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.NamespaceURI.html",
    "title": "Property NamespaceURI | SharpVectors Documentation",
    "keywords": "Property NamespaceURI Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll NamespaceURI string NamespaceURI { get; } Property Value string The namespace URI of this node. If there is no namespace URI, this property returns Empty. Remarks This is not a computed value that is the result of a namespace lookup based on an examination of the namespace declarations in scope. It is merely the namespace URI given at creation time. For nodes of any type other than Element and Attribute and nodes created with a DOM Level 1 method, such as CreateElement(string) from the IDocument interface, this is always null. Per the Namespaces in XML Specification an attribute does not inherit its namespace from the element it is attached to. If an attribute is not explicitly given a namespace, it simply has no namespace."
  },
  "api/SharpVectors.Dom.IXmlNode.NextSibling.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.NextSibling.html",
    "title": "Property NextSibling | SharpVectors Documentation",
    "keywords": "Property NextSibling Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll NextSibling Gets the node immediately following this node. If there is no such node, this returns null. XmlNode NextSibling { get; } Property Value XmlNode The next XmlNode. If there is no next node, null is returned."
  },
  "api/SharpVectors.Dom.IXmlNode.NodeType.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.NodeType.html",
    "title": "Property NodeType | SharpVectors Documentation",
    "keywords": "Property NodeType Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll NodeType Gets the type of the current node. XmlNodeType NodeType { get; } Property Value XmlNodeType An enumeration of the type XmlNodeType specifying the type of this node."
  },
  "api/SharpVectors.Dom.IXmlNode.Normalize.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.Normalize.html",
    "title": "Method Normalize | SharpVectors Documentation",
    "keywords": "Method Normalize Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Normalize() Puts all IText nodes in the full depth of the sub-tree underneath this INode, including attribute nodes, into a \"normal\" form where only structure (e.g., elements, comments, processing instructions, CDATA sections, and entity references) separates IText nodes, i.e., there are neither adjacent IText nodes nor empty IText nodes. void Normalize() Remarks This can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used. In cases where the document contains ICDataSection, the normalize operation alone may not be sufficient, since XPointers do not differentiate between IText nodes and ICDataSection nodes."
  },
  "api/SharpVectors.Dom.IXmlNode.OwnerDocument.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.OwnerDocument.html",
    "title": "Property OwnerDocument | SharpVectors Documentation",
    "keywords": "Property OwnerDocument Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll OwnerDocument The IDocument object associated with this node. This is also the IDocument object used to create new nodes. When this node is a IDocument or a IDocumentType which is not used with any IDocument yet, this is null. This implementation returns the System.Xml.XmlDocument to which this node belongs. XmlDocument OwnerDocument { get; } Property Value XmlDocument The System.Xml.XmlDocument to which this node belongs.If the node is an System.Xml.XmlDocument (NodeType equals XmlNodeType.Document), this property returns null."
  },
  "api/SharpVectors.Dom.IXmlNode.ParentNode.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.ParentNode.html",
    "title": "Property ParentNode | SharpVectors Documentation",
    "keywords": "Property ParentNode Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll ParentNode Gets the parent of this node (for nodes that can have parents). XmlNode ParentNode { get; } Property Value XmlNode The XmlNode that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is null. For all other nodes, the value returned depends on the NodeType of the node. Remarks Gets the parent of this node. All nodes, except IAttribute, IDocument, IDocumentFragment, IEntity, and INotation may have a parent. However, if a node has just been created and not yet added to the tree, or if it has been removed from the tree, this is null."
  },
  "api/SharpVectors.Dom.IXmlNode.Prefix.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.Prefix.html",
    "title": "Property Prefix | SharpVectors Documentation",
    "keywords": "Property Prefix Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Prefix Gets or sets the namespace prefix of this node, or null if it is unspecified. string Prefix { get; set; } Property Value string The namespace prefix of this node. For example, Prefix is inkscape for the element < inkscape:label >. If there is no prefix, this property returns String.Empty. Remarks Note that setting this attribute, when permitted, changes the Name attribute, which holds the qualified name. Note also that changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the NamespaceURI and LocalName do not change. For nodes of any type other than Element and Attribute and nodes created with a DOM Level 1 method, such as CreateElement(string) from the IDocument interface, this is always null. Exceptions DomException INVALID_CHARACTER_ERR: Raised if the specified prefix contains an illegal character. NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly. NAMESPACE_ERR: Raised if the specified Prefix is malformed, if the NamespaceURI of this node is null, if the specified prefix is \"xml\" and the NamespaceURI of this node is different from https://www.w3.org/XML/1998/namespace, if this node is an attribute and the specified prefix is xmlns and the NamespaceURI of this node is different from https://www.w3.org/2000/xmlns/, or if this node is an attribute and the QualifiedName of this node is xmlns."
  },
  "api/SharpVectors.Dom.IXmlNode.PreviousSibling.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.PreviousSibling.html",
    "title": "Property PreviousSibling | SharpVectors Documentation",
    "keywords": "Property PreviousSibling Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll PreviousSibling Gets the node immediately preceding this node. If there is no such node, this returns null. XmlNode PreviousSibling { get; } Property Value XmlNode The preceding XmlNode. If there is no preceding node, null is returned."
  },
  "api/SharpVectors.Dom.IXmlNode.RemoveChild.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.RemoveChild.html",
    "title": "Method RemoveChild | SharpVectors Documentation",
    "keywords": "Method RemoveChild Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll RemoveChild(XmlNode) Removes the child node indicated by oldChild from the list of children, and returns it. XmlNode RemoveChild(XmlNode oldChild) Parameters oldChild XmlNode node being removed. Returns XmlNode The node removed. Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly. NOT_FOUND_ERR: Raised if oldChild is not a child of this node."
  },
  "api/SharpVectors.Dom.IXmlNode.ReplaceChild.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.ReplaceChild.html",
    "title": "Method ReplaceChild | SharpVectors Documentation",
    "keywords": "Method ReplaceChild Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll ReplaceChild(XmlNode, XmlNode) Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node. XmlNode ReplaceChild(XmlNode newChild, XmlNode oldChild) Parameters newChild XmlNode new node to put in the child list. oldChild XmlNode node being replaced in the list. Returns XmlNode The node replaced. Remarks If newChild is a IDocumentFragment object, oldChild is replaced by all of the IDocumentFragment children, which are inserted in the same order. If the newChild is already in the tree, it is first removed. Exceptions DomException HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not allow children of the type of the newChild node, or if the node to put in is one of this node's ancestors. WRONG_DOCUMENT_ERR: Raised if newChild was created from a different document than the one that created this node. NO_MODIFICATION_ALLOWED_ERR: Raised if this node or the parent of the new node is readonly. NOT_FOUND_ERR: Raised if oldChild is not a child of this node."
  },
  "api/SharpVectors.Dom.IXmlNode.Supports.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.Supports.html",
    "title": "Method Supports | SharpVectors Documentation",
    "keywords": "Method Supports Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Supports(string, string) Tests whether the DOM implementation implements a specific feature and that feature is supported by this node. bool Supports(string feature, string version) Parameters feature string name of the feature to test. This is the same name which can be passed to the method HasFeature(string, string) on IDomImplementation. version string This is the version number of the feature to test. In Level 2, version 1, this is the string \"2.0\". If the version is not specified, supporting any version of the feature will cause the method to return true. Returns bool Returns true if the specified feature is supported on this node, false otherwise."
  },
  "api/SharpVectors.Dom.IXmlNode.Value.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll Value Gets or sets the value of the node. string Value { get; set; } Property Value string The value returned depends on the NodeType of the node"
  },
  "api/SharpVectors.Dom.IXmlNode.html": {
    "href": "api/SharpVectors.Dom.IXmlNode.html",
    "title": "Interface IXmlNode | SharpVectors Documentation",
    "keywords": "Interface IXmlNode Namespace SharpVectors.Dom Assembly SharpVectors.Core.dll The IXmlNode interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. XmlNode public interface IXmlNode Remarks While all objects implementing the INode interface expose methods for dealing with children, not all objects implementing the INode interface may have children. For example, IText nodes may not have children, and adding children to such nodes results in a DomException being raised. The attributes Name, Value and Attributes are included as a mechanism to get at node information without casting down to the specific derived interface. In cases where there is no obvious mapping of these attributes for a specific NodeType (e.g., Value for an IElement or Attributes for a IComment), this returns null. Note that the specialized interfaces may contain additional and more convenient mechanisms to get and set the relevant information. Properties Attributes Gets a INamedNodeMap containing the attributes of this node (if it is an IElement) or null otherwise. This implementation returns an System.Xml.XmlAttributeCollection containing the attributes of this node. ChildNodes Gets all the child nodes of the node. FirstChild Gets the first child of this node. If there is no such node, this returns null. HasChildNodes Gets a value indicating whether this node has any children. LastChild Gets the last child of this node. If there is no such node, this returns null. LocalName Gets the local part of the qualified name of this node. Name Gets the qualified name of the node. NamespaceURI NextSibling Gets the node immediately following this node. If there is no such node, this returns null. NodeType Gets the type of the current node. OwnerDocument The IDocument object associated with this node. This is also the IDocument object used to create new nodes. When this node is a IDocument or a IDocumentType which is not used with any IDocument yet, this is null. This implementation returns the System.Xml.XmlDocument to which this node belongs. ParentNode Gets the parent of this node (for nodes that can have parents). Prefix Gets or sets the namespace prefix of this node, or null if it is unspecified. PreviousSibling Gets the node immediately preceding this node. If there is no such node, this returns null. Value Gets or sets the value of the node. Methods AppendChild(XmlNode) Adds the node newChild to the end of the list of children of this node. If the newChild is already in the tree, it is first removed. CloneNode(bool) Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent; (ParentNode is null.). InsertBefore(XmlNode, XmlNode) Inserts the node newChild before the existing child node refChild. Normalize() Puts all IText nodes in the full depth of the sub-tree underneath this INode, including attribute nodes, into a \"normal\" form where only structure (e.g., elements, comments, processing instructions, CDATA sections, and entity references) separates IText nodes, i.e., there are neither adjacent IText nodes nor empty IText nodes. RemoveChild(XmlNode) Removes the child node indicated by oldChild from the list of children, and returns it. ReplaceChild(XmlNode, XmlNode) Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node. Supports(string, string) Tests whether the DOM implementation implements a specific feature and that feature is supported by this node. See Also Document Object Model (DOM) Level 2 Core Specification"
  },
  "api/SharpVectors.Dom.NodeListAdapter.-ctor.html": {
    "href": "api/SharpVectors.Dom.NodeListAdapter.-ctor.html",
    "title": "Constructor NodeListAdapter | SharpVectors Documentation",
    "keywords": "Constructor NodeListAdapter Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll NodeListAdapter(XmlNodeList) public NodeListAdapter(XmlNodeList nodeList) Parameters nodeList XmlNodeList"
  },
  "api/SharpVectors.Dom.NodeListAdapter.Count.html": {
    "href": "api/SharpVectors.Dom.NodeListAdapter.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Count Gets the number of nodes in the list. The range of valid child node indices is 0 to Count-1 inclusive. public ulong Count { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.NodeListAdapter.Item.html": {
    "href": "api/SharpVectors.Dom.NodeListAdapter.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll this[ulong] Gets the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null. public INode this[ulong index] { get; } Parameters index ulong into the collection. Property Value INode The node at the indexth position in the INodeList, or null if that is not a valid index."
  },
  "api/SharpVectors.Dom.NodeListAdapter.html": {
    "href": "api/SharpVectors.Dom.NodeListAdapter.html",
    "title": "Class NodeListAdapter | SharpVectors Documentation",
    "keywords": "Class NodeListAdapter Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for NodeListAdapter. public class NodeListAdapter : INodeList Inheritance object NodeListAdapter Implements INodeList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NodeListAdapter(XmlNodeList) Properties Count Gets the number of nodes in the list. The range of valid child node indices is 0 to Count-1 inclusive. this[ulong] Gets the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null."
  },
  "api/SharpVectors.Dom.ProcessingInstruction.-ctor.html": {
    "href": "api/SharpVectors.Dom.ProcessingInstruction.-ctor.html",
    "title": "Constructor ProcessingInstruction | SharpVectors Documentation",
    "keywords": "Constructor ProcessingInstruction Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll ProcessingInstruction(string, string, Document) public ProcessingInstruction(string target, string data, Document document) Parameters target string data string document Document"
  },
  "api/SharpVectors.Dom.ProcessingInstruction.html": {
    "href": "api/SharpVectors.Dom.ProcessingInstruction.html",
    "title": "Class ProcessingInstruction | SharpVectors Documentation",
    "keywords": "Class ProcessingInstruction Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for ProcessingInstruction. public class ProcessingInstruction : XmlProcessingInstruction, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlProcessingInstruction ProcessingInstruction Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlProcessingInstruction.CloneNode(bool) XmlProcessingInstruction.WriteTo(XmlWriter) XmlProcessingInstruction.WriteContentTo(XmlWriter) XmlProcessingInstruction.Name XmlProcessingInstruction.LocalName XmlProcessingInstruction.Value XmlProcessingInstruction.Target XmlProcessingInstruction.Data XmlProcessingInstruction.InnerText XmlProcessingInstruction.NodeType XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.ParentNode XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ProcessingInstruction(string, string, Document)"
  },
  "api/SharpVectors.Dom.SignificantWhitespace.-ctor.html": {
    "href": "api/SharpVectors.Dom.SignificantWhitespace.-ctor.html",
    "title": "Constructor SignificantWhitespace | SharpVectors Documentation",
    "keywords": "Constructor SignificantWhitespace Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll SignificantWhitespace(string, Document) public SignificantWhitespace(string data, Document document) Parameters data string document Document"
  },
  "api/SharpVectors.Dom.SignificantWhitespace.Value.html": {
    "href": "api/SharpVectors.Dom.SignificantWhitespace.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Value Gets or sets the value of the node. public override string Value { get; set; } Property Value string The white space characters found in the node. Exceptions ArgumentException Setting Value to invalid white space characters."
  },
  "api/SharpVectors.Dom.SignificantWhitespace.html": {
    "href": "api/SharpVectors.Dom.SignificantWhitespace.html",
    "title": "Class SignificantWhitespace | SharpVectors Documentation",
    "keywords": "Class SignificantWhitespace Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for SignificantWhitespace. public class SignificantWhitespace : XmlSignificantWhitespace, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlCharacterData XmlSignificantWhitespace SignificantWhitespace Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlSignificantWhitespace.CloneNode(bool) XmlSignificantWhitespace.WriteTo(XmlWriter) XmlSignificantWhitespace.WriteContentTo(XmlWriter) XmlSignificantWhitespace.Name XmlSignificantWhitespace.LocalName XmlSignificantWhitespace.NodeType XmlSignificantWhitespace.ParentNode XmlCharacterData.Substring(int, int) XmlCharacterData.AppendData(string) XmlCharacterData.InsertData(int, string) XmlCharacterData.DeleteData(int, int) XmlCharacterData.ReplaceData(int, int, string) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SignificantWhitespace(string, Document) Properties Value Gets or sets the value of the node."
  },
  "api/SharpVectors.Dom.Stylesheets.IDocumentStyle.StyleSheets.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IDocumentStyle.StyleSheets.html",
    "title": "Property StyleSheets | SharpVectors Documentation",
    "keywords": "Property StyleSheets Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll StyleSheets A list containing all the style sheets explicitly linked into or embedded in a document. For HTML documents, this includes external style sheets, included via the HTML LINK element, and inline STYLE elements. In XML, this includes external style sheets, included via style sheet processing instructions (see [XML-StyleSheet]). IStyleSheetList StyleSheets { get; } Property Value IStyleSheetList"
  },
  "api/SharpVectors.Dom.Stylesheets.IDocumentStyle.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IDocumentStyle.html",
    "title": "Interface IDocumentStyle | SharpVectors Documentation",
    "keywords": "Interface IDocumentStyle Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document can be retrieved. The expectation is that an instance of the DocumentStyle interface can be obtained by using binding-specific casting methods on an instance of the Document interface. public interface IDocumentStyle Properties StyleSheets A list containing all the style sheets explicitly linked into or embedded in a document. For HTML documents, this includes external style sheets, included via the HTML LINK element, and inline STYLE elements. In XML, this includes external style sheets, included via style sheet processing instructions (see [XML-StyleSheet])."
  },
  "api/SharpVectors.Dom.Stylesheets.ILinkStyle.Sheet.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.ILinkStyle.Sheet.html",
    "title": "Property Sheet | SharpVectors Documentation",
    "keywords": "Property Sheet Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll Sheet The style sheet IStyleSheet Sheet { get; } Property Value IStyleSheet"
  },
  "api/SharpVectors.Dom.Stylesheets.ILinkStyle.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.ILinkStyle.html",
    "title": "Interface ILinkStyle | SharpVectors Documentation",
    "keywords": "Interface ILinkStyle Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible for linking it into a document. An instance of the LinkStyle interface can be obtained using binding-specific casting methods on an instance of a linking node (HTMLLinkElement, HTMLStyleElement or ProcessingInstruction in DOM Level 2). public interface ILinkStyle Properties Sheet The style sheet"
  },
  "api/SharpVectors.Dom.Stylesheets.IMediaList.AppendMedium.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IMediaList.AppendMedium.html",
    "title": "Method AppendMedium | SharpVectors Documentation",
    "keywords": "Method AppendMedium Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll AppendMedium(string) Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed. void AppendMedium(string newMedium) Parameters newMedium string The new medium to add. Exceptions DomException INVALID_CHARACTER_ERR: If the medium contains characters that are invalid in the underlying style language. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly"
  },
  "api/SharpVectors.Dom.Stylesheets.IMediaList.DeleteMedium.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IMediaList.DeleteMedium.html",
    "title": "Method DeleteMedium | SharpVectors Documentation",
    "keywords": "Method DeleteMedium Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll DeleteMedium(string) void DeleteMedium(string oldMedium) Parameters oldMedium string Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly. DomException NOT_FOUND_ERR: Raised if oldMedium is not in the list."
  },
  "api/SharpVectors.Dom.Stylesheets.IMediaList.Item.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IMediaList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll this[ulong] Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null. string this[ulong index] { get; } Parameters index ulong Property Value string"
  },
  "api/SharpVectors.Dom.Stylesheets.IMediaList.Length.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IMediaList.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll Length The number of media in the list. The range of valid media is 0 to length-1 inclusive. ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Stylesheets.IMediaList.MediaText.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IMediaList.MediaText.html",
    "title": "Property MediaText | SharpVectors Documentation",
    "keywords": "Property MediaText Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll MediaText The parsable textual representation of the media list. This is a comma-separated list of media. string MediaText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media list is readonly."
  },
  "api/SharpVectors.Dom.Stylesheets.IMediaList.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IMediaList.html",
    "title": "Interface IMediaList | SharpVectors Documentation",
    "keywords": "Interface IMediaList Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium \"all\". public interface IMediaList Properties this[ulong] Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null. Length The number of media in the list. The range of valid media is 0 to length-1 inclusive. MediaText The parsable textual representation of the media list. This is a comma-separated list of media. Methods AppendMedium(string) Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed. DeleteMedium(string)"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Disabled.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Disabled.html",
    "title": "Property Disabled | SharpVectors Documentation",
    "keywords": "Property Disabled Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll Disabled false if the style sheet is applied to the document. true if it is not. Modifying this attribute may cause a new resolution of style for the document. A stylesheet only applies if both an appropriate medium definition is present and the disabled attribute is false. So, if the media doesn't apply to the current user agent, the disabled attribute is ignored. bool Disabled { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Href.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll Href If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is null. See the href attribute definition for the LINK element in HTML 4.0, and the href pseudo-attribute for the XML style sheet processing string Href { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Media.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Media.html",
    "title": "Property Media | SharpVectors Documentation",
    "keywords": "Property Media Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll Media The intended destination media for style information. The media is often specified in the ownerNode. If no media has been specified, the MediaList will be empty. See the media attribute definition for the LINK element in HTML 4.0, and the media pseudo-attribute for the XML style sheet processing instruction . Modifying the media list may cause a change to the attribute disabled. IMediaList Media { get; } Property Value IMediaList"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheet.OwnerNode.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheet.OwnerNode.html",
    "title": "Property OwnerNode | SharpVectors Documentation",
    "keywords": "Property OwnerNode Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll OwnerNode The node that associates this style sheet with the document. For HTML, this may be the corresponding LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is null XmlNode OwnerNode { get; } Property Value XmlNode"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheet.ParentStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheet.ParentStyleSheet.html",
    "title": "Property ParentStyleSheet | SharpVectors Documentation",
    "keywords": "Property ParentStyleSheet Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll ParentStyleSheet For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is null. IStyleSheet ParentStyleSheet { get; } Property Value IStyleSheet"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Title.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Title.html",
    "title": "Property Title | SharpVectors Documentation",
    "keywords": "Property Title Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll Title The advisory title. The title is often specified in the ownerNode. See the title attribute definition for the LINK element in HTML 4.0, and the title pseudo-attribute for the XML style sheet processing instruction. string Title { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Type.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheet.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll Type This specifies the style sheet language for this style sheet. The style sheet language is specified as a content type (e.g. \"text/css\"). The content type is often specified in the ownerNode. Also see the type attribute definition for the LINK element in HTML 4.0, and the type pseudo-attribute for the XML style sheet processing instruction. string Type { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheet.html",
    "title": "Interface IStyleSheet | SharpVectors Documentation",
    "keywords": "Interface IStyleSheet Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document. In HTML, the StyleSheet interface represents either an external style sheet, included via the HTML LINK element, or an inline STYLE element. In XML, this interface represents an external style sheet, included via a style sheet processing instruction. public interface IStyleSheet Properties Disabled false if the style sheet is applied to the document. true if it is not. Modifying this attribute may cause a new resolution of style for the document. A stylesheet only applies if both an appropriate medium definition is present and the disabled attribute is false. So, if the media doesn't apply to the current user agent, the disabled attribute is ignored. Href If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is null. See the href attribute definition for the LINK element in HTML 4.0, and the href pseudo-attribute for the XML style sheet processing Media The intended destination media for style information. The media is often specified in the ownerNode. If no media has been specified, the MediaList will be empty. See the media attribute definition for the LINK element in HTML 4.0, and the media pseudo-attribute for the XML style sheet processing instruction . Modifying the media list may cause a change to the attribute disabled. OwnerNode The node that associates this style sheet with the document. For HTML, this may be the corresponding LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is null ParentStyleSheet For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is null. Title The advisory title. The title is often specified in the ownerNode. See the title attribute definition for the LINK element in HTML 4.0, and the title pseudo-attribute for the XML style sheet processing instruction. Type This specifies the style sheet language for this style sheet. The style sheet language is specified as a content type (e.g. \"text/css\"). The content type is often specified in the ownerNode. Also see the type attribute definition for the LINK element in HTML 4.0, and the type pseudo-attribute for the XML style sheet processing instruction."
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheetList.Item.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheetList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll this[ulong] Used to retrieve a style sheet by ordinal index. If index is greater than or equal to the number of style sheets in the list, this returns null. IStyleSheet this[ulong index] { get; } Parameters index ulong Property Value IStyleSheet"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheetList.Length.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheetList.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll Length The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive. ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Stylesheets.IStyleSheetList.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.IStyleSheetList.html",
    "title": "Interface IStyleSheetList | SharpVectors Documentation",
    "keywords": "Interface IStyleSheetList Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Core.dll The StyleSheetList interface provides the abstraction of an ordered collection of style sheets. public interface IStyleSheetList : IList<IStyleSheet>, ICollection<IStyleSheet>, IEnumerable<IStyleSheet>, IEnumerable Inherited Members IList<IStyleSheet>.IndexOf(IStyleSheet) IList<IStyleSheet>.Insert(int, IStyleSheet) IList<IStyleSheet>.RemoveAt(int) IList<IStyleSheet>.this[int] ICollection<IStyleSheet>.Add(IStyleSheet) ICollection<IStyleSheet>.Clear() ICollection<IStyleSheet>.Contains(IStyleSheet) ICollection<IStyleSheet>.CopyTo(IStyleSheet[], int) ICollection<IStyleSheet>.Remove(IStyleSheet) ICollection<IStyleSheet>.Count ICollection<IStyleSheet>.IsReadOnly IEnumerable<IStyleSheet>.GetEnumerator() Properties this[ulong] Used to retrieve a style sheet by ordinal index. If index is greater than or equal to the number of style sheets in the list, this returns null. Length The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive."
  },
  "api/SharpVectors.Dom.Stylesheets.MediaList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.MediaList.-ctor.html",
    "title": "Constructor MediaList | SharpVectors Documentation",
    "keywords": "Constructor MediaList Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll MediaList() public MediaList() MediaList(string) public MediaList(string val) Parameters val string"
  },
  "api/SharpVectors.Dom.Stylesheets.MediaList.AppendMedium.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.MediaList.AppendMedium.html",
    "title": "Method AppendMedium | SharpVectors Documentation",
    "keywords": "Method AppendMedium Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll AppendMedium(string) Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed. public void AppendMedium(string newMedium) Parameters newMedium string The new medium to add. Exceptions DomException INVALID_CHARACTER_ERR: If the medium contains characters that are invalid in the underlying style language. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media list is readonly."
  },
  "api/SharpVectors.Dom.Stylesheets.MediaList.DeleteMedium.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.MediaList.DeleteMedium.html",
    "title": "Method DeleteMedium | SharpVectors Documentation",
    "keywords": "Method DeleteMedium Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll DeleteMedium(string) Deletes the medium indicated by oldMedium from the list. public void DeleteMedium(string oldMedium) Parameters oldMedium string The medium to delete in the media list. Exceptions DomException NOT_FOUND_ERR: Raised if oldMedium is not in the list. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media list is readonly."
  },
  "api/SharpVectors.Dom.Stylesheets.MediaList.Item.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.MediaList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll this[ulong] Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null. public string this[ulong index] { get; } Parameters index ulong Property Value string this[int] Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null. public string this[int index] { get; } Parameters index int Property Value string"
  },
  "api/SharpVectors.Dom.Stylesheets.MediaList.Length.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.MediaList.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Length The number of media in the list. The range of valid media is 0 to length-1 inclusive. public ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Stylesheets.MediaList.Matches.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.MediaList.Matches.html",
    "title": "Method Matches | SharpVectors Documentation",
    "keywords": "Method Matches Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Matches(MediaList) Compares this MediaList with another and see if the second fits this public bool Matches(MediaList inMedia) Parameters inMedia MediaList The MediaList to compare Returns bool True if this list fits the specified"
  },
  "api/SharpVectors.Dom.Stylesheets.MediaList.MediaText.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.MediaList.MediaText.html",
    "title": "Property MediaText | SharpVectors Documentation",
    "keywords": "Property MediaText Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll MediaText The parsable textual representation of the media list. This is a comma-separated list of media. public string MediaText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified string value has a syntax error and is unparsable. DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this media list is readonly."
  },
  "api/SharpVectors.Dom.Stylesheets.MediaList.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.MediaList.html",
    "title": "Class MediaList | SharpVectors Documentation",
    "keywords": "Class MediaList Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium \"all\". The items in the MediaList are accessible via an integral index, starting from 0. public sealed class MediaList : IMediaList Inheritance object MediaList Implements IMediaList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors MediaList() MediaList(string) Properties this[int] Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null. this[ulong] Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null. Length The number of media in the list. The range of valid media is 0 to length-1 inclusive. MediaText The parsable textual representation of the media list. This is a comma-separated list of media. Methods AppendMedium(string) Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed. DeleteMedium(string) Deletes the medium indicated by oldMedium from the list. Matches(MediaList) Compares this MediaList with another and see if the second fits this"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.-ctor.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.-ctor.html",
    "title": "Constructor StyleSheet | SharpVectors Documentation",
    "keywords": "Constructor StyleSheet Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll StyleSheet(string) protected StyleSheet(string media) Parameters media string StyleSheet(XmlProcessingInstruction) public StyleSheet(XmlProcessingInstruction pi) Parameters pi XmlProcessingInstruction StyleSheet(XmlElement) public StyleSheet(XmlElement styleElement) Parameters styleElement XmlElement StyleSheet(XmlNode, string, string, string, string) public StyleSheet(XmlNode ownerNode, string href, string type, string title, string media) Parameters ownerNode XmlNode href string type string title string media string"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.AbsoluteHref.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.AbsoluteHref.html",
    "title": "Property AbsoluteHref | SharpVectors Documentation",
    "keywords": "Property AbsoluteHref Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll AbsoluteHref The resolved absolute URL to the stylesheet public Uri AbsoluteHref { get; } Property Value Uri"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.Disabled.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.Disabled.html",
    "title": "Property Disabled | SharpVectors Documentation",
    "keywords": "Property Disabled Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Disabled false if the style sheet is applied to the document. true if it is not. Modifying this attribute may cause a new resolution of style for the document. A stylesheet only applies if both an appropriate medium definition is present and the disabled attribute is false. So, if the media doesn't apply to the current user agent, the disabled attribute is ignored. public bool Disabled { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.GetStylesForElement.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.GetStylesForElement.html",
    "title": "Method GetStylesForElement | SharpVectors Documentation",
    "keywords": "Method GetStylesForElement Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order protected virtual void GetStylesForElement(XmlElement elt, string pseudoElt, MediaList ml, CssCollectedStyleDeclaration csd) Parameters elt XmlElement The element to find styles for pseudoElt string The pseudo-element to find styles for ml MediaList The medialist that the document is using csd CssCollectedStyleDeclaration A CssStyleDeclaration that holds the collected styles"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.Href.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Href If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is null. See the href attribute definition for the LINK element in HTML 4.0, and the href pseudo-attribute for the XML style sheet processing instruction. public string Href { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.Media.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.Media.html",
    "title": "Property Media | SharpVectors Documentation",
    "keywords": "Property Media Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Media The intended destination media for style information. The media is often specified in the ownerNode. If no media has been specified, the MediaList will be empty. See the media attribute definition for the LINK element in HTML 4.0, and the media pseudo-attribute for the XML style sheet processing instruction . Modifying the media list may cause a change to the attribute disabled. public IMediaList Media { get; } Property Value IMediaList"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.OwnerNode.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.OwnerNode.html",
    "title": "Property OwnerNode | SharpVectors Documentation",
    "keywords": "Property OwnerNode Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll OwnerNode The node that associates this style sheet with the document. For HTML, this may be the corresponding LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is null. public XmlNode OwnerNode { get; } Property Value XmlNode"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.ParentStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.ParentStyleSheet.html",
    "title": "Property ParentStyleSheet | SharpVectors Documentation",
    "keywords": "Property ParentStyleSheet Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll ParentStyleSheet For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is null. public IStyleSheet ParentStyleSheet { get; set; } Property Value IStyleSheet"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.SheetContent.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.SheetContent.html",
    "title": "Property SheetContent | SharpVectors Documentation",
    "keywords": "Property SheetContent Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll SheetContent public string SheetContent { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.Title.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.Title.html",
    "title": "Property Title | SharpVectors Documentation",
    "keywords": "Property Title Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Title The advisory title. The title is often specified in the ownerNode. See the title attribute definition for the LINK element in HTML 4.0, and the title pseudo-attribute for the XML style sheet processing instruction. public string Title { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.Type.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Type This specifies the style sheet language for this style sheet. The style sheet language is specified as a content type (e.g. \"text/css\"). The content type is often specified in the ownerNode. Also see the type attribute definition for the LINK element in HTML 4.0, and the type pseudo-attribute for the XML style sheet processing instruction. public string Type { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheet.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheet.html",
    "title": "Class StyleSheet | SharpVectors Documentation",
    "keywords": "Class StyleSheet Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document. In HTML, the StyleSheet interface represents either an external style sheet, included via the HTML LINK element, or an inline STYLE element. In XML, this interface represents an external style sheet, included via a style sheet processing instruction. public class StyleSheet : IStyleSheet Inheritance object StyleSheet Implements IStyleSheet Derived CssStyleSheet Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StyleSheet(string) StyleSheet(XmlElement) StyleSheet(XmlNode, string, string, string, string) StyleSheet(XmlProcessingInstruction) Properties AbsoluteHref The resolved absolute URL to the stylesheet Disabled false if the style sheet is applied to the document. true if it is not. Modifying this attribute may cause a new resolution of style for the document. A stylesheet only applies if both an appropriate medium definition is present and the disabled attribute is false. So, if the media doesn't apply to the current user agent, the disabled attribute is ignored. Href If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is null. See the href attribute definition for the LINK element in HTML 4.0, and the href pseudo-attribute for the XML style sheet processing instruction. Media The intended destination media for style information. The media is often specified in the ownerNode. If no media has been specified, the MediaList will be empty. See the media attribute definition for the LINK element in HTML 4.0, and the media pseudo-attribute for the XML style sheet processing instruction . Modifying the media list may cause a change to the attribute disabled. OwnerNode The node that associates this style sheet with the document. For HTML, this may be the corresponding LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is null. ParentStyleSheet For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is null. SheetContent Title The advisory title. The title is often specified in the ownerNode. See the title attribute definition for the LINK element in HTML 4.0, and the title pseudo-attribute for the XML style sheet processing instruction. Type This specifies the style sheet language for this style sheet. The style sheet language is specified as a content type (e.g. \"text/css\"). The content type is often specified in the ownerNode. Also see the type attribute definition for the LINK element in HTML 4.0, and the type pseudo-attribute for the XML style sheet processing instruction. Methods GetStylesForElement(XmlElement, string, MediaList, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Add.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Add.html",
    "title": "Method Add | SharpVectors Documentation",
    "keywords": "Method Add Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Add(IStyleSheet) Adds an item to the ICollection<T>. public void Add(IStyleSheet item) Parameters item IStyleSheet The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.AddCssStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.AddCssStyleSheet.html",
    "title": "Method AddCssStyleSheet | SharpVectors Documentation",
    "keywords": "Method AddCssStyleSheet Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll AddCssStyleSheet(CssStyleSheet) public void AddCssStyleSheet(CssStyleSheet ss) Parameters ss CssStyleSheet"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Clear.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Contains.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Contains.html",
    "title": "Method Contains | SharpVectors Documentation",
    "keywords": "Method Contains Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Contains(IStyleSheet) Determines whether the ICollection<T> contains a specific value. public bool Contains(IStyleSheet item) Parameters item IStyleSheet The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.CopyTo.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.CopyTo.html",
    "title": "Method CopyTo | SharpVectors Documentation",
    "keywords": "Method CopyTo Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll CopyTo(IStyleSheet[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(IStyleSheet[] array, int arrayIndex) Parameters array IStyleSheet[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Count.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.GetEnumerator.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.GetEnumerator.html",
    "title": "Method GetEnumerator | SharpVectors Documentation",
    "keywords": "Method GetEnumerator Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<IStyleSheet> GetEnumerator() Returns IEnumerator<IStyleSheet> A IEnumerator<T> that can be used to iterate through the collection."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.GetStylesForElement.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.GetStylesForElement.html",
    "title": "Method GetStylesForElement | SharpVectors Documentation",
    "keywords": "Method GetStylesForElement Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll GetStylesForElement(XmlElement, string, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order public void GetStylesForElement(XmlElement elt, string pseudoElt, CssCollectedStyleDeclaration csd) Parameters elt XmlElement The element to find styles for pseudoElt string The pseudo-element to find styles for csd CssCollectedStyleDeclaration A CssStyleDeclaration that holds the collected styles"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.IndexOf.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.IndexOf.html",
    "title": "Method IndexOf | SharpVectors Documentation",
    "keywords": "Method IndexOf Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll IndexOf(IStyleSheet) Determines the index of a specific item in the IList<T>. public int IndexOf(IStyleSheet item) Parameters item IStyleSheet The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Insert.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Insert.html",
    "title": "Method Insert | SharpVectors Documentation",
    "keywords": "Method Insert Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Insert(int, IStyleSheet) Inserts an item to the IList<T> at the specified index. public void Insert(int index, IStyleSheet item) Parameters index int The zero-based index at which item should be inserted. item IStyleSheet The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.IsReadOnly.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.IsReadOnly.html",
    "title": "Property IsReadOnly | SharpVectors Documentation",
    "keywords": "Property IsReadOnly Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Item.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll this[ulong] Used to retrieve a style sheet by ordinal index. If index is greater than or equal to the number of style sheets in the list, this returns null. public IStyleSheet this[ulong index] { get; } Parameters index ulong Property Value IStyleSheet this[int] Gets or sets the element at the specified index. public IStyleSheet this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value IStyleSheet The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Length.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Length The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive. public ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Remove.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.Remove.html",
    "title": "Method Remove | SharpVectors Documentation",
    "keywords": "Method Remove Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll Remove(IStyleSheet) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(IStyleSheet item) Parameters item IStyleSheet The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.RemoveAt.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.RemoveAt.html",
    "title": "Method RemoveAt | SharpVectors Documentation",
    "keywords": "Method RemoveAt Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/SharpVectors.Dom.Stylesheets.StyleSheetList.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.StyleSheetList.html",
    "title": "Class StyleSheetList | SharpVectors Documentation",
    "keywords": "Class StyleSheetList Namespace SharpVectors.Dom.Stylesheets Assembly SharpVectors.Css.dll The StyleSheetList interface provides the abstraction of an ordered collection of style sheets. The items in the StyleSheetList are accessible via an integral index, starting from 0. public sealed class StyleSheetList : IStyleSheetList, IList<IStyleSheet>, ICollection<IStyleSheet>, IEnumerable<IStyleSheet>, IEnumerable Inheritance object StyleSheetList Implements IStyleSheetList IList<IStyleSheet> ICollection<IStyleSheet> IEnumerable<IStyleSheet> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Count Gets the number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. this[int] Gets or sets the element at the specified index. this[ulong] Used to retrieve a style sheet by ordinal index. If index is greater than or equal to the number of style sheets in the list, this returns null. Length The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive. Methods Add(IStyleSheet) Adds an item to the ICollection<T>. AddCssStyleSheet(CssStyleSheet) Clear() Removes all items from the ICollection<T>. Contains(IStyleSheet) Determines whether the ICollection<T> contains a specific value. CopyTo(IStyleSheet[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. GetEnumerator() Returns an enumerator that iterates through the collection. GetStylesForElement(XmlElement, string, CssCollectedStyleDeclaration) Used to find matching style rules in the cascading order IndexOf(IStyleSheet) Determines the index of a specific item in the IList<T>. Insert(int, IStyleSheet) Inserts an item to the IList<T> at the specified index. Remove(IStyleSheet) Removes the first occurrence of a specific object from the ICollection<T>. RemoveAt(int) Removes the IList<T> item at the specified index."
  },
  "api/SharpVectors.Dom.Stylesheets.html": {
    "href": "api/SharpVectors.Dom.Stylesheets.html",
    "title": "Namespace SharpVectors.Dom.Stylesheets | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom.Stylesheets The SharpVectors.Dom.Stylesheets namespace contains a bunch of classes and interfaces. Classes MediaList The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium \"all\". The items in the MediaList are accessible via an integral index, starting from 0. StyleSheet The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document. In HTML, the StyleSheet interface represents either an external style sheet, included via the HTML LINK element, or an inline STYLE element. In XML, this interface represents an external style sheet, included via a style sheet processing instruction. StyleSheetList The StyleSheetList interface provides the abstraction of an ordered collection of style sheets. The items in the StyleSheetList are accessible via an integral index, starting from 0. Interfaces IDocumentStyle The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document can be retrieved. The expectation is that an instance of the DocumentStyle interface can be obtained by using binding-specific casting methods on an instance of the Document interface. ILinkStyle The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible for linking it into a document. An instance of the LinkStyle interface can be obtained using binding-specific casting methods on an instance of a linking node (HTMLLinkElement, HTMLStyleElement or ProcessingInstruction in DOM Level 2). IMediaList The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium \"all\". IStyleSheet The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document. In HTML, the StyleSheet interface represents either an external style sheet, included via the HTML LINK element, or an inline STYLE element. In XML, this interface represents an external style sheet, included via a style sheet processing instruction. IStyleSheetList The StyleSheetList interface provides the abstraction of an ordered collection of style sheets."
  },
  "api/SharpVectors.Dom.Svg.CalculatedArcValues.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.CalculatedArcValues.-ctor.html",
    "title": "Constructor CalculatedArcValues | SharpVectors Documentation",
    "keywords": "Constructor CalculatedArcValues Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CalculatedArcValues(double, double, double, double, double, double) public CalculatedArcValues(double rx, double ry, double cx, double cy, double angleStart, double angleExtent) Parameters rx double ry double cx double cy double angleStart double angleExtent double"
  },
  "api/SharpVectors.Dom.Svg.CalculatedArcValues.AngleExtent.html": {
    "href": "api/SharpVectors.Dom.Svg.CalculatedArcValues.AngleExtent.html",
    "title": "Field AngleExtent | SharpVectors Documentation",
    "keywords": "Field AngleExtent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public double AngleExtent Returns double"
  },
  "api/SharpVectors.Dom.Svg.CalculatedArcValues.AngleStart.html": {
    "href": "api/SharpVectors.Dom.Svg.CalculatedArcValues.AngleStart.html",
    "title": "Field AngleStart | SharpVectors Documentation",
    "keywords": "Field AngleStart Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public double AngleStart Returns double"
  },
  "api/SharpVectors.Dom.Svg.CalculatedArcValues.CorrRx.html": {
    "href": "api/SharpVectors.Dom.Svg.CalculatedArcValues.CorrRx.html",
    "title": "Field CorrRx | SharpVectors Documentation",
    "keywords": "Field CorrRx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public double CorrRx Returns double"
  },
  "api/SharpVectors.Dom.Svg.CalculatedArcValues.CorrRy.html": {
    "href": "api/SharpVectors.Dom.Svg.CalculatedArcValues.CorrRy.html",
    "title": "Field CorrRy | SharpVectors Documentation",
    "keywords": "Field CorrRy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public double CorrRy Returns double"
  },
  "api/SharpVectors.Dom.Svg.CalculatedArcValues.Cx.html": {
    "href": "api/SharpVectors.Dom.Svg.CalculatedArcValues.Cx.html",
    "title": "Field Cx | SharpVectors Documentation",
    "keywords": "Field Cx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public double Cx Returns double"
  },
  "api/SharpVectors.Dom.Svg.CalculatedArcValues.Cy.html": {
    "href": "api/SharpVectors.Dom.Svg.CalculatedArcValues.Cy.html",
    "title": "Field Cy | SharpVectors Documentation",
    "keywords": "Field Cy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public double Cy Returns double"
  },
  "api/SharpVectors.Dom.Svg.CalculatedArcValues.html": {
    "href": "api/SharpVectors.Dom.Svg.CalculatedArcValues.html",
    "title": "Struct CalculatedArcValues | SharpVectors Documentation",
    "keywords": "Struct CalculatedArcValues Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public struct CalculatedArcValues Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors CalculatedArcValues(double, double, double, double, double, double) Fields AngleExtent AngleStart CorrRx CorrRy Cx Cy"
  },
  "api/SharpVectors.Dom.Svg.IGetSvgDocument.GetSvgDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.IGetSvgDocument.GetSvgDocument.html",
    "title": "Method GetSvgDocument | SharpVectors Documentation",
    "keywords": "Method GetSvgDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetSvgDocument() ISvgDocument GetSvgDocument() Returns ISvgDocument"
  },
  "api/SharpVectors.Dom.Svg.IGetSvgDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.IGetSvgDocument.html",
    "title": "Interface IGetSvgDocument | SharpVectors Documentation",
    "keywords": "Interface IGetSvgDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface IGetSvgDocument Methods GetSvgDocument()"
  },
  "api/SharpVectors.Dom.Svg.ISharpMarkerHost.GetEndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISharpMarkerHost.GetEndAngle.html",
    "title": "Method GetEndAngle | SharpVectors Documentation",
    "keywords": "Method GetEndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetEndAngle(int) Get the angle of the path segment leaving the specified vertex in degrees. double GetEndAngle(int index) Parameters index int Specifies the vertex from which the path segment is leaving. Returns double The angle of the path segment leaving the specified vertex."
  },
  "api/SharpVectors.Dom.Svg.ISharpMarkerHost.GetMarker.html": {
    "href": "api/SharpVectors.Dom.Svg.ISharpMarkerHost.GetMarker.html",
    "title": "Method GetMarker | SharpVectors Documentation",
    "keywords": "Method GetMarker Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetMarker(int) ISvgMarker GetMarker(int index) Parameters index int Returns ISvgMarker"
  },
  "api/SharpVectors.Dom.Svg.ISharpMarkerHost.GetStartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISharpMarkerHost.GetStartAngle.html",
    "title": "Method GetStartAngle | SharpVectors Documentation",
    "keywords": "Method GetStartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetStartAngle(int) Get the angle of the path segment entering the specified vertex. double GetStartAngle(int index) Parameters index int Specifies the vertex to which the path segment is entering. Returns double The angle of the path segment entering the specified vertex in degrees."
  },
  "api/SharpVectors.Dom.Svg.ISharpMarkerHost.IsClosed.html": {
    "href": "api/SharpVectors.Dom.Svg.ISharpMarkerHost.IsClosed.html",
    "title": "Property IsClosed | SharpVectors Documentation",
    "keywords": "Property IsClosed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsClosed bool IsClosed { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISharpMarkerHost.MarkerPositions.html": {
    "href": "api/SharpVectors.Dom.Svg.ISharpMarkerHost.MarkerPositions.html",
    "title": "Property MarkerPositions | SharpVectors Documentation",
    "keywords": "Property MarkerPositions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll MarkerPositions An array specifying the position of each vertex in the Svg element's shape. SvgPointF[] MarkerPositions { get; } Property Value SvgPointF[]"
  },
  "api/SharpVectors.Dom.Svg.ISharpMarkerHost.MayHaveCurves.html": {
    "href": "api/SharpVectors.Dom.Svg.ISharpMarkerHost.MayHaveCurves.html",
    "title": "Property MayHaveCurves | SharpVectors Documentation",
    "keywords": "Property MayHaveCurves Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll MayHaveCurves bool MayHaveCurves { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISharpMarkerHost.html": {
    "href": "api/SharpVectors.Dom.Svg.ISharpMarkerHost.html",
    "title": "Interface ISharpMarkerHost | SharpVectors Documentation",
    "keywords": "Interface ISharpMarkerHost Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This is an extension to the Svg DOM. It denotes that an element can display markers. public interface ISharpMarkerHost Remarks A marker is a symbol which is attached to one or more vertices of some Svg elements. In order for a marker to be drawn correctly, its orientation and position needs to be known. See SVG 1.0 Masking - Establishing A New Clipping Path This interface provides the information required to calculate the orientation and position for each marker of an Svg element. To give an Svg element the capability to draw markers, let the Svg element implement this interface. Properties IsClosed MarkerPositions An array specifying the position of each vertex in the Svg element's shape. MayHaveCurves Methods GetEndAngle(int) Get the angle of the path segment leaving the specified vertex in degrees. GetMarker(int) GetStartAngle(int) Get the angle of the path segment entering the specified vertex."
  },
  "api/SharpVectors.Dom.Svg.ISvgAElement.Target.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAElement.Target.html",
    "title": "Property Target | SharpVectors Documentation",
    "keywords": "Property Target Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Target ISvgAnimatedString Target { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgAElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAElement.html",
    "title": "Interface ISvgAElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgAElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Properties Target"
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.GetGlyphItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.GetGlyphItem.html",
    "title": "Method GetGlyphItem | SharpVectors Documentation",
    "keywords": "Method GetGlyphItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetGlyphItem(string) Gets the ISvgAltGlyphItemElement with the specified name or ID. ISvgAltGlyphItemElement GetGlyphItem(string name) Parameters name string The name or ID of the required ISvgAltGlyphItemElement. Returns ISvgAltGlyphItemElement A ISvgAltGlyphItemElement specifying the 'altGlyphItem' element of the specifiied name or ID. This will always return null, if the IsSimple is true."
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.GetGlyphRef.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.GetGlyphRef.html",
    "title": "Method GetGlyphRef | SharpVectors Documentation",
    "keywords": "Method GetGlyphRef Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetGlyphRef(string) Gets the ISvgGlyphRefElement with the specified name or ID. ISvgGlyphRefElement GetGlyphRef(string name) Parameters name string The name or ID of the required ISvgGlyphRefElement. Returns ISvgGlyphRefElement A ISvgGlyphRefElement specifying the 'glyphRef' element of the specifiied name or ID. This will always return null, if the IsSimple is false."
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.IsSimple.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.IsSimple.html",
    "title": "Property IsSimple | SharpVectors Documentation",
    "keywords": "Property IsSimple Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsSimple Gets a value indicating whether this is a simple content model. bool IsSimple { get; } Property Value bool Returns true if this element defines a simple content model that contains only 'glyphRef' elements, otherwise returns false."
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphDefElement.html",
    "title": "Interface ISvgAltGlyphDefElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAltGlyphDefElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgAltGlyphDefElement interface corresponds to the 'altGlyphDef' element. public interface ISvgAltGlyphDefElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Remarks Content model: Either one or more 'glyphRef' elements, orIn the simplest case, an 'altGlyphDef' contains one or more 'glyphRef' elements. Each 'glyphRef' element references a single glyph within a particular font. one or more 'altGlyphItem' elements.In the more complex case, an 'altGlyphDef' contains one or more 'altGlyphItem' elements. Each 'altGlyphItem' represents a candidate set of substitute glyphs. Each 'altGlyphItem' contains one or more 'glyphRef' elements. Each 'glyphRef' element references a single glyph within a particular font. Properties IsSimple Gets a value indicating whether this is a simple content model. Methods GetGlyphItem(string) Gets the ISvgAltGlyphItemElement with the specified name or ID. GetGlyphRef(string) Gets the ISvgGlyphRefElement with the specified name or ID."
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphElement.Format.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphElement.Format.html",
    "title": "Property Format | SharpVectors Documentation",
    "keywords": "Property Format Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Format The format of the given font. This corresponds to attribute 'format' on the given element. string Format { get; set; } Property Value string The format of the given font. Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphElement.GlyphRef.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphElement.GlyphRef.html",
    "title": "Property GlyphRef | SharpVectors Documentation",
    "keywords": "Property GlyphRef Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GlyphRef The glyph identifier, this corresponds to attribute 'glyphRef attribute' on the given element. string GlyphRef { get; set; } Property Value string The glyph identifier, the format of which is dependent on the Format of the given font. Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphElement.html",
    "title": "Interface ISvgAltGlyphElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAltGlyphElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgAltGlyphElement interface corresponds to the 'altGlyph' element. public interface ISvgAltGlyphElement : ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgUriReference Inherited Members ISvgTextPositioningElement.X ISvgTextPositioningElement.Y ISvgTextPositioningElement.Dx ISvgTextPositioningElement.Dy ISvgTextPositioningElement.Rotate ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(long, long) ISvgTextContentElement.GetStartPositionOfChar(long) ISvgTextContentElement.GetEndPositionOfChar(long) ISvgTextContentElement.GetExtentOfChar(long) ISvgTextContentElement.GetRotationOfChar(long) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(long, long) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgUriReference.Href Properties Format The format of the given font. This corresponds to attribute 'format' on the given element. GlyphRef The glyph identifier, this corresponds to attribute 'glyphRef attribute' on the given element."
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphItemElement.GetGlyphRef.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphItemElement.GetGlyphRef.html",
    "title": "Method GetGlyphRef | SharpVectors Documentation",
    "keywords": "Method GetGlyphRef Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetGlyphRef(string) Gets the ISvgGlyphRefElement with the specified name or ID. ISvgGlyphRefElement GetGlyphRef(string name) Parameters name string The name or ID of the required ISvgGlyphRefElement. Returns ISvgGlyphRefElement A ISvgGlyphRefElement specifying the 'glyphRef' element of the specifiied name or ID."
  },
  "api/SharpVectors.Dom.Svg.ISvgAltGlyphItemElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAltGlyphItemElement.html",
    "title": "Interface ISvgAltGlyphItemElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAltGlyphItemElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgAltGlyphItemElement interface corresponds to the 'altGlyphItem' element. public interface ISvgAltGlyphItemElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Remarks *Content model:* One or more 'glyphRef' elements. The 'altGlyphItem' element defines a candidate set of possible glyph substitutions. The first 'altGlyphItem' element whose referenced glyphs are all available is chosen. Its glyphs are rendered instead of the character(s) that are inside of the referencing 'altGlyph' element. Methods GetGlyphRef(string) Gets the ISvgGlyphRefElement with the specified name or ID."
  },
  "api/SharpVectors.Dom.Svg.ISvgAngle.ConvertToSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAngle.ConvertToSpecifiedUnits.html",
    "title": "Method ConvertToSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Method ConvertToSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ConvertToSpecifiedUnits(SvgAngleType) Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueAsSpecified and valueAsString might be modified as a result of this method. void ConvertToSpecifiedUnits(SvgAngleType unitType) Parameters unitType SvgAngleType The unitType to switch to (e.g., SvgAngleTypeDEG)."
  },
  "api/SharpVectors.Dom.Svg.ISvgAngle.NewValueSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAngle.NewValueSpecifiedUnits.html",
    "title": "Method NewValueSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Method NewValueSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NewValueSpecifiedUnits(SvgAngleType, double) Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object. void NewValueSpecifiedUnits(SvgAngleType unitType, double valueInSpecifiedUnits) Parameters unitType SvgAngleType The unitType for the angle value (e.g., SvgAngleTypeDEG). valueInSpecifiedUnits double The angle value."
  },
  "api/SharpVectors.Dom.Svg.ISvgAngle.UnitType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAngle.UnitType.html",
    "title": "Property UnitType | SharpVectors Documentation",
    "keywords": "Property UnitType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll UnitType The type of the value as specified by the SvgAngleType enum class. SvgAngleType UnitType { get; } Property Value SvgAngleType"
  },
  "api/SharpVectors.Dom.Svg.ISvgAngle.Value.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAngle.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Value The angle value as a floating point value, in degrees. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting. double Value { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgAngle.ValueAsString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAngle.ValueAsString.html",
    "title": "Property ValueAsString | SharpVectors Documentation",
    "keywords": "Property ValueAsString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ValueAsString The angle value as a string value, in the units expressed by unitType. Setting this attribute will cause value and valueInSpecifiedUnits to be updated automatically to reflect this setting. string ValueAsString { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgAngle.ValueInSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAngle.ValueInSpecifiedUnits.html",
    "title": "Property ValueInSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Property ValueInSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ValueInSpecifiedUnits The angle value as a floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting. double ValueInSpecifiedUnits { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAngle.html",
    "title": "Interface ISvgAngle | SharpVectors Documentation",
    "keywords": "Interface ISvgAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgAngle interface corresponds to the angle basic data type. public interface ISvgAngle Properties UnitType The type of the value as specified by the SvgAngleType enum class. Value The angle value as a floating point value, in degrees. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting. ValueAsString The angle value as a string value, in the units expressed by unitType. Setting this attribute will cause value and valueInSpecifiedUnits to be updated automatically to reflect this setting. ValueInSpecifiedUnits The angle value as a floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting. Methods ConvertToSpecifiedUnits(SvgAngleType) Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueAsSpecified and valueAsString might be modified as a result of this method. NewValueSpecifiedUnits(SvgAngleType, double) Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.Accumulate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.Accumulate.html",
    "title": "Property Accumulate | SharpVectors Documentation",
    "keywords": "Property Accumulate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Accumulate Gets or sets a value that controls whether or not the animation is cumulative. string Accumulate { get; set; } Property Value string Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.Additive.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.Additive.html",
    "title": "Property Additive | SharpVectors Documentation",
    "keywords": "Property Additive Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Additive Gets or sets a value that controls whether or not the animation is additive. string Additive { get; set; } Property Value string Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.AttributeName.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.AttributeName.html",
    "title": "Property AttributeName | SharpVectors Documentation",
    "keywords": "Property AttributeName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. string AttributeName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.AttributeType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.AttributeType.html",
    "title": "Property AttributeType | SharpVectors Documentation",
    "keywords": "Property AttributeType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. string AttributeType { get; set; } Property Value string The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.By.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.By.html",
    "title": "Property By | SharpVectors Documentation",
    "keywords": "Property By Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll By Gets or sets a value that specifies a relative offset value for the animation. string By { get; set; } Property Value string Specifies a relative offset value for the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.CalcMode.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.CalcMode.html",
    "title": "Property CalcMode | SharpVectors Documentation",
    "keywords": "Property CalcMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CalcMode Gets or sets a value that specifies the interpolation mode for the animation. string CalcMode { get; set; } Property Value string This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.From.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.From.html",
    "title": "Property From | SharpVectors Documentation",
    "keywords": "Property From Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll From Gets or sets a value that specifies the starting value of the animation. string From { get; set; } Property Value string Specifies the starting value of the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.KeySplines.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.KeySplines.html",
    "title": "Property KeySplines | SharpVectors Documentation",
    "keywords": "Property KeySplines Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. string KeySplines { get; set; } Property Value string The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.KeyTimes.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.KeyTimes.html",
    "title": "Property KeyTimes | SharpVectors Documentation",
    "keywords": "Property KeyTimes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. string KeyTimes { get; set; } Property Value string Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.To.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.To.html",
    "title": "Property To | SharpVectors Documentation",
    "keywords": "Property To Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll To Gets or sets a value that specifies the ending value of the animation. string To { get; set; } Property Value string Specifies the ending value of the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.Values.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.Values.html",
    "title": "Property Values | SharpVectors Documentation",
    "keywords": "Property Values Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Values Gets or sets a semicolon-separated list of one or more values. string Values { get; set; } Property Value string Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateColorElement.html",
    "title": "Interface ISvgAnimateColorElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateColorElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SVGAnimateColorElement interface corresponds to the \"animateColor\" element. public interface ISvgAnimateColorElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget, ISvgStylable Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(float) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(float) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Additive Gets or sets a value that controls whether or not the animation is additive. AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. By Gets or sets a value that specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. From Gets or sets a value that specifies the starting value of the animation. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. To Gets or sets a value that specifies the ending value of the animation. Values Gets or sets a semicolon-separated list of one or more values."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.Accumulate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.Accumulate.html",
    "title": "Property Accumulate | SharpVectors Documentation",
    "keywords": "Property Accumulate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Accumulate Gets or sets a value that controls whether or not the animation is cumulative. string Accumulate { get; set; } Property Value string Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.Additive.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.Additive.html",
    "title": "Property Additive | SharpVectors Documentation",
    "keywords": "Property Additive Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Additive Gets or sets a value that controls whether or not the animation is additive. string Additive { get; set; } Property Value string Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.AttributeName.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.AttributeName.html",
    "title": "Property AttributeName | SharpVectors Documentation",
    "keywords": "Property AttributeName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. string AttributeName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.AttributeType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.AttributeType.html",
    "title": "Property AttributeType | SharpVectors Documentation",
    "keywords": "Property AttributeType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. string AttributeType { get; set; } Property Value string The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.By.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.By.html",
    "title": "Property By | SharpVectors Documentation",
    "keywords": "Property By Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll By Gets or sets a value that specifies a relative offset value for the animation. string By { get; set; } Property Value string Specifies a relative offset value for the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.CalcMode.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.CalcMode.html",
    "title": "Property CalcMode | SharpVectors Documentation",
    "keywords": "Property CalcMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CalcMode Gets or sets a value that specifies the interpolation mode for the animation. string CalcMode { get; set; } Property Value string This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.From.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.From.html",
    "title": "Property From | SharpVectors Documentation",
    "keywords": "Property From Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll From Gets or sets a value that specifies the starting value of the animation. string From { get; set; } Property Value string Specifies the starting value of the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.KeySplines.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.KeySplines.html",
    "title": "Property KeySplines | SharpVectors Documentation",
    "keywords": "Property KeySplines Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. string KeySplines { get; set; } Property Value string The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.KeyTimes.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.KeyTimes.html",
    "title": "Property KeyTimes | SharpVectors Documentation",
    "keywords": "Property KeyTimes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. string KeyTimes { get; set; } Property Value string Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.To.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.To.html",
    "title": "Property To | SharpVectors Documentation",
    "keywords": "Property To Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll To Gets or sets a value that specifies the ending value of the animation. string To { get; set; } Property Value string Specifies the ending value of the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.Values.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.Values.html",
    "title": "Property Values | SharpVectors Documentation",
    "keywords": "Property Values Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Values Gets or sets a semicolon-separated list of one or more values. string Values { get; set; } Property Value string Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateElement.html",
    "title": "Interface ISvgAnimateElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface corresponds to the \"animate\" element. public interface ISvgAnimateElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget, ISvgStylable Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(float) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(float) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Additive Gets or sets a value that controls whether or not the animation is additive. AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. By Gets or sets a value that specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. From Gets or sets a value that specifies the starting value of the animation. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. To Gets or sets a value that specifies the ending value of the animation. Values Gets or sets a semicolon-separated list of one or more values."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMPathElement.html",
    "title": "Interface ISvgAnimateMPathElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateMPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface corresponds to the \"mpath\" element. public interface ISvgAnimateMPathElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Accumulate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Accumulate.html",
    "title": "Property Accumulate | SharpVectors Documentation",
    "keywords": "Property Accumulate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Accumulate Gets or sets a value that controls whether or not the animation is cumulative. string Accumulate { get; set; } Property Value string Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Additive.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Additive.html",
    "title": "Property Additive | SharpVectors Documentation",
    "keywords": "Property Additive Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Additive Gets or sets a value that controls whether or not the animation is additive. string Additive { get; set; } Property Value string Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.By.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.By.html",
    "title": "Property By | SharpVectors Documentation",
    "keywords": "Property By Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll By Gets or sets a value that specifies a relative offset value for the animation. string By { get; set; } Property Value string Specifies a relative offset value for the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.CalcMode.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.CalcMode.html",
    "title": "Property CalcMode | SharpVectors Documentation",
    "keywords": "Property CalcMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CalcMode Gets or sets a value that specifies the interpolation mode for the animation. string CalcMode { get; set; } Property Value string This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.From.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.From.html",
    "title": "Property From | SharpVectors Documentation",
    "keywords": "Property From Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll From Gets or sets a value that specifies the starting value of the animation. string From { get; set; } Property Value string Specifies the starting value of the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.KeyPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.KeyPoints.html",
    "title": "Property KeyPoints | SharpVectors Documentation",
    "keywords": "Property KeyPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KeyPoints Gets or sets a value that takes a semicolon-separated list of floating point values between 0 and 1 and indicates how far along the motion path the object shall move at the moment in time specified by corresponding \"keyTimes\" value. string KeyPoints { get; set; } Property Value string Distance calculations use the user agent's distance along the path algorithm. Each progress value in the list corresponds to a value in the \"keyTimes\" attribute list. If a list of \"keyPoints\" is specified, there must be exactly as many values in the \"keyPoints\" list as in the \"keyTimes\" list."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.KeySplines.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.KeySplines.html",
    "title": "Property KeySplines | SharpVectors Documentation",
    "keywords": "Property KeySplines Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. string KeySplines { get; set; } Property Value string The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.KeyTimes.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.KeyTimes.html",
    "title": "Property KeyTimes | SharpVectors Documentation",
    "keywords": "Property KeyTimes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. string KeyTimes { get; set; } Property Value string Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Origin.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Origin.html",
    "title": "Property Origin | SharpVectors Documentation",
    "keywords": "Property Origin Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Origin The \"origin\" attribute is defined in the SMIL Animation specification. It has no effect in SVG. string Origin { get; set; } Property Value string The value is \"default\"."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Path.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Path.html",
    "title": "Property Path | SharpVectors Documentation",
    "keywords": "Property Path Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Path Gets or set the attribute specifying the motion path, expressed in the same format and interpreted the same way as the \"d\" attribute on the \"path\" element. string Path { get; set; } Property Value string The effect of a motion path animation is to add a supplemental transformation matrix onto the CTM for the referenced object which causes a translation along the x- and y-axes of the current user coordinate system by the computed X and Y values computed over time."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Rotate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Rotate.html",
    "title": "Property Rotate | SharpVectors Documentation",
    "keywords": "Property Rotate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Rotate Gets or sets an attribute post-multiplies a supplemental transformation matrix onto the CTM of the target element to apply a rotation transformation about the origin of the current user coordinate system. string Rotate { get; set; } Property Value string The rotation transformation is applied after the supplemental translation transformation that is computed due to the \"path\" attribute. autoIndicates that the object is rotated over time by the angle of the direction (i.e., directional tangent vector) of the motion path. auto-reverseIndicates that the object is rotated over time by the angle of the direction (i.e., directional tangent vector) of the motion path plus 180 degrees. numberIndicates that the target element has a constant rotation transformation applied to it, where the rotation angle is the specified number of degrees. The default value is '0'."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.To.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.To.html",
    "title": "Property To | SharpVectors Documentation",
    "keywords": "Property To Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll To Gets or sets a value that specifies the ending value of the animation. string To { get; set; } Property Value string Specifies the ending value of the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Values.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.Values.html",
    "title": "Property Values | SharpVectors Documentation",
    "keywords": "Property Values Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Values Gets or sets a semicolon-separated list of one or more values. string Values { get; set; } Property Value string Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateMotionElement.html",
    "title": "Interface ISvgAnimateMotionElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateMotionElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface corresponds to the \"animateMotion\" element. public interface ISvgAnimateMotionElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(float) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(float) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Additive Gets or sets a value that controls whether or not the animation is additive. By Gets or sets a value that specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. From Gets or sets a value that specifies the starting value of the animation. KeyPoints Gets or sets a value that takes a semicolon-separated list of floating point values between 0 and 1 and indicates how far along the motion path the object shall move at the moment in time specified by corresponding \"keyTimes\" value. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. Origin The \"origin\" attribute is defined in the SMIL Animation specification. It has no effect in SVG. Path Gets or set the attribute specifying the motion path, expressed in the same format and interpreted the same way as the \"d\" attribute on the \"path\" element. Rotate Gets or sets an attribute post-multiplies a supplemental transformation matrix onto the CTM of the target element to apply a rotation transformation about the origin of the current user coordinate system. To Gets or sets a value that specifies the ending value of the animation. Values Gets or sets a semicolon-separated list of one or more values."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.AttributeName.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.AttributeName.html",
    "title": "Property AttributeName | SharpVectors Documentation",
    "keywords": "Property AttributeName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. string AttributeName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.AttributeType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.AttributeType.html",
    "title": "Property AttributeType | SharpVectors Documentation",
    "keywords": "Property AttributeType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. string AttributeType { get; set; } Property Value string The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.To.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.To.html",
    "title": "Property To | SharpVectors Documentation",
    "keywords": "Property To Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll To Gets or sets a value that specifies the ending value of the animation. string To { get; set; } Property Value string Specifies the value for the attribute during the duration of the ‘set’ element. The argument value must match the attribute type."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateSetElement.html",
    "title": "Interface ISvgAnimateSetElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateSetElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Object-oriented access to the attributes of the \"set\" element via the SVG DOM is not available. public interface ISvgAnimateSetElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(float) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(float) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) Properties AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. To Gets or sets a value that specifies the ending value of the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.Accumulate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.Accumulate.html",
    "title": "Property Accumulate | SharpVectors Documentation",
    "keywords": "Property Accumulate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Accumulate Gets or sets a value that controls whether or not the animation is cumulative. string Accumulate { get; set; } Property Value string Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.Additive.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.Additive.html",
    "title": "Property Additive | SharpVectors Documentation",
    "keywords": "Property Additive Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Additive Gets or sets a value that controls whether or not the animation is additive. string Additive { get; set; } Property Value string Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.AttributeName.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.AttributeName.html",
    "title": "Property AttributeName | SharpVectors Documentation",
    "keywords": "Property AttributeName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. string AttributeName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.AttributeType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.AttributeType.html",
    "title": "Property AttributeType | SharpVectors Documentation",
    "keywords": "Property AttributeType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. string AttributeType { get; set; } Property Value string The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.By.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.By.html",
    "title": "Property By | SharpVectors Documentation",
    "keywords": "Property By Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll By Gets or sets a value that specifies a relative offset value for the animation. string By { get; set; } Property Value string Specifies a relative offset value for the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.CalcMode.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.CalcMode.html",
    "title": "Property CalcMode | SharpVectors Documentation",
    "keywords": "Property CalcMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CalcMode Gets or sets a value that specifies the interpolation mode for the animation. string CalcMode { get; set; } Property Value string This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.From.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.From.html",
    "title": "Property From | SharpVectors Documentation",
    "keywords": "Property From Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll From Gets or sets a value that specifies the starting value of the animation. string From { get; set; } Property Value string Specifies the starting value of the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.KeySplines.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.KeySplines.html",
    "title": "Property KeySplines | SharpVectors Documentation",
    "keywords": "Property KeySplines Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. string KeySplines { get; set; } Property Value string The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.KeyTimes.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.KeyTimes.html",
    "title": "Property KeyTimes | SharpVectors Documentation",
    "keywords": "Property KeyTimes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. string KeyTimes { get; set; } Property Value string Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.To.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.To.html",
    "title": "Property To | SharpVectors Documentation",
    "keywords": "Property To Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll To Gets or sets a value that specifies the ending value of the animation. string To { get; set; } Property Value string Specifies the ending value of the animation."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Type Gets or sets a value to indicates the type of transformation which is to have its values change over time. SvgTransformType Type { get; set; } Property Value SvgTransformType The values are translate | scale | rotate | skewX | skewY. If the attribute is not specified, then the effect is as if a value of 'translate' were specified. The ‘from’, ‘by’ and ‘to’ attributes take a value expressed using the same syntax that is available for the given transformation type: For a type='translate\", each individual value is expressed as {tx} [,{ty}]. For a type=\"scale\", each individual value is expressed as {sx} [,{sy}]. For a type=\"rotate\", each individual value is expressed as {rotate-angle} [{cx} {cy}]. For a type=\"skewX\" and type=\"skewY\", each individual value is expressed as {skew-angle}."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.Values.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.Values.html",
    "title": "Property Values | SharpVectors Documentation",
    "keywords": "Property Values Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Values Gets or sets a semicolon-separated list of one or more values. string Values { get; set; } Property Value string Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimateTransformElement.html",
    "title": "Interface ISvgAnimateTransformElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimateTransformElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface corresponds to the \"animateTransform\" element. public interface ISvgAnimateTransformElement : ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Inherited Members ISvgAnimationElement.TargetElement ISvgAnimationElement.StartTime ISvgAnimationElement.CurrentTime ISvgAnimationElement.SimpleDuration ISvgAnimationElement.Begin ISvgAnimationElement.Duration ISvgAnimationElement.End ISvgAnimationElement.Minimum ISvgAnimationElement.Maximum ISvgAnimationElement.Restart ISvgAnimationElement.RepeatCount ISvgAnimationElement.RepeatDuration ISvgAnimationElement.Fill ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(float) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(float) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Additive Gets or sets a value that controls whether or not the animation is additive. AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. By Gets or sets a value that specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. From Gets or sets a value that specifies the starting value of the animation. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. To Gets or sets a value that specifies the ending value of the animation. Type Gets or sets a value to indicates the type of transformation which is to have its values change over time. Values Gets or sets a semicolon-separated list of one or more values."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedAngle.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedAngle.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal ISvgAngle AnimVal { get; } Property Value ISvgAngle"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedAngle.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedAngle.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal ISvgAngle BaseVal { get; } Property Value ISvgAngle"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedAngle.html",
    "title": "Interface ISvgAnimatedAngle | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgAnimatedAngle Properties AnimVal BaseVal"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedBoolean.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedBoolean.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. bool AnimVal { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedBoolean.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedBoolean.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if it is readonly. bool BaseVal { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedBoolean.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedBoolean.html",
    "title": "Interface ISvgAnimatedBoolean | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedBoolean Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes of type boolean which can be animated. public interface ISvgAnimatedBoolean Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if it is readonly."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedEnumeration.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedEnumeration.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. ushort AnimVal { get; } Property Value ushort"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedEnumeration.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedEnumeration.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations. Inheriting Class should throw an exception when the value is read only ushort BaseVal { get; set; } Property Value ushort"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedEnumeration.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedEnumeration.html",
    "title": "Interface ISvgAnimatedEnumeration | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedEnumeration Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes whose value must be a constant from a particular enumeration and which can be animated. public interface ISvgAnimatedEnumeration Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations. Inheriting Class should throw an exception when the value is read only"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedInteger.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedInteger.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as BaseVal. long AnimVal { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedInteger.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedInteger.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations. long BaseVal { get; set; } Property Value long"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedInteger.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedInteger.html",
    "title": "Interface ISvgAnimatedInteger | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedInteger Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes of basic type integer which can be animated. public interface ISvgAnimatedInteger Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as BaseVal. BaseVal The base value of the given attribute before applying any animations."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLength.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLength.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. ISvgLength AnimVal { get; } Property Value ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLength.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLength.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations ISvgLength BaseVal { get; } Property Value ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLength.html",
    "title": "Interface ISvgAnimatedLength | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes of basic type 'length' which can be animated. public interface ISvgAnimatedLength Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. BaseVal The base value of the given attribute before applying any animations"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. ISvgLengthList AnimVal { get; } Property Value ISvgLengthList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations. ISvgLengthList BaseVal { get; } Property Value ISvgLengthList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.Count.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Count Gets the number of elements contained in the ISvgAnimatedLengthList. int Count { get; } Property Value int The number of elements contained in the ISvgAnimatedLengthList."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.Item.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll this[uint] Gets the element at the specified index. ISvgAnimatedLength this[uint index] { get; } Parameters index uint The zero-based index of the element to get or set. Property Value ISvgAnimatedLength The element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedLengthList.html",
    "title": "Interface ISvgAnimatedLengthList | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedLengthList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes of type SvgLengthList which can be animated. public interface ISvgAnimatedLengthList Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations. Count Gets the number of elements contained in the ISvgAnimatedLengthList. this[uint] Gets the element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumber.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumber.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. double AnimVal { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumber.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumber.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if the value is read only. double BaseVal { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumber.html",
    "title": "Interface ISvgAnimatedNumber | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes of basic type 'number' which can be animated. public interface ISvgAnimatedNumber Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if the value is read only."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, then this attribute contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, then this attribute contains the same value as 'BaseVal'. ISvgNumberList AnimVal { get; } Property Value ISvgNumberList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations ISvgNumberList BaseVal { get; } Property Value ISvgNumberList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.Count.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Count Gets the number of elements contained in the ISvgAnimatedNumberList. int Count { get; } Property Value int The number of elements contained in the ISvgAnimatedNumberList."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.Item.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll this[uint] Gets the element at the specified index. ISvgAnimatedNumber this[uint index] { get; } Parameters index uint The zero-based index of the element to get or set. Property Value ISvgAnimatedNumber The element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedNumberList.html",
    "title": "Interface ISvgAnimatedNumberList | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedNumberList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes which take a list of numbers and which can be animated. public interface ISvgAnimatedNumberList Properties AnimVal If the given attribute or property is being animated, then this attribute contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, then this attribute contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations Count Gets the number of elements contained in the ISvgAnimatedNumberList. this[uint] Gets the element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.AnimatedNormalizedPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.AnimatedNormalizedPathSegList.html",
    "title": "Property AnimatedNormalizedPathSegList | SharpVectors Documentation",
    "keywords": "Property AnimatedNormalizedPathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimatedNormalizedPathSegList ISvgPathSegList AnimatedNormalizedPathSegList { get; } Property Value ISvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.AnimatedPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.AnimatedPathSegList.html",
    "title": "Property AnimatedPathSegList | SharpVectors Documentation",
    "keywords": "Property AnimatedPathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimatedPathSegList ISvgPathSegList AnimatedPathSegList { get; } Property Value ISvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.NormalizedPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.NormalizedPathSegList.html",
    "title": "Property NormalizedPathSegList | SharpVectors Documentation",
    "keywords": "Property NormalizedPathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NormalizedPathSegList ISvgPathSegList NormalizedPathSegList { get; } Property Value ISvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.PathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.PathSegList.html",
    "title": "Property PathSegList | SharpVectors Documentation",
    "keywords": "Property PathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PathSegList ISvgPathSegList PathSegList { get; } Property Value ISvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPathData.html",
    "title": "Interface ISvgAnimatedPathData | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedPathData Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgAnimatedPathData interface supports elements which have a 'd' attribute which holds Svg path data, and supports the ability to animate that attribute. public interface ISvgAnimatedPathData Properties AnimatedNormalizedPathSegList AnimatedPathSegList NormalizedPathSegList PathSegList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPoints.AnimatedPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPoints.AnimatedPoints.html",
    "title": "Property AnimatedPoints | SharpVectors Documentation",
    "keywords": "Property AnimatedPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimatedPoints ISvgPointList AnimatedPoints { get; } Property Value ISvgPointList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPoints.Points.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPoints.Points.html",
    "title": "Property Points | SharpVectors Documentation",
    "keywords": "Property Points Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Points ISvgPointList Points { get; } Property Value ISvgPointList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPoints.html",
    "title": "Interface ISvgAnimatedPoints | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgAnimatedPoints interface supports elements which have a 'points' attribute which holds a list of coordinate values and which support the ability to animate that attribute. public interface ISvgAnimatedPoints Properties AnimatedPoints Points"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPreserveAspectRatio.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPreserveAspectRatio.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same ISvgPreserveAspectRatio AnimVal { get; } Property Value ISvgPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPreserveAspectRatio.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPreserveAspectRatio.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations. ISvgPreserveAspectRatio BaseVal { get; } Property Value ISvgPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedPreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedPreserveAspectRatio.html",
    "title": "Interface ISvgAnimatedPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedPreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes of type SvgPreserveAspectRatio which can be animated. public interface ISvgAnimatedPreserveAspectRatio Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same BaseVal The base value of the given attribute before applying any animations."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedRect.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedRect.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. ISvgRect AnimVal { get; } Property Value ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedRect.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedRect.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations. ISvgRect BaseVal { get; } Property Value ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedRect.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedRect.html",
    "title": "Interface ISvgAnimatedRect | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes of type SvgRect which can be animated. public interface ISvgAnimatedRect Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedString.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedString.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. string AnimVal { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedString.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedString.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if this value is read only. string BaseVal { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedString.html",
    "title": "Interface ISvgAnimatedString | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes of type DOMString which can be animated. public interface ISvgAnimatedString Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if this value is read only."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedTransformList.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedTransformList.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimVal ISvgTransformList AnimVal { get; } Property Value ISvgTransformList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedTransformList.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedTransformList.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseVal ISvgTransformList BaseVal { get; } Property Value ISvgTransformList"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimatedTransformList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimatedTransformList.html",
    "title": "Interface ISvgAnimatedTransformList | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimatedTransformList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for the various attributes which specify a set of transformations, such as the transform attribute which is available for many of Svg's elements, and which can be animated. public interface ISvgAnimatedTransformList Properties AnimVal BaseVal"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Begin.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Begin.html",
    "title": "Property Begin | SharpVectors Documentation",
    "keywords": "Property Begin Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Begin Gets or sets values of values that defines when the element should begin (i.e. become active). string Begin { get; set; } Property Value string The attribute value is a semicolon separated list of values. If set to \"indefinite\", the begin of the animation will be determined by a BeginElement() method call or a hyperlink targeted to the element."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.CurrentTime.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.CurrentTime.html",
    "title": "Property CurrentTime | SharpVectors Documentation",
    "keywords": "Property CurrentTime Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CurrentTime Gets the current time in seconds relative to time zero for the given time container. float CurrentTime { get; } Property Value float The current time in seconds relative to time zero for the given time container."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Duration.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Duration.html",
    "title": "Property Duration | SharpVectors Documentation",
    "keywords": "Property Duration Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Duration Gets or sets a value that specifies the simple duration. string Duration { get; set; } Property Value string The attribute value can be one of the following: Clock-value (time duration) Specifies the length of the simple duration in presentation time. Value must be greater than 0. media Specifies the simple duration as the intrinsic media duration. This is only valid for elements that define media. (For SVG's animation elements, if 'media' is specified, the attribute will be ignored.) indefiniteSpecifies the simple duration as indefinite. If the animation does not have a \"dur\" attribute, the simple duration is indefinite."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.End.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.End.html",
    "title": "Property End | SharpVectors Documentation",
    "keywords": "Property End Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll End Gets or sets the attribute that defines an end value for the animation that can constrain the active duration. string End { get; set; } Property Value string The attribute value is a semicolon separated list of values. A value of \"indefinite\" specifies that the end of the animation will be determined by an EndElement() method call (the animation DOM methods are described in DOM interfaces)."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Fill.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Fill.html",
    "title": "Property Fill | SharpVectors Documentation",
    "keywords": "Property Fill Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Fill Gets or sets the attribute can be used to maintain the value of the animation after the active duration of the animation element ends. string Fill { get; set; } Property Value string This attribute can have the following values: freeze The animation effect F(t) is defined to freeze the effect value at the last value of the active duration. The animation effect is \"frozen\" for the remainder of the document duration. remove The animation effect is removed (no longer applied) when the active duration of the animation is over. After the active end of the animation, the animation no longer affects the target. This is the default value."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Maximum.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Maximum.html",
    "title": "Property Maximum | SharpVectors Documentation",
    "keywords": "Property Maximum Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Maximum Gets or sets the value that specifies the maximum value of the active duration. string Maximum { get; set; } Property Value string The attribute value can be either of the following: Clock-value Specifies the length of the maximum value of the active duration, measured in local time. Value must be greater than 0. media Specifies the maximum value of the active duration as the intrinsic media duration. This is only valid for elements that define media. (For SVG's animation elements, if 'media' is specified, the attribute will be ignored.) There is no default value for \"max\". This does not constrain the active duration at all."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Minimum.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Minimum.html",
    "title": "Property Minimum | SharpVectors Documentation",
    "keywords": "Property Minimum Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Minimum Gets or sets a value that specifies the minimum value of the active duration. string Minimum { get; set; } Property Value string The attribute value can be either of the following: Clock-value Specifies the length of the minimum value of the active duration, measured in local time. Value must be greater than 0. media Specifies the minimum value of the active duration as the intrinsic media duration. This is only valid for elements that define media. (For SVG's animation elements, if 'media' is specified, the attribute will be ignored.)"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.RepeatCount.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.RepeatCount.html",
    "title": "Property RepeatCount | SharpVectors Documentation",
    "keywords": "Property RepeatCount Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RepeatCount Gets or sets a value that specifies the number of iterations of the animation function. string RepeatCount { get; set; } Property Value string It can have the following attribute values: numeric value This is a (base 10) \"floating point\" numeric value that specifies the number of iterations. It can include partial iterations expressed as fraction values. A fractional value describes a portion of the simple duration. Values must be greater than 0. indefinite The animation is defined to repeat indefinitely (i.e. until the document ends)."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.RepeatDuration.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.RepeatDuration.html",
    "title": "Property RepeatDuration | SharpVectors Documentation",
    "keywords": "Property RepeatDuration Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RepeatDuration Gets or sets a value that specifies the total duration for repeat. string RepeatDuration { get; set; } Property Value string It can have the following attribute values: Clock-valueSpecifies the duration in presentation time to repeat the animation function f(t). indefiniteThe animation is defined to repeat indefinitely (i.e. until the document ends)."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Restart.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.Restart.html",
    "title": "Property Restart | SharpVectors Documentation",
    "keywords": "Property Restart Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Restart Gets or sets the attribute that controls the circumstances under which an animation is restarted. string Restart { get; set; } Property Value string alwaysThe animation can be restarted at any time. This is the default value. whenNotActive The animation can only be restarted when it is not active (i.e. after the active end). Attempts to restart the animation during its active duration are ignored. never The element cannot be restarted for the remainder of the current simple duration of the parent time container. (In the case of SVG, since the parent time container is the SVG document fragment, then the animation cannot be restarted for the remainder of the document duration.)"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.SimpleDuration.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.SimpleDuration.html",
    "title": "Property SimpleDuration | SharpVectors Documentation",
    "keywords": "Property SimpleDuration Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SimpleDuration Gets the number of seconds for the simple duration for this animation. If the simple duration is undefined (e.g., the end time is indefinite), then an exception is raised. float SimpleDuration { get; } Property Value float The number of seconds for the simple duration for this animation. Exceptions DomException The simple duration is not determined on the given element."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.StartTime.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.StartTime.html",
    "title": "Property StartTime | SharpVectors Documentation",
    "keywords": "Property StartTime Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll StartTime Gets the begin time, in seconds, for this animation element's current interval, if it exists, regardless of whether the interval has begun yet. If there is no current interval, then a DomException with code INVALID_STATE_ERR is thrown. float StartTime { get; } Property Value float The start time, in seconds, of this animation element's current interval. Exceptions DomException The animation element does not have a current interval."
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.TargetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.TargetElement.html",
    "title": "Property TargetElement | SharpVectors Documentation",
    "keywords": "Property TargetElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll TargetElement Gets the element which is being animated. ISvgElement TargetElement { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgAnimationElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgAnimationElement.html",
    "title": "Interface ISvgAnimationElement | SharpVectors Documentation",
    "keywords": "Interface ISvgAnimationElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This is the base interface for all of the animation element interfaces: ISvgAnimateElement, ISvgAnimateSetElement, ISvgAnimateColorElement, ISvgAnimateMotionElement and ISvgAnimateTransformElement. public interface ISvgAnimationElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired IElementTimeControl.BeginElement() IElementTimeControl.BeginElementAt(float) IElementTimeControl.EndElement() IElementTimeControl.EndElementAt(float) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) Remarks Unlike other SVG DOM interfaces, the SVG DOM does not specify convenience DOM properties corresponding to the various language attributes on SVG's animation elements. Properties Begin Gets or sets values of values that defines when the element should begin (i.e. become active). CurrentTime Gets the current time in seconds relative to time zero for the given time container. Duration Gets or sets a value that specifies the simple duration. End Gets or sets the attribute that defines an end value for the animation that can constrain the active duration. Fill Gets or sets the attribute can be used to maintain the value of the animation after the active duration of the animation element ends. Maximum Gets or sets the value that specifies the maximum value of the active duration. Minimum Gets or sets a value that specifies the minimum value of the active duration. RepeatCount Gets or sets a value that specifies the number of iterations of the animation function. RepeatDuration Gets or sets a value that specifies the total duration for repeat. Restart Gets or sets the attribute that controls the circumstances under which an animation is restarted. SimpleDuration Gets the number of seconds for the simple duration for this animation. If the simple duration is undefined (e.g., the end time is indefinite), then an exception is raised. StartTime Gets the begin time, in seconds, for this animation element's current interval, if it exists, regardless of whether the interval has begun yet. If there is no current interval, then a DomException with code INVALID_STATE_ERR is thrown. TargetElement Gets the element which is being animated."
  },
  "api/SharpVectors.Dom.Svg.ISvgCircleElement.Cx.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCircleElement.Cx.html",
    "title": "Property Cx | SharpVectors Documentation",
    "keywords": "Property Cx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Cx Corresponds to attribute cx on the given 'circle' element. ISvgAnimatedLength Cx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgCircleElement.Cy.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCircleElement.Cy.html",
    "title": "Property Cy | SharpVectors Documentation",
    "keywords": "Property Cy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Cy Corresponds to attribute cy on the given 'circle' element. ISvgAnimatedLength Cy { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgCircleElement.R.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCircleElement.R.html",
    "title": "Property R | SharpVectors Documentation",
    "keywords": "Property R Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll R Corresponds to attribute r on the given 'circle' element. ISvgAnimatedLength R { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgCircleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCircleElement.html",
    "title": "Interface ISvgCircleElement | SharpVectors Documentation",
    "keywords": "Interface ISvgCircleElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgCircleElement interface corresponds to the 'circle' element. public interface ISvgCircleElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Properties Cx Corresponds to attribute cx on the given 'circle' element. Cy Corresponds to attribute cy on the given 'circle' element. R Corresponds to attribute r on the given 'circle' element."
  },
  "api/SharpVectors.Dom.Svg.ISvgClipPathElement.ClipPathUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgClipPathElement.ClipPathUnits.html",
    "title": "Property ClipPathUnits | SharpVectors Documentation",
    "keywords": "Property ClipPathUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ClipPathUnits ISvgAnimatedEnumeration ClipPathUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgClipPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgClipPathElement.html",
    "title": "Interface ISvgClipPathElement | SharpVectors Documentation",
    "keywords": "Interface ISvgClipPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used by SvgClipPathElement. public interface ISvgClipPathElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) Properties ClipPathUnits"
  },
  "api/SharpVectors.Dom.Svg.ISvgColor.ColorType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColor.ColorType.html",
    "title": "Property ColorType | SharpVectors Documentation",
    "keywords": "Property ColorType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ColorType SvgColorType ColorType { get; } Property Value SvgColorType"
  },
  "api/SharpVectors.Dom.Svg.ISvgColor.IccColor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColor.IccColor.html",
    "title": "Property IccColor | SharpVectors Documentation",
    "keywords": "Property IccColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IccColor ISvgIccColor IccColor { get; } Property Value ISvgIccColor"
  },
  "api/SharpVectors.Dom.Svg.ISvgColor.RgbColor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColor.RgbColor.html",
    "title": "Property RgbColor | SharpVectors Documentation",
    "keywords": "Property RgbColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RgbColor ICssColor RgbColor { get; } Property Value ICssColor"
  },
  "api/SharpVectors.Dom.Svg.ISvgColor.SetColor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColor.SetColor.html",
    "title": "Method SetColor | SharpVectors Documentation",
    "keywords": "Method SetColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetColor(SvgColorType, string, string) void SetColor(SvgColorType colorType, string rgbColor, string iccColor) Parameters colorType SvgColorType rgbColor string iccColor string"
  },
  "api/SharpVectors.Dom.Svg.ISvgColor.SetRgbColor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColor.SetRgbColor.html",
    "title": "Method SetRgbColor | SharpVectors Documentation",
    "keywords": "Method SetRgbColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetRgbColor(string) void SetRgbColor(string rgbColor) Parameters rgbColor string"
  },
  "api/SharpVectors.Dom.Svg.ISvgColor.SetRgbColorIccColor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColor.SetRgbColorIccColor.html",
    "title": "Method SetRgbColorIccColor | SharpVectors Documentation",
    "keywords": "Method SetRgbColorIccColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetRgbColorIccColor(string, string) void SetRgbColorIccColor(string rgbColor, string iccColor) Parameters rgbColor string iccColor string"
  },
  "api/SharpVectors.Dom.Svg.ISvgColor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColor.html",
    "title": "Interface ISvgColor | SharpVectors Documentation",
    "keywords": "Interface ISvgColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgColor interface corresponds to color value definition for properties 'stop-color', 'flood-color' and 'lighting-color' and is a base class for interface SvgPaint. It incorporates Svg's extended notion of color, which incorporates ICC-based color specifications. Interface SVGColor does not correspond to the color basic data type. For the color basic data type, the applicable DOM interfaces are defined in CSS; in particular, see the ICssRgbColor interface. public interface ISvgColor : ICssValue Inherited Members ICssValue.CssText ICssValue.CssValueType ICssValue.IsAbsolute Properties ColorType IccColor RgbColor Methods SetColor(SvgColorType, string, string) SetRgbColor(string) SetRgbColorIccColor(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.Local.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.Local.html",
    "title": "Property Local | SharpVectors Documentation",
    "keywords": "Property Local Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Local string Local { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.Name.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Name string Name { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.RenderingIntent.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.RenderingIntent.html",
    "title": "Property RenderingIntent | SharpVectors Documentation",
    "keywords": "Property RenderingIntent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RenderingIntent ushort RenderingIntent { get; set; } Property Value ushort"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileElement.html",
    "title": "Interface ISvgColorProfileElement | SharpVectors Documentation",
    "keywords": "Interface ISvgColorProfileElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgColorProfileElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href Properties Local Name RenderingIntent"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.Name.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Name string Name { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.RenderingIntent.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.RenderingIntent.html",
    "title": "Property RenderingIntent | SharpVectors Documentation",
    "keywords": "Property RenderingIntent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RenderingIntent ushort RenderingIntent { get; set; } Property Value ushort"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.Src.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.Src.html",
    "title": "Property Src | SharpVectors Documentation",
    "keywords": "Property Src Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Src string Src { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgColorProfileRule.html",
    "title": "Interface ISvgColorProfileRule | SharpVectors Documentation",
    "keywords": "Interface ISvgColorProfileRule Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgColorProfileRule : ISvgCssRule, ICssRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText Properties Name RenderingIntent Src"
  },
  "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Amplitude.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Amplitude.html",
    "title": "Property Amplitude | SharpVectors Documentation",
    "keywords": "Property Amplitude Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Amplitude ISvgAnimatedNumber Amplitude { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Exponent.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Exponent.html",
    "title": "Property Exponent | SharpVectors Documentation",
    "keywords": "Property Exponent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Exponent ISvgAnimatedNumber Exponent { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Intercept.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Intercept.html",
    "title": "Property Intercept | SharpVectors Documentation",
    "keywords": "Property Intercept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Intercept ISvgAnimatedNumber Intercept { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Offset.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Offset.html",
    "title": "Property Offset | SharpVectors Documentation",
    "keywords": "Property Offset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Offset ISvgAnimatedNumber Offset { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Slope.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Slope.html",
    "title": "Property Slope | SharpVectors Documentation",
    "keywords": "Property Slope Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Slope ISvgAnimatedNumber Slope { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.TableValues.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.TableValues.html",
    "title": "Property TableValues | SharpVectors Documentation",
    "keywords": "Property TableValues Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll TableValues ISvgAnimatedNumberList TableValues { get; } Property Value ISvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Type ISvgAnimatedEnumeration Type { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgComponentTransferFunctionElement.html",
    "title": "Interface ISvgComponentTransferFunctionElement | SharpVectors Documentation",
    "keywords": "Interface ISvgComponentTransferFunctionElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgComponentTransferFunctionElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties Amplitude Exponent Intercept Offset Slope TableValues Type"
  },
  "api/SharpVectors.Dom.Svg.ISvgControl.DesignMode.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgControl.DesignMode.html",
    "title": "Property DesignMode | SharpVectors Documentation",
    "keywords": "Property DesignMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll DesignMode Gets a value specifying whether the viewer control is in design-mode. bool DesignMode { get; } Property Value bool This is true if the viewer control is in design-mode, otherwise; it is false."
  },
  "api/SharpVectors.Dom.Svg.ISvgControl.HandleAlert.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgControl.HandleAlert.html",
    "title": "Method HandleAlert | SharpVectors Documentation",
    "keywords": "Method HandleAlert Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll HandleAlert(string) This signals the viewer control to display an alert message to the user. void HandleAlert(string message) Parameters message string A string containing the alert message to be displayed."
  },
  "api/SharpVectors.Dom.Svg.ISvgControl.HandleError.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgControl.HandleError.html",
    "title": "Method HandleError | SharpVectors Documentation",
    "keywords": "Method HandleError Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll HandleError(string) This signals the viewer control to display an error message to the user. void HandleError(string message) Parameters message string A string containing the error message to be displayed. HandleError(Exception) This signals the viewer control to display an error message due to an exception to the user. void HandleError(Exception exception) Parameters exception Exception HandleError(string, Exception) This signals the viewer control to display an error message due to an exception with additional message to the user. void HandleError(string message, Exception exception) Parameters message string A string containing the additional message to be displayed. exception Exception"
  },
  "api/SharpVectors.Dom.Svg.ISvgControl.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgControl.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height Gets the height of the SVG viewer control. int Height { get; } Property Value int A specifying specifying the height of the control in pixels."
  },
  "api/SharpVectors.Dom.Svg.ISvgControl.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgControl.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width Gets the width of the SVG viewer control. int Width { get; } Property Value int A specifying specifying the width of the control in pixels."
  },
  "api/SharpVectors.Dom.Svg.ISvgControl.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgControl.html",
    "title": "Interface ISvgControl | SharpVectors Documentation",
    "keywords": "Interface ISvgControl Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This defines the interface for the control object that is controlling the rendering process and displaying the rendered drawings. public interface ISvgControl Properties DesignMode Gets a value specifying whether the viewer control is in design-mode. Height Gets the height of the SVG viewer control. Width Gets the width of the SVG viewer control. Methods HandleAlert(string) This signals the viewer control to display an alert message to the user. HandleError(Exception) This signals the viewer control to display an error message due to an exception to the user. HandleError(string) This signals the viewer control to display an error message to the user. HandleError(string, Exception) This signals the viewer control to display an error message due to an exception with additional message to the user."
  },
  "api/SharpVectors.Dom.Svg.ISvgCssRule.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCssRule.html",
    "title": "Interface ISvgCssRule | SharpVectors Documentation",
    "keywords": "Interface ISvgCssRule Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SVG extends interface ICssRule with interface ISvgCssRule by adding an ISvgColorProfileRule rule to allow for specification of ICC-based color. public interface ISvgCssRule : ICssRule Inherited Members ICssRule.ParentStyleSheet ICssRule.ParentRule ICssRule.Type ICssRule.CssText"
  },
  "api/SharpVectors.Dom.Svg.ISvgCursorElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCursorElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgCursorElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCursorElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgCursorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgCursorElement.html",
    "title": "Interface ISvgCursorElement | SharpVectors Documentation",
    "keywords": "Interface ISvgCursorElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgCursorElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgExternalResourcesRequired Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgExternalResourcesRequired.ExternalResourcesRequired Properties X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgDefinitionSrcElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDefinitionSrcElement.html",
    "title": "Interface ISvgDefinitionSrcElement | SharpVectors Documentation",
    "keywords": "Interface ISvgDefinitionSrcElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SVGDefinitionSrcElement interface corresponds to the 'definition-src' element. public interface ISvgDefinitionSrcElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgDefsElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDefsElement.html",
    "title": "Interface ISvgDefsElement | SharpVectors Documentation",
    "keywords": "Interface ISvgDefsElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgDefsElement interface corresponds to the 'defs' element. public interface ISvgDefsElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement)"
  },
  "api/SharpVectors.Dom.Svg.ISvgDescElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDescElement.html",
    "title": "Interface ISvgDescElement | SharpVectors Documentation",
    "keywords": "Interface ISvgDescElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgDescElement interface corresponds to the 'desc' element. public interface ISvgDescElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgDocument.Domain.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDocument.Domain.html",
    "title": "Property Domain | SharpVectors Documentation",
    "keywords": "Property Domain Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Domain The domain name of the server that served the document, or a null string if the server cannot be identified by a domain name. string Domain { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgDocument.Referrer.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDocument.Referrer.html",
    "title": "Property Referrer | SharpVectors Documentation",
    "keywords": "Property Referrer Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Referrer Returns the URI of the page that linked to this page. string Referrer { get; } Property Value string The value is an empty string if the user navigated to the page directly (not through a link, but, for example, via a bookmark)."
  },
  "api/SharpVectors.Dom.Svg.ISvgDocument.RootElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDocument.RootElement.html",
    "title": "Property RootElement | SharpVectors Documentation",
    "keywords": "Property RootElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RootElement The root 'svg' element in the document hierarchy. ISvgSvgElement RootElement { get; } Property Value ISvgSvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgDocument.Static.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDocument.Static.html",
    "title": "Property Static | SharpVectors Documentation",
    "keywords": "Property Static Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Static Gets a value specifying whether this document is in static mode. In static mode (non-interactive), events are not processed. bool Static { get; set; } Property Value bool This returns true if the document is in static mode; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.ISvgDocument.Title.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDocument.Title.html",
    "title": "Property Title | SharpVectors Documentation",
    "keywords": "Property Title Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Title The title of a document as specified by the title sub-element of the 'svg' root element. string Title { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgDocument.Url.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDocument.Url.html",
    "title": "Property Url | SharpVectors Documentation",
    "keywords": "Property Url Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Url The complete URI of the document. string Url { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgDocument.Window.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDocument.Window.html",
    "title": "Property Window | SharpVectors Documentation",
    "keywords": "Property Window Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Window The window object of the Svg document. ISvgWindow Window { get; } Property Value ISvgWindow"
  },
  "api/SharpVectors.Dom.Svg.ISvgDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgDocument.html",
    "title": "Interface ISvgDocument | SharpVectors Documentation",
    "keywords": "Interface ISvgDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The root object in the document object hierarchy of an Svg document. public interface ISvgDocument : IDocument, INode, IXmlNode Inherited Members IDocument.Doctype IDocument.Implementation IDocument.DocumentElement IDocument.CanAccessExternalResources(string) IDocument.CanAccessExternalResources(Uri) IDocument.CreateElement(string) IDocument.CreateDocumentFragment() IDocument.CreateTextNode(string) IDocument.CreateComment(string) IDocument.CreateCDataSection(string) IDocument.CreateProcessingInstruction(string, string) IDocument.CreateAttribute(string) IDocument.CreateEntityReference(string) IDocument.GetElementsByTagName(string) IDocument.ImportNode(INode, bool) IDocument.CreateElementNs(string, string) IDocument.CreateAttributeNs(string, string) IDocument.GetElementsByTagNameNs(string, string) IDocument.GetElementById(string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Remarks When an 'svg' element is embedded inline as a component of a document from another namespace, such as when an 'svg' element is embedded inline within an XHTML document [XHTML], then an ISvgDocument object will not exist; instead, the root object in the document object hierarchy will be a Document object of a different type, such as an HTMLDocument object. However, an ISvgDocument object will indeed exist when the root element of the XML document hierarchy is an 'svg' element, such as when viewing a stand-alone SVG file (i.e., a file with MIME type \"image/svg+xml\"). In this case, the ISvgDocument object will be the root object of the document object model hierarchy. In the case where an SVG document is embedded by reference, such as when an XHTML document has an 'object' element whose href attribute references an SVG document (i.e., a document whose MIME type is \"image/svg+xml\" and whose root element is thus an 'svg' element), there will exist two distinct DOM hierarchies. The first DOM hierarchy will be for the referencing document (e.g., an XHTML document). The second DOM hierarchy will be for the referenced SVG document. In this/ second DOM hierarchy, the root object of the document object model hierarchy is an ISvgDocument object. The ISvgDocument interface contains a similar list of attributes and methods to the HTMLDocument interface described in the Document Object Model (HTML) Level 1 chapter of the [DOM1] specification. Properties Domain The domain name of the server that served the document, or a null string if the server cannot be identified by a domain name. Referrer Returns the URI of the page that linked to this page. RootElement The root 'svg' element in the document hierarchy. Static Gets a value specifying whether this document is in static mode. In static mode (non-interactive), events are not processed. Title The title of a document as specified by the title sub-element of the 'svg' root element. Url The complete URI of the document. Window The window object of the Svg document."
  },
  "api/SharpVectors.Dom.Svg.ISvgElement.Id.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElement.Id.html",
    "title": "Property Id | SharpVectors Documentation",
    "keywords": "Property Id Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Id The value of the id attribute on the given element. Inheriting class should throw an exception when trying to update a read only element string Id { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsRenderable Gets a value indicating whether this SVG element is renderable. bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.ISvgElement.OwnerSvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElement.OwnerSvgElement.html",
    "title": "Property OwnerSvgElement | SharpVectors Documentation",
    "keywords": "Property OwnerSvgElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll OwnerSvgElement The nearest ancestor 'svg' element. Null if the given element is the outermost 'svg' element. ISvgSvgElement OwnerSvgElement { get; } Property Value ISvgSvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint."
  },
  "api/SharpVectors.Dom.Svg.ISvgElement.ViewportElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElement.ViewportElement.html",
    "title": "Property ViewportElement | SharpVectors Documentation",
    "keywords": "Property ViewportElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ViewportElement The element which established the current viewport. Often, the nearest ancestor 'svg' element. Null if the given element is the outermost 'svg' element. ISvgElement ViewportElement { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElement.html",
    "title": "Interface ISvgElement | SharpVectors Documentation",
    "keywords": "Interface ISvgElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll All of the Svg DOM interfaces that correspond directly to elements in the Svg language (e.g., the SvgPathElement interface corresponds directly to the 'path' element in the language) are derivative from base class SvgElement. public interface ISvgElement : IElement, IXmlElement, INode, IXmlNode Inherited Members IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties Id The value of the id attribute on the given element. Inheriting class should throw an exception when trying to update a read only element IsRenderable Gets a value indicating whether this SVG element is renderable. OwnerSvgElement The nearest ancestor 'svg' element. Null if the given element is the outermost 'svg' element. RenderingHint Gets a value providing a hint on the rendering defined by this element. ViewportElement The element which established the current viewport. Often, the nearest ancestor 'svg' element. Null if the given element is the outermost 'svg' element."
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.ChildNodes.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.ChildNodes.html",
    "title": "Property ChildNodes | SharpVectors Documentation",
    "keywords": "Property ChildNodes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ChildNodes ISvgElementInstanceList ChildNodes { get; } Property Value ISvgElementInstanceList"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.CorrespondingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.CorrespondingElement.html",
    "title": "Property CorrespondingElement | SharpVectors Documentation",
    "keywords": "Property CorrespondingElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CorrespondingElement ISvgElement CorrespondingElement { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.CorrespondingUseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.CorrespondingUseElement.html",
    "title": "Property CorrespondingUseElement | SharpVectors Documentation",
    "keywords": "Property CorrespondingUseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CorrespondingUseElement ISvgUseElement CorrespondingUseElement { get; } Property Value ISvgUseElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.FirstChild.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.FirstChild.html",
    "title": "Property FirstChild | SharpVectors Documentation",
    "keywords": "Property FirstChild Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FirstChild ISvgElementInstance FirstChild { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.LastChild.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.LastChild.html",
    "title": "Property LastChild | SharpVectors Documentation",
    "keywords": "Property LastChild Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll LastChild ISvgElementInstance LastChild { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.NextSibling.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.NextSibling.html",
    "title": "Property NextSibling | SharpVectors Documentation",
    "keywords": "Property NextSibling Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NextSibling ISvgElementInstance NextSibling { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.ParentNode.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.ParentNode.html",
    "title": "Property ParentNode | SharpVectors Documentation",
    "keywords": "Property ParentNode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ParentNode ISvgElementInstance ParentNode { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.PreviousSibling.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.PreviousSibling.html",
    "title": "Property PreviousSibling | SharpVectors Documentation",
    "keywords": "Property PreviousSibling Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PreviousSibling ISvgElementInstance PreviousSibling { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstance.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstance.html",
    "title": "Interface ISvgElementInstance | SharpVectors Documentation",
    "keywords": "Interface ISvgElementInstance Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll For each 'use' element, the Svg DOM maintains a shadow tree (the \"instance tree\") of objects of type SvgElementInstance public interface ISvgElementInstance : IEventTarget Inherited Members IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) Properties ChildNodes CorrespondingElement CorrespondingUseElement FirstChild LastChild NextSibling ParentNode PreviousSibling"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstanceList.Item.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstanceList.Item.html",
    "title": "Method Item | SharpVectors Documentation",
    "keywords": "Method Item Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Item(ulong) ISvgElementInstance Item(ulong index) Parameters index ulong Returns ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstanceList.Length.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstanceList.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Length ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementInstanceList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementInstanceList.html",
    "title": "Interface ISvgElementInstanceList | SharpVectors Documentation",
    "keywords": "Interface ISvgElementInstanceList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgElementInstanceList interface provides the abstraction of an ordered collection of SvgElementInstance objects, without defining or constraining how this collection is implemented. public interface ISvgElementInstanceList Properties Length Methods Item(ulong)"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementVisitor.BeginContainer.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementVisitor.BeginContainer.html",
    "title": "Method BeginContainer | SharpVectors Documentation",
    "keywords": "Method BeginContainer Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BeginContainer(ISvgElement) Signal the beginning of a graphics container element. void BeginContainer(ISvgElement element) Parameters element ISvgElement An instance of ISvgElement specifying the container element."
  },
  "api/SharpVectors.Dom.Svg.ISvgElementVisitor.EndContainer.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementVisitor.EndContainer.html",
    "title": "Method EndContainer | SharpVectors Documentation",
    "keywords": "Method EndContainer Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll EndContainer(ISvgElement) Signal the ending of a graphics container element. void EndContainer(ISvgElement element) Parameters element ISvgElement An instance of ISvgElement specifying the container element."
  },
  "api/SharpVectors.Dom.Svg.ISvgElementVisitor.Visit.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Visit(ISvgCircleElement) Visits the circle shape element. void Visit(ISvgCircleElement element) Parameters element ISvgCircleElement An instance of ISvgCircleElement specifying the circle shape. Visit(ISvgEllipseElement) Visits the ellipse shape element. void Visit(ISvgEllipseElement element) Parameters element ISvgEllipseElement An instance of ISvgEllipseElement specifying the ellipse shape. Visit(ISvgLineElement) Visits the line shape element. void Visit(ISvgLineElement element) Parameters element ISvgLineElement An instance of ISvgLineElement specifying the line shape. Visit(ISvgPathElement) Visits the path shape element. void Visit(ISvgPathElement element) Parameters element ISvgPathElement An instance of ISvgPathElement specifying the path shape. Visit(ISvgPolygonElement) Visits the polygon shape element. void Visit(ISvgPolygonElement element) Parameters element ISvgPolygonElement An instance of ISvgPolygonElement specifying the polygon shape. Visit(ISvgPolylineElement) Visits the polyline shape element. void Visit(ISvgPolylineElement element) Parameters element ISvgPolylineElement An instance of ISvgPolylineElement specifying the polyline shape. Visit(ISvgRectElement) Visits the rectangle shape element. void Visit(ISvgRectElement element) Parameters element ISvgRectElement An instance of ISvgRectElement specifying the rectangle shape. Visit(ISvgImageElement) Visits the image graphics element. void Visit(ISvgImageElement element) Parameters element ISvgImageElement An instance of ISvgImageElement specifying the image element. Visit(ISvgUseElement) Visits the use element. void Visit(ISvgUseElement element) Parameters element ISvgUseElement An instance of ISvgUseElement specifying the use element. Visit(ISvgAElement) Visits the link element. void Visit(ISvgAElement element) Parameters element ISvgAElement An instance of ISvgAElement specifying the link element. Visit(ISvgGElement) Visits the group element. void Visit(ISvgGElement element) Parameters element ISvgGElement An instance of ISvgGElement specifying the group element. Visit(ISvgSvgElement) Visits the svg clipart element. void Visit(ISvgSvgElement element) Parameters element ISvgSvgElement An instance of ISvgSvgElement specifying the svg clipart element. Visit(ISvgSwitchElement) Visits the switch element. void Visit(ISvgSwitchElement element) Parameters element ISvgSwitchElement An instance of ISvgSwitchElement specifying the switch element. Visit(ISvgSymbolElement) Visits the symbol element. void Visit(ISvgSymbolElement element) Parameters element ISvgSymbolElement An instance of ISvgRectElement specifying the symbol element. Visit(ISvgTextElement) Visits the text content element. void Visit(ISvgTextElement element) Parameters element ISvgTextElement An instance of ISvgTextElement specifying the text content element. Visit(ISvgTextPathElement) Visits the text-path content element. void Visit(ISvgTextPathElement element) Parameters element ISvgTextPathElement An instance of ISvgTextPathElement specifying the text-path element. Visit(ISvgTSpanElement) Visits the text-span content element. void Visit(ISvgTSpanElement element) Parameters element ISvgTSpanElement An instance of ISvgTSpanElement specifying the text-span content element."
  },
  "api/SharpVectors.Dom.Svg.ISvgElementVisitor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementVisitor.html",
    "title": "Interface ISvgElementVisitor | SharpVectors Documentation",
    "keywords": "Interface ISvgElementVisitor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll A visitor pattern interface that visits all renderable SVG elements. public interface ISvgElementVisitor Remarks The implementation is defined are follows: Implements visitor (ISvgElementVisitor) object that implements an operation to be performed on elements of SVG DOM structure. Implement the client that traverses the SVG DOM structure and call a dispatching operation Accept(ISvgElementVisitor) on the SVG element — that dispatches (delegates) the request to the accepted visitor object. The visitor object then performs the operation on the element. Methods BeginContainer(ISvgElement) Signal the beginning of a graphics container element. EndContainer(ISvgElement) Signal the ending of a graphics container element. Visit(ISvgAElement) Visits the link element. Visit(ISvgCircleElement) Visits the circle shape element. Visit(ISvgEllipseElement) Visits the ellipse shape element. Visit(ISvgGElement) Visits the group element. Visit(ISvgImageElement) Visits the image graphics element. Visit(ISvgLineElement) Visits the line shape element. Visit(ISvgPathElement) Visits the path shape element. Visit(ISvgPolygonElement) Visits the polygon shape element. Visit(ISvgPolylineElement) Visits the polyline shape element. Visit(ISvgRectElement) Visits the rectangle shape element. Visit(ISvgSvgElement) Visits the svg clipart element. Visit(ISvgSwitchElement) Visits the switch element. Visit(ISvgSymbolElement) Visits the symbol element. Visit(ISvgTSpanElement) Visits the text-span content element. Visit(ISvgTextElement) Visits the text content element. Visit(ISvgTextPathElement) Visits the text-path content element. Visit(ISvgUseElement) Visits the use element. See Also Wikipedia: Visitor pattern"
  },
  "api/SharpVectors.Dom.Svg.ISvgElementVisitorTarget.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementVisitorTarget.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.ISvgElementVisitorTarget.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgElementVisitorTarget.html",
    "title": "Interface ISvgElementVisitorTarget | SharpVectors Documentation",
    "keywords": "Interface ISvgElementVisitorTarget Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll A host target of the element visitor. Each renderable SVG element implements this interface. public interface ISvgElementVisitorTarget Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object."
  },
  "api/SharpVectors.Dom.Svg.ISvgEllipseElement.Cx.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgEllipseElement.Cx.html",
    "title": "Property Cx | SharpVectors Documentation",
    "keywords": "Property Cx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Cx ISvgAnimatedLength Cx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgEllipseElement.Cy.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgEllipseElement.Cy.html",
    "title": "Property Cy | SharpVectors Documentation",
    "keywords": "Property Cy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Cy ISvgAnimatedLength Cy { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgEllipseElement.Rx.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgEllipseElement.Rx.html",
    "title": "Property Rx | SharpVectors Documentation",
    "keywords": "Property Rx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Rx ISvgAnimatedLength Rx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgEllipseElement.Ry.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgEllipseElement.Ry.html",
    "title": "Property Ry | SharpVectors Documentation",
    "keywords": "Property Ry Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Ry ISvgAnimatedLength Ry { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgEllipseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgEllipseElement.html",
    "title": "Interface ISvgEllipseElement | SharpVectors Documentation",
    "keywords": "Interface ISvgEllipseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgEllipseElement interface corresponds to the 'ellipse' element. public interface ISvgEllipseElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Properties Cx Cy Rx Ry"
  },
  "api/SharpVectors.Dom.Svg.ISvgEvent.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgEvent.html",
    "title": "Interface ISvgEvent | SharpVectors Documentation",
    "keywords": "Interface ISvgEvent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgEvent : IEvent Inherited Members IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(string, bool, bool) IEvent.InitEventNs(string, string, bool, bool) IEvent.StopImmediatePropagation()"
  },
  "api/SharpVectors.Dom.Svg.ISvgExternalResourcesRequired.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgExternalResourcesRequired.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.ISvgExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgExternalResourcesRequired.html",
    "title": "Interface ISvgExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Interface ISvgExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This defines an interface which applies to all elements where this element or one of its descendants can reference an external resource. public interface ISvgExternalResourcesRequired Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element."
  },
  "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.In2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.In2.html",
    "title": "Property In2 | SharpVectors Documentation",
    "keywords": "Property In2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In2 ISvgAnimatedString In2 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.Mode.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.Mode.html",
    "title": "Property Mode | SharpVectors Documentation",
    "keywords": "Property Mode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Mode ISvgAnimatedEnumeration Mode { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEBlendElement.html",
    "title": "Interface ISvgFEBlendElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEBlendElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEBlendElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1 In2 Mode"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Type ISvgAnimatedEnumeration Type { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.Values.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.Values.html",
    "title": "Property Values | SharpVectors Documentation",
    "keywords": "Property Values Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Values ISvgAnimatedNumberList Values { get; } Property Value ISvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEColorMatrixElement.html",
    "title": "Interface ISvgFEColorMatrixElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEColorMatrixElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEColorMatrixElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1 Type Values"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEComponentTransferElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEComponentTransferElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEComponentTransferElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEComponentTransferElement.html",
    "title": "Interface ISvgFEComponentTransferElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEComponentTransferElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEComponentTransferElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1"
  },
  "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.In2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.In2.html",
    "title": "Property In2 | SharpVectors Documentation",
    "keywords": "Property In2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In2 ISvgAnimatedString In2 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.K1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.K1.html",
    "title": "Property K1 | SharpVectors Documentation",
    "keywords": "Property K1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll K1 ISvgAnimatedNumber K1 { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.K2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.K2.html",
    "title": "Property K2 | SharpVectors Documentation",
    "keywords": "Property K2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll K2 ISvgAnimatedNumber K2 { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.K3.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.K3.html",
    "title": "Property K3 | SharpVectors Documentation",
    "keywords": "Property K3 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll K3 ISvgAnimatedNumber K3 { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.K4.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.K4.html",
    "title": "Property K4 | SharpVectors Documentation",
    "keywords": "Property K4 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll K4 ISvgAnimatedNumber K4 { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.Operator.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.Operator.html",
    "title": "Property Operator | SharpVectors Documentation",
    "keywords": "Property Operator Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Operator ISvgAnimatedEnumeration Operator { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFECompositeElement.html",
    "title": "Interface ISvgFECompositeElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFECompositeElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFECompositeElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1 In2 K1 K2 K3 K4 Operator"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.Bias.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.Bias.html",
    "title": "Property Bias | SharpVectors Documentation",
    "keywords": "Property Bias Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Bias ISvgAnimatedNumber Bias { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.Divisor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.Divisor.html",
    "title": "Property Divisor | SharpVectors Documentation",
    "keywords": "Property Divisor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Divisor ISvgAnimatedNumber Divisor { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.EdgeMode.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.EdgeMode.html",
    "title": "Property EdgeMode | SharpVectors Documentation",
    "keywords": "Property EdgeMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll EdgeMode ISvgAnimatedEnumeration EdgeMode { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.KernelMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.KernelMatrix.html",
    "title": "Property KernelMatrix | SharpVectors Documentation",
    "keywords": "Property KernelMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KernelMatrix ISvgAnimatedNumberList KernelMatrix { get; } Property Value ISvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.KernelUnitLengthX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.KernelUnitLengthX.html",
    "title": "Property KernelUnitLengthX | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KernelUnitLengthX ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.KernelUnitLengthY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.KernelUnitLengthY.html",
    "title": "Property KernelUnitLengthY | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KernelUnitLengthY ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.OrderX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.OrderX.html",
    "title": "Property OrderX | SharpVectors Documentation",
    "keywords": "Property OrderX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll OrderX ISvgAnimatedInteger OrderX { get; } Property Value ISvgAnimatedInteger"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.OrderY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.OrderY.html",
    "title": "Property OrderY | SharpVectors Documentation",
    "keywords": "Property OrderY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll OrderY ISvgAnimatedInteger OrderY { get; } Property Value ISvgAnimatedInteger"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.PreserveAlpha.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.PreserveAlpha.html",
    "title": "Property PreserveAlpha | SharpVectors Documentation",
    "keywords": "Property PreserveAlpha Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PreserveAlpha ISvgAnimatedBoolean PreserveAlpha { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.TargetX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.TargetX.html",
    "title": "Property TargetX | SharpVectors Documentation",
    "keywords": "Property TargetX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll TargetX ISvgAnimatedInteger TargetX { get; } Property Value ISvgAnimatedInteger"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.TargetY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.TargetY.html",
    "title": "Property TargetY | SharpVectors Documentation",
    "keywords": "Property TargetY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll TargetY ISvgAnimatedInteger TargetY { get; } Property Value ISvgAnimatedInteger"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEConvolveMatrixElement.html",
    "title": "Interface ISvgFEConvolveMatrixElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEConvolveMatrixElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEConvolveMatrixElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties Bias Divisor EdgeMode KernelMatrix KernelUnitLengthX KernelUnitLengthY OrderX OrderY PreserveAlpha TargetX TargetY"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.DiffuseConstant.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.DiffuseConstant.html",
    "title": "Property DiffuseConstant | SharpVectors Documentation",
    "keywords": "Property DiffuseConstant Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll DiffuseConstant ISvgAnimatedNumber DiffuseConstant { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.KernelUnitLengthX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.KernelUnitLengthX.html",
    "title": "Property KernelUnitLengthX | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KernelUnitLengthX ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.KernelUnitLengthY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.KernelUnitLengthY.html",
    "title": "Property KernelUnitLengthY | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KernelUnitLengthY ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.SurfaceScale.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.SurfaceScale.html",
    "title": "Property SurfaceScale | SharpVectors Documentation",
    "keywords": "Property SurfaceScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SurfaceScale ISvgAnimatedNumber SurfaceScale { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDiffuseLightingElement.html",
    "title": "Interface ISvgFEDiffuseLightingElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEDiffuseLightingElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEDiffuseLightingElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties DiffuseConstant In1 KernelUnitLengthX KernelUnitLengthY SurfaceScale"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.In2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.In2.html",
    "title": "Property In2 | SharpVectors Documentation",
    "keywords": "Property In2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In2 ISvgAnimatedString In2 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.Scale.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.Scale.html",
    "title": "Property Scale | SharpVectors Documentation",
    "keywords": "Property Scale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Scale ISvgAnimatedNumber Scale { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.XChannelSelector.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.XChannelSelector.html",
    "title": "Property XChannelSelector | SharpVectors Documentation",
    "keywords": "Property XChannelSelector Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll XChannelSelector ISvgAnimatedEnumeration XChannelSelector { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.YChannelSelector.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.YChannelSelector.html",
    "title": "Property YChannelSelector | SharpVectors Documentation",
    "keywords": "Property YChannelSelector Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll YChannelSelector ISvgAnimatedEnumeration YChannelSelector { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDisplacementMapElement.html",
    "title": "Interface ISvgFEDisplacementMapElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEDisplacementMapElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEDisplacementMapElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1 In2 Scale XChannelSelector YChannelSelector"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDistantLightElement.Azimuth.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDistantLightElement.Azimuth.html",
    "title": "Property Azimuth | SharpVectors Documentation",
    "keywords": "Property Azimuth Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Azimuth ISvgAnimatedNumber Azimuth { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDistantLightElement.Elevation.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDistantLightElement.Elevation.html",
    "title": "Property Elevation | SharpVectors Documentation",
    "keywords": "Property Elevation Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Elevation ISvgAnimatedNumber Elevation { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEDistantLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEDistantLightElement.html",
    "title": "Interface ISvgFEDistantLightElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEDistantLightElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEDistantLightElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties Azimuth Elevation"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFloodElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFloodElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFloodElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFloodElement.html",
    "title": "Interface ISvgFEFloodElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFloodElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEFloodElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFuncAElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFuncAElement.html",
    "title": "Interface ISvgFEFuncAElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFuncAElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEFuncAElement : ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgComponentTransferFunctionElement.Type ISvgComponentTransferFunctionElement.TableValues ISvgComponentTransferFunctionElement.Slope ISvgComponentTransferFunctionElement.Intercept ISvgComponentTransferFunctionElement.Amplitude ISvgComponentTransferFunctionElement.Exponent ISvgComponentTransferFunctionElement.Offset ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFuncBElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFuncBElement.html",
    "title": "Interface ISvgFEFuncBElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFuncBElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEFuncBElement : ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgComponentTransferFunctionElement.Type ISvgComponentTransferFunctionElement.TableValues ISvgComponentTransferFunctionElement.Slope ISvgComponentTransferFunctionElement.Intercept ISvgComponentTransferFunctionElement.Amplitude ISvgComponentTransferFunctionElement.Exponent ISvgComponentTransferFunctionElement.Offset ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFuncGElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFuncGElement.html",
    "title": "Interface ISvgFEFuncGElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFuncGElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEFuncGElement : ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgComponentTransferFunctionElement.Type ISvgComponentTransferFunctionElement.TableValues ISvgComponentTransferFunctionElement.Slope ISvgComponentTransferFunctionElement.Intercept ISvgComponentTransferFunctionElement.Amplitude ISvgComponentTransferFunctionElement.Exponent ISvgComponentTransferFunctionElement.Offset ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEFuncRElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEFuncRElement.html",
    "title": "Interface ISvgFEFuncRElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEFuncRElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEFuncRElement : ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgComponentTransferFunctionElement.Type ISvgComponentTransferFunctionElement.TableValues ISvgComponentTransferFunctionElement.Slope ISvgComponentTransferFunctionElement.Intercept ISvgComponentTransferFunctionElement.Amplitude ISvgComponentTransferFunctionElement.Exponent ISvgComponentTransferFunctionElement.Offset ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.SetStdDeviation.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.SetStdDeviation.html",
    "title": "Method SetStdDeviation | SharpVectors Documentation",
    "keywords": "Method SetStdDeviation Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetStdDeviation(float, float) void SetStdDeviation(float stdDeviationX, float stdDeviationY) Parameters stdDeviationX float stdDeviationY float"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.StdDeviationX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.StdDeviationX.html",
    "title": "Property StdDeviationX | SharpVectors Documentation",
    "keywords": "Property StdDeviationX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll StdDeviationX ISvgAnimatedNumber StdDeviationX { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.StdDeviationY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.StdDeviationY.html",
    "title": "Property StdDeviationY | SharpVectors Documentation",
    "keywords": "Property StdDeviationY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll StdDeviationY ISvgAnimatedNumber StdDeviationY { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEGaussianBlurElement.html",
    "title": "Interface ISvgFEGaussianBlurElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEGaussianBlurElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEGaussianBlurElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1 StdDeviationX StdDeviationY Methods SetStdDeviation(float, float)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEImageElement.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEImageElement.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PreserveAspectRatio ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEImageElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEImageElement.html",
    "title": "Interface ISvgFEImageElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEImageElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEImageElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties PreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMergeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMergeElement.html",
    "title": "Interface ISvgFEMergeElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEMergeElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEMergeElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMergeNodeElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMergeNodeElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMergeNodeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMergeNodeElement.html",
    "title": "Interface ISvgFEMergeNodeElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEMergeNodeElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEMergeNodeElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties In1"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.Operator.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.Operator.html",
    "title": "Property Operator | SharpVectors Documentation",
    "keywords": "Property Operator Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Operator ISvgAnimatedEnumeration Operator { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.RadiusX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.RadiusX.html",
    "title": "Property RadiusX | SharpVectors Documentation",
    "keywords": "Property RadiusX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RadiusX ISvgAnimatedNumber RadiusX { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.RadiusY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.RadiusY.html",
    "title": "Property RadiusY | SharpVectors Documentation",
    "keywords": "Property RadiusY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RadiusY ISvgAnimatedNumber RadiusY { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEMorphologyElement.html",
    "title": "Interface ISvgFEMorphologyElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEMorphologyElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEMorphologyElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1 Operator RadiusX RadiusY"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.Dx.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.Dx.html",
    "title": "Property Dx | SharpVectors Documentation",
    "keywords": "Property Dx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Dx ISvgAnimatedNumber Dx { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.Dy.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.Dy.html",
    "title": "Property Dy | SharpVectors Documentation",
    "keywords": "Property Dy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Dy ISvgAnimatedNumber Dy { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEOffsetElement.html",
    "title": "Interface ISvgFEOffsetElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEOffsetElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEOffsetElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties Dx Dy In1"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedNumber X { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedNumber Y { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.Z.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.Z.html",
    "title": "Property Z | SharpVectors Documentation",
    "keywords": "Property Z Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Z ISvgAnimatedNumber Z { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFEPointLightElement.html",
    "title": "Interface ISvgFEPointLightElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFEPointLightElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFEPointLightElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties X Y Z"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.KernelUnitLengthX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.KernelUnitLengthX.html",
    "title": "Property KernelUnitLengthX | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KernelUnitLengthX ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.KernelUnitLengthY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.KernelUnitLengthY.html",
    "title": "Property KernelUnitLengthY | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll KernelUnitLengthY ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.SpecularConstant.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.SpecularConstant.html",
    "title": "Property SpecularConstant | SharpVectors Documentation",
    "keywords": "Property SpecularConstant Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SpecularConstant ISvgAnimatedNumber SpecularConstant { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.SpecularExponent.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.SpecularExponent.html",
    "title": "Property SpecularExponent | SharpVectors Documentation",
    "keywords": "Property SpecularExponent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SpecularExponent ISvgAnimatedNumber SpecularExponent { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.SurfaceScale.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.SurfaceScale.html",
    "title": "Property SurfaceScale | SharpVectors Documentation",
    "keywords": "Property SurfaceScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SurfaceScale ISvgAnimatedNumber SurfaceScale { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpecularLightingElement.html",
    "title": "Interface ISvgFESpecularLightingElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFESpecularLightingElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFESpecularLightingElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1 KernelUnitLengthX KernelUnitLengthY SpecularConstant SpecularExponent SurfaceScale"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.LimitingConeAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.LimitingConeAngle.html",
    "title": "Property LimitingConeAngle | SharpVectors Documentation",
    "keywords": "Property LimitingConeAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll LimitingConeAngle ISvgAnimatedNumber LimitingConeAngle { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.PointsAtX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.PointsAtX.html",
    "title": "Property PointsAtX | SharpVectors Documentation",
    "keywords": "Property PointsAtX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PointsAtX ISvgAnimatedNumber PointsAtX { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.PointsAtY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.PointsAtY.html",
    "title": "Property PointsAtY | SharpVectors Documentation",
    "keywords": "Property PointsAtY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PointsAtY ISvgAnimatedNumber PointsAtY { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.PointsAtZ.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.PointsAtZ.html",
    "title": "Property PointsAtZ | SharpVectors Documentation",
    "keywords": "Property PointsAtZ Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PointsAtZ ISvgAnimatedNumber PointsAtZ { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.SpecularExponent.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.SpecularExponent.html",
    "title": "Property SpecularExponent | SharpVectors Documentation",
    "keywords": "Property SpecularExponent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SpecularExponent ISvgAnimatedNumber SpecularExponent { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedNumber X { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedNumber Y { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.Z.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.Z.html",
    "title": "Property Z | SharpVectors Documentation",
    "keywords": "Property Z Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Z ISvgAnimatedNumber Z { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFESpotLightElement.html",
    "title": "Interface ISvgFESpotLightElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFESpotLightElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFESpotLightElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties LimitingConeAngle PointsAtX PointsAtY PointsAtZ SpecularExponent X Y Z"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETileElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETileElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll In1 ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETileElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETileElement.html",
    "title": "Interface ISvgFETileElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFETileElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFETileElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties In1"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.BaseFrequencyX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.BaseFrequencyX.html",
    "title": "Property BaseFrequencyX | SharpVectors Documentation",
    "keywords": "Property BaseFrequencyX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseFrequencyX ISvgAnimatedNumber BaseFrequencyX { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.BaseFrequencyY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.BaseFrequencyY.html",
    "title": "Property BaseFrequencyY | SharpVectors Documentation",
    "keywords": "Property BaseFrequencyY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseFrequencyY ISvgAnimatedNumber BaseFrequencyY { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.NumOctaves.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.NumOctaves.html",
    "title": "Property NumOctaves | SharpVectors Documentation",
    "keywords": "Property NumOctaves Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NumOctaves ISvgAnimatedInteger NumOctaves { get; } Property Value ISvgAnimatedInteger"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.Seed.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.Seed.html",
    "title": "Property Seed | SharpVectors Documentation",
    "keywords": "Property Seed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Seed ISvgAnimatedNumber Seed { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.StitchTiles.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.StitchTiles.html",
    "title": "Property StitchTiles | SharpVectors Documentation",
    "keywords": "Property StitchTiles Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll StitchTiles ISvgAnimatedEnumeration StitchTiles { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Type ISvgAnimatedEnumeration Type { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFETurbulenceElement.html",
    "title": "Interface ISvgFETurbulenceElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFETurbulenceElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFETurbulenceElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgFilterPrimitiveStandardAttributes.X ISvgFilterPrimitiveStandardAttributes.Y ISvgFilterPrimitiveStandardAttributes.Width ISvgFilterPrimitiveStandardAttributes.Height ISvgFilterPrimitiveStandardAttributes.Result ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties BaseFrequencyX BaseFrequencyY NumOctaves Seed StitchTiles Type"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.FilterResX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.FilterResX.html",
    "title": "Property FilterResX | SharpVectors Documentation",
    "keywords": "Property FilterResX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FilterResX ISvgAnimatedInteger FilterResX { get; } Property Value ISvgAnimatedInteger"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.FilterResY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.FilterResY.html",
    "title": "Property FilterResY | SharpVectors Documentation",
    "keywords": "Property FilterResY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FilterResY ISvgAnimatedInteger FilterResY { get; } Property Value ISvgAnimatedInteger"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.FilterUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.FilterUnits.html",
    "title": "Property FilterUnits | SharpVectors Documentation",
    "keywords": "Property FilterUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FilterUnits ISvgAnimatedEnumeration FilterUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.PrimitiveUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.PrimitiveUnits.html",
    "title": "Property PrimitiveUnits | SharpVectors Documentation",
    "keywords": "Property PrimitiveUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PrimitiveUnits ISvgAnimatedEnumeration PrimitiveUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.SetFilterRes.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.SetFilterRes.html",
    "title": "Method SetFilterRes | SharpVectors Documentation",
    "keywords": "Method SetFilterRes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetFilterRes(ulong, ulong) void SetFilterRes(ulong filterResX, ulong filterResY) Parameters filterResX ulong filterResY ulong"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterElement.html",
    "title": "Interface ISvgFilterElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFilterElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFilterElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties FilterResX FilterResY FilterUnits Height PrimitiveUnits Width X Y Methods SetFilterRes(ulong, ulong)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.Result.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.Result.html",
    "title": "Property Result | SharpVectors Documentation",
    "keywords": "Property Result Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Result ISvgAnimatedString Result { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFilterPrimitiveStandardAttributes.html",
    "title": "Interface ISvgFilterPrimitiveStandardAttributes | SharpVectors Documentation",
    "keywords": "Interface ISvgFilterPrimitiveStandardAttributes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgFilterPrimitiveStandardAttributes : ISvgStylable Inherited Members ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties Height Result Width X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgFitToViewBox.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFitToViewBox.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PreserveAspectRatio ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.ISvgFitToViewBox.ViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFitToViewBox.ViewBox.html",
    "title": "Property ViewBox | SharpVectors Documentation",
    "keywords": "Property ViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ViewBox ISvgAnimatedRect ViewBox { get; } Property Value ISvgAnimatedRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgFitToViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFitToViewBox.html",
    "title": "Interface ISvgFitToViewBox | SharpVectors Documentation",
    "keywords": "Interface ISvgFitToViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Interface SvgFitToViewBox defines DOM attributes that apply to elements which have XML attributes viewBox and preserveAspectRatio. public interface ISvgFitToViewBox Properties PreserveAspectRatio ViewBox"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontElement.html",
    "title": "Interface ISvgFontElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgFontElement interface corresponds to the 'font' element. public interface ISvgFontElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgExternalResourcesRequired, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceElement.html",
    "title": "Interface ISvgFontFaceElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgFontFaceElement interface corresponds to the 'font-face' element. public interface ISvgFontFaceElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceFormatElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceFormatElement.html",
    "title": "Interface ISvgFontFaceFormatElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceFormatElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgFontFaceFormatElement interface corresponds to the 'font-face-format' element. public interface ISvgFontFaceFormatElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceNameElement.FaceName.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceNameElement.FaceName.html",
    "title": "Property FaceName | SharpVectors Documentation",
    "keywords": "Property FaceName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FaceName string FaceName { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceNameElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceNameElement.html",
    "title": "Interface ISvgFontFaceNameElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceNameElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgFontFaceNameElement interface corresponds to the 'font-face-name' element. public interface ISvgFontFaceNameElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) Properties FaceName"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceSrcElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceSrcElement.html",
    "title": "Interface ISvgFontFaceSrcElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceSrcElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgFontFaceSrcElement interface corresponds to the 'font-face-src' element. public interface ISvgFontFaceSrcElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgFontFaceUriElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgFontFaceUriElement.html",
    "title": "Interface ISvgFontFaceUriElement | SharpVectors Documentation",
    "keywords": "Interface ISvgFontFaceUriElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgFontFaceUriElement interface corresponds to the 'font-face-uri' element. public interface ISvgFontFaceUriElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgForeignObjectElement.html",
    "title": "Interface ISvgForeignObjectElement | SharpVectors Documentation",
    "keywords": "Interface ISvgForeignObjectElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgForeignObjectElement interface provides access to the properties of 'foreignObject' elements, as well as methods to manipulate them. public interface ISvgForeignObjectElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) Properties Height Width X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgGElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGElement.html",
    "title": "Interface ISvgGElement | SharpVectors Documentation",
    "keywords": "Interface ISvgGElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgGElement interface corresponds to the 'g' element. public interface ISvgGElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor)"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphElement.html",
    "title": "Interface ISvgGlyphElement | SharpVectors Documentation",
    "keywords": "Interface ISvgGlyphElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgGlyphElement interface corresponds to the 'glyph' element. public interface ISvgGlyphElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.Dx.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.Dx.html",
    "title": "Property Dx | SharpVectors Documentation",
    "keywords": "Property Dx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Dx Corresponds to attribute 'dx' on the given element. float Dx { get; set; } Property Value float Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.Dy.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.Dy.html",
    "title": "Property Dy | SharpVectors Documentation",
    "keywords": "Property Dy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Dy Corresponds to attribute 'dy' on the given element. float Dy { get; set; } Property Value float Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.Format.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.Format.html",
    "title": "Property Format | SharpVectors Documentation",
    "keywords": "Property Format Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Format The format of the given font. This corresponds to attribute 'format' on the given element. string Format { get; set; } Property Value string The format of the given font. Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.GlyphRef.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.GlyphRef.html",
    "title": "Property GlyphRef | SharpVectors Documentation",
    "keywords": "Property GlyphRef Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GlyphRef The glyph identifier, this corresponds to attribute 'glyphRef attribute' on the given element. string GlyphRef { get; set; } Property Value string The glyph identifier, the format of which is dependent on the Format of the given font. Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X Corresponds to attribute 'x' on the given element. float X { get; set; } Property Value float Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y Corresponds to attribute 'y' on the given element. float Y { get; set; } Property Value float Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGlyphRefElement.html",
    "title": "Interface ISvgGlyphRefElement | SharpVectors Documentation",
    "keywords": "Interface ISvgGlyphRefElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgGlyphRefElement interface corresponds to the 'glyphRef' element. public interface ISvgGlyphRefElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties Dx Corresponds to attribute 'dx' on the given element. Dy Corresponds to attribute 'dy' on the given element. Format The format of the given font. This corresponds to attribute 'format' on the given element. GlyphRef The glyph identifier, this corresponds to attribute 'glyphRef attribute' on the given element. X Corresponds to attribute 'x' on the given element. Y Corresponds to attribute 'y' on the given element."
  },
  "api/SharpVectors.Dom.Svg.ISvgGradientElement.GradientTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGradientElement.GradientTransform.html",
    "title": "Property GradientTransform | SharpVectors Documentation",
    "keywords": "Property GradientTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GradientTransform ISvgAnimatedTransformList GradientTransform { get; } Property Value ISvgAnimatedTransformList"
  },
  "api/SharpVectors.Dom.Svg.ISvgGradientElement.GradientUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGradientElement.GradientUnits.html",
    "title": "Property GradientUnits | SharpVectors Documentation",
    "keywords": "Property GradientUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GradientUnits ISvgAnimatedEnumeration GradientUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgGradientElement.SpreadMethod.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGradientElement.SpreadMethod.html",
    "title": "Property SpreadMethod | SharpVectors Documentation",
    "keywords": "Property SpreadMethod Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SpreadMethod ISvgAnimatedEnumeration SpreadMethod { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgGradientElement.html",
    "title": "Interface ISvgGradientElement | SharpVectors Documentation",
    "keywords": "Interface ISvgGradientElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgGradientElement interface is a base interface used by SvgLinearGradientElement and SvgRadialGradientElement. public interface ISvgGradientElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties GradientTransform GradientUnits SpreadMethod"
  },
  "api/SharpVectors.Dom.Svg.ISvgHKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgHKernElement.html",
    "title": "Interface ISvgHKernElement | SharpVectors Documentation",
    "keywords": "Interface ISvgHKernElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgHKernElement interface corresponds to the 'hkern' element. public interface ISvgHKernElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgIccColor.ColorProfile.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgIccColor.ColorProfile.html",
    "title": "Property ColorProfile | SharpVectors Documentation",
    "keywords": "Property ColorProfile Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ColorProfile The name of the color profile, which is the first parameter of an ICC color specification. Inheriting class should throw exception on setting a read only value string ColorProfile { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgIccColor.Colors.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgIccColor.Colors.html",
    "title": "Property Colors | SharpVectors Documentation",
    "keywords": "Property Colors Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Colors The list of color values that define this ICC color. Each color value is an arbitrary floating point number. ISvgNumberList Colors { get; } Property Value ISvgNumberList"
  },
  "api/SharpVectors.Dom.Svg.ISvgIccColor.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgIccColor.html",
    "title": "Interface ISvgIccColor | SharpVectors Documentation",
    "keywords": "Interface ISvgIccColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgIccColor Properties ColorProfile The name of the color profile, which is the first parameter of an ICC color specification. Inheriting class should throw exception on setting a read only value Colors The list of color values that define this ICC color. Each color value is an arbitrary floating point number."
  },
  "api/SharpVectors.Dom.Svg.ISvgImageElement.ColorProfile.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgImageElement.ColorProfile.html",
    "title": "Property ColorProfile | SharpVectors Documentation",
    "keywords": "Property ColorProfile Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ColorProfile ISvgColorProfileElement ColorProfile { get; } Property Value ISvgColorProfileElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgImageElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgImageElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height Corresponds to attribute height on the given 'rect' element. ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgImageElement.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgImageElement.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PreserveAspectRatio ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.ISvgImageElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgImageElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width Corresponds to attribute width on the given 'rect' element. ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgImageElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgImageElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X Corresponds to attribute x on the given 'rect' element. ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgImageElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgImageElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y Corresponds to attribute y on the given 'rect' element. ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgImageElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgImageElement.html",
    "title": "Interface ISvgImageElement | SharpVectors Documentation",
    "keywords": "Interface ISvgImageElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgRectElement interface corresponds to the 'image' element. public interface ISvgImageElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Properties ColorProfile Height Corresponds to attribute height on the given 'rect' element. PreserveAspectRatio Width Corresponds to attribute width on the given 'rect' element. X Corresponds to attribute x on the given 'rect' element. Y Corresponds to attribute y on the given 'rect' element."
  },
  "api/SharpVectors.Dom.Svg.ISvgLangSpace.XmlLang.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLangSpace.XmlLang.html",
    "title": "Property XmlLang | SharpVectors Documentation",
    "keywords": "Property XmlLang Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll XmlLang string XmlLang { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgLangSpace.XmlSpace.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLangSpace.XmlSpace.html",
    "title": "Property XmlSpace | SharpVectors Documentation",
    "keywords": "Property XmlSpace Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll XmlSpace string XmlSpace { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgLangSpace.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLangSpace.html",
    "title": "Interface ISvgLangSpace | SharpVectors Documentation",
    "keywords": "Interface ISvgLangSpace Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Interface SvgLangSpace defines an interface which applies to all elements which have attributes xml:lang and xml:space. public interface ISvgLangSpace Properties XmlLang XmlSpace"
  },
  "api/SharpVectors.Dom.Svg.ISvgLength.ConvertToSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLength.ConvertToSpecifiedUnits.html",
    "title": "Method ConvertToSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Method ConvertToSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ConvertToSpecifiedUnits(SvgLengthType) void ConvertToSpecifiedUnits(SvgLengthType unitType) Parameters unitType SvgLengthType"
  },
  "api/SharpVectors.Dom.Svg.ISvgLength.NewValueSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLength.NewValueSpecifiedUnits.html",
    "title": "Method NewValueSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Method NewValueSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NewValueSpecifiedUnits(SvgLengthType, double) void NewValueSpecifiedUnits(SvgLengthType unitType, double valueInSpecifiedUnits) Parameters unitType SvgLengthType valueInSpecifiedUnits double"
  },
  "api/SharpVectors.Dom.Svg.ISvgLength.UnitType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLength.UnitType.html",
    "title": "Property UnitType | SharpVectors Documentation",
    "keywords": "Property UnitType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll UnitType SvgLengthType UnitType { get; } Property Value SvgLengthType"
  },
  "api/SharpVectors.Dom.Svg.ISvgLength.Value.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLength.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Value double Value { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgLength.ValueAsString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLength.ValueAsString.html",
    "title": "Property ValueAsString | SharpVectors Documentation",
    "keywords": "Property ValueAsString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ValueAsString string ValueAsString { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgLength.ValueInSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLength.ValueInSpecifiedUnits.html",
    "title": "Property ValueInSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Property ValueInSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ValueInSpecifiedUnits double ValueInSpecifiedUnits { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLength.html",
    "title": "Interface ISvgLength | SharpVectors Documentation",
    "keywords": "Interface ISvgLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgLength interface corresponds to the length basic data type. public interface ISvgLength Properties UnitType Value ValueAsString ValueInSpecifiedUnits Methods ConvertToSpecifiedUnits(SvgLengthType) NewValueSpecifiedUnits(SvgLengthType, double)"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.AppendItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.AppendItem.html",
    "title": "Method AppendItem | SharpVectors Documentation",
    "keywords": "Method AppendItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AppendItem(ISvgLength) ISvgLength AppendItem(ISvgLength newItem) Parameters newItem ISvgLength Returns ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.Clear.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Clear() void Clear()"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.FromString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.FromString.html",
    "title": "Method FromString | SharpVectors Documentation",
    "keywords": "Method FromString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FromString(string) void FromString(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.GetItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.GetItem.html",
    "title": "Method GetItem | SharpVectors Documentation",
    "keywords": "Method GetItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetItem(uint) ISvgLength GetItem(uint index) Parameters index uint Returns ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.Initialize.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Initialize(ISvgLength) ISvgLength Initialize(ISvgLength newItem) Parameters newItem ISvgLength Returns ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.InsertItemBefore.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.InsertItemBefore.html",
    "title": "Method InsertItemBefore | SharpVectors Documentation",
    "keywords": "Method InsertItemBefore Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InsertItemBefore(ISvgLength, uint) ISvgLength InsertItemBefore(ISvgLength newItem, uint index) Parameters newItem ISvgLength index uint Returns ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.NumberOfItems.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.NumberOfItems.html",
    "title": "Property NumberOfItems | SharpVectors Documentation",
    "keywords": "Property NumberOfItems Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NumberOfItems uint NumberOfItems { get; } Property Value uint"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.RemoveItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.RemoveItem.html",
    "title": "Method RemoveItem | SharpVectors Documentation",
    "keywords": "Method RemoveItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RemoveItem(uint) ISvgLength RemoveItem(uint index) Parameters index uint Returns ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.ReplaceItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.ReplaceItem.html",
    "title": "Method ReplaceItem | SharpVectors Documentation",
    "keywords": "Method ReplaceItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ReplaceItem(ISvgLength, uint) ISvgLength ReplaceItem(ISvgLength newItem, uint index) Parameters newItem ISvgLength index uint Returns ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLengthList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLengthList.html",
    "title": "Interface ISvgLengthList | SharpVectors Documentation",
    "keywords": "Interface ISvgLengthList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface defines a list of SvgLength objects. public interface ISvgLengthList Properties NumberOfItems Methods AppendItem(ISvgLength) Clear() FromString(string) GetItem(uint) Initialize(ISvgLength) InsertItemBefore(ISvgLength, uint) RemoveItem(uint) ReplaceItem(ISvgLength, uint)"
  },
  "api/SharpVectors.Dom.Svg.ISvgLineElement.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLineElement.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X1 ISvgAnimatedLength X1 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLineElement.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLineElement.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X2 ISvgAnimatedLength X2 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLineElement.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLineElement.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y1 ISvgAnimatedLength Y1 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLineElement.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLineElement.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y2 ISvgAnimatedLength Y2 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLineElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLineElement.html",
    "title": "Interface ISvgLineElement | SharpVectors Documentation",
    "keywords": "Interface ISvgLineElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgLineElement interface corresponds to the 'line' element. public interface ISvgLineElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Properties X1 X2 Y1 Y2"
  },
  "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X1 ISvgAnimatedLength X1 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X2 ISvgAnimatedLength X2 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y1 ISvgAnimatedLength Y1 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y2 ISvgAnimatedLength Y2 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLinearGradientElement.html",
    "title": "Interface ISvgLinearGradientElement | SharpVectors Documentation",
    "keywords": "Interface ISvgLinearGradientElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgLinearGradientElement interface corresponds to the 'linearGradient' element. public interface ISvgLinearGradientElement : ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Inherited Members ISvgGradientElement.GradientUnits ISvgGradientElement.GradientTransform ISvgGradientElement.SpreadMethod ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties X1 X2 Y1 Y2"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.AppendItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.AppendItem.html",
    "title": "Method AppendItem | SharpVectors Documentation",
    "keywords": "Method AppendItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AppendItem(object) object AppendItem(object newItem) Parameters newItem object Returns object"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.Clear.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Clear() void Clear()"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.GetItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.GetItem.html",
    "title": "Method GetItem | SharpVectors Documentation",
    "keywords": "Method GetItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetItem(ulong) object GetItem(ulong index) Parameters index ulong Returns object"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.Initialize.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Initialize(object) object Initialize(object newItem) Parameters newItem object Returns object"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.InsertItemBefore.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.InsertItemBefore.html",
    "title": "Method InsertItemBefore | SharpVectors Documentation",
    "keywords": "Method InsertItemBefore Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InsertItemBefore(object, ulong) object InsertItemBefore(object newItem, ulong index) Parameters newItem object index ulong Returns object"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.NumberOfItems.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.NumberOfItems.html",
    "title": "Property NumberOfItems | SharpVectors Documentation",
    "keywords": "Property NumberOfItems Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NumberOfItems ulong NumberOfItems { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.RemoveItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.RemoveItem.html",
    "title": "Method RemoveItem | SharpVectors Documentation",
    "keywords": "Method RemoveItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RemoveItem(ulong) object RemoveItem(ulong index) Parameters index ulong Returns object"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.ReplaceItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.ReplaceItem.html",
    "title": "Method ReplaceItem | SharpVectors Documentation",
    "keywords": "Method ReplaceItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ReplaceItem(object, ulong) object ReplaceItem(object newItem, ulong index) Parameters newItem object index ulong Returns object"
  },
  "api/SharpVectors.Dom.Svg.ISvgList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgList.html",
    "title": "Interface ISvgList | SharpVectors Documentation",
    "keywords": "Interface ISvgList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface defines a all methods used in a Svg*List interface. public interface ISvgList Properties NumberOfItems Methods AppendItem(object) Clear() GetItem(ulong) Initialize(object) InsertItemBefore(object, ulong) RemoveItem(ulong) ReplaceItem(object, ulong)"
  },
  "api/SharpVectors.Dom.Svg.ISvgLocatable.FarthestViewportElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLocatable.FarthestViewportElement.html",
    "title": "Property FarthestViewportElement | SharpVectors Documentation",
    "keywords": "Property FarthestViewportElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FarthestViewportElement ISvgElement FarthestViewportElement { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgLocatable.GetBBox.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLocatable.GetBBox.html",
    "title": "Method GetBBox | SharpVectors Documentation",
    "keywords": "Method GetBBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetBBox() ISvgRect GetBBox() Returns ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgLocatable.GetCTM.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLocatable.GetCTM.html",
    "title": "Method GetCTM | SharpVectors Documentation",
    "keywords": "Method GetCTM Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetCTM() ISvgMatrix GetCTM() Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgLocatable.GetScreenCTM.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLocatable.GetScreenCTM.html",
    "title": "Method GetScreenCTM | SharpVectors Documentation",
    "keywords": "Method GetScreenCTM Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetScreenCTM() ISvgMatrix GetScreenCTM() Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgLocatable.GetTransformToElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLocatable.GetTransformToElement.html",
    "title": "Method GetTransformToElement | SharpVectors Documentation",
    "keywords": "Method GetTransformToElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetTransformToElement(ISvgElement) ISvgMatrix GetTransformToElement(ISvgElement element) Parameters element ISvgElement Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgLocatable.NearestViewportElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLocatable.NearestViewportElement.html",
    "title": "Property NearestViewportElement | SharpVectors Documentation",
    "keywords": "Property NearestViewportElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NearestViewportElement ISvgElement NearestViewportElement { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgLocatable.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgLocatable.html",
    "title": "Interface ISvgLocatable | SharpVectors Documentation",
    "keywords": "Interface ISvgLocatable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Interface SvgLocatable is for all elements which either have a transform attribute or don't have a transform attribute but whose content can have a bounding box in current user space. public interface ISvgLocatable Properties FarthestViewportElement NearestViewportElement Methods GetBBox() GetCTM() GetScreenCTM() GetTransformToElement(ISvgElement)"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarker.Index.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarker.Index.html",
    "title": "Property Index | SharpVectors Documentation",
    "keywords": "Property Index Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Index int Index { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarker.IsCurve.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarker.IsCurve.html",
    "title": "Property IsCurve | SharpVectors Documentation",
    "keywords": "Property IsCurve Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsCurve bool IsCurve { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarker.Position.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarker.Position.html",
    "title": "Property Position | SharpVectors Documentation",
    "keywords": "Property Position Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Position SvgPointF Position { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarker.Segment.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarker.Segment.html",
    "title": "Property Segment | SharpVectors Documentation",
    "keywords": "Property Segment Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Segment ISvgPathSeg Segment { get; } Property Value ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarker.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarker.html",
    "title": "Interface ISvgMarker | SharpVectors Documentation",
    "keywords": "Interface ISvgMarker Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgMarker Properties Index IsCurve Position Segment"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.MarkerHeight.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.MarkerHeight.html",
    "title": "Property MarkerHeight | SharpVectors Documentation",
    "keywords": "Property MarkerHeight Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll MarkerHeight ISvgAnimatedLength MarkerHeight { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.MarkerUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.MarkerUnits.html",
    "title": "Property MarkerUnits | SharpVectors Documentation",
    "keywords": "Property MarkerUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll MarkerUnits ISvgAnimatedEnumeration MarkerUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.MarkerWidth.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.MarkerWidth.html",
    "title": "Property MarkerWidth | SharpVectors Documentation",
    "keywords": "Property MarkerWidth Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll MarkerWidth ISvgAnimatedLength MarkerWidth { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.OrientAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.OrientAngle.html",
    "title": "Property OrientAngle | SharpVectors Documentation",
    "keywords": "Property OrientAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll OrientAngle ISvgAnimatedAngle OrientAngle { get; } Property Value ISvgAnimatedAngle"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.OrientType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.OrientType.html",
    "title": "Property OrientType | SharpVectors Documentation",
    "keywords": "Property OrientType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll OrientType ISvgAnimatedEnumeration OrientType { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.RefX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.RefX.html",
    "title": "Property RefX | SharpVectors Documentation",
    "keywords": "Property RefX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RefX ISvgAnimatedLength RefX { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.RefY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.RefY.html",
    "title": "Property RefY | SharpVectors Documentation",
    "keywords": "Property RefY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RefY ISvgAnimatedLength RefY { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.SetOrientToAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.SetOrientToAngle.html",
    "title": "Method SetOrientToAngle | SharpVectors Documentation",
    "keywords": "Method SetOrientToAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetOrientToAngle(ISvgAngle) void SetOrientToAngle(ISvgAngle angle) Parameters angle ISvgAngle"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.SetOrientToAuto.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.SetOrientToAuto.html",
    "title": "Method SetOrientToAuto | SharpVectors Documentation",
    "keywords": "Method SetOrientToAuto Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetOrientToAuto() void SetOrientToAuto()"
  },
  "api/SharpVectors.Dom.Svg.ISvgMarkerElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMarkerElement.html",
    "title": "Interface ISvgMarkerElement | SharpVectors Documentation",
    "keywords": "Interface ISvgMarkerElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgMarkerElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgFitToViewBox Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio Properties MarkerHeight MarkerUnits MarkerWidth OrientAngle OrientType RefX RefY Methods SetOrientToAngle(ISvgAngle) SetOrientToAuto()"
  },
  "api/SharpVectors.Dom.Svg.ISvgMaskElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMaskElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgMaskElement.MaskContentUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMaskElement.MaskContentUnits.html",
    "title": "Property MaskContentUnits | SharpVectors Documentation",
    "keywords": "Property MaskContentUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll MaskContentUnits ISvgAnimatedEnumeration MaskContentUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgMaskElement.MaskUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMaskElement.MaskUnits.html",
    "title": "Property MaskUnits | SharpVectors Documentation",
    "keywords": "Property MaskUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll MaskUnits ISvgAnimatedEnumeration MaskUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgMaskElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMaskElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgMaskElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMaskElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgMaskElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMaskElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgMaskElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMaskElement.html",
    "title": "Interface ISvgMaskElement | SharpVectors Documentation",
    "keywords": "Interface ISvgMaskElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used by SvgMaskElement. public interface ISvgMaskElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties Height MaskContentUnits MaskUnits Width X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.A.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.A.html",
    "title": "Property A | SharpVectors Documentation",
    "keywords": "Property A Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll A double A { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.B.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.B.html",
    "title": "Property B | SharpVectors Documentation",
    "keywords": "Property B Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll B double B { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.C.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.C.html",
    "title": "Property C | SharpVectors Documentation",
    "keywords": "Property C Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll C double C { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.D.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.D.html",
    "title": "Property D | SharpVectors Documentation",
    "keywords": "Property D Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll D double D { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.E.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.E.html",
    "title": "Property E | SharpVectors Documentation",
    "keywords": "Property E Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll E double E { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.F.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.F.html",
    "title": "Property F | SharpVectors Documentation",
    "keywords": "Property F Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll F double F { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.FlipX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.FlipX.html",
    "title": "Method FlipX | SharpVectors Documentation",
    "keywords": "Method FlipX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FlipX() ISvgMatrix FlipX() Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.FlipY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.FlipY.html",
    "title": "Method FlipY | SharpVectors Documentation",
    "keywords": "Method FlipY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FlipY() ISvgMatrix FlipY() Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.Inverse.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.Inverse.html",
    "title": "Method Inverse | SharpVectors Documentation",
    "keywords": "Method Inverse Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Inverse() ISvgMatrix Inverse() Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.IsIdentity.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.IsIdentity.html",
    "title": "Property IsIdentity | SharpVectors Documentation",
    "keywords": "Property IsIdentity Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsIdentity bool IsIdentity { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.Multiply.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.Multiply.html",
    "title": "Method Multiply | SharpVectors Documentation",
    "keywords": "Method Multiply Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Multiply(ISvgMatrix) ISvgMatrix Multiply(ISvgMatrix secondMatrix) Parameters secondMatrix ISvgMatrix Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.Rotate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.Rotate.html",
    "title": "Method Rotate | SharpVectors Documentation",
    "keywords": "Method Rotate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Rotate(double) ISvgMatrix Rotate(double angle) Parameters angle double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.RotateFromVector.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.RotateFromVector.html",
    "title": "Method RotateFromVector | SharpVectors Documentation",
    "keywords": "Method RotateFromVector Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RotateFromVector(double, double) ISvgMatrix RotateFromVector(double x, double y) Parameters x double y double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.Scale.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.Scale.html",
    "title": "Method Scale | SharpVectors Documentation",
    "keywords": "Method Scale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Scale(double) ISvgMatrix Scale(double scaleFactor) Parameters scaleFactor double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.ScaleNonUniform.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.ScaleNonUniform.html",
    "title": "Method ScaleNonUniform | SharpVectors Documentation",
    "keywords": "Method ScaleNonUniform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ScaleNonUniform(double, double) ISvgMatrix ScaleNonUniform(double scaleFactorX, double scaleFactorY) Parameters scaleFactorX double scaleFactorY double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.SkewX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.SkewX.html",
    "title": "Method SkewX | SharpVectors Documentation",
    "keywords": "Method SkewX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SkewX(double) ISvgMatrix SkewX(double angle) Parameters angle double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.SkewY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.SkewY.html",
    "title": "Method SkewY | SharpVectors Documentation",
    "keywords": "Method SkewY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SkewY(double) ISvgMatrix SkewY(double angle) Parameters angle double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.Translate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.Translate.html",
    "title": "Method Translate | SharpVectors Documentation",
    "keywords": "Method Translate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Translate(double, double) ISvgMatrix Translate(double x, double y) Parameters x double y double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMatrix.html",
    "title": "Interface ISvgMatrix | SharpVectors Documentation",
    "keywords": "Interface ISvgMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Interface for matrix operations used within the SVG DOM public interface ISvgMatrix Properties A B C D E F IsIdentity Methods FlipX() FlipY() Inverse() Multiply(ISvgMatrix) Rotate(double) RotateFromVector(double, double) Scale(double) ScaleNonUniform(double, double) SkewX(double) SkewY(double) Translate(double, double)"
  },
  "api/SharpVectors.Dom.Svg.ISvgMetadataElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMetadataElement.html",
    "title": "Interface ISvgMetadataElement | SharpVectors Documentation",
    "keywords": "Interface ISvgMetadataElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgMetadataElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgMissingGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgMissingGlyphElement.html",
    "title": "Interface ISvgMissingGlyphElement | SharpVectors Documentation",
    "keywords": "Interface ISvgMissingGlyphElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgMissingGlyphElement interface corresponds to the 'missing-glyph' element. public interface ISvgMissingGlyphElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumber.Value.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumber.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Value double Value { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumber.html",
    "title": "Interface ISvgNumber | SharpVectors Documentation",
    "keywords": "Interface ISvgNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Used for attributes of basic type 'number'. public interface ISvgNumber Properties Value"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.AppendItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.AppendItem.html",
    "title": "Method AppendItem | SharpVectors Documentation",
    "keywords": "Method AppendItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AppendItem(ISvgNumber) ISvgNumber AppendItem(ISvgNumber newItem) Parameters newItem ISvgNumber Returns ISvgNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.Clear.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Clear() void Clear()"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.Count.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Count int Count { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.FromString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.FromString.html",
    "title": "Method FromString | SharpVectors Documentation",
    "keywords": "Method FromString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FromString(string) void FromString(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.GetItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.GetItem.html",
    "title": "Method GetItem | SharpVectors Documentation",
    "keywords": "Method GetItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetItem(uint) ISvgNumber GetItem(uint index) Parameters index uint Returns ISvgNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.Initialize.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Initialize(ISvgNumber) ISvgNumber Initialize(ISvgNumber newItem) Parameters newItem ISvgNumber Returns ISvgNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.InsertItemBefore.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.InsertItemBefore.html",
    "title": "Method InsertItemBefore | SharpVectors Documentation",
    "keywords": "Method InsertItemBefore Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InsertItemBefore(ISvgNumber, uint) ISvgNumber InsertItemBefore(ISvgNumber newItem, uint index) Parameters newItem ISvgNumber index uint Returns ISvgNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.Item.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll this[int] ISvgNumber this[int index] { get; } Parameters index int Property Value ISvgNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.NumberOfItems.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.NumberOfItems.html",
    "title": "Property NumberOfItems | SharpVectors Documentation",
    "keywords": "Property NumberOfItems Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NumberOfItems uint NumberOfItems { get; } Property Value uint"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.RemoveItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.RemoveItem.html",
    "title": "Method RemoveItem | SharpVectors Documentation",
    "keywords": "Method RemoveItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RemoveItem(uint) ISvgNumber RemoveItem(uint index) Parameters index uint Returns ISvgNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.ReplaceItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.ReplaceItem.html",
    "title": "Method ReplaceItem | SharpVectors Documentation",
    "keywords": "Method ReplaceItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ReplaceItem(ISvgNumber, uint) ISvgNumber ReplaceItem(ISvgNumber newItem, uint index) Parameters newItem ISvgNumber index uint Returns ISvgNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgNumberList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgNumberList.html",
    "title": "Interface ISvgNumberList | SharpVectors Documentation",
    "keywords": "Interface ISvgNumberList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface defines a list of SvgNumber objects. public interface ISvgNumberList Properties Count this[int] NumberOfItems Methods AppendItem(ISvgNumber) Clear() FromString(string) GetItem(uint) Initialize(ISvgNumber) InsertItemBefore(ISvgNumber, uint) RemoveItem(uint) ReplaceItem(ISvgNumber, uint)"
  },
  "api/SharpVectors.Dom.Svg.ISvgPaint.PaintType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPaint.PaintType.html",
    "title": "Property PaintType | SharpVectors Documentation",
    "keywords": "Property PaintType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PaintType SvgPaintType PaintType { get; } Property Value SvgPaintType"
  },
  "api/SharpVectors.Dom.Svg.ISvgPaint.SetPaint.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPaint.SetPaint.html",
    "title": "Method SetPaint | SharpVectors Documentation",
    "keywords": "Method SetPaint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetPaint(SvgPaintType, string, string, string) void SetPaint(SvgPaintType paintType, string uri, string rgbColor, string iccColor) Parameters paintType SvgPaintType uri string rgbColor string iccColor string"
  },
  "api/SharpVectors.Dom.Svg.ISvgPaint.SetUri.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPaint.SetUri.html",
    "title": "Method SetUri | SharpVectors Documentation",
    "keywords": "Method SetUri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetUri(string) void SetUri(string uri) Parameters uri string"
  },
  "api/SharpVectors.Dom.Svg.ISvgPaint.Uri.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPaint.Uri.html",
    "title": "Property Uri | SharpVectors Documentation",
    "keywords": "Property Uri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Uri string Uri { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgPaint.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPaint.html",
    "title": "Interface ISvgPaint | SharpVectors Documentation",
    "keywords": "Interface ISvgPaint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPaint interface corresponds to basic type paint and represents the values of properties 'fill' and 'stroke'. public interface ISvgPaint : ISvgColor, ICssValue Inherited Members ISvgColor.ColorType ISvgColor.RgbColor ISvgColor.IccColor ISvgColor.SetRgbColor(string) ISvgColor.SetRgbColorIccColor(string, string) ISvgColor.SetColor(SvgColorType, string, string) ICssValue.CssText ICssValue.CssValueType ICssValue.IsAbsolute Properties PaintType Uri Methods SetPaint(SvgPaintType, string, string, string) SetUri(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegArcAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegArcAbs.html",
    "title": "Method CreateSvgPathSegArcAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegArcAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegArcAbs(double, double, double, double, double, bool, bool) ISvgPathSegArcAbs CreateSvgPathSegArcAbs(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters x double y double r1 double r2 double angle double largeArcFlag bool sweepFlag bool Returns ISvgPathSegArcAbs"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegArcRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegArcRel.html",
    "title": "Method CreateSvgPathSegArcRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegArcRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegArcRel(double, double, double, double, double, bool, bool) ISvgPathSegArcRel CreateSvgPathSegArcRel(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters x double y double r1 double r2 double angle double largeArcFlag bool sweepFlag bool Returns ISvgPathSegArcRel"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegClosePath.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegClosePath.html",
    "title": "Method CreateSvgPathSegClosePath | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegClosePath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegClosePath() ISvgPathSegClosePath CreateSvgPathSegClosePath() Returns ISvgPathSegClosePath"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoCubicAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoCubicAbs.html",
    "title": "Method CreateSvgPathSegCurvetoCubicAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoCubicAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegCurvetoCubicAbs(double, double, double, double, double, double) ISvgPathSegCurvetoCubicAbs CreateSvgPathSegCurvetoCubicAbs(double x, double y, double x1, double y1, double x2, double y2) Parameters x double y double x1 double y1 double x2 double y2 double Returns ISvgPathSegCurvetoCubicAbs"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoCubicRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoCubicRel.html",
    "title": "Method CreateSvgPathSegCurvetoCubicRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoCubicRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegCurvetoCubicRel(double, double, double, double, double, double) ISvgPathSegCurvetoCubicRel CreateSvgPathSegCurvetoCubicRel(double x, double y, double x1, double y1, double x2, double y2) Parameters x double y double x1 double y1 double x2 double y2 double Returns ISvgPathSegCurvetoCubicRel"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoCubicSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoCubicSmoothAbs.html",
    "title": "Method CreateSvgPathSegCurvetoCubicSmoothAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoCubicSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegCurvetoCubicSmoothAbs(double, double, double, double) ISvgPathSegCurvetoCubicSmoothAbs CreateSvgPathSegCurvetoCubicSmoothAbs(double x, double y, double x2, double y2) Parameters x double y double x2 double y2 double Returns ISvgPathSegCurvetoCubicSmoothAbs"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoCubicSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoCubicSmoothRel.html",
    "title": "Method CreateSvgPathSegCurvetoCubicSmoothRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoCubicSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegCurvetoCubicSmoothRel(double, double, double, double) ISvgPathSegCurvetoCubicSmoothRel CreateSvgPathSegCurvetoCubicSmoothRel(double x, double y, double x2, double y2) Parameters x double y double x2 double y2 double Returns ISvgPathSegCurvetoCubicSmoothRel"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoQuadraticAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoQuadraticAbs.html",
    "title": "Method CreateSvgPathSegCurvetoQuadraticAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoQuadraticAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegCurvetoQuadraticAbs(double, double, double, double) ISvgPathSegCurvetoQuadraticAbs CreateSvgPathSegCurvetoQuadraticAbs(double x, double y, double x1, double y1) Parameters x double y double x1 double y1 double Returns ISvgPathSegCurvetoQuadraticAbs"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoQuadraticRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoQuadraticRel.html",
    "title": "Method CreateSvgPathSegCurvetoQuadraticRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoQuadraticRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegCurvetoQuadraticRel(double, double, double, double) ISvgPathSegCurvetoQuadraticRel CreateSvgPathSegCurvetoQuadraticRel(double x, double y, double x1, double y1) Parameters x double y double x1 double y1 double Returns ISvgPathSegCurvetoQuadraticRel"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoQuadraticSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoQuadraticSmoothAbs.html",
    "title": "Method CreateSvgPathSegCurvetoQuadraticSmoothAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoQuadraticSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegCurvetoQuadraticSmoothAbs(double, double) ISvgPathSegCurvetoQuadraticSmoothAbs CreateSvgPathSegCurvetoQuadraticSmoothAbs(double x, double y) Parameters x double y double Returns ISvgPathSegCurvetoQuadraticSmoothAbs"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoQuadraticSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegCurvetoQuadraticSmoothRel.html",
    "title": "Method CreateSvgPathSegCurvetoQuadraticSmoothRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoQuadraticSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegCurvetoQuadraticSmoothRel(double, double) ISvgPathSegCurvetoQuadraticSmoothRel CreateSvgPathSegCurvetoQuadraticSmoothRel(double x, double y) Parameters x double y double Returns ISvgPathSegCurvetoQuadraticSmoothRel"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoAbs.html",
    "title": "Method CreateSvgPathSegLinetoAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegLinetoAbs(double, double) ISvgPathSegLinetoAbs CreateSvgPathSegLinetoAbs(double x, double y) Parameters x double y double Returns ISvgPathSegLinetoAbs"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoHorizontalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoHorizontalAbs.html",
    "title": "Method CreateSvgPathSegLinetoHorizontalAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoHorizontalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegLinetoHorizontalAbs(double) ISvgPathSegLinetoHorizontalAbs CreateSvgPathSegLinetoHorizontalAbs(double x) Parameters x double Returns ISvgPathSegLinetoHorizontalAbs"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoHorizontalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoHorizontalRel.html",
    "title": "Method CreateSvgPathSegLinetoHorizontalRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoHorizontalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegLinetoHorizontalRel(double) ISvgPathSegLinetoHorizontalRel CreateSvgPathSegLinetoHorizontalRel(double x) Parameters x double Returns ISvgPathSegLinetoHorizontalRel"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoRel.html",
    "title": "Method CreateSvgPathSegLinetoRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegLinetoRel(double, double) ISvgPathSegLinetoRel CreateSvgPathSegLinetoRel(double x, double y) Parameters x double y double Returns ISvgPathSegLinetoRel"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoVerticalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoVerticalAbs.html",
    "title": "Method CreateSvgPathSegLinetoVerticalAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoVerticalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegLinetoVerticalAbs(double) ISvgPathSegLinetoVerticalAbs CreateSvgPathSegLinetoVerticalAbs(double y) Parameters y double Returns ISvgPathSegLinetoVerticalAbs"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoVerticalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegLinetoVerticalRel.html",
    "title": "Method CreateSvgPathSegLinetoVerticalRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoVerticalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegLinetoVerticalRel(double) ISvgPathSegLinetoVerticalRel CreateSvgPathSegLinetoVerticalRel(double y) Parameters y double Returns ISvgPathSegLinetoVerticalRel"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegMovetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegMovetoAbs.html",
    "title": "Method CreateSvgPathSegMovetoAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegMovetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegMovetoAbs(double, double) ISvgPathSegMovetoAbs CreateSvgPathSegMovetoAbs(double x, double y) Parameters x double y double Returns ISvgPathSegMovetoAbs"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegMovetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.CreateSvgPathSegMovetoRel.html",
    "title": "Method CreateSvgPathSegMovetoRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegMovetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPathSegMovetoRel(double, double) ISvgPathSegMovetoRel CreateSvgPathSegMovetoRel(double x, double y) Parameters x double y double Returns ISvgPathSegMovetoRel"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.GetPathSegAtLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.GetPathSegAtLength.html",
    "title": "Method GetPathSegAtLength | SharpVectors Documentation",
    "keywords": "Method GetPathSegAtLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetPathSegAtLength(double) int GetPathSegAtLength(double distance) Parameters distance double Returns int"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.GetPointAtLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.GetPointAtLength.html",
    "title": "Method GetPointAtLength | SharpVectors Documentation",
    "keywords": "Method GetPointAtLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetPointAtLength(double) ISvgPoint GetPointAtLength(double distance) Parameters distance double Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.GetTotalLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.GetTotalLength.html",
    "title": "Method GetTotalLength | SharpVectors Documentation",
    "keywords": "Method GetTotalLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetTotalLength() double GetTotalLength() Returns double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.PathLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.PathLength.html",
    "title": "Property PathLength | SharpVectors Documentation",
    "keywords": "Property PathLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PathLength ISvgAnimatedNumber PathLength { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathElement.html",
    "title": "Interface ISvgPathElement | SharpVectors Documentation",
    "keywords": "Interface ISvgPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathElement interface corresponds to the 'path' element. public interface ISvgPathElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPathData, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgAnimatedPathData.PathSegList ISvgAnimatedPathData.NormalizedPathSegList ISvgAnimatedPathData.AnimatedPathSegList ISvgAnimatedPathData.AnimatedNormalizedPathSegList IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Properties PathLength Methods CreateSvgPathSegArcAbs(double, double, double, double, double, bool, bool) CreateSvgPathSegArcRel(double, double, double, double, double, bool, bool) CreateSvgPathSegClosePath() CreateSvgPathSegCurvetoCubicAbs(double, double, double, double, double, double) CreateSvgPathSegCurvetoCubicRel(double, double, double, double, double, double) CreateSvgPathSegCurvetoCubicSmoothAbs(double, double, double, double) CreateSvgPathSegCurvetoCubicSmoothRel(double, double, double, double) CreateSvgPathSegCurvetoQuadraticAbs(double, double, double, double) CreateSvgPathSegCurvetoQuadraticRel(double, double, double, double) CreateSvgPathSegCurvetoQuadraticSmoothAbs(double, double) CreateSvgPathSegCurvetoQuadraticSmoothRel(double, double) CreateSvgPathSegLinetoAbs(double, double) CreateSvgPathSegLinetoHorizontalAbs(double) CreateSvgPathSegLinetoHorizontalRel(double) CreateSvgPathSegLinetoRel(double, double) CreateSvgPathSegLinetoVerticalAbs(double) CreateSvgPathSegLinetoVerticalRel(double) CreateSvgPathSegMovetoAbs(double, double) CreateSvgPathSegMovetoRel(double, double) GetPathSegAtLength(double) GetPointAtLength(double) GetTotalLength()"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.ArcAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.ArcAbs.html",
    "title": "Method ArcAbs | SharpVectors Documentation",
    "keywords": "Method ArcAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ArcAbs(float, float, float, bool, bool, float, float) Invoked when an absolute elliptical arc command has been parsed. Command : A void ArcAbs(float rx, float ry, float xAxisRotation, bool largeArcFlag, bool sweepFlag, float x, float y) Parameters rx float the X axis radius for the ellipse ry float the Y axis radius for the ellipse xAxisRotation float the rotation angle in degrees for the ellipse's X-axis relative to the X-axis largeArcFlag bool the value of the large-arc-flag sweepFlag bool the value of the sweep-flag x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.ArcRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.ArcRel.html",
    "title": "Method ArcRel | SharpVectors Documentation",
    "keywords": "Method ArcRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ArcRel(float, float, float, bool, bool, float, float) Invoked when a relative elliptical arc command has been parsed. Command : a void ArcRel(float rx, float ry, float xAxisRotation, bool largeArcFlag, bool sweepFlag, float x, float y) Parameters rx float the X axis radius for the ellipse ry float the Y axis radius for the ellipse xAxisRotation float the rotation angle in degrees for the ellipse's X-axis relative to the X-axis largeArcFlag bool the value of the large-arc-flag sweepFlag bool the value of the sweep-flag x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.ClosePath.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.ClosePath.html",
    "title": "Method ClosePath | SharpVectors Documentation",
    "keywords": "Method ClosePath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ClosePath() Invoked when a closepath has been parsed. Command : z | Z void ClosePath() Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoCubicAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoCubicAbs.html",
    "title": "Method CurvetoCubicAbs | SharpVectors Documentation",
    "keywords": "Method CurvetoCubicAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoCubicAbs(float, float, float, float, float, float) Invoked when an absolute cubic bezier curve command has been parsed. Command : C void CurvetoCubicAbs(float x1, float y1, float x2, float y2, float x, float y) Parameters x1 float the absolute x coordinate for the first control point y1 float the absolute y coordinate for the first control point x2 float the absolute x coordinate for the second control point y2 float the absolute y coordinate for the second control point x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoCubicRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoCubicRel.html",
    "title": "Method CurvetoCubicRel | SharpVectors Documentation",
    "keywords": "Method CurvetoCubicRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoCubicRel(float, float, float, float, float, float) Invoked when a relative cubic bezier curve command has been parsed. Command : c void CurvetoCubicRel(float x1, float y1, float x2, float y2, float x, float y) Parameters x1 float the relative x coordinate for the first control point y1 float the relative y coordinate for the first control point x2 float the relative x coordinate for the second control point y2 float the relative y coordinate for the second control point x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoCubicSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoCubicSmoothAbs.html",
    "title": "Method CurvetoCubicSmoothAbs | SharpVectors Documentation",
    "keywords": "Method CurvetoCubicSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoCubicSmoothAbs(float, float, float, float) Invoked when an absolute smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : S void CurvetoCubicSmoothAbs(float x2, float y2, float x, float y) Parameters x2 float the absolute x coordinate for the second control point y2 float the absolute y coordinate for the second control point x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoCubicSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoCubicSmoothRel.html",
    "title": "Method CurvetoCubicSmoothRel | SharpVectors Documentation",
    "keywords": "Method CurvetoCubicSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoCubicSmoothRel(float, float, float, float) Invoked when a relative smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : s void CurvetoCubicSmoothRel(float x2, float y2, float x, float y) Parameters x2 float the relative x coordinate for the second control point y2 float the relative y coordinate for the second control point x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoQuadraticAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoQuadraticAbs.html",
    "title": "Method CurvetoQuadraticAbs | SharpVectors Documentation",
    "keywords": "Method CurvetoQuadraticAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoQuadraticAbs(float, float, float, float) Invoked when an absolute quadratic bezier curve command has been parsed. Command : Q void CurvetoQuadraticAbs(float x1, float y1, float x, float y) Parameters x1 float the absolute x coordinate for the control point y1 float the absolute y coordinate for the control point x float the absolute x coordinate for the end point y float the absolute x coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoQuadraticRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoQuadraticRel.html",
    "title": "Method CurvetoQuadraticRel | SharpVectors Documentation",
    "keywords": "Method CurvetoQuadraticRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoQuadraticRel(float, float, float, float) Invoked when a relative quadratic bezier curve command has been parsed. Command : q void CurvetoQuadraticRel(float x1, float y1, float x, float y) Parameters x1 float the relative x coordinate for the control point y1 float the relative y coordinate for the control point x float the relative x coordinate for the end point y float the relative x coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoQuadraticSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoQuadraticSmoothAbs.html",
    "title": "Method CurvetoQuadraticSmoothAbs | SharpVectors Documentation",
    "keywords": "Method CurvetoQuadraticSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoQuadraticSmoothAbs(float, float) Invoked when an absolute smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : T void CurvetoQuadraticSmoothAbs(float x, float y) Parameters x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoQuadraticSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.CurvetoQuadraticSmoothRel.html",
    "title": "Method CurvetoQuadraticSmoothRel | SharpVectors Documentation",
    "keywords": "Method CurvetoQuadraticSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoQuadraticSmoothRel(float, float) Invoked when a relative smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : t void CurvetoQuadraticSmoothRel(float x, float y) Parameters x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.EndPath.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.EndPath.html",
    "title": "Method EndPath | SharpVectors Documentation",
    "keywords": "Method EndPath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndPath() Invoked when the path ends. void EndPath() Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoAbs.html",
    "title": "Method LinetoAbs | SharpVectors Documentation",
    "keywords": "Method LinetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoAbs(float, float) Invoked when an absolute line command has been parsed. Command : L void LinetoAbs(float x, float y) Parameters x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoHorizontalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoHorizontalAbs.html",
    "title": "Method LinetoHorizontalAbs | SharpVectors Documentation",
    "keywords": "Method LinetoHorizontalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoHorizontalAbs(float) Invoked when an horizontal absolute line command has been parsed. Command : H void LinetoHorizontalAbs(float x) Parameters x float the absolute X coordinate of the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoHorizontalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoHorizontalRel.html",
    "title": "Method LinetoHorizontalRel | SharpVectors Documentation",
    "keywords": "Method LinetoHorizontalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoHorizontalRel(float) Invoked when an horizontal relative line command has been parsed. Command : h void LinetoHorizontalRel(float x) Parameters x float the relative X coordinate of the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoRel.html",
    "title": "Method LinetoRel | SharpVectors Documentation",
    "keywords": "Method LinetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoRel(float, float) Invoked when a relative line command has been parsed. Command : l void LinetoRel(float x, float y) Parameters x float the relative x coordinates for the end point y float the relative y coordinates for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoVerticalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoVerticalAbs.html",
    "title": "Method LinetoVerticalAbs | SharpVectors Documentation",
    "keywords": "Method LinetoVerticalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoVerticalAbs(float) Invoked when a vertical absolute line command has been parsed. Command : V void LinetoVerticalAbs(float y) Parameters y float the absolute Y coordinate of the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoVerticalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.LinetoVerticalRel.html",
    "title": "Method LinetoVerticalRel | SharpVectors Documentation",
    "keywords": "Method LinetoVerticalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoVerticalRel(float) Invoked when a vertical relative line command has been parsed. Command : v void LinetoVerticalRel(float y) Parameters y float the relative Y coordinate of the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.MovetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.MovetoAbs.html",
    "title": "Method MovetoAbs | SharpVectors Documentation",
    "keywords": "Method MovetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MovetoAbs(float, float) Invoked when an absolute moveto command has been parsed. Command : M void MovetoAbs(float x, float y) Parameters x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.MovetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.MovetoRel.html",
    "title": "Method MovetoRel | SharpVectors Documentation",
    "keywords": "Method MovetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MovetoRel(float, float) Invoked when a relative moveto command has been parsed. Command : m void MovetoRel(float x, float y) Parameters x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.StartPath.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.StartPath.html",
    "title": "Method StartPath | SharpVectors Documentation",
    "keywords": "Method StartPath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartPath() Invoked when the path starts. void StartPath() Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathHandler.html",
    "title": "Interface ISvgPathHandler | SharpVectors Documentation",
    "keywords": "Interface ISvgPathHandler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This interface must be implemented and then registred as the handler of a PathParser instance in order to be notified of parsing events. public interface ISvgPathHandler Methods ArcAbs(float, float, float, bool, bool, float, float) Invoked when an absolute elliptical arc command has been parsed. Command : A ArcRel(float, float, float, bool, bool, float, float) Invoked when a relative elliptical arc command has been parsed. Command : a ClosePath() Invoked when a closepath has been parsed. Command : z | Z CurvetoCubicAbs(float, float, float, float, float, float) Invoked when an absolute cubic bezier curve command has been parsed. Command : C CurvetoCubicRel(float, float, float, float, float, float) Invoked when a relative cubic bezier curve command has been parsed. Command : c CurvetoCubicSmoothAbs(float, float, float, float) Invoked when an absolute smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : S CurvetoCubicSmoothRel(float, float, float, float) Invoked when a relative smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : s CurvetoQuadraticAbs(float, float, float, float) Invoked when an absolute quadratic bezier curve command has been parsed. Command : Q CurvetoQuadraticRel(float, float, float, float) Invoked when a relative quadratic bezier curve command has been parsed. Command : q CurvetoQuadraticSmoothAbs(float, float) Invoked when an absolute smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : T CurvetoQuadraticSmoothRel(float, float) Invoked when a relative smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : t EndPath() Invoked when the path ends. LinetoAbs(float, float) Invoked when an absolute line command has been parsed. Command : L LinetoHorizontalAbs(float) Invoked when an horizontal absolute line command has been parsed. Command : H LinetoHorizontalRel(float) Invoked when an horizontal relative line command has been parsed. Command : h LinetoRel(float, float) Invoked when a relative line command has been parsed. Command : l LinetoVerticalAbs(float) Invoked when a vertical absolute line command has been parsed. Command : V LinetoVerticalRel(float) Invoked when a vertical relative line command has been parsed. Command : v MovetoAbs(float, float) Invoked when an absolute moveto command has been parsed. Command : M MovetoRel(float, float) Invoked when a relative moveto command has been parsed. Command : m StartPath() Invoked when the path starts."
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AbsXY SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.EndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.EndAngle.html",
    "title": "Property EndAngle | SharpVectors Documentation",
    "keywords": "Property EndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll EndAngle double EndAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.IsCurve.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.IsCurve.html",
    "title": "Property IsCurve | SharpVectors Documentation",
    "keywords": "Property IsCurve Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsCurve bool IsCurve { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.Limits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.Limits.html",
    "title": "Property Limits | SharpVectors Documentation",
    "keywords": "Property Limits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Limits SvgPointF[] Limits { get; set; } Property Value SvgPointF[]"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.NextSeg.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.NextSeg.html",
    "title": "Property NextSeg | SharpVectors Documentation",
    "keywords": "Property NextSeg Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NextSeg ISvgPathSeg NextSeg { get; } Property Value ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.PathSegType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.PathSegType.html",
    "title": "Property PathSegType | SharpVectors Documentation",
    "keywords": "Property PathSegType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PathSegType SvgPathSegType PathSegType { get; } Property Value SvgPathSegType"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.PathSegTypeAsLetter.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.PathSegTypeAsLetter.html",
    "title": "Property PathSegTypeAsLetter | SharpVectors Documentation",
    "keywords": "Property PathSegTypeAsLetter Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PathSegTypeAsLetter string PathSegTypeAsLetter { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PathText string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.PathType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.PathType.html",
    "title": "Property PathType | SharpVectors Documentation",
    "keywords": "Property PathType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PathType SvgPathType PathType { get; } Property Value SvgPathType"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.PreviousSeg.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.PreviousSeg.html",
    "title": "Property PreviousSeg | SharpVectors Documentation",
    "keywords": "Property PreviousSeg Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PreviousSeg ISvgPathSeg PreviousSeg { get; } Property Value ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.StartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.StartAngle.html",
    "title": "Property StartAngle | SharpVectors Documentation",
    "keywords": "Property StartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll StartAngle double StartAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSeg.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSeg.html",
    "title": "Interface ISvgPathSeg | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSeg Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSeg interface is a base interface that corresponds to a single command within a path data specification. public interface ISvgPathSeg Properties AbsXY EndAngle IsCurve Limits NextSeg PathSegType PathSegTypeAsLetter PathText PathType PreviousSeg StartAngle"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.Angle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.Angle.html",
    "title": "Property Angle | SharpVectors Documentation",
    "keywords": "Property Angle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Angle double Angle { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.LargeArcFlag.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.LargeArcFlag.html",
    "title": "Property LargeArcFlag | SharpVectors Documentation",
    "keywords": "Property LargeArcFlag Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll LargeArcFlag bool LargeArcFlag { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.R1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.R1.html",
    "title": "Property R1 | SharpVectors Documentation",
    "keywords": "Property R1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll R1 double R1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.R2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.R2.html",
    "title": "Property R2 | SharpVectors Documentation",
    "keywords": "Property R2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll R2 double R2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.SweepFlag.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.SweepFlag.html",
    "title": "Property SweepFlag | SharpVectors Documentation",
    "keywords": "Property SweepFlag Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SweepFlag bool SweepFlag { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcAbs.html",
    "title": "Interface ISvgPathSegArcAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegArcAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegArcAbs interface corresponds to an \"absolute arcto\" (A) path data command. public interface ISvgPathSegArcAbs : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties Angle LargeArcFlag R1 R2 SweepFlag X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.Angle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.Angle.html",
    "title": "Property Angle | SharpVectors Documentation",
    "keywords": "Property Angle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Angle double Angle { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.LargeArcFlag.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.LargeArcFlag.html",
    "title": "Property LargeArcFlag | SharpVectors Documentation",
    "keywords": "Property LargeArcFlag Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll LargeArcFlag bool LargeArcFlag { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.R1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.R1.html",
    "title": "Property R1 | SharpVectors Documentation",
    "keywords": "Property R1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll R1 double R1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.R2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.R2.html",
    "title": "Property R2 | SharpVectors Documentation",
    "keywords": "Property R2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll R2 double R2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.SweepFlag.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.SweepFlag.html",
    "title": "Property SweepFlag | SharpVectors Documentation",
    "keywords": "Property SweepFlag Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SweepFlag bool SweepFlag { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegArcRel.html",
    "title": "Interface ISvgPathSegArcRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegArcRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegArcRel interface corresponds to a \"relative arcto\" (a) path data command. public interface ISvgPathSegArcRel : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties Angle LargeArcFlag R1 R2 SweepFlag X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegClosePath.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegClosePath.html",
    "title": "Interface ISvgPathSegClosePath | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegClosePath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegClosePath interface corresponds to a \"closepath\" (z) path data command. public interface ISvgPathSegClosePath : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X1 double X1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X2 double X2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y1 double Y1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y2 double Y2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicAbs.html",
    "title": "Interface ISvgPathSegCurvetoCubicAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoCubicAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegCurvetoCubicAbs interface corresponds to an \"absolute cubic Bezier curveto\" (C) path data command. public interface ISvgPathSegCurvetoCubicAbs : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X X1 X2 Y Y1 Y2"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X1 double X1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X2 double X2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y1 double Y1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y2 double Y2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicRel.html",
    "title": "Interface ISvgPathSegCurvetoCubicRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoCubicRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegCurvetoCubicRel interface corresponds to a \"relative cubic Bezier curveto\" (c) path data command. public interface ISvgPathSegCurvetoCubicRel : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X X1 X2 Y Y1 Y2"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X2 double X2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y2 double Y2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothAbs.html",
    "title": "Interface ISvgPathSegCurvetoCubicSmoothAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoCubicSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegCurvetoCubicSmoothAbs interface corresponds to an \"absolute smooth cubic curveto\" (S) path data command. public interface ISvgPathSegCurvetoCubicSmoothAbs : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X X2 Y Y2"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X2 double X2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y2 double Y2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoCubicSmoothRel.html",
    "title": "Interface ISvgPathSegCurvetoCubicSmoothRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoCubicSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegCurvetoCubicSmoothRel interface corresponds to a \"relative smooth cubic curveto\" (s) path data command. public interface ISvgPathSegCurvetoCubicSmoothRel : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X X2 Y Y2"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X1 double X1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y1 double Y1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticAbs.html",
    "title": "Interface ISvgPathSegCurvetoQuadraticAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoQuadraticAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegCurvetoQuadraticAbs interface corresponds to an \"absolute quadratic Bezier curveto\" (Q) path data command. public interface ISvgPathSegCurvetoQuadraticAbs : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X X1 Y Y1"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X1 double X1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y1 double Y1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticRel.html",
    "title": "Interface ISvgPathSegCurvetoQuadraticRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoQuadraticRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegCurvetoCubicRel interface corresponds to a \"relative cubic Bezier curveto\" (c) path data command. public interface ISvgPathSegCurvetoQuadraticRel : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X X1 Y Y1"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothAbs.html",
    "title": "Interface ISvgPathSegCurvetoQuadraticSmoothAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoQuadraticSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegCurvetoQuadraticSmoothAbs interface corresponds to an \"absolute smooth quadratic curveto\" (T) path data command. public interface ISvgPathSegCurvetoQuadraticSmoothAbs : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegCurvetoQuadraticSmoothRel.html",
    "title": "Interface ISvgPathSegCurvetoQuadraticSmoothRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegCurvetoQuadraticSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegCurvetoQuadraticSmoothRel interface corresponds to a \"relative smooth quadratic curveto\" (t) path data command. public interface ISvgPathSegCurvetoQuadraticSmoothRel : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoAbs.html",
    "title": "Interface ISvgPathSegLinetoAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegLinetoAbs interface corresponds to an \"absolute lineto\" (L) path data command. public interface ISvgPathSegLinetoAbs : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalAbs.html",
    "title": "Interface ISvgPathSegLinetoHorizontalAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoHorizontalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegLinetoHorizontalAbs interface corresponds to an \"absolute horizontal lineto\" (H) path data command. public interface ISvgPathSegLinetoHorizontalAbs : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoHorizontalRel.html",
    "title": "Interface ISvgPathSegLinetoHorizontalRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoHorizontalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegLinetoHorizontalRel interface corresponds to a \"relative horizontal lineto\" (h) path data command. public interface ISvgPathSegLinetoHorizontalRel : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoRel.html",
    "title": "Interface ISvgPathSegLinetoRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegLinetoRel interface corresponds to an \"relative lineto\" (l) path data command. public interface ISvgPathSegLinetoRel : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalAbs.html",
    "title": "Interface ISvgPathSegLinetoVerticalAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoVerticalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegLinetoVerticalAbs interface corresponds to an \"absolute vertical lineto\" (V) path data command. public interface ISvgPathSegLinetoVerticalAbs : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegLinetoVerticalRel.html",
    "title": "Interface ISvgPathSegLinetoVerticalRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegLinetoVerticalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegLinetoVerticalRel interface corresponds to a \"relative vertical lineto\" (v) path data command. public interface ISvgPathSegLinetoVerticalRel : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegList.AppendItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegList.AppendItem.html",
    "title": "Method AppendItem | SharpVectors Documentation",
    "keywords": "Method AppendItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AppendItem(ISvgPathSeg) ISvgPathSeg AppendItem(ISvgPathSeg newItem) Parameters newItem ISvgPathSeg Returns ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegList.GetItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegList.GetItem.html",
    "title": "Method GetItem | SharpVectors Documentation",
    "keywords": "Method GetItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetItem(int) ISvgPathSeg GetItem(int index) Parameters index int Returns ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegList.Initialize.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegList.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Initialize(ISvgPathSeg) ISvgPathSeg Initialize(ISvgPathSeg newItem) Parameters newItem ISvgPathSeg Returns ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegList.InsertItemBefore.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegList.InsertItemBefore.html",
    "title": "Method InsertItemBefore | SharpVectors Documentation",
    "keywords": "Method InsertItemBefore Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InsertItemBefore(ISvgPathSeg, int) ISvgPathSeg InsertItemBefore(ISvgPathSeg newItem, int index) Parameters newItem ISvgPathSeg index int Returns ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegList.NumberOfItems.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegList.NumberOfItems.html",
    "title": "Property NumberOfItems | SharpVectors Documentation",
    "keywords": "Property NumberOfItems Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NumberOfItems int NumberOfItems { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegList.RemoveItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegList.RemoveItem.html",
    "title": "Method RemoveItem | SharpVectors Documentation",
    "keywords": "Method RemoveItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RemoveItem(int) ISvgPathSeg RemoveItem(int index) Parameters index int Returns ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegList.ReplaceItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegList.ReplaceItem.html",
    "title": "Method ReplaceItem | SharpVectors Documentation",
    "keywords": "Method ReplaceItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ReplaceItem(ISvgPathSeg, int) ISvgPathSeg ReplaceItem(ISvgPathSeg newItem, int index) Parameters newItem ISvgPathSeg index int Returns ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegList.html",
    "title": "Interface ISvgPathSegList | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface defines a list of SvgPathSeg objects. public interface ISvgPathSegList : IList<ISvgPathSeg>, ICollection<ISvgPathSeg>, IEnumerable<ISvgPathSeg>, IEnumerable Inherited Members IList<ISvgPathSeg>.IndexOf(ISvgPathSeg) IList<ISvgPathSeg>.Insert(int, ISvgPathSeg) IList<ISvgPathSeg>.RemoveAt(int) IList<ISvgPathSeg>.this[int] ICollection<ISvgPathSeg>.Add(ISvgPathSeg) ICollection<ISvgPathSeg>.Clear() ICollection<ISvgPathSeg>.Contains(ISvgPathSeg) ICollection<ISvgPathSeg>.CopyTo(ISvgPathSeg[], int) ICollection<ISvgPathSeg>.Remove(ISvgPathSeg) ICollection<ISvgPathSeg>.Count ICollection<ISvgPathSeg>.IsReadOnly IEnumerable<ISvgPathSeg>.GetEnumerator() Properties NumberOfItems Methods AppendItem(ISvgPathSeg) GetItem(int) Initialize(ISvgPathSeg) InsertItemBefore(ISvgPathSeg, int) RemoveItem(int) ReplaceItem(ISvgPathSeg, int)"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoAbs.html",
    "title": "Interface ISvgPathSegMovetoAbs | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegMovetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegMovetoAbs interface corresponds to an \"absolute moveto\" (M) path data command. public interface ISvgPathSegMovetoAbs : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPathSegMovetoRel.html",
    "title": "Interface ISvgPathSegMovetoRel | SharpVectors Documentation",
    "keywords": "Interface ISvgPathSegMovetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPathSegMovetoRel interface corresponds to an \"relative moveto\" (m) path data command. public interface ISvgPathSegMovetoRel : ISvgPathSeg Inherited Members ISvgPathSeg.PathSegType ISvgPathSeg.PathType ISvgPathSeg.PathSegTypeAsLetter ISvgPathSeg.AbsXY ISvgPathSeg.StartAngle ISvgPathSeg.EndAngle ISvgPathSeg.PathText ISvgPathSeg.IsCurve ISvgPathSeg.PreviousSeg ISvgPathSeg.NextSeg ISvgPathSeg.Limits Properties X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.PatternBounds.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.PatternBounds.html",
    "title": "Property PatternBounds | SharpVectors Documentation",
    "keywords": "Property PatternBounds Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PatternBounds ISvgRect PatternBounds { get; set; } Property Value ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.PatternContentUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.PatternContentUnits.html",
    "title": "Property PatternContentUnits | SharpVectors Documentation",
    "keywords": "Property PatternContentUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PatternContentUnits ISvgAnimatedEnumeration PatternContentUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.PatternTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.PatternTransform.html",
    "title": "Property PatternTransform | SharpVectors Documentation",
    "keywords": "Property PatternTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PatternTransform ISvgAnimatedTransformList PatternTransform { get; } Property Value ISvgAnimatedTransformList"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.PatternUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.PatternUnits.html",
    "title": "Property PatternUnits | SharpVectors Documentation",
    "keywords": "Property PatternUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PatternUnits ISvgAnimatedEnumeration PatternUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgPatternElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPatternElement.html",
    "title": "Interface ISvgPatternElement | SharpVectors Documentation",
    "keywords": "Interface ISvgPatternElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgPatternElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgFitToViewBox Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio Properties Height PatternBounds PatternContentUnits PatternTransform PatternUnits Width X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgPoint.MatrixTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPoint.MatrixTransform.html",
    "title": "Method MatrixTransform | SharpVectors Documentation",
    "keywords": "Method MatrixTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll MatrixTransform(ISvgMatrix) ISvgPoint MatrixTransform(ISvgMatrix matrix) Parameters matrix ISvgMatrix Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPoint.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPoint.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPoint.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPoint.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgPoint.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPoint.html",
    "title": "Interface ISvgPoint | SharpVectors Documentation",
    "keywords": "Interface ISvgPoint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Many of the SVG DOM interfaces refer to objects of class SvgPoint. An SvgPoint is an (x,y) coordinate pair. public interface ISvgPoint Remarks When used in matrix operations, an SvgPoint is treated as a vector of the form: [x] [y] [1] Properties X Y Methods MatrixTransform(ISvgMatrix)"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.AppendItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.AppendItem.html",
    "title": "Method AppendItem | SharpVectors Documentation",
    "keywords": "Method AppendItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AppendItem(ISvgPoint) ISvgPoint AppendItem(ISvgPoint newItem) Parameters newItem ISvgPoint Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.Clear.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Clear() void Clear()"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.FromString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.FromString.html",
    "title": "Method FromString | SharpVectors Documentation",
    "keywords": "Method FromString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FromString(string, bool) void FromString(string listString, bool clearOnError) Parameters listString string clearOnError bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.GetItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.GetItem.html",
    "title": "Method GetItem | SharpVectors Documentation",
    "keywords": "Method GetItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetItem(uint) ISvgPoint GetItem(uint index) Parameters index uint Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.Initialize.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Initialize(ISvgPoint) ISvgPoint Initialize(ISvgPoint newItem) Parameters newItem ISvgPoint Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.InsertItemBefore.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.InsertItemBefore.html",
    "title": "Method InsertItemBefore | SharpVectors Documentation",
    "keywords": "Method InsertItemBefore Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InsertItemBefore(ISvgPoint, uint) ISvgPoint InsertItemBefore(ISvgPoint newItem, uint index) Parameters newItem ISvgPoint index uint Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.NumberOfItems.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.NumberOfItems.html",
    "title": "Property NumberOfItems | SharpVectors Documentation",
    "keywords": "Property NumberOfItems Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NumberOfItems uint NumberOfItems { get; } Property Value uint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.RemoveItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.RemoveItem.html",
    "title": "Method RemoveItem | SharpVectors Documentation",
    "keywords": "Method RemoveItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RemoveItem(uint) ISvgPoint RemoveItem(uint index) Parameters index uint Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.ReplaceItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.ReplaceItem.html",
    "title": "Method ReplaceItem | SharpVectors Documentation",
    "keywords": "Method ReplaceItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ReplaceItem(ISvgPoint, uint) ISvgPoint ReplaceItem(ISvgPoint newItem, uint index) Parameters newItem ISvgPoint index uint Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointList.html",
    "title": "Interface ISvgPointList | SharpVectors Documentation",
    "keywords": "Interface ISvgPointList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface defines a list of SvgPoint objects. public interface ISvgPointList Properties NumberOfItems Methods AppendItem(ISvgPoint) Clear() FromString(string, bool) GetItem(uint) Initialize(ISvgPoint) InsertItemBefore(ISvgPoint, uint) RemoveItem(uint) ReplaceItem(ISvgPoint, uint)"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointsHandler.EndPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointsHandler.EndPoints.html",
    "title": "Method EndPoints | SharpVectors Documentation",
    "keywords": "Method EndPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndPoints() Invoked when the points attribute ends. void EndPoints() Exceptions FormatException if an error occured while processing the points"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointsHandler.Point.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointsHandler.Point.html",
    "title": "Method Point | SharpVectors Documentation",
    "keywords": "Method Point Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Point(float, float) Invoked when a point has been parsed. void Point(float x, float y) Parameters x float the x coordinate of the point y float the y coordinate of the point Exceptions FormatException if an error occured while processing the points"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointsHandler.StartPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointsHandler.StartPoints.html",
    "title": "Method StartPoints | SharpVectors Documentation",
    "keywords": "Method StartPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartPoints() Invoked when the points attribute starts. void StartPoints() Exceptions FormatException if an error occured while processing the points"
  },
  "api/SharpVectors.Dom.Svg.ISvgPointsHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPointsHandler.html",
    "title": "Interface ISvgPointsHandler | SharpVectors Documentation",
    "keywords": "Interface ISvgPointsHandler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This interface must be implemented and then registred as the handler of a PointsParser instance in order to be notified of parsing events. public interface ISvgPointsHandler Methods EndPoints() Invoked when the points attribute ends. Point(float, float) Invoked when a point has been parsed. StartPoints() Invoked when the points attribute starts."
  },
  "api/SharpVectors.Dom.Svg.ISvgPolygonElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPolygonElement.html",
    "title": "Interface ISvgPolygonElement | SharpVectors Documentation",
    "keywords": "Interface ISvgPolygonElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPolygonElement interface corresponds to the 'polygon' element public interface ISvgPolygonElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPoints, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgAnimatedPoints.Points ISvgAnimatedPoints.AnimatedPoints IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor)"
  },
  "api/SharpVectors.Dom.Svg.ISvgPolylineElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPolylineElement.html",
    "title": "Interface ISvgPolylineElement | SharpVectors Documentation",
    "keywords": "Interface ISvgPolylineElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPolylineElement interface corresponds to the 'polyline' element public interface ISvgPolylineElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPoints, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgAnimatedPoints.Points ISvgAnimatedPoints.AnimatedPoints IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor)"
  },
  "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.Align.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.Align.html",
    "title": "Property Align | SharpVectors Documentation",
    "keywords": "Property Align Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Align The type of the alignment value as specified by one of the constants specified above. SvgPreserveAspectRatioType Align { get; set; } Property Value SvgPreserveAspectRatioType"
  },
  "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.IsDefaultAlign.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.IsDefaultAlign.html",
    "title": "Property IsDefaultAlign | SharpVectors Documentation",
    "keywords": "Property IsDefaultAlign Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsDefaultAlign Gets a value indicating if this a default aspect ratio or it is defined by the target element. bool IsDefaultAlign { get; } Property Value bool This is true if it is the default aspect ratio; otherwise it is false."
  },
  "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.MeetOrSlice.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.MeetOrSlice.html",
    "title": "Property MeetOrSlice | SharpVectors Documentation",
    "keywords": "Property MeetOrSlice Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll MeetOrSlice The type of the meet-or-slice value as specified by one of the constants specified above. SvgMeetOrSlice MeetOrSlice { get; set; } Property Value SvgMeetOrSlice"
  },
  "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgPreserveAspectRatio.html",
    "title": "Interface ISvgPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Interface ISvgPreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgPreserveAspectRatio interface corresponds to the preserveAspectRatio attribute, which is available for some of Svg's elements. public interface ISvgPreserveAspectRatio Properties Align The type of the alignment value as specified by one of the constants specified above. IsDefaultAlign Gets a value indicating if this a default aspect ratio or it is defined by the target element. MeetOrSlice The type of the meet-or-slice value as specified by one of the constants specified above."
  },
  "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.Cx.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.Cx.html",
    "title": "Property Cx | SharpVectors Documentation",
    "keywords": "Property Cx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Cx ISvgAnimatedLength Cx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.Cy.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.Cy.html",
    "title": "Property Cy | SharpVectors Documentation",
    "keywords": "Property Cy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Cy ISvgAnimatedLength Cy { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.Fx.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.Fx.html",
    "title": "Property Fx | SharpVectors Documentation",
    "keywords": "Property Fx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Fx ISvgAnimatedLength Fx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.Fy.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.Fy.html",
    "title": "Property Fy | SharpVectors Documentation",
    "keywords": "Property Fy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Fy ISvgAnimatedLength Fy { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.R.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.R.html",
    "title": "Property R | SharpVectors Documentation",
    "keywords": "Property R Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll R ISvgAnimatedLength R { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRadialGradientElement.html",
    "title": "Interface ISvgRadialGradientElement | SharpVectors Documentation",
    "keywords": "Interface ISvgRadialGradientElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgRadialGradientElement interface corresponds to the 'radialGradient' element. public interface ISvgRadialGradientElement : ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Inherited Members ISvgGradientElement.GradientUnits ISvgGradientElement.GradientTransform ISvgGradientElement.SpreadMethod ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties Cx Cy Fx Fy R"
  },
  "api/SharpVectors.Dom.Svg.ISvgRect.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRect.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height double Height { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgRect.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRect.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width double Width { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgRect.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRect.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgRect.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRect.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgRect.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRect.html",
    "title": "Interface ISvgRect | SharpVectors Documentation",
    "keywords": "Interface ISvgRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative. public interface ISvgRect : IEquatable<ISvgRect> Inherited Members IEquatable<ISvgRect>.Equals(ISvgRect) Properties Height Width X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgRectElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRectElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height Corresponds to attribute height on the given 'rect' element. ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRectElement.Rx.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRectElement.Rx.html",
    "title": "Property Rx | SharpVectors Documentation",
    "keywords": "Property Rx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Rx Corresponds to attribute rx on the given 'rect' element. ISvgAnimatedLength Rx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRectElement.Ry.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRectElement.Ry.html",
    "title": "Property Ry | SharpVectors Documentation",
    "keywords": "Property Ry Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Ry Corresponds to attribute ry on the given 'rect' element. ISvgAnimatedLength Ry { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRectElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRectElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width Corresponds to attribute width on the given 'rect' element. ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRectElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRectElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X Corresponds to attribute x on the given 'rect' element. ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRectElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRectElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y Corresponds to attribute y on the given 'rect' element. ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgRectElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRectElement.html",
    "title": "Interface ISvgRectElement | SharpVectors Documentation",
    "keywords": "Interface ISvgRectElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgRectElement interface corresponds to the 'rect' element. public interface ISvgRectElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Properties Height Corresponds to attribute height on the given 'rect' element. Rx Corresponds to attribute rx on the given 'rect' element. Ry Corresponds to attribute ry on the given 'rect' element. Width Corresponds to attribute width on the given 'rect' element. X Corresponds to attribute x on the given 'rect' element. Y Corresponds to attribute y on the given 'rect' element."
  },
  "api/SharpVectors.Dom.Svg.ISvgRenderer.GetRenderedBounds.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRenderer.GetRenderedBounds.html",
    "title": "Method GetRenderedBounds | SharpVectors Documentation",
    "keywords": "Method GetRenderedBounds Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetRenderedBounds(ISvgElement, float) ISvgRect GetRenderedBounds(ISvgElement element, float margin) Parameters element ISvgElement margin float Returns ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgRenderer.InvalidRect.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRenderer.InvalidRect.html",
    "title": "Property InvalidRect | SharpVectors Documentation",
    "keywords": "Property InvalidRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InvalidRect Controls the rendering of the document. SvgRectF InvalidRect { get; set; } Property Value SvgRectF"
  },
  "api/SharpVectors.Dom.Svg.ISvgRenderer.InvalidateRect.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRenderer.InvalidateRect.html",
    "title": "Method InvalidateRect | SharpVectors Documentation",
    "keywords": "Method InvalidateRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InvalidateRect(SvgRectF) Allows you to establish or add to the existing invalidation rectangle void InvalidateRect(SvgRectF rect) Parameters rect SvgRectF"
  },
  "api/SharpVectors.Dom.Svg.ISvgRenderer.OnRender.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRenderer.OnRender.html",
    "title": "Property OnRender | SharpVectors Documentation",
    "keywords": "Property OnRender Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll OnRender Event Delegate to report when the SVG renderer does it's work. RenderEvent OnRender { get; set; } Property Value RenderEvent"
  },
  "api/SharpVectors.Dom.Svg.ISvgRenderer.Render.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRenderer.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Render(ISvgElement) Renders an SvgElement object onto a bitmap and returns that bitmap. void Render(ISvgElement node) Parameters node ISvgElement The SvgElement object to be rendered. Render(ISvgDocument) Renders an SvgDocument object onto a bitmap and returns that bitmap. void Render(ISvgDocument node) Parameters node ISvgDocument The SvgDocument object to be rendered."
  },
  "api/SharpVectors.Dom.Svg.ISvgRenderer.Window.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRenderer.Window.html",
    "title": "Property Window | SharpVectors Documentation",
    "keywords": "Property Window Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Window The window that is being rendered to. ISvgWindow Window { get; set; } Property Value ISvgWindow"
  },
  "api/SharpVectors.Dom.Svg.ISvgRenderer.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgRenderer.html",
    "title": "Interface ISvgRenderer | SharpVectors Documentation",
    "keywords": "Interface ISvgRenderer Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Defines the interface required by a renderer to render the SVG DOM. public interface ISvgRenderer Remarks The ISvgRenderer is used to render a ISvgElement object onto a bitmap. Properties InvalidRect Controls the rendering of the document. OnRender Event Delegate to report when the SVG renderer does it's work. Window The window that is being rendered to. Methods GetRenderedBounds(ISvgElement, float) InvalidateRect(SvgRectF) Allows you to establish or add to the existing invalidation rectangle Render(ISvgDocument) Renders an SvgDocument object onto a bitmap and returns that bitmap. Render(ISvgElement) Renders an SvgElement object onto a bitmap and returns that bitmap."
  },
  "api/SharpVectors.Dom.Svg.ISvgScriptElement.CrossOrigin.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgScriptElement.CrossOrigin.html",
    "title": "Property CrossOrigin | SharpVectors Documentation",
    "keywords": "Property CrossOrigin Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CrossOrigin Gets or sets a value corresponding to the attribute 'crossorigin' on the given 'script' element. string CrossOrigin { get; set; } Property Value string An enumeration specifying the CORS (Cross-Origin Resource Sharing) setting attributes. Possible values are anonymous, use-credentials and empty string. Remarks This is introduced in SVG 2. See Also https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes"
  },
  "api/SharpVectors.Dom.Svg.ISvgScriptElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgScriptElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Type Gets or sets a value corresponding to the attribute 'type' on the given 'script' element. string Type { get; set; } Property Value string A string specifying the script type."
  },
  "api/SharpVectors.Dom.Svg.ISvgScriptElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgScriptElement.html",
    "title": "Interface ISvgScriptElement | SharpVectors Documentation",
    "keywords": "Interface ISvgScriptElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgScriptElement interface corresponds to the 'script' element. public interface ISvgScriptElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgExternalResourcesRequired.ExternalResourcesRequired Remarks A 'script' element is equivalent to the 'script' element in HTML and thus is the place for scripts. Any functions defined within any 'script' element have a 'global' scope across the entire current document. Properties CrossOrigin Gets or sets a value corresponding to the attribute 'crossorigin' on the given 'script' element. Type Gets or sets a value corresponding to the attribute 'type' on the given 'script' element."
  },
  "api/SharpVectors.Dom.Svg.ISvgSolidColorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSolidColorElement.html",
    "title": "Interface ISvgSolidColorElement | SharpVectors Documentation",
    "keywords": "Interface ISvgSolidColorElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll An SVG object represents an 'solidcolor' element in the DOM. public interface ISvgSolidColorElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgStopElement.Offset.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStopElement.Offset.html",
    "title": "Property Offset | SharpVectors Documentation",
    "keywords": "Property Offset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Offset ISvgAnimatedNumber Offset { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.ISvgStopElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStopElement.html",
    "title": "Interface ISvgStopElement | SharpVectors Documentation",
    "keywords": "Interface ISvgStopElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgStopElement interface corresponds to the 'stop' element. public interface ISvgStopElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) Properties Offset"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.AppendItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.AppendItem.html",
    "title": "Method AppendItem | SharpVectors Documentation",
    "keywords": "Method AppendItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AppendItem(string) string AppendItem(string newItem) Parameters newItem string Returns string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.Clear.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Clear() void Clear()"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.FromString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.FromString.html",
    "title": "Method FromString | SharpVectors Documentation",
    "keywords": "Method FromString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll FromString(string) void FromString(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.GetItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.GetItem.html",
    "title": "Method GetItem | SharpVectors Documentation",
    "keywords": "Method GetItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetItem(uint) string GetItem(uint index) Parameters index uint Returns string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.Initialize.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Initialize(string) string Initialize(string newItem) Parameters newItem string Returns string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.InsertItemBefore.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.InsertItemBefore.html",
    "title": "Method InsertItemBefore | SharpVectors Documentation",
    "keywords": "Method InsertItemBefore Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InsertItemBefore(string, uint) string InsertItemBefore(string newItem, uint index) Parameters newItem string index uint Returns string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.NumberOfItems.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.NumberOfItems.html",
    "title": "Property NumberOfItems | SharpVectors Documentation",
    "keywords": "Property NumberOfItems Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NumberOfItems uint NumberOfItems { get; } Property Value uint"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.RemoveItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.RemoveItem.html",
    "title": "Method RemoveItem | SharpVectors Documentation",
    "keywords": "Method RemoveItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RemoveItem(uint) string RemoveItem(uint index) Parameters index uint Returns string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.ReplaceItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.ReplaceItem.html",
    "title": "Method ReplaceItem | SharpVectors Documentation",
    "keywords": "Method ReplaceItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ReplaceItem(string, uint) string ReplaceItem(string newItem, uint index) Parameters newItem string index uint Returns string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStringList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStringList.html",
    "title": "Interface ISvgStringList | SharpVectors Documentation",
    "keywords": "Interface ISvgStringList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface defines a list of string objects. public interface ISvgStringList : IEnumerable<string>, IEnumerable Inherited Members IEnumerable<string>.GetEnumerator() Properties NumberOfItems Methods AppendItem(string) Clear() FromString(string) GetItem(uint) Initialize(string) InsertItemBefore(string, uint) RemoveItem(uint) ReplaceItem(string, uint)"
  },
  "api/SharpVectors.Dom.Svg.ISvgStylable.ClassName.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStylable.ClassName.html",
    "title": "Property ClassName | SharpVectors Documentation",
    "keywords": "Property ClassName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ClassName ISvgAnimatedString ClassName { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgStylable.GetPresentationAttribute.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStylable.GetPresentationAttribute.html",
    "title": "Method GetPresentationAttribute | SharpVectors Documentation",
    "keywords": "Method GetPresentationAttribute Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetPresentationAttribute(string) ICssValue GetPresentationAttribute(string name) Parameters name string Returns ICssValue"
  },
  "api/SharpVectors.Dom.Svg.ISvgStylable.Style.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStylable.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Style ICssStyleDeclaration Style { get; } Property Value ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Svg.ISvgStylable.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStylable.html",
    "title": "Interface ISvgStylable | SharpVectors Documentation",
    "keywords": "Interface ISvgStylable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgStylable Properties ClassName Style Methods GetPresentationAttribute(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgStyleElement.Media.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStyleElement.Media.html",
    "title": "Property Media | SharpVectors Documentation",
    "keywords": "Property Media Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Media string Media { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStyleElement.Title.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStyleElement.Title.html",
    "title": "Property Title | SharpVectors Documentation",
    "keywords": "Property Title Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Title string Title { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStyleElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStyleElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Type string Type { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgStyleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgStyleElement.html",
    "title": "Interface ISvgStyleElement | SharpVectors Documentation",
    "keywords": "Interface ISvgStyleElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgStyleElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace Properties Media Title Type"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.AnimationsPaused.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.AnimationsPaused.html",
    "title": "Method AnimationsPaused | SharpVectors Documentation",
    "keywords": "Method AnimationsPaused Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimationsPaused() Returns true if this SVG document fragment is in a paused state. bool AnimationsPaused() Returns bool Boolean indicating whether this SVG document fragment is in a paused state."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CheckEnclosure.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CheckEnclosure.html",
    "title": "Method CheckEnclosure | SharpVectors Documentation",
    "keywords": "Method CheckEnclosure Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CheckEnclosure(ISvgElement, ISvgRect) Returns true if the rendered content of the given element is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. bool CheckEnclosure(ISvgElement element, ISvgRect rect) Parameters element ISvgElement The element on which to perform the given test. rect ISvgRect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. Returns bool True or false, depending on whether the given element is enclosed by the supplied rectangle."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CheckIntersection.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CheckIntersection.html",
    "title": "Method CheckIntersection | SharpVectors Documentation",
    "keywords": "Method CheckIntersection Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CheckIntersection(ISvgElement, ISvgRect) Returns true if the rendered content of the given element intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. bool CheckIntersection(ISvgElement element, ISvgRect rect) Parameters element ISvgElement The element on which to perform the given test. rect ISvgRect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. Returns bool True or false, depending on whether the given element intersects the supplied rectangle."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.ContentScriptType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.ContentScriptType.html",
    "title": "Property ContentScriptType | SharpVectors Documentation",
    "keywords": "Property ContentScriptType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ContentScriptType Corresponds to attribute contentScriptType on the given 'svg' element. string ContentScriptType { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.ContentStyleType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.ContentStyleType.html",
    "title": "Property ContentStyleType | SharpVectors Documentation",
    "keywords": "Property ContentStyleType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ContentStyleType Corresponds to attribute contentStyleType on the given 'svg' element. string ContentStyleType { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgAngle.html",
    "title": "Method CreateSvgAngle | SharpVectors Documentation",
    "keywords": "Method CreateSvgAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgAngle() Creates an SVGAngle object outside of any document trees. The object is initialized to the value 0 degrees (unitless). ISvgAngle CreateSvgAngle() Returns ISvgAngle An SVGAngle object."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgLength.html",
    "title": "Method CreateSvgLength | SharpVectors Documentation",
    "keywords": "Method CreateSvgLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgLength() Creates an SVGLength object outside of any document trees. The object is initialized to the value of 0 user units. ISvgLength CreateSvgLength() Returns ISvgLength An SVGLength object."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgMatrix.html",
    "title": "Method CreateSvgMatrix | SharpVectors Documentation",
    "keywords": "Method CreateSvgMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgMatrix() Creates an SVGMatrix object outside of any document trees. The object is initialized to the identity matrix. ISvgMatrix CreateSvgMatrix() Returns ISvgMatrix An SVGMatrix object."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgNumber.html",
    "title": "Method CreateSvgNumber | SharpVectors Documentation",
    "keywords": "Method CreateSvgNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgNumber() Creates an SVGNumber object outside of any document trees. The object is initialized to a value of zero. ISvgNumber CreateSvgNumber() Returns ISvgNumber An SVGNumber object."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgPoint.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgPoint.html",
    "title": "Method CreateSvgPoint | SharpVectors Documentation",
    "keywords": "Method CreateSvgPoint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgPoint() Creates an SVGPoint object outside of any document trees. The object is initialized to the point (0,0) in the user coordinate system. ISvgPoint CreateSvgPoint() Returns ISvgPoint An SVGPoint object."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgRect.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgRect.html",
    "title": "Method CreateSvgRect | SharpVectors Documentation",
    "keywords": "Method CreateSvgRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgRect() Creates an SVGRect object outside of any document trees. The object is initialized such that all values are set to 0 user units. ISvgRect CreateSvgRect() Returns ISvgRect An SVGRect object."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgTransform.html",
    "title": "Method CreateSvgTransform | SharpVectors Documentation",
    "keywords": "Method CreateSvgTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgTransform() Creates an SVGTransform object outside of any document trees. The object is initialized to an identity matrix transform (SVG_TRANSFORM_MATRIX). ISvgTransform CreateSvgTransform() Returns ISvgTransform An SVGTransform object."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgTransformFromMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CreateSvgTransformFromMatrix.html",
    "title": "Method CreateSvgTransformFromMatrix | SharpVectors Documentation",
    "keywords": "Method CreateSvgTransformFromMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgTransformFromMatrix(ISvgMatrix) Creates an SVGTransform object outside of any document trees. The object is initialized to the given matrix transform (i.e., SVG_TRANSFORM_MATRIX). ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix matrix) Parameters matrix ISvgMatrix The transform matrix. Returns ISvgTransform An SVGTransform object."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CurrentScale.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CurrentScale.html",
    "title": "Property CurrentScale | SharpVectors Documentation",
    "keywords": "Property CurrentScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CurrentScale This attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations, as described under Magnification and panning. float CurrentScale { get; set; } Property Value float Remarks DOM attributes currentScale and currentTranslate are equivalent to the 2x3 matrix [a b c d e f] = [currentScale 0 0 currentScale currentTranslate.x currentTranslate.y]. If \"magnification\" is enabled (i.e., zoomAndPan=\"magnify\"), then the effect is as if an extra transformation were placed at the outermost level on the SVG document fragment (i.e., outside the outermost 'svg' element)."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CurrentTime.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CurrentTime.html",
    "title": "Property CurrentTime | SharpVectors Documentation",
    "keywords": "Property CurrentTime Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CurrentTime The current time in seconds relative to the start time for the current SVG document fragment. float CurrentTime { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CurrentTranslate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CurrentTranslate.html",
    "title": "Property CurrentTranslate | SharpVectors Documentation",
    "keywords": "Property CurrentTranslate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CurrentTranslate The corresponding translation factor that takes into account user \"magnification\". ISvgPoint CurrentTranslate { get; } Property Value ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.CurrentView.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.CurrentView.html",
    "title": "Property CurrentView | SharpVectors Documentation",
    "keywords": "Property CurrentView Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CurrentView The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. ISvgViewSpec CurrentView { get; } Property Value ISvgViewSpec Remarks The meaning depends on the situation: If the initial view was a \"standard\" view, then: the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly the values for transform and viewTarget within currentView will be null If the initial view was a link into a 'view' element, then: the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will correspond to the corresponding attributes for the given 'view' element the values for transform and viewTarget within currentView will be null If the initial view was a link into another element (i.e., other than a 'view'), then: the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly for the closest ancestor 'svg' element the values for transform within currentView will be null the viewTarget within currentView will represent the target of the link If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: the values for viewBox, preserveAspectRatio, zoomAndPan, transform and viewTarget within currentView will correspond to the values from the SVG view specification fragment identifier The object itself and its contents are both readonly."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.DeselectAll.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.DeselectAll.html",
    "title": "Method DeselectAll | SharpVectors Documentation",
    "keywords": "Method DeselectAll Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll DeselectAll() Unselects any selected objects, including any selections of text strings and type-in bars. void DeselectAll()"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.ForceRedraw.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.ForceRedraw.html",
    "title": "Method ForceRedraw | SharpVectors Documentation",
    "keywords": "Method ForceRedraw Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ForceRedraw() In rendering environments supporting interactivity, forces the user agent to immediately redraw all regions of the viewport that require updating. void ForceRedraw()"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.GetElementById.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.GetElementById.html",
    "title": "Method GetElementById | SharpVectors Documentation",
    "keywords": "Method GetElementById Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetElementById(string) Searches this SVG document fragment (i.e., the search is restricted to a subset of the document tree) for an Element whose id is given by elementId. XmlElement GetElementById(string elementId) Parameters elementId string The unique id value for an element. Returns XmlElement The matching element. Remarks If an Element is found, that Element is returned. If no such element exists, returns null. Behavior is not defined if more than one element has this id."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.GetEnclosureList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.GetEnclosureList.html",
    "title": "Method GetEnclosureList | SharpVectors Documentation",
    "keywords": "Method GetEnclosureList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetEnclosureList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. XmlNodeList GetEnclosureList(ISvgRect rect, ISvgElement referenceElement) Parameters rect ISvgRect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. referenceElement ISvgElement If not null, then only return elements whose drawing order has them below the given reference element. Returns XmlNodeList A list of Elements whose content is enclosed by the supplied rectangle."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.GetIntersectionList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.GetIntersectionList.html",
    "title": "Method GetIntersectionList | SharpVectors Documentation",
    "keywords": "Method GetIntersectionList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetIntersectionList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. XmlNodeList GetIntersectionList(ISvgRect rect, ISvgElement referenceElement) Parameters rect ISvgRect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. referenceElement ISvgElement If not null, then only return elements whose drawing order has them below the given reference element. Returns XmlNodeList A list of Elements whose content intersects the supplied rectangle."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height Corresponds to attribute height on the given 'svg' element. ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.PauseAnimations.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.PauseAnimations.html",
    "title": "Method PauseAnimations | SharpVectors Documentation",
    "keywords": "Method PauseAnimations Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PauseAnimations() Suspends (i.e., pauses) all currently running animations that are defined within the SVG document fragment corresponding to this 'svg' element, causing the animation clock corresponding to this document fragment to stand still until it is unpaused. void PauseAnimations()"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.PixelUnitToMillimeterX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.PixelUnitToMillimeterX.html",
    "title": "Property PixelUnitToMillimeterX | SharpVectors Documentation",
    "keywords": "Property PixelUnitToMillimeterX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PixelUnitToMillimeterX Size of a pixel unit (as defined by CSS2) along the x-axis of the viewport, which represents a unit somewhere in the range of 70dpi to 120dpi, and, on systems that support this, might actually match the characteristics of the target medium. float PixelUnitToMillimeterX { get; } Property Value float Remarks On systems where it is impossible to know the size of a pixel, a suitable default pixel size is provided."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.PixelUnitToMillimeterY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.PixelUnitToMillimeterY.html",
    "title": "Property PixelUnitToMillimeterY | SharpVectors Documentation",
    "keywords": "Property PixelUnitToMillimeterY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PixelUnitToMillimeterY Corresponding size of a pixel unit along the y-axis of the viewport. float PixelUnitToMillimeterY { get; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.ScreenPixelToMillimeterX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.ScreenPixelToMillimeterX.html",
    "title": "Property ScreenPixelToMillimeterX | SharpVectors Documentation",
    "keywords": "Property ScreenPixelToMillimeterX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ScreenPixelToMillimeterX User interface (UI) events in DOM Level 2 indicate the screen positions at which the given UI event occurred. When the user agent actually knows the physical size of a \"screen unit\", this attribute will express that information; otherwise, user agents will provide a suitable default value such as .28mm. float ScreenPixelToMillimeterX { get; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.ScreenPixelToMillimeterY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.ScreenPixelToMillimeterY.html",
    "title": "Property ScreenPixelToMillimeterY | SharpVectors Documentation",
    "keywords": "Property ScreenPixelToMillimeterY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ScreenPixelToMillimeterY Corresponding size of a screen pixel along the y-axis of the viewport. float ScreenPixelToMillimeterY { get; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.SuspendRedraw.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.SuspendRedraw.html",
    "title": "Method SuspendRedraw | SharpVectors Documentation",
    "keywords": "Method SuspendRedraw Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SuspendRedraw(int) Takes a time-out value which indicates that redraw shall not occur until certain conditions are met. int SuspendRedraw(int max_wait_milliseconds) Parameters max_wait_milliseconds int The amount of time in milliseconds to hold off before redrawing the device. Values greater than 60 seconds will be truncated down to 60 seconds. Returns int A number which acts as a unique identifier for the given suspendRedraw() call. This value must be passed as the parameter to the corresponding unsuspendRedraw() method call. Remarks Takes a time-out value which indicates that redraw shall not occur until: (a) the corresponding unsuspendRedraw( suspend_handle_id) call has been made, (b) an unsuspendRedrawAll() call has been made, or (c) its timer has timed out. In environments that do not support interactivity (e.g., print media), then redraw shall not be suspended. suspend_handle_id = suspendRedraw( max_wait_milliseconds) and unsuspendRedraw(suspend_handle_id) must be packaged as balanced pairs. When you want to suspend redraw actions as a collection of SVG DOM changes occur, then precede the changes to the SVG DOM with a method call similar to suspend_handle_id = suspendRedraw( max_wait_milliseconds) and follow the changes with a method call similar to unsuspendRedraw(suspend_handle_id). Note that multiple suspendRedraw calls can be used at once and that each such method call is treated independently of the other suspendRedraw method calls."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.UnpauseAnimations.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.UnpauseAnimations.html",
    "title": "Method UnpauseAnimations | SharpVectors Documentation",
    "keywords": "Method UnpauseAnimations Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll UnpauseAnimations() Unsuspends (i.e., unpauses) currently running animations that are defined within the SVG document fragment, causing the animation clock to continue from the time at which it was suspended. void UnpauseAnimations()"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.UnsuspendRedraw.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.UnsuspendRedraw.html",
    "title": "Method UnsuspendRedraw | SharpVectors Documentation",
    "keywords": "Method UnsuspendRedraw Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll UnsuspendRedraw(int) Cancels a specified suspendRedraw() by providing a unique suspend_handle_id. void UnsuspendRedraw(int suspend_handle_id) Parameters suspend_handle_id int A number which acts as a unique identifier for the desired suspendRedraw() call. The number supplied must be a value returned from a previous call to suspendRedraw()"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.UnsuspendRedrawAll.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.UnsuspendRedrawAll.html",
    "title": "Method UnsuspendRedrawAll | SharpVectors Documentation",
    "keywords": "Method UnsuspendRedrawAll Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll UnsuspendRedrawAll() Cancels all currently active suspendRedraw() method calls. been cancelled. void UnsuspendRedrawAll() Remarks This method is most useful at the very end of a set of SVG DOM calls to ensure that all pending suspendRedraw() method calls have been cancelled."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.UseCurrentView.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.UseCurrentView.html",
    "title": "Property UseCurrentView | SharpVectors Documentation",
    "keywords": "Property UseCurrentView Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll UseCurrentView The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the \"standard\" view (i.e., based on attributes on the 'svg' element such as fitBoxToViewport) or to a \"custom\" view (i.e., a hyperlink into a particular 'view' or other element - see Linking into SVG content: URI fragments and SVG views). If the initial view is the \"standard\" view, then this attribute is false. If the initial view is a \"custom\" view, then this attribute is true. bool UseCurrentView { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.Viewport.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.Viewport.html",
    "title": "Property Viewport | SharpVectors Documentation",
    "keywords": "Property Viewport Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Viewport The position and size of the viewport (implicit or explicit) that corresponds to this 'svg' element. ISvgRect Viewport { get; } Property Value ISvgRect Remarks When the user agent is actually rendering the content, then the position and size values represent the actual values when rendering. The position and size values are unitless values in the coordinate system of the parent element. If no parent element exists (i.e., 'svg' element represents the root of the document tree), if this SVG document is embedded as part of another document (e.g., via the HTML 'object' element), then the position and size are unitless values in the coordinate system of the parent document. (If the parent uses CSS or XSL layout, then unitless values represent pixel units for the current CSS or XSL viewport, as described in the CSS2 specification.) If the parent element does not have a coordinate system, then the user agent should provide reasonable default values for this attribute. The object itself and its contents are both readonly."
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width Corresponds to attribute width on the given 'svg' element. ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X Corresponds to attribute x on the given 'svg' element. ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y Corresponds to attribute y on the given 'svg' element. ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgSvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSvgElement.html",
    "title": "Interface ISvgSvgElement | SharpVectors Documentation",
    "keywords": "Interface ISvgSvgElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll A key interface definition is the ISvgSvgElement interface, which is the interface that corresponds to the 'svg' element. public interface ISvgSvgElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgLocatable, ISvgFitToViewBox, ISvgZoomAndPan, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio ISvgZoomAndPan.ZoomAndPan IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Remarks This interface contains various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices. ISvgSvgElement extends ViewCSS and DocumentCSS to provide access to the computed values of properties and the override style sheet as described in DOM2. Properties ContentScriptType Corresponds to attribute contentScriptType on the given 'svg' element. ContentStyleType Corresponds to attribute contentStyleType on the given 'svg' element. CurrentScale This attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations, as described under Magnification and panning. CurrentTime The current time in seconds relative to the start time for the current SVG document fragment. CurrentTranslate The corresponding translation factor that takes into account user \"magnification\". CurrentView The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. Height Corresponds to attribute height on the given 'svg' element. PixelUnitToMillimeterX Size of a pixel unit (as defined by CSS2) along the x-axis of the viewport, which represents a unit somewhere in the range of 70dpi to 120dpi, and, on systems that support this, might actually match the characteristics of the target medium. PixelUnitToMillimeterY Corresponding size of a pixel unit along the y-axis of the viewport. ScreenPixelToMillimeterX User interface (UI) events in DOM Level 2 indicate the screen positions at which the given UI event occurred. When the user agent actually knows the physical size of a \"screen unit\", this attribute will express that information; otherwise, user agents will provide a suitable default value such as .28mm. ScreenPixelToMillimeterY Corresponding size of a screen pixel along the y-axis of the viewport. UseCurrentView The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the \"standard\" view (i.e., based on attributes on the 'svg' element such as fitBoxToViewport) or to a \"custom\" view (i.e., a hyperlink into a particular 'view' or other element - see Linking into SVG content: URI fragments and SVG views). If the initial view is the \"standard\" view, then this attribute is false. If the initial view is a \"custom\" view, then this attribute is true. Viewport The position and size of the viewport (implicit or explicit) that corresponds to this 'svg' element. Width Corresponds to attribute width on the given 'svg' element. X Corresponds to attribute x on the given 'svg' element. Y Corresponds to attribute y on the given 'svg' element. Methods AnimationsPaused() Returns true if this SVG document fragment is in a paused state. CheckEnclosure(ISvgElement, ISvgRect) Returns true if the rendered content of the given element is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. CheckIntersection(ISvgElement, ISvgRect) Returns true if the rendered content of the given element intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. CreateSvgAngle() Creates an SVGAngle object outside of any document trees. The object is initialized to the value 0 degrees (unitless). CreateSvgLength() Creates an SVGLength object outside of any document trees. The object is initialized to the value of 0 user units. CreateSvgMatrix() Creates an SVGMatrix object outside of any document trees. The object is initialized to the identity matrix. CreateSvgNumber() Creates an SVGNumber object outside of any document trees. The object is initialized to a value of zero. CreateSvgPoint() Creates an SVGPoint object outside of any document trees. The object is initialized to the point (0,0) in the user coordinate system. CreateSvgRect() Creates an SVGRect object outside of any document trees. The object is initialized such that all values are set to 0 user units. CreateSvgTransform() Creates an SVGTransform object outside of any document trees. The object is initialized to an identity matrix transform (SVG_TRANSFORM_MATRIX). CreateSvgTransformFromMatrix(ISvgMatrix) Creates an SVGTransform object outside of any document trees. The object is initialized to the given matrix transform (i.e., SVG_TRANSFORM_MATRIX). DeselectAll() Unselects any selected objects, including any selections of text strings and type-in bars. ForceRedraw() In rendering environments supporting interactivity, forces the user agent to immediately redraw all regions of the viewport that require updating. GetElementById(string) Searches this SVG document fragment (i.e., the search is restricted to a subset of the document tree) for an Element whose id is given by elementId. GetEnclosureList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. GetIntersectionList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. PauseAnimations() Suspends (i.e., pauses) all currently running animations that are defined within the SVG document fragment corresponding to this 'svg' element, causing the animation clock corresponding to this document fragment to stand still until it is unpaused. SuspendRedraw(int) Takes a time-out value which indicates that redraw shall not occur until certain conditions are met. UnpauseAnimations() Unsuspends (i.e., unpauses) currently running animations that are defined within the SVG document fragment, causing the animation clock to continue from the time at which it was suspended. UnsuspendRedraw(int) Cancels a specified suspendRedraw() by providing a unique suspend_handle_id. UnsuspendRedrawAll() Cancels all currently active suspendRedraw() method calls. been cancelled."
  },
  "api/SharpVectors.Dom.Svg.ISvgSwitchElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSwitchElement.html",
    "title": "Interface ISvgSwitchElement | SharpVectors Documentation",
    "keywords": "Interface ISvgSwitchElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgSwitchElement interface corresponds to the 'switch' element. public interface ISvgSwitchElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor)"
  },
  "api/SharpVectors.Dom.Svg.ISvgSymbolElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgSymbolElement.html",
    "title": "Interface ISvgSymbolElement | SharpVectors Documentation",
    "keywords": "Interface ISvgSymbolElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgSymbolElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable, ISvgExternalResourcesRequired, ISvgFitToViewBox, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor)"
  },
  "api/SharpVectors.Dom.Svg.ISvgTRefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTRefElement.html",
    "title": "Interface ISvgTRefElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTRefElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgTRefElement interface corresponds to the 'tref' element. public interface ISvgTRefElement : ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgUriReference Inherited Members ISvgTextPositioningElement.X ISvgTextPositioningElement.Y ISvgTextPositioningElement.Dx ISvgTextPositioningElement.Dy ISvgTextPositioningElement.Rotate ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(long, long) ISvgTextContentElement.GetStartPositionOfChar(long) ISvgTextContentElement.GetEndPositionOfChar(long) ISvgTextContentElement.GetExtentOfChar(long) ISvgTextContentElement.GetRotationOfChar(long) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(long, long) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgUriReference.Href"
  },
  "api/SharpVectors.Dom.Svg.ISvgTSpanElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTSpanElement.html",
    "title": "Interface ISvgTSpanElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTSpanElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgTSpanElement interface corresponds to the 'tspan' element. public interface ISvgTSpanElement : ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgTextPositioningElement.X ISvgTextPositioningElement.Y ISvgTextPositioningElement.Dx ISvgTextPositioningElement.Dy ISvgTextPositioningElement.Rotate ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(long, long) ISvgTextContentElement.GetStartPositionOfChar(long) ISvgTextContentElement.GetEndPositionOfChar(long) ISvgTextContentElement.GetExtentOfChar(long) ISvgTextContentElement.GetRotationOfChar(long) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(long, long) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor)"
  },
  "api/SharpVectors.Dom.Svg.ISvgTests.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTests.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll HasExtension(string) bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.ISvgTests.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTests.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RequiredExtensions ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTests.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTests.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RequiredFeatures ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTests.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTests.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SystemLanguage ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTests.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTests.html",
    "title": "Interface ISvgTests | SharpVectors Documentation",
    "keywords": "Interface ISvgTests Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Interface SvgTests defines an interface which applies to all elements which have attributes requiredFeatures, requiredExtensions and systemLanguage. public interface ISvgTests Properties RequiredExtensions RequiredFeatures SystemLanguage Methods HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetCharNumAtPosition.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetCharNumAtPosition.html",
    "title": "Method GetCharNumAtPosition | SharpVectors Documentation",
    "keywords": "Method GetCharNumAtPosition Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetCharNumAtPosition(ISvgPoint) long GetCharNumAtPosition(ISvgPoint point) Parameters point ISvgPoint Returns long"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetComputedTextLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetComputedTextLength.html",
    "title": "Method GetComputedTextLength | SharpVectors Documentation",
    "keywords": "Method GetComputedTextLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetComputedTextLength() float GetComputedTextLength() Returns float"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetEndPositionOfChar.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetEndPositionOfChar.html",
    "title": "Method GetEndPositionOfChar | SharpVectors Documentation",
    "keywords": "Method GetEndPositionOfChar Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetEndPositionOfChar(long) ISvgPoint GetEndPositionOfChar(long charnum) Parameters charnum long Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetExtentOfChar.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetExtentOfChar.html",
    "title": "Method GetExtentOfChar | SharpVectors Documentation",
    "keywords": "Method GetExtentOfChar Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetExtentOfChar(long) ISvgRect GetExtentOfChar(long charnum) Parameters charnum long Returns ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetNumberOfChars.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetNumberOfChars.html",
    "title": "Method GetNumberOfChars | SharpVectors Documentation",
    "keywords": "Method GetNumberOfChars Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetNumberOfChars() long GetNumberOfChars() Returns long"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetRotationOfChar.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetRotationOfChar.html",
    "title": "Method GetRotationOfChar | SharpVectors Documentation",
    "keywords": "Method GetRotationOfChar Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetRotationOfChar(long) float GetRotationOfChar(long charnum) Parameters charnum long Returns float"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetStartPositionOfChar.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetStartPositionOfChar.html",
    "title": "Method GetStartPositionOfChar | SharpVectors Documentation",
    "keywords": "Method GetStartPositionOfChar Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetStartPositionOfChar(long) ISvgPoint GetStartPositionOfChar(long charnum) Parameters charnum long Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetSubStringLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.GetSubStringLength.html",
    "title": "Method GetSubStringLength | SharpVectors Documentation",
    "keywords": "Method GetSubStringLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetSubStringLength(long, long) float GetSubStringLength(long charnum, long nchars) Parameters charnum long nchars long Returns float"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.LengthAdjust.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.LengthAdjust.html",
    "title": "Property LengthAdjust | SharpVectors Documentation",
    "keywords": "Property LengthAdjust Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll LengthAdjust ISvgAnimatedEnumeration LengthAdjust { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.SelectSubString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.SelectSubString.html",
    "title": "Method SelectSubString | SharpVectors Documentation",
    "keywords": "Method SelectSubString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SelectSubString(long, long) void SelectSubString(long charnum, long nchars) Parameters charnum long nchars long"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.TextLength.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.TextLength.html",
    "title": "Property TextLength | SharpVectors Documentation",
    "keywords": "Property TextLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll TextLength ISvgAnimatedLength TextLength { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextContentElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextContentElement.html",
    "title": "Interface ISvgTextContentElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTextContentElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgTextContentElement interface is inherited by various text-related interfaces, such as ISvgTextElement, ISvgTSpanElement, ISvgTRefElement, ISvgAltGlyphElement and ISvgTextPathElement. public interface ISvgTextContentElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) Properties LengthAdjust TextLength Methods GetCharNumAtPosition(ISvgPoint) GetComputedTextLength() GetEndPositionOfChar(long) GetExtentOfChar(long) GetNumberOfChars() GetRotationOfChar(long) GetStartPositionOfChar(long) GetSubStringLength(long, long) SelectSubString(long, long)"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextElement.html",
    "title": "Interface ISvgTextElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTextElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgTextElement interface corresponds to the 'text' element. public interface ISvgTextElement : ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) ISvgTextPositioningElement.X ISvgTextPositioningElement.Y ISvgTextPositioningElement.Dx ISvgTextPositioningElement.Dy ISvgTextPositioningElement.Rotate ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(long, long) ISvgTextContentElement.GetStartPositionOfChar(long) ISvgTextContentElement.GetEndPositionOfChar(long) ISvgTextContentElement.GetExtentOfChar(long) ISvgTextContentElement.GetRotationOfChar(long) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(long, long) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor)"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPathElement.Method.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPathElement.Method.html",
    "title": "Property Method | SharpVectors Documentation",
    "keywords": "Property Method Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Method ISvgAnimatedEnumeration Method { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPathElement.Spacing.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPathElement.Spacing.html",
    "title": "Property Spacing | SharpVectors Documentation",
    "keywords": "Property Spacing Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Spacing ISvgAnimatedEnumeration Spacing { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPathElement.StartOffset.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPathElement.StartOffset.html",
    "title": "Property StartOffset | SharpVectors Documentation",
    "keywords": "Property StartOffset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll StartOffset ISvgAnimatedLength StartOffset { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPathElement.html",
    "title": "Interface ISvgTextPathElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTextPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgTextPathElement interface corresponds to the 'textPath' element. public interface ISvgTextPathElement : ISvgUriReference, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgUriReference.Href ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(long, long) ISvgTextContentElement.GetStartPositionOfChar(long) ISvgTextContentElement.GetEndPositionOfChar(long) ISvgTextContentElement.GetExtentOfChar(long) ISvgTextContentElement.GetRotationOfChar(long) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(long, long) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Properties Method Spacing StartOffset"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.Dx.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.Dx.html",
    "title": "Property Dx | SharpVectors Documentation",
    "keywords": "Property Dx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Dx ISvgAnimatedLengthList Dx { get; } Property Value ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.Dy.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.Dy.html",
    "title": "Property Dy | SharpVectors Documentation",
    "keywords": "Property Dy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Dy ISvgAnimatedLengthList Dy { get; } Property Value ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.Rotate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.Rotate.html",
    "title": "Property Rotate | SharpVectors Documentation",
    "keywords": "Property Rotate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Rotate ISvgAnimatedNumberList Rotate { get; } Property Value ISvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedLengthList X { get; } Property Value ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedLengthList Y { get; } Property Value ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTextPositioningElement.html",
    "title": "Interface ISvgTextPositioningElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTextPositioningElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgTextPositioningElement interface is inherited by text-related interfaces: SvgTextElement, SvgTSpanElement, SvgTRefElement and SvgAltGlyphElement. public interface ISvgTextPositioningElement : ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Inherited Members ISvgTextContentElement.TextLength ISvgTextContentElement.LengthAdjust ISvgTextContentElement.GetNumberOfChars() ISvgTextContentElement.GetComputedTextLength() ISvgTextContentElement.GetSubStringLength(long, long) ISvgTextContentElement.GetStartPositionOfChar(long) ISvgTextContentElement.GetEndPositionOfChar(long) ISvgTextContentElement.GetExtentOfChar(long) ISvgTextContentElement.GetRotationOfChar(long) ISvgTextContentElement.GetCharNumAtPosition(ISvgPoint) ISvgTextContentElement.SelectSubString(long, long) ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) Properties Dx Dy Rotate X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgTitleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTitleElement.html",
    "title": "Interface ISvgTitleElement | SharpVectors Documentation",
    "keywords": "Interface ISvgTitleElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgTitleElement interface corresponds to the 'title' element. public interface ISvgTitleElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.Angle.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.Angle.html",
    "title": "Property Angle | SharpVectors Documentation",
    "keywords": "Property Angle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Angle double Angle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.InputValues.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.InputValues.html",
    "title": "Property InputValues | SharpVectors Documentation",
    "keywords": "Property InputValues Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InputValues double[] InputValues { get; } Property Value double[]"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.Matrix.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.Matrix.html",
    "title": "Property Matrix | SharpVectors Documentation",
    "keywords": "Property Matrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Matrix ISvgMatrix Matrix { get; } Property Value ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.SetMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.SetMatrix.html",
    "title": "Method SetMatrix | SharpVectors Documentation",
    "keywords": "Method SetMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetMatrix(ISvgMatrix) void SetMatrix(ISvgMatrix matrix) Parameters matrix ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.SetRotate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.SetRotate.html",
    "title": "Method SetRotate | SharpVectors Documentation",
    "keywords": "Method SetRotate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetRotate(double, double, double) void SetRotate(double angle, double cx, double cy) Parameters angle double cx double cy double"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.SetScale.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.SetScale.html",
    "title": "Method SetScale | SharpVectors Documentation",
    "keywords": "Method SetScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetScale(double, double) void SetScale(double sx, double sy) Parameters sx double sy double"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.SetSkewX.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.SetSkewX.html",
    "title": "Method SetSkewX | SharpVectors Documentation",
    "keywords": "Method SetSkewX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetSkewX(double) void SetSkewX(double angle) Parameters angle double"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.SetSkewY.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.SetSkewY.html",
    "title": "Method SetSkewY | SharpVectors Documentation",
    "keywords": "Method SetSkewY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetSkewY(double) void SetSkewY(double angle) Parameters angle double"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.SetTranslate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.SetTranslate.html",
    "title": "Method SetTranslate | SharpVectors Documentation",
    "keywords": "Method SetTranslate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SetTranslate(double, double) void SetTranslate(double tx, double ty) Parameters tx double ty double"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.TransformType.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.TransformType.html",
    "title": "Property TransformType | SharpVectors Documentation",
    "keywords": "Property TransformType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll TransformType SvgTransformType TransformType { get; } Property Value SvgTransformType"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Type short Type { get; } Property Value short"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransform.html",
    "title": "Interface ISvgTransform | SharpVectors Documentation",
    "keywords": "Interface ISvgTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SvgTransform is the interface for one of the component transformations within a SvgTransformList; thus, a SvgTransform object corresponds to a single component (e.g., \"scale(..)\" or \"matrix(...)\") within a transform attribute specification. public interface ISvgTransform Properties Angle InputValues Matrix TransformType Type Methods SetMatrix(ISvgMatrix) SetRotate(double, double, double) SetScale(double, double) SetSkewX(double) SetSkewY(double) SetTranslate(double, double)"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.AppendItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.AppendItem.html",
    "title": "Method AppendItem | SharpVectors Documentation",
    "keywords": "Method AppendItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AppendItem(ISvgTransform) ISvgTransform AppendItem(ISvgTransform newItem) Parameters newItem ISvgTransform Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.Clear.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Clear() void Clear()"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.Consolidate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.Consolidate.html",
    "title": "Method Consolidate | SharpVectors Documentation",
    "keywords": "Method Consolidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Consolidate() ISvgTransform Consolidate() Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.CreateSvgTransformFromMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.CreateSvgTransformFromMatrix.html",
    "title": "Method CreateSvgTransformFromMatrix | SharpVectors Documentation",
    "keywords": "Method CreateSvgTransformFromMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll CreateSvgTransformFromMatrix(ISvgMatrix) ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix matrix) Parameters matrix ISvgMatrix Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.GetItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.GetItem.html",
    "title": "Method GetItem | SharpVectors Documentation",
    "keywords": "Method GetItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetItem(uint) ISvgTransform GetItem(uint index) Parameters index uint Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.Initialize.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Initialize(ISvgTransform) ISvgTransform Initialize(ISvgTransform newItem) Parameters newItem ISvgTransform Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.InsertItemBefore.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.InsertItemBefore.html",
    "title": "Method InsertItemBefore | SharpVectors Documentation",
    "keywords": "Method InsertItemBefore Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InsertItemBefore(ISvgTransform, uint) ISvgTransform InsertItemBefore(ISvgTransform newItem, uint index) Parameters newItem ISvgTransform index uint Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.NumberOfItems.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.NumberOfItems.html",
    "title": "Property NumberOfItems | SharpVectors Documentation",
    "keywords": "Property NumberOfItems Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NumberOfItems uint NumberOfItems { get; } Property Value uint"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.RemoveItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.RemoveItem.html",
    "title": "Method RemoveItem | SharpVectors Documentation",
    "keywords": "Method RemoveItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RemoveItem(uint) ISvgTransform RemoveItem(uint index) Parameters index uint Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.ReplaceItem.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.ReplaceItem.html",
    "title": "Method ReplaceItem | SharpVectors Documentation",
    "keywords": "Method ReplaceItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ReplaceItem(ISvgTransform, uint) ISvgTransform ReplaceItem(ISvgTransform newItem, uint index) Parameters newItem ISvgTransform index uint Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformList.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformList.html",
    "title": "Interface ISvgTransformList | SharpVectors Documentation",
    "keywords": "Interface ISvgTransformList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This interface defines a list of SvgTransform objects. public interface ISvgTransformList Properties NumberOfItems Methods AppendItem(ISvgTransform) Clear() Consolidate() CreateSvgTransformFromMatrix(ISvgMatrix) GetItem(uint) Initialize(ISvgTransform) InsertItemBefore(ISvgTransform, uint) RemoveItem(uint) ReplaceItem(ISvgTransform, uint)"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformable.Transform.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformable.Transform.html",
    "title": "Property Transform | SharpVectors Documentation",
    "keywords": "Property Transform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Transform ISvgAnimatedTransformList Transform { get; } Property Value ISvgAnimatedTransformList"
  },
  "api/SharpVectors.Dom.Svg.ISvgTransformable.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgTransformable.html",
    "title": "Interface ISvgTransformable | SharpVectors Documentation",
    "keywords": "Interface ISvgTransformable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Interface SvgTransformable contains properties and methods that apply to all elements which have attribute transform. public interface ISvgTransformable : ISvgLocatable Inherited Members ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) Properties Transform"
  },
  "api/SharpVectors.Dom.Svg.ISvgUriReference.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUriReference.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Href ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.ISvgUriReference.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUriReference.html",
    "title": "Interface ISvgUriReference | SharpVectors Documentation",
    "keywords": "Interface ISvgUriReference Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Interface SvgUriReference defines an interface which applies to all elements which have the collection of XLink attributes, such as xlink:href, which define a URI reference. public interface ISvgUriReference Properties Href"
  },
  "api/SharpVectors.Dom.Svg.ISvgUseElement.AnimatedInstanceRoot.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUseElement.AnimatedInstanceRoot.html",
    "title": "Property AnimatedInstanceRoot | SharpVectors Documentation",
    "keywords": "Property AnimatedInstanceRoot Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll AnimatedInstanceRoot ISvgElementInstance AnimatedInstanceRoot { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgUseElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUseElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgUseElement.InstanceRoot.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUseElement.InstanceRoot.html",
    "title": "Property InstanceRoot | SharpVectors Documentation",
    "keywords": "Property InstanceRoot Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InstanceRoot ISvgElementInstance InstanceRoot { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.ISvgUseElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUseElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgUseElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUseElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgUseElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUseElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.ISvgUseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgUseElement.html",
    "title": "Interface ISvgUseElement | SharpVectors Documentation",
    "keywords": "Interface ISvgUseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgUseElement interface corresponds to the 'use' element. public interface ISvgUseElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgStylable, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgUriReference.Href ISvgTests.RequiredFeatures ISvgTests.RequiredExtensions ISvgTests.SystemLanguage ISvgTests.HasExtension(string) ISvgStylable.ClassName ISvgStylable.Style ISvgStylable.GetPresentationAttribute(string) ISvgLangSpace.XmlLang ISvgLangSpace.XmlSpace ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgTransformable.Transform ISvgLocatable.NearestViewportElement ISvgLocatable.FarthestViewportElement ISvgLocatable.GetBBox() ISvgLocatable.GetCTM() ISvgLocatable.GetScreenCTM() ISvgLocatable.GetTransformToElement(ISvgElement) IEventTarget.AddEventListener(string, EventListener, bool) IEventTarget.RemoveEventListener(string, EventListener, bool) IEventTarget.DispatchEvent(IEvent) IEventTarget.AddEventListenerNs(string, string, EventListener, bool, object) IEventTarget.RemoveEventListenerNs(string, string, EventListener, bool) IEventTarget.WillTriggerNs(string, string) IEventTarget.HasEventListenerNs(string, string) ISvgElementVisitorTarget.Accept(ISvgElementVisitor) Properties AnimatedInstanceRoot Height InstanceRoot Width X Y"
  },
  "api/SharpVectors.Dom.Svg.ISvgVKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgVKernElement.html",
    "title": "Interface ISvgVKernElement | SharpVectors Documentation",
    "keywords": "Interface ISvgVKernElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The ISvgVKernElement interface corresponds to the 'vkern' element. public interface ISvgVKernElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string)"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewElement.ViewTarget.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewElement.ViewTarget.html",
    "title": "Property ViewTarget | SharpVectors Documentation",
    "keywords": "Property ViewTarget Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ViewTarget ISvgStringList ViewTarget { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewElement.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewElement.html",
    "title": "Interface ISvgViewElement | SharpVectors Documentation",
    "keywords": "Interface ISvgViewElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgViewElement : ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgExternalResourcesRequired, ISvgFitToViewBox, ISvgZoomAndPan Inherited Members ISvgElement.Id ISvgElement.OwnerSvgElement ISvgElement.ViewportElement ISvgElement.IsRenderable ISvgElement.RenderingHint IXmlElement.HasAttributes IXmlElement.GetAttribute(string) IXmlElement.GetAttribute(string, string) IXmlElement.SetAttribute(string, string) IXmlElement.SetAttribute(string, string, string) IXmlElement.RemoveAttribute(string) IXmlElement.RemoveAttribute(string, string) IXmlElement.GetAttributeNode(string) IXmlElement.GetAttributeNode(string, string) IXmlElement.GetElementsByTagName(string) IXmlElement.GetElementsByTagName(string, string) IXmlElement.SetAttributeNode(string, string) IXmlElement.SetAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(XmlAttribute) IXmlElement.RemoveAttributeNode(string, string) IXmlElement.HasAttribute(string) IXmlElement.HasAttribute(string, string) IXmlNode.Name IXmlNode.Value IXmlNode.NodeType IXmlNode.ParentNode IXmlNode.ChildNodes IXmlNode.FirstChild IXmlNode.LastChild IXmlNode.PreviousSibling IXmlNode.NextSibling IXmlNode.Attributes IXmlNode.OwnerDocument IXmlNode.HasChildNodes IXmlNode.NamespaceURI IXmlNode.Prefix IXmlNode.LocalName IXmlNode.InsertBefore(XmlNode, XmlNode) IXmlNode.ReplaceChild(XmlNode, XmlNode) IXmlNode.RemoveChild(XmlNode) IXmlNode.AppendChild(XmlNode) IXmlNode.CloneNode(bool) IXmlNode.Normalize() IXmlNode.Supports(string, string) ISvgExternalResourcesRequired.ExternalResourcesRequired ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio ISvgZoomAndPan.ZoomAndPan Properties ViewTarget"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewSpec.PreserveAspectRatioString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewSpec.PreserveAspectRatioString.html",
    "title": "Property PreserveAspectRatioString | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatioString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PreserveAspectRatioString string PreserveAspectRatioString { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewSpec.Transform.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewSpec.Transform.html",
    "title": "Property Transform | SharpVectors Documentation",
    "keywords": "Property Transform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Transform ISvgTransformList Transform { get; } Property Value ISvgTransformList"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewSpec.TransformString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewSpec.TransformString.html",
    "title": "Property TransformString | SharpVectors Documentation",
    "keywords": "Property TransformString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll TransformString string TransformString { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewSpec.ViewBoxString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewSpec.ViewBoxString.html",
    "title": "Property ViewBoxString | SharpVectors Documentation",
    "keywords": "Property ViewBoxString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ViewBoxString string ViewBoxString { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewSpec.ViewTarget.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewSpec.ViewTarget.html",
    "title": "Property ViewTarget | SharpVectors Documentation",
    "keywords": "Property ViewTarget Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ViewTarget ISvgElement ViewTarget { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewSpec.ViewTargetString.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewSpec.ViewTargetString.html",
    "title": "Property ViewTargetString | SharpVectors Documentation",
    "keywords": "Property ViewTargetString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ViewTargetString string ViewTargetString { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgViewSpec.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgViewSpec.html",
    "title": "Interface ISvgViewSpec | SharpVectors Documentation",
    "keywords": "Interface ISvgViewSpec Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The interface corresponds to an Svg View Specification. public interface ISvgViewSpec : ISvgZoomAndPan, ISvgFitToViewBox Inherited Members ISvgZoomAndPan.ZoomAndPan ISvgFitToViewBox.ViewBox ISvgFitToViewBox.PreserveAspectRatio Properties PreserveAspectRatioString Transform TransformString ViewBoxString ViewTarget ViewTargetString"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.Alert.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.Alert.html",
    "title": "Method Alert | SharpVectors Documentation",
    "keywords": "Method Alert Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Alert(string) void Alert(string message) Parameters message string"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.BaseUrls.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.BaseUrls.html",
    "title": "Property BaseUrls | SharpVectors Documentation",
    "keywords": "Property BaseUrls Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll BaseUrls ISet<string> BaseUrls { get; set; } Property Value ISet<string>"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.DefaultStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.DefaultStyleSheet.html",
    "title": "Property DefaultStyleSheet | SharpVectors Documentation",
    "keywords": "Property DefaultStyleSheet Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll DefaultStyleSheet IStyleSheet DefaultStyleSheet { get; } Property Value IStyleSheet"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.Document.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.Document.html",
    "title": "Property Document | SharpVectors Documentation",
    "keywords": "Property Document Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Document ISvgDocument Document { get; } Property Value ISvgDocument"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.InnerHeight.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.InnerHeight.html",
    "title": "Property InnerHeight | SharpVectors Documentation",
    "keywords": "Property InnerHeight Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InnerHeight long InnerHeight { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.InnerWidth.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.InnerWidth.html",
    "title": "Property InnerWidth | SharpVectors Documentation",
    "keywords": "Property InnerWidth Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll InnerWidth long InnerWidth { get; } Property Value long"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.ParseXML.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.ParseXML.html",
    "title": "Method ParseXML | SharpVectors Documentation",
    "keywords": "Method ParseXML Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ParseXML(string, XmlDocument) XmlDocumentFragment ParseXML(string source, XmlDocument document) Parameters source string document XmlDocument Returns XmlDocumentFragment"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.PrintNode.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.PrintNode.html",
    "title": "Method PrintNode | SharpVectors Documentation",
    "keywords": "Method PrintNode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PrintNode(XmlNode) string PrintNode(XmlNode node) Parameters node XmlNode Returns string"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.Renderer.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.Renderer.html",
    "title": "Property Renderer | SharpVectors Documentation",
    "keywords": "Property Renderer Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Renderer ISvgRenderer Renderer { get; } Property Value ISvgRenderer"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.Source.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.Source.html",
    "title": "Property Source | SharpVectors Documentation",
    "keywords": "Property Source Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Source string Source { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.WorkingDir.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.WorkingDir.html",
    "title": "Property WorkingDir | SharpVectors Documentation",
    "keywords": "Property WorkingDir Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll WorkingDir DirectoryInfo WorkingDir { get; } Property Value DirectoryInfo"
  },
  "api/SharpVectors.Dom.Svg.ISvgWindow.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgWindow.html",
    "title": "Interface ISvgWindow | SharpVectors Documentation",
    "keywords": "Interface ISvgWindow Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgWindow Properties BaseUrls DefaultStyleSheet Document InnerHeight InnerWidth Renderer Source WorkingDir Methods Alert(string) ParseXML(string, XmlDocument) PrintNode(XmlNode)"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomAndPan.ZoomAndPan.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomAndPan.ZoomAndPan.html",
    "title": "Property ZoomAndPan | SharpVectors Documentation",
    "keywords": "Property ZoomAndPan Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ZoomAndPan SvgZoomAndPanType ZoomAndPan { get; set; } Property Value SvgZoomAndPanType"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomAndPan.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomAndPan.html",
    "title": "Interface ISvgZoomAndPan | SharpVectors Documentation",
    "keywords": "Interface ISvgZoomAndPan Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The SvgZoomAndPan interface defines attribute \"zoomAndPan\" and associated constants. public interface ISvgZoomAndPan Properties ZoomAndPan"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomEvent.NewScale.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomEvent.NewScale.html",
    "title": "Property NewScale | SharpVectors Documentation",
    "keywords": "Property NewScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NewScale double NewScale { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomEvent.NewTranslate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomEvent.NewTranslate.html",
    "title": "Property NewTranslate | SharpVectors Documentation",
    "keywords": "Property NewTranslate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll NewTranslate ISvgPoint NewTranslate { get; } Property Value ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomEvent.PreviousScale.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomEvent.PreviousScale.html",
    "title": "Property PreviousScale | SharpVectors Documentation",
    "keywords": "Property PreviousScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PreviousScale double PreviousScale { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomEvent.PreviousTranslate.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomEvent.PreviousTranslate.html",
    "title": "Property PreviousTranslate | SharpVectors Documentation",
    "keywords": "Property PreviousTranslate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll PreviousTranslate ISvgPoint PreviousTranslate { get; } Property Value ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomEvent.ZoomRectScreen.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomEvent.ZoomRectScreen.html",
    "title": "Property ZoomRectScreen | SharpVectors Documentation",
    "keywords": "Property ZoomRectScreen Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ZoomRectScreen ISvgRect ZoomRectScreen { get; } Property Value ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.ISvgZoomEvent.html": {
    "href": "api/SharpVectors.Dom.Svg.ISvgZoomEvent.html",
    "title": "Interface ISvgZoomEvent | SharpVectors Documentation",
    "keywords": "Interface ISvgZoomEvent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public interface ISvgZoomEvent : IUiEvent, IEvent Inherited Members IUiEvent.View IUiEvent.Detail IUiEvent.InitUiEvent(string, bool, bool, IAbstractView, long) IUiEvent.InitUiEventNs(string, string, bool, bool, IAbstractView, long) IEvent.Type IEvent.Target IEvent.CurrentTarget IEvent.EventPhase IEvent.Bubbles IEvent.Cancelable IEvent.TimeStamp IEvent.NamespaceUri IEvent.IsCustom IEvent.IsDefaultPrevented IEvent.StopPropagation() IEvent.PreventDefault() IEvent.InitEvent(string, bool, bool) IEvent.InitEventNs(string, string, bool, bool) IEvent.StopImmediatePropagation() Properties NewScale NewTranslate PreviousScale PreviousTranslate ZoomRectScreen"
  },
  "api/SharpVectors.Dom.Svg.RenderEvent.html": {
    "href": "api/SharpVectors.Dom.Svg.RenderEvent.html",
    "title": "Delegate RenderEvent | SharpVectors Documentation",
    "keywords": "Delegate RenderEvent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public delegate void RenderEvent(SvgRectF updatedRect) Parameters updatedRect SvgRectF"
  },
  "api/SharpVectors.Dom.Svg.SvgAElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAElement.-ctor.html",
    "title": "Constructor SvgAElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAElement(string, string, string, SvgDocument) public SvgAElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint."
  },
  "api/SharpVectors.Dom.Svg.SvgAElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAElement.html",
    "title": "Class SvgAElement | SharpVectors Documentation",
    "keywords": "Class SvgAElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgAElement : SvgTextContentElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgAElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget Inherited Members SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(string) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(long, long) SvgTextContentElement.GetStartPositionOfChar(long) SvgTextContentElement.GetEndPositionOfChar(long) SvgTextContentElement.GetExtentOfChar(long) SvgTextContentElement.GetRotationOfChar(long) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(long, long) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAElement(string, string, string, SvgDocument) Properties RenderingHint Gets a value providing a hint on the rendering defined by this element."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.-ctor.html",
    "title": "Constructor SvgAltGlyphDefElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAltGlyphDefElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAltGlyphDefElement(string, string, string, SvgDocument) Initializes a new instance of the SvgAltGlyphDefElement class with the specified parameters. public SvgAltGlyphDefElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.GetGlyphItem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.GetGlyphItem.html",
    "title": "Method GetGlyphItem | SharpVectors Documentation",
    "keywords": "Method GetGlyphItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetGlyphItem(string) Gets the ISvgAltGlyphItemElement with the specified name or ID. public ISvgAltGlyphItemElement GetGlyphItem(string name) Parameters name string The name or ID of the required ISvgAltGlyphItemElement. Returns ISvgAltGlyphItemElement A ISvgAltGlyphItemElement specifying the 'altGlyphItem' element of the specifiied name or ID. This will always return null, if the IsSimple is true."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.GetGlyphRef.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.GetGlyphRef.html",
    "title": "Method GetGlyphRef | SharpVectors Documentation",
    "keywords": "Method GetGlyphRef Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetGlyphRef(string) Gets the ISvgGlyphRefElement with the specified name or ID. public ISvgGlyphRefElement GetGlyphRef(string name) Parameters name string The name or ID of the required ISvgGlyphRefElement. Returns ISvgGlyphRefElement A ISvgGlyphRefElement specifying the 'glyphRef' element of the specifiied name or ID. This will always return null, if the IsSimple is false."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.GlyphRef.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.GlyphRef.html",
    "title": "Property GlyphRef | SharpVectors Documentation",
    "keywords": "Property GlyphRef Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GlyphRef Gets the first child element with the name 'glyphRef'. public SvgGlyphRefElement GlyphRef { get; } Property Value SvgGlyphRefElement The first SvgGlyphRefElement if matched. It returns a null if there is no match."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.IsSimple.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.IsSimple.html",
    "title": "Property IsSimple | SharpVectors Documentation",
    "keywords": "Property IsSimple Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsSimple Gets a value indicating whether this is a simple content model. public bool IsSimple { get; } Property Value bool Returns true if this element defines a simple content model that contains only 'glyphRef' elements, otherwise returns false."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphDefElement.html",
    "title": "Class SvgAltGlyphDefElement | SharpVectors Documentation",
    "keywords": "Class SvgAltGlyphDefElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This implements the ISvgAltGlyphDefElement interface corresponds to the 'altGlyphDef' element. public sealed class SvgAltGlyphDefElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgAltGlyphDefElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAltGlyphDefElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgAltGlyphDefElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks Content model: Either one or more 'glyphRef' elements, orIn the simplest case, an 'altGlyphDef' contains one or more 'glyphRef' elements. Each 'glyphRef' element references a single glyph within a particular font. one or more 'altGlyphItem' elements.In the more complex case, an 'altGlyphDef' contains one or more 'altGlyphItem' elements. Each 'altGlyphItem' represents a candidate set of substitute glyphs. Each 'altGlyphItem' contains one or more 'glyphRef' elements. Each 'glyphRef' element references a single glyph within a particular font. Constructors SvgAltGlyphDefElement(string, string, string, SvgDocument) Initializes a new instance of the SvgAltGlyphDefElement class with the specified parameters. Properties GlyphRef Gets the first child element with the name 'glyphRef'. IsRenderable Gets a value indicating whether this SVG element is renderable. IsSimple Gets a value indicating whether this is a simple content model. Methods GetGlyphItem(string) Gets the ISvgAltGlyphItemElement with the specified name or ID. GetGlyphRef(string) Gets the ISvgGlyphRefElement with the specified name or ID."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.-ctor.html",
    "title": "Constructor SvgAltGlyphElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAltGlyphElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAltGlyphElement(string, string, string, SvgDocument) public SvgAltGlyphElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.Format.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.Format.html",
    "title": "Property Format | SharpVectors Documentation",
    "keywords": "Property Format Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Format Corresponds to attribute 'format' on the given element. public string Format { get; set; } Property Value string Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.GlyphRef.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.GlyphRef.html",
    "title": "Property GlyphRef | SharpVectors Documentation",
    "keywords": "Property GlyphRef Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GlyphRef Corresponds to attribute 'glyphRef attribute' on the given element. public string GlyphRef { get; set; } Property Value string Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public XmlElement ReferencedElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphElement.html",
    "title": "Class SvgAltGlyphElement | SharpVectors Documentation",
    "keywords": "Class SvgAltGlyphElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The ISvgAltGlyphElement interface corresponds to the 'altGlyph' element. public sealed class SvgAltGlyphElement : SvgTextPositioningElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgAltGlyphElement, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgUriReference Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgAltGlyphElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgAltGlyphElement ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgUriReference Inherited Members SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(string) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(long, long) SvgTextContentElement.GetStartPositionOfChar(long) SvgTextContentElement.GetEndPositionOfChar(long) SvgTextContentElement.GetExtentOfChar(long) SvgTextContentElement.GetRotationOfChar(long) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(long, long) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAltGlyphElement(string, string, string, SvgDocument) Properties Format Corresponds to attribute 'format' on the given element. GlyphRef Corresponds to attribute 'glyphRef attribute' on the given element. Href IsRenderable Gets a value indicating whether this SVG element is renderable. ReferencedElement"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.-ctor.html",
    "title": "Constructor SvgAltGlyphItemElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAltGlyphItemElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAltGlyphItemElement(string, string, string, SvgDocument) Initializes a new instance of the SvgAltGlyphItemElement class with the specified parameters. public SvgAltGlyphItemElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.GetGlyphRef.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.GetGlyphRef.html",
    "title": "Method GetGlyphRef | SharpVectors Documentation",
    "keywords": "Method GetGlyphRef Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetGlyphRef(string) Gets the ISvgGlyphRefElement with the specified name or ID. public ISvgGlyphRefElement GetGlyphRef(string name) Parameters name string The name or ID of the required ISvgGlyphRefElement. Returns ISvgGlyphRefElement A ISvgGlyphRefElement specifying the 'glyphRef' element of the specifiied name or ID."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAltGlyphItemElement.html",
    "title": "Class SvgAltGlyphItemElement | SharpVectors Documentation",
    "keywords": "Class SvgAltGlyphItemElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This implements the ISvgAltGlyphItemElement interface corresponds to the 'altGlyphItem' element. public sealed class SvgAltGlyphItemElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgAltGlyphItemElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAltGlyphItemElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgAltGlyphItemElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks *Content model:* One or more 'glyphRef' elements. The 'altGlyphItem' element defines a candidate set of possible glyph substitutions. The first 'altGlyphItem' element whose referenced glyphs are all available is chosen. Its glyphs are rendered instead of the character(s) that are inside of the referencing 'altGlyph' element. Constructors SvgAltGlyphItemElement(string, string, string, SvgDocument) Initializes a new instance of the SvgAltGlyphItemElement class with the specified parameters. Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Methods GetGlyphRef(string) Gets the ISvgGlyphRefElement with the specified name or ID."
  },
  "api/SharpVectors.Dom.Svg.SvgAngle.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngle.-ctor.html",
    "title": "Constructor SvgAngle | SharpVectors Documentation",
    "keywords": "Constructor SvgAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAngle(string, string, bool) Creates a SvgAngle value public SvgAngle(string baseVal, string defaultValue, bool readOnly) Parameters baseVal string defaultValue string The default value for the angle. readOnly bool Specifies if the value should be read-only"
  },
  "api/SharpVectors.Dom.Svg.SvgAngle.ConvertToSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngle.ConvertToSpecifiedUnits.html",
    "title": "Method ConvertToSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Method ConvertToSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ConvertToSpecifiedUnits(SvgAngleType) Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueAsSpecified and valueAsString might be modified as a result of this method. public void ConvertToSpecifiedUnits(SvgAngleType unitType) Parameters unitType SvgAngleType The unitType to switch to (e.g., SvgAngleTypeDEG)."
  },
  "api/SharpVectors.Dom.Svg.SvgAngle.NewValueSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngle.NewValueSpecifiedUnits.html",
    "title": "Method NewValueSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Method NewValueSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NewValueSpecifiedUnits(SvgAngleType, double) Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object. public void NewValueSpecifiedUnits(SvgAngleType unitType, double valueInSpecifiedUnits) Parameters unitType SvgAngleType The unitType for the angle value (e.g., SvgAngleTypeDEG). valueInSpecifiedUnits double The angle value"
  },
  "api/SharpVectors.Dom.Svg.SvgAngle.UnitType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngle.UnitType.html",
    "title": "Property UnitType | SharpVectors Documentation",
    "keywords": "Property UnitType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnitType The type of the value as specified by one of the constants specified above public SvgAngleType UnitType { get; } Property Value SvgAngleType"
  },
  "api/SharpVectors.Dom.Svg.SvgAngle.Value.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngle.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Value The angle value as a floating point value, in degrees. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting. public double Value { get; set; } Property Value double Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgAngle.ValueAsString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngle.ValueAsString.html",
    "title": "Property ValueAsString | SharpVectors Documentation",
    "keywords": "Property ValueAsString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ValueAsString The angle value as a string value, in the units expressed by unitType. Setting this attribute will cause value and valueInSpecifiedUnits to be updated automatically to reflect this setting. public string ValueAsString { get; set; } Property Value string Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgAngle.ValueInSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngle.ValueInSpecifiedUnits.html",
    "title": "Property ValueInSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Property ValueInSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ValueInSpecifiedUnits The angle value as a floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting. public double ValueInSpecifiedUnits { get; set; } Property Value double Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngle.html",
    "title": "Class SvgAngle | SharpVectors Documentation",
    "keywords": "Class SvgAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgAngle. public sealed class SvgAngle : ISvgAngle Inheritance object SvgAngle Implements ISvgAngle Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAngle(string, string, bool) Creates a SvgAngle value Properties UnitType The type of the value as specified by one of the constants specified above Value The angle value as a floating point value, in degrees. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting. ValueAsString The angle value as a string value, in the units expressed by unitType. Setting this attribute will cause value and valueInSpecifiedUnits to be updated automatically to reflect this setting. ValueInSpecifiedUnits The angle value as a floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting. Methods ConvertToSpecifiedUnits(SvgAngleType) Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueAsSpecified and valueAsString might be modified as a result of this method. NewValueSpecifiedUnits(SvgAngleType, double) Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object."
  },
  "api/SharpVectors.Dom.Svg.SvgAngleType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAngleType.html",
    "title": "Enum SvgAngleType | SharpVectors Documentation",
    "keywords": "Enum SvgAngleType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The basic Angle Value Types public enum SvgAngleType Fields Unknown = 0 The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. Unspecified = 1 No unit type was provided (i.e., a unitless value was specified). For angles, a unitless value is treated the same as if degrees were specified. Deg = 11 The unit type was explicitly set to degrees. Rad = 12 The unit type is radians. Grad = 13 The unit type is grads."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.-ctor.html",
    "title": "Constructor SvgAnimateBaseElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimateBaseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimateBaseElement(string, string, string, SvgDocument) protected SvgAnimateBaseElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.Accumulate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.Accumulate.html",
    "title": "Property Accumulate | SharpVectors Documentation",
    "keywords": "Property Accumulate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accumulate public string Accumulate { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.Additive.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.Additive.html",
    "title": "Property Additive | SharpVectors Documentation",
    "keywords": "Property Additive Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Additive public string Additive { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.AttributeName.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.AttributeName.html",
    "title": "Property AttributeName | SharpVectors Documentation",
    "keywords": "Property AttributeName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AttributeName public string AttributeName { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.AttributeType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.AttributeType.html",
    "title": "Property AttributeType | SharpVectors Documentation",
    "keywords": "Property AttributeType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AttributeType public string AttributeType { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.By.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.By.html",
    "title": "Property By | SharpVectors Documentation",
    "keywords": "Property By Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll By public string By { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.CalcMode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.CalcMode.html",
    "title": "Property CalcMode | SharpVectors Documentation",
    "keywords": "Property CalcMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CalcMode public string CalcMode { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.ClassName.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.ClassName.html",
    "title": "Property ClassName | SharpVectors Documentation",
    "keywords": "Property ClassName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ClassName public ISvgAnimatedString ClassName { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.From.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.From.html",
    "title": "Property From | SharpVectors Documentation",
    "keywords": "Property From Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll From public string From { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.GetPresentationAttribute.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.GetPresentationAttribute.html",
    "title": "Method GetPresentationAttribute | SharpVectors Documentation",
    "keywords": "Method GetPresentationAttribute Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetPresentationAttribute(string) public ICssValue GetPresentationAttribute(string name) Parameters name string Returns ICssValue"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.KeySplines.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.KeySplines.html",
    "title": "Property KeySplines | SharpVectors Documentation",
    "keywords": "Property KeySplines Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KeySplines public string KeySplines { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.KeyTimes.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.KeyTimes.html",
    "title": "Property KeyTimes | SharpVectors Documentation",
    "keywords": "Property KeyTimes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KeyTimes public string KeyTimes { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.To.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.To.html",
    "title": "Property To | SharpVectors Documentation",
    "keywords": "Property To Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll To public string To { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.Values.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.Values.html",
    "title": "Property Values | SharpVectors Documentation",
    "keywords": "Property Values Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Values public string Values { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateBaseElement.html",
    "title": "Class SvgAnimateBaseElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateBaseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgAnimateBaseElement : SvgAnimationElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateBaseElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Derived SvgAnimateColorElement SvgAnimateElement Inherited Members SvgAnimationElement._svgTests SvgAnimationElement._eventTarget SvgAnimationElement._externalResourcesRequired SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(string) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(float) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(float) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgAnimateBaseElement(string, string, string, SvgDocument) Properties Accumulate Additive AttributeName AttributeType By CalcMode ClassName From KeySplines KeyTimes To Values Methods GetPresentationAttribute(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateColorElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateColorElement.-ctor.html",
    "title": "Constructor SvgAnimateColorElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimateColorElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimateColorElement(string, string, string, SvgDocument) public SvgAnimateColorElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateColorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateColorElement.html",
    "title": "Class SvgAnimateColorElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateColorElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgAnimateColorElement : SvgAnimateBaseElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateColorElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateBaseElement SvgAnimateColorElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateColorElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget ISvgStylable Inherited Members SvgAnimateBaseElement.AttributeName SvgAnimateBaseElement.AttributeType SvgAnimateBaseElement.By SvgAnimateBaseElement.CalcMode SvgAnimateBaseElement.From SvgAnimateBaseElement.KeySplines SvgAnimateBaseElement.KeyTimes SvgAnimateBaseElement.To SvgAnimateBaseElement.Values SvgAnimateBaseElement.Accumulate SvgAnimateBaseElement.Additive SvgAnimateBaseElement.ClassName SvgAnimateBaseElement.GetPresentationAttribute(string) SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(string) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(float) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(float) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimateColorElement(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateElement.-ctor.html",
    "title": "Constructor SvgAnimateElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimateElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimateElement(string, string, string, SvgDocument) public SvgAnimateElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateElement.html",
    "title": "Class SvgAnimateElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgAnimateElement : SvgAnimateBaseElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateBaseElement SvgAnimateElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget ISvgStylable Inherited Members SvgAnimateBaseElement.AttributeName SvgAnimateBaseElement.AttributeType SvgAnimateBaseElement.By SvgAnimateBaseElement.CalcMode SvgAnimateBaseElement.From SvgAnimateBaseElement.KeySplines SvgAnimateBaseElement.KeyTimes SvgAnimateBaseElement.To SvgAnimateBaseElement.Values SvgAnimateBaseElement.Accumulate SvgAnimateBaseElement.Additive SvgAnimateBaseElement.ClassName SvgAnimateBaseElement.GetPresentationAttribute(string) SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(string) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(float) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(float) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimateElement(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.-ctor.html",
    "title": "Constructor SvgAnimateMPathElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimateMPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimateMPathElement(string, string, string, SvgDocument) public SvgAnimateMPathElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public XmlElement ReferencedElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMPathElement.html",
    "title": "Class SvgAnimateMPathElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateMPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgAnimateMPathElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgAnimateMPathElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimateMPathElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgAnimateMPathElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimateMPathElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Href ReferencedElement"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.-ctor.html",
    "title": "Constructor SvgAnimateMotionElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimateMotionElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimateMotionElement(string, string, string, SvgDocument) public SvgAnimateMotionElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Accumulate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Accumulate.html",
    "title": "Property Accumulate | SharpVectors Documentation",
    "keywords": "Property Accumulate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accumulate Gets or sets a value that controls whether or not the animation is cumulative. public string Accumulate { get; set; } Property Value string Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Additive.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Additive.html",
    "title": "Property Additive | SharpVectors Documentation",
    "keywords": "Property Additive Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Additive Gets or sets a value that controls whether or not the animation is additive. public string Additive { get; set; } Property Value string Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.By.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.By.html",
    "title": "Property By | SharpVectors Documentation",
    "keywords": "Property By Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll By Gets or sets a value that specifies a relative offset value for the animation. public string By { get; set; } Property Value string Specifies a relative offset value for the animation."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.CalcMode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.CalcMode.html",
    "title": "Property CalcMode | SharpVectors Documentation",
    "keywords": "Property CalcMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CalcMode Gets or sets a value that specifies the interpolation mode for the animation. public string CalcMode { get; set; } Property Value string This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.From.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.From.html",
    "title": "Property From | SharpVectors Documentation",
    "keywords": "Property From Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll From Gets or sets a value that specifies the starting value of the animation. public string From { get; set; } Property Value string Specifies the starting value of the animation."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.KeyPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.KeyPoints.html",
    "title": "Property KeyPoints | SharpVectors Documentation",
    "keywords": "Property KeyPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KeyPoints Gets or sets a value that takes a semicolon-separated list of floating point values between 0 and 1 and indicates how far along the motion path the object shall move at the moment in time specified by corresponding \"keyTimes\" value. public string KeyPoints { get; set; } Property Value string Distance calculations use the user agent's distance along the path algorithm. Each progress value in the list corresponds to a value in the \"keyTimes\" attribute list. If a list of \"keyPoints\" is specified, there must be exactly as many values in the \"keyPoints\" list as in the \"keyTimes\" list."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.KeySplines.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.KeySplines.html",
    "title": "Property KeySplines | SharpVectors Documentation",
    "keywords": "Property KeySplines Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. public string KeySplines { get; set; } Property Value string The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.KeyTimes.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.KeyTimes.html",
    "title": "Property KeyTimes | SharpVectors Documentation",
    "keywords": "Property KeyTimes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. public string KeyTimes { get; set; } Property Value string Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Origin.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Origin.html",
    "title": "Property Origin | SharpVectors Documentation",
    "keywords": "Property Origin Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Origin The \"origin\" attribute is defined in the SMIL Animation specification. It has no effect in SVG. public string Origin { get; set; } Property Value string The value is \"default\"."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Path.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Path.html",
    "title": "Property Path | SharpVectors Documentation",
    "keywords": "Property Path Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Path Gets or set the attribute specifying the motion path, expressed in the same format and interpreted the same way as the \"d\" attribute on the \"path\" element. public string Path { get; set; } Property Value string The effect of a motion path animation is to add a supplemental transformation matrix onto the CTM for the referenced object which causes a translation along the x- and y-axes of the current user coordinate system by the computed X and Y values computed over time."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Rotate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Rotate.html",
    "title": "Property Rotate | SharpVectors Documentation",
    "keywords": "Property Rotate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Rotate Gets or sets an attribute post-multiplies a supplemental transformation matrix onto the CTM of the target element to apply a rotation transformation about the origin of the current user coordinate system. public string Rotate { get; set; } Property Value string The rotation transformation is applied after the supplemental translation transformation that is computed due to the \"path\" attribute. autoIndicates that the object is rotated over time by the angle of the direction (i.e., directional tangent vector) of the motion path. auto-reverseIndicates that the object is rotated over time by the angle of the direction (i.e., directional tangent vector) of the motion path plus 180 degrees. numberIndicates that the target element has a constant rotation transformation applied to it, where the rotation angle is the specified number of degrees. The default value is '0'."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.To.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.To.html",
    "title": "Property To | SharpVectors Documentation",
    "keywords": "Property To Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll To Gets or sets a value that specifies the ending value of the animation. public string To { get; set; } Property Value string Specifies the ending value of the animation."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Values.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.Values.html",
    "title": "Property Values | SharpVectors Documentation",
    "keywords": "Property Values Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Values Gets or sets a semicolon-separated list of one or more values. public string Values { get; set; } Property Value string Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateMotionElement.html",
    "title": "Class SvgAnimateMotionElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateMotionElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgAnimateMotionElement : SvgAnimationElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateMotionElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateMotionElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateMotionElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Inherited Members SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(string) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(float) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(float) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimateMotionElement(string, string, string, SvgDocument) Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Additive Gets or sets a value that controls whether or not the animation is additive. By Gets or sets a value that specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. From Gets or sets a value that specifies the starting value of the animation. KeyPoints Gets or sets a value that takes a semicolon-separated list of floating point values between 0 and 1 and indicates how far along the motion path the object shall move at the moment in time specified by corresponding \"keyTimes\" value. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. Origin The \"origin\" attribute is defined in the SMIL Animation specification. It has no effect in SVG. Path Gets or set the attribute specifying the motion path, expressed in the same format and interpreted the same way as the \"d\" attribute on the \"path\" element. Rotate Gets or sets an attribute post-multiplies a supplemental transformation matrix onto the CTM of the target element to apply a rotation transformation about the origin of the current user coordinate system. To Gets or sets a value that specifies the ending value of the animation. Values Gets or sets a semicolon-separated list of one or more values."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.-ctor.html",
    "title": "Constructor SvgAnimateSetElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimateSetElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimateSetElement(string, string, string, SvgDocument) public SvgAnimateSetElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.AttributeName.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.AttributeName.html",
    "title": "Property AttributeName | SharpVectors Documentation",
    "keywords": "Property AttributeName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. public string AttributeName { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.AttributeType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.AttributeType.html",
    "title": "Property AttributeType | SharpVectors Documentation",
    "keywords": "Property AttributeType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. public string AttributeType { get; set; } Property Value string The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.To.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.To.html",
    "title": "Property To | SharpVectors Documentation",
    "keywords": "Property To Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll To Gets or sets a value that specifies the ending value of the animation. public string To { get; set; } Property Value string Specifies the value for the attribute during the duration of the ‘set’ element. The argument value must match the attribute type."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateSetElement.html",
    "title": "Class SvgAnimateSetElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateSetElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgAnimateSetElement : SvgAnimationElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateSetElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateSetElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateSetElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Inherited Members SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(string) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(float) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(float) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimateSetElement(string, string, string, SvgDocument) Properties AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. To Gets or sets a value that specifies the ending value of the animation."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.-ctor.html",
    "title": "Constructor SvgAnimateTransformElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimateTransformElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimateTransformElement(string, string, string, SvgDocument) public SvgAnimateTransformElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.Accumulate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.Accumulate.html",
    "title": "Property Accumulate | SharpVectors Documentation",
    "keywords": "Property Accumulate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accumulate Gets or sets a value that controls whether or not the animation is cumulative. public string Accumulate { get; set; } Property Value string Possible value are none | sum, default is none. sum Specifies that each repeat iteration after the first builds upon the last value of the previous iteration. none Specifies that repeat iterations are not cumulative. This is the default. Remarks This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat. Cumulative animation is not defined for \"to animation\". This attribute will be ignored if the animation function is specified with only the \"to\" attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.Additive.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.Additive.html",
    "title": "Property Additive | SharpVectors Documentation",
    "keywords": "Property Additive Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Additive Gets or sets a value that controls whether or not the animation is additive. public string Additive { get; set; } Property Value string Posible values are replace | sum, default is sum. replace Specifies that the animation will override the underlying value of the attribute and other lower priority animations. sum Specifies that the animation will add to the underlying value of the attribute and other lower priority animations."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.AttributeName.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.AttributeName.html",
    "title": "Property AttributeName | SharpVectors Documentation",
    "keywords": "Property AttributeName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. public string AttributeName { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.AttributeType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.AttributeType.html",
    "title": "Property AttributeType | SharpVectors Documentation",
    "keywords": "Property AttributeType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. public string AttributeType { get; set; } Property Value string The attribute value is one of the following (values are case-sensitive): CSS | XML | auto CSS This specifies that the value of \"attributeName\" is the name of a CSS property defined as animatable in this specification. XML This specifies that the value of \"attributeName\" is the name of an XML attribute defined in the default XML namespace for the target element.If the value for \"attributeName\" has an XMLNS prefix, the implementation must use the associated namespace as defined in the scope of the target element.The attribute must be defined as animatable in this specification. auto The implementation should match the \"attributeName\" to an attribute for the target element. The implementation must first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element. The default value is 'auto'."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.By.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.By.html",
    "title": "Property By | SharpVectors Documentation",
    "keywords": "Property By Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll By Gets or sets a value that specifies a relative offset value for the animation. public string By { get; set; } Property Value string Specifies a relative offset value for the animation."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.CalcMode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.CalcMode.html",
    "title": "Property CalcMode | SharpVectors Documentation",
    "keywords": "Property CalcMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CalcMode Gets or sets a value that specifies the interpolation mode for the animation. public string CalcMode { get; set; } Property Value string This can take any of the following values. The default mode is 'linear', however if the attribute does not support linear interpolation (e.g. for strings), the \"calcMode\" attribute is ignored and discrete interpolation is used. discrete This specifies that the animation function will jump from one value to the next without any interpolation. linear Simple linear interpolation between values is used to calculate the animation function. Except for \"animateMotion\", this is the default \"calcMode\". paced Defines interpolation to produce an even pace of change across the animation. If 'paced' is specified, any \"keyTimes\" or \"keySplines\" will be ignored. For \"animateMotion\", this is the default \"calcMode\". spline Interpolates from one value in the \"values\" list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the \"keyTimes\" attribute, and the control points for each interval are defined in the \"keySplines\" attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.From.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.From.html",
    "title": "Property From | SharpVectors Documentation",
    "keywords": "Property From Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll From Gets or sets a value that specifies the starting value of the animation. public string From { get; set; } Property Value string Specifies the starting value of the animation."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.KeySplines.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.KeySplines.html",
    "title": "Property KeySplines | SharpVectors Documentation",
    "keywords": "Property KeySplines Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. public string KeySplines { get; set; } Property Value string The attribute value is a semicolon-separated list of control point descriptions. Each control point description is a set of four values: x1 y1 x2 y2, describing the Bézier control points for one time segment. The values must all be in the range 0 to 1. This attribute is ignored unless the \"calcMode\" is set to 'spline'."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.KeyTimes.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.KeyTimes.html",
    "title": "Property KeyTimes | SharpVectors Documentation",
    "keywords": "Property KeyTimes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. public string KeyTimes { get; set; } Property Value string Each time in the list corresponds to a value in the \"values\" attribute list, and defines when the value is used in the animation function. Each time value in the \"keyTimes\" list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the simple duration of the animation element. Remarks For animations specified with a \"values\" list, the \"keyTimes\" attribute if specified must have exactly as many values as there are in the \"values\" attribute. For from/to/by animations, the \"keyTimes\" attribute if specified must have two values. Each successive time value must be greater than or equal to the preceding time value. The \"keyTimes\" list semantics depends upon the interpolation mode: For linear and spline animation, the first time value in the list must be 0, and the last time value in the list must be 1. The key time associated with each value defines when the value is set; values are interpolated between the key times. For discrete animation, the first time value in the list must be 0. The time associated with each value defines when the value is set; the animation function uses that value until the next time defined in \"keyTimes\". If the interpolation mode is 'paced', the \"keyTimes\" attribute is ignored. If there are any errors in the \"keyTimes\" specification (bad values, too many or too few values), the document fragment is in error (see error processing). If the simple duration is indefinite, any \"keyTimes\" specification will be ignored."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.To.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.To.html",
    "title": "Property To | SharpVectors Documentation",
    "keywords": "Property To Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll To Gets or sets a value that specifies the ending value of the animation. public string To { get; set; } Property Value string Specifies the ending value of the animation."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Type Gets or sets a value to indicates the type of transformation which is to have its values change over time. public SvgTransformType Type { get; set; } Property Value SvgTransformType The values are translate | scale | rotate | skewX | skewY. If the attribute is not specified, then the effect is as if a value of 'translate' were specified. The ‘from’, ‘by’ and ‘to’ attributes take a value expressed using the same syntax that is available for the given transformation type: For a type='translate\", each individual value is expressed as {tx} [,{ty}]. For a type=\"scale\", each individual value is expressed as {sx} [,{sy}]. For a type=\"rotate\", each individual value is expressed as {rotate-angle} [{cx} {cy}]. For a type=\"skewX\" and type=\"skewY\", each individual value is expressed as {skew-angle}."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.Values.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.Values.html",
    "title": "Property Values | SharpVectors Documentation",
    "keywords": "Property Values Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Values Gets or sets a semicolon-separated list of one or more values. public string Values { get; set; } Property Value string Vector-valued attributes are supported using the vector syntax of the \"attributeType\" domain."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimateTransformElement.html",
    "title": "Class SvgAnimateTransformElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimateTransformElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgAnimateTransformElement : SvgAnimationElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimateTransformElement, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement SvgAnimateTransformElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimateTransformElement ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Inherited Members SvgAnimationElement.IsRenderable SvgAnimationElement.RenderingHint SvgAnimationElement.RequiredFeatures SvgAnimationElement.RequiredExtensions SvgAnimationElement.SystemLanguage SvgAnimationElement.HasExtension(string) SvgAnimationElement.ExternalResourcesRequired SvgAnimationElement.TargetElement SvgAnimationElement.CurrentTime SvgAnimationElement.SimpleDuration SvgAnimationElement.StartTime SvgAnimationElement.Begin SvgAnimationElement.Duration SvgAnimationElement.End SvgAnimationElement.Maximum SvgAnimationElement.Minimum SvgAnimationElement.RepeatCount SvgAnimationElement.RepeatDuration SvgAnimationElement.Restart SvgAnimationElement.Fill SvgAnimationElement.Href SvgAnimationElement.ReferencedElement SvgAnimationElement.BeginElement() SvgAnimationElement.BeginElementAt(float) SvgAnimationElement.EndElement() SvgAnimationElement.EndElementAt(float) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimateTransformElement(string, string, string, SvgDocument) Properties Accumulate Gets or sets a value that controls whether or not the animation is cumulative. Additive Gets or sets a value that controls whether or not the animation is additive. AttributeName Gets or sets the name of the target attribute. An XMLNS prefix may be used to indicate the XML namespace for the attribute. The prefix will be interpreted in the scope of the current (i.e., the referencing) animation element. AttributeType Gets or sets the namespace in which the target attribute and its associated values are defined. By Gets or sets a value that specifies a relative offset value for the animation. CalcMode Gets or sets a value that specifies the interpolation mode for the animation. From Gets or sets a value that specifies the starting value of the animation. KeySplines Gets or sets a set of Bézier control points associated with the \"keyTimes\" list, defining a cubic Bézier function that controls interval pacing. KeyTimes Gets or sets a semicolon-separated list of time values used to control the pacing of the animation. To Gets or sets a value that specifies the ending value of the animation. Type Gets or sets a value to indicates the type of transformation which is to have its values change over time. Values Gets or sets a semicolon-separated list of one or more values."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.-ctor.html",
    "title": "Constructor SvgAnimatedAngle | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedAngle(string, string) public SvgAnimatedAngle(string s, string defaultValue) Parameters s string defaultValue string SvgAnimatedAngle(ISvgAngle) public SvgAnimatedAngle(ISvgAngle angle) Parameters angle ISvgAngle"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal public ISvgAngle AnimVal { get; } Property Value ISvgAngle"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal public ISvgAngle BaseVal { get; } Property Value ISvgAngle"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedAngle.html",
    "title": "Class SvgAnimatedAngle | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgAnimatedAngle : ISvgAnimatedAngle Inheritance object SvgAnimatedAngle Implements ISvgAnimatedAngle Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedAngle(ISvgAngle) SvgAnimatedAngle(string, string) Properties AnimVal BaseVal"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.-ctor.html",
    "title": "Constructor SvgAnimatedBoolean | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedBoolean Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedBoolean(string, bool) public SvgAnimatedBoolean(string str, bool defaultValue) Parameters str string defaultValue bool"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. public bool AnimVal { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if it is readonly. public bool BaseVal { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedBoolean.html",
    "title": "Class SvgAnimatedBoolean | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedBoolean Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgAnimatedNumber. public sealed class SvgAnimatedBoolean : ISvgAnimatedBoolean Inheritance object SvgAnimatedBoolean Implements ISvgAnimatedBoolean Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedBoolean(string, bool) Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if it is readonly."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.-ctor.html",
    "title": "Constructor SvgAnimatedEnumeration | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedEnumeration Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedEnumeration(ushort) public SvgAnimatedEnumeration(ushort val) Parameters val ushort"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. public ushort AnimVal { get; } Property Value ushort"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations. Inheriting Class should throw an exception when the value is read only public ushort BaseVal { get; set; } Property Value ushort"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedEnumeration.html",
    "title": "Class SvgAnimatedEnumeration | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedEnumeration Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgAnimatedEnumeration. public sealed class SvgAnimatedEnumeration : ISvgAnimatedEnumeration Inheritance object SvgAnimatedEnumeration Implements ISvgAnimatedEnumeration Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedEnumeration(ushort) Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations. Inheriting Class should throw an exception when the value is read only"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.-ctor.html",
    "title": "Constructor SvgAnimatedInteger | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedInteger Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedInteger(string) public SvgAnimatedInteger(string str) Parameters str string SvgAnimatedInteger(long) public SvgAnimatedInteger(long value) Parameters value long SvgAnimatedInteger(ulong) public SvgAnimatedInteger(ulong value) Parameters value ulong SvgAnimatedInteger(double) public SvgAnimatedInteger(double value) Parameters value double SvgAnimatedInteger(long, long) public SvgAnimatedInteger(long baseVal, long animVal) Parameters baseVal long animVal long"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as BaseVal. public long AnimVal { get; set; } Property Value long"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations. public long BaseVal { get; set; } Property Value long"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedInteger.html",
    "title": "Class SvgAnimatedInteger | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedInteger Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll An implementation of the ISvgAnimatedInteger interface. public sealed class SvgAnimatedInteger : ISvgAnimatedInteger Inheritance object SvgAnimatedInteger Implements ISvgAnimatedInteger Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedInteger(double) SvgAnimatedInteger(long) SvgAnimatedInteger(long, long) SvgAnimatedInteger(string) SvgAnimatedInteger(ulong) Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as BaseVal. BaseVal The base value of the given attribute before applying any animations."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLength.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLength.-ctor.html",
    "title": "Constructor SvgAnimatedLength | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedLength(SvgElement, string, SvgLengthDirection, string) Used for attributes of basic type 'length' which can be animated. public SvgAnimatedLength(SvgElement ownerElement, string propertyName, SvgLengthDirection direction, string defaultValue) Parameters ownerElement SvgElement The elements that contains the length propertyName string direction SvgLengthDirection The direction of the length, 0=x-axis, 1=y-axis, 2=no special axis defaultValue string String to parse for the value SvgAnimatedLength(SvgElement, string, SvgLengthDirection, string, string) public SvgAnimatedLength(SvgElement ownerElement, string propertyName, SvgLengthDirection direction, string strValue, string defaultValue) Parameters ownerElement SvgElement propertyName string direction SvgLengthDirection strValue string defaultValue string SvgAnimatedLength(ISvgLength, ISvgLength) public SvgAnimatedLength(ISvgLength baseVal, ISvgLength animVal) Parameters baseVal ISvgLength animVal ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLength.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLength.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. public ISvgLength AnimVal { get; set; } Property Value ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLength.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLength.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations. public ISvgLength BaseVal { get; set; } Property Value ISvgLength"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLength.html",
    "title": "Class SvgAnimatedLength | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Used for attributes of basic type 'length' which can be animated. public sealed class SvgAnimatedLength : ISvgAnimatedLength Inheritance object SvgAnimatedLength Implements ISvgAnimatedLength Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedLength(ISvgLength, ISvgLength) SvgAnimatedLength(SvgElement, string, SvgLengthDirection, string) Used for attributes of basic type 'length' which can be animated. SvgAnimatedLength(SvgElement, string, SvgLengthDirection, string, string) Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'baseVal'. BaseVal The base value of the given attribute before applying any animations."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.-ctor.html",
    "title": "Constructor SvgAnimatedLengthList | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedLengthList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedLengthList(string, string, SvgElement, SvgLengthDirection) public SvgAnimatedLengthList(string propertyName, string str, SvgElement ownerElement, SvgLengthDirection direction) Parameters propertyName string str string ownerElement SvgElement direction SvgLengthDirection"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. public ISvgLengthList AnimVal { get; } Property Value ISvgLengthList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations. public ISvgLengthList BaseVal { get; } Property Value ISvgLengthList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.Count.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Count Gets the number of elements contained in the ISvgAnimatedLengthList. public int Count { get; } Property Value int The number of elements contained in the ISvgAnimatedLengthList."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.Item.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll this[uint] Gets the element at the specified index. public ISvgAnimatedLength this[uint index] { get; } Parameters index uint The zero-based index of the element to get or set. Property Value ISvgAnimatedLength The element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedLengthList.html",
    "title": "Class SvgAnimatedLengthList | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedLengthList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgAnimatedLengthList. public sealed class SvgAnimatedLengthList : ISvgAnimatedLengthList Inheritance object SvgAnimatedLengthList Implements ISvgAnimatedLengthList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedLengthList(string, string, SvgElement, SvgLengthDirection) Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations. Count Gets the number of elements contained in the ISvgAnimatedLengthList. this[uint] Gets the element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.-ctor.html",
    "title": "Constructor SvgAnimatedNumber | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedNumber(string) public SvgAnimatedNumber(string str) Parameters str string SvgAnimatedNumber(double) public SvgAnimatedNumber(double value) Parameters value double SvgAnimatedNumber(double, double) public SvgAnimatedNumber(double baseVal, double animVal) Parameters baseVal double animVal double"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. public double AnimVal { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if the value is read only. public double BaseVal { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumber.html",
    "title": "Class SvgAnimatedNumber | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgAnimatedNumber. public sealed class SvgAnimatedNumber : ISvgAnimatedNumber Inheritance object SvgAnimatedNumber Implements ISvgAnimatedNumber Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedNumber(double) SvgAnimatedNumber(double, double) SvgAnimatedNumber(string) Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if the value is read only."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.-ctor.html",
    "title": "Constructor SvgAnimatedNumberList | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedNumberList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedNumberList() public SvgAnimatedNumberList() SvgAnimatedNumberList(string) public SvgAnimatedNumberList(string str) Parameters str string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, then this attribute contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, then this attribute contains the same value as 'BaseVal'. public ISvgNumberList AnimVal { get; } Property Value ISvgNumberList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations public ISvgNumberList BaseVal { get; } Property Value ISvgNumberList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.Count.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Count Gets the number of elements contained in the ISvgAnimatedNumberList. public int Count { get; } Property Value int The number of elements contained in the ISvgAnimatedNumberList."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.Empty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.Empty.html",
    "title": "Field Empty | SharpVectors Documentation",
    "keywords": "Field Empty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public static readonly SvgAnimatedNumberList Empty Returns SvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.Item.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll this[uint] Gets the element at the specified index. public ISvgAnimatedNumber this[uint index] { get; } Parameters index uint The zero-based index of the element to get or set. Property Value ISvgAnimatedNumber The element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedNumberList.html",
    "title": "Class SvgAnimatedNumberList | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedNumberList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgAnimatedNumberList. public sealed class SvgAnimatedNumberList : ISvgAnimatedNumberList Inheritance object SvgAnimatedNumberList Implements ISvgAnimatedNumberList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedNumberList() SvgAnimatedNumberList(string) Fields Empty Properties AnimVal If the given attribute or property is being animated, then this attribute contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, then this attribute contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations Count Gets the number of elements contained in the ISvgAnimatedNumberList. this[uint] Gets the element at the specified index."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.-ctor.html",
    "title": "Constructor SvgAnimatedPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedPreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedPreserveAspectRatio(string, SvgElement) public SvgAnimatedPreserveAspectRatio(string attr, SvgElement ownerElement) Parameters attr string ownerElement SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same public ISvgPreserveAspectRatio AnimVal { get; } Property Value ISvgPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations. public ISvgPreserveAspectRatio BaseVal { get; } Property Value ISvgPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedPreserveAspectRatio.html",
    "title": "Class SvgAnimatedPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedPreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgAnimatedPreserveAspectRatio. public sealed class SvgAnimatedPreserveAspectRatio : ISvgAnimatedPreserveAspectRatio Inheritance object SvgAnimatedPreserveAspectRatio Implements ISvgAnimatedPreserveAspectRatio Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedPreserveAspectRatio(string, SvgElement) Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same BaseVal The base value of the given attribute before applying any animations."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedRect.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedRect.-ctor.html",
    "title": "Constructor SvgAnimatedRect | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedRect(string) public SvgAnimatedRect(string str) Parameters str string SvgAnimatedRect(SvgRect) public SvgAnimatedRect(SvgRect rect) Parameters rect SvgRect"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedRect.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedRect.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. public ISvgRect AnimVal { get; } Property Value ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedRect.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedRect.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations. public ISvgRect BaseVal { get; } Property Value ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedRect.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedRect.html",
    "title": "Class SvgAnimatedRect | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgAnimatedRect : ISvgAnimatedRect Inheritance object SvgAnimatedRect Implements ISvgAnimatedRect Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedRect(SvgRect) SvgAnimatedRect(string) Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are readonly. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedString.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedString.-ctor.html",
    "title": "Constructor SvgAnimatedString | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedString(string) public SvgAnimatedString(string str) Parameters str string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedString.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedString.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. public string AnimVal { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedString.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedString.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if this value is read only. public string BaseVal { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedString.html",
    "title": "Class SvgAnimatedString | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgAnimatedString. public sealed class SvgAnimatedString : ISvgAnimatedString Inheritance object SvgAnimatedString Implements ISvgAnimatedString Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedString(string) Properties AnimVal If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as 'BaseVal'. BaseVal The base value of the given attribute before applying any animations. Inheriting class should throw an exception if this value is read only."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.-ctor.html",
    "title": "Constructor SvgAnimatedTransformList | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimatedTransformList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimatedTransformList(string) public SvgAnimatedTransformList(string transform) Parameters transform string"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.AnimVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.AnimVal.html",
    "title": "Property AnimVal | SharpVectors Documentation",
    "keywords": "Property AnimVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimVal public ISvgTransformList AnimVal { get; } Property Value ISvgTransformList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.BaseVal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.BaseVal.html",
    "title": "Property BaseVal | SharpVectors Documentation",
    "keywords": "Property BaseVal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseVal public ISvgTransformList BaseVal { get; } Property Value ISvgTransformList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimatedTransformList.html",
    "title": "Class SvgAnimatedTransformList | SharpVectors Documentation",
    "keywords": "Class SvgAnimatedTransformList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Used for the various attributes which specify a set of transformations, such as the transform attribute which is available for many of Svg's elements, and which can be animated. public sealed class SvgAnimatedTransformList : ISvgAnimatedTransformList Inheritance object SvgAnimatedTransformList Implements ISvgAnimatedTransformList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAnimatedTransformList(string) Properties AnimVal BaseVal"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.-ctor.html",
    "title": "Constructor SvgAnimationElement | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimationElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgAnimationElement(string, string, string, SvgDocument) protected SvgAnimationElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.Begin.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.Begin.html",
    "title": "Property Begin | SharpVectors Documentation",
    "keywords": "Property Begin Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Begin Gets or sets values of values that defines when the element should begin (i.e. become active). public string Begin { get; set; } Property Value string The attribute value is a semicolon separated list of values. If set to \"indefinite\", the begin of the animation will be determined by a BeginElement() method call or a hyperlink targeted to the element."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.BeginElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.BeginElement.html",
    "title": "Method BeginElement | SharpVectors Documentation",
    "keywords": "Method BeginElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BeginElement() Creates a begin instance time for the current time. The new instance time is added to the begin instance times list. The behavior of this method is equivalent to BeginElementAt(0). public void BeginElement()"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.BeginElementAt.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.BeginElementAt.html",
    "title": "Method BeginElementAt | SharpVectors Documentation",
    "keywords": "Method BeginElementAt Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BeginElementAt(float) Creates a begin instance time for the current time plus the specified offset. The new instance time is added to the begin instance times list. public void BeginElementAt(float offset) Parameters offset float The offset from the current document time, in seconds, at which to begin the element."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.CurrentTime.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.CurrentTime.html",
    "title": "Property CurrentTime | SharpVectors Documentation",
    "keywords": "Property CurrentTime Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurrentTime Gets the current time in seconds relative to time zero for the given time container. public float CurrentTime { get; } Property Value float The current time in seconds relative to time zero for the given time container."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.Duration.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.Duration.html",
    "title": "Property Duration | SharpVectors Documentation",
    "keywords": "Property Duration Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Duration Gets or sets a value that specifies the simple duration. public string Duration { get; set; } Property Value string The attribute value can be one of the following: Clock-value (time duration) Specifies the length of the simple duration in presentation time. Value must be greater than 0. media Specifies the simple duration as the intrinsic media duration. This is only valid for elements that define media. (For SVG's animation elements, if 'media' is specified, the attribute will be ignored.) indefiniteSpecifies the simple duration as indefinite. If the animation does not have a \"dur\" attribute, the simple duration is indefinite."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.End.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.End.html",
    "title": "Property End | SharpVectors Documentation",
    "keywords": "Property End Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll End Gets or sets the attribute that defines an end value for the animation that can constrain the active duration. public string End { get; set; } Property Value string The attribute value is a semicolon separated list of values. A value of \"indefinite\" specifies that the end of the animation will be determined by an EndElement() method call (the animation DOM methods are described in DOM interfaces)."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.EndElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.EndElement.html",
    "title": "Method EndElement | SharpVectors Documentation",
    "keywords": "Method EndElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndElement() Creates an end instance time for the current time. The new instance time is added to the end instance times list. The behavior of this method is equivalent to EndElementAt(0). public void EndElement()"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.EndElementAt.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.EndElementAt.html",
    "title": "Method EndElementAt | SharpVectors Documentation",
    "keywords": "Method EndElementAt Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndElementAt(float) Creates a end instance time for the current time plus the specified offset. The new instance time is added to the end instance times list. public void EndElementAt(float offset) Parameters offset float The offset from the current document time, in seconds, at which to end the element."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.Fill.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.Fill.html",
    "title": "Property Fill | SharpVectors Documentation",
    "keywords": "Property Fill Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Fill Gets or sets the attribute can be used to maintain the value of the animation after the active duration of the animation element ends. public string Fill { get; set; } Property Value string This attribute can have the following values: freeze The animation effect F(t) is defined to freeze the effect value at the last value of the active duration. The animation effect is \"frozen\" for the remainder of the document duration. remove The animation effect is removed (no longer applied) when the active duration of the animation is over. After the active end of the animation, the animation no longer affects the target. This is the default value."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.Maximum.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.Maximum.html",
    "title": "Property Maximum | SharpVectors Documentation",
    "keywords": "Property Maximum Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Maximum Gets or sets the value that specifies the maximum value of the active duration. public string Maximum { get; set; } Property Value string The attribute value can be either of the following: Clock-value Specifies the length of the maximum value of the active duration, measured in local time. Value must be greater than 0. media Specifies the maximum value of the active duration as the intrinsic media duration. This is only valid for elements that define media. (For SVG's animation elements, if 'media' is specified, the attribute will be ignored.) There is no default value for \"max\". This does not constrain the active duration at all."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.Minimum.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.Minimum.html",
    "title": "Property Minimum | SharpVectors Documentation",
    "keywords": "Property Minimum Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Minimum Gets or sets a value that specifies the minimum value of the active duration. public string Minimum { get; set; } Property Value string The attribute value can be either of the following: Clock-value Specifies the length of the minimum value of the active duration, measured in local time. Value must be greater than 0. media Specifies the minimum value of the active duration as the intrinsic media duration. This is only valid for elements that define media. (For SVG's animation elements, if 'media' is specified, the attribute will be ignored.)"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public XmlElement ReferencedElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Animation"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.RepeatCount.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.RepeatCount.html",
    "title": "Property RepeatCount | SharpVectors Documentation",
    "keywords": "Property RepeatCount Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RepeatCount Gets or sets a value that specifies the number of iterations of the animation function. public string RepeatCount { get; set; } Property Value string It can have the following attribute values: numeric value This is a (base 10) \"floating point\" numeric value that specifies the number of iterations. It can include partial iterations expressed as fraction values. A fractional value describes a portion of the simple duration. Values must be greater than 0. indefinite The animation is defined to repeat indefinitely (i.e. until the document ends)."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.RepeatDuration.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.RepeatDuration.html",
    "title": "Property RepeatDuration | SharpVectors Documentation",
    "keywords": "Property RepeatDuration Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RepeatDuration Gets or sets a value that specifies the total duration for repeat. public string RepeatDuration { get; set; } Property Value string It can have the following attribute values: Clock-valueSpecifies the duration in presentation time to repeat the animation function f(t). indefiniteThe animation is defined to repeat indefinitely (i.e. until the document ends)."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.Restart.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.Restart.html",
    "title": "Property Restart | SharpVectors Documentation",
    "keywords": "Property Restart Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Restart Gets or sets the attribute that controls the circumstances under which an animation is restarted. public string Restart { get; set; } Property Value string alwaysThe animation can be restarted at any time. This is the default value. whenNotActive The animation can only be restarted when it is not active (i.e. after the active end). Attempts to restart the animation during its active duration are ignored. never The element cannot be restarted for the remainder of the current simple duration of the parent time container. (In the case of SVG, since the parent time container is the SVG document fragment, then the animation cannot be restarted for the remainder of the document duration.)"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.SimpleDuration.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.SimpleDuration.html",
    "title": "Property SimpleDuration | SharpVectors Documentation",
    "keywords": "Property SimpleDuration Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SimpleDuration Gets the number of seconds for the simple duration for this animation. If the simple duration is undefined (e.g., the end time is indefinite), then an exception is raised. public float SimpleDuration { get; } Property Value float The number of seconds for the simple duration for this animation. Exceptions DomException The simple duration is not determined on the given element."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.StartTime.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.StartTime.html",
    "title": "Property StartTime | SharpVectors Documentation",
    "keywords": "Property StartTime Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartTime Gets the begin time, in seconds, for this animation element's current interval, if it exists, regardless of whether the interval has begun yet. If there is no current interval, then a DomException with code INVALID_STATE_ERR is thrown. public float StartTime { get; } Property Value float The start time, in seconds, of this animation element's current interval. Exceptions DomException The animation element does not have a current interval."
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.TargetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.TargetElement.html",
    "title": "Property TargetElement | SharpVectors Documentation",
    "keywords": "Property TargetElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TargetElement Gets the element which is being animated. public ISvgElement TargetElement { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement._eventTarget.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement._eventTarget.html",
    "title": "Field _eventTarget | SharpVectors Documentation",
    "keywords": "Field _eventTarget Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected EventTarget _eventTarget Returns EventTarget"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement._externalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement._externalResourcesRequired.html",
    "title": "Field _externalResourcesRequired | SharpVectors Documentation",
    "keywords": "Field _externalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected SvgExternalResourcesRequired _externalResourcesRequired Returns SvgExternalResourcesRequired"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement._svgTests.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement._svgTests.html",
    "title": "Field _svgTests | SharpVectors Documentation",
    "keywords": "Field _svgTests Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected SvgTests _svgTests Returns SvgTests"
  },
  "api/SharpVectors.Dom.Svg.SvgAnimationElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgAnimationElement.html",
    "title": "Class SvgAnimationElement | SharpVectors Documentation",
    "keywords": "Class SvgAnimationElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgAnimationElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgAnimationElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgUriReference, ISvgExternalResourcesRequired, IElementTimeControl, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgAnimationElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgAnimationElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgUriReference ISvgExternalResourcesRequired IElementTimeControl IEventTarget Derived SvgAnimateBaseElement SvgAnimateMotionElement SvgAnimateSetElement SvgAnimateTransformElement Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgAnimationElement(string, string, string, SvgDocument) Fields _eventTarget _externalResourcesRequired _svgTests Properties Begin Gets or sets values of values that defines when the element should begin (i.e. become active). CurrentTime Gets the current time in seconds relative to time zero for the given time container. Duration Gets or sets a value that specifies the simple duration. End Gets or sets the attribute that defines an end value for the animation that can constrain the active duration. ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Fill Gets or sets the attribute can be used to maintain the value of the animation after the active duration of the animation element ends. Href IsRenderable Gets a value indicating whether this SVG element is renderable. Maximum Gets or sets the value that specifies the maximum value of the active duration. Minimum Gets or sets a value that specifies the minimum value of the active duration. ReferencedElement RenderingHint Gets a value providing a hint on the rendering defined by this element. RepeatCount Gets or sets a value that specifies the number of iterations of the animation function. RepeatDuration Gets or sets a value that specifies the total duration for repeat. RequiredExtensions RequiredFeatures Restart Gets or sets the attribute that controls the circumstances under which an animation is restarted. SimpleDuration Gets the number of seconds for the simple duration for this animation. If the simple duration is undefined (e.g., the end time is indefinite), then an exception is raised. StartTime Gets the begin time, in seconds, for this animation element's current interval, if it exists, regardless of whether the interval has begun yet. If there is no current interval, then a DomException with code INVALID_STATE_ERR is thrown. SystemLanguage TargetElement Gets the element which is being animated. Methods BeginElement() Creates a begin instance time for the current time. The new instance time is added to the begin instance times list. The behavior of this method is equivalent to BeginElementAt(0). BeginElementAt(float) Creates a begin instance time for the current time plus the specified offset. The new instance time is added to the begin instance times list. EndElement() Creates an end instance time for the current time. The new instance time is added to the end instance times list. The behavior of this method is equivalent to EndElementAt(0). EndElementAt(float) Creates a end instance time for the current time plus the specified offset. The new instance time is added to the end instance times list. HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.-ctor.html",
    "title": "Constructor SvgCircleElement | SharpVectors Documentation",
    "keywords": "Constructor SvgCircleElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgCircleElement(string, string, string, SvgDocument) public SvgCircleElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.Cx.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.Cx.html",
    "title": "Property Cx | SharpVectors Documentation",
    "keywords": "Property Cx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Cx Corresponds to attribute cx on the given 'circle' element. public ISvgAnimatedLength Cx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.Cy.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.Cy.html",
    "title": "Property Cy | SharpVectors Documentation",
    "keywords": "Property Cy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Cy Corresponds to attribute cy on the given 'circle' element. public ISvgAnimatedLength Cy { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.Invalidate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.Invalidate.html",
    "title": "Method Invalidate | SharpVectors Documentation",
    "keywords": "Method Invalidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Invalidate() public void Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.R.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.R.html",
    "title": "Property R | SharpVectors Documentation",
    "keywords": "Property R Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll R Corresponds to attribute r on the given 'circle' element. public ISvgAnimatedLength R { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgCircleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgCircleElement.html",
    "title": "Class SvgCircleElement | SharpVectors Documentation",
    "keywords": "Class SvgCircleElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The ISvgCircleElement interface corresponds to the 'circle' element. public sealed class SvgCircleElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgCircleElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgCircleElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgCircleElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgCircleElement(string, string, string, SvgDocument) Properties Cx Corresponds to attribute cx on the given 'circle' element. Cy Corresponds to attribute cy on the given 'circle' element. ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. R Corresponds to attribute r on the given 'circle' element. RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.-ctor.html",
    "title": "Constructor SvgClipPathElement | SharpVectors Documentation",
    "keywords": "Constructor SvgClipPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgClipPathElement(string, string, string, SvgDocument) public SvgClipPathElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.ClipPathUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.ClipPathUnits.html",
    "title": "Property ClipPathUnits | SharpVectors Documentation",
    "keywords": "Property ClipPathUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ClipPathUnits public ISvgAnimatedEnumeration ClipPathUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Clipping"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgClipPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgClipPathElement.html",
    "title": "Class SvgClipPathElement | SharpVectors Documentation",
    "keywords": "Class SvgClipPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgClipPathElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgClipPathElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgClipPathElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgClipPathElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgTransformableElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgClipPathElement(string, string, string, SvgDocument) Properties ClipPathUnits ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. IsRenderable Gets a value indicating whether this SVG element is renderable. RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage Methods HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.-ctor.html",
    "title": "Constructor SvgColor | SharpVectors Documentation",
    "keywords": "Constructor SvgColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgColor() protected SvgColor() SvgColor(string) public SvgColor(string str) Parameters str string"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.ColorType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.ColorType.html",
    "title": "Property ColorType | SharpVectors Documentation",
    "keywords": "Property ColorType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ColorType public SvgColorType ColorType { get; } Property Value SvgColorType"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.CssText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CssText A string representation of the current value. public override string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Svg.SvgColor.IccColor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.IccColor.html",
    "title": "Property IccColor | SharpVectors Documentation",
    "keywords": "Property IccColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IccColor public ISvgIccColor IccColor { get; } Property Value ISvgIccColor"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.ParseColor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.ParseColor.html",
    "title": "Method ParseColor | SharpVectors Documentation",
    "keywords": "Method ParseColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseColor(string) protected void ParseColor(string str) Parameters str string"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.RgbColor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.RgbColor.html",
    "title": "Property RgbColor | SharpVectors Documentation",
    "keywords": "Property RgbColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RgbColor public ICssColor RgbColor { get; } Property Value ICssColor"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.SetColor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.SetColor.html",
    "title": "Method SetColor | SharpVectors Documentation",
    "keywords": "Method SetColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetColor(SvgColorType, string, string) public void SetColor(SvgColorType colorType, string rgbColor, string iccColor) Parameters colorType SvgColorType rgbColor string iccColor string"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.SetRgbColor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.SetRgbColor.html",
    "title": "Method SetRgbColor | SharpVectors Documentation",
    "keywords": "Method SetRgbColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetRgbColor(string) public void SetRgbColor(string rgbColor) Parameters rgbColor string"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.SetRgbColorIccColor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.SetRgbColorIccColor.html",
    "title": "Method SetRgbColorIccColor | SharpVectors Documentation",
    "keywords": "Method SetRgbColorIccColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetRgbColorIccColor(string, string) public void SetRgbColorIccColor(string rgbColor, string iccColor) Parameters rgbColor string iccColor string"
  },
  "api/SharpVectors.Dom.Svg.SvgColor._rgbColor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor._rgbColor.html",
    "title": "Field _rgbColor | SharpVectors Documentation",
    "keywords": "Field _rgbColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected CssColor _rgbColor Returns CssColor"
  },
  "api/SharpVectors.Dom.Svg.SvgColor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColor.html",
    "title": "Class SvgColor | SharpVectors Documentation",
    "keywords": "Class SvgColor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgColor. public class SvgColor : CssValue, ISvgColor, ICssValue Inheritance object CssValue SvgColor Implements ISvgColor ICssValue Derived SvgPaint WpfSvgColor Inherited Members CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetAbsoluteValue(string, XmlElement) CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgColor() SvgColor(string) Fields _rgbColor Properties ColorType CssText A string representation of the current value. IccColor RgbColor Methods ParseColor(string) SetColor(SvgColorType, string, string) SetRgbColor(string) SetRgbColorIccColor(string, string)"
  },
  "api/SharpVectors.Dom.Svg.SvgColorProfileElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorProfileElement.-ctor.html",
    "title": "Constructor SvgColorProfileElement | SharpVectors Documentation",
    "keywords": "Constructor SvgColorProfileElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgColorProfileElement(string, string, string, SvgDocument) public SvgColorProfileElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgColorProfileElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorProfileElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgColorProfileElement.Local.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorProfileElement.Local.html",
    "title": "Property Local | SharpVectors Documentation",
    "keywords": "Property Local Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Local public string Local { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgColorProfileElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorProfileElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public XmlElement ReferencedElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgColorProfileElement.RenderingIntent.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorProfileElement.RenderingIntent.html",
    "title": "Property RenderingIntent | SharpVectors Documentation",
    "keywords": "Property RenderingIntent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingIntent public ushort RenderingIntent { get; set; } Property Value ushort"
  },
  "api/SharpVectors.Dom.Svg.SvgColorProfileElement.UriReference.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorProfileElement.UriReference.html",
    "title": "Property UriReference | SharpVectors Documentation",
    "keywords": "Property UriReference Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UriReference public SvgUriReference UriReference { get; } Property Value SvgUriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgColorProfileElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorProfileElement.html",
    "title": "Class SvgColorProfileElement | SharpVectors Documentation",
    "keywords": "Class SvgColorProfileElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgColorProfileElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgColorProfileElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgColorProfileElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgColorProfileElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgColorProfileElement(string, string, string, SvgDocument) Properties Href Local ReferencedElement RenderingIntent UriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgColorType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgColorType.html",
    "title": "Enum SvgColorType | SharpVectors Documentation",
    "keywords": "Enum SvgColorType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Basic color type enumeration. public enum SvgColorType Fields Unknown = 0 RgbColor = 1 RgbColorIccColor = 2 CurrentColor = 3 SystemColor = 4"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.-ctor.html",
    "title": "Constructor SvgComponentTransferFunctionElement | SharpVectors Documentation",
    "keywords": "Constructor SvgComponentTransferFunctionElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgComponentTransferFunctionElement(string, string, string, SvgDocument) protected SvgComponentTransferFunctionElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Amplitude.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Amplitude.html",
    "title": "Property Amplitude | SharpVectors Documentation",
    "keywords": "Property Amplitude Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Amplitude When type=\"gamma\", the amplitude of the gamma function. public ISvgAnimatedNumber Amplitude { get; } Property Value ISvgAnimatedNumber amplitude = \"number\" The initial value for amplitude is 1."
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Exponent.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Exponent.html",
    "title": "Property Exponent | SharpVectors Documentation",
    "keywords": "Property Exponent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Exponent When type=\"gamma\", the exponent of the gamma function. public ISvgAnimatedNumber Exponent { get; } Property Value ISvgAnimatedNumber exponent = \"number\" The initial value for exponent is 1."
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Intercept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Intercept.html",
    "title": "Property Intercept | SharpVectors Documentation",
    "keywords": "Property Intercept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Intercept When type=\"linear\", the intercept of the linear function. public ISvgAnimatedNumber Intercept { get; } Property Value ISvgAnimatedNumber slope = \"number\" The initial value for intercept is 0."
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Offset.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Offset.html",
    "title": "Property Offset | SharpVectors Documentation",
    "keywords": "Property Offset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Offset When type=\"gamma\", the offset of the gamma function. public ISvgAnimatedNumber Offset { get; } Property Value ISvgAnimatedNumber offset = \"number\" The initial value for offset is 0."
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Slope.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Slope.html",
    "title": "Property Slope | SharpVectors Documentation",
    "keywords": "Property Slope Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Slope When type=\"linear\", the slope of the linear function. public ISvgAnimatedNumber Slope { get; } Property Value ISvgAnimatedNumber slope = \"number\" The initial value for slope is 1."
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.TableValues.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.TableValues.html",
    "title": "Property TableValues | SharpVectors Documentation",
    "keywords": "Property TableValues Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TableValues Corresponds to attribute 'tableValues' on the given element. public ISvgAnimatedNumberList TableValues { get; } Property Value ISvgAnimatedNumberList tableValues = \"(list of numbers)\""
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Type Corresponds to attribute 'type' on the given element. public ISvgAnimatedEnumeration Type { get; } Property Value ISvgAnimatedEnumeration type = \"identity | table | discrete | linear | gamma\" Indicates the type of component transfer function. The type of function determines the applicability of the other attributes. An enumeration of the type SvgFilterTransferType. The default value is Identity."
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._amplitude.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._amplitude.html",
    "title": "Field _amplitude | SharpVectors Documentation",
    "keywords": "Field _amplitude Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedNumber _amplitude Returns ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._exponent.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._exponent.html",
    "title": "Field _exponent | SharpVectors Documentation",
    "keywords": "Field _exponent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedNumber _exponent Returns ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._intercept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._intercept.html",
    "title": "Field _intercept | SharpVectors Documentation",
    "keywords": "Field _intercept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedNumber _intercept Returns ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._offset.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._offset.html",
    "title": "Field _offset | SharpVectors Documentation",
    "keywords": "Field _offset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedNumber _offset Returns ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._reSeparators.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._reSeparators.html",
    "title": "Field _reSeparators | SharpVectors Documentation",
    "keywords": "Field _reSeparators Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected static readonly Regex _reSeparators Returns Regex"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._slope.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._slope.html",
    "title": "Field _slope | SharpVectors Documentation",
    "keywords": "Field _slope Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedNumber _slope Returns ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._tableValues.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._tableValues.html",
    "title": "Field _tableValues | SharpVectors Documentation",
    "keywords": "Field _tableValues Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedNumberList _tableValues Returns ISvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._type.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement._type.html",
    "title": "Field _type | SharpVectors Documentation",
    "keywords": "Field _type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedEnumeration _type Returns ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgComponentTransferFunctionElement.html",
    "title": "Class SvgComponentTransferFunctionElement | SharpVectors Documentation",
    "keywords": "Class SvgComponentTransferFunctionElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This abstract defines a base class used by the component transfer function interfaces. public abstract class SvgComponentTransferFunctionElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Derived SvgFEFuncAElement SvgFEFuncBElement SvgFEFuncGElement SvgFEFuncRElement Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgComponentTransferFunctionElement(string, string, string, SvgDocument) Fields _amplitude _exponent _intercept _offset _reSeparators _slope _tableValues _type Properties Amplitude When type=\"gamma\", the amplitude of the gamma function. Exponent When type=\"gamma\", the exponent of the gamma function. Intercept When type=\"linear\", the intercept of the linear function. IsRenderable Gets a value indicating whether this SVG element is renderable. Offset When type=\"gamma\", the offset of the gamma function. Slope When type=\"linear\", the slope of the linear function. TableValues Corresponds to attribute 'tableValues' on the given element. Type Corresponds to attribute 'type' on the given element."
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.-ctor.html",
    "title": "Constructor SvgDefsElement | SharpVectors Documentation",
    "keywords": "Constructor SvgDefsElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgDefsElement(string, string, string, SvgDocument) public SvgDefsElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment"
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgDefsElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDefsElement.html",
    "title": "Class SvgDefsElement | SharpVectors Documentation",
    "keywords": "Class SvgDefsElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgDefsElement interface corresponds to the 'defs' element. public sealed class SvgDefsElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgDefsElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgDefsElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgDefsElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgTransformableElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgDefsElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. IsRenderable Gets a value indicating whether this SVG element is renderable. RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage Methods HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgDescElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDescElement.-ctor.html",
    "title": "Constructor SvgDescElement | SharpVectors Documentation",
    "keywords": "Constructor SvgDescElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgDescElement(string, string, string, SvgDocument) public SvgDescElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgDescElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDescElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgDescElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDescElement.html",
    "title": "Class SvgDescElement | SharpVectors Documentation",
    "keywords": "Class SvgDescElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgDescElement interface corresponds to the 'desc' element. public sealed class SvgDescElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgDescElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgDescElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgDescElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgDescElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.-ctor.html",
    "title": "Constructor SvgDocument | SharpVectors Documentation",
    "keywords": "Constructor SvgDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgDocument(SvgWindow) public SvgDocument(SvgWindow window) Parameters window SvgWindow"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.BaseURI.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.BaseURI.html",
    "title": "Property BaseURI | SharpVectors Documentation",
    "keywords": "Property BaseURI Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseURI Gets the base URI of the current node. public override string BaseURI { get; } Property Value string The location from which the node was loaded."
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.CreateElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.CreateElement.html",
    "title": "Method CreateElement | SharpVectors Documentation",
    "keywords": "Method CreateElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateElement(string, string, string) Creates an element with the specified Prefix, LocalName, and NamespaceURI. public override XmlElement CreateElement(string prefix, string localName, string ns) Parameters prefix string The prefix of the new element (if any). String.Empty and null are equivalent. localName string The local name of the new element. ns string Returns XmlElement The new XmlElement."
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.CustomSettings.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.CustomSettings.html",
    "title": "Property CustomSettings | SharpVectors Documentation",
    "keywords": "Property CustomSettings Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CustomSettings public XmlReaderSettings CustomSettings { get; set; } Property Value XmlReaderSettings"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.Domain.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.Domain.html",
    "title": "Property Domain | SharpVectors Documentation",
    "keywords": "Property Domain Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Domain The domain name of the server that served the document, or a null string if the server cannot be identified by a domain name. public string Domain { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.DotsPerInch.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.DotsPerInch.html",
    "title": "Field DotsPerInch | SharpVectors Documentation",
    "keywords": "Field DotsPerInch Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public static readonly int DotsPerInch Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.Dpi.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.Dpi.html",
    "title": "Property Dpi | SharpVectors Documentation",
    "keywords": "Property Dpi Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Dpi Get or sets the dots per inch at which the objects should be rendered. public double Dpi { get; set; } Property Value double The current dots per inch value."
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.ElementMap.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.ElementMap.html",
    "title": "Property ElementMap | SharpVectors Documentation",
    "keywords": "Property ElementMap Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ElementMap public IDictionary<string, XmlElement> ElementMap { get; } Property Value IDictionary<string, XmlElement>"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.ElementUniqueMap.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.ElementUniqueMap.html",
    "title": "Property ElementUniqueMap | SharpVectors Documentation",
    "keywords": "Property ElementUniqueMap Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ElementUniqueMap public IDictionary<string, SvgElement> ElementUniqueMap { get; } Property Value IDictionary<string, SvgElement>"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.FontFamilies.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.FontFamilies.html",
    "title": "Property FontFamilies | SharpVectors Documentation",
    "keywords": "Property FontFamilies Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontFamilies public IList<SvgFontFamily> FontFamilies { get; } Property Value IList<SvgFontFamily>"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.GetElementById.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.GetElementById.html",
    "title": "Method GetElementById | SharpVectors Documentation",
    "keywords": "Method GetElementById Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetElementById(string) Gets the XmlElement with the specified ID. public override XmlElement GetElementById(string elementId) Parameters elementId string The attribute ID to match. Returns XmlElement The XmlElement with the matching ID or null if no matching element is found."
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.GetFontUrls.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.GetFontUrls.html",
    "title": "Method GetFontUrls | SharpVectors Documentation",
    "keywords": "Method GetFontUrls Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetFontUrls() protected virtual IList<Tuple<string, SvgFontFaceElement>> GetFontUrls() Returns IList<Tuple<string, SvgFontFaceElement>>"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.GetFonts.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.GetFonts.html",
    "title": "Method GetFonts | SharpVectors Documentation",
    "keywords": "Method GetFonts Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetFonts(string) public IList<SvgFontElement> GetFonts(string fontFamily) Parameters fontFamily string Returns IList<SvgFontElement> GetFonts(IList<string>) public IList<SvgFontElement> GetFonts(IList<string> fontFamilies) Parameters fontFamilies IList<string> Returns IList<SvgFontElement>"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.GetNodeByUri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.GetNodeByUri.html",
    "title": "Method GetNodeByUri | SharpVectors Documentation",
    "keywords": "Method GetNodeByUri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetNodeByUri(Uri) public XmlNode GetNodeByUri(Uri absoluteUri) Parameters absoluteUri Uri Returns XmlNode GetNodeByUri(string) public XmlNode GetNodeByUri(string absoluteUrl) Parameters absoluteUrl string Returns XmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.GetSvgById.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.GetSvgById.html",
    "title": "Method GetSvgById | SharpVectors Documentation",
    "keywords": "Method GetSvgById Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetSvgById(string) public SvgElement GetSvgById(string elementId) Parameters elementId string Returns SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.GetSvgByUniqueId.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.GetSvgByUniqueId.html",
    "title": "Method GetSvgByUniqueId | SharpVectors Documentation",
    "keywords": "Method GetSvgByUniqueId Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetSvgByUniqueId(Guid) public SvgElement GetSvgByUniqueId(Guid uniqueId) Parameters uniqueId Guid Returns SvgElement GetSvgByUniqueId(string) public SvgElement GetSvgByUniqueId(string uniqueId) Parameters uniqueId string Returns SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.GlobalSettings.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.GlobalSettings.html",
    "title": "Property GlobalSettings | SharpVectors Documentation",
    "keywords": "Property GlobalSettings Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GlobalSettings public static XmlReaderSettings GlobalSettings { get; set; } Property Value XmlReaderSettings"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.IsFontsLoaded.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.IsFontsLoaded.html",
    "title": "Property IsFontsLoaded | SharpVectors Documentation",
    "keywords": "Property IsFontsLoaded Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsFontsLoaded public bool IsFontsLoaded { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.IsGZipped.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.IsGZipped.html",
    "title": "Method IsGZipped | SharpVectors Documentation",
    "keywords": "Method IsGZipped Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsGZipped(Stream) public static bool IsGZipped(Stream stream) Parameters stream Stream Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.Load.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.Load.html",
    "title": "Method Load | SharpVectors Documentation",
    "keywords": "Method Load Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Load(string) Loads the XML document from the specified URL. public override void Load(string filename) Parameters filename string URL for the file containing the XML document to load. Load(string, Stream) Loads the XML document from the specified stream but with the specified base URL public void Load(string baseUrl, Stream stream) Parameters baseUrl string Base URL for the stream from which the XML document is loaded. stream Stream The stream containing the XML document to load. Load(TextReader) Loads the XML document from the specified TextReader. public override void Load(TextReader txtReader) Parameters txtReader TextReader Load(Stream) Loads the XML document from the specified stream. public override void Load(Stream inStream) Parameters inStream Stream The stream containing the XML document to load."
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.NamespaceManager.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.NamespaceManager.html",
    "title": "Property NamespaceManager | SharpVectors Documentation",
    "keywords": "Property NamespaceManager Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NamespaceManager public XmlNamespaceManager NamespaceManager { get; } Property Value XmlNamespaceManager"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.OnLoaded.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.OnLoaded.html",
    "title": "Method OnLoaded | SharpVectors Documentation",
    "keywords": "Method OnLoaded Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OnLoaded() protected override void OnLoaded()"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.OwnerDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.OwnerDocument.html",
    "title": "Property OwnerDocument | SharpVectors Documentation",
    "keywords": "Property OwnerDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OwnerDocument public SvgDocument OwnerDocument { get; } Property Value SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.Referrer.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.Referrer.html",
    "title": "Property Referrer | SharpVectors Documentation",
    "keywords": "Property Referrer Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Referrer Returns the URI of the page that linked to this page. The value is an empty string if the user navigated to the page directly (not through a link, but, for example, via a bookmark). public string Referrer { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.RegisterFont.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.RegisterFont.html",
    "title": "Method RegisterFont | SharpVectors Documentation",
    "keywords": "Method RegisterFont Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RegisterFont(SvgFontElement) public void RegisterFont(SvgFontElement svgFont) Parameters svgFont SvgFontElement"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.ResolveNamespace.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.ResolveNamespace.html",
    "title": "Event ResolveNamespace | SharpVectors Documentation",
    "keywords": "Event ResolveNamespace Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Occurs when a namespace is being resolved. public event SvgDocument.ResolveNamespaceDelegate ResolveNamespace Returns SvgDocument.ResolveNamespaceDelegate"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.ResolveNamespaceDelegate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.ResolveNamespaceDelegate.html",
    "title": "Delegate SvgDocument.ResolveNamespaceDelegate | SharpVectors Documentation",
    "keywords": "Delegate SvgDocument.ResolveNamespaceDelegate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Namespace resolution event delegate. public delegate void SvgDocument.ResolveNamespaceDelegate(object sender, SvgResolveNamespaceEventArgs e) Parameters sender object e SvgResolveNamespaceEventArgs"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.ResolveUri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.ResolveUri.html",
    "title": "Method ResolveUri | SharpVectors Documentation",
    "keywords": "Method ResolveUri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ResolveUri(string) public Uri ResolveUri(string uri) Parameters uri string Returns Uri"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.ResolveUriDelegate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.ResolveUriDelegate.html",
    "title": "Delegate SvgDocument.ResolveUriDelegate | SharpVectors Documentation",
    "keywords": "Delegate SvgDocument.ResolveUriDelegate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll URI resolution event delegate public delegate void SvgDocument.ResolveUriDelegate(object sender, SvgResolveUriEventArgs e) Parameters sender object e SvgResolveUriEventArgs"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.ResolvingUri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.ResolvingUri.html",
    "title": "Event ResolvingUri | SharpVectors Documentation",
    "keywords": "Event ResolvingUri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Occurs when an URI is resolved (always). public event SvgDocument.ResolveUriDelegate ResolvingUri Returns SvgDocument.ResolveUriDelegate"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.RootElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.RootElement.html",
    "title": "Property RootElement | SharpVectors Documentation",
    "keywords": "Property RootElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RootElement The root 'svg' element in the document hierarchy public ISvgSvgElement RootElement { get; } Property Value ISvgSvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.StyledFontIds.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.StyledFontIds.html",
    "title": "Property StyledFontIds | SharpVectors Documentation",
    "keywords": "Property StyledFontIds Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StyledFontIds public IDictionary<string, string> StyledFontIds { get; } Property Value IDictionary<string, string>"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.Supports.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.Supports.html",
    "title": "Method Supports | SharpVectors Documentation",
    "keywords": "Method Supports Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Supports(string, string) Test if the DOM implementation implements a specific feature. public override bool Supports(string feature, string version) Parameters feature string The package name of the feature to test. This name is not case-sensitive. version string This is the version number of the package name to test. If the version is not specified (null), supporting any version of the feature causes the method to return true. Returns bool true if the feature is implemented in the specified version; otherwise, false. The following table describes the combinations that return true.Feature Version XML 1.0 XML 2.0"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.SvgFontFamilies.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.SvgFontFamilies.html",
    "title": "Property SvgFontFamilies | SharpVectors Documentation",
    "keywords": "Property SvgFontFamilies Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFontFamilies public ISet<string> SvgFontFamilies { get; } Property Value ISet<string>"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.SvgFonts.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.SvgFonts.html",
    "title": "Property SvgFonts | SharpVectors Documentation",
    "keywords": "Property SvgFonts Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFonts public IList<SvgFontElement> SvgFonts { get; } Property Value IList<SvgFontElement>"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.SvgNamespace.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.SvgNamespace.html",
    "title": "Field SvgNamespace | SharpVectors Documentation",
    "keywords": "Field SvgNamespace Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public const string SvgNamespace = \"http://www.w3.org/2000/svg\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.Title.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.Title.html",
    "title": "Property Title | SharpVectors Documentation",
    "keywords": "Property Title Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Title The title of the document which is the text content of the first child title element of the 'svg' root element. public string Title { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.Window.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.Window.html",
    "title": "Property Window | SharpVectors Documentation",
    "keywords": "Property Window Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Window public ISvgWindow Window { get; } Property Value ISvgWindow"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.XLinkNamespace.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.XLinkNamespace.html",
    "title": "Field XLinkNamespace | SharpVectors Documentation",
    "keywords": "Field XLinkNamespace Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public const string XLinkNamespace = \"http://www.w3.org/1999/xlink\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.XmlIdUrl.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.XmlIdUrl.html",
    "title": "Field XmlIdUrl | SharpVectors Documentation",
    "keywords": "Field XmlIdUrl Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Namespace URI to map to the xml prefix public const string XmlIdUrl = \"http://www.w3.org/XML/1998/namespace\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgDocument.html",
    "title": "Class SvgDocument | SharpVectors Documentation",
    "keywords": "Class SvgDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The root object in the document object hierarchy of an Svg document. public class SvgDocument : CssXmlDocument, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IDocumentEvent, IDocumentCss, IDocumentStyle, ICssView, ISvgDocument, IDocument, INode, IXmlNode Inheritance object XmlNode XmlDocument Document CssXmlDocument SvgDocument Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IDocumentEvent IDocumentCss IDocumentStyle ICssView ISvgDocument IDocument INode IXmlNode Inherited Members CssXmlDocument.UserAgentStyleSheet CssXmlDocument.UserStyleSheet CssXmlDocument.Static CssXmlDocument.Media CssXmlDocument.CssPropertyProfile CssXmlDocument.Url CssXmlDocument.StyleSheets CssXmlDocument.IsLoaded CssXmlDocument.Document CssXmlDocument.LoadXml(string) CssXmlDocument.Load(XmlReader) CssXmlDocument.AddStyleElement(string, string) CssXmlDocument.SetUserAgentStyleSheet(string) CssXmlDocument.SetUserStyleSheet(string) CssXmlDocument.AddStyleSheet(string) CssXmlDocument.GetResource(Uri) CssXmlDocument.GetOverrideStyle(XmlElement, string) CssXmlDocument.GetComputedStyle(XmlElement, string) CssXmlDocument.NodeChangedEvent(object, XmlNodeChangedEventArgs) Document.MutationEvents Document.ExternalResourcesAccessMode Document.CanUseBitmap Document.ReplacedText(INode) Document.DeletedText(INode, int, int) Document.InsertedText(INode, int, int) Document.ModifyingCharacterData(INode) Document.ModifiedCharacterData(INode, string, string) Document.InsertingNode(INode, bool) Document.InsertedNode(INode, INode, bool) Document.RemovingNode(INode, INode, bool) Document.RemovedNode(INode, bool) Document.replacingNode(INode) Document.ReplacedNode(INode) Document.ModifiedAttrValue(IAttribute, string) Document.SetAttrNode(IAttribute, IAttribute) Document.RemovedAttrNode(IAttribute, INode, string) Document.RenamedAttrNode(IAttribute, IAttribute) Document.RenamedElement(IElement, IElement) Document.CreateAttribute(string, string, string) Document.CreateCDataSection(string) Document.CreateComment(string) Document.CreateDocumentFragment() Document.CreateDocumentType(string, string, string, string) Document.CreateEntityReference(string) Document.CreateProcessingInstruction(string, string) Document.CreateSignificantWhitespace(string) Document.CreateTextNode(string) Document.CreateWhitespace(string) Document.CreateXmlDeclaration(string, string, string) Document.CanAccessExternalResources(string) Document.CanAccessExternalResources(Uri) Document.CreateEvent(string) Document.CanDispatch(string, string) XmlDocument.CloneNode(bool) XmlDocument.CreateAttribute(string) XmlDocument.CreateElement(string) XmlDocument.CreateNavigator() XmlDocument.CreateNavigator(XmlNode) XmlDocument.GetElementsByTagName(string) XmlDocument.CreateAttribute(string, string) XmlDocument.CreateElement(string, string) XmlDocument.GetElementsByTagName(string, string) XmlDocument.ImportNode(XmlNode, bool) XmlDocument.CreateDefaultAttribute(string, string, string) XmlDocument.CreateNode(XmlNodeType, string, string, string) XmlDocument.CreateNode(string, string, string) XmlDocument.CreateNode(XmlNodeType, string, string) XmlDocument.ReadNode(XmlReader) XmlDocument.Save(string) XmlDocument.Save(Stream) XmlDocument.Save(TextWriter) XmlDocument.Save(XmlWriter) XmlDocument.WriteTo(XmlWriter) XmlDocument.WriteContentTo(XmlWriter) XmlDocument.Validate(ValidationEventHandler) XmlDocument.Validate(ValidationEventHandler, XmlNode) XmlDocument.NodeType XmlDocument.ParentNode XmlDocument.DocumentType XmlDocument.Implementation XmlDocument.Name XmlDocument.LocalName XmlDocument.DocumentElement XmlDocument.Schemas XmlDocument.XmlResolver XmlDocument.NameTable XmlDocument.PreserveWhitespace XmlDocument.IsReadOnly XmlDocument.InnerText XmlDocument.InnerXml XmlDocument.SchemaInfo XmlDocument.NodeInserting XmlDocument.NodeInserted XmlDocument.NodeRemoving XmlDocument.NodeRemoved XmlDocument.NodeChanging XmlDocument.NodeChanged XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.PreviousSibling XmlNode.NextSibling XmlNode.Attributes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.OuterXml XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks When an 'svg' element is embedded inline as a component of a document from another namespace, such as when an 'svg' element is embedded inline within an XHTML document [XHTML], then an ISvgDocument object will not exist; instead, the root object in the document object hierarchy will be a Document object of a different type, such as an HTMLDocument object. However, an ISvgDocument object will indeed exist when the root element of the XML document hierarchy is an 'svg' element, such as when viewing a stand-alone SVG file (i.e., a file with MIME type \"image/svg+xml\"). In this case, the ISvgDocument object will be the root object of the document object model hierarchy. In the case where an SVG document is embedded by reference, such as when an XHTML document has an 'object' element whose href attribute references an SVG document (i.e., a document whose MIME type is \"image/svg+xml\" and whose root element is thus an 'svg' element), there will exist two distinct DOM hierarchies. The first DOM hierarchy will be for the referencing document (e.g., an XHTML document). The second DOM hierarchy will be for the referenced SVG document. In this second DOM hierarchy, the root object of the document object model hierarchy is an ISvgDocument object. The ISvgDocument interface contains a similar list of attributes and methods to the HTMLDocument interface described in the Document Object Model (HTML) Level 1 chapter of the [DOM1] specification. Constructors SvgDocument(SvgWindow) Fields DotsPerInch SvgNamespace XLinkNamespace XmlIdUrl Namespace URI to map to the xml prefix Properties BaseURI Gets the base URI of the current node. CustomSettings Domain The domain name of the server that served the document, or a null string if the server cannot be identified by a domain name. Dpi Get or sets the dots per inch at which the objects should be rendered. ElementMap ElementUniqueMap FontFamilies GlobalSettings IsFontsLoaded NamespaceManager OwnerDocument Referrer Returns the URI of the page that linked to this page. The value is an empty string if the user navigated to the page directly (not through a link, but, for example, via a bookmark). RootElement The root 'svg' element in the document hierarchy StyledFontIds SvgFontFamilies SvgFonts Title The title of the document which is the text content of the first child title element of the 'svg' root element. Window Methods CreateElement(string, string, string) Creates an element with the specified Prefix, LocalName, and NamespaceURI. GetElementById(string) Gets the XmlElement with the specified ID. GetFontUrls() GetFonts(IList<string>) GetFonts(string) GetNodeByUri(string) GetNodeByUri(Uri) GetSvgById(string) GetSvgByUniqueId(Guid) GetSvgByUniqueId(string) IsGZipped(Stream) Load(Stream) Loads the XML document from the specified stream. Load(TextReader) Loads the XML document from the specified TextReader. Load(string) Loads the XML document from the specified URL. Load(string, Stream) Loads the XML document from the specified stream but with the specified base URL OnLoaded() RegisterFont(SvgFontElement) ResolveUri(string) Supports(string, string) Test if the DOM implementation implements a specific feature. Events ResolveNamespace Occurs when a namespace is being resolved. ResolvingUri Occurs when an URI is resolved (always)."
  },
  "api/SharpVectors.Dom.Svg.SvgElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.-ctor.html",
    "title": "Constructor SvgElement | SharpVectors Documentation",
    "keywords": "Constructor SvgElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgElement(string, string, string, SvgDocument) public SvgElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.ElementInstance.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.ElementInstance.html",
    "title": "Property ElementInstance | SharpVectors Documentation",
    "keywords": "Property ElementInstance Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ElementInstance Whenever an SvgElementInstance is created for an SvgElement this property is set. The value of this property is used by the renderer to dispatch events. SvgElements that are <use>d exist in a conceptual \"instance tree\" and the target of events for those elements is the conceptual instance node represented by the SvgElementInstance. public ISvgElementInstance ElementInstance { get; set; } Property Value ISvgElementInstance See Also https://www.w3.org/TR/SVG/struct.html#UseElement https://www.w3.org/TR/SVG/struct.html#InterfaceSVGElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.GetAttribute.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.GetAttribute.html",
    "title": "Method GetAttribute | SharpVectors Documentation",
    "keywords": "Method GetAttribute Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetAttribute(string, float) public float GetAttribute(string name, float defValue) Parameters name string defValue float Returns float GetAttribute(string, int) public int GetAttribute(string name, int defValue) Parameters name string defValue int Returns int GetAttribute(string, double) public double GetAttribute(string name, double defValue) Parameters name string defValue double Returns double GetAttribute(string, long) public long GetAttribute(string name, long defValue) Parameters name string defValue long Returns long"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.Id.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.Id.html",
    "title": "Property Id | SharpVectors Documentation",
    "keywords": "Property Id Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Id The value of the id attribute on the given element. Inheriting class should throw an exception when trying to update a read only element public string Id { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.ImportDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.ImportDocument.html",
    "title": "Property ImportDocument | SharpVectors Documentation",
    "keywords": "Property ImportDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ImportDocument public SvgDocument ImportDocument { get; set; } Property Value SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.ImportNode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.ImportNode.html",
    "title": "Property ImportNode | SharpVectors Documentation",
    "keywords": "Property ImportNode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ImportNode public SvgElement ImportNode { get; set; } Property Value SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.IsHiddenCss.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.IsHiddenCss.html",
    "title": "Property IsHiddenCss | SharpVectors Documentation",
    "keywords": "Property IsHiddenCss Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsHiddenCss public bool IsHiddenCss { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public virtual bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgElement.OwnerDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.OwnerDocument.html",
    "title": "Property OwnerDocument | SharpVectors Documentation",
    "keywords": "Property OwnerDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OwnerDocument public SvgDocument OwnerDocument { get; } Property Value SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.OwnerSvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.OwnerSvgElement.html",
    "title": "Property OwnerSvgElement | SharpVectors Documentation",
    "keywords": "Property OwnerSvgElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OwnerSvgElement public SvgSvgElement OwnerSvgElement { get; } Property Value SvgSvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public virtual SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint."
  },
  "api/SharpVectors.Dom.Svg.SvgElement.ResolveUri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.ResolveUri.html",
    "title": "Method ResolveUri | SharpVectors Documentation",
    "keywords": "Method ResolveUri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ResolveUri(string) public string ResolveUri(string uri) Parameters uri string Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.SetAttribute.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.SetAttribute.html",
    "title": "Method SetAttribute | SharpVectors Documentation",
    "keywords": "Method SetAttribute Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetAttribute(string, float) public void SetAttribute(string name, float value) Parameters name string value float SetAttribute(string, int) public void SetAttribute(string name, int value) Parameters name string value int SetAttribute(string, double) public void SetAttribute(string name, double value) Parameters name string value double SetAttribute(string, long) public void SetAttribute(string name, long value) Parameters name string value long"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.UniqueId.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.UniqueId.html",
    "title": "Property UniqueId | SharpVectors Documentation",
    "keywords": "Property UniqueId Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UniqueId public string UniqueId { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.ViewportElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.ViewportElement.html",
    "title": "Property ViewportElement | SharpVectors Documentation",
    "keywords": "Property ViewportElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewportElement public SvgElement ViewportElement { get; } Property Value SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.XmlLang.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.XmlLang.html",
    "title": "Property XmlLang | SharpVectors Documentation",
    "keywords": "Property XmlLang Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll XmlLang public string XmlLang { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.XmlSpace.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.XmlSpace.html",
    "title": "Property XmlSpace | SharpVectors Documentation",
    "keywords": "Property XmlSpace Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll XmlSpace public string XmlSpace { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElement.html",
    "title": "Class SvgElement | SharpVectors Documentation",
    "keywords": "Class SvgElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgElement. public class SvgElement : CssXmlElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode Derived SvgAltGlyphDefElement SvgAltGlyphItemElement SvgAnimateMPathElement SvgAnimationElement SvgColorProfileElement SvgComponentTransferFunctionElement SvgFEDistantLightElement SvgFEMergeNodeElement SvgFEPointLightElement SvgFESpotLightElement SvgFontFaceElement SvgFontFaceFormatElement SvgFontFaceNameElement SvgFontFaceSrcElement SvgFontFaceUriElement SvgKernElement SvgMetadataElement SvgScriptElement SvgStyleElement SvgStyleableElement Inherited Members CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgElement(string, string, string, SvgDocument) Properties ElementInstance Whenever an SvgElementInstance is created for an SvgElement this property is set. The value of this property is used by the renderer to dispatch events. SvgElements that are <use>d exist in a conceptual \"instance tree\" and the target of events for those elements is the conceptual instance node represented by the SvgElementInstance. Id The value of the id attribute on the given element. Inheriting class should throw an exception when trying to update a read only element ImportDocument ImportNode IsHiddenCss IsRenderable Gets a value indicating whether this SVG element is renderable. OwnerDocument OwnerSvgElement RenderingHint Gets a value providing a hint on the rendering defined by this element. UniqueId ViewportElement XmlLang XmlSpace Methods GetAttribute(string, double) GetAttribute(string, int) GetAttribute(string, long) GetAttribute(string, float) ResolveUri(string) SetAttribute(string, double) SetAttribute(string, int) SetAttribute(string, long) SetAttribute(string, float)"
  },
  "api/SharpVectors.Dom.Svg.SvgElementFactory.Create.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementFactory.Create.html",
    "title": "Method Create | SharpVectors Documentation",
    "keywords": "Method Create Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Create(string, string, string, SvgDocument) public static XmlElement Create(string prefix, string localName, string ns, SvgDocument doc) Parameters prefix string localName string ns string doc SvgDocument Returns XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgElementFactory.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementFactory.html",
    "title": "Class SvgElementFactory | SharpVectors Documentation",
    "keywords": "Class SvgElementFactory Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public static class SvgElementFactory Inheritance object SvgElementFactory Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Create(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.-ctor.html",
    "title": "Constructor SvgElementInstance | SharpVectors Documentation",
    "keywords": "Constructor SvgElementInstance Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgElementInstance(XmlNode, SvgUseElement, SvgElementInstance) public SvgElementInstance(XmlNode refNode, SvgUseElement useElement, SvgElementInstance parent) Parameters refNode XmlNode useElement SvgUseElement parent SvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.ChildNodes.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.ChildNodes.html",
    "title": "Property ChildNodes | SharpVectors Documentation",
    "keywords": "Property ChildNodes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ChildNodes public ISvgElementInstanceList ChildNodes { get; } Property Value ISvgElementInstanceList"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.CorrespondingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.CorrespondingElement.html",
    "title": "Property CorrespondingElement | SharpVectors Documentation",
    "keywords": "Property CorrespondingElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CorrespondingElement public ISvgElement CorrespondingElement { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.CorrespondingUseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.CorrespondingUseElement.html",
    "title": "Property CorrespondingUseElement | SharpVectors Documentation",
    "keywords": "Property CorrespondingUseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CorrespondingUseElement public ISvgUseElement CorrespondingUseElement { get; } Property Value ISvgUseElement"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.FirstChild.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.FirstChild.html",
    "title": "Property FirstChild | SharpVectors Documentation",
    "keywords": "Property FirstChild Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FirstChild public ISvgElementInstance FirstChild { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.LastChild.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.LastChild.html",
    "title": "Property LastChild | SharpVectors Documentation",
    "keywords": "Property LastChild Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LastChild public ISvgElementInstance LastChild { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.NextSibling.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.NextSibling.html",
    "title": "Property NextSibling | SharpVectors Documentation",
    "keywords": "Property NextSibling Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NextSibling public ISvgElementInstance NextSibling { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.ParentNode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.ParentNode.html",
    "title": "Property ParentNode | SharpVectors Documentation",
    "keywords": "Property ParentNode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParentNode public ISvgElementInstance ParentNode { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.PreviousSibling.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.PreviousSibling.html",
    "title": "Property PreviousSibling | SharpVectors Documentation",
    "keywords": "Property PreviousSibling Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreviousSibling public ISvgElementInstance PreviousSibling { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstance.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstance.html",
    "title": "Class SvgElementInstance | SharpVectors Documentation",
    "keywords": "Class SvgElementInstance Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgElementInstance : IEventTargetSupport, ISvgElementInstance, IEventTarget Inheritance object SvgElementInstance Implements IEventTargetSupport ISvgElementInstance IEventTarget Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgElementInstance(XmlNode, SvgUseElement, SvgElementInstance) Properties ChildNodes CorrespondingElement CorrespondingUseElement FirstChild LastChild NextSibling ParentNode PreviousSibling"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstanceList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstanceList.-ctor.html",
    "title": "Constructor SvgElementInstanceList | SharpVectors Documentation",
    "keywords": "Constructor SvgElementInstanceList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgElementInstanceList(SvgUseElement, SvgElementInstance) public SvgElementInstanceList(SvgUseElement useElement, SvgElementInstance parent) Parameters useElement SvgUseElement parent SvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstanceList.Item.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstanceList.Item.html",
    "title": "Method Item | SharpVectors Documentation",
    "keywords": "Method Item Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Item(ulong) public ISvgElementInstance Item(ulong index) Parameters index ulong Returns ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstanceList.Length.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstanceList.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Length public ulong Length { get; } Property Value ulong"
  },
  "api/SharpVectors.Dom.Svg.SvgElementInstanceList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgElementInstanceList.html",
    "title": "Class SvgElementInstanceList | SharpVectors Documentation",
    "keywords": "Class SvgElementInstanceList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgElementInstanceList : ISvgElementInstanceList Inheritance object SvgElementInstanceList Implements ISvgElementInstanceList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgElementInstanceList(SvgUseElement, SvgElementInstance) Properties Length Methods Item(ulong)"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.-ctor.html",
    "title": "Constructor SvgEllipseElement | SharpVectors Documentation",
    "keywords": "Constructor SvgEllipseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgEllipseElement(string, string, string, SvgDocument) public SvgEllipseElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.Cx.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.Cx.html",
    "title": "Property Cx | SharpVectors Documentation",
    "keywords": "Property Cx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Cx public ISvgAnimatedLength Cx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.Cy.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.Cy.html",
    "title": "Property Cy | SharpVectors Documentation",
    "keywords": "Property Cy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Cy public ISvgAnimatedLength Cy { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.Invalidate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.Invalidate.html",
    "title": "Method Invalidate | SharpVectors Documentation",
    "keywords": "Method Invalidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Invalidate() public void Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.Rx.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.Rx.html",
    "title": "Property Rx | SharpVectors Documentation",
    "keywords": "Property Rx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Rx public ISvgAnimatedLength Rx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.Ry.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.Ry.html",
    "title": "Property Ry | SharpVectors Documentation",
    "keywords": "Property Ry Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Ry public ISvgAnimatedLength Ry { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgEllipseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgEllipseElement.html",
    "title": "Class SvgEllipseElement | SharpVectors Documentation",
    "keywords": "Class SvgEllipseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgEllipseElement class corresponds to the 'ellipse' element. public sealed class SvgEllipseElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgEllipseElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgEllipseElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgEllipseElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgEllipseElement(string, string, string, SvgDocument) Properties Cx Cy ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures Rx Ry SystemLanguage Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgException.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgException.-ctor.html",
    "title": "Constructor SvgException | SharpVectors Documentation",
    "keywords": "Constructor SvgException Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgException(SvgExceptionType) public SvgException(SvgExceptionType errorCode) Parameters errorCode SvgExceptionType SvgException(SvgExceptionType, string) public SvgException(SvgExceptionType errorCode, string message) Parameters errorCode SvgExceptionType message string SvgException(SvgExceptionType, string, Exception) public SvgException(SvgExceptionType errorCode, string message, Exception innerException) Parameters errorCode SvgExceptionType message string innerException Exception SvgException(SerializationInfo, StreamingContext) protected SvgException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext"
  },
  "api/SharpVectors.Dom.Svg.SvgException.Code.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgException.Code.html",
    "title": "Property Code | SharpVectors Documentation",
    "keywords": "Property Code Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Code public SvgExceptionType Code { get; } Property Value SvgExceptionType"
  },
  "api/SharpVectors.Dom.Svg.SvgException.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgException.html",
    "title": "Class SvgException | SharpVectors Documentation",
    "keywords": "Class SvgException Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll [Serializable] public class SvgException : DomException, ISerializable, _Exception Inheritance object Exception DomException SvgException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors SvgException(SvgExceptionType) SvgException(SvgExceptionType, string) SvgException(SvgExceptionType, string, Exception) SvgException(SerializationInfo, StreamingContext) Properties Code"
  },
  "api/SharpVectors.Dom.Svg.SvgExceptionType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgExceptionType.html",
    "title": "Enum SvgExceptionType | SharpVectors Documentation",
    "keywords": "Enum SvgExceptionType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public enum SvgExceptionType Fields SvgWrongTypeErr = 0 SvgInvalidValueErr = 1 SvgMatrixNotInvertable = 2"
  },
  "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequired.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequired.-ctor.html",
    "title": "Constructor SvgExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Constructor SvgExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgExternalResourcesRequired(SvgElement) public SvgExternalResourcesRequired(SvgElement ownerElement) Parameters ownerElement SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequired.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequired.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequired.html",
    "title": "Class SvgExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Class SvgExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgExternalResourcesRequired Inheritance object SvgExternalResourcesRequired Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgExternalResourcesRequired(SvgElement) Properties ExternalResourcesRequired"
  },
  "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequiredException.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequiredException.-ctor.html",
    "title": "Constructor SvgExternalResourcesRequiredException | SharpVectors Documentation",
    "keywords": "Constructor SvgExternalResourcesRequiredException Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgExternalResourcesRequiredException() public SvgExternalResourcesRequiredException() SvgExternalResourcesRequiredException(SerializationInfo, StreamingContext) protected SvgExternalResourcesRequiredException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext"
  },
  "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequiredException.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgExternalResourcesRequiredException.html",
    "title": "Class SvgExternalResourcesRequiredException | SharpVectors Documentation",
    "keywords": "Class SvgExternalResourcesRequiredException Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll [Serializable] public class SvgExternalResourcesRequiredException : DomException, ISerializable, _Exception Inheritance object Exception DomException SvgExternalResourcesRequiredException Implements ISerializable _Exception Inherited Members DomException.Code Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors SvgExternalResourcesRequiredException() SvgExternalResourcesRequiredException(SerializationInfo, StreamingContext)"
  },
  "api/SharpVectors.Dom.Svg.SvgFEBlendElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEBlendElement.-ctor.html",
    "title": "Constructor SvgFEBlendElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEBlendElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEBlendElement(string, string, string, SvgDocument) public SvgFEBlendElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEBlendElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEBlendElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEBlendElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEBlendElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEBlendElement.In2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEBlendElement.In2.html",
    "title": "Property In2 | SharpVectors Documentation",
    "keywords": "Property In2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In2 Corresponds to attribute in2 on the given feBlend element. public ISvgAnimatedString In2 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEBlendElement.Mode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEBlendElement.Mode.html",
    "title": "Property Mode | SharpVectors Documentation",
    "keywords": "Property Mode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Mode One of the blend modes defined by 'Compositing and Blending Level 1' with the input in representing the source Cs and the second input in2 representing the backdrop Cb. The output of this filter primitive Cm is the result of blending Cs with Cb. public ISvgAnimatedEnumeration Mode { get; } Property Value ISvgAnimatedEnumeration mode = \"blend-mode\" An enumeration of the type SvgFilterBlendMode. The default value is Normal."
  },
  "api/SharpVectors.Dom.Svg.SvgFEBlendElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEBlendElement.html",
    "title": "Class SvgFEBlendElement | SharpVectors Documentation",
    "keywords": "Class SvgFEBlendElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This filter blends two objects together using commonly used imaging software blending modes. It performs a pixel-wise combination of two input images. public sealed class SvgFEBlendElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEBlendElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEBlendElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEBlendElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEBlendElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element. In2 Corresponds to attribute in2 on the given feBlend element. Mode One of the blend modes defined by 'Compositing and Blending Level 1' with the input in representing the source Cs and the second input in2 representing the backdrop Cb. The output of this filter primitive Cm is the result of blending Cs with Cb."
  },
  "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.-ctor.html",
    "title": "Constructor SvgFEColorMatrixElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEColorMatrixElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEColorMatrixElement(string, string, string, SvgDocument) public SvgFEColorMatrixElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Type public ISvgAnimatedEnumeration Type { get; } Property Value ISvgAnimatedEnumeration An enumeration of the type SvgFilterColorMatrix. The default value is Matrix."
  },
  "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.Values.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.Values.html",
    "title": "Property Values | SharpVectors Documentation",
    "keywords": "Property Values Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Values public ISvgAnimatedNumberList Values { get; } Property Value ISvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEColorMatrixElement.html",
    "title": "Class SvgFEColorMatrixElement | SharpVectors Documentation",
    "keywords": "Class SvgFEColorMatrixElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEColorMatrixElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEColorMatrixElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEColorMatrixElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEColorMatrixElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEColorMatrixElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element. Type Values"
  },
  "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.-ctor.html",
    "title": "Constructor SvgFEComponentTransferElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEComponentTransferElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEComponentTransferElement(string, string, string, SvgDocument) public SvgFEComponentTransferElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEComponentTransferElement.html",
    "title": "Class SvgFEComponentTransferElement | SharpVectors Documentation",
    "keywords": "Class SvgFEComponentTransferElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEComponentTransferElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEComponentTransferElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEComponentTransferElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEComponentTransferElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEComponentTransferElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element."
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.-ctor.html",
    "title": "Constructor SvgFECompositeElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFECompositeElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFECompositeElement(string, string, string, SvgDocument) public SvgFECompositeElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.In2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.In2.html",
    "title": "Property In2 | SharpVectors Documentation",
    "keywords": "Property In2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In2 Corresponds to attribute in2 on the given feBlend element. public ISvgAnimatedString In2 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.K1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.K1.html",
    "title": "Property K1 | SharpVectors Documentation",
    "keywords": "Property K1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll K1 public ISvgAnimatedNumber K1 { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.K2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.K2.html",
    "title": "Property K2 | SharpVectors Documentation",
    "keywords": "Property K2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll K2 public ISvgAnimatedNumber K2 { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.K3.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.K3.html",
    "title": "Property K3 | SharpVectors Documentation",
    "keywords": "Property K3 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll K3 public ISvgAnimatedNumber K3 { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.K4.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.K4.html",
    "title": "Property K4 | SharpVectors Documentation",
    "keywords": "Property K4 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll K4 public ISvgAnimatedNumber K4 { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.Operator.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.Operator.html",
    "title": "Property Operator | SharpVectors Documentation",
    "keywords": "Property Operator Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Operator public ISvgAnimatedEnumeration Operator { get; } Property Value ISvgAnimatedEnumeration An enumeration of the type SvgFilterCompositeOperator. The default value is Over."
  },
  "api/SharpVectors.Dom.Svg.SvgFECompositeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFECompositeElement.html",
    "title": "Class SvgFECompositeElement | SharpVectors Documentation",
    "keywords": "Class SvgFECompositeElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFECompositeElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFECompositeElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFECompositeElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFECompositeElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFECompositeElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element. In2 Corresponds to attribute in2 on the given feBlend element. K1 K2 K3 K4 Operator"
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.-ctor.html",
    "title": "Constructor SvgFEConvolveMatrixElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEConvolveMatrixElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEConvolveMatrixElement(string, string, string, SvgDocument) public SvgFEConvolveMatrixElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.Bias.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.Bias.html",
    "title": "Property Bias | SharpVectors Documentation",
    "keywords": "Property Bias Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Bias public ISvgAnimatedNumber Bias { get; } Property Value ISvgAnimatedNumber bias = \"number\" Remarks After applying the 'kernelMatrix' to the input image to yield a number and applying the 'divisor', the 'bias' attribute is added to each component. One application of 'bias' is when it is desirable to have .5 gray value be the zero response of the filter. The bias property shifts the range of the filter. This allows representation of values that would otherwise be clamped to 0 or 1. If 'bias' is not specified, then the effect is as if a value of 0 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.Divisor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.Divisor.html",
    "title": "Property Divisor | SharpVectors Documentation",
    "keywords": "Property Divisor Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Divisor public ISvgAnimatedNumber Divisor { get; } Property Value ISvgAnimatedNumber divisor = number Remarks After applying the KernelMatrix to the input image to yield a number, that number is divided by 'divisor' to yield the final destination color value. A divisor that is the sum of all the matrix values tends to have an evening effect on the overall color intensity of the result. It is an error to specify a divisor of zero. The default value is the sum of all values in KernelMatrix, with the exception that if the sum is zero, then the divisor is set to 1."
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.EdgeMode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.EdgeMode.html",
    "title": "Property EdgeMode | SharpVectors Documentation",
    "keywords": "Property EdgeMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EdgeMode Determines how to extend the input image as necessary with color values so that the matrix operations can be applied when the kernel is positioned at or near the edge of the input image. public ISvgAnimatedEnumeration EdgeMode { get; } Property Value ISvgAnimatedEnumeration edgeMode = \"duplicate | wrap | none\" An enumeration of the type SvgFilterEdgeMode. The default value is Duplicate. Remarks \"duplicate\" indicates that the input image is extended along each of its borders as necessary by duplicating the color values at the given edge of the input image. \"wrap\" indicates that the input image is extended by taking the color values from the opposite edge of the image. \"none\" indicates that the input image is extended with pixel values of zero for R, G, B and A. If attribute 'edgeMode' is not specified, then the effect is as if a value of duplicate were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.KernelMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.KernelMatrix.html",
    "title": "Property KernelMatrix | SharpVectors Documentation",
    "keywords": "Property KernelMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KernelMatrix public ISvgAnimatedNumberList KernelMatrix { get; } Property Value ISvgAnimatedNumberList kernelMatrix = \"list of numbers\" Remarks The list of numbers that make up the kernel matrix for the convolution. Values are separated by space characters and/or a comma. The number of entries in the list must equal OrderX times OrderY."
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.KernelUnitLengthX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.KernelUnitLengthX.html",
    "title": "Property KernelUnitLengthX | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KernelUnitLengthX Corresponds to attribute 'kernelUnitLength' on the given 'feConvolveMatrix' element. public ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.KernelUnitLengthY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.KernelUnitLengthY.html",
    "title": "Property KernelUnitLengthY | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KernelUnitLengthY Corresponds to attribute 'kernelUnitLength' on the given 'feConvolveMatrix' element. public ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.OrderX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.OrderX.html",
    "title": "Property OrderX | SharpVectors Documentation",
    "keywords": "Property OrderX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OrderX Indicates the number of cells in each dimension for 'kernelMatrix'. public ISvgAnimatedInteger OrderX { get; } Property Value ISvgAnimatedInteger order = \"number-optional-number\" The values provided must be integers greater than zero. The first number, OrderX, indicates the number of columns in the matrix. The second number, OrderY, indicates the number of rows in the matrix. If OrderYis not provided, it defaults to OrderX. Remarks A typical value is order=\"3\". It is recommended that only small values(e.g., 3) be used; higher values may result in very high CPU overhead and usually do not produce results that justify the impact on performance. If the attribute is not specified, the effect is as if a value of 3 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.OrderY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.OrderY.html",
    "title": "Property OrderY | SharpVectors Documentation",
    "keywords": "Property OrderY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OrderY Indicates the number of cells in each dimension for 'kernelMatrix'. public ISvgAnimatedInteger OrderY { get; } Property Value ISvgAnimatedInteger order = \"number-optional-number\" The values provided must be integers greater than zero. The first number, OrderX, indicates the number of columns in the matrix. The second number, OrderY, indicates the number of rows in the matrix. If OrderYis not provided, it defaults to OrderX. Remarks A typical value is order=\"3\". It is recommended that only small values(e.g., 3) be used; higher values may result in very high CPU overhead and usually do not produce results that justify the impact on performance. If the attribute is not specified, the effect is as if a value of 3 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.PreserveAlpha.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.PreserveAlpha.html",
    "title": "Property PreserveAlpha | SharpVectors Documentation",
    "keywords": "Property PreserveAlpha Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreserveAlpha public ISvgAnimatedBoolean PreserveAlpha { get; } Property Value ISvgAnimatedBoolean preserveAlpha = \"false | true\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.TargetX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.TargetX.html",
    "title": "Property TargetX | SharpVectors Documentation",
    "keywords": "Property TargetX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TargetX Determines the positioning in X of the convolution matrix relative to a given target pixel in the input image. public ISvgAnimatedInteger TargetX { get; } Property Value ISvgAnimatedInteger targetX = \"integer\" The leftmost column of the matrix is column number zero. The value must be such that: 0 <= targetX < orderX. By default, the convolution matrix is centered in X over each pixel of the input image (i.e., targetX = floor ( orderX / 2 ))."
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.TargetY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.TargetY.html",
    "title": "Property TargetY | SharpVectors Documentation",
    "keywords": "Property TargetY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TargetY Determines the positioning in Y of the convolution matrix relative to a given target pixel in the input image. public ISvgAnimatedInteger TargetY { get; } Property Value ISvgAnimatedInteger targetY = \"integer\" The leftmost column of the matrix is column number zero. The value must be such that: 0 <= targetY < orderY. By default, the convolution matrix is centered in Y over each pixel of the input image (i.e., targetY = floor ( orderY / 2 ))."
  },
  "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEConvolveMatrixElement.html",
    "title": "Class SvgFEConvolveMatrixElement | SharpVectors Documentation",
    "keywords": "Class SvgFEConvolveMatrixElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This applies a matrix convolution filter effect. A convolution combines pixels in the input image with neighboring pixels to produce a resulting image. A wide variety of imaging operations can be achieved through convolutions, including blurring, edge detection, sharpening, embossing and beveling. public sealed class SvgFEConvolveMatrixElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEConvolveMatrixElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEConvolveMatrixElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEConvolveMatrixElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEConvolveMatrixElement(string, string, string, SvgDocument) Properties Bias Divisor EdgeMode Determines how to extend the input image as necessary with color values so that the matrix operations can be applied when the kernel is positioned at or near the edge of the input image. KernelMatrix KernelUnitLengthX Corresponds to attribute 'kernelUnitLength' on the given 'feConvolveMatrix' element. KernelUnitLengthY Corresponds to attribute 'kernelUnitLength' on the given 'feConvolveMatrix' element. OrderX Indicates the number of cells in each dimension for 'kernelMatrix'. OrderY Indicates the number of cells in each dimension for 'kernelMatrix'. PreserveAlpha TargetX Determines the positioning in X of the convolution matrix relative to a given target pixel in the input image. TargetY Determines the positioning in Y of the convolution matrix relative to a given target pixel in the input image."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.-ctor.html",
    "title": "Constructor SvgFEDiffuseLightingElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEDiffuseLightingElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEDiffuseLightingElement(string, string, string, SvgDocument) public SvgFEDiffuseLightingElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.DiffuseConstant.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.DiffuseConstant.html",
    "title": "Property DiffuseConstant | SharpVectors Documentation",
    "keywords": "Property DiffuseConstant Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll DiffuseConstant Corresponds to attribute 'diffuseConstant' on the given 'feDiffuseLighting' element. public ISvgAnimatedNumber DiffuseConstant { get; } Property Value ISvgAnimatedNumber diffuseConstant = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feDiffuseLighting element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.KernelUnitLengthX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.KernelUnitLengthX.html",
    "title": "Property KernelUnitLengthX | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KernelUnitLengthX Corresponds to attribute 'kernelUnitLength' on the given 'feDiffuseLighting' element. public ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.KernelUnitLengthY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.KernelUnitLengthY.html",
    "title": "Property KernelUnitLengthY | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KernelUnitLengthY Corresponds to attribute 'kernelUnitLength' on the given 'feDiffuseLighting' element. public ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.SurfaceScale.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.SurfaceScale.html",
    "title": "Property SurfaceScale | SharpVectors Documentation",
    "keywords": "Property SurfaceScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SurfaceScale Corresponds to attribute 'surfaceScale' on the given 'feDiffuseLighting' element. public ISvgAnimatedNumber SurfaceScale { get; } Property Value ISvgAnimatedNumber surfaceScale = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDiffuseLightingElement.html",
    "title": "Class SvgFEDiffuseLightingElement | SharpVectors Documentation",
    "keywords": "Class SvgFEDiffuseLightingElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEDiffuseLightingElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEDiffuseLightingElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEDiffuseLightingElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEDiffuseLightingElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEDiffuseLightingElement(string, string, string, SvgDocument) Properties DiffuseConstant Corresponds to attribute 'diffuseConstant' on the given 'feDiffuseLighting' element. In In1 Corresponds to attribute in on the given feDiffuseLighting element. KernelUnitLengthX Corresponds to attribute 'kernelUnitLength' on the given 'feDiffuseLighting' element. KernelUnitLengthY Corresponds to attribute 'kernelUnitLength' on the given 'feDiffuseLighting' element. SurfaceScale Corresponds to attribute 'surfaceScale' on the given 'feDiffuseLighting' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.-ctor.html",
    "title": "Constructor SvgFEDisplacementMapElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEDisplacementMapElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEDisplacementMapElement(string, string, string, SvgDocument) public SvgFEDisplacementMapElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.In2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.In2.html",
    "title": "Property In2 | SharpVectors Documentation",
    "keywords": "Property In2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In2 Corresponds to attribute in2 on the given feBlend element. public ISvgAnimatedString In2 { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.Scale.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.Scale.html",
    "title": "Property Scale | SharpVectors Documentation",
    "keywords": "Property Scale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Scale Displacement scale factor. The amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. public ISvgAnimatedNumber Scale { get; } Property Value ISvgAnimatedNumber scale = \"number\" When the value of this attribute is 0, this operation has no effect on the source image. If the attribute is not specified, then the effect is as if a value of 0 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.XChannelSelector.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.XChannelSelector.html",
    "title": "Property XChannelSelector | SharpVectors Documentation",
    "keywords": "Property XChannelSelector Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll XChannelSelector Indicates which channel from 'in2' to use to displace the pixels in 'in' along the x-axis. public ISvgAnimatedEnumeration XChannelSelector { get; } Property Value ISvgAnimatedEnumeration xChannelSelector = \"R | G | B | A\" An enumeration of the type SvgFilterChannelSelector. The default value is A. Remarks If attribute 'xChannelSelector' is not specified, then the effect is as if a value of A were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.YChannelSelector.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.YChannelSelector.html",
    "title": "Property YChannelSelector | SharpVectors Documentation",
    "keywords": "Property YChannelSelector Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll YChannelSelector Indicates which channel from 'in2' to use to displace the pixels in 'in' along the y-axis. public ISvgAnimatedEnumeration YChannelSelector { get; } Property Value ISvgAnimatedEnumeration yChannelSelector = \"R | G | B | A\" An enumeration of the type SvgFilterChannelSelector. The default value is A. Remarks If attribute 'yChannelSelector' is not specified, then the effect is as if a value of A were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDisplacementMapElement.html",
    "title": "Class SvgFEDisplacementMapElement | SharpVectors Documentation",
    "keywords": "Class SvgFEDisplacementMapElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This filter primitive uses the pixels values from the image from 'in2' to spatially displace the image from 'in'. public sealed class SvgFEDisplacementMapElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEDisplacementMapElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEDisplacementMapElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEDisplacementMapElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEDisplacementMapElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element. In2 Corresponds to attribute in2 on the given feBlend element. Scale Displacement scale factor. The amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. XChannelSelector Indicates which channel from 'in2' to use to displace the pixels in 'in' along the x-axis. YChannelSelector Indicates which channel from 'in2' to use to displace the pixels in 'in' along the y-axis."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.-ctor.html",
    "title": "Constructor SvgFEDistantLightElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEDistantLightElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEDistantLightElement(string, string, string, SvgDocument) public SvgFEDistantLightElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.Azimuth.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.Azimuth.html",
    "title": "Property Azimuth | SharpVectors Documentation",
    "keywords": "Property Azimuth Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Azimuth Direction angle for the light source on the XY plane (clockwise), in degrees from the x axis. public ISvgAnimatedNumber Azimuth { get; } Property Value ISvgAnimatedNumber Corresponds to attribute 'azimuth' on the given 'feDistantLight' element. azimuth = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.Elevation.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.Elevation.html",
    "title": "Property Elevation | SharpVectors Documentation",
    "keywords": "Property Elevation Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Elevation Direction angle for the light source from the XY plane towards the z axis, in degrees. Note the positive Z-axis points towards the viewer of the content. public ISvgAnimatedNumber Elevation { get; } Property Value ISvgAnimatedNumber Corresponds to attribute 'elevation' on the given 'feDistantLight' element. elevation = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEDistantLightElement.html",
    "title": "Class SvgFEDistantLightElement | SharpVectors Documentation",
    "keywords": "Class SvgFEDistantLightElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEDistantLightElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEDistantLightElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFEDistantLightElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEDistantLightElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEDistantLightElement(string, string, string, SvgDocument) Properties Azimuth Direction angle for the light source on the XY plane (clockwise), in degrees from the x axis. Elevation Direction angle for the light source from the XY plane towards the z axis, in degrees. Note the positive Z-axis points towards the viewer of the content. IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgFEFloodElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFloodElement.-ctor.html",
    "title": "Constructor SvgFEFloodElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEFloodElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEFloodElement(string, string, string, SvgDocument) public SvgFEFloodElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFloodElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFloodElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFloodElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFloodElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEFloodElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFloodElement.html",
    "title": "Class SvgFEFloodElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFloodElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEFloodElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFloodElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEFloodElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFloodElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEFloodElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element."
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncAElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncAElement.-ctor.html",
    "title": "Constructor SvgFEFuncAElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEFuncAElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEFuncAElement(string, string, string, SvgDocument) public SvgFEFuncAElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncAElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncAElement.html",
    "title": "Class SvgFEFuncAElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFuncAElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEFuncAElement : SvgComponentTransferFunctionElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFuncAElement, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement SvgFEFuncAElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncAElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgComponentTransferFunctionElement.IsRenderable SvgComponentTransferFunctionElement.Type SvgComponentTransferFunctionElement.TableValues SvgComponentTransferFunctionElement.Slope SvgComponentTransferFunctionElement.Intercept SvgComponentTransferFunctionElement.Amplitude SvgComponentTransferFunctionElement.Exponent SvgComponentTransferFunctionElement.Offset SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEFuncAElement(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncBElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncBElement.-ctor.html",
    "title": "Constructor SvgFEFuncBElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEFuncBElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEFuncBElement(string, string, string, SvgDocument) public SvgFEFuncBElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncBElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncBElement.html",
    "title": "Class SvgFEFuncBElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFuncBElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEFuncBElement : SvgComponentTransferFunctionElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFuncBElement, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement SvgFEFuncBElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncBElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgComponentTransferFunctionElement.IsRenderable SvgComponentTransferFunctionElement.Type SvgComponentTransferFunctionElement.TableValues SvgComponentTransferFunctionElement.Slope SvgComponentTransferFunctionElement.Intercept SvgComponentTransferFunctionElement.Amplitude SvgComponentTransferFunctionElement.Exponent SvgComponentTransferFunctionElement.Offset SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEFuncBElement(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncGElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncGElement.-ctor.html",
    "title": "Constructor SvgFEFuncGElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEFuncGElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEFuncGElement(string, string, string, SvgDocument) public SvgFEFuncGElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncGElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncGElement.html",
    "title": "Class SvgFEFuncGElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFuncGElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEFuncGElement : SvgComponentTransferFunctionElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFuncGElement, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement SvgFEFuncGElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncGElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgComponentTransferFunctionElement.IsRenderable SvgComponentTransferFunctionElement.Type SvgComponentTransferFunctionElement.TableValues SvgComponentTransferFunctionElement.Slope SvgComponentTransferFunctionElement.Intercept SvgComponentTransferFunctionElement.Amplitude SvgComponentTransferFunctionElement.Exponent SvgComponentTransferFunctionElement.Offset SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEFuncGElement(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncRElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncRElement.-ctor.html",
    "title": "Constructor SvgFEFuncRElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEFuncRElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEFuncRElement(string, string, string, SvgDocument) public SvgFEFuncRElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEFuncRElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEFuncRElement.html",
    "title": "Class SvgFEFuncRElement | SharpVectors Documentation",
    "keywords": "Class SvgFEFuncRElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEFuncRElement : SvgComponentTransferFunctionElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEFuncRElement, ISvgComponentTransferFunctionElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgComponentTransferFunctionElement SvgFEFuncRElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEFuncRElement ISvgComponentTransferFunctionElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgComponentTransferFunctionElement.IsRenderable SvgComponentTransferFunctionElement.Type SvgComponentTransferFunctionElement.TableValues SvgComponentTransferFunctionElement.Slope SvgComponentTransferFunctionElement.Intercept SvgComponentTransferFunctionElement.Amplitude SvgComponentTransferFunctionElement.Exponent SvgComponentTransferFunctionElement.Offset SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEFuncRElement(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.-ctor.html",
    "title": "Constructor SvgFEGaussianBlurElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEGaussianBlurElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEGaussianBlurElement(string, string, string, SvgDocument) public SvgFEGaussianBlurElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.SetStdDeviation.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.SetStdDeviation.html",
    "title": "Method SetStdDeviation | SharpVectors Documentation",
    "keywords": "Method SetStdDeviation Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetStdDeviation(float, float) public void SetStdDeviation(float stdDeviationX, float stdDeviationY) Parameters stdDeviationX float stdDeviationY float"
  },
  "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.StdDeviationX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.StdDeviationX.html",
    "title": "Property StdDeviationX | SharpVectors Documentation",
    "keywords": "Property StdDeviationX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StdDeviationX public ISvgAnimatedNumber StdDeviationX { get; } Property Value ISvgAnimatedNumber Remarks The standard deviation for the blur operation. If two numbers are provided, the first number represents a standard deviation value along the x-axis of the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. The second value represents a standard deviation in Y. If one number is provided, then that value is used for both X and Y. A negative value is an error(see Error processing). A value of zero disables the effect of the given filter primitive(i.e., the result is the filter input image). If 'stdDeviation' is 0 in only one of X or Y, then the effect is that the blur is only applied in the direction that has a non-zero value."
  },
  "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.StdDeviationY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.StdDeviationY.html",
    "title": "Property StdDeviationY | SharpVectors Documentation",
    "keywords": "Property StdDeviationY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StdDeviationY public ISvgAnimatedNumber StdDeviationY { get; } Property Value ISvgAnimatedNumber Remarks The standard deviation for the blur operation. If two numbers are provided, the first number represents a standard deviation value along the x-axis of the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. The second value represents a standard deviation in Y. If one number is provided, then that value is used for both X and Y. A negative value is an error(see Error processing). A value of zero disables the effect of the given filter primitive(i.e., the result is the filter input image). If 'stdDeviation' is 0 in only one of X or Y, then the effect is that the blur is only applied in the direction that has a non-zero value."
  },
  "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEGaussianBlurElement.html",
    "title": "Class SvgFEGaussianBlurElement | SharpVectors Documentation",
    "keywords": "Class SvgFEGaussianBlurElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This filter primitive performs a Gaussian blur on the input image. public sealed class SvgFEGaussianBlurElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEGaussianBlurElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEGaussianBlurElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEGaussianBlurElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEGaussianBlurElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element. StdDeviationX StdDeviationY Methods SetStdDeviation(float, float)"
  },
  "api/SharpVectors.Dom.Svg.SvgFEImageElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEImageElement.-ctor.html",
    "title": "Constructor SvgFEImageElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEImageElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEImageElement(string, string, string, SvgDocument) public SvgFEImageElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEImageElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEImageElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgFEImageElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEImageElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEImageElement.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEImageElement.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreserveAspectRatio public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgFEImageElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEImageElement.html",
    "title": "Class SvgFEImageElement | SharpVectors Documentation",
    "keywords": "Class SvgFEImageElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEImageElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEImageElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEImageElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEImageElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgLangSpace ISvgExternalResourcesRequired ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEImageElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Href PreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMergeElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMergeElement.-ctor.html",
    "title": "Constructor SvgFEMergeElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEMergeElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEMergeElement(string, string, string, SvgDocument) public SvgFEMergeElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMergeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMergeElement.html",
    "title": "Class SvgFEMergeElement | SharpVectors Documentation",
    "keywords": "Class SvgFEMergeElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEMergeElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEMergeElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEMergeElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEMergeElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEMergeElement(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.-ctor.html",
    "title": "Constructor SvgFEMergeNodeElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEMergeNodeElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEMergeNodeElement(string, string, string, SvgDocument) public SvgFEMergeNodeElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMergeNodeElement.html",
    "title": "Class SvgFEMergeNodeElement | SharpVectors Documentation",
    "keywords": "Class SvgFEMergeNodeElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEMergeNodeElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEMergeNodeElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFEMergeNodeElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEMergeNodeElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEMergeNodeElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element. IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.-ctor.html",
    "title": "Constructor SvgFEMorphologyElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEMorphologyElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEMorphologyElement(string, string, string, SvgDocument) public SvgFEMorphologyElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.Operator.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.Operator.html",
    "title": "Property Operator | SharpVectors Documentation",
    "keywords": "Property Operator Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Operator A keyword indicating whether to erode (i.e., thin) or dilate (fatten) the source graphic. public ISvgAnimatedEnumeration Operator { get; } Property Value ISvgAnimatedEnumeration operator = \"erode | dilate\" An enumeration of the type SvgFilterMorphologyOperator. The default value is Erode. Remarks If attribute 'operator' is not specified, then the effect is as if a value of erode were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.RadiusX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.RadiusX.html",
    "title": "Property RadiusX | SharpVectors Documentation",
    "keywords": "Property RadiusX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RadiusX public ISvgAnimatedNumber RadiusX { get; } Property Value ISvgAnimatedNumber Remarks The radius (or radii) for the operation. If two numbers are provided, the first number represents a x-radius and the second value represents a y-radius. If one number is provided, then that value is used for both X and Y. The values are in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. A negative value is an error(see Error processing). A value of zero disables the effect of the given filter primitive(i.e., the result is a transparent black image). If the attribute is not specified, then the effect is as if a value of 0 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.RadiusY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.RadiusY.html",
    "title": "Property RadiusY | SharpVectors Documentation",
    "keywords": "Property RadiusY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RadiusY public ISvgAnimatedNumber RadiusY { get; } Property Value ISvgAnimatedNumber Remarks The radius (or radii) for the operation. If two numbers are provided, the first number represents a x-radius and the second value represents a y-radius. If one number is provided, then that value is used for both X and Y. The values are in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. A negative value is an error(see Error processing). A value of zero disables the effect of the given filter primitive(i.e., the result is a transparent black image). If the attribute is not specified, then the effect is as if a value of 0 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEMorphologyElement.html",
    "title": "Class SvgFEMorphologyElement | SharpVectors Documentation",
    "keywords": "Class SvgFEMorphologyElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEMorphologyElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEMorphologyElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEMorphologyElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEMorphologyElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEMorphologyElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element. Operator A keyword indicating whether to erode (i.e., thin) or dilate (fatten) the source graphic. RadiusX RadiusY"
  },
  "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.-ctor.html",
    "title": "Constructor SvgFEOffsetElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEOffsetElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEOffsetElement(string, string, string, SvgDocument) public SvgFEOffsetElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.Dx.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.Dx.html",
    "title": "Property Dx | SharpVectors Documentation",
    "keywords": "Property Dx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Dx The amount to offset the input graphic along the x-axis. The offset amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. public ISvgAnimatedNumber Dx { get; } Property Value ISvgAnimatedNumber dx = \"number\" Remarks Corresponds to attribute 'dx' on the given 'feOffset' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.Dy.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.Dy.html",
    "title": "Property Dy | SharpVectors Documentation",
    "keywords": "Property Dy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Dy The amount to offset the input graphic along the y-axis. The offset amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. public ISvgAnimatedNumber Dy { get; } Property Value ISvgAnimatedNumber dy = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'dy' on the given 'feOffset' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEOffsetElement.html",
    "title": "Class SvgFEOffsetElement | SharpVectors Documentation",
    "keywords": "Class SvgFEOffsetElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEOffsetElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEOffsetElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFEOffsetElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEOffsetElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEOffsetElement(string, string, string, SvgDocument) Properties Dx The amount to offset the input graphic along the x-axis. The offset amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Dy The amount to offset the input graphic along the y-axis. The offset amount is expressed in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. In In1 Corresponds to attribute in on the given feBlend element."
  },
  "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.-ctor.html",
    "title": "Constructor SvgFEPointLightElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFEPointLightElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFEPointLightElement(string, string, string, SvgDocument) public SvgFEPointLightElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X X location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. public ISvgAnimatedNumber X { get; } Property Value ISvgAnimatedNumber x = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'x' on the given 'fePointLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y Y location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. public ISvgAnimatedNumber Y { get; } Property Value ISvgAnimatedNumber y = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'y' on the given 'fePointLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.Z.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.Z.html",
    "title": "Property Z | SharpVectors Documentation",
    "keywords": "Property Z Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Z Z location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element, assuming that, in the initial coordinate system, the positive Z-axis comes out towards the person viewing the content and assuming that one unit along the Z-axis equals one unit in X and Y. public ISvgAnimatedNumber Z { get; } Property Value ISvgAnimatedNumber z = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'z' on the given 'fePointLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFEPointLightElement.html",
    "title": "Class SvgFEPointLightElement | SharpVectors Documentation",
    "keywords": "Class SvgFEPointLightElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFEPointLightElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFEPointLightElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFEPointLightElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFEPointLightElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFEPointLightElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable. X X location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Y Y location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Z Z location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element, assuming that, in the initial coordinate system, the positive Z-axis comes out towards the person viewing the content and assuming that one unit along the Z-axis equals one unit in X and Y."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.-ctor.html",
    "title": "Constructor SvgFESpecularLightingElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFESpecularLightingElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFESpecularLightingElement(string, string, string, SvgDocument) public SvgFESpecularLightingElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\" Remarks Corresponds to attribute 'in' on the given 'feSpecularLighting' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.KernelUnitLengthX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.KernelUnitLengthX.html",
    "title": "Property KernelUnitLengthX | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KernelUnitLengthX Corresponds to attribute 'kernelUnitLength' on the given 'feSpecularLighting' element. public ISvgAnimatedNumber KernelUnitLengthX { get; } Property Value ISvgAnimatedNumber Remarks The first number is the dx value. The second number is the dy value. If the dy value is not specified, it defaults to the same value as dx. Indicates the intended distance in current filter units (i.e., units as determined by the value of attribute 'primitiveUnits') for dx and dy, respectively, in the surface normal calculation formulas. By specifying value(s) for 'kernelUnitLength', the kernel becomes defined in a scalable, abstract coordinate system. If 'kernelUnitLength' is not specified, the dx and dy values should represent very small deltas relative to a given (x,y) position, which might be implemented in some cases as one pixel in the intermediate image offscreen bitmap, which is a pixel-based coordinate system, and thus potentially not scalable. For some level of consistency across display media and user agents, it is necessary that a value be provided for at least one of 'filterRes' and 'kernelUnitLength'."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.KernelUnitLengthY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.KernelUnitLengthY.html",
    "title": "Property KernelUnitLengthY | SharpVectors Documentation",
    "keywords": "Property KernelUnitLengthY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll KernelUnitLengthY Corresponds to attribute 'kernelUnitLength' on the given 'feSpecularLighting' element. public ISvgAnimatedNumber KernelUnitLengthY { get; } Property Value ISvgAnimatedNumber Remarks The first number is the dx value. The second number is the dy value. If the dy value is not specified, it defaults to the same value as dx. Indicates the intended distance in current filter units (i.e., units as determined by the value of attribute 'primitiveUnits') for dx and dy, respectively, in the surface normal calculation formulas. By specifying value(s) for 'kernelUnitLength', the kernel becomes defined in a scalable, abstract coordinate system. If 'kernelUnitLength' is not specified, the dx and dy values should represent very small deltas relative to a given (x,y) position, which might be implemented in some cases as one pixel in the intermediate image offscreen bitmap, which is a pixel-based coordinate system, and thus potentially not scalable. For some level of consistency across display media and user agents, it is necessary that a value be provided for at least one of 'filterRes' and 'kernelUnitLength'."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.SpecularConstant.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.SpecularConstant.html",
    "title": "Property SpecularConstant | SharpVectors Documentation",
    "keywords": "Property SpecularConstant Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SpecularConstant public ISvgAnimatedNumber SpecularConstant { get; } Property Value ISvgAnimatedNumber specularConstant = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'specularConstant' on the given 'feSpecularLighting' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.SpecularExponent.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.SpecularExponent.html",
    "title": "Property SpecularExponent | SharpVectors Documentation",
    "keywords": "Property SpecularExponent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SpecularExponent public ISvgAnimatedNumber SpecularExponent { get; } Property Value ISvgAnimatedNumber specularExponent = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'specularExponent' on the given 'feSpecularLighting' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.SurfaceScale.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.SurfaceScale.html",
    "title": "Property SurfaceScale | SharpVectors Documentation",
    "keywords": "Property SurfaceScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SurfaceScale public ISvgAnimatedNumber SurfaceScale { get; } Property Value ISvgAnimatedNumber surfaceScale = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'surfaceScale' on the given 'feSpecularLighting' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpecularLightingElement.html",
    "title": "Class SvgFESpecularLightingElement | SharpVectors Documentation",
    "keywords": "Class SvgFESpecularLightingElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This filter primitive lights a source graphic using the alpha channel as a bump map. The resulting image is an RGBA image based on the light color. The lighting calculation follows the standard specular component of the Phong lighting model. The resulting image depends on the light color, light position and surface geometry of the input bump map. The result of the lighting calculation is added. The filter primitive assumes that the viewer is at infinity in the z direction (i.e., the unit vector in the eye direction is (0,0,1) everywhere). public sealed class SvgFESpecularLightingElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFESpecularLightingElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFESpecularLightingElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFESpecularLightingElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFESpecularLightingElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element. KernelUnitLengthX Corresponds to attribute 'kernelUnitLength' on the given 'feSpecularLighting' element. KernelUnitLengthY Corresponds to attribute 'kernelUnitLength' on the given 'feSpecularLighting' element. SpecularConstant SpecularExponent SurfaceScale"
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.-ctor.html",
    "title": "Constructor SvgFESpotLightElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFESpotLightElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFESpotLightElement(string, string, string, SvgDocument) public SvgFESpotLightElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.LimitingConeAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.LimitingConeAngle.html",
    "title": "Property LimitingConeAngle | SharpVectors Documentation",
    "keywords": "Property LimitingConeAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LimitingConeAngle A limiting cone which restricts the region where the light is projected. No light is projected outside the cone. 'limitingConeAngle' represents the angle in degrees between the spot light axis (i.e. the axis between the light source and the point to which it is pointing at) and the spot light cone. User agents should apply a smoothing technique such as anti-aliasing at the boundary of the cone. public ISvgAnimatedNumber LimitingConeAngle { get; } Property Value ISvgAnimatedNumber limitingConeAngle = \"number\" If no value is specified, then no limiting cone will be applied. Remarks Corresponds to attribute 'limitingConeAngle' on the given 'feSpotLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.PointsAtX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.PointsAtX.html",
    "title": "Property PointsAtX | SharpVectors Documentation",
    "keywords": "Property PointsAtX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PointsAtX X location in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element of the point at which the light source is pointing. public ISvgAnimatedNumber PointsAtX { get; } Property Value ISvgAnimatedNumber pointsAtX = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'pointsAtX' on the given 'feSpotLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.PointsAtY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.PointsAtY.html",
    "title": "Property PointsAtY | SharpVectors Documentation",
    "keywords": "Property PointsAtY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PointsAtY Y location in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element of the point at which the light source is pointing. public ISvgAnimatedNumber PointsAtY { get; } Property Value ISvgAnimatedNumber pointsAtY = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'pointsAtY' on the given 'feSpotLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.PointsAtZ.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.PointsAtZ.html",
    "title": "Property PointsAtZ | SharpVectors Documentation",
    "keywords": "Property PointsAtZ Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PointsAtZ Z location in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element of the point at which the light source is pointing, assuming that, in the initial coordinate system, the positive Z-axis comes out towards the person viewing the content and assuming that one unit along the Z-axis equals one unit in X and Y. public ISvgAnimatedNumber PointsAtZ { get; } Property Value ISvgAnimatedNumber pointsAtZ = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'pointsAtZ' on the given 'feSpotLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.SpecularExponent.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.SpecularExponent.html",
    "title": "Property SpecularExponent | SharpVectors Documentation",
    "keywords": "Property SpecularExponent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SpecularExponent Exponent value controlling the focus for the light source. public ISvgAnimatedNumber SpecularExponent { get; } Property Value ISvgAnimatedNumber specularExponent = \"number\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'specularExponent' on the given 'feSpotLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X X location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. public ISvgAnimatedNumber X { get; } Property Value ISvgAnimatedNumber x = \"number\" Remarks Corresponds to attribute 'x' on the given 'feSpotLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y Y location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. public ISvgAnimatedNumber Y { get; } Property Value ISvgAnimatedNumber y = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'y' on the given 'feSpotLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.Z.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.Z.html",
    "title": "Property Z | SharpVectors Documentation",
    "keywords": "Property Z Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Z Z location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element, assuming that, in the initial coordinate system, the positive Z-axis comes out towards the person viewing the content and assuming that one unit along the Z-axis equals one unit in X and Y. public ISvgAnimatedNumber Z { get; } Property Value ISvgAnimatedNumber z = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks Corresponds to attribute 'z' on the given 'feSpotLight' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFESpotLightElement.html",
    "title": "Class SvgFESpotLightElement | SharpVectors Documentation",
    "keywords": "Class SvgFESpotLightElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFESpotLightElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFESpotLightElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFESpotLightElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFESpotLightElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFESpotLightElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable. LimitingConeAngle A limiting cone which restricts the region where the light is projected. No light is projected outside the cone. 'limitingConeAngle' represents the angle in degrees between the spot light axis (i.e. the axis between the light source and the point to which it is pointing at) and the spot light cone. User agents should apply a smoothing technique such as anti-aliasing at the boundary of the cone. PointsAtX X location in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element of the point at which the light source is pointing. PointsAtY Y location in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element of the point at which the light source is pointing. PointsAtZ Z location in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element of the point at which the light source is pointing, assuming that, in the initial coordinate system, the positive Z-axis comes out towards the person viewing the content and assuming that one unit along the Z-axis equals one unit in X and Y. SpecularExponent Exponent value controlling the focus for the light source. X X location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Y Y location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element. Z Z location for the light source in the coordinate system established by attribute 'primitiveUnits' on the 'filter' element, assuming that, in the initial coordinate system, the positive Z-axis comes out towards the person viewing the content and assuming that one unit along the Z-axis equals one unit in X and Y."
  },
  "api/SharpVectors.Dom.Svg.SvgFETileElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETileElement.-ctor.html",
    "title": "Constructor SvgFETileElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFETileElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFETileElement(string, string, string, SvgDocument) public SvgFETileElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFETileElement.In.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETileElement.In.html",
    "title": "Property In | SharpVectors Documentation",
    "keywords": "Property In Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In public ISvgAnimatedString In { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFETileElement.In1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETileElement.In1.html",
    "title": "Property In1 | SharpVectors Documentation",
    "keywords": "Property In1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll In1 Corresponds to attribute in on the given feBlend element. public ISvgAnimatedString In1 { get; } Property Value ISvgAnimatedString in = \"SourceGraphic | SourceAlpha | BackgroundImage | BackgroundAlpha | FillPaint | StrokePaint | filter-primitive-reference\""
  },
  "api/SharpVectors.Dom.Svg.SvgFETileElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETileElement.html",
    "title": "Class SvgFETileElement | SharpVectors Documentation",
    "keywords": "Class SvgFETileElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgFETileElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFETileElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFETileElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFETileElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFETileElement(string, string, string, SvgDocument) Properties In In1 Corresponds to attribute in on the given feBlend element."
  },
  "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.-ctor.html",
    "title": "Constructor SvgFETurbulenceElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFETurbulenceElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFETurbulenceElement(string, string, string, SvgDocument) public SvgFETurbulenceElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.BaseFrequencyX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.BaseFrequencyX.html",
    "title": "Property BaseFrequencyX | SharpVectors Documentation",
    "keywords": "Property BaseFrequencyX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseFrequencyX Corresponds to attribute 'baseFrequency' on the given 'feTurbulence' element. Contains the X component of the 'baseFrequency' attribute. public ISvgAnimatedNumber BaseFrequencyX { get; } Property Value ISvgAnimatedNumber baseFrequency = \"number-optional-number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. Remarks The base frequency (frequencies) parameter(s) for the noise function. If two numbers are provided, the first number represents a base frequency in the X direction and the second value represents a base frequency in the Y direction. If one number is provided, then that value is used for both X and Y. A negative value for base frequency is an error (see Error processing)."
  },
  "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.BaseFrequencyY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.BaseFrequencyY.html",
    "title": "Property BaseFrequencyY | SharpVectors Documentation",
    "keywords": "Property BaseFrequencyY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseFrequencyY Corresponds to attribute 'baseFrequency' on the given 'feTurbulence' element. Contains the Y component of the (possibly computed automatically) 'baseFrequency' attribute. public ISvgAnimatedNumber BaseFrequencyY { get; } Property Value ISvgAnimatedNumber baseFrequency = \"number-optional-number\" If the attribute is not specified, then the effect is as if a value of 0 were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.NumOctaves.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.NumOctaves.html",
    "title": "Property NumOctaves | SharpVectors Documentation",
    "keywords": "Property NumOctaves Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NumOctaves The numOctaves parameter for the noise function. public ISvgAnimatedInteger NumOctaves { get; } Property Value ISvgAnimatedInteger numOctaves = \"integer\" If the attribute is not specified, then the effect is as if a value of 1 were specified. Remarks Corresponds to attribute 'numOctaves' on the given 'feTurbulence' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.Seed.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.Seed.html",
    "title": "Property Seed | SharpVectors Documentation",
    "keywords": "Property Seed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Seed The starting number for the pseudo random number generator. public ISvgAnimatedNumber Seed { get; } Property Value ISvgAnimatedNumber seed = \"number\" If the attribute is not specified, then the effect is as if a value of 0 were specified. When the seed number is handed over to the algorithm above it must first be truncated, i.e. rounded to the closest integer value towards zero. Remarks Corresponds to attribute 'seed' on the given 'feTurbulence' element."
  },
  "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.StitchTiles.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.StitchTiles.html",
    "title": "Property StitchTiles | SharpVectors Documentation",
    "keywords": "Property StitchTiles Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StitchTiles Corresponds to attribute 'stitchTiles' on the given 'feTurbulence' element. public ISvgAnimatedEnumeration StitchTiles { get; } Property Value ISvgAnimatedEnumeration stitchTiles = \"stitch | noStitch\" An enumeration of the type SvgFilterStitchOption. The default value is NoStitch. Remarks If stitchTiles=\"noStitch\", no attempt it made to achieve smooth transitions at the border of tiles which contain a turbulence function. Sometimes the result will show clear discontinuities at the tile borders. If stitchTiles = \"stitch\", then the user agent will automatically adjust baseFrequency-x and baseFrequency-y values such that the feTurbulence node's width and height (i.e., the width and height of the current subregion) contains an integral number of the Perlin tile width and height for the first octave. The baseFrequency will be adjusted up or down depending on which way has the smallest relative (not absolute) change as follows: Given the frequency, calculate lowFreq=floor(width*frequency)/width and hiFreq=ceil(width*frequency)/width. If frequency/lowFreq < hiFreq/frequency then use lowFreq, else use hiFreq. While generating turbulence values, generate lattice vectors as normal for Perlin Noise, except for those lattice points that lie on the right or bottom edges of the active area (the size of the resulting tile). In those cases, copy the lattice vector from the opposite edge of the active area. If attribute 'stitchTiles' is not specified, then the effect is as if a value of noStitch were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Type Indicates whether the filter primitive should perform a noise or turbulence function. public ISvgAnimatedEnumeration Type { get; } Property Value ISvgAnimatedEnumeration type = \"fractalNoise | turbulence\" An enumeration of the type SvgFilterTurbulenceType. The default value is Turbulence. Remarks Corresponds to attribute 'type' on the given 'feTurbulence' element. If attribute 'type' is not specified, then the effect is as if a value of turbulence were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFETurbulenceElement.html",
    "title": "Class SvgFETurbulenceElement | SharpVectors Documentation",
    "keywords": "Class SvgFETurbulenceElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This filter primitive creates an image using the Perlin turbulence function. It allows the synthesis of artificial textures like clouds or marble. public sealed class SvgFETurbulenceElement : SvgFilterPrimitiveStandardAttributes, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFETurbulenceElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes SvgFETurbulenceElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFETurbulenceElement ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Inherited Members SvgFilterPrimitiveStandardAttributes.IsRenderable SvgFilterPrimitiveStandardAttributes.X SvgFilterPrimitiveStandardAttributes.Y SvgFilterPrimitiveStandardAttributes.Width SvgFilterPrimitiveStandardAttributes.Height SvgFilterPrimitiveStandardAttributes.Result SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFETurbulenceElement(string, string, string, SvgDocument) Properties BaseFrequencyX Corresponds to attribute 'baseFrequency' on the given 'feTurbulence' element. Contains the X component of the 'baseFrequency' attribute. BaseFrequencyY Corresponds to attribute 'baseFrequency' on the given 'feTurbulence' element. Contains the Y component of the (possibly computed automatically) 'baseFrequency' attribute. NumOctaves The numOctaves parameter for the noise function. Seed The starting number for the pseudo random number generator. StitchTiles Corresponds to attribute 'stitchTiles' on the given 'feTurbulence' element. Type Indicates whether the filter primitive should perform a noise or turbulence function."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterBlendMode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterBlendMode.html",
    "title": "Enum SvgFilterBlendMode | SharpVectors Documentation",
    "keywords": "Enum SvgFilterBlendMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The basic Filter Blend Modes public enum SvgFilterBlendMode : ushort Fields Unknown = 0 The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. Normal = 1 Corresponds to value normal. Multiply = 2 Corresponds to value multiply. Screen = 3 Corresponds to value screen. Darken = 4 Corresponds to value darken. Lighten = 5 Corresponds to value lighten. Overlay = 6 Corresponds to value overlay. ColorDodge = 7 Corresponds to value color-dodge. ColorBurn = 8 Corresponds to value color-burn. HardLight = 9 Corresponds to value hard-light. SoftLight = 10 Corresponds to value soft-light. Difference = 11 Corresponds to value difference. Exclusion = 12 Corresponds to value exclusion. Hue = 13 Corresponds to value hue. Saturation = 14 Corresponds to value saturation. Color = 15 Corresponds to value color. Luminosity = 16 Corresponds to value luminosity."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterChannelSelector.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterChannelSelector.html",
    "title": "Enum SvgFilterChannelSelector | SharpVectors Documentation",
    "keywords": "Enum SvgFilterChannelSelector Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The Filter Channel Selectors public enum SvgFilterChannelSelector : ushort Fields Unknown = 0 R = 1 G = 2 B = 3 A = 4"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterColorMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterColorMatrix.html",
    "title": "Enum SvgFilterColorMatrix | SharpVectors Documentation",
    "keywords": "Enum SvgFilterColorMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The basic Filter Matrix Types public enum SvgFilterColorMatrix : ushort Fields Unknown = 0 Matrix = 1 Saturate = 2 Huerotate = 3 LuminanceToAlpha = 4"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterCompositeOperator.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterCompositeOperator.html",
    "title": "Enum SvgFilterCompositeOperator | SharpVectors Documentation",
    "keywords": "Enum SvgFilterCompositeOperator Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The Filter Composite Operators public enum SvgFilterCompositeOperator : ushort Fields Unknown = 0 Over = 1 In = 2 Out = 3 Atop = 4 Xor = 5 Arithmetic = 6"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterEdgeMode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterEdgeMode.html",
    "title": "Enum SvgFilterEdgeMode | SharpVectors Documentation",
    "keywords": "Enum SvgFilterEdgeMode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The Filter Edge Mode Types public enum SvgFilterEdgeMode : ushort Fields Unknown = 0 Duplicate = 1 Wrap = 2 None = 3"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.-ctor.html",
    "title": "Constructor SvgFilterElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFilterElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFilterElement(string, string, string, SvgDocument) public SvgFilterElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.BackgroundAlpha.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.BackgroundAlpha.html",
    "title": "Field BackgroundAlpha | SharpVectors Documentation",
    "keywords": "Field BackgroundAlpha Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Same as BackgroundImage except only the alpha channel is used. See SourceAlpha and the isolation property. public const string BackgroundAlpha = \"BackgroundAlpha\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.BackgroundImage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.BackgroundImage.html",
    "title": "Field BackgroundImage | SharpVectors Documentation",
    "keywords": "Field BackgroundImage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This keyword represents the back drop defined by the current isolation group behind the filter region at the time that the filter element was invoked. public const string BackgroundImage = \"BackgroundImage\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.FillPaint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.FillPaint.html",
    "title": "Field FillPaint | SharpVectors Documentation",
    "keywords": "Field FillPaint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This keyword represents the value of the fill property on the target element for the filter effect. public const string FillPaint = \"FillPaint\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.FilterResX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.FilterResX.html",
    "title": "Property FilterResX | SharpVectors Documentation",
    "keywords": "Property FilterResX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FilterResX The contains the X component of attribute 'filterRes'. The 'filterRes' indicates the width and height of the intermediate images in pixels of a filter primitive. public ISvgAnimatedInteger FilterResX { get; } Property Value ISvgAnimatedInteger This value takes one or two values, the first one outlining the resolution in horizontal direction, the second one in vertical direction. If only one value is specified, it is used for both directions. Remarks The 'filterRes' attribute was removed from the SVG 2 specification."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.FilterResY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.FilterResY.html",
    "title": "Property FilterResY | SharpVectors Documentation",
    "keywords": "Property FilterResY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FilterResY The contains the X component of attribute 'filterRes'. The 'filterRes' indicates the width and height of the intermediate images in pixels of a filter primitive. public ISvgAnimatedInteger FilterResY { get; } Property Value ISvgAnimatedInteger This value takes one or two values, the first one outlining the resolution in horizontal direction, the second one in vertical direction. If only one value is specified, it is used for both directions. Remarks The 'filterRes' attribute was removed from the SVG 2 specification."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.FilterUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.FilterUnits.html",
    "title": "Property FilterUnits | SharpVectors Documentation",
    "keywords": "Property FilterUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FilterUnits Gets a value definining the coordinate system for attributes X, Y, Width, Height. public ISvgAnimatedEnumeration FilterUnits { get; } Property Value ISvgAnimatedEnumeration filterUnits = \"userSpaceOnUse | objectBoundingBox\" If the value is equal to UserSpaceOnUse, x, y, width, height represent values in the current user coordinate system in place at the time when the filter element is referenced (i.e., the user coordinate system for the element referencing the filter element via a filter property). If the value is equal to ObjectBoundingBox, then x, y, width, height represent fractions or percentages of the bounding box on the referencing element (see object bounding box units). The initial value for filter-units is ObjectBoundingBox."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height public ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.PrimitiveUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.PrimitiveUnits.html",
    "title": "Property PrimitiveUnits | SharpVectors Documentation",
    "keywords": "Property PrimitiveUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PrimitiveUnits Gets a value specifying the coordinate system for the various length values within the filter primitives and for the attributes that define the filter primitive subregion. public ISvgAnimatedEnumeration PrimitiveUnits { get; } Property Value ISvgAnimatedEnumeration primitiveUnits = \"userSpaceOnUse | objectBoundingBox\" If the value is equal to UserSpaceOnUse, any length values within the filter definitions represent values in the current local coordinate system in place at the time when the filter element is referenced (i.e., the user coordinate system for the element referencing the filter element via a filter property). If the value is equal to ObjectBoundingBox, then any length values within the filter definitions represent fractions or percentages of the bounding box on the referencing element (see object bounding box units). Note that if only one number was specified in a number-optional-number value this number is expanded out before the primitive-units computation takes place. The initial value for primitive-units is UserSpaceOnUse."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.SetFilterRes.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.SetFilterRes.html",
    "title": "Method SetFilterRes | SharpVectors Documentation",
    "keywords": "Method SetFilterRes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetFilterRes(ulong, ulong) Sets the values for attribute 'filterRes'. public void SetFilterRes(ulong filterResX, ulong filterResY) Parameters filterResX ulong The X component of attribute 'filterRes'. filterResY ulong The Y component of attribute 'filterRes'."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.SourceAlpha.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.SourceAlpha.html",
    "title": "Field SourceAlpha | SharpVectors Documentation",
    "keywords": "Field SourceAlpha Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This keyword represents the graphics elements that were the original input into the filter element. public const string SourceAlpha = \"SourceAlpha\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.SourceGraphic.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.SourceGraphic.html",
    "title": "Field SourceGraphic | SharpVectors Documentation",
    "keywords": "Field SourceGraphic Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This keyword represents the graphics elements that were the original input into the filter element. public const string SourceGraphic = \"SourceGraphic\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.StrokePaint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.StrokePaint.html",
    "title": "Field StrokePaint | SharpVectors Documentation",
    "keywords": "Field StrokePaint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This keyword represents the value of the stroke property on the target element for the filter effect. public const string StrokePaint = \"StrokePaint\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width public ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterElement.html",
    "title": "Class SvgFilterElement | SharpVectors Documentation",
    "keywords": "Class SvgFilterElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll An implementation of the ISvgFilterElement interface, which corresponds to the 'filter' element. public sealed class SvgFilterElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFilterElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFilterElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks A filter effect is a graphical operation that is applied to an element as it is drawn into the document. It is an image-based effect, in that it takes zero or more images as input, a number of parameters specific to the effect, and then produces an image as output. The output image is either rendered into the document instead of the original element, used as an input image to another filter effect, or provided as a CSS image value. Filter Region A filter element can define a filter region on the canvas to which a given filter effect applies and can provide a resolution for any intermediate continuous tone images used to process any raster-based filter primitives. The filter element has the following attributes which work together to define the filter region: FilterUnits, X, Y, Width, Height Constructors SvgFilterElement(string, string, string, SvgDocument) Fields BackgroundAlpha Same as BackgroundImage except only the alpha channel is used. See SourceAlpha and the isolation property. BackgroundImage This keyword represents the back drop defined by the current isolation group behind the filter region at the time that the filter element was invoked. FillPaint This keyword represents the value of the fill property on the target element for the filter effect. SourceAlpha This keyword represents the graphics elements that were the original input into the filter element. SourceGraphic This keyword represents the graphics elements that were the original input into the filter element. StrokePaint This keyword represents the value of the stroke property on the target element for the filter effect. Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. FilterResX The contains the X component of attribute 'filterRes'. The 'filterRes' indicates the width and height of the intermediate images in pixels of a filter primitive. FilterResY The contains the X component of attribute 'filterRes'. The 'filterRes' indicates the width and height of the intermediate images in pixels of a filter primitive. FilterUnits Gets a value definining the coordinate system for attributes X, Y, Width, Height. Height Href IsRenderable Gets a value indicating whether this SVG element is renderable. PrimitiveUnits Gets a value specifying the coordinate system for the various length values within the filter primitives and for the attributes that define the filter primitive subregion. Width X Y Methods SetFilterRes(ulong, ulong) Sets the values for attribute 'filterRes'."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterMorphologyOperator.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterMorphologyOperator.html",
    "title": "Enum SvgFilterMorphologyOperator | SharpVectors Documentation",
    "keywords": "Enum SvgFilterMorphologyOperator Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The Morphology Operator public enum SvgFilterMorphologyOperator : ushort Fields Unknown = 0 The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. Erode = 1 Corresponds to value 'erode'. Dilate = 2 Corresponds to value 'dilate'."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.-ctor.html",
    "title": "Constructor SvgFilterPrimitiveStandardAttributes | SharpVectors Documentation",
    "keywords": "Constructor SvgFilterPrimitiveStandardAttributes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFilterPrimitiveStandardAttributes(string, string, string, SvgDocument) protected SvgFilterPrimitiveStandardAttributes(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height The height of the subregion which restricts calculation and rendering of the given filter primitive. public ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength height = length-percentage A negative or zero value must disable the effect of the given filter primitive (i.e., the result is a transparent black image). The initial value is 100%."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.Result.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.Result.html",
    "title": "Property Result | SharpVectors Documentation",
    "keywords": "Property Result Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Result This is an custom-ident and an assigned name for this filter primitive. public ISvgAnimatedString Result { get; } Property Value ISvgAnimatedString result = filter-primitive-reference Remarks If supplied, then graphics that result from processing this filter primitive can be referenced by an in attribute on a subsequent filter primitive within the same filter element. If no value is provided, the output will only be available for re-use as the implicit input into the next filter primitive if that filter primitive provides no value for its in attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width The width of the subregion which restricts calculation and rendering of the given filter primitive. public ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength width = length-percentage A negative or zero value disables the effect of the given filter primitive (i.e., the result is a transparent black image). The initial value is 100%."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X The minimum x coordinate for the subregion which restricts calculation and rendering of the given filter primitive. public ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength x = length-percentage The initial value is 0%."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y The minimum y coordinate for the subregion which restricts calculation and rendering of the given filter primitive. public ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength y = length-percentage The initial value is 0%."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._height.html",
    "title": "Field _height | SharpVectors Documentation",
    "keywords": "Field _height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedLength _height Returns ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._reSeparators.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._reSeparators.html",
    "title": "Field _reSeparators | SharpVectors Documentation",
    "keywords": "Field _reSeparators Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected static readonly Regex _reSeparators Returns Regex"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._result.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._result.html",
    "title": "Field _result | SharpVectors Documentation",
    "keywords": "Field _result Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedString _result Returns ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._width.html",
    "title": "Field _width | SharpVectors Documentation",
    "keywords": "Field _width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedLength _width Returns ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._x.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._x.html",
    "title": "Field _x | SharpVectors Documentation",
    "keywords": "Field _x Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedLength _x Returns ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes._y.html",
    "title": "Field _y | SharpVectors Documentation",
    "keywords": "Field _y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected ISvgAnimatedLength _y Returns ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterPrimitiveStandardAttributes.html",
    "title": "Class SvgFilterPrimitiveStandardAttributes | SharpVectors Documentation",
    "keywords": "Class SvgFilterPrimitiveStandardAttributes Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This is abstract class for filter primitive attributes that are available for all filter primitives: public abstract class SvgFilterPrimitiveStandardAttributes : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgFilterPrimitiveStandardAttributes, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFilterPrimitiveStandardAttributes Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgFilterPrimitiveStandardAttributes ISvgStylable Derived SvgFEBlendElement SvgFEColorMatrixElement SvgFEComponentTransferElement SvgFECompositeElement SvgFEConvolveMatrixElement SvgFEDiffuseLightingElement SvgFEDisplacementMapElement SvgFEFloodElement SvgFEGaussianBlurElement SvgFEImageElement SvgFEMergeElement SvgFEMorphologyElement SvgFEOffsetElement SvgFESpecularLightingElement SvgFETileElement SvgFETurbulenceElement Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgFilterPrimitiveStandardAttributes(string, string, string, SvgDocument) Fields _height _reSeparators _result _width _x _y Properties Height The height of the subregion which restricts calculation and rendering of the given filter primitive. IsRenderable Gets a value indicating whether this SVG element is renderable. Result This is an custom-ident and an assigned name for this filter primitive. Width The width of the subregion which restricts calculation and rendering of the given filter primitive. X The minimum x coordinate for the subregion which restricts calculation and rendering of the given filter primitive. Y The minimum y coordinate for the subregion which restricts calculation and rendering of the given filter primitive."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterStitchOption.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterStitchOption.html",
    "title": "Enum SvgFilterStitchOption | SharpVectors Documentation",
    "keywords": "Enum SvgFilterStitchOption Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The Filter Stitch Options public enum SvgFilterStitchOption : ushort Fields Unknown = 0 The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. Stitch = 1 Corresponds to value 'stitch'. NoStitch = 2 Corresponds to value 'noStitch'."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterTransferType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterTransferType.html",
    "title": "Enum SvgFilterTransferType | SharpVectors Documentation",
    "keywords": "Enum SvgFilterTransferType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The Filter Component Transfer Types public enum SvgFilterTransferType : ushort Fields Unknown = 0 The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. Identity = 1 Corresponds to value 'identity'. Table = 2 Corresponds to value 'table'. Discrete = 3 Corresponds to value 'discrete'. Linear = 4 Corresponds to value 'linear'. Gamma = 5 Corresponds to value 'gamma'."
  },
  "api/SharpVectors.Dom.Svg.SvgFilterTurbulenceType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFilterTurbulenceType.html",
    "title": "Enum SvgFilterTurbulenceType | SharpVectors Documentation",
    "keywords": "Enum SvgFilterTurbulenceType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll The Filter Turbulence Types public enum SvgFilterTurbulenceType : ushort Fields Unknown = 0 The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. FractalNoise = 1 Corresponds to value 'fractalNoise'. Turbulence = 2 Corresponds to value 'turbulence'."
  },
  "api/SharpVectors.Dom.Svg.SvgFitToViewBox.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFitToViewBox.-ctor.html",
    "title": "Constructor SvgFitToViewBox | SharpVectors Documentation",
    "keywords": "Constructor SvgFitToViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFitToViewBox(SvgElement) public SvgFitToViewBox(SvgElement ownerElement) Parameters ownerElement SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgFitToViewBox.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFitToViewBox.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreserveAspectRatio public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgFitToViewBox.ViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFitToViewBox.ViewBox.html",
    "title": "Property ViewBox | SharpVectors Documentation",
    "keywords": "Property ViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewBox public ISvgAnimatedRect ViewBox { get; } Property Value ISvgAnimatedRect"
  },
  "api/SharpVectors.Dom.Svg.SvgFitToViewBox._ownerElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFitToViewBox._ownerElement.html",
    "title": "Field _ownerElement | SharpVectors Documentation",
    "keywords": "Field _ownerElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected SvgElement _ownerElement Returns SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgFitToViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFitToViewBox.html",
    "title": "Class SvgFitToViewBox | SharpVectors Documentation",
    "keywords": "Class SvgFitToViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public class SvgFitToViewBox : ISvgFitToViewBox Inheritance object SvgFitToViewBox Implements ISvgFitToViewBox Derived SvgViewSpec Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgFitToViewBox(SvgElement) Fields _ownerElement Properties PreserveAspectRatio ViewBox"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.-ctor.html",
    "title": "Constructor SvgFontElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFontElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFontElement(string, string, string, SvgDocument) public SvgFontElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.FontFace.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.FontFace.html",
    "title": "Property FontFace | SharpVectors Documentation",
    "keywords": "Property FontFace Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontFace public SvgFontFaceElement FontFace { get; } Property Value SvgFontFaceElement"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.FontFamily.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.FontFamily.html",
    "title": "Property FontFamily | SharpVectors Documentation",
    "keywords": "Property FontFamily Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontFamily public string FontFamily { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.Glyphs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.Glyphs.html",
    "title": "Property Glyphs | SharpVectors Documentation",
    "keywords": "Property Glyphs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Glyphs public IList<SvgGlyphElement> Glyphs { get; } Property Value IList<SvgGlyphElement>"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.HorizAdvX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.HorizAdvX.html",
    "title": "Property HorizAdvX | SharpVectors Documentation",
    "keywords": "Property HorizAdvX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HorizAdvX Gets or sets the default horizontal advance after rendering a glyph in horizontal orientation. public float HorizAdvX { get; set; } Property Value float Remarks Glyph widths are required to be non-negative, even if the glyph is typically rendered right-to-left, as in Hebrew and Arabic scripts."
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.HorizOriginX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.HorizOriginX.html",
    "title": "Property HorizOriginX | SharpVectors Documentation",
    "keywords": "Property HorizOriginX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HorizOriginX Gets or sets X-coordinate in the font coordinate system of the origin of a glyph to be used when drawing horizontally oriented text public float HorizOriginX { get; set; } Property Value float Remarks Note that the origin applies to all glyphs in the font. If the attribute is not specified, the effect is as if a value of '0' were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.HorizOriginY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.HorizOriginY.html",
    "title": "Property HorizOriginY | SharpVectors Documentation",
    "keywords": "Property HorizOriginY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HorizOriginY Gets or sets the Y-coordinate in the font coordinate system of the origin of a glyph to be used when drawing horizontally oriented text. public float HorizOriginY { get; set; } Property Value float Remarks Note that the origin applies to all glyphs in the font. If the attribute is not specified, the effect is as if a value of '0' were specified."
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.Kerning.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.Kerning.html",
    "title": "Property Kerning | SharpVectors Documentation",
    "keywords": "Property Kerning Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Kerning public IList<SvgKernElement> Kerning { get; } Property Value IList<SvgKernElement>"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.MissingGlyph.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.MissingGlyph.html",
    "title": "Property MissingGlyph | SharpVectors Documentation",
    "keywords": "Property MissingGlyph Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MissingGlyph public SvgMissingGlyphElement MissingGlyph { get; } Property Value SvgMissingGlyphElement"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.UnicodeRange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.UnicodeRange.html",
    "title": "Property UnicodeRange | SharpVectors Documentation",
    "keywords": "Property UnicodeRange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnicodeRange public string UnicodeRange { get; set; } Property Value string Remarks This is an extension attribute for externally defined fonts with its unicode-range in 'defs' tag. The unicode-range value is lost in the current processing method."
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.VertAdvY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.VertAdvY.html",
    "title": "Property VertAdvY | SharpVectors Documentation",
    "keywords": "Property VertAdvY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll VertAdvY Gets or sets the public float VertAdvY { get; set; } Property Value float Remarks"
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.VertOriginX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.VertOriginX.html",
    "title": "Property VertOriginX | SharpVectors Documentation",
    "keywords": "Property VertOriginX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll VertOriginX Gets or sets the default X-coordinate in the font coordinate system of the origin of a glyph to be used when drawing vertically oriented text. public float VertOriginX { get; set; } Property Value float Remarks If the attribute is not specified, the effect is as if the attribute were set to half of the effective value of attribute ‘horiz-adv-x’."
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.VertOriginY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.VertOriginY.html",
    "title": "Property VertOriginY | SharpVectors Documentation",
    "keywords": "Property VertOriginY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll VertOriginY Gets or sets the default Y-coordinate in the font coordinate system of the origin of a glyph to be used when drawing vertically oriented text. public float VertOriginY { get; set; } Property Value float Remarks If the attribute is not specified, the effect is as if the attribute were set to the position specified by the font's ‘ascent’ attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgFontElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontElement.html",
    "title": "Class SvgFontElement | SharpVectors Documentation",
    "keywords": "Class SvgFontElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgFontElement interface corresponds to the 'font' element. public sealed class SvgFontElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgExternalResourcesRequired, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgFontElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontElement ISvgElement IElement IXmlElement INode IXmlNode ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFontElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. FontFace FontFamily Glyphs HorizAdvX Gets or sets the default horizontal advance after rendering a glyph in horizontal orientation. HorizOriginX Gets or sets X-coordinate in the font coordinate system of the origin of a glyph to be used when drawing horizontally oriented text HorizOriginY Gets or sets the Y-coordinate in the font coordinate system of the origin of a glyph to be used when drawing horizontally oriented text. IsRenderable Gets a value indicating whether this SVG element is renderable. Kerning MissingGlyph RequiredExtensions RequiredFeatures SystemLanguage UnicodeRange VertAdvY Gets or sets the VertOriginX Gets or sets the default X-coordinate in the font coordinate system of the origin of a glyph to be used when drawing vertically oriented text. VertOriginY Gets or sets the default Y-coordinate in the font coordinate system of the origin of a glyph to be used when drawing vertically oriented text. Methods HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.-ctor.html",
    "title": "Constructor SvgFontFaceElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFontFaceElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFontFaceElement(string, string, string, SvgDocument) public SvgFontFaceElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.Alphabetic.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.Alphabetic.html",
    "title": "Property Alphabetic | SharpVectors Documentation",
    "keywords": "Property Alphabetic Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Alphabetic public float Alphabetic { get; set; } Property Value float Remarks attribute name = \"alphabetic\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.Ascent.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.Ascent.html",
    "title": "Property Ascent | SharpVectors Documentation",
    "keywords": "Property Ascent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Ascent public float Ascent { get; set; } Property Value float Remarks attribute name = \"ascent\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.AscentHeight.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.AscentHeight.html",
    "title": "Property AscentHeight | SharpVectors Documentation",
    "keywords": "Property AscentHeight Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AscentHeight public float AscentHeight { get; set; } Property Value float Remarks attribute name = \"ascent-height\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.CapHeight.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.CapHeight.html",
    "title": "Property CapHeight | SharpVectors Documentation",
    "keywords": "Property CapHeight Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CapHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. public float CapHeight { get; set; } Property Value float A float that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size. Remarks attribute name = \"cap-height\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.Descent.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.Descent.html",
    "title": "Property Descent | SharpVectors Documentation",
    "keywords": "Property Descent Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Descent public float Descent { get; set; } Property Value float Remarks attribute name = \"descent\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontFamily.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontFamily.html",
    "title": "Property FontFamily | SharpVectors Documentation",
    "keywords": "Property FontFamily Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontFamily Indicates which font family is to be used to render the text. public string FontFamily { get; set; } Property Value string Remarks attribute name = \"font-family\" {string}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontSize.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontSize.html",
    "title": "Property FontSize | SharpVectors Documentation",
    "keywords": "Property FontSize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontSize Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment. public string FontSize { get; set; } Property Value string Remarks attribute name = \"font-size\" {string}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontStretch.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontStretch.html",
    "title": "Property FontStretch | SharpVectors Documentation",
    "keywords": "Property FontStretch Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontStretch public string FontStretch { get; set; } Property Value string Remarks attribute name = \"font-stretch\" {string}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontStyle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontStyle.html",
    "title": "Property FontStyle | SharpVectors Documentation",
    "keywords": "Property FontStyle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontStyle Refers to the style of the font. public string FontStyle { get; set; } Property Value string Remarks attribute name = \"font-style\" {string}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontVariant.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontVariant.html",
    "title": "Property FontVariant | SharpVectors Documentation",
    "keywords": "Property FontVariant Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontVariant Refers to the varient of the font. public string FontVariant { get; set; } Property Value string Remarks attribute name = \"font-variant\" {string}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontWeight.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.FontWeight.html",
    "title": "Property FontWeight | SharpVectors Documentation",
    "keywords": "Property FontWeight Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontWeight Refers to the boldness of the font. public string FontWeight { get; set; } Property Value string Remarks attribute name = \"font-weight\" {string}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.OverlinePosition.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.OverlinePosition.html",
    "title": "Property OverlinePosition | SharpVectors Documentation",
    "keywords": "Property OverlinePosition Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. public float OverlinePosition { get; set; } Property Value float A float that indicates the overline position, measured from the baseline and expressed as a fraction of the font em size. Remarks attribute name = \"overline-position\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.OverlineThickness.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.OverlineThickness.html",
    "title": "Property OverlineThickness | SharpVectors Documentation",
    "keywords": "Property OverlineThickness Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. public float OverlineThickness { get; set; } Property Value float A float that indicates the overline thickness, expressed as a fraction of the font em size. Remarks attribute name = \"overline-thickness\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.Panose1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.Panose1.html",
    "title": "Property Panose1 | SharpVectors Documentation",
    "keywords": "Property Panose1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Panose1 public string Panose1 { get; set; } Property Value string Remarks attribute name = \"panose-1\" {string}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.StrikethroughPosition.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.StrikethroughPosition.html",
    "title": "Property StrikethroughPosition | SharpVectors Documentation",
    "keywords": "Property StrikethroughPosition Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. public float StrikethroughPosition { get; set; } Property Value float A float that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size. Remarks attribute name = \"strikethrough-position\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.StrikethroughThickness.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.StrikethroughThickness.html",
    "title": "Property StrikethroughThickness | SharpVectors Documentation",
    "keywords": "Property StrikethroughThickness Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. public float StrikethroughThickness { get; set; } Property Value float A float that indicates the strikethrough thickness, expressed as a fraction of the font em size. Remarks attribute name = \"strikethrough-thickness\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.UnderlinePosition.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.UnderlinePosition.html",
    "title": "Property UnderlinePosition | SharpVectors Documentation",
    "keywords": "Property UnderlinePosition Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. public float UnderlinePosition { get; set; } Property Value float A float that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size. Remarks attribute name = \"underline-position\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.UnderlineThickness.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.UnderlineThickness.html",
    "title": "Property UnderlineThickness | SharpVectors Documentation",
    "keywords": "Property UnderlineThickness Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. public float UnderlineThickness { get; set; } Property Value float A float that indicates the underline thickness, expressed as a fraction of the font em size. Remarks attribute name = \"underline-thickness\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.UnicodeRange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.UnicodeRange.html",
    "title": "Property UnicodeRange | SharpVectors Documentation",
    "keywords": "Property UnicodeRange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnicodeRange public string UnicodeRange { get; set; } Property Value string Remarks attribute name = \"unicode-range\" {{urange} [, {urange}]*>"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.UnitsPerEm.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.UnitsPerEm.html",
    "title": "Property UnitsPerEm | SharpVectors Documentation",
    "keywords": "Property UnitsPerEm Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnitsPerEm public float UnitsPerEm { get; set; } Property Value float Remarks attribute name = \"units-per-em\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.XHeight.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.XHeight.html",
    "title": "Property XHeight | SharpVectors Documentation",
    "keywords": "Property XHeight Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll XHeight public float XHeight { get; set; } Property Value float Remarks attribute name = \"x-height\" {number}"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceElement.html",
    "title": "Class SvgFontFaceElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgFontFaceElement interface corresponds to the 'font-face' element. public sealed class SvgFontFaceElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFontFaceElement(string, string, string, SvgDocument) Properties Alphabetic Ascent AscentHeight CapHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. Descent FontFamily Indicates which font family is to be used to render the text. FontSize Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment. FontStretch FontStyle Refers to the style of the font. FontVariant Refers to the varient of the font. FontWeight Refers to the boldness of the font. IsRenderable Gets a value indicating whether this SVG element is renderable. OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. Panose1 StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. UnicodeRange UnitsPerEm XHeight"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.-ctor.html",
    "title": "Constructor SvgFontFaceFormatElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFontFaceFormatElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFontFaceFormatElement(string, string, string, SvgDocument) public SvgFontFaceFormatElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.String.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.String.html",
    "title": "Property String | SharpVectors Documentation",
    "keywords": "Property String Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll String public string String { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceFormatElement.html",
    "title": "Class SvgFontFaceFormatElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceFormatElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The ISvgFontFaceFormatElement interface corresponds to the font-face-format'' element. public sealed class SvgFontFaceFormatElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceFormatElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceFormatElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceFormatElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFontFaceFormatElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable. String"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.-ctor.html",
    "title": "Constructor SvgFontFaceNameElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFontFaceNameElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFontFaceNameElement(string, string, string, SvgDocument) public SvgFontFaceNameElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.FaceName.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.FaceName.html",
    "title": "Property FaceName | SharpVectors Documentation",
    "keywords": "Property FaceName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FaceName public string FaceName { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceNameElement.html",
    "title": "Class SvgFontFaceNameElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceNameElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgFontFaceNameElement interface corresponds to the 'font-face-name' element. public sealed class SvgFontFaceNameElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceNameElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceNameElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceNameElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFontFaceNameElement(string, string, string, SvgDocument) Properties FaceName IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceSrcElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceSrcElement.-ctor.html",
    "title": "Constructor SvgFontFaceSrcElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFontFaceSrcElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFontFaceSrcElement(string, string, string, SvgDocument) public SvgFontFaceSrcElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceSrcElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceSrcElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceSrcElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceSrcElement.html",
    "title": "Class SvgFontFaceSrcElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceSrcElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgFontFaceSrcElement interface corresponds to the 'font-face-src' element. public sealed class SvgFontFaceSrcElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceSrcElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceSrcElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceSrcElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFontFaceSrcElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceUriElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceUriElement.-ctor.html",
    "title": "Constructor SvgFontFaceUriElement | SharpVectors Documentation",
    "keywords": "Constructor SvgFontFaceUriElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFontFaceUriElement(string, string, string, SvgDocument) public SvgFontFaceUriElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceUriElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceUriElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgFontFaceUriElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFaceUriElement.html",
    "title": "Class SvgFontFaceUriElement | SharpVectors Documentation",
    "keywords": "Class SvgFontFaceUriElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgFontFaceUriElement interface corresponds to the 'font-face-uri' element. public sealed class SvgFontFaceUriElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgFontFaceUriElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgFontFaceUriElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgFontFaceUriElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFontFaceUriElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgFontFamily.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFamily.-ctor.html",
    "title": "Constructor SvgFontFamily | SharpVectors Documentation",
    "keywords": "Constructor SvgFontFamily Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgFontFamily(bool) public SvgFontFamily(bool isDisposable) Parameters isDisposable bool SvgFontFamily(bool, string) public SvgFontFamily(bool isDisposable, string fontUri) Parameters isDisposable bool fontUri string SvgFontFamily(bool, string, string) public SvgFontFamily(bool isDisposable, string fontUri, string sourceUri) Parameters isDisposable bool fontUri string sourceUri string"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFamily.FontUri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFamily.FontUri.html",
    "title": "Property FontUri | SharpVectors Documentation",
    "keywords": "Property FontUri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FontUri public string FontUri { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFamily.IsDisposable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFamily.IsDisposable.html",
    "title": "Property IsDisposable | SharpVectors Documentation",
    "keywords": "Property IsDisposable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsDisposable public bool IsDisposable { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFamily.IsLoaded.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFamily.IsLoaded.html",
    "title": "Property IsLoaded | SharpVectors Documentation",
    "keywords": "Property IsLoaded Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsLoaded public bool IsLoaded { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFamily.Name.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFamily.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Name public string Name { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFamily.SourceUri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFamily.SourceUri.html",
    "title": "Property SourceUri | SharpVectors Documentation",
    "keywords": "Property SourceUri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SourceUri public string SourceUri { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFamily.Tag.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFamily.Tag.html",
    "title": "Property Tag | SharpVectors Documentation",
    "keywords": "Property Tag Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Tag public object Tag { get; set; } Property Value object"
  },
  "api/SharpVectors.Dom.Svg.SvgFontFamily.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgFontFamily.html",
    "title": "Class SvgFontFamily | SharpVectors Documentation",
    "keywords": "Class SvgFontFamily Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This provides information on the OpenType and Web fonts to the SvgDocument. public sealed class SvgFontFamily Inheritance object SvgFontFamily Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFontFamily(bool) SvgFontFamily(bool, string) SvgFontFamily(bool, string, string) Properties FontUri IsDisposable IsLoaded Name SourceUri Tag"
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.-ctor.html",
    "title": "Constructor SvgGElement | SharpVectors Documentation",
    "keywords": "Constructor SvgGElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgGElement(string, string, string, SvgDocument) public SvgGElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment"
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgGElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGElement.html",
    "title": "Class SvgGElement | SharpVectors Documentation",
    "keywords": "Class SvgGElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This implements the ISvgGElement interface, which corresponds to the 'g' element. public sealed class SvgGElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgGElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgGElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgGElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgTransformableElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgGElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.-ctor.html",
    "title": "Constructor SvgGlyphElement | SharpVectors Documentation",
    "keywords": "Constructor SvgGlyphElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgGlyphElement(string, string, string, SvgDocument) public SvgGlyphElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.ArabicForm.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.ArabicForm.html",
    "title": "Property ArabicForm | SharpVectors Documentation",
    "keywords": "Property ArabicForm Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ArabicForm public string ArabicForm { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.D.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.D.html",
    "title": "Property D | SharpVectors Documentation",
    "keywords": "Property D Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll D Gets or sets. public string D { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.GlyphName.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.GlyphName.html",
    "title": "Property GlyphName | SharpVectors Documentation",
    "keywords": "Property GlyphName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GlyphName public string GlyphName { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.HorizAdvX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.HorizAdvX.html",
    "title": "Property HorizAdvX | SharpVectors Documentation",
    "keywords": "Property HorizAdvX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HorizAdvX public float HorizAdvX { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.Lang.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.Lang.html",
    "title": "Property Lang | SharpVectors Documentation",
    "keywords": "Property Lang Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Lang public string Lang { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.Orientation.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.Orientation.html",
    "title": "Property Orientation | SharpVectors Documentation",
    "keywords": "Property Orientation Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Orientation public string Orientation { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.PathData.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.PathData.html",
    "title": "Property PathData | SharpVectors Documentation",
    "keywords": "Property PathData Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathData Gets a ISvgPathSegList of path data. public SvgPathSegList PathData { get; } Property Value SvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.Tag.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.Tag.html",
    "title": "Property Tag | SharpVectors Documentation",
    "keywords": "Property Tag Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Tag public object Tag { get; set; } Property Value object"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.Unicode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.Unicode.html",
    "title": "Property Unicode | SharpVectors Documentation",
    "keywords": "Property Unicode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Unicode public string Unicode { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.VertAdvY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.VertAdvY.html",
    "title": "Property VertAdvY | SharpVectors Documentation",
    "keywords": "Property VertAdvY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll VertAdvY public float VertAdvY { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.VertOriginX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.VertOriginX.html",
    "title": "Property VertOriginX | SharpVectors Documentation",
    "keywords": "Property VertOriginX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll VertOriginX public float VertOriginX { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.VertOriginY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.VertOriginY.html",
    "title": "Property VertOriginY | SharpVectors Documentation",
    "keywords": "Property VertOriginY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll VertOriginY public float VertOriginY { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphElement.html",
    "title": "Class SvgGlyphElement | SharpVectors Documentation",
    "keywords": "Class SvgGlyphElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgGlyphElement interface corresponds to the 'glyph' element. public class SvgGlyphElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgGlyphElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGlyphElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGlyphElement ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable Derived SvgMissingGlyphElement Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgGlyphElement(string, string, string, SvgDocument) Properties ArabicForm D Gets or sets. GlyphName HorizAdvX IsRenderable Gets a value indicating whether this SVG element is renderable. Lang Orientation PathData Gets a ISvgPathSegList of path data. Tag Unicode VertAdvY VertOriginX VertOriginY"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.-ctor.html",
    "title": "Constructor SvgGlyphRefElement | SharpVectors Documentation",
    "keywords": "Constructor SvgGlyphRefElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgGlyphRefElement(string, string, string, SvgDocument) public SvgGlyphRefElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Dx.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Dx.html",
    "title": "Property Dx | SharpVectors Documentation",
    "keywords": "Property Dx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Dx Corresponds to attribute 'dx' on the given element. public float Dx { get; set; } Property Value float Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Dy.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Dy.html",
    "title": "Property Dy | SharpVectors Documentation",
    "keywords": "Property Dy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Dy Corresponds to attribute 'dy' on the given element. public float Dy { get; set; } Property Value float Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Format.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Format.html",
    "title": "Property Format | SharpVectors Documentation",
    "keywords": "Property Format Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Format Corresponds to attribute 'format' on the given element. public string Format { get; set; } Property Value string Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.GlyphRef.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.GlyphRef.html",
    "title": "Property GlyphRef | SharpVectors Documentation",
    "keywords": "Property GlyphRef Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GlyphRef Corresponds to attribute 'glyphRef attribute' on the given element. public string GlyphRef { get; set; } Property Value string Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public XmlElement ReferencedElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X Corresponds to attribute 'x' on the given element. public float X { get; set; } Property Value float Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y Corresponds to attribute 'y' on the given element. public float Y { get; set; } Property Value float Remarks It is read only attribute"
  },
  "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGlyphRefElement.html",
    "title": "Class SvgGlyphRefElement | SharpVectors Documentation",
    "keywords": "Class SvgGlyphRefElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The ISvgGlyphRefElement interface corresponds to the 'glyphRef' element. public sealed class SvgGlyphRefElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgGlyphRefElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGlyphRefElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGlyphRefElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgGlyphRefElement(string, string, string, SvgDocument) Properties Dx Corresponds to attribute 'dx' on the given element. Dy Corresponds to attribute 'dy' on the given element. Format Corresponds to attribute 'format' on the given element. GlyphRef Corresponds to attribute 'glyphRef attribute' on the given element. Href IsRenderable Gets a value indicating whether this SVG element is renderable. ReferencedElement X Corresponds to attribute 'x' on the given element. Y Corresponds to attribute 'y' on the given element."
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.-ctor.html",
    "title": "Constructor SvgGradientElement | SharpVectors Documentation",
    "keywords": "Constructor SvgGradientElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgGradientElement(string, string, string, SvgDocument) protected SvgGradientElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.GradientTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.GradientTransform.html",
    "title": "Property GradientTransform | SharpVectors Documentation",
    "keywords": "Property GradientTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GradientTransform public ISvgAnimatedTransformList GradientTransform { get; } Property Value ISvgAnimatedTransformList"
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.GradientUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.GradientUnits.html",
    "title": "Property GradientUnits | SharpVectors Documentation",
    "keywords": "Property GradientUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GradientUnits public ISvgAnimatedEnumeration GradientUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public SvgGradientElement ReferencedElement { get; } Property Value SvgGradientElement"
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.SpreadMethod.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.SpreadMethod.html",
    "title": "Property SpreadMethod | SharpVectors Documentation",
    "keywords": "Property SpreadMethod Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SpreadMethod public ISvgAnimatedEnumeration SpreadMethod { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.Stops.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.Stops.html",
    "title": "Property Stops | SharpVectors Documentation",
    "keywords": "Property Stops Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Stops public XmlNodeList Stops { get; } Property Value XmlNodeList"
  },
  "api/SharpVectors.Dom.Svg.SvgGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgGradientElement.html",
    "title": "Class SvgGradientElement | SharpVectors Documentation",
    "keywords": "Class SvgGradientElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgGradientElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGradientElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGradientElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired ISvgStylable Derived SvgLinearGradientElement SvgRadialGradientElement Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgGradientElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. GradientTransform GradientUnits Href IsRenderable Gets a value indicating whether this SVG element is renderable. ReferencedElement SpreadMethod Stops Methods HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties."
  },
  "api/SharpVectors.Dom.Svg.SvgHKernElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgHKernElement.-ctor.html",
    "title": "Constructor SvgHKernElement | SharpVectors Documentation",
    "keywords": "Constructor SvgHKernElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgHKernElement(string, string, string, SvgDocument) public SvgHKernElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgHKernElement.IsHorizontal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgHKernElement.IsHorizontal.html",
    "title": "Property IsHorizontal | SharpVectors Documentation",
    "keywords": "Property IsHorizontal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsHorizontal public override bool IsHorizontal { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgHKernElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgHKernElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgHKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgHKernElement.html",
    "title": "Class SvgHKernElement | SharpVectors Documentation",
    "keywords": "Class SvgHKernElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgHKernElement interface corresponds to the 'hkern' element. public sealed class SvgHKernElement : SvgKernElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgHKernElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgKernElement SvgHKernElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgHKernElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgKernElement.Glyph1 SvgKernElement.Glyph2 SvgKernElement.Unicode1 SvgKernElement.Unicode2 SvgKernElement.Kerning SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgHKernElement(string, string, string, SvgDocument) Properties IsHorizontal IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.-ctor.html",
    "title": "Constructor SvgImageElement | SharpVectors Documentation",
    "keywords": "Constructor SvgImageElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgImageElement(string, string, string, SvgDocument) public SvgImageElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.ColorProfile.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.ColorProfile.html",
    "title": "Property ColorProfile | SharpVectors Documentation",
    "keywords": "Property ColorProfile Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ColorProfile public ISvgColorProfileElement ColorProfile { get; } Property Value ISvgColorProfileElement"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.GetImageDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.GetImageDocument.html",
    "title": "Method GetImageDocument | SharpVectors Documentation",
    "keywords": "Method GetImageDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetImageDocument() public SvgDocument GetImageDocument() Returns SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height Corresponds to attribute height on the given 'rect' element. public ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.IsRootReferenced.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.IsRootReferenced.html",
    "title": "Method IsRootReferenced | SharpVectors Documentation",
    "keywords": "Method IsRootReferenced Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRootReferenced(string) public bool IsRootReferenced(string baseUri) Parameters baseUri string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.IsSvgImage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.IsSvgImage.html",
    "title": "Property IsSvgImage | SharpVectors Documentation",
    "keywords": "Property IsSvgImage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsSvgImage public bool IsSvgImage { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreserveAspectRatio public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public XmlElement ReferencedElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Image"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.SvgWindow.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.SvgWindow.html",
    "title": "Property SvgWindow | SharpVectors Documentation",
    "keywords": "Property SvgWindow Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgWindow public SvgWindow SvgWindow { get; } Property Value SvgWindow"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.UriReference.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.UriReference.html",
    "title": "Property UriReference | SharpVectors Documentation",
    "keywords": "Property UriReference Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UriReference public SvgUriReference UriReference { get; } Property Value SvgUriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width Corresponds to attribute width on the given 'rect' element. public ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X Corresponds to attribute x on the given 'rect' element. public ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y Corresponds to attribute y on the given 'rect' element. public ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgImageElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgImageElement.html",
    "title": "Class SvgImageElement | SharpVectors Documentation",
    "keywords": "Class SvgImageElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgImageElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgImageElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgImageElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgImageElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgStylable ISvgTransformable ISvgLocatable ISvgLangSpace ISvgExternalResourcesRequired ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgImageElement(string, string, string, SvgDocument) Properties ColorProfile ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Height Corresponds to attribute height on the given 'rect' element. Href IsSvgImage PreserveAspectRatio ReferencedElement RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SvgWindow SystemLanguage UriReference Width Corresponds to attribute width on the given 'rect' element. X Corresponds to attribute x on the given 'rect' element. Y Corresponds to attribute y on the given 'rect' element. Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. GetImageDocument() HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) IsRootReferenced(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.-ctor.html",
    "title": "Constructor SvgKernElement | SharpVectors Documentation",
    "keywords": "Constructor SvgKernElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgKernElement(string, string, string, SvgDocument) protected SvgKernElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.Glyph1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.Glyph1.html",
    "title": "Property Glyph1 | SharpVectors Documentation",
    "keywords": "Property Glyph1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Glyph1 public string Glyph1 { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.Glyph2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.Glyph2.html",
    "title": "Property Glyph2 | SharpVectors Documentation",
    "keywords": "Property Glyph2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Glyph2 public string Glyph2 { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.IsHorizontal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.IsHorizontal.html",
    "title": "Property IsHorizontal | SharpVectors Documentation",
    "keywords": "Property IsHorizontal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsHorizontal public abstract bool IsHorizontal { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.Kerning.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.Kerning.html",
    "title": "Property Kerning | SharpVectors Documentation",
    "keywords": "Property Kerning Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Kerning public float Kerning { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.Unicode1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.Unicode1.html",
    "title": "Property Unicode1 | SharpVectors Documentation",
    "keywords": "Property Unicode1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Unicode1 public string Unicode1 { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.Unicode2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.Unicode2.html",
    "title": "Property Unicode2 | SharpVectors Documentation",
    "keywords": "Property Unicode2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Unicode2 public string Unicode2 { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgKernElement.html",
    "title": "Class SvgKernElement | SharpVectors Documentation",
    "keywords": "Class SvgKernElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgKernElement is the base interface corresponds to the 'vkern' and 'hkern' elements. public abstract class SvgKernElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgKernElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode Derived SvgHKernElement SvgVKernElement Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgKernElement(string, string, string, SvgDocument) Properties Glyph1 Glyph2 IsHorizontal IsRenderable Gets a value indicating whether this SVG element is renderable. Kerning Unicode1 Unicode2"
  },
  "api/SharpVectors.Dom.Svg.SvgLength.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.-ctor.html",
    "title": "Constructor SvgLength | SharpVectors Documentation",
    "keywords": "Constructor SvgLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgLength(SvgElement, string, SvgLengthSource, SvgLengthDirection, string) public SvgLength(SvgElement ownerElement, string propertyName, SvgLengthSource source, SvgLengthDirection direction, string defaultValue) Parameters ownerElement SvgElement propertyName string source SvgLengthSource direction SvgLengthDirection defaultValue string SvgLength(SvgElement, string, SvgLengthDirection, string) public SvgLength(SvgElement ownerElement, string propertyName, SvgLengthDirection direction, string baseVal) Parameters ownerElement SvgElement propertyName string direction SvgLengthDirection baseVal string SvgLength(SvgElement, string, SvgLengthDirection, string, string) public SvgLength(SvgElement ownerElement, string propertyName, SvgLengthDirection direction, string baseVal, string defaultValue) Parameters ownerElement SvgElement propertyName string direction SvgLengthDirection baseVal string defaultValue string SvgLength(string, string, SvgElement, SvgLengthDirection) Creates a SvgLength value public SvgLength(string propertyName, string baseVal, SvgElement ownerElement, SvgLengthDirection direction) Parameters propertyName string baseVal string String to be parsed into a length ownerElement SvgElement The associated element direction SvgLengthDirection Direction of the length, used for percentages SvgLength(string, string, string, SvgElement, SvgLengthDirection) public SvgLength(string propertyName, string baseVal, string defaultValue, SvgElement ownerElement, SvgLengthDirection direction) Parameters propertyName string baseVal string defaultValue string ownerElement SvgElement direction SvgLengthDirection SvgLength(string, SvgStyleableElement, SvgLengthDirection, string) public SvgLength(string propertyName, SvgStyleableElement ownerElement, SvgLengthDirection direction, string defaultValue) Parameters propertyName string ownerElement SvgStyleableElement direction SvgLengthDirection defaultValue string"
  },
  "api/SharpVectors.Dom.Svg.SvgLength.ConvertToSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.ConvertToSpecifiedUnits.html",
    "title": "Method ConvertToSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Method ConvertToSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ConvertToSpecifiedUnits(SvgLengthType) Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueAsSpecified and valueAsString might be modified as a result of this method. For example, if the original value were \"0.5cm\" and the method was invoked to convert to millimeters, then the unitType would be changed to MM, valueAsSpecified would be changed to the numeric value 5 and valueAsString would be changed to \"5mm\". public void ConvertToSpecifiedUnits(SvgLengthType unitType) Parameters unitType SvgLengthType The unitType to switch to (e.g., MM)."
  },
  "api/SharpVectors.Dom.Svg.SvgLength.NewValueSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.NewValueSpecifiedUnits.html",
    "title": "Method NewValueSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Method NewValueSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NewValueSpecifiedUnits(SvgLengthType, double) Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object. public void NewValueSpecifiedUnits(SvgLengthType unitType, double valueInSpecifiedUnits) Parameters unitType SvgLengthType The unitType for the value (e.g., MM). valueInSpecifiedUnits double The new value"
  },
  "api/SharpVectors.Dom.Svg.SvgLength.PropertyName.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.PropertyName.html",
    "title": "Property PropertyName | SharpVectors Documentation",
    "keywords": "Property PropertyName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PropertyName public string PropertyName { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgLength.UnitType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.UnitType.html",
    "title": "Property UnitType | SharpVectors Documentation",
    "keywords": "Property UnitType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnitType The type of the value as specified by one of the constants specified above. public SvgLengthType UnitType { get; } Property Value SvgLengthType"
  },
  "api/SharpVectors.Dom.Svg.SvgLength.Value.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Value The value as an floating point value, in user units. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting. public double Value { get; set; } Property Value double Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgLength.ValueAsString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.ValueAsString.html",
    "title": "Property ValueAsString | SharpVectors Documentation",
    "keywords": "Property ValueAsString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ValueAsString The value as a string value, in the units expressed by unitType. Setting this attribute will cause value and valueInSpecifiedUnits to be updated automatically to reflect this setting. public string ValueAsString { get; set; } Property Value string Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgLength.ValueInSpecifiedUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.ValueInSpecifiedUnits.html",
    "title": "Property ValueInSpecifiedUnits | SharpVectors Documentation",
    "keywords": "Property ValueInSpecifiedUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ValueInSpecifiedUnits The value as an floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting. public double ValueInSpecifiedUnits { get; set; } Property Value double Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLength.html",
    "title": "Class SvgLength | SharpVectors Documentation",
    "keywords": "Class SvgLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgLength : ISvgLength Inheritance object SvgLength Implements ISvgLength Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgLength(SvgElement, string, SvgLengthDirection, string) SvgLength(SvgElement, string, SvgLengthDirection, string, string) SvgLength(SvgElement, string, SvgLengthSource, SvgLengthDirection, string) SvgLength(string, SvgStyleableElement, SvgLengthDirection, string) SvgLength(string, string, SvgElement, SvgLengthDirection) Creates a SvgLength value SvgLength(string, string, string, SvgElement, SvgLengthDirection) Properties PropertyName UnitType The type of the value as specified by one of the constants specified above. Value The value as an floating point value, in user units. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting. ValueAsString The value as a string value, in the units expressed by unitType. Setting this attribute will cause value and valueInSpecifiedUnits to be updated automatically to reflect this setting. ValueInSpecifiedUnits The value as an floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting. Methods ConvertToSpecifiedUnits(SvgLengthType) Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueAsSpecified and valueAsString might be modified as a result of this method. For example, if the original value were \"0.5cm\" and the method was invoked to convert to millimeters, then the unitType would be changed to MM, valueAsSpecified would be changed to the numeric value 5 and valueAsString would be changed to \"5mm\". NewValueSpecifiedUnits(SvgLengthType, double) Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object."
  },
  "api/SharpVectors.Dom.Svg.SvgLengthAdjust.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthAdjust.html",
    "title": "Enum SvgLengthAdjust | SharpVectors Documentation",
    "keywords": "Enum SvgLengthAdjust Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public enum SvgLengthAdjust Fields Unknown = 0 Spacing = 1 SpacingAndGlyphs = 2"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthDirection.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthDirection.html",
    "title": "Enum SvgLengthDirection | SharpVectors Documentation",
    "keywords": "Enum SvgLengthDirection Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Defines the direction of a SvgLength public enum SvgLengthDirection Fields Vertical = 0 Horizontal = 1 Viewport = 2"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthList.-ctor.html",
    "title": "Constructor SvgLengthList | SharpVectors Documentation",
    "keywords": "Constructor SvgLengthList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgLengthList() public SvgLengthList() SvgLengthList(string) public SvgLengthList(string listString) Parameters listString string SvgLengthList(string, string, SvgElement, SvgLengthDirection) public SvgLengthList(string propertyName, string listString, SvgElement ownerElement, SvgLengthDirection direction) Parameters propertyName string listString string ownerElement SvgElement direction SvgLengthDirection"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthList.FromString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthList.FromString.html",
    "title": "Method FromString | SharpVectors Documentation",
    "keywords": "Method FromString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FromString(string) public void FromString(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthList.html",
    "title": "Class SvgLengthList | SharpVectors Documentation",
    "keywords": "Class SvgLengthList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This interface defines a list of SvgLength objects public sealed class SvgLengthList : SvgList<ISvgLength>, IEnumerable<ISvgLength>, IEnumerable, ISvgLengthList Inheritance object SvgList<ISvgLength> SvgLengthList Implements IEnumerable<ISvgLength> IEnumerable ISvgLengthList Inherited Members SvgList<ISvgLength>.Count SvgList<ISvgLength>.this[int] SvgList<ISvgLength>.NumberOfItems SvgList<ISvgLength>.Clear() SvgList<ISvgLength>.Initialize(ISvgLength) SvgList<ISvgLength>.GetItem(uint) SvgList<ISvgLength>.InsertItemBefore(ISvgLength, uint) SvgList<ISvgLength>.ReplaceItem(ISvgLength, uint) SvgList<ISvgLength>.RemoveItem(uint) SvgList<ISvgLength>.AppendItem(ISvgLength) SvgList<ISvgLength>.GetEnumerator() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgLengthList() SvgLengthList(string) SvgLengthList(string, string, SvgElement, SvgLengthDirection) Methods FromString(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthSource.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthSource.html",
    "title": "Enum SvgLengthSource | SharpVectors Documentation",
    "keywords": "Enum SvgLengthSource Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Defines the origin type of the SvgLength value public enum SvgLengthSource Fields Css = 0 Xml = 1 String = 2"
  },
  "api/SharpVectors.Dom.Svg.SvgLengthType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLengthType.html",
    "title": "Enum SvgLengthType | SharpVectors Documentation",
    "keywords": "Enum SvgLengthType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgLengthType Fields Unknown = 0 Number = 1 Percentage = 2 Ems = 3 Exs = 4 Px = 5 Cm = 6 Mm = 7 In = 8 Pt = 9 Pc = 10"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.-ctor.html",
    "title": "Constructor SvgLineElement | SharpVectors Documentation",
    "keywords": "Constructor SvgLineElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgLineElement(string, string, string, SvgDocument) public SvgLineElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.GetEndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.GetEndAngle.html",
    "title": "Method GetEndAngle | SharpVectors Documentation",
    "keywords": "Method GetEndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetEndAngle(int) Get the angle of the path segment leaving the specified vertex in degrees. public double GetEndAngle(int index) Parameters index int Specifies the vertex from which the path segment is leaving. Returns double The angle of the path segment leaving the specified vertex."
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.GetMarker.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.GetMarker.html",
    "title": "Method GetMarker | SharpVectors Documentation",
    "keywords": "Method GetMarker Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetMarker(int) public ISvgMarker GetMarker(int index) Parameters index int Returns ISvgMarker"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.GetStartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.GetStartAngle.html",
    "title": "Method GetStartAngle | SharpVectors Documentation",
    "keywords": "Method GetStartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetStartAngle(int) Get the angle of the path segment entering the specified vertex. public double GetStartAngle(int index) Parameters index int Specifies the vertex to which the path segment is entering. Returns double The angle of the path segment entering the specified vertex in degrees."
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.Invalidate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.Invalidate.html",
    "title": "Method Invalidate | SharpVectors Documentation",
    "keywords": "Method Invalidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Invalidate() public void Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.IsClosed.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.IsClosed.html",
    "title": "Property IsClosed | SharpVectors Documentation",
    "keywords": "Property IsClosed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsClosed public bool IsClosed { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.MarkerPositions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.MarkerPositions.html",
    "title": "Property MarkerPositions | SharpVectors Documentation",
    "keywords": "Property MarkerPositions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MarkerPositions An array specifying the position of each vertex in the Svg element's shape. public SvgPointF[] MarkerPositions { get; } Property Value SvgPointF[]"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.MayHaveCurves.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.MayHaveCurves.html",
    "title": "Property MayHaveCurves | SharpVectors Documentation",
    "keywords": "Property MayHaveCurves Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MayHaveCurves public bool MayHaveCurves { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X1 public ISvgAnimatedLength X1 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X2 public ISvgAnimatedLength X2 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y1 public ISvgAnimatedLength Y1 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y2 public ISvgAnimatedLength Y2 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgLineElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLineElement.html",
    "title": "Class SvgLineElement | SharpVectors Documentation",
    "keywords": "Class SvgLineElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SVGLineElement interface corresponds to the 'line' element. public sealed class SvgLineElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgLineElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget, ISharpMarkerHost Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgLineElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgLineElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget ISharpMarkerHost Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgLineElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. IsClosed MarkerPositions An array specifying the position of each vertex in the Svg element's shape. MayHaveCurves RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage X1 X2 Y1 Y2 Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. GetEndAngle(int) Get the angle of the path segment leaving the specified vertex in degrees. GetMarker(int) GetStartAngle(int) Get the angle of the path segment entering the specified vertex. HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.-ctor.html",
    "title": "Constructor SvgLinearGradientElement | SharpVectors Documentation",
    "keywords": "Constructor SvgLinearGradientElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgLinearGradientElement(string, string, string, SvgDocument) public SvgLinearGradientElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public SvgLinearGradientElement ReferencedElement { get; } Property Value SvgLinearGradientElement"
  },
  "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X1 public ISvgAnimatedLength X1 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X2 public ISvgAnimatedLength X2 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y1 public ISvgAnimatedLength Y1 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y2 public ISvgAnimatedLength Y2 { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgLinearGradientElement.html",
    "title": "Class SvgLinearGradientElement | SharpVectors Documentation",
    "keywords": "Class SvgLinearGradientElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgLinearGradientElement : SvgGradientElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgLinearGradientElement, ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGradientElement SvgLinearGradientElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgLinearGradientElement ISvgGradientElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgGradientElement.GradientUnits SvgGradientElement.GradientTransform SvgGradientElement.SpreadMethod SvgGradientElement.Href SvgGradientElement.ExternalResourcesRequired SvgGradientElement.Stops SvgGradientElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgLinearGradientElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable. ReferencedElement X1 X2 Y1 Y2"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.-ctor.html",
    "title": "Constructor SvgList | SharpVectors Documentation",
    "keywords": "Constructor SvgList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgList() SvgList constructor protected SvgList()"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.AppendItem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.AppendItem.html",
    "title": "Method AppendItem | SharpVectors Documentation",
    "keywords": "Method AppendItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AppendItem(T) AppendItem public T AppendItem(T newItem) Parameters newItem T Returns T"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.Clear.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Clear() Clear public void Clear()"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.Count.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Count public int Count { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.GetEnumerator.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.GetEnumerator.html",
    "title": "Method GetEnumerator | SharpVectors Documentation",
    "keywords": "Method GetEnumerator Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> A IEnumerator<T> that can be used to iterate through the collection."
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.GetItem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.GetItem.html",
    "title": "Method GetItem | SharpVectors Documentation",
    "keywords": "Method GetItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetItem(uint) GetItem public T GetItem(uint index) Parameters index uint Returns T"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.Initialize.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Initialize(T) Initialize public T Initialize(T newItem) Parameters newItem T Returns T"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.InsertItemBefore.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.InsertItemBefore.html",
    "title": "Method InsertItemBefore | SharpVectors Documentation",
    "keywords": "Method InsertItemBefore Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll InsertItemBefore(T, uint) InsertItemBefore public T InsertItemBefore(T newItem, uint index) Parameters newItem T index uint Returns T"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.Item.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll this[int] public T this[int index] { get; } Parameters index int Property Value T"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.NumberOfItems.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.NumberOfItems.html",
    "title": "Property NumberOfItems | SharpVectors Documentation",
    "keywords": "Property NumberOfItems Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NumberOfItems NumberOfItems public uint NumberOfItems { get; } Property Value uint"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.RemoveItem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.RemoveItem.html",
    "title": "Method RemoveItem | SharpVectors Documentation",
    "keywords": "Method RemoveItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RemoveItem(uint) RemoveItem public T RemoveItem(uint index) Parameters index uint Returns T"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.ReplaceItem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.ReplaceItem.html",
    "title": "Method ReplaceItem | SharpVectors Documentation",
    "keywords": "Method ReplaceItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReplaceItem(T, uint) ReplaceItem public T ReplaceItem(T newItem, uint index) Parameters newItem T index uint Returns T"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1._items.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1._items.html",
    "title": "Field _items | SharpVectors Documentation",
    "keywords": "Field _items Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected List<T> _items Returns List<T>"
  },
  "api/SharpVectors.Dom.Svg.SvgList-1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgList-1.html",
    "title": "Class SvgList<T> | SharpVectors Documentation",
    "keywords": "Class SvgList<T> Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Base class for all SVG*List-derived classes. Note we're using List<T> (as opposed to deriving from) to hide unneeded List<T> methods Note that a CLR uint is equivalent to an IDL ulong, so uint is used for all index values public abstract class SvgList<T> : IEnumerable<T>, IEnumerable Type Parameters T Inheritance object SvgList<T> Implements IEnumerable<T> IEnumerable Derived SvgLengthList SvgNumberList SvgPointList SvgStringList SvgTransformList Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgList() SvgList constructor Fields _items Properties Count this[int] NumberOfItems NumberOfItems Methods AppendItem(T) AppendItem Clear() Clear GetEnumerator() Returns an enumerator that iterates through the collection. GetItem(uint) GetItem Initialize(T) Initialize InsertItemBefore(T, uint) InsertItemBefore RemoveItem(uint) RemoveItem ReplaceItem(T, uint) ReplaceItem"
  },
  "api/SharpVectors.Dom.Svg.SvgMarker.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarker.-ctor.html",
    "title": "Constructor SvgMarker | SharpVectors Documentation",
    "keywords": "Constructor SvgMarker Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SvgMarker(int, ISvgPathSeg) public SvgMarker(int index, ISvgPathSeg segment) Parameters index int segment ISvgPathSeg SvgMarker(int, SvgPointF) public SvgMarker(int index, SvgPointF position) Parameters index int position SvgPointF SvgMarker(int, SvgPointF, ISvgPathSeg) public SvgMarker(int index, SvgPointF position, ISvgPathSeg segment) Parameters index int position SvgPointF segment ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgMarker.Index.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarker.Index.html",
    "title": "Property Index | SharpVectors Documentation",
    "keywords": "Property Index Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Index public int Index { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.SvgMarker.IsCurve.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarker.IsCurve.html",
    "title": "Property IsCurve | SharpVectors Documentation",
    "keywords": "Property IsCurve Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsCurve public bool IsCurve { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgMarker.Position.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarker.Position.html",
    "title": "Property Position | SharpVectors Documentation",
    "keywords": "Property Position Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Position public SvgPointF Position { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgMarker.Segment.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarker.Segment.html",
    "title": "Property Segment | SharpVectors Documentation",
    "keywords": "Property Segment Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Segment public ISvgPathSeg Segment { get; } Property Value ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgMarker.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarker.html",
    "title": "Class SvgMarker | SharpVectors Documentation",
    "keywords": "Class SvgMarker Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public sealed class SvgMarker : ISvgMarker Inheritance object SvgMarker Implements ISvgMarker Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgMarker(int, ISvgPathSeg) SvgMarker(int, SvgPointF) SvgMarker(int, SvgPointF, ISvgPathSeg) Properties Index IsCurve Position Segment"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.-ctor.html",
    "title": "Constructor SvgMarkerElement | SharpVectors Documentation",
    "keywords": "Constructor SvgMarkerElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgMarkerElement(string, string, string, SvgDocument) public SvgMarkerElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.IsSizeDefined.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.IsSizeDefined.html",
    "title": "Property IsSizeDefined | SharpVectors Documentation",
    "keywords": "Property IsSizeDefined Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsSizeDefined public bool IsSizeDefined { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.MarkerHeight.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.MarkerHeight.html",
    "title": "Property MarkerHeight | SharpVectors Documentation",
    "keywords": "Property MarkerHeight Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MarkerHeight Corresponds to attribute markerHeight on the given 'marker' element. public ISvgAnimatedLength MarkerHeight { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.MarkerUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.MarkerUnits.html",
    "title": "Property MarkerUnits | SharpVectors Documentation",
    "keywords": "Property MarkerUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MarkerUnits Corresponds to attribute markerUnits on the given 'marker' element. public ISvgAnimatedEnumeration MarkerUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.MarkerWidth.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.MarkerWidth.html",
    "title": "Property MarkerWidth | SharpVectors Documentation",
    "keywords": "Property MarkerWidth Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MarkerWidth Corresponds to attribute markerWidth on the given 'marker' element public ISvgAnimatedLength MarkerWidth { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.OrientAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.OrientAngle.html",
    "title": "Property OrientAngle | SharpVectors Documentation",
    "keywords": "Property OrientAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OrientAngle Corresponds to attribute orient on the given 'marker' element. If markerUnits is SVG_MARKER_ORIENT_ANGLE, the angle value for attribute orient; otherwise, it will be set to zero. public ISvgAnimatedAngle OrientAngle { get; } Property Value ISvgAnimatedAngle"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.OrientType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.OrientType.html",
    "title": "Property OrientType | SharpVectors Documentation",
    "keywords": "Property OrientType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OrientType Corresponds to attribute orient on the given 'marker' element. One of the Marker Orientation Types defined above. public ISvgAnimatedEnumeration OrientType { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreserveAspectRatio public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.RefX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.RefX.html",
    "title": "Property RefX | SharpVectors Documentation",
    "keywords": "Property RefX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RefX Corresponds to attribute refX on the given 'marker' element. public ISvgAnimatedLength RefX { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.RefY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.RefY.html",
    "title": "Property RefY | SharpVectors Documentation",
    "keywords": "Property RefY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RefY Corresponds to attribute refY on the given 'marker' element. public ISvgAnimatedLength RefY { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Marker"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.SetOrientToAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.SetOrientToAngle.html",
    "title": "Method SetOrientToAngle | SharpVectors Documentation",
    "keywords": "Method SetOrientToAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetOrientToAngle(ISvgAngle) Sets the value of attribute orient to the given angle. public void SetOrientToAngle(ISvgAngle angle) Parameters angle ISvgAngle The angle value to use for attribute orient."
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.SetOrientToAuto.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.SetOrientToAuto.html",
    "title": "Method SetOrientToAuto | SharpVectors Documentation",
    "keywords": "Method SetOrientToAuto Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetOrientToAuto() Sets the value of attribute orient to 'auto'. public void SetOrientToAuto()"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.ViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.ViewBox.html",
    "title": "Property ViewBox | SharpVectors Documentation",
    "keywords": "Property ViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewBox public ISvgAnimatedRect ViewBox { get; } Property Value ISvgAnimatedRect"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerElement.html",
    "title": "Class SvgMarkerElement | SharpVectors Documentation",
    "keywords": "Class SvgMarkerElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgMarkerElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgMarkerElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgFitToViewBox Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgMarkerElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgMarkerElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgFitToViewBox Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgMarkerElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. IsRenderable Gets a value indicating whether this SVG element is renderable. IsSizeDefined MarkerHeight Corresponds to attribute markerHeight on the given 'marker' element. MarkerUnits Corresponds to attribute markerUnits on the given 'marker' element. MarkerWidth Corresponds to attribute markerWidth on the given 'marker' element OrientAngle Corresponds to attribute orient on the given 'marker' element. If markerUnits is SVG_MARKER_ORIENT_ANGLE, the angle value for attribute orient; otherwise, it will be set to zero. OrientType Corresponds to attribute orient on the given 'marker' element. One of the Marker Orientation Types defined above. PreserveAspectRatio RefX Corresponds to attribute refX on the given 'marker' element. RefY Corresponds to attribute refY on the given 'marker' element. RenderingHint Gets a value providing a hint on the rendering defined by this element. ViewBox Methods SetOrientToAngle(ISvgAngle) Sets the value of attribute orient to the given angle. SetOrientToAuto() Sets the value of attribute orient to 'auto'."
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerOrient.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerOrient.html",
    "title": "Enum SvgMarkerOrient | SharpVectors Documentation",
    "keywords": "Enum SvgMarkerOrient Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgMarkerOrient Fields Unknown = 0 The marker orientation is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. Auto = 1 Attribute orient has value 'auto'. Angle = 2 Attribute orient has an angle value. AutoStartReverse = 3 Attribute orient has value 'auto-start-reverse'."
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerPosition.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerPosition.html",
    "title": "Enum SvgMarkerPosition | SharpVectors Documentation",
    "keywords": "Enum SvgMarkerPosition Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public enum SvgMarkerPosition Fields Start = 0 Mid = 1 End = 2"
  },
  "api/SharpVectors.Dom.Svg.SvgMarkerUnit.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMarkerUnit.html",
    "title": "Enum SvgMarkerUnit | SharpVectors Documentation",
    "keywords": "Enum SvgMarkerUnit Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgMarkerUnit Fields Unknown = 0 The marker unit type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. UserSpaceOnUse = 1 The value of attribute markerUnits is 'userSpaceOnUse'. StrokeWidth = 2 The value of attribute markerUnits is 'strokeWidth'."
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.-ctor.html",
    "title": "Constructor SvgMaskElement | SharpVectors Documentation",
    "keywords": "Constructor SvgMaskElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgMaskElement(string, string, string, SvgDocument) public SvgMaskElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height public ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.MaskContentUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.MaskContentUnits.html",
    "title": "Property MaskContentUnits | SharpVectors Documentation",
    "keywords": "Property MaskContentUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MaskContentUnits public ISvgAnimatedEnumeration MaskContentUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.MaskUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.MaskUnits.html",
    "title": "Property MaskUnits | SharpVectors Documentation",
    "keywords": "Property MaskUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MaskUnits public ISvgAnimatedEnumeration MaskUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Masking"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width public ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgMaskElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMaskElement.html",
    "title": "Class SvgMaskElement | SharpVectors Documentation",
    "keywords": "Class SvgMaskElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgMaskElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgMaskElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgMaskElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgMaskElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgMaskElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Height IsRenderable Gets a value indicating whether this SVG element is renderable. MaskContentUnits MaskUnits RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage Width X Y Methods HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.-ctor.html",
    "title": "Constructor SvgMatrix | SharpVectors Documentation",
    "keywords": "Constructor SvgMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgMatrix() public SvgMatrix() SvgMatrix(double, double, double, double, double, double) public SvgMatrix(double a, double b, double c, double d, double e, double f) Parameters a double b double c double d double e double f double"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.A.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.A.html",
    "title": "Property A | SharpVectors Documentation",
    "keywords": "Property A Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll A public double A { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.B.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.B.html",
    "title": "Property B | SharpVectors Documentation",
    "keywords": "Property B Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll B public double B { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.C.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.C.html",
    "title": "Property C | SharpVectors Documentation",
    "keywords": "Property C Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll C public double C { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.D.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.D.html",
    "title": "Property D | SharpVectors Documentation",
    "keywords": "Property D Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll D public double D { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.E.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.E.html",
    "title": "Property E | SharpVectors Documentation",
    "keywords": "Property E Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll E public double E { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.F.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.F.html",
    "title": "Property F | SharpVectors Documentation",
    "keywords": "Property F Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll F public double F { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.FlipX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.FlipX.html",
    "title": "Method FlipX | SharpVectors Documentation",
    "keywords": "Method FlipX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FlipX() public ISvgMatrix FlipX() Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.FlipY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.FlipY.html",
    "title": "Method FlipY | SharpVectors Documentation",
    "keywords": "Method FlipY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FlipY() public ISvgMatrix FlipY() Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.Identity.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.Identity.html",
    "title": "Field Identity | SharpVectors Documentation",
    "keywords": "Field Identity Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public static readonly SvgMatrix Identity Returns SvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.Inverse.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.Inverse.html",
    "title": "Method Inverse | SharpVectors Documentation",
    "keywords": "Method Inverse Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Inverse() public ISvgMatrix Inverse() Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.IsIdentity.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.IsIdentity.html",
    "title": "Property IsIdentity | SharpVectors Documentation",
    "keywords": "Property IsIdentity Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsIdentity public bool IsIdentity { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.Multiply.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.Multiply.html",
    "title": "Method Multiply | SharpVectors Documentation",
    "keywords": "Method Multiply Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Multiply(ISvgMatrix) public ISvgMatrix Multiply(ISvgMatrix secondMatrix) Parameters secondMatrix ISvgMatrix Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.Rotate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.Rotate.html",
    "title": "Method Rotate | SharpVectors Documentation",
    "keywords": "Method Rotate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Rotate(double) public ISvgMatrix Rotate(double angle) Parameters angle double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.RotateFromVector.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.RotateFromVector.html",
    "title": "Method RotateFromVector | SharpVectors Documentation",
    "keywords": "Method RotateFromVector Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RotateFromVector(double, double) public ISvgMatrix RotateFromVector(double x, double y) Parameters x double y double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.Scale.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.Scale.html",
    "title": "Method Scale | SharpVectors Documentation",
    "keywords": "Method Scale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Scale(double) public ISvgMatrix Scale(double scaleFactor) Parameters scaleFactor double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.ScaleNonUniform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.ScaleNonUniform.html",
    "title": "Method ScaleNonUniform | SharpVectors Documentation",
    "keywords": "Method ScaleNonUniform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ScaleNonUniform(double, double) public ISvgMatrix ScaleNonUniform(double scaleFactorX, double scaleFactorY) Parameters scaleFactorX double scaleFactorY double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.SkewX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.SkewX.html",
    "title": "Method SkewX | SharpVectors Documentation",
    "keywords": "Method SkewX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SkewX(double) public ISvgMatrix SkewX(double angle) Parameters angle double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.SkewY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.SkewY.html",
    "title": "Method SkewY | SharpVectors Documentation",
    "keywords": "Method SkewY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SkewY(double) public ISvgMatrix SkewY(double angle) Parameters angle double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.Translate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.Translate.html",
    "title": "Method Translate | SharpVectors Documentation",
    "keywords": "Method Translate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Translate(double, double) public ISvgMatrix Translate(double x, double y) Parameters x double y double Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.html",
    "title": "Class SvgMatrix | SharpVectors Documentation",
    "keywords": "Class SvgMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Many of SVG's graphics operations utilize 2x3 matrices of the form: [a c e] [b d f] which, when expanded into a 3x3 matrix for the purposes of matrix arithmetic, become: [a c e] [b d f] [0 0 1] public sealed class SvgMatrix : ISvgMatrix Inheritance object SvgMatrix Implements ISvgMatrix Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgMatrix() SvgMatrix(double, double, double, double, double, double) Fields Identity Properties A B C D E F IsIdentity Methods FlipX() FlipY() Inverse() Multiply(ISvgMatrix) Rotate(double) RotateFromVector(double, double) Scale(double) ScaleNonUniform(double, double) SkewX(double) SkewY(double) Translate(double, double) Operators operator *(SvgMatrix, SvgMatrix)"
  },
  "api/SharpVectors.Dom.Svg.SvgMatrix.op_Multiply.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMatrix.op_Multiply.html",
    "title": "Operator operator * | SharpVectors Documentation",
    "keywords": "Operator operator * Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll operator *(SvgMatrix, SvgMatrix) public static SvgMatrix operator *(SvgMatrix a, SvgMatrix b) Parameters a SvgMatrix b SvgMatrix Returns SvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgMeetOrSlice.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMeetOrSlice.html",
    "title": "Enum SvgMeetOrSlice | SharpVectors Documentation",
    "keywords": "Enum SvgMeetOrSlice Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgMeetOrSlice Fields Unknown = 0 Meet = 1 Slice = 2"
  },
  "api/SharpVectors.Dom.Svg.SvgMetadataElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMetadataElement.-ctor.html",
    "title": "Constructor SvgMetadataElement | SharpVectors Documentation",
    "keywords": "Constructor SvgMetadataElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgMetadataElement(string, string, string, SvgDocument) public SvgMetadataElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgMetadataElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMetadataElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgMetadataElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMetadataElement.html",
    "title": "Class SvgMetadataElement | SharpVectors Documentation",
    "keywords": "Class SvgMetadataElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgMetadataElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgMetadataElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgMetadataElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgMetadataElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgMetadataElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgMissingGlyphElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMissingGlyphElement.-ctor.html",
    "title": "Constructor SvgMissingGlyphElement | SharpVectors Documentation",
    "keywords": "Constructor SvgMissingGlyphElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgMissingGlyphElement(string, string, string, SvgDocument) public SvgMissingGlyphElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgMissingGlyphElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMissingGlyphElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgMissingGlyphElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgMissingGlyphElement.html",
    "title": "Class SvgMissingGlyphElement | SharpVectors Documentation",
    "keywords": "Class SvgMissingGlyphElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgMissingGlyphElement interface corresponds to the 'missing-glyph' element. public sealed class SvgMissingGlyphElement : SvgGlyphElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgGlyphElement, ISvgMissingGlyphElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGlyphElement SvgMissingGlyphElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgGlyphElement ISvgMissingGlyphElement ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable Inherited Members SvgGlyphElement.Tag SvgGlyphElement.PathData SvgGlyphElement.D SvgGlyphElement.GlyphName SvgGlyphElement.HorizAdvX SvgGlyphElement.Unicode SvgGlyphElement.VertAdvY SvgGlyphElement.VertOriginX SvgGlyphElement.VertOriginY SvgGlyphElement.ArabicForm SvgGlyphElement.Lang SvgGlyphElement.Orientation SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgMissingGlyphElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.-ctor.html",
    "title": "Constructor SvgNumber | SharpVectors Documentation",
    "keywords": "Constructor SvgNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgNumber(float) public SvgNumber(float val) Parameters val float SvgNumber(string) public SvgNumber(string str) Parameters str string"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.CalcAngleBisection.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.CalcAngleBisection.html",
    "title": "Method CalcAngleBisection | SharpVectors Documentation",
    "keywords": "Method CalcAngleBisection Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CalcAngleBisection(double, double) public static double CalcAngleBisection(double a1, double a2) Parameters a1 double a2 double Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.CalcAngleDiff.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.CalcAngleDiff.html",
    "title": "Method CalcAngleDiff | SharpVectors Documentation",
    "keywords": "Method CalcAngleDiff Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CalcAngleDiff(double, double) public static double CalcAngleDiff(double a1, double a2) Parameters a1 double a2 double Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.Format.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.Format.html",
    "title": "Property Format | SharpVectors Documentation",
    "keywords": "Property Format Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Format public static NumberFormatInfo Format { get; } Property Value NumberFormatInfo"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.IsValid.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.IsValid.html",
    "title": "Method IsValid | SharpVectors Documentation",
    "keywords": "Method IsValid Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsValid(double) public static bool IsValid(double value) Parameters value double Returns bool IsValid(float) public static bool IsValid(float value) Parameters value float Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.Parse.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.Parse.html",
    "title": "Method Parse | SharpVectors Documentation",
    "keywords": "Method Parse Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parse(string) public static double Parse(string str) Parameters str string Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.ParseDouble.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.ParseDouble.html",
    "title": "Method ParseDouble | SharpVectors Documentation",
    "keywords": "Method ParseDouble Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseDouble(string) public static double ParseDouble(string str) Parameters str string Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.ParseDoubles.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.ParseDoubles.html",
    "title": "Method ParseDoubles | SharpVectors Documentation",
    "keywords": "Method ParseDoubles Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseDoubles(string) public static double[] ParseDoubles(string str) Parameters str string Returns double[]"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.ParseNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.ParseNumber.html",
    "title": "Method ParseNumber | SharpVectors Documentation",
    "keywords": "Method ParseNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseNumber(string) public static double ParseNumber(string str) Parameters str string Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.ParseNumberUnit.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.ParseNumberUnit.html",
    "title": "Method ParseNumberUnit | SharpVectors Documentation",
    "keywords": "Method ParseNumberUnit Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseNumberUnit(string, double) public static Tuple<double, string> ParseNumberUnit(string str, double defVal) Parameters str string defVal double Returns Tuple<double, string>"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.ScientificToDec.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.ScientificToDec.html",
    "title": "Method ScientificToDec | SharpVectors Documentation",
    "keywords": "Method ScientificToDec Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ScientificToDec(string) public static string ScientificToDec(string sc) Parameters sc string Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.TryParseNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.TryParseNumber.html",
    "title": "Method TryParseNumber | SharpVectors Documentation",
    "keywords": "Method TryParseNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TryParseNumber(string, double) public static double TryParseNumber(string str, double defNumber) Parameters str string defNumber double Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.Value.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Value public double Value { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumber.html",
    "title": "Class SvgNumber | SharpVectors Documentation",
    "keywords": "Class SvgNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgNumber : ISvgNumber Inheritance object SvgNumber Implements ISvgNumber Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgNumber(float) SvgNumber(string) Properties Format Value Methods CalcAngleBisection(double, double) CalcAngleDiff(double, double) IsValid(double) IsValid(float) Parse(string) ParseDouble(string) ParseDoubles(string) ParseNumber(string) ParseNumberUnit(string, double) ScientificToDec(string) TryParseNumber(string, double)"
  },
  "api/SharpVectors.Dom.Svg.SvgNumberList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumberList.-ctor.html",
    "title": "Constructor SvgNumberList | SharpVectors Documentation",
    "keywords": "Constructor SvgNumberList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgNumberList() public SvgNumberList() SvgNumberList(string) public SvgNumberList(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.SvgNumberList.FromString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumberList.FromString.html",
    "title": "Method FromString | SharpVectors Documentation",
    "keywords": "Method FromString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FromString(string) public void FromString(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.SvgNumberList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumberList.html",
    "title": "Class SvgNumberList | SharpVectors Documentation",
    "keywords": "Class SvgNumberList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgNumberList. public sealed class SvgNumberList : SvgList<ISvgNumber>, IEnumerable<ISvgNumber>, IEnumerable, ISvgNumberList Inheritance object SvgList<ISvgNumber> SvgNumberList Implements IEnumerable<ISvgNumber> IEnumerable ISvgNumberList Inherited Members SvgList<ISvgNumber>.Count SvgList<ISvgNumber>.this[int] SvgList<ISvgNumber>.NumberOfItems SvgList<ISvgNumber>.Clear() SvgList<ISvgNumber>.Initialize(ISvgNumber) SvgList<ISvgNumber>.GetItem(uint) SvgList<ISvgNumber>.InsertItemBefore(ISvgNumber, uint) SvgList<ISvgNumber>.ReplaceItem(ISvgNumber, uint) SvgList<ISvgNumber>.RemoveItem(uint) SvgList<ISvgNumber>.AppendItem(ISvgNumber) SvgList<ISvgNumber>.GetEnumerator() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgNumberList() SvgNumberList(string) Methods FromString(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgNumberParser.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumberParser.-ctor.html",
    "title": "Constructor SvgNumberParser | SharpVectors Documentation",
    "keywords": "Constructor SvgNumberParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgNumberParser() protected SvgNumberParser()"
  },
  "api/SharpVectors.Dom.Svg.SvgNumberParser.BuildFloat.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumberParser.BuildFloat.html",
    "title": "Method BuildFloat | SharpVectors Documentation",
    "keywords": "Method BuildFloat Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BuildFloat(int, int) Computes a float from mantissa and exponent. public static float BuildFloat(int mant, int exp) Parameters mant int exp int Returns float"
  },
  "api/SharpVectors.Dom.Svg.SvgNumberParser.ParseFloat.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumberParser.ParseFloat.html",
    "title": "Method ParseFloat | SharpVectors Documentation",
    "keywords": "Method ParseFloat Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseFloat() Parses the content of the buffer and converts it to a float. protected virtual float ParseFloat() Returns float"
  },
  "api/SharpVectors.Dom.Svg.SvgNumberParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgNumberParser.html",
    "title": "Class SvgNumberParser | SharpVectors Documentation",
    "keywords": "Class SvgNumberParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This class represents a parser with support for numbers. public abstract class SvgNumberParser : SvgParser Inheritance object SvgParser SvgNumberParser Derived SvgPathParser SvgPointsParser Inherited Members SvgParser._reader SvgParser._current SvgParser.Current SvgParser.FormatMessage(string, object[]) SvgParser.Parse(string) SvgParser.DoParse() SvgParser.ReportError(string, object[]) SvgParser.ReportCharacterExpectedError(char, int) SvgParser.ReportUnexpectedCharacterError(int) SvgParser.CreateErrorMessage(string, object[]) SvgParser.SkipSpaces() SvgParser.SkipCommaSpaces() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgNumberParser() Methods BuildFloat(int, int) Computes a float from mantissa and exponent. ParseFloat() Parses the content of the buffer and converts it to a float."
  },
  "api/SharpVectors.Dom.Svg.SvgPaint.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaint.-ctor.html",
    "title": "Constructor SvgPaint | SharpVectors Documentation",
    "keywords": "Constructor SvgPaint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPaint(string) public SvgPaint(string str) Parameters str string"
  },
  "api/SharpVectors.Dom.Svg.SvgPaint.CssText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaint.CssText.html",
    "title": "Property CssText | SharpVectors Documentation",
    "keywords": "Property CssText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CssText A string representation of the current value. public override string CssText { get; set; } Property Value string Exceptions DomException SYNTAX_ERR: Raised if the specified CSS string value has a syntax error (according to the attached property) or is unparsable. DomException INVALID_MODIFICATION_ERR: Raised if the specified CSS string value represents a different type of values than the values allowed by the CSS property DomException NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly."
  },
  "api/SharpVectors.Dom.Svg.SvgPaint.Fallback.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaint.Fallback.html",
    "title": "Property Fallback | SharpVectors Documentation",
    "keywords": "Property Fallback Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Fallback public SvgPaint Fallback { get; } Property Value SvgPaint"
  },
  "api/SharpVectors.Dom.Svg.SvgPaint.PaintType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaint.PaintType.html",
    "title": "Property PaintType | SharpVectors Documentation",
    "keywords": "Property PaintType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PaintType public SvgPaintType PaintType { get; } Property Value SvgPaintType"
  },
  "api/SharpVectors.Dom.Svg.SvgPaint.SetPaint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaint.SetPaint.html",
    "title": "Method SetPaint | SharpVectors Documentation",
    "keywords": "Method SetPaint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetPaint(SvgPaintType, string, string, string) public void SetPaint(SvgPaintType paintType, string uri, string rgbColor, string iccColor) Parameters paintType SvgPaintType uri string rgbColor string iccColor string"
  },
  "api/SharpVectors.Dom.Svg.SvgPaint.SetUri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaint.SetUri.html",
    "title": "Method SetUri | SharpVectors Documentation",
    "keywords": "Method SetUri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetUri(string) public void SetUri(string uri) Parameters uri string"
  },
  "api/SharpVectors.Dom.Svg.SvgPaint.Uri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaint.Uri.html",
    "title": "Property Uri | SharpVectors Documentation",
    "keywords": "Property Uri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Uri public string Uri { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPaint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaint.html",
    "title": "Class SvgPaint | SharpVectors Documentation",
    "keywords": "Class SvgPaint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public class SvgPaint : SvgColor, ISvgPaint, ISvgColor, ICssValue Inheritance object CssValue SvgColor SvgPaint Implements ISvgPaint ISvgColor ICssValue Derived WpfSvgPaint Inherited Members SvgColor._rgbColor SvgColor.ColorType SvgColor.RgbColor SvgColor.IccColor SvgColor.SetRgbColor(string) SvgColor.SetRgbColorIccColor(string, string) SvgColor.SetColor(SvgColorType, string, string) SvgColor.ParseColor(string) CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue._cssValueType CssValue.GetAbsoluteValue(string, XmlElement) CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPaint(string) Properties CssText A string representation of the current value. Fallback PaintType Uri Methods SetPaint(SvgPaintType, string, string, string) SetUri(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgPaintType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPaintType.html",
    "title": "Enum SvgPaintType | SharpVectors Documentation",
    "keywords": "Enum SvgPaintType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgPaintType Fields Unknown = 0 RgbColor = 1 RgbColorIccColor = 2 None = 3 CurrentColor = 4 UriNone = 5 UriCurrentColor = 6 UriRgbColor = 7 UriRgbColorIccColor = 8 Uri = 9 ContextFill = 10 ContextStroke = 11"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.-ctor.html",
    "title": "Constructor SvgParser | SharpVectors Documentation",
    "keywords": "Constructor SvgParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgParser() protected SvgParser()"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.CreateErrorMessage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.CreateErrorMessage.html",
    "title": "Method CreateErrorMessage | SharpVectors Documentation",
    "keywords": "Method CreateErrorMessage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateErrorMessage(string, object[]) Returns a localized error message. protected virtual string CreateErrorMessage(string key, object[] args) Parameters key string The message key in the resource bundle. args object[] The message arguments. Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.Current.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.Current.html",
    "title": "Property Current | SharpVectors Documentation",
    "keywords": "Property Current Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Current Returns the current character value. public virtual int Current { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.DoParse.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.DoParse.html",
    "title": "Method DoParse | SharpVectors Documentation",
    "keywords": "Method DoParse Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll DoParse() Method responsible for actually parsing data after AbstractParser has initialized itself. protected abstract void DoParse()"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.FormatMessage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.FormatMessage.html",
    "title": "Method FormatMessage | SharpVectors Documentation",
    "keywords": "Method FormatMessage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FormatMessage(string, object[]) public virtual string FormatMessage(string key, object[] args) Parameters key string args object[] Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.Parse.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.Parse.html",
    "title": "Method Parse | SharpVectors Documentation",
    "keywords": "Method Parse Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parse(string) Parses the given string. public virtual bool Parse(string input) Parameters input string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.ReportCharacterExpectedError.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.ReportCharacterExpectedError.html",
    "title": "Method ReportCharacterExpectedError | SharpVectors Documentation",
    "keywords": "Method ReportCharacterExpectedError Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReportCharacterExpectedError(char, int) simple api to call often reported error. Just a wrapper for reportError(). protected virtual void ReportCharacterExpectedError(char expectedChar, int currentChar) Parameters expectedChar char what caller expected currentChar int what caller found"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.ReportError.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.ReportError.html",
    "title": "Method ReportError | SharpVectors Documentation",
    "keywords": "Method ReportError Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReportError(string, object[]) Signals an error to the error handler. protected virtual void ReportError(string key, object[] args) Parameters key string The message key in the resource bundle. args object[] The message arguments."
  },
  "api/SharpVectors.Dom.Svg.SvgParser.ReportUnexpectedCharacterError.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.ReportUnexpectedCharacterError.html",
    "title": "Method ReportUnexpectedCharacterError | SharpVectors Documentation",
    "keywords": "Method ReportUnexpectedCharacterError Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReportUnexpectedCharacterError(int) simple api to call often reported error. Just a wrapper for reportError(). protected virtual void ReportUnexpectedCharacterError(int currentChar) Parameters currentChar int what the caller found and didnt expect"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.SkipCommaSpaces.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.SkipCommaSpaces.html",
    "title": "Method SkipCommaSpaces | SharpVectors Documentation",
    "keywords": "Method SkipCommaSpaces Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SkipCommaSpaces() Skips the whitespaces and an optional comma. protected virtual void SkipCommaSpaces()"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.SkipSpaces.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.SkipSpaces.html",
    "title": "Method SkipSpaces | SharpVectors Documentation",
    "keywords": "Method SkipSpaces Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SkipSpaces() Skips the whitespaces in the current reader. protected virtual void SkipSpaces()"
  },
  "api/SharpVectors.Dom.Svg.SvgParser._current.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser._current.html",
    "title": "Field _current | SharpVectors Documentation",
    "keywords": "Field _current Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The current character. protected int _current Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgParser._reader.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser._reader.html",
    "title": "Field _reader | SharpVectors Documentation",
    "keywords": "Field _reader Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The normalizing reader. protected SvgTextReader _reader Returns SvgTextReader"
  },
  "api/SharpVectors.Dom.Svg.SvgParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgParser.html",
    "title": "Class SvgParser | SharpVectors Documentation",
    "keywords": "Class SvgParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This class is the superclass of all parsers. It provides localization and error handling methods. public abstract class SvgParser Inheritance object SvgParser Derived SvgNumberParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgParser() Fields _current The current character. _reader The normalizing reader. Properties Current Returns the current character value. Methods CreateErrorMessage(string, object[]) Returns a localized error message. DoParse() Method responsible for actually parsing data after AbstractParser has initialized itself. FormatMessage(string, object[]) Parse(string) Parses the given string. ReportCharacterExpectedError(char, int) simple api to call often reported error. Just a wrapper for reportError(). ReportError(string, object[]) Signals an error to the error handler. ReportUnexpectedCharacterError(int) simple api to call often reported error. Just a wrapper for reportError(). SkipCommaSpaces() Skips the whitespaces and an optional comma. SkipSpaces() Skips the whitespaces in the current reader."
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.-ctor.html",
    "title": "Constructor SvgPathElement | SharpVectors Documentation",
    "keywords": "Constructor SvgPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathElement(string, string, string, SvgDocument) public SvgPathElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.AnimatedNormalizedPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.AnimatedNormalizedPathSegList.html",
    "title": "Property AnimatedNormalizedPathSegList | SharpVectors Documentation",
    "keywords": "Property AnimatedNormalizedPathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimatedNormalizedPathSegList public ISvgPathSegList AnimatedNormalizedPathSegList { get; } Property Value ISvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.AnimatedPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.AnimatedPathSegList.html",
    "title": "Property AnimatedPathSegList | SharpVectors Documentation",
    "keywords": "Property AnimatedPathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimatedPathSegList public ISvgPathSegList AnimatedPathSegList { get; } Property Value ISvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegArcAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegArcAbs.html",
    "title": "Method CreateSvgPathSegArcAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegArcAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegArcAbs(double, double, double, double, double, bool, bool) public ISvgPathSegArcAbs CreateSvgPathSegArcAbs(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters x double y double r1 double r2 double angle double largeArcFlag bool sweepFlag bool Returns ISvgPathSegArcAbs"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegArcRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegArcRel.html",
    "title": "Method CreateSvgPathSegArcRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegArcRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegArcRel(double, double, double, double, double, bool, bool) public ISvgPathSegArcRel CreateSvgPathSegArcRel(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters x double y double r1 double r2 double angle double largeArcFlag bool sweepFlag bool Returns ISvgPathSegArcRel"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegClosePath.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegClosePath.html",
    "title": "Method CreateSvgPathSegClosePath | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegClosePath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegClosePath() public ISvgPathSegClosePath CreateSvgPathSegClosePath() Returns ISvgPathSegClosePath"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoCubicAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoCubicAbs.html",
    "title": "Method CreateSvgPathSegCurvetoCubicAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoCubicAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegCurvetoCubicAbs(double, double, double, double, double, double) public ISvgPathSegCurvetoCubicAbs CreateSvgPathSegCurvetoCubicAbs(double x, double y, double x1, double y1, double x2, double y2) Parameters x double y double x1 double y1 double x2 double y2 double Returns ISvgPathSegCurvetoCubicAbs"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoCubicRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoCubicRel.html",
    "title": "Method CreateSvgPathSegCurvetoCubicRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoCubicRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegCurvetoCubicRel(double, double, double, double, double, double) public ISvgPathSegCurvetoCubicRel CreateSvgPathSegCurvetoCubicRel(double x, double y, double x1, double y1, double x2, double y2) Parameters x double y double x1 double y1 double x2 double y2 double Returns ISvgPathSegCurvetoCubicRel"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoCubicSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoCubicSmoothAbs.html",
    "title": "Method CreateSvgPathSegCurvetoCubicSmoothAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoCubicSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegCurvetoCubicSmoothAbs(double, double, double, double) public ISvgPathSegCurvetoCubicSmoothAbs CreateSvgPathSegCurvetoCubicSmoothAbs(double x, double y, double x2, double y2) Parameters x double y double x2 double y2 double Returns ISvgPathSegCurvetoCubicSmoothAbs"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoCubicSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoCubicSmoothRel.html",
    "title": "Method CreateSvgPathSegCurvetoCubicSmoothRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoCubicSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegCurvetoCubicSmoothRel(double, double, double, double) public ISvgPathSegCurvetoCubicSmoothRel CreateSvgPathSegCurvetoCubicSmoothRel(double x, double y, double x2, double y2) Parameters x double y double x2 double y2 double Returns ISvgPathSegCurvetoCubicSmoothRel"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoQuadraticAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoQuadraticAbs.html",
    "title": "Method CreateSvgPathSegCurvetoQuadraticAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoQuadraticAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegCurvetoQuadraticAbs(double, double, double, double) public ISvgPathSegCurvetoQuadraticAbs CreateSvgPathSegCurvetoQuadraticAbs(double x, double y, double x1, double y1) Parameters x double y double x1 double y1 double Returns ISvgPathSegCurvetoQuadraticAbs"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoQuadraticRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoQuadraticRel.html",
    "title": "Method CreateSvgPathSegCurvetoQuadraticRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoQuadraticRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegCurvetoQuadraticRel(double, double, double, double) public ISvgPathSegCurvetoQuadraticRel CreateSvgPathSegCurvetoQuadraticRel(double x, double y, double x1, double y1) Parameters x double y double x1 double y1 double Returns ISvgPathSegCurvetoQuadraticRel"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoQuadraticSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoQuadraticSmoothAbs.html",
    "title": "Method CreateSvgPathSegCurvetoQuadraticSmoothAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoQuadraticSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegCurvetoQuadraticSmoothAbs(double, double) public ISvgPathSegCurvetoQuadraticSmoothAbs CreateSvgPathSegCurvetoQuadraticSmoothAbs(double x, double y) Parameters x double y double Returns ISvgPathSegCurvetoQuadraticSmoothAbs"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoQuadraticSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegCurvetoQuadraticSmoothRel.html",
    "title": "Method CreateSvgPathSegCurvetoQuadraticSmoothRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegCurvetoQuadraticSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegCurvetoQuadraticSmoothRel(double, double) public ISvgPathSegCurvetoQuadraticSmoothRel CreateSvgPathSegCurvetoQuadraticSmoothRel(double x, double y) Parameters x double y double Returns ISvgPathSegCurvetoQuadraticSmoothRel"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoAbs.html",
    "title": "Method CreateSvgPathSegLinetoAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegLinetoAbs(double, double) public ISvgPathSegLinetoAbs CreateSvgPathSegLinetoAbs(double x, double y) Parameters x double y double Returns ISvgPathSegLinetoAbs"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoHorizontalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoHorizontalAbs.html",
    "title": "Method CreateSvgPathSegLinetoHorizontalAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoHorizontalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegLinetoHorizontalAbs(double) public ISvgPathSegLinetoHorizontalAbs CreateSvgPathSegLinetoHorizontalAbs(double x) Parameters x double Returns ISvgPathSegLinetoHorizontalAbs"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoHorizontalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoHorizontalRel.html",
    "title": "Method CreateSvgPathSegLinetoHorizontalRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoHorizontalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegLinetoHorizontalRel(double) public ISvgPathSegLinetoHorizontalRel CreateSvgPathSegLinetoHorizontalRel(double x) Parameters x double Returns ISvgPathSegLinetoHorizontalRel"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoRel.html",
    "title": "Method CreateSvgPathSegLinetoRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegLinetoRel(double, double) public ISvgPathSegLinetoRel CreateSvgPathSegLinetoRel(double x, double y) Parameters x double y double Returns ISvgPathSegLinetoRel"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoVerticalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoVerticalAbs.html",
    "title": "Method CreateSvgPathSegLinetoVerticalAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoVerticalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegLinetoVerticalAbs(double) public ISvgPathSegLinetoVerticalAbs CreateSvgPathSegLinetoVerticalAbs(double y) Parameters y double Returns ISvgPathSegLinetoVerticalAbs"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoVerticalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegLinetoVerticalRel.html",
    "title": "Method CreateSvgPathSegLinetoVerticalRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegLinetoVerticalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegLinetoVerticalRel(double) public ISvgPathSegLinetoVerticalRel CreateSvgPathSegLinetoVerticalRel(double y) Parameters y double Returns ISvgPathSegLinetoVerticalRel"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegMovetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegMovetoAbs.html",
    "title": "Method CreateSvgPathSegMovetoAbs | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegMovetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegMovetoAbs(double, double) public ISvgPathSegMovetoAbs CreateSvgPathSegMovetoAbs(double x, double y) Parameters x double y double Returns ISvgPathSegMovetoAbs"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegMovetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.CreateSvgPathSegMovetoRel.html",
    "title": "Method CreateSvgPathSegMovetoRel | SharpVectors Documentation",
    "keywords": "Method CreateSvgPathSegMovetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPathSegMovetoRel(double, double) public ISvgPathSegMovetoRel CreateSvgPathSegMovetoRel(double x, double y) Parameters x double y double Returns ISvgPathSegMovetoRel"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.GetEndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.GetEndAngle.html",
    "title": "Method GetEndAngle | SharpVectors Documentation",
    "keywords": "Method GetEndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetEndAngle(int) Get the angle of the path segment leaving the specified vertex in degrees. public double GetEndAngle(int index) Parameters index int Specifies the vertex from which the path segment is leaving. Returns double The angle of the path segment leaving the specified vertex."
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.GetMarker.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.GetMarker.html",
    "title": "Method GetMarker | SharpVectors Documentation",
    "keywords": "Method GetMarker Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetMarker(int) public ISvgMarker GetMarker(int index) Parameters index int Returns ISvgMarker"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.GetPathSegAtLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.GetPathSegAtLength.html",
    "title": "Method GetPathSegAtLength | SharpVectors Documentation",
    "keywords": "Method GetPathSegAtLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetPathSegAtLength(double) public int GetPathSegAtLength(double distance) Parameters distance double Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.GetPointAtLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.GetPointAtLength.html",
    "title": "Method GetPointAtLength | SharpVectors Documentation",
    "keywords": "Method GetPointAtLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetPointAtLength(double) public ISvgPoint GetPointAtLength(double distance) Parameters distance double Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.GetStartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.GetStartAngle.html",
    "title": "Method GetStartAngle | SharpVectors Documentation",
    "keywords": "Method GetStartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetStartAngle(int) Get the angle of the path segment entering the specified vertex. public double GetStartAngle(int index) Parameters index int Specifies the vertex to which the path segment is entering. Returns double The angle of the path segment entering the specified vertex in degrees."
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.GetTotalLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.GetTotalLength.html",
    "title": "Method GetTotalLength | SharpVectors Documentation",
    "keywords": "Method GetTotalLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetTotalLength() public double GetTotalLength() Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.Invalidate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.Invalidate.html",
    "title": "Method Invalidate | SharpVectors Documentation",
    "keywords": "Method Invalidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Invalidate() public void Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.IsClosed.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.IsClosed.html",
    "title": "Property IsClosed | SharpVectors Documentation",
    "keywords": "Property IsClosed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsClosed public bool IsClosed { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.MarkerPositions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.MarkerPositions.html",
    "title": "Property MarkerPositions | SharpVectors Documentation",
    "keywords": "Property MarkerPositions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MarkerPositions An array specifying the position of each vertex in the Svg element's shape. public SvgPointF[] MarkerPositions { get; } Property Value SvgPointF[]"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.MayHaveCurves.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.MayHaveCurves.html",
    "title": "Property MayHaveCurves | SharpVectors Documentation",
    "keywords": "Property MayHaveCurves Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MayHaveCurves public bool MayHaveCurves { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.NormalizedPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.NormalizedPathSegList.html",
    "title": "Property NormalizedPathSegList | SharpVectors Documentation",
    "keywords": "Property NormalizedPathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NormalizedPathSegList public ISvgPathSegList NormalizedPathSegList { get; } Property Value ISvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.PathLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.PathLength.html",
    "title": "Property PathLength | SharpVectors Documentation",
    "keywords": "Property PathLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathLength public ISvgAnimatedNumber PathLength { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.PathScript.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.PathScript.html",
    "title": "Property PathScript | SharpVectors Documentation",
    "keywords": "Property PathScript Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathScript public string PathScript { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.PathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.PathSegList.html",
    "title": "Property PathSegList | SharpVectors Documentation",
    "keywords": "Property PathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathSegList public SvgPathSegList PathSegList { get; } Property Value SvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathElement.html",
    "title": "Class SvgPathElement | SharpVectors Documentation",
    "keywords": "Class SvgPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgPathElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPathData, IEventTarget, ISvgElementVisitorTarget, ISharpMarkerHost Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgPathElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgPathElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable ISvgAnimatedPathData IEventTarget ISvgElementVisitorTarget ISharpMarkerHost Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathElement(string, string, string, SvgDocument) Properties AnimatedNormalizedPathSegList AnimatedPathSegList ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. IsClosed MarkerPositions An array specifying the position of each vertex in the Svg element's shape. MayHaveCurves NormalizedPathSegList PathLength PathScript PathSegList RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. CreateSvgPathSegArcAbs(double, double, double, double, double, bool, bool) CreateSvgPathSegArcRel(double, double, double, double, double, bool, bool) CreateSvgPathSegClosePath() CreateSvgPathSegCurvetoCubicAbs(double, double, double, double, double, double) CreateSvgPathSegCurvetoCubicRel(double, double, double, double, double, double) CreateSvgPathSegCurvetoCubicSmoothAbs(double, double, double, double) CreateSvgPathSegCurvetoCubicSmoothRel(double, double, double, double) CreateSvgPathSegCurvetoQuadraticAbs(double, double, double, double) CreateSvgPathSegCurvetoQuadraticRel(double, double, double, double) CreateSvgPathSegCurvetoQuadraticSmoothAbs(double, double) CreateSvgPathSegCurvetoQuadraticSmoothRel(double, double) CreateSvgPathSegLinetoAbs(double, double) CreateSvgPathSegLinetoHorizontalAbs(double) CreateSvgPathSegLinetoHorizontalRel(double) CreateSvgPathSegLinetoRel(double, double) CreateSvgPathSegLinetoVerticalAbs(double) CreateSvgPathSegLinetoVerticalRel(double) CreateSvgPathSegMovetoAbs(double, double) CreateSvgPathSegMovetoRel(double, double) GetEndAngle(int) Get the angle of the path segment leaving the specified vertex in degrees. GetMarker(int) GetPathSegAtLength(double) GetPointAtLength(double) GetStartAngle(int) Get the angle of the path segment entering the specified vertex. GetTotalLength() HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.-ctor.html",
    "title": "Constructor SvgPathParser | SharpVectors Documentation",
    "keywords": "Constructor SvgPathParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathParser(ISvgPathHandler) Creates a new PathParser. public SvgPathParser(ISvgPathHandler handler) Parameters handler ISvgPathHandler"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.DoParse.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.DoParse.html",
    "title": "Method DoParse | SharpVectors Documentation",
    "keywords": "Method DoParse Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll DoParse() Method responsible for actually parsing data after AbstractParser has initialized itself. protected override void DoParse()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Handler.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Handler.html",
    "title": "Property Handler | SharpVectors Documentation",
    "keywords": "Property Handler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Handler Allows an application to register a path handler. If the application does not register a handler, all events reported by the parser will be silently ignored. Applications may register a new or different handler in the middle of a parse, and the parser must begin using the new handler immediately. public virtual ISvgPathHandler Handler { get; set; } Property Value ISvgPathHandler The transform list handler."
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ParseA_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ParseA_1.html",
    "title": "Method ParseA | SharpVectors Documentation",
    "keywords": "Method ParseA Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseA() Parses a 'A' command. protected virtual void ParseA()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ParseC_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ParseC_1.html",
    "title": "Method ParseC | SharpVectors Documentation",
    "keywords": "Method ParseC Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseC() Parses a 'C' command. protected virtual void ParseC()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ParseH_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ParseH_1.html",
    "title": "Method ParseH | SharpVectors Documentation",
    "keywords": "Method ParseH Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseH() Parses a 'H' command. protected virtual void ParseH()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ParseL_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ParseL_1.html",
    "title": "Method ParseL | SharpVectors Documentation",
    "keywords": "Method ParseL Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseL() Parses a 'L' command. protected virtual void ParseL()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ParseM_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ParseM_1.html",
    "title": "Method ParseM | SharpVectors Documentation",
    "keywords": "Method ParseM Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseM() Parses a 'M' command. protected virtual void ParseM()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ParseQ_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ParseQ_1.html",
    "title": "Method ParseQ | SharpVectors Documentation",
    "keywords": "Method ParseQ Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseQ() Parses a 'Q' command. protected virtual void ParseQ()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ParseS_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ParseS_1.html",
    "title": "Method ParseS | SharpVectors Documentation",
    "keywords": "Method ParseS Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseS() Parses a 'S' command. protected virtual void ParseS()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ParseT_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ParseT_1.html",
    "title": "Method ParseT | SharpVectors Documentation",
    "keywords": "Method ParseT Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseT() Parses a 'T' command. protected virtual void ParseT()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ParseV_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ParseV_1.html",
    "title": "Method ParseV | SharpVectors Documentation",
    "keywords": "Method ParseV Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseV() Parses a 'V' command. protected virtual void ParseV()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Parsea.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Parsea.html",
    "title": "Method Parsea | SharpVectors Documentation",
    "keywords": "Method Parsea Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parsea() Parses a 'a' command. protected virtual void Parsea()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Parsec.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Parsec.html",
    "title": "Method Parsec | SharpVectors Documentation",
    "keywords": "Method Parsec Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parsec() Parses a 'c' command. protected virtual void Parsec()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Parseh.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Parseh.html",
    "title": "Method Parseh | SharpVectors Documentation",
    "keywords": "Method Parseh Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parseh() Parses a 'h' command. protected virtual void Parseh()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Parsel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Parsel.html",
    "title": "Method Parsel | SharpVectors Documentation",
    "keywords": "Method Parsel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parsel() Parses a 'l' command. protected virtual void Parsel()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Parsem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Parsem.html",
    "title": "Method Parsem | SharpVectors Documentation",
    "keywords": "Method Parsem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parsem() Parses a 'm' command. protected virtual void Parsem()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Parseq.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Parseq.html",
    "title": "Method Parseq | SharpVectors Documentation",
    "keywords": "Method Parseq Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parseq() Parses a 'q' command. protected virtual void Parseq()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Parses.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Parses.html",
    "title": "Method Parses | SharpVectors Documentation",
    "keywords": "Method Parses Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parses() Parses a 's' command. protected virtual void Parses()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Parset.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Parset.html",
    "title": "Method Parset | SharpVectors Documentation",
    "keywords": "Method Parset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parset() Parses a 't' command. protected virtual void Parset()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.Parsev.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.Parsev.html",
    "title": "Method Parsev | SharpVectors Documentation",
    "keywords": "Method Parsev Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parsev() Parses a 'v' command. protected virtual void Parsev()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.ReportUnexpected.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.ReportUnexpected.html",
    "title": "Method ReportUnexpected | SharpVectors Documentation",
    "keywords": "Method ReportUnexpected Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReportUnexpected(int) protected virtual void ReportUnexpected(int ch) Parameters ch int"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.SkipCommaSpaces2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.SkipCommaSpaces2.html",
    "title": "Method SkipCommaSpaces2 | SharpVectors Documentation",
    "keywords": "Method SkipCommaSpaces2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SkipCommaSpaces2() Skips the whitespaces and an optional comma. protected virtual bool SkipCommaSpaces2() Returns bool true if comma was skipped."
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.SkipSubPath.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.SkipSubPath.html",
    "title": "Method SkipSubPath | SharpVectors Documentation",
    "keywords": "Method SkipSubPath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SkipSubPath() Skips a sub-path. protected virtual void SkipSubPath()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser._parseL_1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser._parseL_1.html",
    "title": "Method _parseL | SharpVectors Documentation",
    "keywords": "Method _parseL Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll _parseL(bool) protected virtual void _parseL(bool expectNumber) Parameters expectNumber bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser._parsel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser._parsel.html",
    "title": "Method _parsel | SharpVectors Documentation",
    "keywords": "Method _parsel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll _parsel(bool) protected virtual void _parsel(bool expectNumber) Parameters expectNumber bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser._pathHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser._pathHandler.html",
    "title": "Field _pathHandler | SharpVectors Documentation",
    "keywords": "Field _pathHandler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The path handler used to report parse events. protected ISvgPathHandler _pathHandler Returns ISvgPathHandler"
  },
  "api/SharpVectors.Dom.Svg.SvgPathParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathParser.html",
    "title": "Class SvgPathParser | SharpVectors Documentation",
    "keywords": "Class SvgPathParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This class implements an event-based parser for the SVG path's d attribute values. public class SvgPathParser : SvgNumberParser Inheritance object SvgParser SvgNumberParser SvgPathParser Inherited Members SvgNumberParser.ParseFloat() SvgNumberParser.BuildFloat(int, int) SvgParser._reader SvgParser._current SvgParser.Current SvgParser.FormatMessage(string, object[]) SvgParser.Parse(string) SvgParser.ReportError(string, object[]) SvgParser.ReportCharacterExpectedError(char, int) SvgParser.ReportUnexpectedCharacterError(int) SvgParser.CreateErrorMessage(string, object[]) SvgParser.SkipSpaces() SvgParser.SkipCommaSpaces() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPathParser(ISvgPathHandler) Creates a new PathParser. Fields _pathHandler The path handler used to report parse events. Properties Handler Allows an application to register a path handler. If the application does not register a handler, all events reported by the parser will be silently ignored. Applications may register a new or different handler in the middle of a parse, and the parser must begin using the new handler immediately. Methods DoParse() Method responsible for actually parsing data after AbstractParser has initialized itself. ParseA() Parses a 'A' command. ParseC() Parses a 'C' command. ParseH() Parses a 'H' command. ParseL() Parses a 'L' command. ParseM() Parses a 'M' command. ParseQ() Parses a 'Q' command. ParseS() Parses a 'S' command. ParseT() Parses a 'T' command. ParseV() Parses a 'V' command. Parsea() Parses a 'a' command. Parsec() Parses a 'c' command. Parseh() Parses a 'h' command. Parsel() Parses a 'l' command. Parsem() Parses a 'm' command. Parseq() Parses a 'q' command. Parses() Parses a 's' command. Parset() Parses a 't' command. Parsev() Parses a 'v' command. ReportUnexpected(int) SkipCommaSpaces2() Skips the whitespaces and an optional comma. SkipSubPath() Skips a sub-path. _parseL(bool) _parsel(bool)"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.-ctor.html",
    "title": "Constructor SvgPathSeg | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSeg Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSeg(SvgPathSegType) protected SvgPathSeg(SvgPathSegType type) Parameters type SvgPathSegType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public abstract SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.EndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.EndAngle.html",
    "title": "Property EndAngle | SharpVectors Documentation",
    "keywords": "Property EndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndAngle public abstract double EndAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.Index.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.Index.html",
    "title": "Property Index | SharpVectors Documentation",
    "keywords": "Property Index Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Index public int Index { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.IsAbsolute.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.IsAbsolute.html",
    "title": "Property IsAbsolute | SharpVectors Documentation",
    "keywords": "Property IsAbsolute Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsAbsolute public bool IsAbsolute { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.IsCurve.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.IsCurve.html",
    "title": "Property IsCurve | SharpVectors Documentation",
    "keywords": "Property IsCurve Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsCurve public bool IsCurve { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.IsRelative.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.IsRelative.html",
    "title": "Property IsRelative | SharpVectors Documentation",
    "keywords": "Property IsRelative Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRelative public bool IsRelative { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.Length.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Length public virtual double Length { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.Limits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.Limits.html",
    "title": "Property Limits | SharpVectors Documentation",
    "keywords": "Property Limits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Limits public SvgPointF[] Limits { get; set; } Property Value SvgPointF[]"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.NextSeg.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.NextSeg.html",
    "title": "Property NextSeg | SharpVectors Documentation",
    "keywords": "Property NextSeg Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NextSeg public SvgPathSeg NextSeg { get; } Property Value SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.PathSegType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.PathSegType.html",
    "title": "Property PathSegType | SharpVectors Documentation",
    "keywords": "Property PathSegType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathSegType public SvgPathSegType PathSegType { get; } Property Value SvgPathSegType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.PathSegTypeAsLetter.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.PathSegTypeAsLetter.html",
    "title": "Property PathSegTypeAsLetter | SharpVectors Documentation",
    "keywords": "Property PathSegTypeAsLetter Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathSegTypeAsLetter public string PathSegTypeAsLetter { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public abstract string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.PathType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.PathType.html",
    "title": "Property PathType | SharpVectors Documentation",
    "keywords": "Property PathType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathType public virtual SvgPathType PathType { get; } Property Value SvgPathType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.PreviousSeg.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.PreviousSeg.html",
    "title": "Property PreviousSeg | SharpVectors Documentation",
    "keywords": "Property PreviousSeg Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreviousSeg public SvgPathSeg PreviousSeg { get; } Property Value SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.StartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.StartAngle.html",
    "title": "Property StartAngle | SharpVectors Documentation",
    "keywords": "Property StartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartAngle public abstract double StartAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg._limits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg._limits.html",
    "title": "Field _limits | SharpVectors Documentation",
    "keywords": "Field _limits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected SvgPointF[] _limits Returns SvgPointF[]"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg._type.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg._type.html",
    "title": "Field _type | SharpVectors Documentation",
    "keywords": "Field _type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected SvgPathSegType _type Returns SvgPathSegType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSeg.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSeg.html",
    "title": "Class SvgPathSeg | SharpVectors Documentation",
    "keywords": "Class SvgPathSeg Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgPathSeg : ISvgPathSeg Inheritance object SvgPathSeg Implements ISvgPathSeg Derived SvgPathSegArc SvgPathSegClosePath SvgPathSegCurveto SvgPathSegLineto SvgPathSegMoveto Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPathSeg(SvgPathSegType) Fields _limits _type Properties AbsXY EndAngle Index IsAbsolute IsCurve IsRelative Length Limits NextSeg PathSegType PathSegTypeAsLetter PathText PathType PreviousSeg StartAngle"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.-ctor.html",
    "title": "Constructor SvgPathSegArc | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegArc Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegArc(SvgPathSegType, double, double, double, double, double, bool, bool) protected SvgPathSegArc(SvgPathSegType type, double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters type SvgPathSegType x double y double r1 double r2 double angle double largeArcFlag bool sweepFlag bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override abstract SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.Angle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.Angle.html",
    "title": "Property Angle | SharpVectors Documentation",
    "keywords": "Property Angle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Angle public double Angle { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.EndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.EndAngle.html",
    "title": "Property EndAngle | SharpVectors Documentation",
    "keywords": "Property EndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndAngle public override double EndAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.GetCalculatedArcValues.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.GetCalculatedArcValues.html",
    "title": "Method GetCalculatedArcValues | SharpVectors Documentation",
    "keywords": "Method GetCalculatedArcValues Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetCalculatedArcValues() public CalculatedArcValues GetCalculatedArcValues() Returns CalculatedArcValues"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.LargeArcFlag.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.LargeArcFlag.html",
    "title": "Property LargeArcFlag | SharpVectors Documentation",
    "keywords": "Property LargeArcFlag Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LargeArcFlag public bool LargeArcFlag { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.PathType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.PathType.html",
    "title": "Property PathType | SharpVectors Documentation",
    "keywords": "Property PathType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathType public override SvgPathType PathType { get; } Property Value SvgPathType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.R1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.R1.html",
    "title": "Property R1 | SharpVectors Documentation",
    "keywords": "Property R1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll R1 public double R1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.R2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.R2.html",
    "title": "Property R2 | SharpVectors Documentation",
    "keywords": "Property R2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll R2 public double R2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.StartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.StartAngle.html",
    "title": "Property StartAngle | SharpVectors Documentation",
    "keywords": "Property StartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartAngle public override double StartAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.SweepFlag.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.SweepFlag.html",
    "title": "Property SweepFlag | SharpVectors Documentation",
    "keywords": "Property SweepFlag Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SweepFlag public bool SweepFlag { get; set; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArc.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArc.html",
    "title": "Class SvgPathSegArc | SharpVectors Documentation",
    "keywords": "Class SvgPathSegArc Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgPathSegArc : SvgPathSeg, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegArc Implements ISvgPathSeg Derived SvgPathSegArcAbs SvgPathSegArcRel Inherited Members SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPathSegArc(SvgPathSegType, double, double, double, double, double, bool, bool) Properties AbsXY Angle EndAngle LargeArcFlag PathText PathType R1 R2 StartAngle SweepFlag X Y Methods GetCalculatedArcValues()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArcAbs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArcAbs.-ctor.html",
    "title": "Constructor SvgPathSegArcAbs | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegArcAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegArcAbs(double, double, double, double, double, bool, bool) public SvgPathSegArcAbs(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters x double y double r1 double r2 double angle double largeArcFlag bool sweepFlag bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArcAbs.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArcAbs.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArcAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArcAbs.html",
    "title": "Class SvgPathSegArcAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegArcAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgPathSegLinetoAbs. public sealed class SvgPathSegArcAbs : SvgPathSegArc, ISvgPathSegArcAbs, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegArc SvgPathSegArcAbs Implements ISvgPathSegArcAbs ISvgPathSeg Inherited Members SvgPathSegArc.PathType SvgPathSegArc.X SvgPathSegArc.Y SvgPathSegArc.R1 SvgPathSegArc.R2 SvgPathSegArc.Angle SvgPathSegArc.LargeArcFlag SvgPathSegArc.SweepFlag SvgPathSegArc.StartAngle SvgPathSegArc.EndAngle SvgPathSegArc.PathText SvgPathSegArc.GetCalculatedArcValues() SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegArcAbs(double, double, double, double, double, bool, bool) Properties AbsXY"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArcRel.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArcRel.-ctor.html",
    "title": "Constructor SvgPathSegArcRel | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegArcRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegArcRel(double, double, double, double, double, bool, bool) public SvgPathSegArcRel(double x, double y, double r1, double r2, double angle, bool largeArcFlag, bool sweepFlag) Parameters x double y double r1 double r2 double angle double largeArcFlag bool sweepFlag bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArcRel.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArcRel.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegArcRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegArcRel.html",
    "title": "Class SvgPathSegArcRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegArcRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgPathSegLinetoAbs. public sealed class SvgPathSegArcRel : SvgPathSegArc, ISvgPathSegArcRel, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegArc SvgPathSegArcRel Implements ISvgPathSegArcRel ISvgPathSeg Inherited Members SvgPathSegArc.PathType SvgPathSegArc.X SvgPathSegArc.Y SvgPathSegArc.R1 SvgPathSegArc.R2 SvgPathSegArc.Angle SvgPathSegArc.LargeArcFlag SvgPathSegArc.SweepFlag SvgPathSegArc.StartAngle SvgPathSegArc.EndAngle SvgPathSegArc.PathText SvgPathSegArc.GetCalculatedArcValues() SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegArcRel(double, double, double, double, double, bool, bool) Properties AbsXY"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.-ctor.html",
    "title": "Constructor SvgPathSegClosePath | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegClosePath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegClosePath() public SvgPathSegClosePath()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.EndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.EndAngle.html",
    "title": "Property EndAngle | SharpVectors Documentation",
    "keywords": "Property EndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndAngle public override double EndAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.PathType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.PathType.html",
    "title": "Property PathType | SharpVectors Documentation",
    "keywords": "Property PathType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathType public override SvgPathType PathType { get; } Property Value SvgPathType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.StartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.StartAngle.html",
    "title": "Property StartAngle | SharpVectors Documentation",
    "keywords": "Property StartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartAngle public override double StartAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegClosePath.html",
    "title": "Class SvgPathSegClosePath | SharpVectors Documentation",
    "keywords": "Class SvgPathSegClosePath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgPathSegClosePath. public sealed class SvgPathSegClosePath : SvgPathSeg, ISvgPathSegClosePath, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegClosePath Implements ISvgPathSegClosePath ISvgPathSeg Inherited Members SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegClosePath() Properties AbsXY EndAngle PathText PathType StartAngle"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.-ctor.html",
    "title": "Constructor SvgPathSegCurveto | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurveto Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurveto(SvgPathSegType) protected SvgPathSegCurveto(SvgPathSegType type) Parameters type SvgPathSegType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override abstract SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public abstract SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public abstract SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.EndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.EndAngle.html",
    "title": "Property EndAngle | SharpVectors Documentation",
    "keywords": "Property EndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndAngle public override double EndAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.GetArcLengthPolynomial.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.GetArcLengthPolynomial.html",
    "title": "Method GetArcLengthPolynomial | SharpVectors Documentation",
    "keywords": "Method GetArcLengthPolynomial Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetArcLengthPolynomial() protected abstract SqrtPolynomial GetArcLengthPolynomial() Returns SqrtPolynomial"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.Length.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Length public override double Length { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.PathType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.PathType.html",
    "title": "Property PathType | SharpVectors Documentation",
    "keywords": "Property PathType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathType public override SvgPathType PathType { get; } Property Value SvgPathType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.StartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.StartAngle.html",
    "title": "Property StartAngle | SharpVectors Documentation",
    "keywords": "Property StartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartAngle public override double StartAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurveto.html",
    "title": "Class SvgPathSegCurveto | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurveto Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgPathSegCurveto : SvgPathSeg, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto Implements ISvgPathSeg Derived SvgPathSegCurvetoCubic SvgPathSegCurvetoQuadratic Inherited Members SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPathSegCurveto(SvgPathSegType) Properties AbsXY CubicX1Y1 CubicX2Y2 EndAngle Length PathType StartAngle Methods GetArcLengthPolynomial()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoCubic | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoCubic Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoCubic(SvgPathSegType) protected SvgPathSegCurvetoCubic(SvgPathSegType type) Parameters type SvgPathSegType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override abstract SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override abstract SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override abstract SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.GetArcLengthPolynomial.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.GetArcLengthPolynomial.html",
    "title": "Method GetArcLengthPolynomial | SharpVectors Documentation",
    "keywords": "Method GetArcLengthPolynomial Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetArcLengthPolynomial() protected override SqrtPolynomial GetArcLengthPolynomial() Returns SqrtPolynomial"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubic.html",
    "title": "Class SvgPathSegCurvetoCubic | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubic Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgPathSegCurvetoCubic : SvgPathSegCurveto, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic Implements ISvgPathSeg Derived SvgPathSegCurvetoCubicAbs SvgPathSegCurvetoCubicRel SvgPathSegCurvetoCubicSmoothAbs SvgPathSegCurvetoCubicSmoothRel Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPathSegCurvetoCubic(SvgPathSegType) Properties AbsXY CubicX1Y1 CubicX2Y2 Methods GetArcLengthPolynomial()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoCubicAbs | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoCubicAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoCubicAbs(double, double, double, double, double, double) public SvgPathSegCurvetoCubicAbs(double x, double y, double x1, double y1, double x2, double y2) Parameters x double y double x1 double y1 double x2 double y2 double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X1 public double X1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X2 public double X2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y1 public double Y1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y2 public double Y2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicAbs.html",
    "title": "Class SvgPathSegCurvetoCubicAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubicAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegCurvetoCubicAbs : SvgPathSegCurvetoCubic, ISvgPathSegCurvetoCubicAbs, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicAbs Implements ISvgPathSegCurvetoCubicAbs ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegCurvetoCubicAbs(double, double, double, double, double, double) Properties AbsXY CubicX1Y1 CubicX2Y2 PathText X X1 X2 Y Y1 Y2"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoCubicRel | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoCubicRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoCubicRel(double, double, double, double, double, double) public SvgPathSegCurvetoCubicRel(double x, double y, double x1, double y1, double x2, double y2) Parameters x double y double x1 double y1 double x2 double y2 double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X1 public double X1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X2 public double X2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y1 public double Y1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y2 public double Y2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicRel.html",
    "title": "Class SvgPathSegCurvetoCubicRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubicRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgPathSegCurvetoCubicRel. public sealed class SvgPathSegCurvetoCubicRel : SvgPathSegCurvetoCubic, ISvgPathSegCurvetoCubicRel, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicRel Implements ISvgPathSegCurvetoCubicRel ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegCurvetoCubicRel(double, double, double, double, double, double) Properties AbsXY CubicX1Y1 CubicX2Y2 PathText X X1 X2 Y Y1 Y2"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoCubicSmoothAbs | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoCubicSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoCubicSmoothAbs(double, double, double, double) public SvgPathSegCurvetoCubicSmoothAbs(double x, double y, double x2, double y2) Parameters x double y double x2 double y2 double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X2 public double X2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y2 public double Y2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothAbs.html",
    "title": "Class SvgPathSegCurvetoCubicSmoothAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubicSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegCurvetoCubicSmoothAbs : SvgPathSegCurvetoCubic, ISvgPathSegCurvetoCubicSmoothAbs, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicSmoothAbs Implements ISvgPathSegCurvetoCubicSmoothAbs ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegCurvetoCubicSmoothAbs(double, double, double, double) Properties AbsXY CubicX1Y1 CubicX2Y2 PathText X X2 Y Y2"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoCubicSmoothRel | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoCubicSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoCubicSmoothRel(double, double, double, double) public SvgPathSegCurvetoCubicSmoothRel(double x, double y, double x2, double y2) Parameters x double y double x2 double y2 double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.X2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.X2.html",
    "title": "Property X2 | SharpVectors Documentation",
    "keywords": "Property X2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X2 public double X2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.Y2.html",
    "title": "Property Y2 | SharpVectors Documentation",
    "keywords": "Property Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y2 public double Y2 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoCubicSmoothRel.html",
    "title": "Class SvgPathSegCurvetoCubicSmoothRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoCubicSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgPathSegCurvetoCubicSmoothAbs. public sealed class SvgPathSegCurvetoCubicSmoothRel : SvgPathSegCurvetoCubic, ISvgPathSegCurvetoCubicSmoothRel, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicSmoothRel Implements ISvgPathSegCurvetoCubicSmoothRel ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegCurvetoCubicSmoothRel(double, double, double, double) Properties AbsXY CubicX1Y1 CubicX2Y2 PathText X X2 Y Y2"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoQuadratic | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoQuadratic Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoQuadratic(SvgPathSegType) protected SvgPathSegCurvetoQuadratic(SvgPathSegType type) Parameters type SvgPathSegType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override abstract SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override abstract SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override abstract SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.GetArcLengthPolynomial.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.GetArcLengthPolynomial.html",
    "title": "Method GetArcLengthPolynomial | SharpVectors Documentation",
    "keywords": "Method GetArcLengthPolynomial Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetArcLengthPolynomial() protected override SqrtPolynomial GetArcLengthPolynomial() Returns SqrtPolynomial"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.QuadraticX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.QuadraticX1Y1.html",
    "title": "Property QuadraticX1Y1 | SharpVectors Documentation",
    "keywords": "Property QuadraticX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll QuadraticX1Y1 public abstract SvgPointF QuadraticX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadratic.html",
    "title": "Class SvgPathSegCurvetoQuadratic | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadratic Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgPathSegCurvetoQuadratic : SvgPathSegCurveto, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic Implements ISvgPathSeg Derived SvgPathSegCurvetoQuadraticAbs SvgPathSegCurvetoQuadraticRel SvgPathSegCurvetoQuadraticSmoothAbs SvgPathSegCurvetoQuadraticSmoothRel Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPathSegCurvetoQuadratic(SvgPathSegType) Properties AbsXY CubicX1Y1 CubicX2Y2 QuadraticX1Y1 Methods GetArcLengthPolynomial()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoQuadraticAbs | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoQuadraticAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoQuadraticAbs(double, double, double, double) public SvgPathSegCurvetoQuadraticAbs(double x, double y, double x1, double y1) Parameters x double y double x1 double y1 double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.QuadraticX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.QuadraticX1Y1.html",
    "title": "Property QuadraticX1Y1 | SharpVectors Documentation",
    "keywords": "Property QuadraticX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll QuadraticX1Y1 public override SvgPointF QuadraticX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X1 public double X1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y1 public double Y1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticAbs.html",
    "title": "Class SvgPathSegCurvetoQuadraticAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadraticAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgPathSegCurvetoCubicAbs. public sealed class SvgPathSegCurvetoQuadraticAbs : SvgPathSegCurvetoQuadratic, ISvgPathSegCurvetoQuadraticAbs, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticAbs Implements ISvgPathSegCurvetoQuadraticAbs ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegCurvetoQuadraticAbs(double, double, double, double) Properties AbsXY CubicX1Y1 CubicX2Y2 PathText QuadraticX1Y1 X X1 Y Y1"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoQuadraticRel | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoQuadraticRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoQuadraticRel(double, double, double, double) public SvgPathSegCurvetoQuadraticRel(double x, double y, double x1, double y1) Parameters x double y double x1 double y1 double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.QuadraticX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.QuadraticX1Y1.html",
    "title": "Property QuadraticX1Y1 | SharpVectors Documentation",
    "keywords": "Property QuadraticX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll QuadraticX1Y1 public override SvgPointF QuadraticX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.X1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.X1.html",
    "title": "Property X1 | SharpVectors Documentation",
    "keywords": "Property X1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X1 public double X1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.Y1.html",
    "title": "Property Y1 | SharpVectors Documentation",
    "keywords": "Property Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y1 public double Y1 { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticRel.html",
    "title": "Class SvgPathSegCurvetoQuadraticRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadraticRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgPathSegCurvetoCubicAbs. public sealed class SvgPathSegCurvetoQuadraticRel : SvgPathSegCurvetoQuadratic, ISvgPathSegCurvetoQuadraticRel, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticRel Implements ISvgPathSegCurvetoQuadraticRel ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegCurvetoQuadraticRel(double, double, double, double) Properties AbsXY CubicX1Y1 CubicX2Y2 PathText QuadraticX1Y1 X X1 Y Y1"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoQuadraticSmoothAbs | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoQuadraticSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoQuadraticSmoothAbs(double, double) public SvgPathSegCurvetoQuadraticSmoothAbs(double x, double y) Parameters x double y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.QuadraticX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.QuadraticX1Y1.html",
    "title": "Property QuadraticX1Y1 | SharpVectors Documentation",
    "keywords": "Property QuadraticX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll QuadraticX1Y1 public override SvgPointF QuadraticX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X The absolute X coordinate for the end point of this path segment. public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y The absolute Y coordinate for the end point of this path segment. public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothAbs.html",
    "title": "Class SvgPathSegCurvetoQuadraticSmoothAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadraticSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgPathSegCurvetoQuadraticSmoothAbs interface corresponds to an \"absolute smooth quadratic curveto\" (T) path data command. public sealed class SvgPathSegCurvetoQuadraticSmoothAbs : SvgPathSegCurvetoQuadratic, ISvgPathSegCurvetoQuadraticSmoothAbs, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticSmoothAbs Implements ISvgPathSegCurvetoQuadraticSmoothAbs ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegCurvetoQuadraticSmoothAbs(double, double) Properties AbsXY CubicX1Y1 CubicX2Y2 PathText QuadraticX1Y1 X The absolute X coordinate for the end point of this path segment. Y The absolute Y coordinate for the end point of this path segment."
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.-ctor.html",
    "title": "Constructor SvgPathSegCurvetoQuadraticSmoothRel | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegCurvetoQuadraticSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegCurvetoQuadraticSmoothRel(double, double) public SvgPathSegCurvetoQuadraticSmoothRel(double x, double y) Parameters x double y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.CubicX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.CubicX1Y1.html",
    "title": "Property CubicX1Y1 | SharpVectors Documentation",
    "keywords": "Property CubicX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX1Y1 public override SvgPointF CubicX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.CubicX2Y2.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.CubicX2Y2.html",
    "title": "Property CubicX2Y2 | SharpVectors Documentation",
    "keywords": "Property CubicX2Y2 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CubicX2Y2 public override SvgPointF CubicX2Y2 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.QuadraticX1Y1.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.QuadraticX1Y1.html",
    "title": "Property QuadraticX1Y1 | SharpVectors Documentation",
    "keywords": "Property QuadraticX1Y1 Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll QuadraticX1Y1 public override SvgPointF QuadraticX1Y1 { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X The absolute X coordinate for the end point of this path segment. public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y The absolute Y coordinate for the end point of this path segment. public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegCurvetoQuadraticSmoothRel.html",
    "title": "Class SvgPathSegCurvetoQuadraticSmoothRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegCurvetoQuadraticSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgPathSegCurvetoQuadraticSmoothRel interface corresponds to an \"relative smooth quadratic curveto\" (t) path data command. public sealed class SvgPathSegCurvetoQuadraticSmoothRel : SvgPathSegCurvetoQuadratic, ISvgPathSegCurvetoQuadraticSmoothRel, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegCurveto SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticSmoothRel Implements ISvgPathSegCurvetoQuadraticSmoothRel ISvgPathSeg Inherited Members SvgPathSegCurveto.PathType SvgPathSegCurveto.Length SvgPathSegCurveto.StartAngle SvgPathSegCurveto.EndAngle SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegCurvetoQuadraticSmoothRel(double, double) Properties AbsXY CubicX1Y1 CubicX2Y2 PathText QuadraticX1Y1 X The absolute X coordinate for the end point of this path segment. Y The absolute Y coordinate for the end point of this path segment."
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.-ctor.html",
    "title": "Constructor SvgPathSegHandler | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegHandler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegHandler(SvgPathSegList) public SvgPathSegHandler(SvgPathSegList pathList) Parameters pathList SvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.ArcAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.ArcAbs.html",
    "title": "Method ArcAbs | SharpVectors Documentation",
    "keywords": "Method ArcAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ArcAbs(float, float, float, bool, bool, float, float) Invoked when an absolute elliptical arc command has been parsed. Command : A public void ArcAbs(float rx, float ry, float xAxisRotation, bool largeArcFlag, bool sweepFlag, float x, float y) Parameters rx float the X axis radius for the ellipse ry float the Y axis radius for the ellipse xAxisRotation float the rotation angle in degrees for the ellipse's X-axis relative to the X-axis largeArcFlag bool the value of the large-arc-flag sweepFlag bool the value of the sweep-flag x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.ArcRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.ArcRel.html",
    "title": "Method ArcRel | SharpVectors Documentation",
    "keywords": "Method ArcRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ArcRel(float, float, float, bool, bool, float, float) Invoked when a relative elliptical arc command has been parsed. Command : a public void ArcRel(float rx, float ry, float xAxisRotation, bool largeArcFlag, bool sweepFlag, float x, float y) Parameters rx float the X axis radius for the ellipse ry float the Y axis radius for the ellipse xAxisRotation float the rotation angle in degrees for the ellipse's X-axis relative to the X-axis largeArcFlag bool the value of the large-arc-flag sweepFlag bool the value of the sweep-flag x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.ClosePath.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.ClosePath.html",
    "title": "Method ClosePath | SharpVectors Documentation",
    "keywords": "Method ClosePath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ClosePath() Invoked when a closepath has been parsed. Command : z | Z public void ClosePath() Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoCubicAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoCubicAbs.html",
    "title": "Method CurvetoCubicAbs | SharpVectors Documentation",
    "keywords": "Method CurvetoCubicAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoCubicAbs(float, float, float, float, float, float) Invoked when an absolute cubic bezier curve command has been parsed. Command : C public void CurvetoCubicAbs(float x1, float y1, float x2, float y2, float x, float y) Parameters x1 float the absolute x coordinate for the first control point y1 float the absolute y coordinate for the first control point x2 float the absolute x coordinate for the second control point y2 float the absolute y coordinate for the second control point x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoCubicRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoCubicRel.html",
    "title": "Method CurvetoCubicRel | SharpVectors Documentation",
    "keywords": "Method CurvetoCubicRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoCubicRel(float, float, float, float, float, float) Invoked when a relative cubic bezier curve command has been parsed. Command : c public void CurvetoCubicRel(float x1, float y1, float x2, float y2, float x, float y) Parameters x1 float the relative x coordinate for the first control point y1 float the relative y coordinate for the first control point x2 float the relative x coordinate for the second control point y2 float the relative y coordinate for the second control point x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoCubicSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoCubicSmoothAbs.html",
    "title": "Method CurvetoCubicSmoothAbs | SharpVectors Documentation",
    "keywords": "Method CurvetoCubicSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoCubicSmoothAbs(float, float, float, float) Invoked when an absolute smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : S public void CurvetoCubicSmoothAbs(float x2, float y2, float x, float y) Parameters x2 float the absolute x coordinate for the second control point y2 float the absolute y coordinate for the second control point x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoCubicSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoCubicSmoothRel.html",
    "title": "Method CurvetoCubicSmoothRel | SharpVectors Documentation",
    "keywords": "Method CurvetoCubicSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoCubicSmoothRel(float, float, float, float) Invoked when a relative smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : s public void CurvetoCubicSmoothRel(float x2, float y2, float x, float y) Parameters x2 float the relative x coordinate for the second control point y2 float the relative y coordinate for the second control point x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoQuadraticAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoQuadraticAbs.html",
    "title": "Method CurvetoQuadraticAbs | SharpVectors Documentation",
    "keywords": "Method CurvetoQuadraticAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoQuadraticAbs(float, float, float, float) Invoked when an absolute quadratic bezier curve command has been parsed. Command : Q public void CurvetoQuadraticAbs(float x1, float y1, float x, float y) Parameters x1 float the absolute x coordinate for the control point y1 float the absolute y coordinate for the control point x float the absolute x coordinate for the end point y float the absolute x coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoQuadraticRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoQuadraticRel.html",
    "title": "Method CurvetoQuadraticRel | SharpVectors Documentation",
    "keywords": "Method CurvetoQuadraticRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoQuadraticRel(float, float, float, float) Invoked when a relative quadratic bezier curve command has been parsed. Command : q public void CurvetoQuadraticRel(float x1, float y1, float x, float y) Parameters x1 float the relative x coordinate for the control point y1 float the relative y coordinate for the control point x float the relative x coordinate for the end point y float the relative x coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoQuadraticSmoothAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoQuadraticSmoothAbs.html",
    "title": "Method CurvetoQuadraticSmoothAbs | SharpVectors Documentation",
    "keywords": "Method CurvetoQuadraticSmoothAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoQuadraticSmoothAbs(float, float) Invoked when an absolute smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : T public void CurvetoQuadraticSmoothAbs(float x, float y) Parameters x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoQuadraticSmoothRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.CurvetoQuadraticSmoothRel.html",
    "title": "Method CurvetoQuadraticSmoothRel | SharpVectors Documentation",
    "keywords": "Method CurvetoQuadraticSmoothRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurvetoQuadraticSmoothRel(float, float) Invoked when a relative smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : t public void CurvetoQuadraticSmoothRel(float x, float y) Parameters x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.EndPath.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.EndPath.html",
    "title": "Method EndPath | SharpVectors Documentation",
    "keywords": "Method EndPath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndPath() Invoked when the path ends. public void EndPath() Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.IsClosed.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.IsClosed.html",
    "title": "Property IsClosed | SharpVectors Documentation",
    "keywords": "Property IsClosed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsClosed public bool IsClosed { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoAbs.html",
    "title": "Method LinetoAbs | SharpVectors Documentation",
    "keywords": "Method LinetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoAbs(float, float) Invoked when an absolute line command has been parsed. Command : L public void LinetoAbs(float x, float y) Parameters x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoHorizontalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoHorizontalAbs.html",
    "title": "Method LinetoHorizontalAbs | SharpVectors Documentation",
    "keywords": "Method LinetoHorizontalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoHorizontalAbs(float) Invoked when an horizontal absolute line command has been parsed. Command : H public void LinetoHorizontalAbs(float x) Parameters x float the absolute X coordinate of the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoHorizontalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoHorizontalRel.html",
    "title": "Method LinetoHorizontalRel | SharpVectors Documentation",
    "keywords": "Method LinetoHorizontalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoHorizontalRel(float) Invoked when an horizontal relative line command has been parsed. Command : h public void LinetoHorizontalRel(float x) Parameters x float the relative X coordinate of the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoRel.html",
    "title": "Method LinetoRel | SharpVectors Documentation",
    "keywords": "Method LinetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoRel(float, float) Invoked when a relative line command has been parsed. Command : l public void LinetoRel(float x, float y) Parameters x float the relative x coordinates for the end point y float the relative y coordinates for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoVerticalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoVerticalAbs.html",
    "title": "Method LinetoVerticalAbs | SharpVectors Documentation",
    "keywords": "Method LinetoVerticalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoVerticalAbs(float) Invoked when a vertical absolute line command has been parsed. Command : V public void LinetoVerticalAbs(float y) Parameters y float the absolute Y coordinate of the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoVerticalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.LinetoVerticalRel.html",
    "title": "Method LinetoVerticalRel | SharpVectors Documentation",
    "keywords": "Method LinetoVerticalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LinetoVerticalRel(float) Invoked when a vertical relative line command has been parsed. Command : v public void LinetoVerticalRel(float y) Parameters y float the relative Y coordinate of the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.MayHaveCurves.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.MayHaveCurves.html",
    "title": "Property MayHaveCurves | SharpVectors Documentation",
    "keywords": "Property MayHaveCurves Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MayHaveCurves public bool MayHaveCurves { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.MovetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.MovetoAbs.html",
    "title": "Method MovetoAbs | SharpVectors Documentation",
    "keywords": "Method MovetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MovetoAbs(float, float) Invoked when an absolute moveto command has been parsed. Command : M public void MovetoAbs(float x, float y) Parameters x float the absolute x coordinate for the end point y float the absolute y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.MovetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.MovetoRel.html",
    "title": "Method MovetoRel | SharpVectors Documentation",
    "keywords": "Method MovetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MovetoRel(float, float) Invoked when a relative moveto command has been parsed. Command : m public void MovetoRel(float x, float y) Parameters x float the relative x coordinate for the end point y float the relative y coordinate for the end point Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.StartPath.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.StartPath.html",
    "title": "Method StartPath | SharpVectors Documentation",
    "keywords": "Method StartPath Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartPath() Invoked when the path starts. public void StartPath() Exceptions FormatException if an error occured while processing the path"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegHandler.html",
    "title": "Class SvgPathSegHandler | SharpVectors Documentation",
    "keywords": "Class SvgPathSegHandler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegHandler : ISvgPathHandler Inheritance object SvgPathSegHandler Implements ISvgPathHandler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegHandler(SvgPathSegList) Properties IsClosed MayHaveCurves Methods ArcAbs(float, float, float, bool, bool, float, float) Invoked when an absolute elliptical arc command has been parsed. Command : A ArcRel(float, float, float, bool, bool, float, float) Invoked when a relative elliptical arc command has been parsed. Command : a ClosePath() Invoked when a closepath has been parsed. Command : z | Z CurvetoCubicAbs(float, float, float, float, float, float) Invoked when an absolute cubic bezier curve command has been parsed. Command : C CurvetoCubicRel(float, float, float, float, float, float) Invoked when a relative cubic bezier curve command has been parsed. Command : c CurvetoCubicSmoothAbs(float, float, float, float) Invoked when an absolute smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : S CurvetoCubicSmoothRel(float, float, float, float) Invoked when a relative smooth cubic bezier curve command has been parsed. The first control point is assumed to be the reflection of the second control point on the previous command relative to the current point. Command : s CurvetoQuadraticAbs(float, float, float, float) Invoked when an absolute quadratic bezier curve command has been parsed. Command : Q CurvetoQuadraticRel(float, float, float, float) Invoked when a relative quadratic bezier curve command has been parsed. Command : q CurvetoQuadraticSmoothAbs(float, float) Invoked when an absolute smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : T CurvetoQuadraticSmoothRel(float, float) Invoked when a relative smooth quadratic bezier curve command has been parsed. The control point is assumed to be the reflection of the control point on the previous command relative to the current point. Command : t EndPath() Invoked when the path ends. LinetoAbs(float, float) Invoked when an absolute line command has been parsed. Command : L LinetoHorizontalAbs(float) Invoked when an horizontal absolute line command has been parsed. Command : H LinetoHorizontalRel(float) Invoked when an horizontal relative line command has been parsed. Command : h LinetoRel(float, float) Invoked when a relative line command has been parsed. Command : l LinetoVerticalAbs(float) Invoked when a vertical absolute line command has been parsed. Command : V LinetoVerticalRel(float) Invoked when a vertical relative line command has been parsed. Command : v MovetoAbs(float, float) Invoked when an absolute moveto command has been parsed. Command : M MovetoRel(float, float) Invoked when a relative moveto command has been parsed. Command : m StartPath() Invoked when the path starts."
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLineto.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLineto.-ctor.html",
    "title": "Constructor SvgPathSegLineto | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegLineto Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegLineto(SvgPathSegType) protected SvgPathSegLineto(SvgPathSegType type) Parameters type SvgPathSegType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLineto.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLineto.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override abstract SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLineto.EndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLineto.EndAngle.html",
    "title": "Property EndAngle | SharpVectors Documentation",
    "keywords": "Property EndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndAngle public override double EndAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLineto.Length.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLineto.Length.html",
    "title": "Property Length | SharpVectors Documentation",
    "keywords": "Property Length Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Length public override double Length { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLineto.PathType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLineto.PathType.html",
    "title": "Property PathType | SharpVectors Documentation",
    "keywords": "Property PathType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathType public override SvgPathType PathType { get; } Property Value SvgPathType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLineto.StartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLineto.StartAngle.html",
    "title": "Property StartAngle | SharpVectors Documentation",
    "keywords": "Property StartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartAngle public override double StartAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLineto.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLineto.html",
    "title": "Class SvgPathSegLineto | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLineto Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgPathSegLineto : SvgPathSeg, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegLineto Implements ISvgPathSeg Derived SvgPathSegLinetoAbs SvgPathSegLinetoHorizontalAbs SvgPathSegLinetoHorizontalRel SvgPathSegLinetoRel SvgPathSegLinetoVerticalAbs SvgPathSegLinetoVerticalRel Inherited Members SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPathSegLineto(SvgPathSegType) Properties AbsXY EndAngle Length PathType StartAngle"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.-ctor.html",
    "title": "Constructor SvgPathSegLinetoAbs | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegLinetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegLinetoAbs(double, double) public SvgPathSegLinetoAbs(double x, double y) Parameters x double y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoAbs.html",
    "title": "Class SvgPathSegLinetoAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegLinetoAbs : SvgPathSegLineto, ISvgPathSegLinetoAbs, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoAbs Implements ISvgPathSegLinetoAbs ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegLinetoAbs(double, double) Properties AbsXY PathText X Y"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.-ctor.html",
    "title": "Constructor SvgPathSegLinetoHorizontalAbs | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegLinetoHorizontalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegLinetoHorizontalAbs(double) public SvgPathSegLinetoHorizontalAbs(double x) Parameters x double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalAbs.html",
    "title": "Class SvgPathSegLinetoHorizontalAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoHorizontalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegLinetoHorizontalAbs : SvgPathSegLineto, ISvgPathSegLinetoHorizontalAbs, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoHorizontalAbs Implements ISvgPathSegLinetoHorizontalAbs ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegLinetoHorizontalAbs(double) Properties AbsXY PathText X"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.-ctor.html",
    "title": "Constructor SvgPathSegLinetoHorizontalRel | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegLinetoHorizontalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegLinetoHorizontalRel(double) public SvgPathSegLinetoHorizontalRel(double x) Parameters x double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoHorizontalRel.html",
    "title": "Class SvgPathSegLinetoHorizontalRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoHorizontalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegLinetoHorizontalRel : SvgPathSegLineto, ISvgPathSegLinetoHorizontalRel, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoHorizontalRel Implements ISvgPathSegLinetoHorizontalRel ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegLinetoHorizontalRel(double) Properties AbsXY PathText X"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.-ctor.html",
    "title": "Constructor SvgPathSegLinetoRel | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegLinetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegLinetoRel(double, double) public SvgPathSegLinetoRel(double x, double y) Parameters x double y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoRel.html",
    "title": "Class SvgPathSegLinetoRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegLinetoRel : SvgPathSegLineto, ISvgPathSegLinetoRel, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoRel Implements ISvgPathSegLinetoRel ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegLinetoRel(double, double) Properties AbsXY PathText X Y"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.-ctor.html",
    "title": "Constructor SvgPathSegLinetoVerticalAbs | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegLinetoVerticalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegLinetoVerticalAbs(double) public SvgPathSegLinetoVerticalAbs(double y) Parameters y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalAbs.html",
    "title": "Class SvgPathSegLinetoVerticalAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoVerticalAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegLinetoVerticalAbs : SvgPathSegLineto, ISvgPathSegLinetoVerticalAbs, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoVerticalAbs Implements ISvgPathSegLinetoVerticalAbs ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegLinetoVerticalAbs(double) Properties AbsXY PathText Y"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.-ctor.html",
    "title": "Constructor SvgPathSegLinetoVerticalRel | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegLinetoVerticalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegLinetoVerticalRel(double) public SvgPathSegLinetoVerticalRel(double y) Parameters y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegLinetoVerticalRel.html",
    "title": "Class SvgPathSegLinetoVerticalRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegLinetoVerticalRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegLinetoVerticalRel : SvgPathSegLineto, ISvgPathSegLinetoVerticalRel, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegLineto SvgPathSegLinetoVerticalRel Implements ISvgPathSegLinetoVerticalRel ISvgPathSeg Inherited Members SvgPathSegLineto.PathType SvgPathSegLineto.StartAngle SvgPathSegLineto.EndAngle SvgPathSegLineto.Length SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegLinetoVerticalRel(double) Properties AbsXY PathText Y"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.-ctor.html",
    "title": "Constructor SvgPathSegList | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegList(string, bool) public SvgPathSegList(string d, bool readOnly) Parameters d string readOnly bool SvgPathSegList(ISvgPathSegList) public SvgPathSegList(ISvgPathSegList pathList) Parameters pathList ISvgPathSegList"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.Add.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.Add.html",
    "title": "Method Add | SharpVectors Documentation",
    "keywords": "Method Add Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Add(SvgPathSeg) public void Add(SvgPathSeg item) Parameters item SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.AppendItem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.AppendItem.html",
    "title": "Method AppendItem | SharpVectors Documentation",
    "keywords": "Method AppendItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AppendItem(SvgPathSeg) public SvgPathSeg AppendItem(SvgPathSeg newItem) Parameters newItem SvgPathSeg Returns SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.Clear.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.Contains.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.Contains.html",
    "title": "Method Contains | SharpVectors Documentation",
    "keywords": "Method Contains Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Contains(SvgPathSeg) public bool Contains(SvgPathSeg item) Parameters item SvgPathSeg Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.CopyTo.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.CopyTo.html",
    "title": "Method CopyTo | SharpVectors Documentation",
    "keywords": "Method CopyTo Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CopyTo(SvgPathSeg[], int) public void CopyTo(SvgPathSeg[] array, int arrayIndex) Parameters array SvgPathSeg[] arrayIndex int"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.Count.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>."
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.GetEndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.GetEndAngle.html",
    "title": "Method GetEndAngle | SharpVectors Documentation",
    "keywords": "Method GetEndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetEndAngle(int) public double GetEndAngle(int index) Parameters index int Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.GetEnumerator.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.GetEnumerator.html",
    "title": "Method GetEnumerator | SharpVectors Documentation",
    "keywords": "Method GetEnumerator Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetEnumerator() public IEnumerator<SvgPathSeg> GetEnumerator() Returns IEnumerator<SvgPathSeg>"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.GetItem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.GetItem.html",
    "title": "Method GetItem | SharpVectors Documentation",
    "keywords": "Method GetItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetItem(int) public SvgPathSeg GetItem(int index) Parameters index int Returns SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.GetNextSegment.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.GetNextSegment.html",
    "title": "Method GetNextSegment | SharpVectors Documentation",
    "keywords": "Method GetNextSegment Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetNextSegment(SvgPathSeg) public SvgPathSeg GetNextSegment(SvgPathSeg seg) Parameters seg SvgPathSeg Returns SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.GetPathSegAtLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.GetPathSegAtLength.html",
    "title": "Method GetPathSegAtLength | SharpVectors Documentation",
    "keywords": "Method GetPathSegAtLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetPathSegAtLength(double) public int GetPathSegAtLength(double distance) Parameters distance double Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.GetPreviousSegment.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.GetPreviousSegment.html",
    "title": "Method GetPreviousSegment | SharpVectors Documentation",
    "keywords": "Method GetPreviousSegment Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetPreviousSegment(SvgPathSeg) public SvgPathSeg GetPreviousSegment(SvgPathSeg seg) Parameters seg SvgPathSeg Returns SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.GetStartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.GetStartAngle.html",
    "title": "Method GetStartAngle | SharpVectors Documentation",
    "keywords": "Method GetStartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetStartAngle(int) public double GetStartAngle(int index) Parameters index int Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.GetTotalLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.GetTotalLength.html",
    "title": "Method GetTotalLength | SharpVectors Documentation",
    "keywords": "Method GetTotalLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetTotalLength() public double GetTotalLength() Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.IndexOf.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.IndexOf.html",
    "title": "Method IndexOf | SharpVectors Documentation",
    "keywords": "Method IndexOf Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IndexOf(SvgPathSeg) public int IndexOf(SvgPathSeg item) Parameters item SvgPathSeg Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.Initialize.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Initialize(SvgPathSeg) public SvgPathSeg Initialize(SvgPathSeg newItem) Parameters newItem SvgPathSeg Returns SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.Insert.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.Insert.html",
    "title": "Method Insert | SharpVectors Documentation",
    "keywords": "Method Insert Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Insert(int, SvgPathSeg) public void Insert(int index, SvgPathSeg item) Parameters index int item SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.InsertItemBefore.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.InsertItemBefore.html",
    "title": "Method InsertItemBefore | SharpVectors Documentation",
    "keywords": "Method InsertItemBefore Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll InsertItemBefore(SvgPathSeg, int) public SvgPathSeg InsertItemBefore(SvgPathSeg newItem, int index) Parameters newItem SvgPathSeg index int Returns SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.IsClosed.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.IsClosed.html",
    "title": "Property IsClosed | SharpVectors Documentation",
    "keywords": "Property IsClosed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsClosed public bool IsClosed { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.IsReadOnly.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.IsReadOnly.html",
    "title": "Property IsReadOnly | SharpVectors Documentation",
    "keywords": "Property IsReadOnly Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.Item.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll this[int] public SvgPathSeg this[int index] { get; set; } Parameters index int Property Value SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.MayHaveCurves.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.MayHaveCurves.html",
    "title": "Property MayHaveCurves | SharpVectors Documentation",
    "keywords": "Property MayHaveCurves Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MayHaveCurves public bool MayHaveCurves { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.NumberOfItems.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.NumberOfItems.html",
    "title": "Property NumberOfItems | SharpVectors Documentation",
    "keywords": "Property NumberOfItems Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NumberOfItems public int NumberOfItems { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.PathScript.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.PathScript.html",
    "title": "Property PathScript | SharpVectors Documentation",
    "keywords": "Property PathScript Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathScript public string PathScript { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.Points.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.Points.html",
    "title": "Property Points | SharpVectors Documentation",
    "keywords": "Property Points Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Points public SvgPointF[] Points { get; } Property Value SvgPointF[]"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.Remove.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.Remove.html",
    "title": "Method Remove | SharpVectors Documentation",
    "keywords": "Method Remove Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Remove(SvgPathSeg) public bool Remove(SvgPathSeg item) Parameters item SvgPathSeg Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.RemoveAt.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.RemoveAt.html",
    "title": "Method RemoveAt | SharpVectors Documentation",
    "keywords": "Method RemoveAt Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.RemoveItem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.RemoveItem.html",
    "title": "Method RemoveItem | SharpVectors Documentation",
    "keywords": "Method RemoveItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RemoveItem(int) public SvgPathSeg RemoveItem(int index) Parameters index int Returns SvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.ReplaceItem.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.ReplaceItem.html",
    "title": "Method ReplaceItem | SharpVectors Documentation",
    "keywords": "Method ReplaceItem Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReplaceItem(SvgPathSeg, int) public ISvgPathSeg ReplaceItem(SvgPathSeg newItem, int index) Parameters newItem SvgPathSeg index int Returns ISvgPathSeg"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.ToString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.ToString.html",
    "title": "Method ToString | SharpVectors Documentation",
    "keywords": "Method ToString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegList.html",
    "title": "Class SvgPathSegList | SharpVectors Documentation",
    "keywords": "Class SvgPathSegList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public class SvgPathSegList : ISvgPathSegList, IList<ISvgPathSeg>, ICollection<ISvgPathSeg>, IEnumerable<ISvgPathSeg>, IEnumerable Inheritance object SvgPathSegList Implements ISvgPathSegList IList<ISvgPathSeg> ICollection<ISvgPathSeg> IEnumerable<ISvgPathSeg> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPathSegList(ISvgPathSegList) SvgPathSegList(string, bool) Properties Count Gets the number of elements contained in the ICollection<T>. IsClosed IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. this[int] MayHaveCurves NumberOfItems PathScript PathText Points Methods Add(SvgPathSeg) AppendItem(SvgPathSeg) Clear() Removes all items from the ICollection<T>. Contains(SvgPathSeg) CopyTo(SvgPathSeg[], int) GetEndAngle(int) GetEnumerator() GetItem(int) GetNextSegment(SvgPathSeg) GetPathSegAtLength(double) GetPreviousSegment(SvgPathSeg) GetStartAngle(int) GetTotalLength() IndexOf(SvgPathSeg) Initialize(SvgPathSeg) Insert(int, SvgPathSeg) InsertItemBefore(SvgPathSeg, int) Remove(SvgPathSeg) RemoveAt(int) Removes the IList<T> item at the specified index. RemoveItem(int) ReplaceItem(SvgPathSeg, int) ToString() Returns a string that represents the current object."
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.-ctor.html",
    "title": "Constructor SvgPathSegMoveto | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegMoveto Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegMoveto(SvgPathSegType, double, double) protected SvgPathSegMoveto(SvgPathSegType type, double x, double y) Parameters type SvgPathSegType x double y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override abstract SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.EndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.EndAngle.html",
    "title": "Property EndAngle | SharpVectors Documentation",
    "keywords": "Property EndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndAngle public override double EndAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.PathText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.PathText.html",
    "title": "Property PathText | SharpVectors Documentation",
    "keywords": "Property PathText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathText public override string PathText { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.PathType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.PathType.html",
    "title": "Property PathType | SharpVectors Documentation",
    "keywords": "Property PathType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PathType public override SvgPathType PathType { get; } Property Value SvgPathType"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.StartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.StartAngle.html",
    "title": "Property StartAngle | SharpVectors Documentation",
    "keywords": "Property StartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartAngle public override double StartAngle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto._x.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto._x.html",
    "title": "Field _x | SharpVectors Documentation",
    "keywords": "Field _x Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected double _x Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto._y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto._y.html",
    "title": "Field _y | SharpVectors Documentation",
    "keywords": "Field _y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected double _y Returns double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMoveto.html",
    "title": "Class SvgPathSegMoveto | SharpVectors Documentation",
    "keywords": "Class SvgPathSegMoveto Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgMoveToSeg. public abstract class SvgPathSegMoveto : SvgPathSeg, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegMoveto Implements ISvgPathSeg Derived SvgPathSegMovetoAbs SvgPathSegMovetoRel Inherited Members SvgPathSeg._type SvgPathSeg._limits SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPathSegMoveto(SvgPathSegType, double, double) Fields _x _y Properties AbsXY EndAngle PathText PathType StartAngle X Y"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMovetoAbs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMovetoAbs.-ctor.html",
    "title": "Constructor SvgPathSegMovetoAbs | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegMovetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegMovetoAbs(double, double) public SvgPathSegMovetoAbs(double x, double y) Parameters x double y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMovetoAbs.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMovetoAbs.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMovetoAbs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMovetoAbs.html",
    "title": "Class SvgPathSegMovetoAbs | SharpVectors Documentation",
    "keywords": "Class SvgPathSegMovetoAbs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegMovetoAbs : SvgPathSegMoveto, ISvgPathSegMovetoAbs, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegMoveto SvgPathSegMovetoAbs Implements ISvgPathSegMovetoAbs ISvgPathSeg Inherited Members SvgPathSegMoveto.PathType SvgPathSegMoveto.StartAngle SvgPathSegMoveto.EndAngle SvgPathSegMoveto.X SvgPathSegMoveto.Y SvgPathSegMoveto.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegMovetoAbs(double, double) Properties AbsXY"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMovetoRel.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMovetoRel.-ctor.html",
    "title": "Constructor SvgPathSegMovetoRel | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegMovetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegMovetoRel(double, double) public SvgPathSegMovetoRel(double x, double y) Parameters x double y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMovetoRel.AbsXY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMovetoRel.AbsXY.html",
    "title": "Property AbsXY | SharpVectors Documentation",
    "keywords": "Property AbsXY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsXY public override SvgPointF AbsXY { get; } Property Value SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegMovetoRel.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegMovetoRel.html",
    "title": "Class SvgPathSegMovetoRel | SharpVectors Documentation",
    "keywords": "Class SvgPathSegMovetoRel Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgPathSegMovetoRel interface corresponds to an \"relative moveto\" (m) path data command. public sealed class SvgPathSegMovetoRel : SvgPathSegMoveto, ISvgPathSegMovetoRel, ISvgPathSeg Inheritance object SvgPathSeg SvgPathSegMoveto SvgPathSegMovetoRel Implements ISvgPathSegMovetoRel ISvgPathSeg Inherited Members SvgPathSegMoveto.PathType SvgPathSegMoveto.StartAngle SvgPathSegMoveto.EndAngle SvgPathSegMoveto.X SvgPathSegMoveto.Y SvgPathSegMoveto.PathText SvgPathSeg.Limits SvgPathSeg.PreviousSeg SvgPathSeg.NextSeg SvgPathSeg.Index SvgPathSeg.Length SvgPathSeg.IsCurve SvgPathSeg.IsAbsolute SvgPathSeg.IsRelative SvgPathSeg.PathSegType SvgPathSeg.PathSegTypeAsLetter object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegMovetoRel(double, double) Properties AbsXY"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegParser.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegParser.-ctor.html",
    "title": "Constructor SvgPathSegParser | SharpVectors Documentation",
    "keywords": "Constructor SvgPathSegParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPathSegParser() public SvgPathSegParser()"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegParser.IsClosed.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegParser.IsClosed.html",
    "title": "Property IsClosed | SharpVectors Documentation",
    "keywords": "Property IsClosed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsClosed public bool IsClosed { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegParser.MayHaveCurves.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegParser.MayHaveCurves.html",
    "title": "Property MayHaveCurves | SharpVectors Documentation",
    "keywords": "Property MayHaveCurves Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MayHaveCurves public bool MayHaveCurves { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegParser.Parse.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegParser.Parse.html",
    "title": "Method Parse | SharpVectors Documentation",
    "keywords": "Method Parse Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Parse(SvgPathSegList, string) public bool Parse(SvgPathSegList pathList, string pathSegs) Parameters pathList SvgPathSegList pathSegs string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegParser.html",
    "title": "Class SvgPathSegParser | SharpVectors Documentation",
    "keywords": "Class SvgPathSegParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPathSegParser Inheritance object SvgPathSegParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPathSegParser() Properties IsClosed MayHaveCurves Methods Parse(SvgPathSegList, string)"
  },
  "api/SharpVectors.Dom.Svg.SvgPathSegType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathSegType.html",
    "title": "Enum SvgPathSegType | SharpVectors Documentation",
    "keywords": "Enum SvgPathSegType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgPathSegType : ushort Fields Unknown = 0 ClosePath = 1 MoveToAbs = 2 MoveToRel = 3 LineToAbs = 4 LineToRel = 5 CurveToCubicAbs = 6 CurveToCubicRel = 7 CurveToQuadraticAbs = 8 CurveToQuadraticRel = 9 ArcAbs = 10 ArcRel = 11 LineToHorizontalAbs = 12 LineToHorizontalRel = 13 LineToVerticalAbs = 14 LineToVerticalRel = 15 CurveToCubicSmoothAbs = 16 CurveToCubicSmoothRel = 17 CurveToQuadraticSmoothAbs = 18 CurveToQuadraticSmoothRel = 19"
  },
  "api/SharpVectors.Dom.Svg.SvgPathType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPathType.html",
    "title": "Enum SvgPathType | SharpVectors Documentation",
    "keywords": "Enum SvgPathType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgPathType Fields None = 0 MoveTo = 1 LineTo = 2 CurveTo = 3 ArcTo = 4 Close = 5"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.-ctor.html",
    "title": "Constructor SvgPatternElement | SharpVectors Documentation",
    "keywords": "Constructor SvgPatternElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPatternElement(string, string, string, SvgDocument) public SvgPatternElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.Children.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.Children.html",
    "title": "Property Children | SharpVectors Documentation",
    "keywords": "Property Children Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Children public XmlNodeList Children { get; } Property Value XmlNodeList"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.CurrentView.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.CurrentView.html",
    "title": "Property CurrentView | SharpVectors Documentation",
    "keywords": "Property CurrentView Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurrentView The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. The meaning depends on the situation: If the initial view was a \"standard\" view, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly o the values for transform and viewTarget within currentView will be null If the initial view was a link into a 'view' element, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will correspond to the corresponding attributes for the given 'view' element o the values for transform and viewTarget within currentView will be null If the initial view was a link into another element (i.e., other than a 'view'), then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly for the closest ancestor 'svg' element o the values for transform within currentView will be null o the viewTarget within currentView will represent the target of the link If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: o the values for viewBox, preserveAspectRatio, zoomAndPan, transform and viewTarget within currentView will correspond to the values from the SVG view specification fragment identifier The object itself and its contents are both readonly. public ISvgViewSpec CurrentView { get; } Property Value ISvgViewSpec"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height public ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.PatternBounds.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.PatternBounds.html",
    "title": "Property PatternBounds | SharpVectors Documentation",
    "keywords": "Property PatternBounds Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PatternBounds public ISvgRect PatternBounds { get; set; } Property Value ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.PatternContentUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.PatternContentUnits.html",
    "title": "Property PatternContentUnits | SharpVectors Documentation",
    "keywords": "Property PatternContentUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PatternContentUnits public ISvgAnimatedEnumeration PatternContentUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.PatternTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.PatternTransform.html",
    "title": "Property PatternTransform | SharpVectors Documentation",
    "keywords": "Property PatternTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PatternTransform public ISvgAnimatedTransformList PatternTransform { get; } Property Value ISvgAnimatedTransformList"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.PatternUnits.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.PatternUnits.html",
    "title": "Property PatternUnits | SharpVectors Documentation",
    "keywords": "Property PatternUnits Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PatternUnits public ISvgAnimatedEnumeration PatternUnits { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreserveAspectRatio public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public SvgPatternElement ReferencedElement { get; } Property Value SvgPatternElement"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.ViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.ViewBox.html",
    "title": "Property ViewBox | SharpVectors Documentation",
    "keywords": "Property ViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewBox public ISvgAnimatedRect ViewBox { get; } Property Value ISvgAnimatedRect"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.ViewBoxTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.ViewBoxTransform.html",
    "title": "Property ViewBoxTransform | SharpVectors Documentation",
    "keywords": "Property ViewBoxTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewBoxTransform This function is super useful, calculates out the transformation matrix (i.e., scale and translate) of the viewport to user space. public ISvgMatrix ViewBoxTransform { get; } Property Value ISvgMatrix A Matrix which has the translate and scale portions set."
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width public ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgPatternElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPatternElement.html",
    "title": "Class SvgPatternElement | SharpVectors Documentation",
    "keywords": "Class SvgPatternElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPatternElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgPatternElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgFitToViewBox Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgPatternElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgPatternElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgFitToViewBox Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPatternElement(string, string, string, SvgDocument) Properties Children CurrentView The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. The meaning depends on the situation: If the initial view was a \"standard\" view, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly o the values for transform and viewTarget within currentView will be null If the initial view was a link into a 'view' element, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will correspond to the corresponding attributes for the given 'view' element o the values for transform and viewTarget within currentView will be null If the initial view was a link into another element (i.e., other than a 'view'), then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly for the closest ancestor 'svg' element o the values for transform within currentView will be null o the viewTarget within currentView will represent the target of the link If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: o the values for viewBox, preserveAspectRatio, zoomAndPan, transform and viewTarget within currentView will correspond to the values from the SVG view specification fragment identifier The object itself and its contents are both readonly. ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Height Href IsRenderable Gets a value indicating whether this SVG element is renderable. PatternBounds PatternContentUnits PatternTransform PatternUnits PreserveAspectRatio ReferencedElement RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage ViewBox ViewBoxTransform This function is super useful, calculates out the transformation matrix (i.e., scale and translate) of the viewport to user space. Width X Y Methods HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.-ctor.html",
    "title": "Constructor SvgPoint | SharpVectors Documentation",
    "keywords": "Constructor SvgPoint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPoint(double, double) public SvgPoint(double x, double y) Parameters x double y double"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.MatrixTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.MatrixTransform.html",
    "title": "Method MatrixTransform | SharpVectors Documentation",
    "keywords": "Method MatrixTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MatrixTransform(ISvgMatrix) public ISvgPoint MatrixTransform(ISvgMatrix matrix) Parameters matrix ISvgMatrix Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.html",
    "title": "Class SvgPoint | SharpVectors Documentation",
    "keywords": "Class SvgPoint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Many of the SVG DOM interfaces refer to objects of class SvgPoint. An SvgPoint is an (x,y) coordinate pair. When used in matrix operations, an SvgPoint is treated as a vector of the form: [x] [y] [1] public sealed class SvgPoint : ISvgPoint Inheritance object SvgPoint Implements ISvgPoint Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPoint(double, double) Properties X Y Methods MatrixTransform(ISvgMatrix) lerp(SvgPoint, double) Operators operator +(SvgPoint, SvgPoint) operator /(SvgPoint, double) operator /(double, SvgPoint) operator *(SvgPoint, double) operator *(double, SvgPoint) operator -(SvgPoint, SvgPoint)"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.lerp.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.lerp.html",
    "title": "Method lerp | SharpVectors Documentation",
    "keywords": "Method lerp Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll lerp(SvgPoint, double) public SvgPoint lerp(SvgPoint that, double percent) Parameters that SvgPoint percent double Returns SvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.op_Addition.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.op_Addition.html",
    "title": "Operator operator + | SharpVectors Documentation",
    "keywords": "Operator operator + Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll operator +(SvgPoint, SvgPoint) public static SvgPoint operator +(SvgPoint a, SvgPoint b) Parameters a SvgPoint b SvgPoint Returns SvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.op_Division.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.op_Division.html",
    "title": "Operator operator / | SharpVectors Documentation",
    "keywords": "Operator operator / Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll operator /(SvgPoint, double) public static SvgPoint operator /(SvgPoint a, double scalar) Parameters a SvgPoint scalar double Returns SvgPoint operator /(double, SvgPoint) public static SvgPoint operator /(double scalar, SvgPoint a) Parameters scalar double a SvgPoint Returns SvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.op_Multiply.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.op_Multiply.html",
    "title": "Operator operator * | SharpVectors Documentation",
    "keywords": "Operator operator * Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll operator *(SvgPoint, double) public static SvgPoint operator *(SvgPoint a, double scalar) Parameters a SvgPoint scalar double Returns SvgPoint operator *(double, SvgPoint) public static SvgPoint operator *(double scalar, SvgPoint a) Parameters scalar double a SvgPoint Returns SvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgPoint.op_Subtraction.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPoint.op_Subtraction.html",
    "title": "Operator operator - | SharpVectors Documentation",
    "keywords": "Operator operator - Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll operator -(SvgPoint, SvgPoint) public static SvgPoint operator -(SvgPoint a, SvgPoint b) Parameters a SvgPoint b SvgPoint Returns SvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.-ctor.html",
    "title": "Constructor SvgPointF | SharpVectors Documentation",
    "keywords": "Constructor SvgPointF Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SvgPointF(float, float) Initializes a new instance of the SvgPointF structure with the specified coordinates. public SvgPointF(float x, float y) Parameters x float The x-coordinate of the point. y float The y-coordinate of the point. SvgPointF(double, double) Initializes a new instance of the SvgPointF structure with the specified coordinates. public SvgPointF(double x, double y) Parameters x double The x-coordinate of the point. y double The y-coordinate of the point."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.Add.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.Add.html",
    "title": "Method Add | SharpVectors Documentation",
    "keywords": "Method Add Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Add(SvgPointF, SvgSizeF) This translates a given SvgPointF by a specified SvgSizeF. public static SvgPointF Add(SvgPointF pt, SvgSizeF sz) Parameters pt SvgPointF The SvgPointF to translate. sz SvgSizeF The SvgSizeF that specifies the numbers to add to the coordinates of pt. Returns SvgPointF The translated SvgPointF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.Distance.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.Distance.html",
    "title": "Method Distance | SharpVectors Documentation",
    "keywords": "Method Distance Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Distance(SvgPointF) This computes the distance between this SvgPointF and the specified SvgPointF. public double Distance(SvgPointF point) Parameters point SvgPointF A SvgPointF object specifying the other point from which to determine the distance. Returns double The distance between this point and the specified point."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.Empty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.Empty.html",
    "title": "Field Empty | SharpVectors Documentation",
    "keywords": "Field Empty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Represents a new instance of the SvgPointF structure with member data left uninitialized. public static readonly SvgPointF Empty Returns SvgPointF"
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.Equals.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.Equals.html",
    "title": "Method Equals | SharpVectors Documentation",
    "keywords": "Method Equals Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Equals(object) This determines whether this SvgPointF contains the same coordinates as the specified object. public override bool Equals(object obj) Parameters obj object The object to test. Returns bool This method returns true if the specified object is a SvgPointF and has the same coordinates as this SvgPointF; otherwise, false. Equals(SvgPointF) This determines whether this SvgPointF contains the same coordinates as the specified SvgPointF. public bool Equals(SvgPointF other) Parameters other SvgPointF The SvgPointF to test. Returns bool This method returns true if the specified SvgPointF has the same coordinates as this SvgPointF; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.GetHashCode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.GetHashCode.html",
    "title": "Method GetHashCode | SharpVectors Documentation",
    "keywords": "Method GetHashCode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetHashCode() This returns a hash code for this SvgPointF structure. public override int GetHashCode() Returns int An integer value that specifies a hash value for this SvgPointF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.IsEmpty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.IsEmpty.html",
    "title": "Property IsEmpty | SharpVectors Documentation",
    "keywords": "Property IsEmpty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsEmpty Gets a value indicating whether this SvgPointF is empty. public bool IsEmpty { get; } Property Value bool This is true if both X and Y are 0; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.Subtract.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.Subtract.html",
    "title": "Method Subtract | SharpVectors Documentation",
    "keywords": "Method Subtract Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Subtract(SvgPointF, SvgSizeF) This translates a SvgPointF by the negative of a specified size. public static SvgPointF Subtract(SvgPointF pt, SvgSizeF sz) Parameters pt SvgPointF The SvgPointF to translate. sz SvgSizeF The SvgSizeF that specifies the numbers to subtract from the coordinates of pt. Returns SvgPointF The translated SvgPointF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.ToString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.ToString.html",
    "title": "Method ToString | SharpVectors Documentation",
    "keywords": "Method ToString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ToString() This converts this SvgPointF to a human readable string. public override string ToString() Returns string A string that represents this SvgPointF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.ValueX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.ValueX.html",
    "title": "Property ValueX | SharpVectors Documentation",
    "keywords": "Property ValueX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ValueX Gets or sets the x-coordinate of this SvgPointF. public double ValueX { get; set; } Property Value double The x-coordinate of this SvgPointF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.ValueY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.ValueY.html",
    "title": "Property ValueY | SharpVectors Documentation",
    "keywords": "Property ValueY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ValueY Gets or sets the y-coordinate of this SvgPointF. public double ValueY { get; set; } Property Value double The y-coordinate of this SvgPointF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X Gets the x-coordinate of this SvgPointF. public float X { get; } Property Value float The x-coordinate of this SvgPointF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y Gets the y-coordinate of this SvgPointF. public float Y { get; } Property Value float The y-coordinate of this SvgPointF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.html",
    "title": "Struct SvgPointF | SharpVectors Documentation",
    "keywords": "Struct SvgPointF Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This represents an ordered pair of float precision x- and y-coordinates that defines a point in a two-dimensional plane. [Serializable] public struct SvgPointF : IEquatable<SvgPointF> Implements IEquatable<SvgPointF> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SvgPointF(double, double) Initializes a new instance of the SvgPointF structure with the specified coordinates. SvgPointF(float, float) Initializes a new instance of the SvgPointF structure with the specified coordinates. Fields Empty Represents a new instance of the SvgPointF structure with member data left uninitialized. Properties IsEmpty Gets a value indicating whether this SvgPointF is empty. ValueX Gets or sets the x-coordinate of this SvgPointF. ValueY Gets or sets the y-coordinate of this SvgPointF. X Gets the x-coordinate of this SvgPointF. Y Gets the y-coordinate of this SvgPointF. Methods Add(SvgPointF, SvgSizeF) This translates a given SvgPointF by a specified SvgSizeF. Distance(SvgPointF) This computes the distance between this SvgPointF and the specified SvgPointF. Equals(SvgPointF) This determines whether this SvgPointF contains the same coordinates as the specified SvgPointF. Equals(object) This determines whether this SvgPointF contains the same coordinates as the specified object. GetHashCode() This returns a hash code for this SvgPointF structure. Subtract(SvgPointF, SvgSizeF) This translates a SvgPointF by the negative of a specified size. ToString() This converts this SvgPointF to a human readable string. Operators operator +(SvgPointF, SvgSizeF) This translates the SvgPointF by the specified SvgSizeF. operator ==(SvgPointF, SvgPointF) This compares two SvgPointF structures. The result specifies whether the values of the X and Y properties of the two SvgPointF structures are equal. operator !=(SvgPointF, SvgPointF) This determines whether the coordinates of the specified points are not equal. operator -(SvgPointF, SvgSizeF) This translates a SvgPointF by the negative of a specified SvgSizeF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.op_Addition.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.op_Addition.html",
    "title": "Operator operator + | SharpVectors Documentation",
    "keywords": "Operator operator + Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator +(SvgPointF, SvgSizeF) This translates the SvgPointF by the specified SvgSizeF. public static SvgPointF operator +(SvgPointF pt, SvgSizeF sz) Parameters pt SvgPointF The SvgPointF to translate. sz SvgSizeF The SvgSizeF that specifies the numbers to add to the x- and y-coordinates of the SvgPointF. Returns SvgPointF The translated SvgPointF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.op_Equality.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.op_Equality.html",
    "title": "Operator operator == | SharpVectors Documentation",
    "keywords": "Operator operator == Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator ==(SvgPointF, SvgPointF) This compares two SvgPointF structures. The result specifies whether the values of the X and Y properties of the two SvgPointF structures are equal. public static bool operator ==(SvgPointF left, SvgPointF right) Parameters left SvgPointF A SvgPointF to compare. right SvgPointF A SvgPointF to compare. Returns bool This is true if the X and Y values of the left and right SvgPointF structures are equal; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.op_Inequality.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.op_Inequality.html",
    "title": "Operator operator != | SharpVectors Documentation",
    "keywords": "Operator operator != Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator !=(SvgPointF, SvgPointF) This determines whether the coordinates of the specified points are not equal. public static bool operator !=(SvgPointF left, SvgPointF right) Parameters left SvgPointF A SvgPointF to compare. right SvgPointF A SvgPointF to compare. Returns bool This true to indicate the X and Y values of left and right are not equal; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgPointF.op_Subtraction.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointF.op_Subtraction.html",
    "title": "Operator operator - | SharpVectors Documentation",
    "keywords": "Operator operator - Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator -(SvgPointF, SvgSizeF) This translates a SvgPointF by the negative of a specified SvgSizeF. public static SvgPointF operator -(SvgPointF pt, SvgSizeF sz) Parameters pt SvgPointF The SvgPointF to translate. sz SvgSizeF The SvgSizeF that specifies the numbers to subtract from the coordinates of pt. Returns SvgPointF The translated SvgPointF."
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.-ctor.html",
    "title": "Constructor SvgPointList | SharpVectors Documentation",
    "keywords": "Constructor SvgPointList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPointList() public SvgPointList() SvgPointList(string, bool) public SvgPointList(string listString, bool clearOnError = false) Parameters listString string clearOnError bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.FromString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.FromString.html",
    "title": "Method FromString | SharpVectors Documentation",
    "keywords": "Method FromString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FromString(string, bool) public void FromString(string listString, bool clearOnError = false) Parameters listString string clearOnError bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.-ctor.html",
    "title": "Constructor SvgPointListHandler | SharpVectors Documentation",
    "keywords": "Constructor SvgPointListHandler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPointListHandler(SvgPointList) public SvgPointListHandler(SvgPointList pointList) Parameters pointList SvgPointList"
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.EndPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.EndPoints.html",
    "title": "Method EndPoints | SharpVectors Documentation",
    "keywords": "Method EndPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll EndPoints() Invoked when the points attribute ends. public void EndPoints() Exceptions FormatException if an error occured while processing the points"
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.Point.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.Point.html",
    "title": "Method Point | SharpVectors Documentation",
    "keywords": "Method Point Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Point(float, float) Invoked when a point has been parsed. public void Point(float x, float y) Parameters x float the x coordinate of the point y float the y coordinate of the point Exceptions FormatException if an error occured while processing the points"
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.StartPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.StartPoints.html",
    "title": "Method StartPoints | SharpVectors Documentation",
    "keywords": "Method StartPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartPoints() Invoked when the points attribute starts. public void StartPoints() Exceptions FormatException if an error occured while processing the points"
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.SvgPointListHandler.html",
    "title": "Class SvgPointList.SvgPointListHandler | SharpVectors Documentation",
    "keywords": "Class SvgPointList.SvgPointListHandler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public class SvgPointList.SvgPointListHandler : ISvgPointsHandler Inheritance object SvgPointList.SvgPointListHandler Implements ISvgPointsHandler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPointListHandler(SvgPointList) Methods EndPoints() Invoked when the points attribute ends. Point(float, float) Invoked when a point has been parsed. StartPoints() Invoked when the points attribute starts."
  },
  "api/SharpVectors.Dom.Svg.SvgPointList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointList.html",
    "title": "Class SvgPointList | SharpVectors Documentation",
    "keywords": "Class SvgPointList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This class defines a list of SvgPoint objects. public sealed class SvgPointList : SvgList<ISvgPoint>, IEnumerable<ISvgPoint>, IEnumerable, ISvgPointList Inheritance object SvgList<ISvgPoint> SvgPointList Implements IEnumerable<ISvgPoint> IEnumerable ISvgPointList Inherited Members SvgList<ISvgPoint>.Count SvgList<ISvgPoint>.this[int] SvgList<ISvgPoint>.NumberOfItems SvgList<ISvgPoint>.Clear() SvgList<ISvgPoint>.Initialize(ISvgPoint) SvgList<ISvgPoint>.GetItem(uint) SvgList<ISvgPoint>.InsertItemBefore(ISvgPoint, uint) SvgList<ISvgPoint>.ReplaceItem(ISvgPoint, uint) SvgList<ISvgPoint>.RemoveItem(uint) SvgList<ISvgPoint>.AppendItem(ISvgPoint) SvgList<ISvgPoint>.GetEnumerator() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPointList() SvgPointList(string, bool) Methods FromString(string, bool)"
  },
  "api/SharpVectors.Dom.Svg.SvgPointsParser.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointsParser.-ctor.html",
    "title": "Constructor SvgPointsParser | SharpVectors Documentation",
    "keywords": "Constructor SvgPointsParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPointsParser(ISvgPointsHandler) Creates a new PointsParser. public SvgPointsParser(ISvgPointsHandler handler) Parameters handler ISvgPointsHandler"
  },
  "api/SharpVectors.Dom.Svg.SvgPointsParser.DoParse.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointsParser.DoParse.html",
    "title": "Method DoParse | SharpVectors Documentation",
    "keywords": "Method DoParse Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll DoParse() Parses the current stream. protected override void DoParse()"
  },
  "api/SharpVectors.Dom.Svg.SvgPointsParser.Handler.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointsParser.Handler.html",
    "title": "Property Handler | SharpVectors Documentation",
    "keywords": "Property Handler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Handler Gets or sets an application ISvgPointsHandler implementation to register a points handler. public virtual ISvgPointsHandler Handler { get; set; } Property Value ISvgPointsHandler The transform list handler. Remarks If the application does not register a handler, all events reported by the parser will be silently ignored. Applications may register a new or different handler in the middle of a parse, and the parser must begin using the new handler immediately."
  },
  "api/SharpVectors.Dom.Svg.SvgPointsParser._isERead.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointsParser._isERead.html",
    "title": "Field _isERead | SharpVectors Documentation",
    "keywords": "Field _isERead Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Whether the last character was a 'e' or 'E'. protected bool _isERead Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPointsParser._pointsHandler.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointsParser._pointsHandler.html",
    "title": "Field _pointsHandler | SharpVectors Documentation",
    "keywords": "Field _pointsHandler Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The points handler used to report parse events. protected ISvgPointsHandler _pointsHandler Returns ISvgPointsHandler"
  },
  "api/SharpVectors.Dom.Svg.SvgPointsParser.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPointsParser.html",
    "title": "Class SvgPointsParser | SharpVectors Documentation",
    "keywords": "Class SvgPointsParser Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This class implements an event-based parser for the SVG points attribute values (used with polyline and polygon elements). public class SvgPointsParser : SvgNumberParser Inheritance object SvgParser SvgNumberParser SvgPointsParser Inherited Members SvgNumberParser.ParseFloat() SvgNumberParser.BuildFloat(int, int) SvgParser._reader SvgParser._current SvgParser.Current SvgParser.FormatMessage(string, object[]) SvgParser.Parse(string) SvgParser.ReportError(string, object[]) SvgParser.ReportCharacterExpectedError(char, int) SvgParser.ReportUnexpectedCharacterError(int) SvgParser.CreateErrorMessage(string, object[]) SvgParser.SkipSpaces() SvgParser.SkipCommaSpaces() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPointsParser(ISvgPointsHandler) Creates a new PointsParser. Fields _isERead Whether the last character was a 'e' or 'E'. _pointsHandler The points handler used to report parse events. Properties Handler Gets or sets an application ISvgPointsHandler implementation to register a points handler. Methods DoParse() Parses the current stream."
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.-ctor.html",
    "title": "Constructor SvgPolyElement | SharpVectors Documentation",
    "keywords": "Constructor SvgPolyElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPolyElement(string, string, string, SvgDocument) protected SvgPolyElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.AnimatedPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.AnimatedPoints.html",
    "title": "Property AnimatedPoints | SharpVectors Documentation",
    "keywords": "Property AnimatedPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimatedPoints public ISvgPointList AnimatedPoints { get; } Property Value ISvgPointList"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.GetEndAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.GetEndAngle.html",
    "title": "Method GetEndAngle | SharpVectors Documentation",
    "keywords": "Method GetEndAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetEndAngle(int) Get the angle of the path segment leaving the specified vertex in degrees. public double GetEndAngle(int index) Parameters index int Specifies the vertex from which the path segment is leaving. Returns double The angle of the path segment leaving the specified vertex."
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.GetMarker.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.GetMarker.html",
    "title": "Method GetMarker | SharpVectors Documentation",
    "keywords": "Method GetMarker Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetMarker(int) public ISvgMarker GetMarker(int index) Parameters index int Returns ISvgMarker"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.GetStartAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.GetStartAngle.html",
    "title": "Method GetStartAngle | SharpVectors Documentation",
    "keywords": "Method GetStartAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetStartAngle(int) Get the angle of the path segment entering the specified vertex. public double GetStartAngle(int index) Parameters index int Specifies the vertex to which the path segment is entering. Returns double The angle of the path segment entering the specified vertex in degrees."
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.Invalidate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.Invalidate.html",
    "title": "Method Invalidate | SharpVectors Documentation",
    "keywords": "Method Invalidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Invalidate() public void Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.IsClosed.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.IsClosed.html",
    "title": "Property IsClosed | SharpVectors Documentation",
    "keywords": "Property IsClosed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsClosed public virtual bool IsClosed { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.MarkerPositions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.MarkerPositions.html",
    "title": "Property MarkerPositions | SharpVectors Documentation",
    "keywords": "Property MarkerPositions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MarkerPositions An array specifying the position of each vertex in the Svg element's shape. public virtual SvgPointF[] MarkerPositions { get; } Property Value SvgPointF[]"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.MayHaveCurves.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.MayHaveCurves.html",
    "title": "Property MayHaveCurves | SharpVectors Documentation",
    "keywords": "Property MayHaveCurves Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MayHaveCurves public bool MayHaveCurves { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.Points.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.Points.html",
    "title": "Property Points | SharpVectors Documentation",
    "keywords": "Property Points Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Points public ISvgPointList Points { get; } Property Value ISvgPointList"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgPolyElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolyElement.html",
    "title": "Class SvgPolyElement | SharpVectors Documentation",
    "keywords": "Class SvgPolyElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgPolyElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable, ISvgTransformable, ISvgLocatable, ISharpMarkerHost Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgPolyElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable ISvgTransformable ISvgLocatable ISharpMarkerHost Derived SvgPolygonElement SvgPolylineElement Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgPolyElement(string, string, string, SvgDocument) Properties AnimatedPoints ExternalResourcesRequired IsClosed MarkerPositions An array specifying the position of each vertex in the Svg element's shape. MayHaveCurves Points RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage Methods GetEndAngle(int) Get the angle of the path segment leaving the specified vertex in degrees. GetMarker(int) GetStartAngle(int) Get the angle of the path segment entering the specified vertex. HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgPolygonElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolygonElement.-ctor.html",
    "title": "Constructor SvgPolygonElement | SharpVectors Documentation",
    "keywords": "Constructor SvgPolygonElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPolygonElement(string, string, string, SvgDocument) public SvgPolygonElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgPolygonElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolygonElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgPolygonElement.MarkerPositions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolygonElement.MarkerPositions.html",
    "title": "Property MarkerPositions | SharpVectors Documentation",
    "keywords": "Property MarkerPositions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MarkerPositions An array specifying the position of each vertex in the Svg element's shape. public override SvgPointF[] MarkerPositions { get; } Property Value SvgPointF[]"
  },
  "api/SharpVectors.Dom.Svg.SvgPolygonElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolygonElement.html",
    "title": "Class SvgPolygonElement | SharpVectors Documentation",
    "keywords": "Class SvgPolygonElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPolygonElement : SvgPolyElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISharpMarkerHost, ISvgPolygonElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPoints, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgPolyElement SvgPolygonElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISharpMarkerHost ISvgPolygonElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable ISvgAnimatedPoints IEventTarget ISvgElementVisitorTarget Inherited Members SvgPolyElement.AnimatedPoints SvgPolyElement.Points SvgPolyElement.Invalidate() SvgPolyElement.HandleAttributeChange(XmlAttribute) SvgPolyElement.RenderingHint SvgPolyElement.ExternalResourcesRequired SvgPolyElement.GetStartAngle(int) SvgPolyElement.GetEndAngle(int) SvgPolyElement.GetMarker(int) SvgPolyElement.IsClosed SvgPolyElement.MayHaveCurves SvgPolyElement.RequiredFeatures SvgPolyElement.RequiredExtensions SvgPolyElement.SystemLanguage SvgPolyElement.HasExtension(string) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPolygonElement(string, string, string, SvgDocument) Properties MarkerPositions An array specifying the position of each vertex in the Svg element's shape. Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object."
  },
  "api/SharpVectors.Dom.Svg.SvgPolylineElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolylineElement.-ctor.html",
    "title": "Constructor SvgPolylineElement | SharpVectors Documentation",
    "keywords": "Constructor SvgPolylineElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPolylineElement(string, string, string, SvgDocument) public SvgPolylineElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgPolylineElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolylineElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgPolylineElement.IsClosed.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolylineElement.IsClosed.html",
    "title": "Property IsClosed | SharpVectors Documentation",
    "keywords": "Property IsClosed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsClosed public override bool IsClosed { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgPolylineElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPolylineElement.html",
    "title": "Class SvgPolylineElement | SharpVectors Documentation",
    "keywords": "Class SvgPolylineElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPolylineElement : SvgPolyElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISharpMarkerHost, ISvgPolylineElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, ISvgAnimatedPoints, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgPolyElement SvgPolylineElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISharpMarkerHost ISvgPolylineElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable ISvgAnimatedPoints IEventTarget ISvgElementVisitorTarget Inherited Members SvgPolyElement.AnimatedPoints SvgPolyElement.Points SvgPolyElement.Invalidate() SvgPolyElement.HandleAttributeChange(XmlAttribute) SvgPolyElement.RenderingHint SvgPolyElement.ExternalResourcesRequired SvgPolyElement.MarkerPositions SvgPolyElement.GetStartAngle(int) SvgPolyElement.GetEndAngle(int) SvgPolyElement.GetMarker(int) SvgPolyElement.MayHaveCurves SvgPolyElement.RequiredFeatures SvgPolyElement.RequiredExtensions SvgPolyElement.SystemLanguage SvgPolyElement.HasExtension(string) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPolylineElement(string, string, string, SvgDocument) Properties IsClosed Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object."
  },
  "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.-ctor.html",
    "title": "Constructor SvgPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Constructor SvgPreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgPreserveAspectRatio(string, SvgElement) public SvgPreserveAspectRatio(string attr, SvgElement ownerElement) Parameters attr string ownerElement SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.Align.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.Align.html",
    "title": "Property Align | SharpVectors Documentation",
    "keywords": "Property Align Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Align The type of the alignment value as specified by one of the constants specified above. public SvgPreserveAspectRatioType Align { get; set; } Property Value SvgPreserveAspectRatioType"
  },
  "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.FitToViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.FitToViewBox.html",
    "title": "Method FitToViewBox | SharpVectors Documentation",
    "keywords": "Method FitToViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FitToViewBox(SvgRect, SvgRect) public double[] FitToViewBox(SvgRect viewBox, SvgRect rectToFit) Parameters viewBox SvgRect rectToFit SvgRect Returns double[]"
  },
  "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.IsDefaultAlign.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.IsDefaultAlign.html",
    "title": "Property IsDefaultAlign | SharpVectors Documentation",
    "keywords": "Property IsDefaultAlign Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsDefaultAlign Gets a value indicating if this a default aspect ratio or it is defined by the target element. public bool IsDefaultAlign { get; } Property Value bool This is true if it is the default aspect ratio; otherwise it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.MeetOrSlice.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.MeetOrSlice.html",
    "title": "Property MeetOrSlice | SharpVectors Documentation",
    "keywords": "Property MeetOrSlice Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll MeetOrSlice The type of the meet-or-slice value as specified by one of the constants specified above. public SvgMeetOrSlice MeetOrSlice { get; set; } Property Value SvgMeetOrSlice"
  },
  "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatio.html",
    "title": "Class SvgPreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Class SvgPreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgPreserveAspectRatio : ISvgPreserveAspectRatio Inheritance object SvgPreserveAspectRatio Implements ISvgPreserveAspectRatio Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgPreserveAspectRatio(string, SvgElement) Properties Align The type of the alignment value as specified by one of the constants specified above. IsDefaultAlign Gets a value indicating if this a default aspect ratio or it is defined by the target element. MeetOrSlice The type of the meet-or-slice value as specified by one of the constants specified above. Methods FitToViewBox(SvgRect, SvgRect)"
  },
  "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatioType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgPreserveAspectRatioType.html",
    "title": "Enum SvgPreserveAspectRatioType | SharpVectors Documentation",
    "keywords": "Enum SvgPreserveAspectRatioType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgPreserveAspectRatioType Fields Unknown = 0 None = 1 XMinYMin = 2 XMidYMin = 3 XMaxYMin = 4 XMinYMid = 5 XMidYMid = 6 XMaxYMid = 7 XMinYMax = 8 XMidYMax = 9 XMaxYMax = 10"
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.-ctor.html",
    "title": "Constructor SvgRadialGradientElement | SharpVectors Documentation",
    "keywords": "Constructor SvgRadialGradientElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgRadialGradientElement(string, string, string, SvgDocument) public SvgRadialGradientElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.Cx.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.Cx.html",
    "title": "Property Cx | SharpVectors Documentation",
    "keywords": "Property Cx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Cx public ISvgAnimatedLength Cx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.Cy.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.Cy.html",
    "title": "Property Cy | SharpVectors Documentation",
    "keywords": "Property Cy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Cy public ISvgAnimatedLength Cy { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.Fx.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.Fx.html",
    "title": "Property Fx | SharpVectors Documentation",
    "keywords": "Property Fx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Fx public ISvgAnimatedLength Fx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.Fy.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.Fy.html",
    "title": "Property Fy | SharpVectors Documentation",
    "keywords": "Property Fy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Fy public ISvgAnimatedLength Fy { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.R.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.R.html",
    "title": "Property R | SharpVectors Documentation",
    "keywords": "Property R Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll R public ISvgAnimatedLength R { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public SvgRadialGradientElement ReferencedElement { get; } Property Value SvgRadialGradientElement"
  },
  "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRadialGradientElement.html",
    "title": "Class SvgRadialGradientElement | SharpVectors Documentation",
    "keywords": "Class SvgRadialGradientElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The implementation of the radialGradient element or the ISvgRadialGradientElement interface. public sealed class SvgRadialGradientElement : SvgGradientElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgRadialGradientElement, ISvgGradientElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgGradientElement SvgRadialGradientElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgRadialGradientElement ISvgGradientElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgGradientElement.GradientUnits SvgGradientElement.GradientTransform SvgGradientElement.SpreadMethod SvgGradientElement.Href SvgGradientElement.ExternalResourcesRequired SvgGradientElement.Stops SvgGradientElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks Radial Gradient fx/fy values should only be inherited from a referenced element if that element is explicitly defining them, otherwise they should follow the cy special case behavior. Additionally, because xlink references can inherit to an arbitrary level, we should walk up the tree looking for explicitly defined fx/fy values to inherit before falling back to the cx/cy definitions. Constructors SvgRadialGradientElement(string, string, string, SvgDocument) Properties Cx Cy Fx Fy IsRenderable Gets a value indicating whether this SVG element is renderable. R ReferencedElement"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.-ctor.html",
    "title": "Constructor SvgRect | SharpVectors Documentation",
    "keywords": "Constructor SvgRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgRect(double, double, double, double) public SvgRect(double x, double y, double width, double height) Parameters x double y double width double height double SvgRect(string) public SvgRect(string str) Parameters str string"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Contains.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Contains.html",
    "title": "Method Contains | SharpVectors Documentation",
    "keywords": "Method Contains Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Contains(double, double) This determines if the specified point is contained within this SvgRect structure. public bool Contains(double x, double y) Parameters x double The x-coordinate of the point to test. y double The y-coordinate of the point to test. Returns bool This method returns true if the point defined by x and y is contained within this SvgRect structure; otherwise false. Contains(SvgPoint) This determines if the specified point is contained within this SvgRect structure. public bool Contains(SvgPoint pt) Parameters pt SvgPoint The SvgPoint to test. Returns bool This method returns true if the point represented by the pt parameter is contained within this SvgRect structure; otherwise false. Contains(SvgRect) This determines if the rectangular region represented by rect is entirely contained within this SvgRect structure. public bool Contains(SvgRect rect) Parameters rect SvgRect The SvgRect to test. Returns bool This method returns true if the rectangular region represented by rect is entirely contained within the rectangular region represented by this SvgRect; otherwise false."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Empty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Empty.html",
    "title": "Field Empty | SharpVectors Documentation",
    "keywords": "Field Empty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public static readonly SvgRect Empty Returns SvgRect"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Equals.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Equals.html",
    "title": "Method Equals | SharpVectors Documentation",
    "keywords": "Method Equals Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Equals(object) This tests whether an object is a SvgRect with the same location and size of this SvgRect. public override bool Equals(object obj) Parameters obj object The object to test. Returns bool This returns true if the specified object is a SvgRect and its X, Y, Width, and Height properties are equal to the corresponding properties of this SvgRect; otherwise, false. Equals(SvgRect) This tests whether the specified SvgRect is with the same location and size of this SvgRect. public bool Equals(SvgRect other) Parameters other SvgRect The SvgRect to test. Returns bool This returns true if specified SvgRect has its X, Y, Width, and Height properties are equal to the corresponding properties of this SvgRect; otherwise, false. Equals(ISvgRect) This tests whether the specified SvgRect is with the same location and size of this SvgRect. public bool Equals(ISvgRect other) Parameters other ISvgRect The SvgRect to test. Returns bool This returns true if specified SvgRect has its X, Y, Width, and Height properties are equal to the corresponding properties of this SvgRect; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.GetHashCode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.GetHashCode.html",
    "title": "Method GetHashCode | SharpVectors Documentation",
    "keywords": "Method GetHashCode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetHashCode() Gets the hash code for this SvgRect structure. For information about the use of hash codes, see Object.GetHashCode. public override int GetHashCode() Returns int The hash code for this SvgRect."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height public double Height { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Inflate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Inflate.html",
    "title": "Method Inflate | SharpVectors Documentation",
    "keywords": "Method Inflate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Inflate(double, double) Inflates this SvgRect structure by the specified amount. public void Inflate(double x, double y) Parameters x double The amount to inflate this SvgRect structure horizontally. y double The amount to inflate this SvgRect structure vertically. Inflate(SvgRect, float, float) Creates and returns an inflated copy of the specified SvgRect structure. The copy is inflated by the specified amount. The original rectangle remains unmodified. public static SvgRect Inflate(SvgRect rect, float x, float y) Parameters rect SvgRect The SvgRect to be copied. This rectangle is not modified. x float The amount to inflate the copy of the rectangle horizontally. y float The amount to inflate the copy of the rectangle vertically. Returns SvgRect The inflated SvgRect."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Intersect.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Intersect.html",
    "title": "Method Intersect | SharpVectors Documentation",
    "keywords": "Method Intersect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Intersect(SvgRect) public void Intersect(SvgRect rect) Parameters rect SvgRect"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Intersection.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Intersection.html",
    "title": "Method Intersection | SharpVectors Documentation",
    "keywords": "Method Intersection Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Intersection(SvgRect) This replaces this SvgRect structure with the intersection of itself and the specified SvgRect structure. public void Intersection(SvgRect rect) Parameters rect SvgRect The rectangle to intersect. Intersection(SvgRect, SvgRect) Returns a SvgRect structure that represents the intersection of two rectangles. If there is no intersection, and empty SvgRect is returned. public static SvgRect Intersection(SvgRect a, SvgRect b) Parameters a SvgRect A rectangle to intersect. b SvgRect A rectangle to intersect. Returns SvgRect A third SvgRect structure the size of which represents the overlapped area of the two specified rectangles."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Intersects.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Intersects.html",
    "title": "Method Intersects | SharpVectors Documentation",
    "keywords": "Method Intersects Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Intersects(SvgRect) This determines if this rectangle intersects with rect. public bool Intersects(SvgRect rect) Parameters rect SvgRect The rectangle to test. Returns bool This method returns true if there is any intersection; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.IsEmpty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.IsEmpty.html",
    "title": "Property IsEmpty | SharpVectors Documentation",
    "keywords": "Property IsEmpty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsEmpty public bool IsEmpty { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Offset.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Offset.html",
    "title": "Method Offset | SharpVectors Documentation",
    "keywords": "Method Offset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Offset(double, double) Adjusts the location of this rectangle by the specified amount. public void Offset(double x, double y) Parameters x double The amount to offset the location horizontally. y double The amount to offset the location vertically."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.ToString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.ToString.html",
    "title": "Method ToString | SharpVectors Documentation",
    "keywords": "Method ToString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Union.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Union.html",
    "title": "Method Union | SharpVectors Documentation",
    "keywords": "Method Union Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Union(SvgRect, SvgRect) Creates the smallest possible third rectangle that can contain both of two rectangles that form a union. public static SvgRect Union(SvgRect a, SvgRect b) Parameters a SvgRect A rectangle to union. b SvgRect A rectangle to union. Returns SvgRect A third SvgRect structure that contains both of the two rectangles that form the union."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width public double Width { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public double X { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public double Y { get; set; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgRect.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.html",
    "title": "Class SvgRect | SharpVectors Documentation",
    "keywords": "Class SvgRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative. public sealed class SvgRect : ISvgRect, IEquatable<ISvgRect>, IEquatable<SvgRect> Inheritance object SvgRect Implements ISvgRect IEquatable<ISvgRect> IEquatable<SvgRect> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SvgRect(double, double, double, double) SvgRect(string) Fields Empty Properties Height IsEmpty Width X Y Methods Contains(SvgPoint) This determines if the specified point is contained within this SvgRect structure. Contains(SvgRect) This determines if the rectangular region represented by rect is entirely contained within this SvgRect structure. Contains(double, double) This determines if the specified point is contained within this SvgRect structure. Equals(ISvgRect) This tests whether the specified SvgRect is with the same location and size of this SvgRect. Equals(SvgRect) This tests whether the specified SvgRect is with the same location and size of this SvgRect. Equals(object) This tests whether an object is a SvgRect with the same location and size of this SvgRect. GetHashCode() Gets the hash code for this SvgRect structure. For information about the use of hash codes, see Object.GetHashCode. Inflate(SvgRect, float, float) Creates and returns an inflated copy of the specified SvgRect structure. The copy is inflated by the specified amount. The original rectangle remains unmodified. Inflate(double, double) Inflates this SvgRect structure by the specified amount. Intersect(SvgRect) Intersection(SvgRect) This replaces this SvgRect structure with the intersection of itself and the specified SvgRect structure. Intersection(SvgRect, SvgRect) Returns a SvgRect structure that represents the intersection of two rectangles. If there is no intersection, and empty SvgRect is returned. Intersects(SvgRect) This determines if this rectangle intersects with rect. Offset(double, double) Adjusts the location of this rectangle by the specified amount. ToString() Returns a string that represents the current object. Union(SvgRect, SvgRect) Creates the smallest possible third rectangle that can contain both of two rectangles that form a union. Operators operator ==(SvgRect, SvgRect) This tests whether two SvgRect structures have equal location and size. operator !=(SvgRect, SvgRect) This tests whether two SvgRect structures differ in location or size."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.op_Equality.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.op_Equality.html",
    "title": "Operator operator == | SharpVectors Documentation",
    "keywords": "Operator operator == Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll operator ==(SvgRect, SvgRect) This tests whether two SvgRect structures have equal location and size. public static bool operator ==(SvgRect left, SvgRect right) Parameters left SvgRect The SvgRect structure that is to the left of the equality operator. right SvgRect The SvgRect structure that is to the right of the equality operator. Returns bool This operator returns true if the two specified SvgRect structures have equal X, Y, Width, and Height properties."
  },
  "api/SharpVectors.Dom.Svg.SvgRect.op_Inequality.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRect.op_Inequality.html",
    "title": "Operator operator != | SharpVectors Documentation",
    "keywords": "Operator operator != Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll operator !=(SvgRect, SvgRect) This tests whether two SvgRect structures differ in location or size. public static bool operator !=(SvgRect left, SvgRect right) Parameters left SvgRect The SvgRect structure that is to the left of the inequality operator. right SvgRect The SvgRect structure that is to the right of the inequality operator. Returns bool This operator returns true if any of the X, Y, Width, or Height properties of the two SvgRect structures are unequal; otherwise false."
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.-ctor.html",
    "title": "Constructor SvgRectElement | SharpVectors Documentation",
    "keywords": "Constructor SvgRectElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgRectElement(string, string, string, SvgDocument) public SvgRectElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height Corresponds to attribute height on the given 'rect' element. public ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.Invalidate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.Invalidate.html",
    "title": "Method Invalidate | SharpVectors Documentation",
    "keywords": "Method Invalidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Invalidate() public void Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Shape"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.Rx.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.Rx.html",
    "title": "Property Rx | SharpVectors Documentation",
    "keywords": "Property Rx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Rx Corresponds to attribute rx on the given 'rect' element. public ISvgAnimatedLength Rx { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.Ry.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.Ry.html",
    "title": "Property Ry | SharpVectors Documentation",
    "keywords": "Property Ry Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Ry Corresponds to attribute ry on the given 'rect' element. public ISvgAnimatedLength Ry { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width Corresponds to attribute width on the given 'rect' element. public ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X Corresponds to attribute x on the given 'rect' element. public ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y Corresponds to attribute y on the given 'rect' element. public ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgRectElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectElement.html",
    "title": "Class SvgRectElement | SharpVectors Documentation",
    "keywords": "Class SvgRectElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SVGRectElement interface corresponds to the 'rect' element. public sealed class SvgRectElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgRectElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgRectElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgRectElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgRectElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Height Corresponds to attribute height on the given 'rect' element. RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures Rx Corresponds to attribute rx on the given 'rect' element. Ry Corresponds to attribute ry on the given 'rect' element. SystemLanguage Width Corresponds to attribute width on the given 'rect' element. X Corresponds to attribute x on the given 'rect' element. Y Corresponds to attribute y on the given 'rect' element. Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.-ctor.html",
    "title": "Constructor SvgRectF | SharpVectors Documentation",
    "keywords": "Constructor SvgRectF Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SvgRectF(float, float, float, float) Initializes a new instance of the SvgRectF structure with the specified location and size. public SvgRectF(float x, float y, float width, float height) Parameters x float The x-coordinate of the upper-left corner of the rectangle. y float The y-coordinate of the upper-left corner of the rectangle. width float The width of the rectangle. height float The height of the rectangle. SvgRectF(SvgPointF, SvgSizeF) Initializes a new instance of the SvgRectF structure with the specified location and size. public SvgRectF(SvgPointF location, SvgSizeF size) Parameters location SvgPointF A SvgPointF that represents the upper-left corner of the rectangular region. size SvgSizeF A SvgSizeF that represents the width and height of the rectangular region."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Bottom.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Bottom.html",
    "title": "Property Bottom | SharpVectors Documentation",
    "keywords": "Property Bottom Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Bottom Gets the y-coordinate that is the sum of Y and Height of this SvgRectF structure. public float Bottom { get; } Property Value float The y-coordinate that is the sum of Y and Height of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Contains.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Contains.html",
    "title": "Method Contains | SharpVectors Documentation",
    "keywords": "Method Contains Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Contains(float, float) This determines if the specified point is contained within this SvgRectF structure. public bool Contains(float x, float y) Parameters x float The x-coordinate of the point to test. y float The y-coordinate of the point to test. Returns bool This method returns true if the point defined by x and y is contained within this SvgRectF structure; otherwise false. Contains(SvgPointF) This determines if the specified point is contained within this SvgRectF structure. public bool Contains(SvgPointF pt) Parameters pt SvgPointF The SvgPointF to test. Returns bool This method returns true if the point represented by the pt parameter is contained within this SvgRectF structure; otherwise false. Contains(SvgRectF) This determines if the rectangular region represented by rect is entirely contained within this SvgRectF structure. public bool Contains(SvgRectF rect) Parameters rect SvgRectF The SvgRectF to test. Returns bool This method returns true if the rectangular region represented by rect is entirely contained within the rectangular region represented by this SvgRectF; otherwise false."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Create.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Create.html",
    "title": "Method Create | SharpVectors Documentation",
    "keywords": "Method Create Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Create(float, float, float, float) Creates a SvgRectF structure with upper-left corner and lower-right corner at the specified locations. public static SvgRectF Create(float left, float top, float right, float bottom) Parameters left float The x-coordinate of the upper-left corner of the rectangular region. top float The y-coordinate of the upper-left corner of the rectangular region. right float The x-coordinate of the lower-right corner of the rectangular region. bottom float The y-coordinate of the lower-right corner of the rectangular region. Returns SvgRectF The new SvgRectF that this method creates."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Empty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Empty.html",
    "title": "Field Empty | SharpVectors Documentation",
    "keywords": "Field Empty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Represents an instance of the SvgRectF structure with its members uninitialized. public static readonly SvgRectF Empty Returns SvgRectF"
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Equals.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Equals.html",
    "title": "Method Equals | SharpVectors Documentation",
    "keywords": "Method Equals Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Equals(object) This tests whether an object is a SvgRectF with the same location and size of this SvgRectF. public override bool Equals(object obj) Parameters obj object The object to test. Returns bool This returns true if the specified object is a SvgRectF and its X, Y, Width, and Height properties are equal to the corresponding properties of this SvgRectF; otherwise, false. Equals(SvgRectF) This tests whether the specified SvgRectF is with the same location and size of this SvgRectF. public bool Equals(SvgRectF other) Parameters other SvgRectF The SvgRectF to test. Returns bool This returns true if specified SvgRectF has its X, Y, Width, and Height properties are equal to the corresponding properties of this SvgRectF; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.GetHashCode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.GetHashCode.html",
    "title": "Method GetHashCode | SharpVectors Documentation",
    "keywords": "Method GetHashCode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetHashCode() Gets the hash code for this SvgRectF structure. For information about the use of hash codes, see Object.GetHashCode. public override int GetHashCode() Returns int The hash code for this SvgRectF."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height Gets or sets the height of this SvgRectF structure. public float Height { get; set; } Property Value float The height of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Inflate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Inflate.html",
    "title": "Method Inflate | SharpVectors Documentation",
    "keywords": "Method Inflate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Inflate(float, float) Inflates this SvgRectF structure by the specified amount. public void Inflate(float x, float y) Parameters x float The amount to inflate this SvgRectF structure horizontally. y float The amount to inflate this SvgRectF structure vertically. Inflate(SvgSizeF) Inflates this SvgRectF by the specified amount. public void Inflate(SvgSizeF size) Parameters size SvgSizeF The amount to inflate this rectangle. Inflate(SvgRectF, float, float) Creates and returns an inflated copy of the specified SvgRectF structure. The copy is inflated by the specified amount. The original rectangle remains unmodified. public static SvgRectF Inflate(SvgRectF rect, float x, float y) Parameters rect SvgRectF The SvgRectF to be copied. This rectangle is not modified. x float The amount to inflate the copy of the rectangle horizontally. y float The amount to inflate the copy of the rectangle vertically. Returns SvgRectF The inflated SvgRectF."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Intersect.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Intersect.html",
    "title": "Method Intersect | SharpVectors Documentation",
    "keywords": "Method Intersect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Intersect(SvgRectF) public void Intersect(SvgRectF rect) Parameters rect SvgRectF"
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Intersection.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Intersection.html",
    "title": "Method Intersection | SharpVectors Documentation",
    "keywords": "Method Intersection Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Intersection(SvgRectF) This replaces this SvgRectF structure with the intersection of itself and the specified SvgRectF structure. public void Intersection(SvgRectF rect) Parameters rect SvgRectF The rectangle to intersect. Intersection(SvgRectF, SvgRectF) Returns a SvgRectF structure that represents the intersection of two rectangles. If there is no intersection, and empty SvgRectF is returned. public static SvgRectF Intersection(SvgRectF a, SvgRectF b) Parameters a SvgRectF A rectangle to intersect. b SvgRectF A rectangle to intersect. Returns SvgRectF A third SvgRectF structure the size of which represents the overlapped area of the two specified rectangles."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Intersects.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Intersects.html",
    "title": "Method Intersects | SharpVectors Documentation",
    "keywords": "Method Intersects Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Intersects(SvgRectF) This determines if this rectangle intersects with rect. public bool Intersects(SvgRectF rect) Parameters rect SvgRectF The rectangle to test. Returns bool This method returns true if there is any intersection; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.IsEmpty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.IsEmpty.html",
    "title": "Property IsEmpty | SharpVectors Documentation",
    "keywords": "Property IsEmpty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsEmpty Tests whether the Width or Height property of this SvgRectF has a value of zero. public bool IsEmpty { get; } Property Value bool This property returns true if the Width or Height property of this SvgRectF has a value of zero; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Left.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Left.html",
    "title": "Property Left | SharpVectors Documentation",
    "keywords": "Property Left Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Left Gets the x-coordinate of the left edge of this SvgRectF structure. public float Left { get; } Property Value float The x-coordinate of the left edge of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Location.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Location.html",
    "title": "Property Location | SharpVectors Documentation",
    "keywords": "Property Location Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Location Gets or sets the coordinates of the upper-left corner of this SvgRectF structure. public SvgPointF Location { get; set; } Property Value SvgPointF A SvgPointF that represents the upper-left corner of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Offset.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Offset.html",
    "title": "Method Offset | SharpVectors Documentation",
    "keywords": "Method Offset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Offset(SvgPointF) Adjusts the location of this rectangle by the specified amount. public void Offset(SvgPointF pos) Parameters pos SvgPointF The amount to offset the location. Offset(float, float) Adjusts the location of this rectangle by the specified amount. public void Offset(float x, float y) Parameters x float The amount to offset the location horizontally. y float The amount to offset the location vertically."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Right.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Right.html",
    "title": "Property Right | SharpVectors Documentation",
    "keywords": "Property Right Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Right Gets the x-coordinate that is the sum of X and Width of this SvgRectF structure. public float Right { get; } Property Value float The x-coordinate that is the sum of X and Width of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Size.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Size.html",
    "title": "Property Size | SharpVectors Documentation",
    "keywords": "Property Size Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Size Gets or sets the size of this SvgRectF. public SvgSizeF Size { get; set; } Property Value SvgSizeF A SvgSizeF that represents the width and height of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.ToString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.ToString.html",
    "title": "Method ToString | SharpVectors Documentation",
    "keywords": "Method ToString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ToString() Converts the Location and Size of this SvgRectF to a human-readable string. public override string ToString() Returns string A string that contains the position, width, and height of this SvgRectF structure; for example, \"{X=20, Y=20, Width=100, Height=50}\"."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Top.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Top.html",
    "title": "Property Top | SharpVectors Documentation",
    "keywords": "Property Top Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Top Gets the y-coordinate of the top edge of this SvgRectF structure. public float Top { get; } Property Value float The y-coordinate of the top edge of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Union.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Union.html",
    "title": "Method Union | SharpVectors Documentation",
    "keywords": "Method Union Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Union(SvgRectF, SvgRectF) Creates the smallest possible third rectangle that can contain both of two rectangles that form a union. public static SvgRectF Union(SvgRectF a, SvgRectF b) Parameters a SvgRectF A rectangle to union. b SvgRectF A rectangle to union. Returns SvgRectF A third SvgRectF structure that contains both of the two rectangles that form the union."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width Gets or sets the width of this SvgRectF structure. public float Width { get; set; } Property Value float The width of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll X Gets or sets the x-coordinate of the upper-left corner of this SvgRectF structure. public float X { get; set; } Property Value float The x-coordinate of the upper-left corner of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Y Gets or sets the y-coordinate of the upper-left corner of this SvgRectF structure. public float Y { get; set; } Property Value float The y-coordinate of the upper-left corner of this SvgRectF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.html",
    "title": "Struct SvgRectF | SharpVectors Documentation",
    "keywords": "Struct SvgRectF Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This stores a set of four float precision numbers that represent the location and size of a rectangle. [Serializable] public struct SvgRectF : IEquatable<SvgRectF> Implements IEquatable<SvgRectF> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SvgRectF(SvgPointF, SvgSizeF) Initializes a new instance of the SvgRectF structure with the specified location and size. SvgRectF(float, float, float, float) Initializes a new instance of the SvgRectF structure with the specified location and size. Fields Empty Represents an instance of the SvgRectF structure with its members uninitialized. Properties Bottom Gets the y-coordinate that is the sum of Y and Height of this SvgRectF structure. Height Gets or sets the height of this SvgRectF structure. IsEmpty Tests whether the Width or Height property of this SvgRectF has a value of zero. Left Gets the x-coordinate of the left edge of this SvgRectF structure. Location Gets or sets the coordinates of the upper-left corner of this SvgRectF structure. Right Gets the x-coordinate that is the sum of X and Width of this SvgRectF structure. Size Gets or sets the size of this SvgRectF. Top Gets the y-coordinate of the top edge of this SvgRectF structure. Width Gets or sets the width of this SvgRectF structure. X Gets or sets the x-coordinate of the upper-left corner of this SvgRectF structure. Y Gets or sets the y-coordinate of the upper-left corner of this SvgRectF structure. Methods Contains(SvgPointF) This determines if the specified point is contained within this SvgRectF structure. Contains(SvgRectF) This determines if the rectangular region represented by rect is entirely contained within this SvgRectF structure. Contains(float, float) This determines if the specified point is contained within this SvgRectF structure. Create(float, float, float, float) Creates a SvgRectF structure with upper-left corner and lower-right corner at the specified locations. Equals(SvgRectF) This tests whether the specified SvgRectF is with the same location and size of this SvgRectF. Equals(object) This tests whether an object is a SvgRectF with the same location and size of this SvgRectF. GetHashCode() Gets the hash code for this SvgRectF structure. For information about the use of hash codes, see Object.GetHashCode. Inflate(SvgRectF, float, float) Creates and returns an inflated copy of the specified SvgRectF structure. The copy is inflated by the specified amount. The original rectangle remains unmodified. Inflate(SvgSizeF) Inflates this SvgRectF by the specified amount. Inflate(float, float) Inflates this SvgRectF structure by the specified amount. Intersect(SvgRectF) Intersection(SvgRectF) This replaces this SvgRectF structure with the intersection of itself and the specified SvgRectF structure. Intersection(SvgRectF, SvgRectF) Returns a SvgRectF structure that represents the intersection of two rectangles. If there is no intersection, and empty SvgRectF is returned. Intersects(SvgRectF) This determines if this rectangle intersects with rect. Offset(SvgPointF) Adjusts the location of this rectangle by the specified amount. Offset(float, float) Adjusts the location of this rectangle by the specified amount. ToString() Converts the Location and Size of this SvgRectF to a human-readable string. Union(SvgRectF, SvgRectF) Creates the smallest possible third rectangle that can contain both of two rectangles that form a union. Operators operator ==(SvgRectF, SvgRectF) This tests whether two SvgRectF structures have equal location and size. operator !=(SvgRectF, SvgRectF) This tests whether two SvgRectF structures differ in location or size."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.op_Equality.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.op_Equality.html",
    "title": "Operator operator == | SharpVectors Documentation",
    "keywords": "Operator operator == Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator ==(SvgRectF, SvgRectF) This tests whether two SvgRectF structures have equal location and size. public static bool operator ==(SvgRectF left, SvgRectF right) Parameters left SvgRectF The SvgRectF structure that is to the left of the equality operator. right SvgRectF The SvgRectF structure that is to the right of the equality operator. Returns bool This operator returns true if the two specified SvgRectF structures have equal X, Y, Width, and Height properties."
  },
  "api/SharpVectors.Dom.Svg.SvgRectF.op_Inequality.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRectF.op_Inequality.html",
    "title": "Operator operator != | SharpVectors Documentation",
    "keywords": "Operator operator != Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator !=(SvgRectF, SvgRectF) This tests whether two SvgRectF structures differ in location or size. public static bool operator !=(SvgRectF left, SvgRectF right) Parameters left SvgRectF The SvgRectF structure that is to the left of the inequality operator. right SvgRectF The SvgRectF structure that is to the right of the inequality operator. Returns bool This operator returns true if any of the X, Y, Width, or Height properties of the two SvgRectF structures are unequal; otherwise false."
  },
  "api/SharpVectors.Dom.Svg.SvgRenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgRenderingHint.html",
    "title": "Enum SvgRenderingHint | SharpVectors Documentation",
    "keywords": "Enum SvgRenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgRenderingHint Fields None = 0 Shape = 1 Text = 2 Image = 3 Clipping = 4 Masking = 5 Animation = 6 Containment = 7 Marker = 8"
  },
  "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.-ctor.html",
    "title": "Constructor SvgResolveNamespaceEventArgs | SharpVectors Documentation",
    "keywords": "Constructor SvgResolveNamespaceEventArgs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgResolveNamespaceEventArgs() public SvgResolveNamespaceEventArgs() SvgResolveNamespaceEventArgs(string) public SvgResolveNamespaceEventArgs(string prefix) Parameters prefix string"
  },
  "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.Prefix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.Prefix.html",
    "title": "Property Prefix | SharpVectors Documentation",
    "keywords": "Property Prefix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Prefix Gets or sets the prefix (for example: 'rdf') public string Prefix { get; set; } Property Value string The prefix."
  },
  "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.Uri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.Uri.html",
    "title": "Property Uri | SharpVectors Documentation",
    "keywords": "Property Uri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Uri Gets or sets the URI (for example: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'). This value may have already been initialized, it's up to the application to check if it wants to override the resolution public string Uri { get; set; } Property Value string The URI."
  },
  "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgResolveNamespaceEventArgs.html",
    "title": "Class SvgResolveNamespaceEventArgs | SharpVectors Documentation",
    "keywords": "Class SvgResolveNamespaceEventArgs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Arguments when namespace is trying to be resolved public sealed class SvgResolveNamespaceEventArgs : EventArgs Inheritance object EventArgs SvgResolveNamespaceEventArgs Inherited Members EventArgs.Empty object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgResolveNamespaceEventArgs() SvgResolveNamespaceEventArgs(string) Properties Prefix Gets or sets the prefix (for example: 'rdf') Uri Gets or sets the URI (for example: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'). This value may have already been initialized, it's up to the application to check if it wants to override the resolution"
  },
  "api/SharpVectors.Dom.Svg.SvgResolveUriEventArgs.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgResolveUriEventArgs.-ctor.html",
    "title": "Constructor SvgResolveUriEventArgs | SharpVectors Documentation",
    "keywords": "Constructor SvgResolveUriEventArgs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgResolveUriEventArgs() public SvgResolveUriEventArgs() SvgResolveUriEventArgs(string) public SvgResolveUriEventArgs(string uri) Parameters uri string"
  },
  "api/SharpVectors.Dom.Svg.SvgResolveUriEventArgs.Uri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgResolveUriEventArgs.Uri.html",
    "title": "Property Uri | SharpVectors Documentation",
    "keywords": "Property Uri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Uri Gets or sets the URI (for example: 'http://www.w3.org/2000/svg'). This value may have already been initialized, it's up to the application to check if it wants to override the resolution public string Uri { get; set; } Property Value string The URI."
  },
  "api/SharpVectors.Dom.Svg.SvgResolveUriEventArgs.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgResolveUriEventArgs.html",
    "title": "Class SvgResolveUriEventArgs | SharpVectors Documentation",
    "keywords": "Class SvgResolveUriEventArgs Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Arguments when URI is trying to be resolved while loading schema public sealed class SvgResolveUriEventArgs : EventArgs Inheritance object EventArgs SvgResolveUriEventArgs Inherited Members EventArgs.Empty object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgResolveUriEventArgs() SvgResolveUriEventArgs(string) Properties Uri Gets or sets the URI (for example: 'http://www.w3.org/2000/svg'). This value may have already been initialized, it's up to the application to check if it wants to override the resolution"
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.-ctor.html",
    "title": "Constructor SvgScriptElement | SharpVectors Documentation",
    "keywords": "Constructor SvgScriptElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgScriptElement(string, string, string, SvgDocument) public SvgScriptElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.Content.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.Content.html",
    "title": "Property Content | SharpVectors Documentation",
    "keywords": "Property Content Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Content public string Content { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.CrossOrigin.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.CrossOrigin.html",
    "title": "Property CrossOrigin | SharpVectors Documentation",
    "keywords": "Property CrossOrigin Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CrossOrigin Gets or sets a value corresponding to the attribute 'crossorigin' on the given 'script' element. public string CrossOrigin { get; set; } Property Value string An enumeration specifying the CORS (Cross-Origin Resource Sharing) setting attributes. Possible values are anonymous, use-credentials and empty string. Remarks This is introduced in SVG 2. See Also https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes"
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.ECMAScript.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.ECMAScript.html",
    "title": "Field ECMAScript | SharpVectors Documentation",
    "keywords": "Field ECMAScript Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public const string ECMAScript = \"application/ecmascript\" Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Type Gets or sets a value corresponding to the attribute 'type' on the given 'script' element. public string Type { get; set; } Property Value string A string specifying the script type."
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.UriReference.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.UriReference.html",
    "title": "Property UriReference | SharpVectors Documentation",
    "keywords": "Property UriReference Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UriReference public SvgUriReference UriReference { get; } Property Value SvgUriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgScriptElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgScriptElement.html",
    "title": "Class SvgScriptElement | SharpVectors Documentation",
    "keywords": "Class SvgScriptElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The ISvgScriptElement interface corresponds to the 'script' element. public sealed class SvgScriptElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgScriptElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgExternalResourcesRequired Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgScriptElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgScriptElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgExternalResourcesRequired Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks A 'script' element is equivalent to the 'script' element in HTML and thus is the place for scripts. Any functions defined within any 'script' element have a 'global' scope across the entire current document. Constructors SvgScriptElement(string, string, string, SvgDocument) Fields ECMAScript Properties Content CrossOrigin Gets or sets a value corresponding to the attribute 'crossorigin' on the given 'script' element. ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Href IsRenderable Gets a value indicating whether this SVG element is renderable. Type Gets or sets a value corresponding to the attribute 'type' on the given 'script' element. UriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.-ctor.html",
    "title": "Constructor SvgSizeF | SharpVectors Documentation",
    "keywords": "Constructor SvgSizeF Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SvgSizeF(float, float) Initializes a new instance of the SvgSizeF class from the specified dimensions. public SvgSizeF(float width, float height) Parameters width float The width component of the new SvgSizeF. height float The height component of the new SvgSizeF. SvgSizeF(SvgSizeF) Initializes a new instance of the SvgSizeF class from the specified existing SvgSizeF. public SvgSizeF(SvgSizeF size) Parameters size SvgSizeF The SvgSizeF from which to create the new SvgSizeF. SvgSizeF(SvgPointF) Initializes a new instance of the SvgSizeF class from the specified SvgPointF. public SvgSizeF(SvgPointF pt) Parameters pt SvgPointF The SvgPointF from which to initialize this SvgSizeF."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.Add.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.Add.html",
    "title": "Method Add | SharpVectors Documentation",
    "keywords": "Method Add Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Add(SvgSizeF, SvgSizeF) Adds the width and height of one SvgSizeF structure to the width and height of another SvgSizeF structure. public static SvgSizeF Add(SvgSizeF sz1, SvgSizeF sz2) Parameters sz1 SvgSizeF The first SvgSizeF to add. sz2 SvgSizeF The second SvgSizeF to add. Returns SvgSizeF A SvgSizeF structure that is the result of the addition operation."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.Empty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.Empty.html",
    "title": "Field Empty | SharpVectors Documentation",
    "keywords": "Field Empty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Initializes a new instance of the SvgSizeF class. public static readonly SvgSizeF Empty Returns SvgSizeF"
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.Equals.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.Equals.html",
    "title": "Method Equals | SharpVectors Documentation",
    "keywords": "Method Equals Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Equals(object) This tests whether the specified object is a SvgSizeF with the same dimensions as this SvgSizeF. public override bool Equals(object obj) Parameters obj object The object to test. Returns bool This returns true if specified object is a SvgSizeF and has the same width and height as this SvgSizeF; otherwise, false. Equals(SvgSizeF) This to see whether the specified SvgSizeF is with the same dimensions as this SvgSizeF. public bool Equals(SvgSizeF other) Parameters other SvgSizeF The SvgSizeF to test. Returns bool This returns true if the specified SvgSizeF and has the same width and height as this SvgSizeF; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.GetHashCode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.GetHashCode.html",
    "title": "Method GetHashCode | SharpVectors Documentation",
    "keywords": "Method GetHashCode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetHashCode() This returns a hash code for this SvgSizeF structure. public override int GetHashCode() Returns int An integer value that specifies a hash value for this SvgSizeF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Height Gets or sets the vertical component of this SvgSizeF. public float Height { get; set; } Property Value float The vertical component of this SvgSizeF."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.IsEmpty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.IsEmpty.html",
    "title": "Property IsEmpty | SharpVectors Documentation",
    "keywords": "Property IsEmpty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsEmpty Gets a value indicating whether this SvgSizeF has zero width and height. public bool IsEmpty { get; } Property Value bool This property returns true when this SvgSizeF has both a width and height of zero; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.Subtract.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.Subtract.html",
    "title": "Method Subtract | SharpVectors Documentation",
    "keywords": "Method Subtract Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Subtract(SvgSizeF, SvgSizeF) Subtracts the width and height of one SvgSizeF structure from the width and height of another SvgSizeF structure. public static SvgSizeF Subtract(SvgSizeF sz1, SvgSizeF sz2) Parameters sz1 SvgSizeF The SvgSizeF structure on the left side of the subtraction operator. sz2 SvgSizeF The SvgSizeF structure on the right side of the subtraction operator. Returns SvgSizeF The SvgSizeF that is a result of the subtraction operation."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.ToString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.ToString.html",
    "title": "Method ToString | SharpVectors Documentation",
    "keywords": "Method ToString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ToString() This creates a human-readable string that represents this SvgSizeF. public override string ToString() Returns string A string that represents this SvgSizeF."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Width Gets or sets the horizontal component of this SvgSizeF. public float Width { get; set; } Property Value float The horizontal component of this SvgSizeF."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.html",
    "title": "Struct SvgSizeF | SharpVectors Documentation",
    "keywords": "Struct SvgSizeF Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle. [Serializable] public struct SvgSizeF : IEquatable<SvgSizeF> Implements IEquatable<SvgSizeF> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SvgSizeF(SvgPointF) Initializes a new instance of the SvgSizeF class from the specified SvgPointF. SvgSizeF(SvgSizeF) Initializes a new instance of the SvgSizeF class from the specified existing SvgSizeF. SvgSizeF(float, float) Initializes a new instance of the SvgSizeF class from the specified dimensions. Fields Empty Initializes a new instance of the SvgSizeF class. Properties Height Gets or sets the vertical component of this SvgSizeF. IsEmpty Gets a value indicating whether this SvgSizeF has zero width and height. Width Gets or sets the horizontal component of this SvgSizeF. Methods Add(SvgSizeF, SvgSizeF) Adds the width and height of one SvgSizeF structure to the width and height of another SvgSizeF structure. Equals(SvgSizeF) This to see whether the specified SvgSizeF is with the same dimensions as this SvgSizeF. Equals(object) This tests whether the specified object is a SvgSizeF with the same dimensions as this SvgSizeF. GetHashCode() This returns a hash code for this SvgSizeF structure. Subtract(SvgSizeF, SvgSizeF) Subtracts the width and height of one SvgSizeF structure from the width and height of another SvgSizeF structure. ToString() This creates a human-readable string that represents this SvgSizeF. Operators operator +(SvgSizeF, SvgSizeF) Adds the width and height of one SvgSizeF structure to the width and height of another SvgSizeF structure. operator ==(SvgSizeF, SvgSizeF) Tests whether two SvgSizeF structures are equal. explicit operator SvgPointF(SvgSizeF) This converts the specified SvgSizeF to a SvgPointF. operator !=(SvgSizeF, SvgSizeF) Tests whether two SvgSizeF structures are different. operator -(SvgSizeF, SvgSizeF) Subtracts the width and height of one SvgSizeF structure from the width and height of another SvgSizeF structure."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.op_Addition.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.op_Addition.html",
    "title": "Operator operator + | SharpVectors Documentation",
    "keywords": "Operator operator + Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator +(SvgSizeF, SvgSizeF) Adds the width and height of one SvgSizeF structure to the width and height of another SvgSizeF structure. public static SvgSizeF operator +(SvgSizeF sz1, SvgSizeF sz2) Parameters sz1 SvgSizeF The first SvgSizeF to add. sz2 SvgSizeF The second SvgSizeF to add. Returns SvgSizeF A SvgSizeF structure that is the result of the addition operation."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.op_Equality.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.op_Equality.html",
    "title": "Operator operator == | SharpVectors Documentation",
    "keywords": "Operator operator == Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator ==(SvgSizeF, SvgSizeF) Tests whether two SvgSizeF structures are equal. public static bool operator ==(SvgSizeF sz1, SvgSizeF sz2) Parameters sz1 SvgSizeF The SvgSizeF structure on the left side of the equality operator. sz2 SvgSizeF The SvgSizeF structure on the right of the equality operator. Returns bool This operator returns true if sz1 and sz2 have equal width and height; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.op_Explicit.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.op_Explicit.html",
    "title": "Operator explicit operator | SharpVectors Documentation",
    "keywords": "Operator explicit operator Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll explicit operator SvgPointF(SvgSizeF) This converts the specified SvgSizeF to a SvgPointF. public static explicit operator SvgPointF(SvgSizeF size) Parameters size SvgSizeF The SvgSizeF structure to be converted. Returns SvgPointF The SvgPointF structure specifying the result of the conversion."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.op_Inequality.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.op_Inequality.html",
    "title": "Operator operator != | SharpVectors Documentation",
    "keywords": "Operator operator != Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator !=(SvgSizeF, SvgSizeF) Tests whether two SvgSizeF structures are different. public static bool operator !=(SvgSizeF sz1, SvgSizeF sz2) Parameters sz1 SvgSizeF The SvgSizeF structure on the left of the inequality operator. sz2 SvgSizeF The SvgSizeF structure on the right of the inequality operator. Returns bool This operator returns true if sz1 and sz2 differ either in width or height; false if sz1 and sz2 are equal."
  },
  "api/SharpVectors.Dom.Svg.SvgSizeF.op_Subtraction.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSizeF.op_Subtraction.html",
    "title": "Operator operator - | SharpVectors Documentation",
    "keywords": "Operator operator - Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll operator -(SvgSizeF, SvgSizeF) Subtracts the width and height of one SvgSizeF structure from the width and height of another SvgSizeF structure. public static SvgSizeF operator -(SvgSizeF sz1, SvgSizeF sz2) Parameters sz1 SvgSizeF The SvgSizeF on the left side of the subtraction operator. sz2 SvgSizeF The SvgSizeF on the right side of the subtraction operator. Returns SvgSizeF A SvgSizeF that is the result of the subtraction operation."
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.-ctor.html",
    "title": "Constructor SvgSolidColorElement | SharpVectors Documentation",
    "keywords": "Constructor SvgSolidColorElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgSolidColorElement(string, string, string, SvgDocument) public SvgSolidColorElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.Children.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.Children.html",
    "title": "Property Children | SharpVectors Documentation",
    "keywords": "Property Children Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Children public XmlNodeList Children { get; } Property Value XmlNodeList"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public SvgSolidColorElement ReferencedElement { get; } Property Value SvgSolidColorElement"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgSolidColorElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSolidColorElement.html",
    "title": "Class SvgSolidColorElement | SharpVectors Documentation",
    "keywords": "Class SvgSolidColorElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll An SVG object represents an 'solidcolor' element in the DOM. public sealed class SvgSolidColorElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgSolidColorElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgSolidColorElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgSolidColorElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgSolidColorElement(string, string, string, SvgDocument) Properties Children ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Href IsRenderable Gets a value indicating whether this SVG element is renderable. ReferencedElement RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage Methods HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgSpreadMethod.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSpreadMethod.html",
    "title": "Enum SvgSpreadMethod | SharpVectors Documentation",
    "keywords": "Enum SvgSpreadMethod Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public enum SvgSpreadMethod Fields Pad = 0 Reflect = 1 Repeat = 2 None = 3"
  },
  "api/SharpVectors.Dom.Svg.SvgStopElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStopElement.-ctor.html",
    "title": "Constructor SvgStopElement | SharpVectors Documentation",
    "keywords": "Constructor SvgStopElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgStopElement(string, string, string, SvgDocument) public SvgStopElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgStopElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStopElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgStopElement.Offset.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStopElement.Offset.html",
    "title": "Property Offset | SharpVectors Documentation",
    "keywords": "Property Offset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Offset public ISvgAnimatedNumber Offset { get; } Property Value ISvgAnimatedNumber"
  },
  "api/SharpVectors.Dom.Svg.SvgStopElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStopElement.html",
    "title": "Class SvgStopElement | SharpVectors Documentation",
    "keywords": "Class SvgStopElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgStopElement. public sealed class SvgStopElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgStopElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgStopElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgStopElement ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgStopElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Offset"
  },
  "api/SharpVectors.Dom.Svg.SvgStringList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringList.-ctor.html",
    "title": "Constructor SvgStringList | SharpVectors Documentation",
    "keywords": "Constructor SvgStringList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgStringList() public SvgStringList() SvgStringList(string) public SvgStringList(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.SvgStringList.FromString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringList.FromString.html",
    "title": "Method FromString | SharpVectors Documentation",
    "keywords": "Method FromString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FromString(string) public void FromString(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.SvgStringList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringList.html",
    "title": "Class SvgStringList | SharpVectors Documentation",
    "keywords": "Class SvgStringList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This interface defines a list of String objects public sealed class SvgStringList : SvgList<string>, ISvgStringList, IEnumerable<string>, IEnumerable Inheritance object SvgList<string> SvgStringList Implements ISvgStringList IEnumerable<string> IEnumerable Inherited Members SvgList<string>.Count SvgList<string>.this[int] SvgList<string>.NumberOfItems SvgList<string>.Clear() SvgList<string>.Initialize(string) SvgList<string>.GetItem(uint) SvgList<string>.InsertItemBefore(string, uint) SvgList<string>.ReplaceItem(string, uint) SvgList<string>.RemoveItem(uint) SvgList<string>.AppendItem(string) SvgList<string>.GetEnumerator() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgStringList() SvgStringList(string) Methods FromString(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader.-ctor.html",
    "title": "Constructor SvgStringReader | SharpVectors Documentation",
    "keywords": "Constructor SvgStringReader Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgStringReader(string) Creates a new StringNormalizingReader. public SvgStringReader(string input) Parameters input string The string to read."
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader.Close.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader.Close.html",
    "title": "Method Close | SharpVectors Documentation",
    "keywords": "Method Close Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Close() Close the stream. public virtual void Close()"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader.Column.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader.Column.html",
    "title": "Property Column | SharpVectors Documentation",
    "keywords": "Property Column Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Column Returns the current column in the stream. public override int Column { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader.Line.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader.Line.html",
    "title": "Property Line | SharpVectors Documentation",
    "keywords": "Property Line Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Line Returns the current line in the stream. public override int Line { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader.Read.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader.Read.html",
    "title": "Method Read | SharpVectors Documentation",
    "keywords": "Method Read Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Read() Read a single character. This method will block until a character is available, an I/O error occurs, or the end of the stream is reached. public override int Read() Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader._column.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader._column.html",
    "title": "Field _column | SharpVectors Documentation",
    "keywords": "Field _column Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The current column in the stream. protected int _column Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader._inputText.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader._inputText.html",
    "title": "Field _inputText | SharpVectors Documentation",
    "keywords": "Field _inputText Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The characters. protected string _inputText Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader._line.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader._line.html",
    "title": "Field _line | SharpVectors Documentation",
    "keywords": "Field _line Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The current line in the stream. protected int _line Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader._nextIndex.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader._nextIndex.html",
    "title": "Field _nextIndex | SharpVectors Documentation",
    "keywords": "Field _nextIndex Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The index of the next character. protected int _nextIndex Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader._textLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader._textLength.html",
    "title": "Field _textLength | SharpVectors Documentation",
    "keywords": "Field _textLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The length of the string. protected int _textLength Returns int"
  },
  "api/SharpVectors.Dom.Svg.SvgStringReader.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStringReader.html",
    "title": "Class SvgStringReader | SharpVectors Documentation",
    "keywords": "Class SvgStringReader Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This class represents a SvgTextReader which handles strings. public class SvgStringReader : SvgTextReader Inheritance object SvgTextReader SvgStringReader Inherited Members SvgTextReader.Read(char[], int, int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgStringReader(string) Creates a new StringNormalizingReader. Fields _column The current column in the stream. _inputText The characters. _line The current line in the stream. _nextIndex The index of the next character. _textLength The length of the string. Properties Column Returns the current column in the stream. Line Returns the current line in the stream. Methods Close() Close the stream. Read() Read a single character. This method will block until a character is available, an I/O error occurs, or the end of the stream is reached."
  },
  "api/SharpVectors.Dom.Svg.SvgStyleElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleElement.-ctor.html",
    "title": "Constructor SvgStyleElement | SharpVectors Documentation",
    "keywords": "Constructor SvgStyleElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgStyleElement(string, string, string, SvgDocument) public SvgStyleElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgStyleElement.Media.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleElement.Media.html",
    "title": "Property Media | SharpVectors Documentation",
    "keywords": "Property Media Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Media public string Media { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleElement.Title.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleElement.Title.html",
    "title": "Property Title | SharpVectors Documentation",
    "keywords": "Property Title Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Title public string Title { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleElement.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleElement.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Type public string Type { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleElement.html",
    "title": "Class SvgStyleElement | SharpVectors Documentation",
    "keywords": "Class SvgStyleElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgStyleElement interface corresponds to the 'style' element. public sealed class SvgStyleElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgStyleElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgStyleElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgStyleElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable. Media Title Type"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleableElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleableElement.-ctor.html",
    "title": "Constructor SvgStyleableElement | SharpVectors Documentation",
    "keywords": "Constructor SvgStyleableElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgStyleableElement(string, string, string, SvgDocument) protected SvgStyleableElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleableElement.ClassName.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleableElement.ClassName.html",
    "title": "Property ClassName | SharpVectors Documentation",
    "keywords": "Property ClassName Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ClassName public ISvgAnimatedString ClassName { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleableElement.GetComputedStyle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleableElement.GetComputedStyle.html",
    "title": "Method GetComputedStyle | SharpVectors Documentation",
    "keywords": "Method GetComputedStyle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetComputedStyle(string) public override ICssStyleDeclaration GetComputedStyle(string pseudoElt) Parameters pseudoElt string Returns ICssStyleDeclaration"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleableElement.GetPresentationAttribute.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleableElement.GetPresentationAttribute.html",
    "title": "Method GetPresentationAttribute | SharpVectors Documentation",
    "keywords": "Method GetPresentationAttribute Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetPresentationAttribute(string) public ICssValue GetPresentationAttribute(string name) Parameters name string Returns ICssValue"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleableElement.GetPropertyValue.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleableElement.GetPropertyValue.html",
    "title": "Method GetPropertyValue | SharpVectors Documentation",
    "keywords": "Method GetPropertyValue Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetPropertyValue(string) public string GetPropertyValue(string name) Parameters name string Returns string GetPropertyValue(string, string) public string GetPropertyValue(string name1, string name2) Parameters name1 string name2 string Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgStyleableElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleableElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgStyleableElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgStyleableElement.html",
    "title": "Class SvgStyleableElement | SharpVectors Documentation",
    "keywords": "Class SvgStyleableElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgStyleableElement is an extension to the Svg DOM to create a class for all elements that are styleable. public abstract class SvgStyleableElement : SvgElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable Derived SvgDescElement SvgFilterElement SvgFilterPrimitiveStandardAttributes SvgFontElement SvgGlyphElement SvgGlyphRefElement SvgGradientElement SvgMarkerElement SvgMaskElement SvgPatternElement SvgSolidColorElement SvgStopElement SvgSymbolElement SvgTitleElement SvgTransformableElement Inherited Members SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgStyleableElement(string, string, string, SvgDocument) Properties ClassName Methods GetComputedStyle(string) GetPresentationAttribute(string) GetPropertyValue(string) GetPropertyValue(string, string) HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.-ctor.html",
    "title": "Constructor SvgSvgElement | SharpVectors Documentation",
    "keywords": "Constructor SvgSvgElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgSvgElement(string, string, string, SvgDocument) public SvgSvgElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.AnimationsPaused.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.AnimationsPaused.html",
    "title": "Method AnimationsPaused | SharpVectors Documentation",
    "keywords": "Method AnimationsPaused Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimationsPaused() Returns true if this SVG document fragment is in a paused state public bool AnimationsPaused() Returns bool Boolean indicating whether this SVG document fragment is in a paused state."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CheckEnclosure.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CheckEnclosure.html",
    "title": "Method CheckEnclosure | SharpVectors Documentation",
    "keywords": "Method CheckEnclosure Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CheckEnclosure(ISvgElement, ISvgRect) Returns true if the rendered content of the given element is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. public bool CheckEnclosure(ISvgElement element, ISvgRect rect) Parameters element ISvgElement The element on which to perform the given test rect ISvgRect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. Returns bool True or false, depending on whether the given element is enclosed by the supplied rectangle."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CheckIntersection.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CheckIntersection.html",
    "title": "Method CheckIntersection | SharpVectors Documentation",
    "keywords": "Method CheckIntersection Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CheckIntersection(ISvgElement, ISvgRect) Returns true if the rendered content of the given element intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. public bool CheckIntersection(ISvgElement element, ISvgRect rect) Parameters element ISvgElement The element on which to perform the given test. rect ISvgRect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. Returns bool True or false, depending on whether the given element intersects the supplied rectangle."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.ContentScriptType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.ContentScriptType.html",
    "title": "Property ContentScriptType | SharpVectors Documentation",
    "keywords": "Property ContentScriptType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ContentScriptType Corresponds to attribute contentScriptType on the given 'svg' element public string ContentScriptType { get; set; } Property Value string Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.ContentStyleType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.ContentStyleType.html",
    "title": "Property ContentStyleType | SharpVectors Documentation",
    "keywords": "Property ContentStyleType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ContentStyleType Corresponds to attribute contentStyleType on the given 'svg' element. public string ContentStyleType { get; set; } Property Value string Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgAngle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgAngle.html",
    "title": "Method CreateSvgAngle | SharpVectors Documentation",
    "keywords": "Method CreateSvgAngle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgAngle() Creates an SVGAngle object outside of any document trees. The object is initialized to the value 0 degrees (unitless). public ISvgAngle CreateSvgAngle() Returns ISvgAngle An SVGAngle object."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgLength.html",
    "title": "Method CreateSvgLength | SharpVectors Documentation",
    "keywords": "Method CreateSvgLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgLength() Creates an SVGLength object outside of any document trees. The object is initialized to the value of 0 user units. public ISvgLength CreateSvgLength() Returns ISvgLength An SVGLength object."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgMatrix.html",
    "title": "Method CreateSvgMatrix | SharpVectors Documentation",
    "keywords": "Method CreateSvgMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgMatrix() Creates an SVGMatrix object outside of any document trees. The object is initialized to the identity matrix. public ISvgMatrix CreateSvgMatrix() Returns ISvgMatrix An SVGMatrix object."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgNumber.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgNumber.html",
    "title": "Method CreateSvgNumber | SharpVectors Documentation",
    "keywords": "Method CreateSvgNumber Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgNumber() Creates an SVGNumber object outside of any document trees. The object is initialized to a value of zero. public ISvgNumber CreateSvgNumber() Returns ISvgNumber An SVGNumber object."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgPoint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgPoint.html",
    "title": "Method CreateSvgPoint | SharpVectors Documentation",
    "keywords": "Method CreateSvgPoint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgPoint() Creates an SVGPoint object outside of any document trees. The object is initialized to the point (0,0) in the user coordinate system. public ISvgPoint CreateSvgPoint() Returns ISvgPoint An SVGPoint object."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgRect.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgRect.html",
    "title": "Method CreateSvgRect | SharpVectors Documentation",
    "keywords": "Method CreateSvgRect Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgRect() Creates an SVGRect object outside of any document trees. The object is initialized such that all values are set to 0 user units. public ISvgRect CreateSvgRect() Returns ISvgRect An SVGRect object."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgTransform.html",
    "title": "Method CreateSvgTransform | SharpVectors Documentation",
    "keywords": "Method CreateSvgTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgTransform() Creates an SVGTransform object outside of any document trees. The object is initialized to an identity matrix transform (SVG_TRANSFORM_MATRIX). public ISvgTransform CreateSvgTransform() Returns ISvgTransform An SVGTransform object."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgTransformFromMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CreateSvgTransformFromMatrix.html",
    "title": "Method CreateSvgTransformFromMatrix | SharpVectors Documentation",
    "keywords": "Method CreateSvgTransformFromMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgTransformFromMatrix(ISvgMatrix) Creates an SVGTransform object outside of any document trees. The object is initialized to the given matrix transform (i.e., SVG_TRANSFORM_MATRIX). public ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix matrix) Parameters matrix ISvgMatrix The transform matrix. Returns ISvgTransform An SVGTransform object."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CurrentScale.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CurrentScale.html",
    "title": "Property CurrentScale | SharpVectors Documentation",
    "keywords": "Property CurrentScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurrentScale This attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations, as described under Magnification and panning. DOM attributes currentScale and currentTranslate are equivalent to the 2x3 matrix [a b c d e f] = [currentScale 0 0 currentScale currentTranslate.x currentTranslate.y]. If \"magnification\" is enabled (i.e., zoomAndPan=\"magnify\"), then the effect is as if an extra transformation were placed at the outermost level on the SVG document fragment (i.e., outside the outermost 'svg' element). public float CurrentScale { get; set; } Property Value float Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CurrentTime.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CurrentTime.html",
    "title": "Property CurrentTime | SharpVectors Documentation",
    "keywords": "Property CurrentTime Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurrentTime The current time in seconds relative to the start time for the current SVG document fragment. public float CurrentTime { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CurrentTranslate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CurrentTranslate.html",
    "title": "Property CurrentTranslate | SharpVectors Documentation",
    "keywords": "Property CurrentTranslate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurrentTranslate The corresponding translation factor that takes into account user \"magnification\". public ISvgPoint CurrentTranslate { get; } Property Value ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.CurrentView.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.CurrentView.html",
    "title": "Property CurrentView | SharpVectors Documentation",
    "keywords": "Property CurrentView Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CurrentView The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. The meaning depends on the situation: If the initial view was a \"standard\" view, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly o the values for transform and viewTarget within currentView will be null If the initial view was a link into a 'view' element, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will correspond to the corresponding attributes for the given 'view' element o the values for transform and viewTarget within currentView will be null If the initial view was a link into another element (i.e., other than a 'view'), then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly for the closest ancestor 'svg' element o the values for transform within currentView will be null o the viewTarget within currentView will represent the target of the link If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: o the values for viewBox, preserveAspectRatio, zoomAndPan, transform and viewTarget within currentView will correspond to the values from the SVG view specification fragment identifier The object itself and its contents are both readonly. public ISvgViewSpec CurrentView { get; } Property Value ISvgViewSpec"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.DeselectAll.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.DeselectAll.html",
    "title": "Method DeselectAll | SharpVectors Documentation",
    "keywords": "Method DeselectAll Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll DeselectAll() Unselects any selected objects, including any selections of text strings and type-in bars. public void DeselectAll()"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.ForceRedraw.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.ForceRedraw.html",
    "title": "Method ForceRedraw | SharpVectors Documentation",
    "keywords": "Method ForceRedraw Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ForceRedraw() In rendering environments supporting interactivity, forces the user agent to immediately redraw all regions of the viewport that require updating. public void ForceRedraw()"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.GetBounds.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.GetBounds.html",
    "title": "Method GetBounds | SharpVectors Documentation",
    "keywords": "Method GetBounds Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetBounds() public SvgRectF GetBounds() Returns SvgRectF"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.GetElementById.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.GetElementById.html",
    "title": "Method GetElementById | SharpVectors Documentation",
    "keywords": "Method GetElementById Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetElementById(string) Searches this SVG document fragment (i.e., the search is restricted to a subset of the document tree) for an Element whose id is given by elementId. If an Element is found, that Element is returned. If no such element exists, returns null. Behavior is not defined if more than one element has this id. public XmlElement GetElementById(string elementId) Parameters elementId string The unique id value for an element. Returns XmlElement The matching element."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.GetEnclosureList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.GetEnclosureList.html",
    "title": "Method GetEnclosureList | SharpVectors Documentation",
    "keywords": "Method GetEnclosureList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetEnclosureList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. public XmlNodeList GetEnclosureList(ISvgRect rect, ISvgElement referenceElement) Parameters rect ISvgRect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. referenceElement ISvgElement If not null, then only return elements whose drawing order has them below the given reference element. Returns XmlNodeList A list of Elements whose content is enclosed by the supplied rectangle."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.GetIntersectionList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.GetIntersectionList.html",
    "title": "Method GetIntersectionList | SharpVectors Documentation",
    "keywords": "Method GetIntersectionList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetIntersectionList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. public XmlNodeList GetIntersectionList(ISvgRect rect, ISvgElement referenceElement) Parameters rect ISvgRect The test rectangle. The values are in the initial coordinate system for the current 'svg' element. referenceElement ISvgElement If not null, then only return elements whose drawing order has them below the given reference element. Returns XmlNodeList A list of Elements whose content intersects the supplied rectangle."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.GetSize.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.GetSize.html",
    "title": "Method GetSize | SharpVectors Documentation",
    "keywords": "Method GetSize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetSize() public SvgSizeF GetSize() Returns SvgSizeF"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height Corresponds to attribute height on the given 'svg' element. public ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.IsOuterMost.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.IsOuterMost.html",
    "title": "Property IsOuterMost | SharpVectors Documentation",
    "keywords": "Property IsOuterMost Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsOuterMost public bool IsOuterMost { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.PauseAnimations.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.PauseAnimations.html",
    "title": "Method PauseAnimations | SharpVectors Documentation",
    "keywords": "Method PauseAnimations Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PauseAnimations() Suspends (i.e., pauses) all currently running animations that are defined within the SVG document fragment corresponding to this 'svg' element, causing the animation clock corresponding to this document fragment to stand still until it is unpaused. public void PauseAnimations()"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.PixelUnitToMillimeterX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.PixelUnitToMillimeterX.html",
    "title": "Property PixelUnitToMillimeterX | SharpVectors Documentation",
    "keywords": "Property PixelUnitToMillimeterX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PixelUnitToMillimeterX Size of a pixel units (as defined by CSS2) along the x-axis of the viewport, which represents a unit somewhere in the range of 70dpi to 120dpi, and, on systems that support this, might actually match the characteristics of the target medium. On systems where it is impossible to know the size of a pixel, a suitable default pixel size is provided. public float PixelUnitToMillimeterX { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.PixelUnitToMillimeterY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.PixelUnitToMillimeterY.html",
    "title": "Property PixelUnitToMillimeterY | SharpVectors Documentation",
    "keywords": "Property PixelUnitToMillimeterY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PixelUnitToMillimeterY Corresponding size of a pixel unit along the y-axis of the viewport. public float PixelUnitToMillimeterY { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreserveAspectRatio public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.RedrawTimerElapsed.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.RedrawTimerElapsed.html",
    "title": "Method RedrawTimerElapsed | SharpVectors Documentation",
    "keywords": "Method RedrawTimerElapsed Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RedrawTimerElapsed(object, ElapsedEventArgs) public void RedrawTimerElapsed(object source, ElapsedEventArgs args) Parameters source object args ElapsedEventArgs"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.Resize.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.Resize.html",
    "title": "Method Resize | SharpVectors Documentation",
    "keywords": "Method Resize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Resize() public void Resize()"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.ScreenPixelToMillimeterX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.ScreenPixelToMillimeterX.html",
    "title": "Property ScreenPixelToMillimeterX | SharpVectors Documentation",
    "keywords": "Property ScreenPixelToMillimeterX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ScreenPixelToMillimeterX User interface (UI) events in DOM Level 2 indicate the screen positions at which the given UI event occurred. When the user agent actually knows the physical size of a \"screen unit\", this attribute will express that information; otherwise, user agents will provide a suitable default value such as .28mm. public float ScreenPixelToMillimeterX { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.ScreenPixelToMillimeterY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.ScreenPixelToMillimeterY.html",
    "title": "Property ScreenPixelToMillimeterY | SharpVectors Documentation",
    "keywords": "Property ScreenPixelToMillimeterY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ScreenPixelToMillimeterY Corresponding size of a screen pixel along the y-axis of the viewport. public float ScreenPixelToMillimeterY { get; set; } Property Value float"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.SuspendRedraw.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.SuspendRedraw.html",
    "title": "Method SuspendRedraw | SharpVectors Documentation",
    "keywords": "Method SuspendRedraw Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SuspendRedraw(int) Takes a time-out value which indicates that redraw shall not occur until: (a) the corresponding unsuspendRedraw(suspend_handle_id) call has been made, (b) an unsuspendRedrawAll() call has been made, or (c) its timer has timed out. In environments that do not support interactivity (e.g., print media), then redraw shall not be suspended. suspend_handle_id = suspendRedraw(max_wait_milliseconds) and unsuspendRedraw(suspend_handle_id) must be packaged as balanced pairs. When you want to suspend redraw actions as a collection of SVG DOM changes occur, then precede the changes to the SVG DOM with a method call similar to suspend_handle_id = suspendRedraw(max_wait_milliseconds) and follow the changes with a method call similar to unsuspendRedraw(suspend_handle_id). Note that multiple suspendRedraw calls can be used at once and that each such method call is treated independently of the other suspendRedraw method calls. public int SuspendRedraw(int maxWaitMilliseconds) Parameters maxWaitMilliseconds int The amount of time in milliseconds to hold off before redrawing the device. Values greater than 60 seconds will be truncated down to 60 seconds. Returns int A number which acts as a unique identifier for the given suspendRedraw() call. This value must be passed as the parameter to the corresponding unsuspendRedraw() method call."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.UnpauseAnimations.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.UnpauseAnimations.html",
    "title": "Method UnpauseAnimations | SharpVectors Documentation",
    "keywords": "Method UnpauseAnimations Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnpauseAnimations() Unsuspends (i.e., unpauses) currently running animations that are defined within the SVG document fragment, causing the animation clock to continue from the time at which it was suspended. public void UnpauseAnimations()"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.UnsuspendRedraw.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.UnsuspendRedraw.html",
    "title": "Method UnsuspendRedraw | SharpVectors Documentation",
    "keywords": "Method UnsuspendRedraw Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnsuspendRedraw(int) Cancels a specified suspendRedraw() by providing a unique suspend_handle_id. public void UnsuspendRedraw(int suspendHandleId) Parameters suspendHandleId int A number which acts as a unique identifier for the desired suspendRedraw() call. The number supplied must be a value returned from a previous call to suspendRedraw() Exceptions DomException This method will raise a DomException with value NOT_FOUND_ERR if an invalid value (i.e., no such suspend_handle_id is active) for suspend_handle_id is provided."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.UnsuspendRedrawAll.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.UnsuspendRedrawAll.html",
    "title": "Method UnsuspendRedrawAll | SharpVectors Documentation",
    "keywords": "Method UnsuspendRedrawAll Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UnsuspendRedrawAll() Cancels all currently active suspendRedraw() method calls. This method is most useful at the very end of a set of SVG DOM calls to ensure that all pending suspendRedraw() method calls have been cancelled. public void UnsuspendRedrawAll()"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.UseCurrentView.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.UseCurrentView.html",
    "title": "Property UseCurrentView | SharpVectors Documentation",
    "keywords": "Property UseCurrentView Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UseCurrentView The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the \"standard\" view (i.e., based on attributes on the 'svg' element such as fitBoxToViewport) or to a \"custom\" view (i.e., a hyperlink into a particular 'view' or other element - see Linking into SVG content: URI fragments and SVG views). If the initial view is the \"standard\" view, then this attribute is false. If the initial view is a \"custom\" view, then this attribute is true. public bool UseCurrentView { get; set; } Property Value bool Exceptions DomException NO_MODIFICATION_ALLOWED_ERR: Raised on an attempt to change the value of a readonly attribute."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.ViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.ViewBox.html",
    "title": "Property ViewBox | SharpVectors Documentation",
    "keywords": "Property ViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewBox public ISvgAnimatedRect ViewBox { get; } Property Value ISvgAnimatedRect"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.ViewBoxTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.ViewBoxTransform.html",
    "title": "Property ViewBoxTransform | SharpVectors Documentation",
    "keywords": "Property ViewBoxTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewBoxTransform This function is super useful, calculates out the transformation matrix (i.e., scale and translate) of the viewport to user space. public ISvgMatrix ViewBoxTransform { get; } Property Value ISvgMatrix A Matrix which has the translate and scale portions set."
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.Viewport.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.Viewport.html",
    "title": "Property Viewport | SharpVectors Documentation",
    "keywords": "Property Viewport Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Viewport The position and size of the viewport (implicit or explicit) that corresponds to this 'svg' element. When the user agent is actually rendering the content, then the position and size values represent the actual values when rendering. The position and size values are unitless values in the coordinate system of the parent element. If no parent element exists (i.e., 'svg' element represents the root of the document tree), if this SVG document is embedded as part of another document (e.g., via the HTML 'object' element), then the position and size are unitless values in the coordinate system of the parent document. (If the parent uses CSS or XSL layout, then unitless values represent pixel units for the current CSS or XSL viewport, as described in the CSS2 specification.) If the parent element does not have a coordinate system, then the user agent should provide reasonable default values for this attribute. The object itself and its contents are both readonly. public ISvgRect Viewport { get; } Property Value ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width Corresponds to attribute width on the given 'svg' element. public ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X Corresponds to attribute x on the given 'svg' element. public ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y Corresponds to attribute y on the given 'svg' element. public ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.ZoomAndPan.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.ZoomAndPan.html",
    "title": "Property ZoomAndPan | SharpVectors Documentation",
    "keywords": "Property ZoomAndPan Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ZoomAndPan public SvgZoomAndPanType ZoomAndPan { get; set; } Property Value SvgZoomAndPanType"
  },
  "api/SharpVectors.Dom.Svg.SvgSvgElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSvgElement.html",
    "title": "Class SvgSvgElement | SharpVectors Documentation",
    "keywords": "Class SvgSvgElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll A key interface definition is the ISvgSvgElement interface, which is the interface that corresponds to the 'svg' element. This interface contains various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices. ISvgSvgElement extends ViewCSS and DocumentCSS to provide access to the computed values of properties and the override style sheet as described in DOM2. public sealed class SvgSvgElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgSvgElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgLocatable, ISvgFitToViewBox, ISvgZoomAndPan, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgSvgElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgSvgElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgLocatable ISvgFitToViewBox ISvgZoomAndPan IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgSvgElement(string, string, string, SvgDocument) Properties ContentScriptType Corresponds to attribute contentScriptType on the given 'svg' element ContentStyleType Corresponds to attribute contentStyleType on the given 'svg' element. CurrentScale This attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations, as described under Magnification and panning. DOM attributes currentScale and currentTranslate are equivalent to the 2x3 matrix [a b c d e f] = [currentScale 0 0 currentScale currentTranslate.x currentTranslate.y]. If \"magnification\" is enabled (i.e., zoomAndPan=\"magnify\"), then the effect is as if an extra transformation were placed at the outermost level on the SVG document fragment (i.e., outside the outermost 'svg' element). CurrentTime The current time in seconds relative to the start time for the current SVG document fragment. CurrentTranslate The corresponding translation factor that takes into account user \"magnification\". CurrentView The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. The meaning depends on the situation: If the initial view was a \"standard\" view, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly o the values for transform and viewTarget within currentView will be null If the initial view was a link into a 'view' element, then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will correspond to the corresponding attributes for the given 'view' element o the values for transform and viewTarget within currentView will be null If the initial view was a link into another element (i.e., other than a 'view'), then: o the values for viewBox, preserveAspectRatio and zoomAndPan within currentView will match the values for the corresponding DOM attributes that are on SVGSVGElement directly for the closest ancestor 'svg' element o the values for transform within currentView will be null o the viewTarget within currentView will represent the target of the link If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: o the values for viewBox, preserveAspectRatio, zoomAndPan, transform and viewTarget within currentView will correspond to the values from the SVG view specification fragment identifier The object itself and its contents are both readonly. ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Height Corresponds to attribute height on the given 'svg' element. IsOuterMost PixelUnitToMillimeterX Size of a pixel units (as defined by CSS2) along the x-axis of the viewport, which represents a unit somewhere in the range of 70dpi to 120dpi, and, on systems that support this, might actually match the characteristics of the target medium. On systems where it is impossible to know the size of a pixel, a suitable default pixel size is provided. PixelUnitToMillimeterY Corresponding size of a pixel unit along the y-axis of the viewport. PreserveAspectRatio RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures ScreenPixelToMillimeterX User interface (UI) events in DOM Level 2 indicate the screen positions at which the given UI event occurred. When the user agent actually knows the physical size of a \"screen unit\", this attribute will express that information; otherwise, user agents will provide a suitable default value such as .28mm. ScreenPixelToMillimeterY Corresponding size of a screen pixel along the y-axis of the viewport. SystemLanguage UseCurrentView The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the \"standard\" view (i.e., based on attributes on the 'svg' element such as fitBoxToViewport) or to a \"custom\" view (i.e., a hyperlink into a particular 'view' or other element - see Linking into SVG content: URI fragments and SVG views). If the initial view is the \"standard\" view, then this attribute is false. If the initial view is a \"custom\" view, then this attribute is true. ViewBox ViewBoxTransform This function is super useful, calculates out the transformation matrix (i.e., scale and translate) of the viewport to user space. Viewport The position and size of the viewport (implicit or explicit) that corresponds to this 'svg' element. When the user agent is actually rendering the content, then the position and size values represent the actual values when rendering. The position and size values are unitless values in the coordinate system of the parent element. If no parent element exists (i.e., 'svg' element represents the root of the document tree), if this SVG document is embedded as part of another document (e.g., via the HTML 'object' element), then the position and size are unitless values in the coordinate system of the parent document. (If the parent uses CSS or XSL layout, then unitless values represent pixel units for the current CSS or XSL viewport, as described in the CSS2 specification.) If the parent element does not have a coordinate system, then the user agent should provide reasonable default values for this attribute. The object itself and its contents are both readonly. Width Corresponds to attribute width on the given 'svg' element. X Corresponds to attribute x on the given 'svg' element. Y Corresponds to attribute y on the given 'svg' element. ZoomAndPan Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. AnimationsPaused() Returns true if this SVG document fragment is in a paused state CheckEnclosure(ISvgElement, ISvgRect) Returns true if the rendered content of the given element is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. CheckIntersection(ISvgElement, ISvgRect) Returns true if the rendered content of the given element intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. CreateSvgAngle() Creates an SVGAngle object outside of any document trees. The object is initialized to the value 0 degrees (unitless). CreateSvgLength() Creates an SVGLength object outside of any document trees. The object is initialized to the value of 0 user units. CreateSvgMatrix() Creates an SVGMatrix object outside of any document trees. The object is initialized to the identity matrix. CreateSvgNumber() Creates an SVGNumber object outside of any document trees. The object is initialized to a value of zero. CreateSvgPoint() Creates an SVGPoint object outside of any document trees. The object is initialized to the point (0,0) in the user coordinate system. CreateSvgRect() Creates an SVGRect object outside of any document trees. The object is initialized such that all values are set to 0 user units. CreateSvgTransform() Creates an SVGTransform object outside of any document trees. The object is initialized to an identity matrix transform (SVG_TRANSFORM_MATRIX). CreateSvgTransformFromMatrix(ISvgMatrix) Creates an SVGTransform object outside of any document trees. The object is initialized to the given matrix transform (i.e., SVG_TRANSFORM_MATRIX). DeselectAll() Unselects any selected objects, including any selections of text strings and type-in bars. ForceRedraw() In rendering environments supporting interactivity, forces the user agent to immediately redraw all regions of the viewport that require updating. GetBounds() GetElementById(string) Searches this SVG document fragment (i.e., the search is restricted to a subset of the document tree) for an Element whose id is given by elementId. If an Element is found, that Element is returned. If no such element exists, returns null. Behavior is not defined if more than one element has this id. GetEnclosureList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content is entirely contained within the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. GetIntersectionList(ISvgRect, ISvgElement) Returns the list of graphics elements whose rendered content intersects the supplied rectangle, honoring the 'pointer-events' property value on each candidate graphics element. GetSize() HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) PauseAnimations() Suspends (i.e., pauses) all currently running animations that are defined within the SVG document fragment corresponding to this 'svg' element, causing the animation clock corresponding to this document fragment to stand still until it is unpaused. RedrawTimerElapsed(object, ElapsedEventArgs) Resize() SuspendRedraw(int) Takes a time-out value which indicates that redraw shall not occur until: (a) the corresponding unsuspendRedraw(suspend_handle_id) call has been made, (b) an unsuspendRedrawAll() call has been made, or (c) its timer has timed out. In environments that do not support interactivity (e.g., print media), then redraw shall not be suspended. suspend_handle_id = suspendRedraw(max_wait_milliseconds) and unsuspendRedraw(suspend_handle_id) must be packaged as balanced pairs. When you want to suspend redraw actions as a collection of SVG DOM changes occur, then precede the changes to the SVG DOM with a method call similar to suspend_handle_id = suspendRedraw(max_wait_milliseconds) and follow the changes with a method call similar to unsuspendRedraw(suspend_handle_id). Note that multiple suspendRedraw calls can be used at once and that each such method call is treated independently of the other suspendRedraw method calls. UnpauseAnimations() Unsuspends (i.e., unpauses) currently running animations that are defined within the SVG document fragment, causing the animation clock to continue from the time at which it was suspended. UnsuspendRedraw(int) Cancels a specified suspendRedraw() by providing a unique suspend_handle_id. UnsuspendRedrawAll() Cancels all currently active suspendRedraw() method calls. This method is most useful at the very end of a set of SVG DOM calls to ensure that all pending suspendRedraw() method calls have been cancelled."
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.-ctor.html",
    "title": "Constructor SvgSwitchElement | SharpVectors Documentation",
    "keywords": "Constructor SvgSwitchElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgSwitchElement(string, string, string, SvgDocument) public SvgSwitchElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment"
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgSwitchElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSwitchElement.html",
    "title": "Class SvgSwitchElement | SharpVectors Documentation",
    "keywords": "Class SvgSwitchElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgSwitchElement interface corresponds to the 'switch' element. public sealed class SvgSwitchElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgSwitchElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgSwitchElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgSwitchElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgTransformableElement.HandleAttributeChange(XmlAttribute) SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgSwitchElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.-ctor.html",
    "title": "Constructor SvgSymbolElement | SharpVectors Documentation",
    "keywords": "Constructor SvgSymbolElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgSymbolElement(string, string, string, SvgDocument) public SvgSymbolElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height Corresponds to attribute height on the given 'svg' element. public ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.PreserveAspectRatio.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.PreserveAspectRatio.html",
    "title": "Property PreserveAspectRatio | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatio Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreserveAspectRatio public ISvgAnimatedPreserveAspectRatio PreserveAspectRatio { get; } Property Value ISvgAnimatedPreserveAspectRatio"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Containment"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.ViewBox.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.ViewBox.html",
    "title": "Property ViewBox | SharpVectors Documentation",
    "keywords": "Property ViewBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewBox public ISvgAnimatedRect ViewBox { get; } Property Value ISvgAnimatedRect"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width Corresponds to attribute width on the given 'svg' element. public ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X Corresponds to attribute x on the given 'svg' element. public ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y Corresponds to attribute y on the given 'svg' element. public ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgSymbolElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgSymbolElement.html",
    "title": "Class SvgSymbolElement | SharpVectors Documentation",
    "keywords": "Class SvgSymbolElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgSymbolElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgSymbolElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable, ISvgExternalResourcesRequired, ISvgFitToViewBox, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgSymbolElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgSymbolElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgStylable ISvgExternalResourcesRequired ISvgFitToViewBox IEventTarget ISvgElementVisitorTarget Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgSymbolElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Height Corresponds to attribute height on the given 'svg' element. IsRenderable Gets a value indicating whether this SVG element is renderable. PreserveAspectRatio RenderingHint Gets a value providing a hint on the rendering defined by this element. ViewBox Width Corresponds to attribute width on the given 'svg' element. X Corresponds to attribute x on the given 'svg' element. Y Corresponds to attribute y on the given 'svg' element. Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object."
  },
  "api/SharpVectors.Dom.Svg.SvgTRefElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTRefElement.-ctor.html",
    "title": "Constructor SvgTRefElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTRefElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTRefElement(string, string, string, SvgDocument) public SvgTRefElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTRefElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTRefElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgTRefElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTRefElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public XmlElement ReferencedElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgTRefElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTRefElement.html",
    "title": "Class SvgTRefElement | SharpVectors Documentation",
    "keywords": "Class SvgTRefElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgTRefElement. public sealed class SvgTRefElement : SvgTextPositioningElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTRefElement, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgUriReference Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTRefElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTRefElement ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgUriReference Inherited Members SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(string) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(long, long) SvgTextContentElement.GetStartPositionOfChar(long) SvgTextContentElement.GetEndPositionOfChar(long) SvgTextContentElement.GetExtentOfChar(long) SvgTextContentElement.GetRotationOfChar(long) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(long, long) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgTRefElement(string, string, string, SvgDocument) Properties Href ReferencedElement"
  },
  "api/SharpVectors.Dom.Svg.SvgTSpanElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTSpanElement.-ctor.html",
    "title": "Constructor SvgTSpanElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTSpanElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTSpanElement(string, string, string, SvgDocument) public SvgTSpanElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTSpanElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTSpanElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgTSpanElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTSpanElement.html",
    "title": "Class SvgTSpanElement | SharpVectors Documentation",
    "keywords": "Class SvgTSpanElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgTSpanElement interface corresponds to the 'tspan' element. public sealed class SvgTSpanElement : SvgTextPositioningElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTSpanElement, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTSpanElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTSpanElement ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(string) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(long, long) SvgTextContentElement.GetStartPositionOfChar(long) SvgTextContentElement.GetEndPositionOfChar(long) SvgTextContentElement.GetExtentOfChar(long) SvgTextContentElement.GetRotationOfChar(long) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(long, long) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgTSpanElement(string, string, string, SvgDocument) Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object."
  },
  "api/SharpVectors.Dom.Svg.SvgTests.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTests.-ctor.html",
    "title": "Constructor SvgTests | SharpVectors Documentation",
    "keywords": "Constructor SvgTests Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTests(SvgElement) public SvgTests(SvgElement ownerElement) Parameters ownerElement SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgTests.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTests.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgTests.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTests.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgTests.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTests.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgTests.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTests.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgTests.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTests.html",
    "title": "Class SvgTests | SharpVectors Documentation",
    "keywords": "Class SvgTests Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll A class to encapsulate all SvgTest functionality. Used by SVG elements as a helper class public sealed class SvgTests : ISvgTests Inheritance object SvgTests Implements ISvgTests Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgTests(SvgElement) Properties RequiredExtensions RequiredFeatures SystemLanguage Methods HasExtension(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgTextAreaElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextAreaElement.-ctor.html",
    "title": "Constructor SvgTextAreaElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTextAreaElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTextAreaElement(string, string, string, SvgDocument) public SvgTextAreaElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTextAreaElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextAreaElement.html",
    "title": "Class SvgTextAreaElement | SharpVectors Documentation",
    "keywords": "Class SvgTextAreaElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgTextAreaElement. public sealed class SvgTextAreaElement : SvgTextBaseElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTextElement, ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTextBaseElement SvgTextAreaElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTextElement ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTextBaseElement.LetterSpacing SvgTextBaseElement.TextLength SvgTextBaseElement.Accept(ISvgElementVisitor) SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(string) SvgTextContentElement.LengthAdjust SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(long, long) SvgTextContentElement.GetStartPositionOfChar(long) SvgTextContentElement.GetEndPositionOfChar(long) SvgTextContentElement.GetExtentOfChar(long) SvgTextContentElement.GetRotationOfChar(long) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(long, long) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgTextAreaElement(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgTextBaseElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextBaseElement.-ctor.html",
    "title": "Constructor SvgTextBaseElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTextBaseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTextBaseElement(string, string, string, SvgDocument) protected SvgTextBaseElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTextBaseElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextBaseElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgTextBaseElement.LetterSpacing.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextBaseElement.LetterSpacing.html",
    "title": "Property LetterSpacing | SharpVectors Documentation",
    "keywords": "Property LetterSpacing Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LetterSpacing public override ISvgAnimatedLength LetterSpacing { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgTextBaseElement.TextLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextBaseElement.TextLength.html",
    "title": "Property TextLength | SharpVectors Documentation",
    "keywords": "Property TextLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TextLength public override ISvgAnimatedLength TextLength { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgTextBaseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextBaseElement.html",
    "title": "Class SvgTextBaseElement | SharpVectors Documentation",
    "keywords": "Class SvgTextBaseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgTextElement. public abstract class SvgTextBaseElement : SvgTextPositioningElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTextElement, ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTextBaseElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTextElement ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Derived SvgTextAreaElement SvgTextElement Inherited Members SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(string) SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(long, long) SvgTextContentElement.GetStartPositionOfChar(long) SvgTextContentElement.GetEndPositionOfChar(long) SvgTextContentElement.GetExtentOfChar(long) SvgTextContentElement.GetRotationOfChar(long) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(long, long) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgTextBaseElement(string, string, string, SvgDocument) Properties LetterSpacing TextLength Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object."
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.-ctor.html",
    "title": "Constructor SvgTextContentElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTextContentElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTextContentElement(string, string, string, SvgDocument) protected SvgTextContentElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.ElementChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.ElementChange.html",
    "title": "Method ElementChange | SharpVectors Documentation",
    "keywords": "Method ElementChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ElementChange(object, XmlNodeChangedEventArgs) Called when this element is changing in one of the following ways public override void ElementChange(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetCharNumAtPosition.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetCharNumAtPosition.html",
    "title": "Method GetCharNumAtPosition | SharpVectors Documentation",
    "keywords": "Method GetCharNumAtPosition Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetCharNumAtPosition(ISvgPoint) public long GetCharNumAtPosition(ISvgPoint point) Parameters point ISvgPoint Returns long"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetComputedTextLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetComputedTextLength.html",
    "title": "Method GetComputedTextLength | SharpVectors Documentation",
    "keywords": "Method GetComputedTextLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetComputedTextLength() public float GetComputedTextLength() Returns float"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetEndPositionOfChar.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetEndPositionOfChar.html",
    "title": "Method GetEndPositionOfChar | SharpVectors Documentation",
    "keywords": "Method GetEndPositionOfChar Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetEndPositionOfChar(long) public ISvgPoint GetEndPositionOfChar(long charnum) Parameters charnum long Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetExtentOfChar.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetExtentOfChar.html",
    "title": "Method GetExtentOfChar | SharpVectors Documentation",
    "keywords": "Method GetExtentOfChar Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetExtentOfChar(long) public ISvgRect GetExtentOfChar(long charnum) Parameters charnum long Returns ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetNumberOfChars.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetNumberOfChars.html",
    "title": "Method GetNumberOfChars | SharpVectors Documentation",
    "keywords": "Method GetNumberOfChars Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetNumberOfChars() public long GetNumberOfChars() Returns long"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetRotationOfChar.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetRotationOfChar.html",
    "title": "Method GetRotationOfChar | SharpVectors Documentation",
    "keywords": "Method GetRotationOfChar Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetRotationOfChar(long) public float GetRotationOfChar(long charnum) Parameters charnum long Returns float"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetStartPositionOfChar.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetStartPositionOfChar.html",
    "title": "Method GetStartPositionOfChar | SharpVectors Documentation",
    "keywords": "Method GetStartPositionOfChar Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetStartPositionOfChar(long) public ISvgPoint GetStartPositionOfChar(long charnum) Parameters charnum long Returns ISvgPoint"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetSubStringLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.GetSubStringLength.html",
    "title": "Method GetSubStringLength | SharpVectors Documentation",
    "keywords": "Method GetSubStringLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetSubStringLength(long, long) public float GetSubStringLength(long charnum, long nchars) Parameters charnum long nchars long Returns float"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.Invalidate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.Invalidate.html",
    "title": "Method Invalidate | SharpVectors Documentation",
    "keywords": "Method Invalidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Invalidate() public void Invalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.LengthAdjust.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.LengthAdjust.html",
    "title": "Property LengthAdjust | SharpVectors Documentation",
    "keywords": "Property LengthAdjust Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LengthAdjust public virtual ISvgAnimatedEnumeration LengthAdjust { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.LetterSpacing.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.LetterSpacing.html",
    "title": "Property LetterSpacing | SharpVectors Documentation",
    "keywords": "Property LetterSpacing Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LetterSpacing public virtual ISvgAnimatedLength LetterSpacing { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.OwnerTextElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.OwnerTextElement.html",
    "title": "Property OwnerTextElement | SharpVectors Documentation",
    "keywords": "Property OwnerTextElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OwnerTextElement protected SvgTextBaseElement OwnerTextElement { get; } Property Value SvgTextBaseElement"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.RenderingHint.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.RenderingHint.html",
    "title": "Property RenderingHint | SharpVectors Documentation",
    "keywords": "Property RenderingHint Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RenderingHint Gets a value providing a hint on the rendering defined by this element. public override SvgRenderingHint RenderingHint { get; } Property Value SvgRenderingHint An enumeration of the SvgRenderingHint specifying the rendering hint. This will always return Text"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.SelectSubString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.SelectSubString.html",
    "title": "Method SelectSubString | SharpVectors Documentation",
    "keywords": "Method SelectSubString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SelectSubString(long, long) public void SelectSubString(long charnum, long nchars) Parameters charnum long nchars long"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.TextLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.TextLength.html",
    "title": "Property TextLength | SharpVectors Documentation",
    "keywords": "Property TextLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TextLength public virtual ISvgAnimatedLength TextLength { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgTextContentElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextContentElement.html",
    "title": "Class SvgTextContentElement | SharpVectors Documentation",
    "keywords": "Class SvgTextContentElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgTextContentElement. public abstract class SvgTextContentElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget Derived SvgAElement SvgTextPathElement SvgTextPositioningElement Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgTextContentElement(string, string, string, SvgDocument) Properties ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. LengthAdjust LetterSpacing OwnerTextElement RenderingHint Gets a value providing a hint on the rendering defined by this element. RequiredExtensions RequiredFeatures SystemLanguage TextLength Methods ElementChange(object, XmlNodeChangedEventArgs) Called when this element is changing in one of the following ways GetCharNumAtPosition(ISvgPoint) GetComputedTextLength() GetEndPositionOfChar(long) GetExtentOfChar(long) GetNumberOfChars() GetRotationOfChar(long) GetStartPositionOfChar(long) GetSubStringLength(long, long) HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) Invalidate() SelectSubString(long, long)"
  },
  "api/SharpVectors.Dom.Svg.SvgTextElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextElement.-ctor.html",
    "title": "Constructor SvgTextElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTextElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTextElement(string, string, string, SvgDocument) public SvgTextElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTextElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextElement.html",
    "title": "Class SvgTextElement | SharpVectors Documentation",
    "keywords": "Class SvgTextElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgTextElement. public sealed class SvgTextElement : SvgTextBaseElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTextElement, ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement SvgTextBaseElement SvgTextElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTextElement ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTextBaseElement.LetterSpacing SvgTextBaseElement.TextLength SvgTextBaseElement.Accept(ISvgElementVisitor) SvgTextPositioningElement.X SvgTextPositioningElement.Y SvgTextPositioningElement.Dx SvgTextPositioningElement.Dy SvgTextPositioningElement.Rotate SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(string) SvgTextContentElement.LengthAdjust SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(long, long) SvgTextContentElement.GetStartPositionOfChar(long) SvgTextContentElement.GetEndPositionOfChar(long) SvgTextContentElement.GetExtentOfChar(long) SvgTextContentElement.GetRotationOfChar(long) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(long, long) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgTextElement(string, string, string, SvgDocument)"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.-ctor.html",
    "title": "Constructor SvgTextPathElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTextPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTextPathElement(string, string, string, SvgDocument) public SvgTextPathElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.LengthAdjust.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.LengthAdjust.html",
    "title": "Property LengthAdjust | SharpVectors Documentation",
    "keywords": "Property LengthAdjust Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll LengthAdjust public override ISvgAnimatedEnumeration LengthAdjust { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.Method.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.Method.html",
    "title": "Property Method | SharpVectors Documentation",
    "keywords": "Property Method Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Method public ISvgAnimatedEnumeration Method { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public XmlElement ReferencedElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.Spacing.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.Spacing.html",
    "title": "Property Spacing | SharpVectors Documentation",
    "keywords": "Property Spacing Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Spacing public ISvgAnimatedEnumeration Spacing { get; } Property Value ISvgAnimatedEnumeration"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.StartOffset.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.StartOffset.html",
    "title": "Property StartOffset | SharpVectors Documentation",
    "keywords": "Property StartOffset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll StartOffset public ISvgAnimatedLength StartOffset { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.TextLength.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.TextLength.html",
    "title": "Property TextLength | SharpVectors Documentation",
    "keywords": "Property TextLength Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TextLength public override ISvgAnimatedLength TextLength { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathElement.html",
    "title": "Class SvgTextPathElement | SharpVectors Documentation",
    "keywords": "Class SvgTextPathElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The implementation of the ISvgTextPathElement interface corresponds to the 'textPath' element. public sealed class SvgTextPathElement : SvgTextContentElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTextPathElement, ISvgUriReference, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPathElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextPathElement ISvgUriReference ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(string) SvgTextContentElement.LetterSpacing SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(long, long) SvgTextContentElement.GetStartPositionOfChar(long) SvgTextContentElement.GetEndPositionOfChar(long) SvgTextContentElement.GetExtentOfChar(long) SvgTextContentElement.GetRotationOfChar(long) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(long, long) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgTextPathElement(string, string, string, SvgDocument) Properties Href LengthAdjust Method ReferencedElement Spacing StartOffset TextLength Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object."
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathMethod.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathMethod.html",
    "title": "Enum SvgTextPathMethod | SharpVectors Documentation",
    "keywords": "Enum SvgTextPathMethod Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Indicates the method by which text should be rendered along the path. public enum SvgTextPathMethod Fields Align = 0 A value of align indicates that the glyphs should be rendered using simple 2x3 transformations such that there is no stretching/warping of the glyphs. Typically, supplemental rotation, scaling and translation transformations are done for each glyph to be rendered. As a result, with align, fonts where the glyphs are designed to be connected (e.g., cursive fonts), the connections may not align properly when text is rendered along a path. Stretch = 1 A value of stretch indicates that the glyph outlines will be converted into paths, and then all end points and control points will be adjusted to be along the perpendicular vectors from the path, thereby stretching and possibly warping the glyphs. With this approach, connected glyphs, such as in cursive scripts, will maintain their connections."
  },
  "api/SharpVectors.Dom.Svg.SvgTextPathSpacing.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPathSpacing.html",
    "title": "Enum SvgTextPathSpacing | SharpVectors Documentation",
    "keywords": "Enum SvgTextPathSpacing Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Indicates how the user agent should determine the spacing between glyphs that are to be rendered along a path. public enum SvgTextPathSpacing Fields Exact = 0 A value of exact indicates that the glyphs should be rendered exactly according to the spacing rules as specified in \"Text on a path layout rules\". Auto = 1 A value of auto indicates that the user agent should use text-on-a-path layout algorithms to adjust the spacing between glyphs in order to achieve visually appealing results."
  },
  "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.-ctor.html",
    "title": "Constructor SvgTextPositioningElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTextPositioningElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTextPositioningElement(string, string, string, SvgDocument) public SvgTextPositioningElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.Dx.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.Dx.html",
    "title": "Property Dx | SharpVectors Documentation",
    "keywords": "Property Dx Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Dx public ISvgAnimatedLengthList Dx { get; } Property Value ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.Dy.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.Dy.html",
    "title": "Property Dy | SharpVectors Documentation",
    "keywords": "Property Dy Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Dy public ISvgAnimatedLengthList Dy { get; } Property Value ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.Rotate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.Rotate.html",
    "title": "Property Rotate | SharpVectors Documentation",
    "keywords": "Property Rotate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Rotate public ISvgAnimatedNumberList Rotate { get; } Property Value ISvgAnimatedNumberList"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public ISvgAnimatedLengthList X { get; } Property Value ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public ISvgAnimatedLengthList Y { get; } Property Value ISvgAnimatedLengthList"
  },
  "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextPositioningElement.html",
    "title": "Class SvgTextPositioningElement | SharpVectors Documentation",
    "keywords": "Class SvgTextPositioningElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgTextPositioningElement interface is inherited by text-related interfaces: SvgTextElement, SvgTSpanElement, SvgTRefElement and SvgAltGlyphElement. public abstract class SvgTextPositioningElement : SvgTextContentElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgTransformable, ISvgLocatable, ISvgTextPositioningElement, ISvgTextContentElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgTests, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgStylable, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgTextContentElement SvgTextPositioningElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgTransformable ISvgLocatable ISvgTextPositioningElement ISvgTextContentElement ISvgElement IElement IXmlElement INode IXmlNode ISvgTests ISvgLangSpace ISvgExternalResourcesRequired ISvgStylable IEventTarget Derived SvgAltGlyphElement SvgTRefElement SvgTSpanElement SvgTextBaseElement Inherited Members SvgTextContentElement.RenderingHint SvgTextContentElement.ExternalResourcesRequired SvgTextContentElement.RequiredFeatures SvgTextContentElement.RequiredExtensions SvgTextContentElement.SystemLanguage SvgTextContentElement.HasExtension(string) SvgTextContentElement.LetterSpacing SvgTextContentElement.TextLength SvgTextContentElement.LengthAdjust SvgTextContentElement.OwnerTextElement SvgTextContentElement.Invalidate() SvgTextContentElement.HandleAttributeChange(XmlAttribute) SvgTextContentElement.ElementChange(object, XmlNodeChangedEventArgs) SvgTextContentElement.GetNumberOfChars() SvgTextContentElement.GetComputedTextLength() SvgTextContentElement.GetSubStringLength(long, long) SvgTextContentElement.GetStartPositionOfChar(long) SvgTextContentElement.GetEndPositionOfChar(long) SvgTextContentElement.GetExtentOfChar(long) SvgTextContentElement.GetRotationOfChar(long) SvgTextContentElement.GetCharNumAtPosition(ISvgPoint) SvgTextContentElement.SelectSubString(long, long) SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgTextPositioningElement(string, string, string, SvgDocument) Properties Dx Dy Rotate X Y"
  },
  "api/SharpVectors.Dom.Svg.SvgTextReader.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextReader.-ctor.html",
    "title": "Constructor SvgTextReader | SharpVectors Documentation",
    "keywords": "Constructor SvgTextReader Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTextReader() protected SvgTextReader()"
  },
  "api/SharpVectors.Dom.Svg.SvgTextReader.Column.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextReader.Column.html",
    "title": "Property Column | SharpVectors Documentation",
    "keywords": "Property Column Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Column Gets the current column in the stream. public abstract int Column { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.SvgTextReader.Line.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextReader.Line.html",
    "title": "Property Line | SharpVectors Documentation",
    "keywords": "Property Line Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Line Gets the current line in the stream. public abstract int Line { get; } Property Value int"
  },
  "api/SharpVectors.Dom.Svg.SvgTextReader.Read.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextReader.Read.html",
    "title": "Method Read | SharpVectors Documentation",
    "keywords": "Method Read Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Read() public abstract int Read() Returns int Read(char[], int, int) Read characters into a portion of an array. public virtual int Read(char[] cbuf, int off, int len) Parameters cbuf char[] Destination buffer off int Offset at which to start writing characters len int Maximum number of characters to read Returns int The number of characters read, or -1 if the end of the stream has been reached"
  },
  "api/SharpVectors.Dom.Svg.SvgTextReader.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTextReader.html",
    "title": "Class SvgTextReader | SharpVectors Documentation",
    "keywords": "Class SvgTextReader Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll This class represents a reader which normalizes the line break: \\n, \\r, \\r\\n are replaced by \\n. The methods of this reader are not synchronized. The input is buffered. public abstract class SvgTextReader Inheritance object SvgTextReader Derived SvgStringReader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgTextReader() Properties Column Gets the current column in the stream. Line Gets the current line in the stream. Methods Read() Read(char[], int, int) Read characters into a portion of an array."
  },
  "api/SharpVectors.Dom.Svg.SvgTitleElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTitleElement.-ctor.html",
    "title": "Constructor SvgTitleElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTitleElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTitleElement(string, string, string, SvgDocument) public SvgTitleElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTitleElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTitleElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgTitleElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTitleElement.html",
    "title": "Class SvgTitleElement | SharpVectors Documentation",
    "keywords": "Class SvgTitleElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgTitleElement interface corresponds to the 'title' element. public sealed class SvgTitleElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgTitleElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgLangSpace, ISvgStylable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTitleElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgTitleElement ISvgElement IElement IXmlElement INode IXmlNode ISvgLangSpace ISvgStylable Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgStyleableElement.HandleAttributeChange(XmlAttribute) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgTitleElement(string, string, string, SvgDocument) Properties IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.-ctor.html",
    "title": "Constructor SvgTransform | SharpVectors Documentation",
    "keywords": "Constructor SvgTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTransform() public SvgTransform() SvgTransform(ISvgMatrix) public SvgTransform(ISvgMatrix matrix) Parameters matrix ISvgMatrix SvgTransform(string) public SvgTransform(string str) Parameters str string"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.Angle.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.Angle.html",
    "title": "Property Angle | SharpVectors Documentation",
    "keywords": "Property Angle Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Angle public double Angle { get; } Property Value double"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.InputValues.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.InputValues.html",
    "title": "Property InputValues | SharpVectors Documentation",
    "keywords": "Property InputValues Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll InputValues public double[] InputValues { get; } Property Value double[]"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.Matrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.Matrix.html",
    "title": "Property Matrix | SharpVectors Documentation",
    "keywords": "Property Matrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Matrix public ISvgMatrix Matrix { get; } Property Value ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.SetMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.SetMatrix.html",
    "title": "Method SetMatrix | SharpVectors Documentation",
    "keywords": "Method SetMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetMatrix(ISvgMatrix) public void SetMatrix(ISvgMatrix matrix) Parameters matrix ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.SetRotate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.SetRotate.html",
    "title": "Method SetRotate | SharpVectors Documentation",
    "keywords": "Method SetRotate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetRotate(double) public void SetRotate(double angle) Parameters angle double SetRotate(double, double, double) public void SetRotate(double angle, double cx, double cy) Parameters angle double cx double cy double"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.SetScale.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.SetScale.html",
    "title": "Method SetScale | SharpVectors Documentation",
    "keywords": "Method SetScale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetScale(double, double) public void SetScale(double sx, double sy) Parameters sx double sy double"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.SetSkewX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.SetSkewX.html",
    "title": "Method SetSkewX | SharpVectors Documentation",
    "keywords": "Method SetSkewX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetSkewX(double) public void SetSkewX(double angle) Parameters angle double"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.SetSkewY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.SetSkewY.html",
    "title": "Method SetSkewY | SharpVectors Documentation",
    "keywords": "Method SetSkewY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetSkewY(double) public void SetSkewY(double angle) Parameters angle double"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.SetTranslate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.SetTranslate.html",
    "title": "Method SetTranslate | SharpVectors Documentation",
    "keywords": "Method SetTranslate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SetTranslate(double, double) public void SetTranslate(double tx, double ty) Parameters tx double ty double"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.TransformType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.TransformType.html",
    "title": "Property TransformType | SharpVectors Documentation",
    "keywords": "Property TransformType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TransformType public SvgTransformType TransformType { get; } Property Value SvgTransformType"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.Type.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.Type.html",
    "title": "Property Type | SharpVectors Documentation",
    "keywords": "Property Type Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Type public short Type { get; } Property Value short"
  },
  "api/SharpVectors.Dom.Svg.SvgTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransform.html",
    "title": "Class SvgTransform | SharpVectors Documentation",
    "keywords": "Class SvgTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgTransform. public sealed class SvgTransform : ISvgTransform Inheritance object SvgTransform Implements ISvgTransform Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgTransform() SvgTransform(ISvgMatrix) SvgTransform(string) Properties Angle InputValues Matrix TransformType Type Methods SetMatrix(ISvgMatrix) SetRotate(double) SetRotate(double, double, double) SetScale(double, double) SetSkewX(double) SetSkewY(double) SetTranslate(double, double)"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.-ctor.html",
    "title": "Constructor SvgTransformF | SharpVectors Documentation",
    "keywords": "Constructor SvgTransformF Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll SvgTransformF() Initializes a new instance of the SvgTransformF class as the identity transform or matrix. public SvgTransformF() SvgTransformF(SvgRectF, SvgPointF[]) Initializes a new instance of the SvgTransformF class to the geometric transform defined by the specified rectangle and array of points. public SvgTransformF(SvgRectF rect, SvgPointF[] plgpts) Parameters rect SvgRectF A SvgRectF structure that represents the rectangle to be transformed. plgpts SvgPointF[] An array of three SvgPointF structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners. Exceptions ArgumentNullException If the plgpts is null. ArgumentException If the length of the plgpts array is not equal to 3. ArgumentOutOfRangeException If the width or height of the rect is zero. SvgTransformF(float[]) Initializes a new instance of the SvgTransformF class with the specified elements. public SvgTransformF(float[] elements) Parameters elements float[] An array of six items defining the transform. Exceptions ArgumentNullException If the elements is null. ArgumentException If the length of the elements array is not equal to 6. SvgTransformF(float, float, float, float, float, float) Initializes a new instance of the SvgTransformF class with the specified elements. public SvgTransformF(float m11, float m12, float m21, float m22, float dx, float dy) Parameters m11 float The value in the first row and first column of the new SvgTransformF. m12 float The value in the first row and second column of the new SvgTransformF. m21 float The value in the second row and first column of the new SvgTransformF. m22 float The value in the second row and second column of the new SvgTransformF. dx float The value in the third row and first column of the new SvgTransformF. dy float The value in the third row and second column of the new SvgTransformF. SvgTransformF(SvgTransformF) Initializes a new instance of the SvgTransformF class with parameters copied from the specified parameter, a copy constructor. public SvgTransformF(SvgTransformF source) Parameters source SvgTransformF The SvgTransformF instance from which the parameters are to be copied. Exceptions ArgumentNullException If the source is null."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Clone.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Clone.html",
    "title": "Method Clone | SharpVectors Documentation",
    "keywords": "Method Clone Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Clone() This creates a new SvgTransformF that is a deep copy of the current instance. public SvgTransformF Clone() Returns SvgTransformF A new object that is a copy of this instance."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Elements.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Elements.html",
    "title": "Property Elements | SharpVectors Documentation",
    "keywords": "Property Elements Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Elements Gets an array of floating-point values that represents the elements of this SvgTransformF. public float[] Elements { get; } Property Value float[] An array of floating-point values that represents the elements of this SvgTransformF."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Equals.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Equals.html",
    "title": "Method Equals | SharpVectors Documentation",
    "keywords": "Method Equals Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Equals(object) Determine whether the specified object is a SvgTransformF and is identical to this SvgTransformF. public override bool Equals(object obj) Parameters obj object The object to test. Returns bool This method returns true if obj is the specified SvgTransformF identical to this SvgTransformF; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.GetHashCode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.GetHashCode.html",
    "title": "Method GetHashCode | SharpVectors Documentation",
    "keywords": "Method GetHashCode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll GetHashCode() Returns a hash code. public override int GetHashCode() Returns int The hash code for this SvgTransformF."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Invert.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Invert.html",
    "title": "Method Invert | SharpVectors Documentation",
    "keywords": "Method Invert Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Invert() Inverts this SvgTransformF, if it is invertible. public void Invert()"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.IsIdentity.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.IsIdentity.html",
    "title": "Property IsIdentity | SharpVectors Documentation",
    "keywords": "Property IsIdentity Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsIdentity Gets a value indicating whether this SvgTransformF is the identity matrix. public bool IsIdentity { get; } Property Value bool This property is true if this SvgTransformF is identity; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.IsInvertible.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.IsInvertible.html",
    "title": "Property IsInvertible | SharpVectors Documentation",
    "keywords": "Property IsInvertible Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll IsInvertible Gets a value indicating whether this SvgTransformF is invertible. public bool IsInvertible { get; } Property Value bool This property is true if this SvgTransformF is invertible; otherwise, false."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Multiply.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Multiply.html",
    "title": "Method Multiply | SharpVectors Documentation",
    "keywords": "Method Multiply Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Multiply(SvgTransformF) Multiplies this SvgTransformF by the specified SvgTransformF by prepending the specified SvgTransformF. public void Multiply(SvgTransformF matrix) Parameters matrix SvgTransformF The SvgTransformF by which this SvgTransformF is to be multiplied. Multiply(SvgTransformF, SvgTransformOrder) Multiplies this SvgTransformF by the matrix specified in the matrix parameter, and in the order specified in the order parameter. public void Multiply(SvgTransformF matrix, SvgTransformOrder order) Parameters matrix SvgTransformF The SvgTransformF by which this SvgTransformF is to be multiplied. order SvgTransformOrder The SvgTransformOrder that represents the order of the multiplication."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.OffsetX.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.OffsetX.html",
    "title": "Property OffsetX | SharpVectors Documentation",
    "keywords": "Property OffsetX Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll OffsetX Gets the x translation value (the dx value, or the element in the third row and first column) of this SvgTransformF. public float OffsetX { get; } Property Value float The x translation value of this SvgTransformF."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.OffsetY.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.OffsetY.html",
    "title": "Property OffsetY | SharpVectors Documentation",
    "keywords": "Property OffsetY Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll OffsetY Gets the y translation value (the dy value, or the element in the third row and second column) of this SvgTransformF. public float OffsetY { get; } Property Value float The y translation value of this SvgTransformF."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Reset.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Reset.html",
    "title": "Method Reset | SharpVectors Documentation",
    "keywords": "Method Reset Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Reset() Resets this SvgTransformF to have the elements of the identity matrix. public void Reset()"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.ReverseTransform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.ReverseTransform.html",
    "title": "Method ReverseTransform | SharpVectors Documentation",
    "keywords": "Method ReverseTransform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll ReverseTransform(float, float, out float, out float) Applies the reverse geometric transform represented by this SvgTransformF to a specified point. public void ReverseTransform(float x, float y, out float ox, out float oy) Parameters x float The input x value of the point. y float The input y value of the point. ox float The transformed x value of the point. oy float The transformed y value of the point."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Rotate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Rotate.html",
    "title": "Method Rotate | SharpVectors Documentation",
    "keywords": "Method Rotate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Rotate(float) Applies a clockwise rotation of the specified angle about the origin to this SvgTransformF. public void Rotate(float angle) Parameters angle float The angle (extent) of the rotation, in degrees. Rotate(float, SvgTransformOrder) Applies a clockwise rotation of the specified angle about the origin to this SvgTransformF, and in the order specified in the order parameter. public void Rotate(float angle, SvgTransformOrder order) Parameters angle float The angle (extent) of the rotation, in degrees. order SvgTransformOrder A SvgTransformOrder that specifies the order (append or prepend) in which the rotation is applied to this SvgTransformF."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.RotateAt.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.RotateAt.html",
    "title": "Method RotateAt | SharpVectors Documentation",
    "keywords": "Method RotateAt Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll RotateAt(float, SvgPointF) Applies a clockwise rotation about the specified point to this SvgTransformF by prepending the rotation. public void RotateAt(float angle, SvgPointF point) Parameters angle float The angle (extent) of the rotation, in degrees. point SvgPointF A SvgPointF that represents the center of the rotation. RotateAt(float, SvgPointF, SvgTransformOrder) Applies a clockwise rotation about the specified point to this SvgTransformF in the specified order. public void RotateAt(float angle, SvgPointF point, SvgTransformOrder order) Parameters angle float The angle (extent) of the rotation, in degrees. point SvgPointF A SvgPointF that represents the center of the rotation. order SvgTransformOrder A SvgTransformOrder that specifies the order (append or prepend) in which the rotation is applied."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Scale.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Scale.html",
    "title": "Method Scale | SharpVectors Documentation",
    "keywords": "Method Scale Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Scale(float, float) Applies the specified scale vector to this SvgTransformF by prepending the scale vector. public void Scale(float scaleX, float scaleY) Parameters scaleX float The value by which to scale this SvgTransformF in the x-axis direction. scaleY float The value by which to scale this SvgTransformF in the y-axis direction. Scale(float, float, SvgTransformOrder) Applies the specified scale vector to this SvgTransformF using the specified order. public void Scale(float scaleX, float scaleY, SvgTransformOrder order) Parameters scaleX float The value by which to scale this SvgTransformF in the x-axis direction. scaleY float The value by which to scale this SvgTransformF in the y-axis direction. order SvgTransformOrder A SvgTransformOrder that specifies the order (append or prepend) in which the scale vector is applied to this SvgTransformF."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Shear.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Shear.html",
    "title": "Method Shear | SharpVectors Documentation",
    "keywords": "Method Shear Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Shear(float, float) Applies the specified shear vector to this SvgTransformF by prepending the shear vector. public void Shear(float shearX, float shearY) Parameters shearX float The horizontal shear factor. shearY float The vertical shear factor. Shear(float, float, SvgTransformOrder) Applies the specified shear vector to this SvgTransformF in the specified order. public void Shear(float shearX, float shearY, SvgTransformOrder order) Parameters shearX float The horizontal shear factor. shearY float The vertical shear factor. order SvgTransformOrder A SvgTransformOrder that specifies the order (append or prepend) in which the shear is applied."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Transform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Transform.html",
    "title": "Method Transform | SharpVectors Documentation",
    "keywords": "Method Transform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Transform(float, float, out float, out float) Applies the geometric transform represented by this SvgTransformF to a specified point. public void Transform(float x, float y, out float ox, out float oy) Parameters x float The input x value of the point. y float The input y value of the point. ox float The transformed x value of the point. oy float The transformed y value of the point."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.TransformPoints.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.TransformPoints.html",
    "title": "Method TransformPoints | SharpVectors Documentation",
    "keywords": "Method TransformPoints Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll TransformPoints(SvgPointF[]) Applies the geometric transform represented by this SvgTransformF to a specified array of points. public void TransformPoints(SvgPointF[] pts) Parameters pts SvgPointF[] An array of SvgPointF structures that represents the points to transform."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.TransformVectors.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.TransformVectors.html",
    "title": "Method TransformVectors | SharpVectors Documentation",
    "keywords": "Method TransformVectors Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll TransformVectors(SvgPointF[]) Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored. public void TransformVectors(SvgPointF[] pts) Parameters pts SvgPointF[] An array of SvgPointF structures that represents the points to transform."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.Translate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.Translate.html",
    "title": "Method Translate | SharpVectors Documentation",
    "keywords": "Method Translate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Translate(float, float) Applies the specified translation vector to this SvgTransformF by prepending the translation vector. public void Translate(float offsetX, float offsetY) Parameters offsetX float The x value by which to translate this SvgTransformF. offsetY float The y value by which to translate this SvgTransformF. Translate(float, float, SvgTransformOrder) Applies the specified translation vector to this SvgTransformF in the specified order. public void Translate(float offsetX, float offsetY, SvgTransformOrder order) Parameters offsetX float The x value by which to translate this SvgTransformF. offsetY float The y value by which to translate this SvgTransformF. order SvgTransformOrder A SvgTransformOrder that specifies the order (append or prepend) in which the translation is applied to this SvgTransformF."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformF.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformF.html",
    "title": "Class SvgTransformF | SharpVectors Documentation",
    "keywords": "Class SvgTransformF Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This is an implementation of the 3-by-3 affine matrix that represents a geometric transform. public class SvgTransformF : ICloneable Inheritance object SvgTransformF Implements ICloneable Inherited Members object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors SvgTransformF() Initializes a new instance of the SvgTransformF class as the identity transform or matrix. SvgTransformF(SvgRectF, SvgPointF[]) Initializes a new instance of the SvgTransformF class to the geometric transform defined by the specified rectangle and array of points. SvgTransformF(SvgTransformF) Initializes a new instance of the SvgTransformF class with parameters copied from the specified parameter, a copy constructor. SvgTransformF(float, float, float, float, float, float) Initializes a new instance of the SvgTransformF class with the specified elements. SvgTransformF(float[]) Initializes a new instance of the SvgTransformF class with the specified elements. Properties Elements Gets an array of floating-point values that represents the elements of this SvgTransformF. IsIdentity Gets a value indicating whether this SvgTransformF is the identity matrix. IsInvertible Gets a value indicating whether this SvgTransformF is invertible. OffsetX Gets the x translation value (the dx value, or the element in the third row and first column) of this SvgTransformF. OffsetY Gets the y translation value (the dy value, or the element in the third row and second column) of this SvgTransformF. Methods Clone() This creates a new SvgTransformF that is a deep copy of the current instance. Equals(object) Determine whether the specified object is a SvgTransformF and is identical to this SvgTransformF. GetHashCode() Returns a hash code. Invert() Inverts this SvgTransformF, if it is invertible. Multiply(SvgTransformF) Multiplies this SvgTransformF by the specified SvgTransformF by prepending the specified SvgTransformF. Multiply(SvgTransformF, SvgTransformOrder) Multiplies this SvgTransformF by the matrix specified in the matrix parameter, and in the order specified in the order parameter. Reset() Resets this SvgTransformF to have the elements of the identity matrix. ReverseTransform(float, float, out float, out float) Applies the reverse geometric transform represented by this SvgTransformF to a specified point. Rotate(float) Applies a clockwise rotation of the specified angle about the origin to this SvgTransformF. Rotate(float, SvgTransformOrder) Applies a clockwise rotation of the specified angle about the origin to this SvgTransformF, and in the order specified in the order parameter. RotateAt(float, SvgPointF) Applies a clockwise rotation about the specified point to this SvgTransformF by prepending the rotation. RotateAt(float, SvgPointF, SvgTransformOrder) Applies a clockwise rotation about the specified point to this SvgTransformF in the specified order. Scale(float, float) Applies the specified scale vector to this SvgTransformF by prepending the scale vector. Scale(float, float, SvgTransformOrder) Applies the specified scale vector to this SvgTransformF using the specified order. Shear(float, float) Applies the specified shear vector to this SvgTransformF by prepending the shear vector. Shear(float, float, SvgTransformOrder) Applies the specified shear vector to this SvgTransformF in the specified order. Transform(float, float, out float, out float) Applies the geometric transform represented by this SvgTransformF to a specified point. TransformPoints(SvgPointF[]) Applies the geometric transform represented by this SvgTransformF to a specified array of points. TransformVectors(SvgPointF[]) Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored. Translate(float, float) Applies the specified translation vector to this SvgTransformF by prepending the translation vector. Translate(float, float, SvgTransformOrder) Applies the specified translation vector to this SvgTransformF in the specified order."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformList.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformList.-ctor.html",
    "title": "Constructor SvgTransformList | SharpVectors Documentation",
    "keywords": "Constructor SvgTransformList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTransformList() public SvgTransformList() SvgTransformList(string) public SvgTransformList(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformList.Consolidate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformList.Consolidate.html",
    "title": "Method Consolidate | SharpVectors Documentation",
    "keywords": "Method Consolidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Consolidate() public ISvgTransform Consolidate() Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformList.CreateSvgTransformFromMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformList.CreateSvgTransformFromMatrix.html",
    "title": "Method CreateSvgTransformFromMatrix | SharpVectors Documentation",
    "keywords": "Method CreateSvgTransformFromMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgTransformFromMatrix(ISvgMatrix) public ISvgTransform CreateSvgTransformFromMatrix(ISvgMatrix matrix) Parameters matrix ISvgMatrix Returns ISvgTransform"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformList.FromString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformList.FromString.html",
    "title": "Method FromString | SharpVectors Documentation",
    "keywords": "Method FromString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FromString(string) public void FromString(string listString) Parameters listString string"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformList.TotalMatrix.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformList.TotalMatrix.html",
    "title": "Property TotalMatrix | SharpVectors Documentation",
    "keywords": "Property TotalMatrix Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TotalMatrix public SvgMatrix TotalMatrix { get; } Property Value SvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformList.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformList.html",
    "title": "Class SvgTransformList | SharpVectors Documentation",
    "keywords": "Class SvgTransformList Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Summary description for SvgTransformList. public sealed class SvgTransformList : SvgList<ISvgTransform>, IEnumerable<ISvgTransform>, IEnumerable, ISvgTransformList Inheritance object SvgList<ISvgTransform> SvgTransformList Implements IEnumerable<ISvgTransform> IEnumerable ISvgTransformList Inherited Members SvgList<ISvgTransform>.Count SvgList<ISvgTransform>.this[int] SvgList<ISvgTransform>.NumberOfItems SvgList<ISvgTransform>.Clear() SvgList<ISvgTransform>.Initialize(ISvgTransform) SvgList<ISvgTransform>.GetItem(uint) SvgList<ISvgTransform>.InsertItemBefore(ISvgTransform, uint) SvgList<ISvgTransform>.ReplaceItem(ISvgTransform, uint) SvgList<ISvgTransform>.RemoveItem(uint) SvgList<ISvgTransform>.AppendItem(ISvgTransform) SvgList<ISvgTransform>.GetEnumerator() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgTransformList() SvgTransformList(string) Properties TotalMatrix Methods Consolidate() CreateSvgTransformFromMatrix(ISvgMatrix) FromString(string)"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformOrder.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformOrder.html",
    "title": "Enum SvgTransformOrder | SharpVectors Documentation",
    "keywords": "Enum SvgTransformOrder Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Specifies the order for matrix transform operations. [Serializable] public enum SvgTransformOrder Fields Prepend = 0 The new operation is applied after the old operation. Append = 1 The new operation is applied before the old operation."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformType.html",
    "title": "Enum SvgTransformType | SharpVectors Documentation",
    "keywords": "Enum SvgTransformType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll public enum SvgTransformType : short Fields Unknown = 0 Matrix = 1 Translate = 2 Scale = 3 Rotate = 4 SkewX = 5 SkewY = 6"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.-ctor.html",
    "title": "Constructor SvgTransformableElement | SharpVectors Documentation",
    "keywords": "Constructor SvgTransformableElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgTransformableElement(string, string, string, SvgDocument) public SvgTransformableElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.CssInvalidate.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.CssInvalidate.html",
    "title": "Method CssInvalidate | SharpVectors Documentation",
    "keywords": "Method CssInvalidate Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CssInvalidate() public override void CssInvalidate()"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.FarthestViewportElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.FarthestViewportElement.html",
    "title": "Property FarthestViewportElement | SharpVectors Documentation",
    "keywords": "Property FarthestViewportElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll FarthestViewportElement public ISvgElement FarthestViewportElement { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.GetBBox.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.GetBBox.html",
    "title": "Method GetBBox | SharpVectors Documentation",
    "keywords": "Method GetBBox Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetBBox() public ISvgRect GetBBox() Returns ISvgRect"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.GetCTM.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.GetCTM.html",
    "title": "Method GetCTM | SharpVectors Documentation",
    "keywords": "Method GetCTM Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetCTM() For each given element, the accumulation of all transformations that have been defined on the given element and all of its ancestors up to and including the element that established the current viewport (usually, the 'svg' element which is the most immediate ancestor to the given element) is called the current transformation matrix or CTM. public ISvgMatrix GetCTM() Returns ISvgMatrix A matrix representing the mapping of current user coordinates to viewport coordinates."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.GetScreenCTM.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.GetScreenCTM.html",
    "title": "Method GetScreenCTM | SharpVectors Documentation",
    "keywords": "Method GetScreenCTM Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetScreenCTM() public ISvgMatrix GetScreenCTM() Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.GetTransformToElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.GetTransformToElement.html",
    "title": "Method GetTransformToElement | SharpVectors Documentation",
    "keywords": "Method GetTransformToElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll GetTransformToElement(ISvgElement) public ISvgMatrix GetTransformToElement(ISvgElement element) Parameters element ISvgElement Returns ISvgMatrix"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.NearestViewportElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.NearestViewportElement.html",
    "title": "Property NearestViewportElement | SharpVectors Documentation",
    "keywords": "Property NearestViewportElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll NearestViewportElement public ISvgElement NearestViewportElement { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.Transform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.Transform.html",
    "title": "Property Transform | SharpVectors Documentation",
    "keywords": "Property Transform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Transform public ISvgAnimatedTransformList Transform { get; } Property Value ISvgAnimatedTransformList"
  },
  "api/SharpVectors.Dom.Svg.SvgTransformableElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgTransformableElement.html",
    "title": "Class SvgTransformableElement | SharpVectors Documentation",
    "keywords": "Class SvgTransformableElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public class SvgTransformableElement : SvgStyleableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgStylable, ISvgTransformable, ISvgLocatable Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgElement IElement IXmlElement INode IXmlNode ISvgStylable ISvgTransformable ISvgLocatable Derived SvgCircleElement SvgClipPathElement SvgDefsElement SvgEllipseElement SvgGElement SvgImageElement SvgLineElement SvgPathElement SvgPolyElement SvgRectElement SvgSvgElement SvgSwitchElement SvgTextContentElement SvgUseElement Inherited Members SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement._isImported CssXmlElement._importNode CssXmlElement._importDocument CssXmlElement._cachedCSD CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireCssChange() CssXmlElement.FireAttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.FireParentNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.FireChildNodeChange(object, XmlNodeChangedEventArgs, bool) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgTransformableElement(string, string, string, SvgDocument) Properties FarthestViewportElement NearestViewportElement Transform Methods CssInvalidate() GetBBox() GetCTM() For each given element, the accumulation of all transformations that have been defined on the given element and all of its ancestors up to and including the element that established the current viewport (usually, the 'svg' element which is the most immediate ancestor to the given element) is called the current transformation matrix or CTM. GetScreenCTM() GetTransformToElement(ISvgElement) HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties."
  },
  "api/SharpVectors.Dom.Svg.SvgUnitType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUnitType.html",
    "title": "Enum SvgUnitType | SharpVectors Documentation",
    "keywords": "Enum SvgUnitType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll This defines a commonly used set of constants and is a base interface used by ISvgGradientElement, ISvgPatternElement, ISvgClipPathElement, ISvgMaskElement and ISvgFilterElement. public enum SvgUnitType : ushort Fields Unknown = 0 The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type. UserSpaceOnUse = 1 Corresponds to value 'userSpaceOnUse'. ObjectBoundingBox = 2 Corresponds to value 'objectBoundingBox'."
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.-ctor.html",
    "title": "Constructor SvgUriReference | SharpVectors Documentation",
    "keywords": "Constructor SvgUriReference Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgUriReference(SvgElement) public SvgUriReference(SvgElement ownerElement) Parameters ownerElement SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.AbsoluteUri.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.AbsoluteUri.html",
    "title": "Property AbsoluteUri | SharpVectors Documentation",
    "keywords": "Property AbsoluteUri Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AbsoluteUri public string AbsoluteUri { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.IsEmpty.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.IsEmpty.html",
    "title": "Property IsEmpty | SharpVectors Documentation",
    "keywords": "Property IsEmpty Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsEmpty public bool IsEmpty { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.IsSupported.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.IsSupported.html",
    "title": "Property IsSupported | SharpVectors Documentation",
    "keywords": "Property IsSupported Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsSupported public bool IsSupported { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.OwnerElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.OwnerElement.html",
    "title": "Property OwnerElement | SharpVectors Documentation",
    "keywords": "Property OwnerElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OwnerElement public SvgElement OwnerElement { get; } Property Value SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.ReferencedNode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.ReferencedNode.html",
    "title": "Property ReferencedNode | SharpVectors Documentation",
    "keywords": "Property ReferencedNode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedNode public XmlNode ReferencedNode { get; } Property Value XmlNode"
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.ReferencedResource.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.ReferencedResource.html",
    "title": "Property ReferencedResource | SharpVectors Documentation",
    "keywords": "Property ReferencedResource Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedResource public WebResponse ReferencedResource { get; } Property Value WebResponse"
  },
  "api/SharpVectors.Dom.Svg.SvgUriReference.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUriReference.html",
    "title": "Class SvgUriReference | SharpVectors Documentation",
    "keywords": "Class SvgUriReference Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgUriReference : ISvgUriReference Inheritance object SvgUriReference Implements ISvgUriReference Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgUriReference(SvgElement) Properties AbsoluteUri Href IsEmpty IsSupported OwnerElement ReferencedNode ReferencedResource"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.-ctor.html",
    "title": "Constructor SvgUseElement | SharpVectors Documentation",
    "keywords": "Constructor SvgUseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgUseElement(string, string, string, SvgDocument) public SvgUseElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.Accept.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.Accept.html",
    "title": "Method Accept | SharpVectors Documentation",
    "keywords": "Method Accept Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. public void Accept(ISvgElementVisitor visitor) Parameters visitor ISvgElementVisitor An implementation of the ISvgElementVisitor interface, to which the rendering operation is delegated."
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.AnimatedInstanceRoot.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.AnimatedInstanceRoot.html",
    "title": "Property AnimatedInstanceRoot | SharpVectors Documentation",
    "keywords": "Property AnimatedInstanceRoot Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AnimatedInstanceRoot public ISvgElementInstance AnimatedInstanceRoot { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.CopyToReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.CopyToReferencedElement.html",
    "title": "Method CopyToReferencedElement | SharpVectors Documentation",
    "keywords": "Method CopyToReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CopyToReferencedElement(XmlElement) public void CopyToReferencedElement(XmlElement refEl) Parameters refEl XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.ExternalResourcesRequired.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.ExternalResourcesRequired.html",
    "title": "Property ExternalResourcesRequired | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesRequired Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. public ISvgAnimatedBoolean ExternalResourcesRequired { get; } Property Value ISvgAnimatedBoolean"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.HandleAttributeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.HandleAttributeChange.html",
    "title": "Method HandleAttributeChange | SharpVectors Documentation",
    "keywords": "Method HandleAttributeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. public override void HandleAttributeChange(XmlAttribute attribute) Parameters attribute XmlAttribute The attribute that is changing."
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.HasExtension.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.HasExtension.html",
    "title": "Method HasExtension | SharpVectors Documentation",
    "keywords": "Method HasExtension Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll HasExtension(string) public bool HasExtension(string extension) Parameters extension string Returns bool"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.Height.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.Height.html",
    "title": "Property Height | SharpVectors Documentation",
    "keywords": "Property Height Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Height public ISvgAnimatedLength Height { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.Href.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.Href.html",
    "title": "Property Href | SharpVectors Documentation",
    "keywords": "Property Href Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Href public ISvgAnimatedString Href { get; } Property Value ISvgAnimatedString"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.InstanceRoot.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.InstanceRoot.html",
    "title": "Property InstanceRoot | SharpVectors Documentation",
    "keywords": "Property InstanceRoot Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll InstanceRoot public ISvgElementInstance InstanceRoot { get; } Property Value ISvgElementInstance"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.OnReferencedNodeChange.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.OnReferencedNodeChange.html",
    "title": "Method OnReferencedNodeChange | SharpVectors Documentation",
    "keywords": "Method OnReferencedNodeChange Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll OnReferencedNodeChange(object, XmlNodeChangedEventArgs) public void OnReferencedNodeChange(object src, XmlNodeChangedEventArgs args) Parameters src object args XmlNodeChangedEventArgs"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.ReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.ReferencedElement.html",
    "title": "Property ReferencedElement | SharpVectors Documentation",
    "keywords": "Property ReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ReferencedElement public XmlElement ReferencedElement { get; } Property Value XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.RequiredExtensions.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.RequiredExtensions.html",
    "title": "Property RequiredExtensions | SharpVectors Documentation",
    "keywords": "Property RequiredExtensions Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredExtensions public ISvgStringList RequiredExtensions { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.RequiredFeatures.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.RequiredFeatures.html",
    "title": "Property RequiredFeatures | SharpVectors Documentation",
    "keywords": "Property RequiredFeatures Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RequiredFeatures public ISvgStringList RequiredFeatures { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.RestoreReferencedElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.RestoreReferencedElement.html",
    "title": "Method RestoreReferencedElement | SharpVectors Documentation",
    "keywords": "Method RestoreReferencedElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll RestoreReferencedElement(XmlElement) public void RestoreReferencedElement(XmlElement refEl) Parameters refEl XmlElement"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.SystemLanguage.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.SystemLanguage.html",
    "title": "Property SystemLanguage | SharpVectors Documentation",
    "keywords": "Property SystemLanguage Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SystemLanguage public ISvgStringList SystemLanguage { get; } Property Value ISvgStringList"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.UriReference.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.UriReference.html",
    "title": "Property UriReference | SharpVectors Documentation",
    "keywords": "Property UriReference Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll UriReference public SvgUriReference UriReference { get; } Property Value SvgUriReference"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.Width.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Width public ISvgAnimatedLength Width { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.X.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.X.html",
    "title": "Property X | SharpVectors Documentation",
    "keywords": "Property X Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll X public ISvgAnimatedLength X { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.Y.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.Y.html",
    "title": "Property Y | SharpVectors Documentation",
    "keywords": "Property Y Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Y public ISvgAnimatedLength Y { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Dom.Svg.SvgUseElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgUseElement.html",
    "title": "Class SvgUseElement | SharpVectors Documentation",
    "keywords": "Class SvgUseElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgUseElement : SvgTransformableElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IElementCssInlineStyle, ISvgUseElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode, ISvgUriReference, ISvgTests, ISvgStylable, ISvgLangSpace, ISvgExternalResourcesRequired, ISvgTransformable, ISvgLocatable, IEventTarget, ISvgElementVisitorTarget Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgStyleableElement SvgTransformableElement SvgUseElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IElementCssInlineStyle ISvgUseElement ISvgElement IElement IXmlElement INode IXmlNode ISvgUriReference ISvgTests ISvgStylable ISvgLangSpace ISvgExternalResourcesRequired ISvgTransformable ISvgLocatable IEventTarget ISvgElementVisitorTarget Inherited Members SvgTransformableElement.Transform SvgTransformableElement.NearestViewportElement SvgTransformableElement.FarthestViewportElement SvgTransformableElement.GetBBox() SvgTransformableElement.GetCTM() SvgTransformableElement.GetScreenCTM() SvgTransformableElement.GetTransformToElement(ISvgElement) SvgTransformableElement.CssInvalidate() SvgStyleableElement.ClassName SvgStyleableElement.GetPresentationAttribute(string) SvgStyleableElement.GetPropertyValue(string) SvgStyleableElement.GetPropertyValue(string, string) SvgStyleableElement.GetComputedStyle(string) SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.IsRenderable SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgUseElement(string, string, string, SvgDocument) Properties AnimatedInstanceRoot ExternalResourcesRequired Corresponds to attribute externalResourcesRequired on the given element. Height Href InstanceRoot ReferencedElement RequiredExtensions RequiredFeatures SystemLanguage UriReference Width X Y Methods Accept(ISvgElementVisitor) This dispatches the rendering request to the accepted ISvgElementVisitor object. CopyToReferencedElement(XmlElement) HandleAttributeChange(XmlAttribute) This function allows each element to handle it's own behaviors for attribute changing. By default, the cached computed style is invalidated because most attributes refer to style properties. HasExtension(string) OnReferencedNodeChange(object, XmlNodeChangedEventArgs) RestoreReferencedElement(XmlElement)"
  },
  "api/SharpVectors.Dom.Svg.SvgVKernElement.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgVKernElement.-ctor.html",
    "title": "Constructor SvgVKernElement | SharpVectors Documentation",
    "keywords": "Constructor SvgVKernElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgVKernElement(string, string, string, SvgDocument) public SvgVKernElement(string prefix, string localname, string ns, SvgDocument doc) Parameters prefix string localname string ns string doc SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgVKernElement.IsHorizontal.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgVKernElement.IsHorizontal.html",
    "title": "Property IsHorizontal | SharpVectors Documentation",
    "keywords": "Property IsHorizontal Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsHorizontal public override bool IsHorizontal { get; } Property Value bool"
  },
  "api/SharpVectors.Dom.Svg.SvgVKernElement.IsRenderable.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgVKernElement.IsRenderable.html",
    "title": "Property IsRenderable | SharpVectors Documentation",
    "keywords": "Property IsRenderable Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll IsRenderable Gets a value indicating whether this SVG element is renderable. public override bool IsRenderable { get; } Property Value bool This is 'true if the element is renderable; otherwise, it is false."
  },
  "api/SharpVectors.Dom.Svg.SvgVKernElement.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgVKernElement.html",
    "title": "Class SvgVKernElement | SharpVectors Documentation",
    "keywords": "Class SvgVKernElement Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll The SvgVKernElement interface corresponds to the 'vkern' element. public sealed class SvgVKernElement : SvgKernElement, ICloneable, IEnumerable, IXPathNavigable, IEventTargetSupport, IEventTarget, IElementCssInlineStyle, ISvgVKernElement, ISvgElement, IElement, IXmlElement, INode, IXmlNode Inheritance object XmlNode XmlLinkedNode XmlElement Element CssXmlElement SvgElement SvgKernElement SvgVKernElement Implements ICloneable IEnumerable IXPathNavigable IEventTargetSupport IEventTarget IElementCssInlineStyle ISvgVKernElement ISvgElement IElement IXmlElement INode IXmlNode Inherited Members SvgKernElement.Glyph1 SvgKernElement.Glyph2 SvgKernElement.Unicode1 SvgKernElement.Unicode2 SvgKernElement.Kerning SvgElement.UniqueId SvgElement.ImportNode SvgElement.ImportDocument SvgElement.OwnerDocument SvgElement.Id SvgElement.OwnerSvgElement SvgElement.ViewportElement SvgElement.RenderingHint SvgElement.IsHiddenCss SvgElement.XmlSpace SvgElement.XmlLang SvgElement.ElementInstance SvgElement.ResolveUri(string) SvgElement.GetAttribute(string, float) SvgElement.SetAttribute(string, float) SvgElement.GetAttribute(string, int) SvgElement.SetAttribute(string, int) SvgElement.GetAttribute(string, double) SvgElement.SetAttribute(string, double) SvgElement.GetAttribute(string, long) SvgElement.SetAttribute(string, long) CssXmlElement.Imported CssXmlElement.Style CssXmlElement.GetComputedStyle(string) CssXmlElement.GetComputedStringValue(string, string) CssXmlElement.GetComputedCssValue(string, string) CssXmlElement.Supports(string, string) CssXmlElement.CssInvalidate() CssXmlElement.ElementChange(object, XmlNodeChangedEventArgs) CssXmlElement.ParentNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.AttributeChange(object, XmlNodeChangedEventArgs) CssXmlElement.HandleAttributeChange(XmlAttribute) CssXmlElement.ChildNodeChange(object, XmlNodeChangedEventArgs) CssXmlElement.attributeChangeHandler CssXmlElement.elementChangeHandler CssXmlElement.parentNodeChangeHandler CssXmlElement.childNodeChangeHandler CssXmlElement.cssChangeHandler XmlElement.CloneNode(bool) XmlElement.GetAttribute(string) XmlElement.SetAttribute(string, string) XmlElement.RemoveAttribute(string) XmlElement.GetAttributeNode(string) XmlElement.SetAttributeNode(XmlAttribute) XmlElement.RemoveAttributeNode(XmlAttribute) XmlElement.GetElementsByTagName(string) XmlElement.GetAttribute(string, string) XmlElement.SetAttribute(string, string, string) XmlElement.RemoveAttribute(string, string) XmlElement.GetAttributeNode(string, string) XmlElement.SetAttributeNode(string, string) XmlElement.RemoveAttributeNode(string, string) XmlElement.GetElementsByTagName(string, string) XmlElement.HasAttribute(string) XmlElement.HasAttribute(string, string) XmlElement.WriteTo(XmlWriter) XmlElement.WriteContentTo(XmlWriter) XmlElement.RemoveAttributeAt(int) XmlElement.RemoveAllAttributes() XmlElement.RemoveAll() XmlElement.Name XmlElement.LocalName XmlElement.NamespaceURI XmlElement.Prefix XmlElement.NodeType XmlElement.ParentNode XmlElement.IsEmpty XmlElement.Attributes XmlElement.HasAttributes XmlElement.SchemaInfo XmlElement.InnerXml XmlElement.InnerText XmlElement.NextSibling XmlLinkedNode.PreviousSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.Value XmlNode.ChildNodes XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgVKernElement(string, string, string, SvgDocument) Properties IsHorizontal IsRenderable Gets a value indicating whether this SVG element is renderable."
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.-ctor.html",
    "title": "Constructor SvgViewSpec | SharpVectors Documentation",
    "keywords": "Constructor SvgViewSpec Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgViewSpec(SvgElement) public SvgViewSpec(SvgElement ownerElement) Parameters ownerElement SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.PreserveAspectRatioString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.PreserveAspectRatioString.html",
    "title": "Property PreserveAspectRatioString | SharpVectors Documentation",
    "keywords": "Property PreserveAspectRatioString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PreserveAspectRatioString public string PreserveAspectRatioString { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.Transform.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.Transform.html",
    "title": "Property Transform | SharpVectors Documentation",
    "keywords": "Property Transform Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Transform public ISvgTransformList Transform { get; } Property Value ISvgTransformList"
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.TransformString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.TransformString.html",
    "title": "Property TransformString | SharpVectors Documentation",
    "keywords": "Property TransformString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TransformString public string TransformString { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.ViewBoxString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.ViewBoxString.html",
    "title": "Property ViewBoxString | SharpVectors Documentation",
    "keywords": "Property ViewBoxString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewBoxString public string ViewBoxString { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.ViewTarget.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.ViewTarget.html",
    "title": "Property ViewTarget | SharpVectors Documentation",
    "keywords": "Property ViewTarget Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewTarget public ISvgElement ViewTarget { get; } Property Value ISvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.ViewTargetString.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.ViewTargetString.html",
    "title": "Property ViewTargetString | SharpVectors Documentation",
    "keywords": "Property ViewTargetString Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ViewTargetString public string ViewTargetString { get; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.ZoomAndPan.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.ZoomAndPan.html",
    "title": "Property ZoomAndPan | SharpVectors Documentation",
    "keywords": "Property ZoomAndPan Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ZoomAndPan public SvgZoomAndPanType ZoomAndPan { get; set; } Property Value SvgZoomAndPanType"
  },
  "api/SharpVectors.Dom.Svg.SvgViewSpec.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgViewSpec.html",
    "title": "Class SvgViewSpec | SharpVectors Documentation",
    "keywords": "Class SvgViewSpec Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll TODO: This class does not yet support custom views public sealed class SvgViewSpec : SvgFitToViewBox, ISvgViewSpec, ISvgZoomAndPan, ISvgFitToViewBox Inheritance object SvgFitToViewBox SvgViewSpec Implements ISvgViewSpec ISvgZoomAndPan ISvgFitToViewBox Inherited Members SvgFitToViewBox.ViewBox SvgFitToViewBox.PreserveAspectRatio object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgViewSpec(SvgElement) Properties PreserveAspectRatioString Transform TransformString ViewBoxString ViewTarget ViewTargetString ZoomAndPan"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.-ctor.html",
    "title": "Constructor SvgWindow | SharpVectors Documentation",
    "keywords": "Constructor SvgWindow Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgWindow(long, long, ISvgRenderer) protected SvgWindow(long innerWidth, long innerHeight, ISvgRenderer renderer) Parameters innerWidth long innerHeight long renderer ISvgRenderer SvgWindow(SvgWindow, long, long) protected SvgWindow(SvgWindow parentWindow, long innerWidth, long innerHeight) Parameters parentWindow SvgWindow innerWidth long innerHeight long"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.AddTask.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.AddTask.html",
    "title": "Method AddTask | SharpVectors Documentation",
    "keywords": "Method AddTask Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AddTask(string, Task) public void AddTask(string tasksName, Task task) Parameters tasksName string task Task"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.Alert.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.Alert.html",
    "title": "Method Alert | SharpVectors Documentation",
    "keywords": "Method Alert Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Alert(string) public abstract void Alert(string message) Parameters message string"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.AwaitTasks.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.AwaitTasks.html",
    "title": "Method AwaitTasks | SharpVectors Documentation",
    "keywords": "Method AwaitTasks Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll AwaitTasks(string) public void AwaitTasks(string tasksName) Parameters tasksName string"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.BaseUrls.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.BaseUrls.html",
    "title": "Property BaseUrls | SharpVectors Documentation",
    "keywords": "Property BaseUrls Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll BaseUrls public ISet<string> BaseUrls { get; set; } Property Value ISet<string>"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.CreateEmptySvgDocument.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.CreateEmptySvgDocument.html",
    "title": "Method CreateEmptySvgDocument | SharpVectors Documentation",
    "keywords": "Method CreateEmptySvgDocument Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateEmptySvgDocument() Create and assign an empty SvgDocument to this window. This is needed only in situations where the library user needs to create an SVG DOM tree outside of the usual LoadSvgDocument mechanism. public SvgDocument CreateEmptySvgDocument() Returns SvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.CreateOwnedWindow.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.CreateOwnedWindow.html",
    "title": "Method CreateOwnedWindow | SharpVectors Documentation",
    "keywords": "Method CreateOwnedWindow Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateOwnedWindow() public virtual SvgWindow CreateOwnedWindow() Returns SvgWindow CreateOwnedWindow(long, long) public abstract SvgWindow CreateOwnedWindow(long innerWidth, long innerHeight) Parameters innerWidth long innerHeight long Returns SvgWindow"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.CreateSvgRenderer.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.CreateSvgRenderer.html",
    "title": "Method CreateSvgRenderer | SharpVectors Documentation",
    "keywords": "Method CreateSvgRenderer Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll CreateSvgRenderer() public virtual ISvgRenderer CreateSvgRenderer() Returns ISvgRenderer"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.DefaultStyleSheet.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.DefaultStyleSheet.html",
    "title": "Property DefaultStyleSheet | SharpVectors Documentation",
    "keywords": "Property DefaultStyleSheet Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll DefaultStyleSheet public IStyleSheet DefaultStyleSheet { get; } Property Value IStyleSheet"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.Document.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.Document.html",
    "title": "Property Document | SharpVectors Documentation",
    "keywords": "Property Document Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Document public ISvgDocument Document { get; set; } Property Value ISvgDocument"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.InnerHeight.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.InnerHeight.html",
    "title": "Property InnerHeight | SharpVectors Documentation",
    "keywords": "Property InnerHeight Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll InnerHeight public virtual long InnerHeight { get; set; } Property Value long"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.InnerWidth.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.InnerWidth.html",
    "title": "Property InnerWidth | SharpVectors Documentation",
    "keywords": "Property InnerWidth Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll InnerWidth public virtual long InnerWidth { get; set; } Property Value long"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.ParentWindow.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.ParentWindow.html",
    "title": "Property ParentWindow | SharpVectors Documentation",
    "keywords": "Property ParentWindow Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParentWindow public SvgWindow ParentWindow { get; } Property Value SvgWindow"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.ParseXML.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.ParseXML.html",
    "title": "Method ParseXML | SharpVectors Documentation",
    "keywords": "Method ParseXML Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ParseXML(string, XmlDocument) public XmlDocumentFragment ParseXML(string source, XmlDocument document) Parameters source string document XmlDocument Returns XmlDocumentFragment"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.PrintNode.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.PrintNode.html",
    "title": "Method PrintNode | SharpVectors Documentation",
    "keywords": "Method PrintNode Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll PrintNode(XmlNode) public string PrintNode(XmlNode node) Parameters node XmlNode Returns string"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.Renderer.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.Renderer.html",
    "title": "Property Renderer | SharpVectors Documentation",
    "keywords": "Property Renderer Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Renderer public ISvgRenderer Renderer { get; set; } Property Value ISvgRenderer"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.Resize.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.Resize.html",
    "title": "Method Resize | SharpVectors Documentation",
    "keywords": "Method Resize Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Resize(int, int) This is expected to be called by the host public virtual void Resize(int innerWidth, int innerHeight) Parameters innerWidth int The new width of the control innerHeight int The new height of the control"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.Source.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.Source.html",
    "title": "Property Source | SharpVectors Documentation",
    "keywords": "Property Source Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll Source public abstract string Source { get; set; } Property Value string"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.WorkingDir.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.WorkingDir.html",
    "title": "Property WorkingDir | SharpVectors Documentation",
    "keywords": "Property WorkingDir Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll WorkingDir public abstract DirectoryInfo WorkingDir { get; } Property Value DirectoryInfo"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow._mappedTasks.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow._mappedTasks.html",
    "title": "Field _mappedTasks | SharpVectors Documentation",
    "keywords": "Field _mappedTasks Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll protected IDictionary<string, List<Task>> _mappedTasks Returns IDictionary<string, List<Task>>"
  },
  "api/SharpVectors.Dom.Svg.SvgWindow.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgWindow.html",
    "title": "Class SvgWindow | SharpVectors Documentation",
    "keywords": "Class SvgWindow Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public abstract class SvgWindow : ISvgWindow Inheritance object SvgWindow Implements ISvgWindow Derived WpfSvgWindow Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgWindow(SvgWindow, long, long) SvgWindow(long, long, ISvgRenderer) Fields _mappedTasks Properties BaseUrls DefaultStyleSheet Document InnerHeight InnerWidth ParentWindow Renderer Source WorkingDir Methods AddTask(string, Task) Alert(string) AwaitTasks(string) CreateEmptySvgDocument() Create and assign an empty SvgDocument to this window. This is needed only in situations where the library user needs to create an SVG DOM tree outside of the usual LoadSvgDocument mechanism. CreateOwnedWindow() CreateOwnedWindow(long, long) CreateSvgRenderer() ParseXML(string, XmlDocument) PrintNode(XmlNode) Resize(int, int) This is expected to be called by the host"
  },
  "api/SharpVectors.Dom.Svg.SvgZoomAndPan.-ctor.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgZoomAndPan.-ctor.html",
    "title": "Constructor SvgZoomAndPan | SharpVectors Documentation",
    "keywords": "Constructor SvgZoomAndPan Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll SvgZoomAndPan(SvgElement) public SvgZoomAndPan(SvgElement ownerElement) Parameters ownerElement SvgElement"
  },
  "api/SharpVectors.Dom.Svg.SvgZoomAndPan.ZoomAndPan.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgZoomAndPan.ZoomAndPan.html",
    "title": "Property ZoomAndPan | SharpVectors Documentation",
    "keywords": "Property ZoomAndPan Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll ZoomAndPan public SvgZoomAndPanType ZoomAndPan { get; } Property Value SvgZoomAndPanType"
  },
  "api/SharpVectors.Dom.Svg.SvgZoomAndPan.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgZoomAndPan.html",
    "title": "Class SvgZoomAndPan | SharpVectors Documentation",
    "keywords": "Class SvgZoomAndPan Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Model.dll public sealed class SvgZoomAndPan Inheritance object SvgZoomAndPan Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgZoomAndPan(SvgElement) Properties ZoomAndPan"
  },
  "api/SharpVectors.Dom.Svg.SvgZoomAndPanType.html": {
    "href": "api/SharpVectors.Dom.Svg.SvgZoomAndPanType.html",
    "title": "Enum SvgZoomAndPanType | SharpVectors Documentation",
    "keywords": "Enum SvgZoomAndPanType Namespace SharpVectors.Dom.Svg Assembly SharpVectors.Core.dll Summary description for SvgZoomAndPanType. public enum SvgZoomAndPanType Fields Unknown = 0 Disable = 1 Magnify = 2"
  },
  "api/SharpVectors.Dom.Svg.html": {
    "href": "api/SharpVectors.Dom.Svg.html",
    "title": "Namespace SharpVectors.Dom.Svg | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom.Svg The SharpVectors.Dom.Svg namespace contains a bunch of classes and interfaces. Classes SvgAElement SvgAltGlyphDefElement This implements the ISvgAltGlyphDefElement interface corresponds to the 'altGlyphDef' element. SvgAltGlyphElement The ISvgAltGlyphElement interface corresponds to the 'altGlyph' element. SvgAltGlyphItemElement This implements the ISvgAltGlyphItemElement interface corresponds to the 'altGlyphItem' element. SvgAngle Summary description for SvgAngle. SvgAnimateBaseElement SvgAnimateColorElement SvgAnimateElement SvgAnimateMPathElement SvgAnimateMotionElement SvgAnimateSetElement SvgAnimateTransformElement SvgAnimatedAngle SvgAnimatedBoolean Summary description for SvgAnimatedNumber. SvgAnimatedEnumeration Summary description for SvgAnimatedEnumeration. SvgAnimatedInteger An implementation of the ISvgAnimatedInteger interface. SvgAnimatedLength Used for attributes of basic type 'length' which can be animated. SvgAnimatedLengthList Summary description for SvgAnimatedLengthList. SvgAnimatedNumber Summary description for SvgAnimatedNumber. SvgAnimatedNumberList Summary description for SvgAnimatedNumberList. SvgAnimatedPreserveAspectRatio Summary description for SvgAnimatedPreserveAspectRatio. SvgAnimatedRect SvgAnimatedString Summary description for SvgAnimatedString. SvgAnimatedTransformList Used for the various attributes which specify a set of transformations, such as the transform attribute which is available for many of Svg's elements, and which can be animated. SvgAnimationElement SvgCircleElement The ISvgCircleElement interface corresponds to the 'circle' element. SvgClipPathElement SvgColor Summary description for SvgColor. SvgColorProfileElement SvgComponentTransferFunctionElement This abstract defines a base class used by the component transfer function interfaces. SvgDefsElement The SvgDefsElement interface corresponds to the 'defs' element. SvgDescElement The SvgDescElement interface corresponds to the 'desc' element. SvgDocument The root object in the document object hierarchy of an Svg document. SvgElement Summary description for SvgElement. SvgElementFactory SvgElementInstance SvgElementInstanceList SvgEllipseElement The SvgEllipseElement class corresponds to the 'ellipse' element. SvgException SvgExternalResourcesRequired SvgExternalResourcesRequiredException SvgFEBlendElement This filter blends two objects together using commonly used imaging software blending modes. It performs a pixel-wise combination of two input images. SvgFEColorMatrixElement SvgFEComponentTransferElement SvgFECompositeElement SvgFEConvolveMatrixElement This applies a matrix convolution filter effect. A convolution combines pixels in the input image with neighboring pixels to produce a resulting image. A wide variety of imaging operations can be achieved through convolutions, including blurring, edge detection, sharpening, embossing and beveling. SvgFEDiffuseLightingElement SvgFEDisplacementMapElement This filter primitive uses the pixels values from the image from 'in2' to spatially displace the image from 'in'. SvgFEDistantLightElement SvgFEFloodElement SvgFEFuncAElement SvgFEFuncBElement SvgFEFuncGElement SvgFEFuncRElement SvgFEGaussianBlurElement This filter primitive performs a Gaussian blur on the input image. SvgFEImageElement SvgFEMergeElement SvgFEMergeNodeElement SvgFEMorphologyElement SvgFEOffsetElement SvgFEPointLightElement SvgFESpecularLightingElement This filter primitive lights a source graphic using the alpha channel as a bump map. The resulting image is an RGBA image based on the light color. The lighting calculation follows the standard specular component of the Phong lighting model. The resulting image depends on the light color, light position and surface geometry of the input bump map. The result of the lighting calculation is added. The filter primitive assumes that the viewer is at infinity in the z direction (i.e., the unit vector in the eye direction is (0,0,1) everywhere). SvgFESpotLightElement SvgFETileElement SvgFETurbulenceElement This filter primitive creates an image using the Perlin turbulence function. It allows the synthesis of artificial textures like clouds or marble. SvgFilterElement An implementation of the ISvgFilterElement interface, which corresponds to the 'filter' element. SvgFilterPrimitiveStandardAttributes This is abstract class for filter primitive attributes that are available for all filter primitives: SvgFitToViewBox SvgFontElement The SvgFontElement interface corresponds to the 'font' element. SvgFontFaceElement The SvgFontFaceElement interface corresponds to the 'font-face' element. SvgFontFaceFormatElement The ISvgFontFaceFormatElement interface corresponds to the font-face-format'' element. SvgFontFaceNameElement The SvgFontFaceNameElement interface corresponds to the 'font-face-name' element. SvgFontFaceSrcElement The SvgFontFaceSrcElement interface corresponds to the 'font-face-src' element. SvgFontFaceUriElement The SvgFontFaceUriElement interface corresponds to the 'font-face-uri' element. SvgFontFamily This provides information on the OpenType and Web fonts to the SvgDocument. SvgGElement This implements the ISvgGElement interface, which corresponds to the 'g' element. SvgGlyphElement The SvgGlyphElement interface corresponds to the 'glyph' element. SvgGlyphRefElement The ISvgGlyphRefElement interface corresponds to the 'glyphRef' element. SvgGradientElement SvgHKernElement The SvgHKernElement interface corresponds to the 'hkern' element. SvgImageElement SvgKernElement The SvgKernElement is the base interface corresponds to the 'vkern' and 'hkern' elements. SvgLength SvgLengthList This interface defines a list of SvgLength objects SvgLineElement The SVGLineElement interface corresponds to the 'line' element. SvgLinearGradientElement SvgList<T> Base class for all SVG*List-derived classes. Note we're using List<T> (as opposed to deriving from) to hide unneeded List<T> methods Note that a CLR uint is equivalent to an IDL ulong, so uint is used for all index values SvgMarker SvgMarkerElement SvgMaskElement SvgMatrix Many of SVG's graphics operations utilize 2x3 matrices of the form: [a c e] [b d f] which, when expanded into a 3x3 matrix for the purposes of matrix arithmetic, become: [a c e] [b d f] [0 0 1] SvgMetadataElement SvgMissingGlyphElement The SvgMissingGlyphElement interface corresponds to the 'missing-glyph' element. SvgNumber SvgNumberList Summary description for SvgNumberList. SvgNumberParser This class represents a parser with support for numbers. SvgPaint SvgParser This class is the superclass of all parsers. It provides localization and error handling methods. SvgPathElement SvgPathParser This class implements an event-based parser for the SVG path's d attribute values. SvgPathSeg SvgPathSegArc SvgPathSegArcAbs Summary description for SvgPathSegLinetoAbs. SvgPathSegArcRel Summary description for SvgPathSegLinetoAbs. SvgPathSegClosePath Summary description for SvgPathSegClosePath. SvgPathSegCurveto SvgPathSegCurvetoCubic SvgPathSegCurvetoCubicAbs SvgPathSegCurvetoCubicRel Summary description for SvgPathSegCurvetoCubicRel. SvgPathSegCurvetoCubicSmoothAbs SvgPathSegCurvetoCubicSmoothRel Summary description for SvgPathSegCurvetoCubicSmoothAbs. SvgPathSegCurvetoQuadratic SvgPathSegCurvetoQuadraticAbs Summary description for SvgPathSegCurvetoCubicAbs. SvgPathSegCurvetoQuadraticRel Summary description for SvgPathSegCurvetoCubicAbs. SvgPathSegCurvetoQuadraticSmoothAbs The SvgPathSegCurvetoQuadraticSmoothAbs interface corresponds to an \"absolute smooth quadratic curveto\" (T) path data command. SvgPathSegCurvetoQuadraticSmoothRel The SvgPathSegCurvetoQuadraticSmoothRel interface corresponds to an \"relative smooth quadratic curveto\" (t) path data command. SvgPathSegHandler SvgPathSegLineto SvgPathSegLinetoAbs SvgPathSegLinetoHorizontalAbs SvgPathSegLinetoHorizontalRel SvgPathSegLinetoRel SvgPathSegLinetoVerticalAbs SvgPathSegLinetoVerticalRel SvgPathSegList SvgPathSegMoveto Summary description for SvgMoveToSeg. SvgPathSegMovetoAbs SvgPathSegMovetoRel The SvgPathSegMovetoRel interface corresponds to an \"relative moveto\" (m) path data command. SvgPathSegParser SvgPatternElement SvgPoint Many of the SVG DOM interfaces refer to objects of class SvgPoint. An SvgPoint is an (x,y) coordinate pair. When used in matrix operations, an SvgPoint is treated as a vector of the form: [x] [y] [1] SvgPointList This class defines a list of SvgPoint objects. SvgPointList.SvgPointListHandler SvgPointsParser This class implements an event-based parser for the SVG points attribute values (used with polyline and polygon elements). SvgPolyElement SvgPolygonElement SvgPolylineElement SvgPreserveAspectRatio SvgRadialGradientElement The implementation of the radialGradient element or the ISvgRadialGradientElement interface. SvgRect Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative. SvgRectElement The SVGRectElement interface corresponds to the 'rect' element. SvgResolveNamespaceEventArgs Arguments when namespace is trying to be resolved SvgResolveUriEventArgs Arguments when URI is trying to be resolved while loading schema SvgScriptElement The ISvgScriptElement interface corresponds to the 'script' element. SvgSolidColorElement An SVG object represents an 'solidcolor' element in the DOM. SvgStopElement Summary description for SvgStopElement. SvgStringList This interface defines a list of String objects SvgStringReader This class represents a SvgTextReader which handles strings. SvgStyleElement The SvgStyleElement interface corresponds to the 'style' element. SvgStyleableElement SvgStyleableElement is an extension to the Svg DOM to create a class for all elements that are styleable. SvgSvgElement A key interface definition is the ISvgSvgElement interface, which is the interface that corresponds to the 'svg' element. This interface contains various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices. ISvgSvgElement extends ViewCSS and DocumentCSS to provide access to the computed values of properties and the override style sheet as described in DOM2. SvgSwitchElement The SvgSwitchElement interface corresponds to the 'switch' element. SvgSymbolElement SvgTRefElement Summary description for SvgTRefElement. SvgTSpanElement The SvgTSpanElement interface corresponds to the 'tspan' element. SvgTests A class to encapsulate all SvgTest functionality. Used by SVG elements as a helper class SvgTextAreaElement Summary description for SvgTextAreaElement. SvgTextBaseElement Summary description for SvgTextElement. SvgTextContentElement Summary description for SvgTextContentElement. SvgTextElement Summary description for SvgTextElement. SvgTextPathElement The implementation of the ISvgTextPathElement interface corresponds to the 'textPath' element. SvgTextPositioningElement The SvgTextPositioningElement interface is inherited by text-related interfaces: SvgTextElement, SvgTSpanElement, SvgTRefElement and SvgAltGlyphElement. SvgTextReader This class represents a reader which normalizes the line break: \\n, \\r, \\r\\n are replaced by \\n. The methods of this reader are not synchronized. The input is buffered. SvgTitleElement The SvgTitleElement interface corresponds to the 'title' element. SvgTransform Summary description for SvgTransform. SvgTransformF This is an implementation of the 3-by-3 affine matrix that represents a geometric transform. SvgTransformList Summary description for SvgTransformList. SvgTransformableElement SvgUriReference SvgUseElement SvgVKernElement The SvgVKernElement interface corresponds to the 'vkern' element. SvgViewSpec TODO: This class does not yet support custom views SvgWindow SvgZoomAndPan Structs CalculatedArcValues SvgPointF This represents an ordered pair of float precision x- and y-coordinates that defines a point in a two-dimensional plane. SvgRectF This stores a set of four float precision numbers that represent the location and size of a rectangle. SvgSizeF Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle. Interfaces IGetSvgDocument ISharpMarkerHost This is an extension to the Svg DOM. It denotes that an element can display markers. ISvgAElement ISvgAltGlyphDefElement The ISvgAltGlyphDefElement interface corresponds to the 'altGlyphDef' element. ISvgAltGlyphElement The ISvgAltGlyphElement interface corresponds to the 'altGlyph' element. ISvgAltGlyphItemElement The ISvgAltGlyphItemElement interface corresponds to the 'altGlyphItem' element. ISvgAngle The SvgAngle interface corresponds to the angle basic data type. ISvgAnimateColorElement The SVGAnimateColorElement interface corresponds to the \"animateColor\" element. ISvgAnimateElement This interface corresponds to the \"animate\" element. ISvgAnimateMPathElement This interface corresponds to the \"mpath\" element. ISvgAnimateMotionElement This interface corresponds to the \"animateMotion\" element. ISvgAnimateSetElement Object-oriented access to the attributes of the \"set\" element via the SVG DOM is not available. ISvgAnimateTransformElement This interface corresponds to the \"animateTransform\" element. ISvgAnimatedAngle ISvgAnimatedBoolean Used for attributes of type boolean which can be animated. ISvgAnimatedEnumeration Used for attributes whose value must be a constant from a particular enumeration and which can be animated. ISvgAnimatedInteger Used for attributes of basic type integer which can be animated. ISvgAnimatedLength Used for attributes of basic type 'length' which can be animated. ISvgAnimatedLengthList Used for attributes of type SvgLengthList which can be animated. ISvgAnimatedNumber Used for attributes of basic type 'number' which can be animated. ISvgAnimatedNumberList Used for attributes which take a list of numbers and which can be animated. ISvgAnimatedPathData The SvgAnimatedPathData interface supports elements which have a 'd' attribute which holds Svg path data, and supports the ability to animate that attribute. ISvgAnimatedPoints The SvgAnimatedPoints interface supports elements which have a 'points' attribute which holds a list of coordinate values and which support the ability to animate that attribute. ISvgAnimatedPreserveAspectRatio Used for attributes of type SvgPreserveAspectRatio which can be animated. ISvgAnimatedRect Used for attributes of type SvgRect which can be animated. ISvgAnimatedString Used for attributes of type DOMString which can be animated. ISvgAnimatedTransformList Used for the various attributes which specify a set of transformations, such as the transform attribute which is available for many of Svg's elements, and which can be animated. ISvgAnimationElement This is the base interface for all of the animation element interfaces: ISvgAnimateElement, ISvgAnimateSetElement, ISvgAnimateColorElement, ISvgAnimateMotionElement and ISvgAnimateTransformElement. ISvgCircleElement The SvgCircleElement interface corresponds to the 'circle' element. ISvgClipPathElement Used by SvgClipPathElement. ISvgColor The SvgColor interface corresponds to color value definition for properties 'stop-color', 'flood-color' and 'lighting-color' and is a base class for interface SvgPaint. It incorporates Svg's extended notion of color, which incorporates ICC-based color specifications. Interface SVGColor does not correspond to the color basic data type. For the color basic data type, the applicable DOM interfaces are defined in CSS; in particular, see the ICssRgbColor interface. ISvgColorProfileElement ISvgColorProfileRule ISvgComponentTransferFunctionElement ISvgControl This defines the interface for the control object that is controlling the rendering process and displaying the rendered drawings. ISvgCssRule SVG extends interface ICssRule with interface ISvgCssRule by adding an ISvgColorProfileRule rule to allow for specification of ICC-based color. ISvgCursorElement ISvgDefinitionSrcElement The SVGDefinitionSrcElement interface corresponds to the 'definition-src' element. ISvgDefsElement The SvgDefsElement interface corresponds to the 'defs' element. ISvgDescElement The SvgDescElement interface corresponds to the 'desc' element. ISvgDocument The root object in the document object hierarchy of an Svg document. ISvgElement All of the Svg DOM interfaces that correspond directly to elements in the Svg language (e.g., the SvgPathElement interface corresponds directly to the 'path' element in the language) are derivative from base class SvgElement. ISvgElementInstance For each 'use' element, the Svg DOM maintains a shadow tree (the \"instance tree\") of objects of type SvgElementInstance ISvgElementInstanceList The SvgElementInstanceList interface provides the abstraction of an ordered collection of SvgElementInstance objects, without defining or constraining how this collection is implemented. ISvgElementVisitor A visitor pattern interface that visits all renderable SVG elements. ISvgElementVisitorTarget A host target of the element visitor. Each renderable SVG element implements this interface. ISvgEllipseElement The SvgEllipseElement interface corresponds to the 'ellipse' element. ISvgEvent ISvgExternalResourcesRequired This defines an interface which applies to all elements where this element or one of its descendants can reference an external resource. ISvgFEBlendElement ISvgFEColorMatrixElement ISvgFEComponentTransferElement ISvgFECompositeElement ISvgFEConvolveMatrixElement ISvgFEDiffuseLightingElement ISvgFEDisplacementMapElement ISvgFEDistantLightElement ISvgFEFloodElement ISvgFEFuncAElement ISvgFEFuncBElement ISvgFEFuncGElement ISvgFEFuncRElement ISvgFEGaussianBlurElement ISvgFEImageElement ISvgFEMergeElement ISvgFEMergeNodeElement ISvgFEMorphologyElement ISvgFEOffsetElement ISvgFEPointLightElement ISvgFESpecularLightingElement ISvgFESpotLightElement ISvgFETileElement ISvgFETurbulenceElement ISvgFilterElement ISvgFilterPrimitiveStandardAttributes ISvgFitToViewBox Interface SvgFitToViewBox defines DOM attributes that apply to elements which have XML attributes viewBox and preserveAspectRatio. ISvgFontElement The ISvgFontElement interface corresponds to the 'font' element. ISvgFontFaceElement The ISvgFontFaceElement interface corresponds to the 'font-face' element. ISvgFontFaceFormatElement The ISvgFontFaceFormatElement interface corresponds to the 'font-face-format' element. ISvgFontFaceNameElement The ISvgFontFaceNameElement interface corresponds to the 'font-face-name' element. ISvgFontFaceSrcElement The ISvgFontFaceSrcElement interface corresponds to the 'font-face-src' element. ISvgFontFaceUriElement The ISvgFontFaceUriElement interface corresponds to the 'font-face-uri' element. ISvgForeignObjectElement The ISvgForeignObjectElement interface provides access to the properties of 'foreignObject' elements, as well as methods to manipulate them. ISvgGElement The SvgGElement interface corresponds to the 'g' element. ISvgGlyphElement The ISvgGlyphElement interface corresponds to the 'glyph' element. ISvgGlyphRefElement The ISvgGlyphRefElement interface corresponds to the 'glyphRef' element. ISvgGradientElement The SvgGradientElement interface is a base interface used by SvgLinearGradientElement and SvgRadialGradientElement. ISvgHKernElement The ISvgHKernElement interface corresponds to the 'hkern' element. ISvgIccColor ISvgImageElement The SvgRectElement interface corresponds to the 'image' element. ISvgLangSpace Interface SvgLangSpace defines an interface which applies to all elements which have attributes xml:lang and xml:space. ISvgLength The SvgLength interface corresponds to the length basic data type. ISvgLengthList This interface defines a list of SvgLength objects. ISvgLineElement The SvgLineElement interface corresponds to the 'line' element. ISvgLinearGradientElement The SvgLinearGradientElement interface corresponds to the 'linearGradient' element. ISvgList This interface defines a all methods used in a Svg*List interface. ISvgLocatable Interface SvgLocatable is for all elements which either have a transform attribute or don't have a transform attribute but whose content can have a bounding box in current user space. ISvgMarker ISvgMarkerElement ISvgMaskElement Used by SvgMaskElement. ISvgMatrix Interface for matrix operations used within the SVG DOM ISvgMetadataElement ISvgMissingGlyphElement The ISvgMissingGlyphElement interface corresponds to the 'missing-glyph' element. ISvgNumber Used for attributes of basic type 'number'. ISvgNumberList This interface defines a list of SvgNumber objects. ISvgPaint The SvgPaint interface corresponds to basic type paint and represents the values of properties 'fill' and 'stroke'. ISvgPathElement The SvgPathElement interface corresponds to the 'path' element. ISvgPathHandler This interface must be implemented and then registred as the handler of a PathParser instance in order to be notified of parsing events. ISvgPathSeg The SvgPathSeg interface is a base interface that corresponds to a single command within a path data specification. ISvgPathSegArcAbs The SvgPathSegArcAbs interface corresponds to an \"absolute arcto\" (A) path data command. ISvgPathSegArcRel The SvgPathSegArcRel interface corresponds to a \"relative arcto\" (a) path data command. ISvgPathSegClosePath The SvgPathSegClosePath interface corresponds to a \"closepath\" (z) path data command. ISvgPathSegCurvetoCubicAbs The SvgPathSegCurvetoCubicAbs interface corresponds to an \"absolute cubic Bezier curveto\" (C) path data command. ISvgPathSegCurvetoCubicRel The SvgPathSegCurvetoCubicRel interface corresponds to a \"relative cubic Bezier curveto\" (c) path data command. ISvgPathSegCurvetoCubicSmoothAbs The SvgPathSegCurvetoCubicSmoothAbs interface corresponds to an \"absolute smooth cubic curveto\" (S) path data command. ISvgPathSegCurvetoCubicSmoothRel The SvgPathSegCurvetoCubicSmoothRel interface corresponds to a \"relative smooth cubic curveto\" (s) path data command. ISvgPathSegCurvetoQuadraticAbs The SvgPathSegCurvetoQuadraticAbs interface corresponds to an \"absolute quadratic Bezier curveto\" (Q) path data command. ISvgPathSegCurvetoQuadraticRel The SvgPathSegCurvetoCubicRel interface corresponds to a \"relative cubic Bezier curveto\" (c) path data command. ISvgPathSegCurvetoQuadraticSmoothAbs The SvgPathSegCurvetoQuadraticSmoothAbs interface corresponds to an \"absolute smooth quadratic curveto\" (T) path data command. ISvgPathSegCurvetoQuadraticSmoothRel The SvgPathSegCurvetoQuadraticSmoothRel interface corresponds to a \"relative smooth quadratic curveto\" (t) path data command. ISvgPathSegLinetoAbs The SvgPathSegLinetoAbs interface corresponds to an \"absolute lineto\" (L) path data command. ISvgPathSegLinetoHorizontalAbs The SvgPathSegLinetoHorizontalAbs interface corresponds to an \"absolute horizontal lineto\" (H) path data command. ISvgPathSegLinetoHorizontalRel The SvgPathSegLinetoHorizontalRel interface corresponds to a \"relative horizontal lineto\" (h) path data command. ISvgPathSegLinetoRel The SvgPathSegLinetoRel interface corresponds to an \"relative lineto\" (l) path data command. ISvgPathSegLinetoVerticalAbs The SvgPathSegLinetoVerticalAbs interface corresponds to an \"absolute vertical lineto\" (V) path data command. ISvgPathSegLinetoVerticalRel The SvgPathSegLinetoVerticalRel interface corresponds to a \"relative vertical lineto\" (v) path data command. ISvgPathSegList This interface defines a list of SvgPathSeg objects. ISvgPathSegMovetoAbs The SvgPathSegMovetoAbs interface corresponds to an \"absolute moveto\" (M) path data command. ISvgPathSegMovetoRel The SvgPathSegMovetoRel interface corresponds to an \"relative moveto\" (m) path data command. ISvgPatternElement ISvgPoint Many of the SVG DOM interfaces refer to objects of class SvgPoint. An SvgPoint is an (x,y) coordinate pair. ISvgPointList This interface defines a list of SvgPoint objects. ISvgPointsHandler This interface must be implemented and then registred as the handler of a PointsParser instance in order to be notified of parsing events. ISvgPolygonElement The SvgPolygonElement interface corresponds to the 'polygon' element ISvgPolylineElement The SvgPolylineElement interface corresponds to the 'polyline' element ISvgPreserveAspectRatio The SvgPreserveAspectRatio interface corresponds to the preserveAspectRatio attribute, which is available for some of Svg's elements. ISvgRadialGradientElement The ISvgRadialGradientElement interface corresponds to the 'radialGradient' element. ISvgRect Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative. ISvgRectElement The SvgRectElement interface corresponds to the 'rect' element. ISvgRenderer Defines the interface required by a renderer to render the SVG DOM. ISvgScriptElement The ISvgScriptElement interface corresponds to the 'script' element. ISvgSolidColorElement An SVG object represents an 'solidcolor' element in the DOM. ISvgStopElement The SvgStopElement interface corresponds to the 'stop' element. ISvgStringList This interface defines a list of string objects. ISvgStylable ISvgStyleElement ISvgSvgElement A key interface definition is the ISvgSvgElement interface, which is the interface that corresponds to the 'svg' element. ISvgSwitchElement The SvgSwitchElement interface corresponds to the 'switch' element. ISvgSymbolElement ISvgTRefElement The SvgTRefElement interface corresponds to the 'tref' element. ISvgTSpanElement The SvgTSpanElement interface corresponds to the 'tspan' element. ISvgTests Interface SvgTests defines an interface which applies to all elements which have attributes requiredFeatures, requiredExtensions and systemLanguage. ISvgTextContentElement The ISvgTextContentElement interface is inherited by various text-related interfaces, such as ISvgTextElement, ISvgTSpanElement, ISvgTRefElement, ISvgAltGlyphElement and ISvgTextPathElement. ISvgTextElement The SvgTextElement interface corresponds to the 'text' element. ISvgTextPathElement The SvgTextPathElement interface corresponds to the 'textPath' element. ISvgTextPositioningElement The SvgTextPositioningElement interface is inherited by text-related interfaces: SvgTextElement, SvgTSpanElement, SvgTRefElement and SvgAltGlyphElement. ISvgTitleElement The SvgTitleElement interface corresponds to the 'title' element. ISvgTransform SvgTransform is the interface for one of the component transformations within a SvgTransformList; thus, a SvgTransform object corresponds to a single component (e.g., \"scale(..)\" or \"matrix(...)\") within a transform attribute specification. ISvgTransformList This interface defines a list of SvgTransform objects. ISvgTransformable Interface SvgTransformable contains properties and methods that apply to all elements which have attribute transform. ISvgUriReference Interface SvgUriReference defines an interface which applies to all elements which have the collection of XLink attributes, such as xlink:href, which define a URI reference. ISvgUseElement The SvgUseElement interface corresponds to the 'use' element. ISvgVKernElement The ISvgVKernElement interface corresponds to the 'vkern' element. ISvgViewElement ISvgViewSpec The interface corresponds to an Svg View Specification. ISvgWindow ISvgZoomAndPan The SvgZoomAndPan interface defines attribute \"zoomAndPan\" and associated constants. ISvgZoomEvent Enums SvgAngleType The basic Angle Value Types SvgColorType Basic color type enumeration. SvgExceptionType SvgFilterBlendMode The basic Filter Blend Modes SvgFilterChannelSelector The Filter Channel Selectors SvgFilterColorMatrix The basic Filter Matrix Types SvgFilterCompositeOperator The Filter Composite Operators SvgFilterEdgeMode The Filter Edge Mode Types SvgFilterMorphologyOperator The Morphology Operator SvgFilterStitchOption The Filter Stitch Options SvgFilterTransferType The Filter Component Transfer Types SvgFilterTurbulenceType The Filter Turbulence Types SvgLengthAdjust SvgLengthDirection Defines the direction of a SvgLength SvgLengthSource Defines the origin type of the SvgLength value SvgLengthType SvgMarkerOrient SvgMarkerPosition SvgMarkerUnit SvgMeetOrSlice SvgPaintType SvgPathSegType SvgPathType SvgPreserveAspectRatioType SvgRenderingHint SvgSpreadMethod SvgTextPathMethod Indicates the method by which text should be rendered along the path. SvgTextPathSpacing Indicates how the user agent should determine the spacing between glyphs that are to be rendered along a path. SvgTransformOrder Specifies the order for matrix transform operations. SvgTransformType SvgUnitType This defines a commonly used set of constants and is a base interface used by ISvgGradientElement, ISvgPatternElement, ISvgClipPathElement, ISvgMaskElement and ISvgFilterElement. SvgZoomAndPanType Summary description for SvgZoomAndPanType. Delegates RenderEvent SvgDocument.ResolveNamespaceDelegate Namespace resolution event delegate. SvgDocument.ResolveUriDelegate URI resolution event delegate"
  },
  "api/SharpVectors.Dom.Text.-ctor.html": {
    "href": "api/SharpVectors.Dom.Text.-ctor.html",
    "title": "Constructor Text | SharpVectors Documentation",
    "keywords": "Constructor Text Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Text(string, Document) protected Text(string data, Document document) Parameters data string document Document"
  },
  "api/SharpVectors.Dom.Text.Value.html": {
    "href": "api/SharpVectors.Dom.Text.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Value Gets or sets the value of the node. public override string Value { get; set; } Property Value string The content of the text node."
  },
  "api/SharpVectors.Dom.Text.html": {
    "href": "api/SharpVectors.Dom.Text.html",
    "title": "Class Text | SharpVectors Documentation",
    "keywords": "Class Text Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for Text. public class Text : XmlText, ICloneable, IEnumerable, IXPathNavigable, IText, ICharacterData, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlCharacterData XmlText Text Implements ICloneable IEnumerable IXPathNavigable IText ICharacterData INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlText.CloneNode(bool) XmlText.SplitText(int) XmlText.WriteTo(XmlWriter) XmlText.WriteContentTo(XmlWriter) XmlText.Name XmlText.LocalName XmlText.NodeType XmlText.ParentNode XmlCharacterData.Substring(int, int) XmlCharacterData.AppendData(string) XmlCharacterData.InsertData(int, string) XmlCharacterData.DeleteData(int, int) XmlCharacterData.ReplaceData(int, int, string) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Text(string, Document) Properties Value Gets or sets the value of the node."
  },
  "api/SharpVectors.Dom.Whitespace.-ctor.html": {
    "href": "api/SharpVectors.Dom.Whitespace.-ctor.html",
    "title": "Constructor Whitespace | SharpVectors Documentation",
    "keywords": "Constructor Whitespace Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Whitespace(string, Document) protected Whitespace(string data, Document document) Parameters data string document Document"
  },
  "api/SharpVectors.Dom.Whitespace.Value.html": {
    "href": "api/SharpVectors.Dom.Whitespace.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Value Gets or sets the value of the node. public override string Value { get; set; } Property Value string The white space characters found in the node. Exceptions ArgumentException Setting Value to invalid white space characters."
  },
  "api/SharpVectors.Dom.Whitespace.html": {
    "href": "api/SharpVectors.Dom.Whitespace.html",
    "title": "Class Whitespace | SharpVectors Documentation",
    "keywords": "Class Whitespace Namespace SharpVectors.Dom Assembly SharpVectors.Dom.dll Summary description for Whitespace. public class Whitespace : XmlWhitespace, ICloneable, IEnumerable, IXPathNavigable, INode, IXmlNode, IEventTargetSupport, IEventTarget Inheritance object XmlNode XmlLinkedNode XmlCharacterData XmlWhitespace Whitespace Implements ICloneable IEnumerable IXPathNavigable INode IXmlNode IEventTargetSupport IEventTarget Inherited Members XmlWhitespace.CloneNode(bool) XmlWhitespace.WriteTo(XmlWriter) XmlWhitespace.WriteContentTo(XmlWriter) XmlWhitespace.Name XmlWhitespace.LocalName XmlWhitespace.NodeType XmlWhitespace.ParentNode XmlCharacterData.Substring(int, int) XmlCharacterData.AppendData(string) XmlCharacterData.InsertData(int, string) XmlCharacterData.DeleteData(int, int) XmlCharacterData.ReplaceData(int, int, string) XmlCharacterData.InnerText XmlCharacterData.Data XmlCharacterData.Length XmlLinkedNode.PreviousSibling XmlLinkedNode.NextSibling XmlNode.CreateNavigator() XmlNode.SelectSingleNode(string) XmlNode.SelectSingleNode(string, XmlNamespaceManager) XmlNode.SelectNodes(string) XmlNode.SelectNodes(string, XmlNamespaceManager) XmlNode.InsertBefore(XmlNode, XmlNode) XmlNode.InsertAfter(XmlNode, XmlNode) XmlNode.ReplaceChild(XmlNode, XmlNode) XmlNode.RemoveChild(XmlNode) XmlNode.PrependChild(XmlNode) XmlNode.AppendChild(XmlNode) XmlNode.Normalize() XmlNode.Supports(string, string) XmlNode.Clone() XmlNode.GetEnumerator() XmlNode.RemoveAll() XmlNode.GetNamespaceOfPrefix(string) XmlNode.GetPrefixOfNamespace(string) XmlNode.ChildNodes XmlNode.Attributes XmlNode.OwnerDocument XmlNode.FirstChild XmlNode.LastChild XmlNode.HasChildNodes XmlNode.NamespaceURI XmlNode.Prefix XmlNode.IsReadOnly XmlNode.OuterXml XmlNode.InnerXml XmlNode.SchemaInfo XmlNode.BaseURI XmlNode.this[string] XmlNode.this[string, string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Whitespace(string, Document) Properties Value Gets or sets the value of the node."
  },
  "api/SharpVectors.Dom.html": {
    "href": "api/SharpVectors.Dom.html",
    "title": "Namespace SharpVectors.Dom | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Dom The SharpVectors.Dom namespace contains a bunch of classes and interfaces. Classes Attribute Summary description for Attribute. CDataSection Summary description for CDataSection. Comment Summary description for Comment. Declaration Summary description for Declaration. Document The base implementation of an XML document to support both SVG and CSS documents. DocumentFragment Summary description for DocumentFragment. DocumentType Summary description for DocumentType. DomException Represents errors that occur during DOM operation execution. DomImplementation Summary description for DomImplementation. Element Summary description for Element. EntityReference Summary description for EntityReference. NodeListAdapter Summary description for NodeListAdapter. ProcessingInstruction Summary description for ProcessingInstruction. SignificantWhitespace Summary description for SignificantWhitespace. Text Summary description for Text. Whitespace Summary description for Whitespace. Interfaces IAttribute Summary description for IAttribute. ICDataSection Summary description for ICDataSection. ICharacterData Provides text manipulation methods that are used by several classes. IComment Summary description for IComment. IDocument IDocumentFragment Represents a lightweight object that is useful for tree insert operations. IDocumentType This represents the document type declaration. IDomConfiguration The IDomConfiguration interface represents the configuration of a document and maintains a table of recognized parameters. IDomImplementation The IDomImplementation interface provides a number of methods for performing operations that are independent of any particular instance of the document object model. IDomTimeStamp The DOMTimeStamp type represents an absolute or relative number of milliseconds, depending on the specification in which it appears. IElement The IElement interface represents an element in an HTML or XML document. IElementTimeControl An SMIL animation interface to supports several methods for controlling the behavior of animation. IEntity This interface represents an entity, either parsed or unparsed, in an XML document. Note that this models the entity itself not the entity declaration. IEntity declaration modeling has been left for a later Level of the DOM specification. Represents an entity declaration, such as <!ENTITY... >. IEntityReference IEntityReference objects may be inserted into the structure model when an entity reference is in the source document, or when the user wishes to insert an entity reference. INamedNodeMap Represents a collection of nodes that can be accessed by name or index. Objects implementing the INamedNodeMap interface are used to represent collections of nodes that can be accessed by name. INode The INode interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. INodeList The INodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. INodeList objects in the DOM are live. The items in the INodeList are accessible via an integral index, starting from 0. INotation This interface represents a notation declared in the DTD. A notation either declares, by name, the format of an unparsed entity (see section 4.7 of the XML 1.0 specification ), or is used for formal declaration of processing instruction targets (see section 2.6 of the XML 1.0 specification ). The Name attribute inherited from INode is set to the declared name of the notation. The DOM Level 1 does not support editing INotation nodes; they are therefore readonly. A INotation node does not have any parent. IProcessingInstruction Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document. IText Represents the text content of an element or attribute. IXmlElement The IElement interface represents an element in an HTML or XML document. IXmlNode The IXmlNode interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. XmlNode Enums DomExceptionType DOM exception code types. ExternalResourcesAccessModes This provides possible options to controls how external resources will be handled."
  },
  "api/SharpVectors.IoC.ISvgRegisteredType.AsSingleton.html": {
    "href": "api/SharpVectors.IoC.ISvgRegisteredType.AsSingleton.html",
    "title": "Method AsSingleton | SharpVectors Documentation",
    "keywords": "Method AsSingleton Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll AsSingleton() Make registered type a singleton void AsSingleton()"
  },
  "api/SharpVectors.IoC.ISvgRegisteredType.PerScope.html": {
    "href": "api/SharpVectors.IoC.ISvgRegisteredType.PerScope.html",
    "title": "Method PerScope | SharpVectors Documentation",
    "keywords": "Method PerScope Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll PerScope() Make registered type a per-scope type (single instance within a Scope) void PerScope()"
  },
  "api/SharpVectors.IoC.ISvgRegisteredType.html": {
    "href": "api/SharpVectors.IoC.ISvgRegisteredType.html",
    "title": "Interface ISvgRegisteredType | SharpVectors Documentation",
    "keywords": "Interface ISvgRegisteredType Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll IRegisteredType is return by Container.Register and allows further configuration for the registration public interface ISvgRegisteredType Methods AsSingleton() Make registered type a singleton PerScope() Make registered type a per-scope type (single instance within a Scope)"
  },
  "api/SharpVectors.IoC.ISvgScope.IsDisposed.html": {
    "href": "api/SharpVectors.IoC.ISvgScope.IsDisposed.html",
    "title": "Property IsDisposed | SharpVectors Documentation",
    "keywords": "Property IsDisposed Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll IsDisposed bool IsDisposed { get; } Property Value bool"
  },
  "api/SharpVectors.IoC.ISvgScope.html": {
    "href": "api/SharpVectors.IoC.ISvgScope.html",
    "title": "Interface ISvgScope | SharpVectors Documentation",
    "keywords": "Interface ISvgScope Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll Represents a scope in which per-scope objects are instantiated a single time public interface ISvgScope : IDisposable, IServiceProvider Inherited Members IDisposable.Dispose() IServiceProvider.GetService(Type) Extension Methods SvgIoCContainerExtensions.Resolve<T>(ISvgScope) Properties IsDisposed"
  },
  "api/SharpVectors.IoC.SvgContainer.-ctor.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.-ctor.html",
    "title": "Constructor SvgContainer | SharpVectors Documentation",
    "keywords": "Constructor SvgContainer Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll SvgContainer() Creates a new instance of IoC Container public SvgContainer()"
  },
  "api/SharpVectors.IoC.SvgContainer.CreateScope.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.CreateScope.html",
    "title": "Method CreateScope | SharpVectors Documentation",
    "keywords": "Method CreateScope Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll CreateScope() Creates a new scope public ISvgScope CreateScope() Returns ISvgScope Scope object"
  },
  "api/SharpVectors.IoC.SvgContainer.Dispose.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.Dispose.html",
    "title": "Method Dispose | SharpVectors Documentation",
    "keywords": "Method Dispose Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll Dispose() Disposes any IDisposable objects owned by this container. public void Dispose()"
  },
  "api/SharpVectors.IoC.SvgContainer.Finalize.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.Finalize.html",
    "title": "Method ~SvgContainer | SharpVectors Documentation",
    "keywords": "Method ~SvgContainer Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll ~SvgContainer() protected ~SvgContainer()"
  },
  "api/SharpVectors.IoC.SvgContainer.GetService.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.GetService.html",
    "title": "Method GetService | SharpVectors Documentation",
    "keywords": "Method GetService Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll GetService(Type) Returns the object registered for the given type public object GetService(Type type) Parameters type Type Type as registered with the container Returns object Instance of the registered type"
  },
  "api/SharpVectors.IoC.SvgContainer.HasService.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.HasService.html",
    "title": "Method HasService | SharpVectors Documentation",
    "keywords": "Method HasService Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll HasService(Type) Returns a value indicating whether the object type is registered or not. public bool HasService(Type type) Parameters type Type Type as registered with the container Returns bool Returns true if the specified type is registered, otherwise; return false."
  },
  "api/SharpVectors.IoC.SvgContainer.IsDisposed.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.IsDisposed.html",
    "title": "Property IsDisposed | SharpVectors Documentation",
    "keywords": "Property IsDisposed Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll IsDisposed public bool IsDisposed { get; } Property Value bool"
  },
  "api/SharpVectors.IoC.SvgContainer.Register.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.Register.html",
    "title": "Method Register | SharpVectors Documentation",
    "keywords": "Method Register Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll Register(Type, Func<object>) Registers a factory function which will be called to resolve the specified interface public ISvgRegisteredType Register(Type anInterface, Func<object> factory) Parameters anInterface Type Interface to register factory Func<object> Factory function Returns ISvgRegisteredType Register(Type, Type) Registers an implementation type for the specified interface public ISvgRegisteredType Register(Type anInterface, Type implementation) Parameters anInterface Type Interface to register implementation Type Implementing type Returns ISvgRegisteredType"
  },
  "api/SharpVectors.IoC.SvgContainer.html": {
    "href": "api/SharpVectors.IoC.SvgContainer.html",
    "title": "Class SvgContainer | SharpVectors Documentation",
    "keywords": "Class SvgContainer Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll Inversion of control container handles dependency injection for registered types public sealed class SvgContainer : ISvgScope, IDisposable, IServiceProvider Inheritance object SvgContainer Implements ISvgScope IDisposable IServiceProvider Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods SvgIoCContainerExtensions.Resolve<T>(ISvgScope) SvgIoCContainerExtensions.Register<T>(SvgContainer) SvgIoCContainerExtensions.Register<T>(SvgContainer, Func<T>) SvgIoCContainerExtensions.Register<T>(SvgContainer, Type) SvgIoCContainerExtensions.Register<TInterface, TImplementation>(SvgContainer) Constructors SvgContainer() Creates a new instance of IoC Container Properties IsDisposed Methods CreateScope() Creates a new scope Dispose() Disposes any IDisposable objects owned by this container. ~SvgContainer() GetService(Type) Returns the object registered for the given type HasService(Type) Returns a value indicating whether the object type is registered or not. Register(Type, Func<object>) Registers a factory function which will be called to resolve the specified interface Register(Type, Type) Registers an implementation type for the specified interface"
  },
  "api/SharpVectors.IoC.SvgIoCContainerExtensions.Register.html": {
    "href": "api/SharpVectors.IoC.SvgIoCContainerExtensions.Register.html",
    "title": "Method Register | SharpVectors Documentation",
    "keywords": "Method Register Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll Register<T>(SvgContainer, Type) Registers an implementation type for the specified interface public static ISvgRegisteredType Register<T>(this SvgContainer container, Type type) Parameters container SvgContainer This container instance type Type Implementing type Returns ISvgRegisteredType IRegisteredType object Type Parameters T Interface to register Register<TInterface, TImplementation>(SvgContainer) Registers an implementation type for the specified interface public static ISvgRegisteredType Register<TInterface, TImplementation>(this SvgContainer container) Parameters container SvgContainer This container instance Returns ISvgRegisteredType IRegisteredType object Type Parameters TInterface Interface to register TImplementation Implementing type Register<T>(SvgContainer, Func<T>) Registers a factory function which will be called to resolve the specified interface public static ISvgRegisteredType Register<T>(this SvgContainer container, Func<T> factory) Parameters container SvgContainer This container instance factory Func<T> Factory method Returns ISvgRegisteredType IRegisteredType object Type Parameters T Interface to register Register<T>(SvgContainer) Registers a type public static ISvgRegisteredType Register<T>(this SvgContainer container) Parameters container SvgContainer This container instance Returns ISvgRegisteredType IRegisteredType object Type Parameters T Type to register"
  },
  "api/SharpVectors.IoC.SvgIoCContainerExtensions.Resolve.html": {
    "href": "api/SharpVectors.IoC.SvgIoCContainerExtensions.Resolve.html",
    "title": "Method Resolve | SharpVectors Documentation",
    "keywords": "Method Resolve Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll Resolve<T>(ISvgScope) Returns an implementation of the specified interface public static T Resolve<T>(this ISvgScope scope) Parameters scope ISvgScope This scope instance Returns T Object implementing the interface Type Parameters T Interface type"
  },
  "api/SharpVectors.IoC.SvgIoCContainerExtensions.html": {
    "href": "api/SharpVectors.IoC.SvgIoCContainerExtensions.html",
    "title": "Class SvgIoCContainerExtensions | SharpVectors Documentation",
    "keywords": "Class SvgIoCContainerExtensions Namespace SharpVectors.IoC Assembly SharpVectors.Model.dll Extension methods for Container public static class SvgIoCContainerExtensions Inheritance object SvgIoCContainerExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Register<T>(SvgContainer) Registers a type Register<T>(SvgContainer, Func<T>) Registers a factory function which will be called to resolve the specified interface Register<T>(SvgContainer, Type) Registers an implementation type for the specified interface Register<TInterface, TImplementation>(SvgContainer) Registers an implementation type for the specified interface Resolve<T>(ISvgScope) Returns an implementation of the specified interface"
  },
  "api/SharpVectors.IoC.html": {
    "href": "api/SharpVectors.IoC.html",
    "title": "Namespace SharpVectors.IoC | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.IoC The SharpVectors.IoC namespace contains a bunch of classes and interfaces. Classes SvgContainer Inversion of control container handles dependency injection for registered types SvgIoCContainerExtensions Extension methods for Container Interfaces ISvgRegisteredType IRegisteredType is return by Container.Register and allows further configuration for the registration ISvgScope Represents a scope in which per-scope objects are instantiated a single time"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.-ctor.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.-ctor.html",
    "title": "Constructor CodeSnippetKeyResolver | SharpVectors Documentation",
    "keywords": "Constructor CodeSnippetKeyResolver Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll CodeSnippetKeyResolver() public CodeSnippetKeyResolver() CodeSnippetKeyResolver(string, string) public CodeSnippetKeyResolver(string codeSnippet, string codeLangugage) Parameters codeSnippet string codeLangugage string"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.BeginResolve.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.BeginResolve.html",
    "title": "Method BeginResolve | SharpVectors Documentation",
    "keywords": "Method BeginResolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll BeginResolve() This signals the start of a resource key resolving process. public void BeginResolve()"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.Clone.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.Clone.html",
    "title": "Method Clone | SharpVectors Documentation",
    "keywords": "Method Clone Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll Clone() This creates a new build object that is a deep copy of the current instance. public override CodeSnippetKeyResolver Clone() Returns CodeSnippetKeyResolver A new build object that is a deep copy of this instance. Remarks This is deep cloning of the members of this build object. If you need just a copy, use the copy constructor to create a new instance."
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.CodeLangugage.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.CodeLangugage.html",
    "title": "Property CodeLangugage | SharpVectors Documentation",
    "keywords": "Property CodeLangugage Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll CodeLangugage public string CodeLangugage { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.CodeSnippet.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.CodeSnippet.html",
    "title": "Property CodeSnippet | SharpVectors Documentation",
    "keywords": "Property CodeSnippet Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll CodeSnippet public string CodeSnippet { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.CompileResolver.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.CompileResolver.html",
    "title": "Method CompileResolver | SharpVectors Documentation",
    "keywords": "Method CompileResolver Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll CompileResolver(string, string) public static Tuple<bool, CodeSnippetKeyResolver, string> CompileResolver(string codeSnippet, string codeLangugage) Parameters codeSnippet string codeLangugage string Returns Tuple<bool, CodeSnippetKeyResolver, string>"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.CompileSnippet.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.CompileSnippet.html",
    "title": "Method CompileSnippet | SharpVectors Documentation",
    "keywords": "Method CompileSnippet Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll CompileSnippet(string, string) public static Tuple<bool, string> CompileSnippet(string codeSnippet, string codeLangugage) Parameters codeSnippet string codeLangugage string Returns Tuple<bool, string>"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.EndResolve.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.EndResolve.html",
    "title": "Method EndResolve | SharpVectors Documentation",
    "keywords": "Method EndResolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll EndResolve() This signals the end of a resource key resolving process. public void EndResolve()"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.IsValid.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.IsValid.html",
    "title": "Property IsValid | SharpVectors Documentation",
    "keywords": "Property IsValid Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll IsValid Gets a value specifying whether the resource key resolver is valid or not. public bool IsValid { get; } Property Value bool This is true if the resource resolver is valid, otherwise; it is false."
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.ReadXml.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.ReadXml.html",
    "title": "Method ReadXml | SharpVectors Documentation",
    "keywords": "Method ReadXml Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. public override void ReadXml(XmlReader reader) Parameters reader XmlReader The reader with which the XML attributes of this object are accessed. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.Resolve.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.Resolve.html",
    "title": "Method Resolve | SharpVectors Documentation",
    "keywords": "Method Resolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll Resolve(DependencyObject, int, string, string) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) Parameters resource DependencyObject The target resource object (DrawingGroup, DrawingImage) index int The index of the resource file. fileName string The file name of the SVG file without the extension. fileSource string The source directory of the SVG file. Returns string A string containing the key to be used to identify the specified resource. This must be at least 3 characters and less than 255 characters."
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.ResolverType.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.ResolverType.html",
    "title": "Property ResolverType | SharpVectors Documentation",
    "keywords": "Property ResolverType Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ResolverType Gets a value specifying the resource key resolver type. public ResourceKeyResolverType ResolverType { get; } Property Value ResourceKeyResolverType An enumeration of the type ResourceKeyResolverType specifying the type of the resource key resolver."
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.SnippetClass.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.SnippetClass.html",
    "title": "Field SnippetClass | SharpVectors Documentation",
    "keywords": "Field SnippetClass Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll public const string SnippetClass = \"SharpVectors.Renderers.SnippetKeyResolver\" Returns string"
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.WriteXml.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.WriteXml.html",
    "title": "Method WriteXml | SharpVectors Documentation",
    "keywords": "Method WriteXml Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. public override void WriteXml(XmlWriter writer) Parameters writer XmlWriter The XML writer with which the XML format of this object's state is written. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.CodeSnippetKeyResolver.html": {
    "href": "api/SharpVectors.Renderers.CodeSnippetKeyResolver.html",
    "title": "Class CodeSnippetKeyResolver | SharpVectors Documentation",
    "keywords": "Class CodeSnippetKeyResolver Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll [Serializable] public sealed class CodeSnippetKeyResolver : WpfSettings<CodeSnippetKeyResolver>, ICloneable, IResourceKeyResolver, IXmlSerializable Inheritance object DispatcherObject DependencyObject WpfObject WpfSettings<CodeSnippetKeyResolver> CodeSnippetKeyResolver Implements ICloneable IResourceKeyResolver IXmlSerializable Inherited Members WpfObject.NotNull(object, string) WpfObject.NotNull(string, string) WpfObject.NotEmpty(string, string) WpfObject.NotNullNotEmpty(string, string) WpfObject.NotNullNotEmpty<E>(IList<E>, string) WpfObject.PathMustExist(string, string) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors CodeSnippetKeyResolver() CodeSnippetKeyResolver(string, string) Fields SnippetClass Properties CodeLangugage CodeSnippet IsValid Gets a value specifying whether the resource key resolver is valid or not. ResolverType Gets a value specifying the resource key resolver type. Methods BeginResolve() This signals the start of a resource key resolving process. Clone() This creates a new build object that is a deep copy of the current instance. CompileResolver(string, string) CompileSnippet(string, string) EndResolve() This signals the end of a resource key resolving process. ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. Resolve(DependencyObject, int, string, string) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer."
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.-ctor.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.-ctor.html",
    "title": "Constructor DictionaryKeyResolver | SharpVectors Documentation",
    "keywords": "Constructor DictionaryKeyResolver Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll DictionaryKeyResolver() public DictionaryKeyResolver() DictionaryKeyResolver(IDictionary<string, string>) public DictionaryKeyResolver(IDictionary<string, string> keyDictionary) Parameters keyDictionary IDictionary<string, string>"
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.BeginResolve.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.BeginResolve.html",
    "title": "Method BeginResolve | SharpVectors Documentation",
    "keywords": "Method BeginResolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll BeginResolve() This signals the start of a resource key resolving process. public void BeginResolve()"
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.Clone.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.Clone.html",
    "title": "Method Clone | SharpVectors Documentation",
    "keywords": "Method Clone Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll Clone() This creates a new build object that is a deep copy of the current instance. public override DictionaryKeyResolver Clone() Returns DictionaryKeyResolver A new build object that is a deep copy of this instance. Remarks This is deep cloning of the members of this build object. If you need just a copy, use the copy constructor to create a new instance."
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.Dictionary.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.Dictionary.html",
    "title": "Property Dictionary | SharpVectors Documentation",
    "keywords": "Property Dictionary Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll Dictionary public IDictionary<string, string> Dictionary { get; set; } Property Value IDictionary<string, string>"
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.EndResolve.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.EndResolve.html",
    "title": "Method EndResolve | SharpVectors Documentation",
    "keywords": "Method EndResolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll EndResolve() This signals the end of a resource key resolving process. public void EndResolve()"
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.IsValid.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.IsValid.html",
    "title": "Property IsValid | SharpVectors Documentation",
    "keywords": "Property IsValid Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll IsValid Gets a value specifying whether the resource key resolver is valid or not. public bool IsValid { get; } Property Value bool This is true if the resource resolver is valid, otherwise; it is false."
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.ReadXml.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.ReadXml.html",
    "title": "Method ReadXml | SharpVectors Documentation",
    "keywords": "Method ReadXml Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. public override void ReadXml(XmlReader reader) Parameters reader XmlReader The reader with which the XML attributes of this object are accessed. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.Resolve.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.Resolve.html",
    "title": "Method Resolve | SharpVectors Documentation",
    "keywords": "Method Resolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll Resolve(DependencyObject, int, string, string) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) Parameters resource DependencyObject The target resource object (DrawingGroup, DrawingImage) index int The index of the resource file. fileName string The file name of the SVG file without the extension. fileSource string The source directory of the SVG file. Returns string A string containing the key to be used to identify the specified resource. This must be at least 3 characters and less than 255 characters."
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.ResolverType.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.ResolverType.html",
    "title": "Property ResolverType | SharpVectors Documentation",
    "keywords": "Property ResolverType Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ResolverType Gets a value specifying the resource key resolver type. public ResourceKeyResolverType ResolverType { get; } Property Value ResourceKeyResolverType An enumeration of the type ResourceKeyResolverType specifying the type of the resource key resolver."
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.WriteXml.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.WriteXml.html",
    "title": "Method WriteXml | SharpVectors Documentation",
    "keywords": "Method WriteXml Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. public override void WriteXml(XmlWriter writer) Parameters writer XmlWriter The XML writer with which the XML format of this object's state is written. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.DictionaryKeyResolver.html": {
    "href": "api/SharpVectors.Renderers.DictionaryKeyResolver.html",
    "title": "Class DictionaryKeyResolver | SharpVectors Documentation",
    "keywords": "Class DictionaryKeyResolver Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll [Serializable] public sealed class DictionaryKeyResolver : WpfSettings<DictionaryKeyResolver>, ICloneable, IResourceKeyResolver, IXmlSerializable Inheritance object DispatcherObject DependencyObject WpfObject WpfSettings<DictionaryKeyResolver> DictionaryKeyResolver Implements ICloneable IResourceKeyResolver IXmlSerializable Inherited Members WpfObject.NotNull(object, string) WpfObject.NotNull(string, string) WpfObject.NotEmpty(string, string) WpfObject.NotNullNotEmpty(string, string) WpfObject.NotNullNotEmpty<E>(IList<E>, string) WpfObject.PathMustExist(string, string) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors DictionaryKeyResolver() DictionaryKeyResolver(IDictionary<string, string>) Properties Dictionary IsValid Gets a value specifying whether the resource key resolver is valid or not. ResolverType Gets a value specifying the resource key resolver type. Methods BeginResolve() This signals the start of a resource key resolving process. Clone() This creates a new build object that is a deep copy of the current instance. EndResolve() This signals the end of a resource key resolving process. ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. Resolve(DependencyObject, int, string, string) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer."
  },
  "api/SharpVectors.Renderers.IResourceKeyResolver.BeginResolve.html": {
    "href": "api/SharpVectors.Renderers.IResourceKeyResolver.BeginResolve.html",
    "title": "Method BeginResolve | SharpVectors Documentation",
    "keywords": "Method BeginResolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll BeginResolve() This signals the start of a resource key resolving process. void BeginResolve()"
  },
  "api/SharpVectors.Renderers.IResourceKeyResolver.EndResolve.html": {
    "href": "api/SharpVectors.Renderers.IResourceKeyResolver.EndResolve.html",
    "title": "Method EndResolve | SharpVectors Documentation",
    "keywords": "Method EndResolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll EndResolve() This signals the end of a resource key resolving process. void EndResolve()"
  },
  "api/SharpVectors.Renderers.IResourceKeyResolver.IsValid.html": {
    "href": "api/SharpVectors.Renderers.IResourceKeyResolver.IsValid.html",
    "title": "Property IsValid | SharpVectors Documentation",
    "keywords": "Property IsValid Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll IsValid Gets a value specifying whether the resource key resolver is valid or not. bool IsValid { get; } Property Value bool This is true if the resource resolver is valid, otherwise; it is false."
  },
  "api/SharpVectors.Renderers.IResourceKeyResolver.Resolve.html": {
    "href": "api/SharpVectors.Renderers.IResourceKeyResolver.Resolve.html",
    "title": "Method Resolve | SharpVectors Documentation",
    "keywords": "Method Resolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll Resolve(DependencyObject, int, string, string) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). string Resolve(DependencyObject resource, int index, string fileName, string fileSource) Parameters resource DependencyObject The target resource object (DrawingGroup, DrawingImage) index int The index of the resource file. fileName string The file name of the SVG file without the extension. fileSource string The source directory of the SVG file. Returns string A string containing the key to be used to identify the specified resource. This must be at least 3 characters and less than 255 characters."
  },
  "api/SharpVectors.Renderers.IResourceKeyResolver.ResolverType.html": {
    "href": "api/SharpVectors.Renderers.IResourceKeyResolver.ResolverType.html",
    "title": "Property ResolverType | SharpVectors Documentation",
    "keywords": "Property ResolverType Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ResolverType Gets a value specifying the resource key resolver type. ResourceKeyResolverType ResolverType { get; } Property Value ResourceKeyResolverType An enumeration of the type ResourceKeyResolverType specifying the type of the resource key resolver."
  },
  "api/SharpVectors.Renderers.IResourceKeyResolver.html": {
    "href": "api/SharpVectors.Renderers.IResourceKeyResolver.html",
    "title": "Interface IResourceKeyResolver | SharpVectors Documentation",
    "keywords": "Interface IResourceKeyResolver Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll An interface for resolving the resource key of a resource object (DrawingGroup, DrawingImage) generated by the resource dictionary converter. public interface IResourceKeyResolver : IXmlSerializable Inherited Members IXmlSerializable.GetSchema() IXmlSerializable.ReadXml(XmlReader) IXmlSerializable.WriteXml(XmlWriter) Properties IsValid Gets a value specifying whether the resource key resolver is valid or not. ResolverType Gets a value specifying the resource key resolver type. Methods BeginResolve() This signals the start of a resource key resolving process. EndResolve() This signals the end of a resource key resolving process. Resolve(DependencyObject, int, string, string) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory)."
  },
  "api/SharpVectors.Renderers.ResourceAccessType.html": {
    "href": "api/SharpVectors.Renderers.ResourceAccessType.html",
    "title": "Enum ResourceAccessType | SharpVectors Documentation",
    "keywords": "Enum ResourceAccessType Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll A value specifying the referencing or access resource dictionary (DynamicResource, StaticResource). public enum ResourceAccessType Fields None = 0 Indicates the resource referencing type is not specified. Dynamic = 1 Indicates the resource referencing is dynamic, DynamicResource. Static = 2 Indicates the resource referencing is static, StaticResource."
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.-ctor.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.-ctor.html",
    "title": "Constructor ResourceKeyResolver | SharpVectors Documentation",
    "keywords": "Constructor ResourceKeyResolver Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ResourceKeyResolver() public ResourceKeyResolver() ResourceKeyResolver(string) public ResourceKeyResolver(string nameFormat) Parameters nameFormat string"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.BeginResolve.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.BeginResolve.html",
    "title": "Method BeginResolve | SharpVectors Documentation",
    "keywords": "Method BeginResolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll BeginResolve() This signals the start of a resource key resolving process. public void BeginResolve()"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.Clone.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.Clone.html",
    "title": "Method Clone | SharpVectors Documentation",
    "keywords": "Method Clone Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll Clone() This creates a new build object that is a deep copy of the current instance. public override ResourceKeyResolver Clone() Returns ResourceKeyResolver A new build object that is a deep copy of this instance. Remarks This is deep cloning of the members of this build object. If you need just a copy, use the copy constructor to create a new instance."
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.DefaultBrushNameFormat.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.DefaultBrushNameFormat.html",
    "title": "Field DefaultBrushNameFormat | SharpVectors Documentation",
    "keywords": "Field DefaultBrushNameFormat Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll public static readonly string DefaultBrushNameFormat Returns string"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.DefaultColorNameFormat.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.DefaultColorNameFormat.html",
    "title": "Field DefaultColorNameFormat | SharpVectors Documentation",
    "keywords": "Field DefaultColorNameFormat Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll public static readonly string DefaultColorNameFormat Returns string"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.DefaultPenNameFormat.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.DefaultPenNameFormat.html",
    "title": "Field DefaultPenNameFormat | SharpVectors Documentation",
    "keywords": "Field DefaultPenNameFormat Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll public static readonly string DefaultPenNameFormat Returns string"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.DefaultResourceNameFormat.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.DefaultResourceNameFormat.html",
    "title": "Field DefaultResourceNameFormat | SharpVectors Documentation",
    "keywords": "Field DefaultResourceNameFormat Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll public static readonly string DefaultResourceNameFormat Returns string"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.EndResolve.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.EndResolve.html",
    "title": "Method EndResolve | SharpVectors Documentation",
    "keywords": "Method EndResolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll EndResolve() This signals the end of a resource key resolving process. public void EndResolve()"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.GetResolver.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.GetResolver.html",
    "title": "Method GetResolver | SharpVectors Documentation",
    "keywords": "Method GetResolver Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll GetResolver(ResourceKeyResolverType) public static Func<IResourceKeyResolver> GetResolver(ResourceKeyResolverType keyResolverType) Parameters keyResolverType ResourceKeyResolverType Returns Func<IResourceKeyResolver>"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.IsValid.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.IsValid.html",
    "title": "Property IsValid | SharpVectors Documentation",
    "keywords": "Property IsValid Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll IsValid Gets a value specifying whether the resource key resolver is valid or not. public bool IsValid { get; } Property Value bool This is true if the resource resolver is valid, otherwise; it is false."
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.NameFormat.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.NameFormat.html",
    "title": "Property NameFormat | SharpVectors Documentation",
    "keywords": "Property NameFormat Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll NameFormat public string NameFormat { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.ReadXml.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.ReadXml.html",
    "title": "Method ReadXml | SharpVectors Documentation",
    "keywords": "Method ReadXml Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. public override void ReadXml(XmlReader reader) Parameters reader XmlReader The reader with which the XML attributes of this object are accessed. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.Resolve.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.Resolve.html",
    "title": "Method Resolve | SharpVectors Documentation",
    "keywords": "Method Resolve Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll Resolve(DependencyObject, int, string, string) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) Parameters resource DependencyObject The target resource object (DrawingGroup, DrawingImage) index int The index of the resource file. fileName string The file name of the SVG file without the extension. fileSource string The source directory of the SVG file. Returns string A string containing the key to be used to identify the specified resource. This must be at least 3 characters and less than 255 characters."
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.ResolverType.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.ResolverType.html",
    "title": "Property ResolverType | SharpVectors Documentation",
    "keywords": "Property ResolverType Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ResolverType Gets a value specifying the resource key resolver type. public ResourceKeyResolverType ResolverType { get; } Property Value ResourceKeyResolverType An enumeration of the type ResourceKeyResolverType specifying the type of the resource key resolver."
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.TagName.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.TagName.html",
    "title": "Field TagName | SharpVectors Documentation",
    "keywords": "Field TagName Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll public static readonly string TagName Returns string"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.TagNumber.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.TagNumber.html",
    "title": "Field TagNumber | SharpVectors Documentation",
    "keywords": "Field TagNumber Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll public static readonly string TagNumber Returns string"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.ValidateNameFormat.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.ValidateNameFormat.html",
    "title": "Method ValidateNameFormat | SharpVectors Documentation",
    "keywords": "Method ValidateNameFormat Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ValidateNameFormat(string, bool) public static bool ValidateNameFormat(string nameFormat, bool isRequired) Parameters nameFormat string isRequired bool Returns bool"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.ValidateResourceNameFormat.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.ValidateResourceNameFormat.html",
    "title": "Method ValidateResourceNameFormat | SharpVectors Documentation",
    "keywords": "Method ValidateResourceNameFormat Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ValidateResourceNameFormat(string) public static bool ValidateResourceNameFormat(string nameFormat) Parameters nameFormat string Returns bool"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.WriteXml.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.WriteXml.html",
    "title": "Method WriteXml | SharpVectors Documentation",
    "keywords": "Method WriteXml Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. public override void WriteXml(XmlWriter writer) Parameters writer XmlWriter The XML writer with which the XML format of this object's state is written. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.XmlTagName.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.XmlTagName.html",
    "title": "Field XmlTagName | SharpVectors Documentation",
    "keywords": "Field XmlTagName Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll public static readonly string XmlTagName Returns string"
  },
  "api/SharpVectors.Renderers.ResourceKeyResolver.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolver.html",
    "title": "Class ResourceKeyResolver | SharpVectors Documentation",
    "keywords": "Class ResourceKeyResolver Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll The default implememation of the IResourceKeyResolver interface. It implementations the default method of resolving the resource key; either by the unmodified SVG file name, or a formatted name using the file name and/or resource index if a format string is provided. [Serializable] public sealed class ResourceKeyResolver : WpfSettings<ResourceKeyResolver>, ICloneable, IResourceKeyResolver, IXmlSerializable Inheritance object DispatcherObject DependencyObject WpfObject WpfSettings<ResourceKeyResolver> ResourceKeyResolver Implements ICloneable IResourceKeyResolver IXmlSerializable Inherited Members WpfObject.NotNull(object, string) WpfObject.NotNull(string, string) WpfObject.NotEmpty(string, string) WpfObject.NotNullNotEmpty(string, string) WpfObject.NotNullNotEmpty<E>(IList<E>, string) WpfObject.PathMustExist(string, string) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors ResourceKeyResolver() ResourceKeyResolver(string) Fields DefaultBrushNameFormat DefaultColorNameFormat DefaultPenNameFormat DefaultResourceNameFormat TagName TagNumber XmlTagName Properties IsValid Gets a value specifying whether the resource key resolver is valid or not. NameFormat ResolverType Gets a value specifying the resource key resolver type. Methods BeginResolve() This signals the start of a resource key resolving process. Clone() This creates a new build object that is a deep copy of the current instance. EndResolve() This signals the end of a resource key resolving process. GetResolver(ResourceKeyResolverType) ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. Resolve(DependencyObject, int, string, string) Generates the resource key to be applied to the specified resource object, created from the file name and from the specified source (directory). ValidateNameFormat(string, bool) ValidateResourceNameFormat(string) WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer."
  },
  "api/SharpVectors.Renderers.ResourceKeyResolverType.html": {
    "href": "api/SharpVectors.Renderers.ResourceKeyResolverType.html",
    "title": "Enum ResourceKeyResolverType | SharpVectors Documentation",
    "keywords": "Enum ResourceKeyResolverType Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll A value specifiying the resource key resolver type. public enum ResourceKeyResolverType Fields None = 0 Indicates an unspecified or unknown resource key resolver. Default = 1 The default resource key resolver. On error, any defined resolver will fallback to the default resource resolver. Dictionary = 2 A dictionary-based resource key resolver. CodeSnippet = 3 A user-defined C# code-based callback method for resolving the resource key. It is compiled and run at runtime in memory. Custom = 4 A custom or user-defined resource key resolver. It implements the IResourceKeyResolver interface."
  },
  "api/SharpVectors.Renderers.ResourceModeType.html": {
    "href": "api/SharpVectors.Renderers.ResourceModeType.html",
    "title": "Enum ResourceModeType | SharpVectors Documentation",
    "keywords": "Enum ResourceModeType Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll A value specifying the root resource element (DrawingGroup, DrawingImage). public enum ResourceModeType Fields None = 0 Indicates the root element is not specified. Drawing = 1 Indicates the DrawingGroup as the root resource element. Image = 2 Indicates the DrawingImage as the root resource element."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.-ctor.html",
    "title": "Constructor WpfFontTextBuilder | SharpVectors Documentation",
    "keywords": "Constructor WpfFontTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfFontTextBuilder(CultureInfo, double) public WpfFontTextBuilder(CultureInfo culture, double fontSize) Parameters culture CultureInfo fontSize double WpfFontTextBuilder(WpfFontFamilyInfo, CultureInfo, double) public WpfFontTextBuilder(WpfFontFamilyInfo familyInfo, CultureInfo culture, double fontSize) Parameters familyInfo WpfFontFamilyInfo culture CultureInfo fontSize double WpfFontTextBuilder(FontFamily, CultureInfo, double) public WpfFontTextBuilder(FontFamily fontFamily, CultureInfo culture, double fontSize) Parameters fontFamily FontFamily culture CultureInfo fontSize double WpfFontTextBuilder(FontFamily, FontStyle, FontWeight, CultureInfo, double) public WpfFontTextBuilder(FontFamily fontFamily, FontStyle fontStyle, FontWeight fontWeight, CultureInfo culture, double fontSize) Parameters fontFamily FontFamily fontStyle FontStyle fontWeight FontWeight culture CultureInfo fontSize double WpfFontTextBuilder(CultureInfo, string, double, Uri) public WpfFontTextBuilder(CultureInfo culture, string fontName, double fontSize, Uri fontUri = null) Parameters culture CultureInfo fontName string fontSize double fontUri Uri"
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.Alphabetic.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.Alphabetic.html",
    "title": "Property Alphabetic | SharpVectors Documentation",
    "keywords": "Property Alphabetic Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Alphabetic public override double Alphabetic { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.Ascent.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.Ascent.html",
    "title": "Property Ascent | SharpVectors Documentation",
    "keywords": "Property Ascent Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Ascent public override double Ascent { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.Build.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.Build.html",
    "title": "Method Build | SharpVectors Documentation",
    "keywords": "Method Build Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Build(SvgTextContentElement, string, double, double) public override Geometry Build(SvgTextContentElement element, string text, double x, double y) Parameters element SvgTextContentElement text string x double y double Returns Geometry"
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.FontFamilyType.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.FontFamilyType.html",
    "title": "Property FontFamilyType | SharpVectors Documentation",
    "keywords": "Property FontFamilyType Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontFamilyType public override WpfFontFamilyType FontFamilyType { get; } Property Value WpfFontFamilyType"
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.IsBoldSimulated.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.IsBoldSimulated.html",
    "title": "Property IsBoldSimulated | SharpVectors Documentation",
    "keywords": "Property IsBoldSimulated Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. public override bool IsBoldSimulated { get; } Property Value bool true if bold simulation is used for glyphs; otherwise, false."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.IsObliqueSimulated.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.IsObliqueSimulated.html",
    "title": "Property IsObliqueSimulated | SharpVectors Documentation",
    "keywords": "Property IsObliqueSimulated Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. public override bool IsObliqueSimulated { get; } Property Value bool true if italic simulation is used for glyphs; otherwise, false."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.MeasureChars.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.MeasureChars.html",
    "title": "Method MeasureChars | SharpVectors Documentation",
    "keywords": "Method MeasureChars Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll MeasureChars(SvgTextContentElement, string, bool) public override IList<Rect> MeasureChars(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters element SvgTextContentElement text string canBeWhitespace bool Returns IList<Rect>"
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.MeasureText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.MeasureText.html",
    "title": "Method MeasureText | SharpVectors Documentation",
    "keywords": "Method MeasureText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll MeasureText(SvgTextContentElement, string, bool) public override Size MeasureText(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters element SvgTextContentElement text string canBeWhitespace bool Returns Size"
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.OverlinePosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.OverlinePosition.html",
    "title": "Property OverlinePosition | SharpVectors Documentation",
    "keywords": "Property OverlinePosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. public override double OverlinePosition { get; } Property Value double A double that indicates the overline position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.OverlineThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.OverlineThickness.html",
    "title": "Property OverlineThickness | SharpVectors Documentation",
    "keywords": "Property OverlineThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. public override double OverlineThickness { get; } Property Value double A double that indicates the overline thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.StrikethroughPosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.StrikethroughPosition.html",
    "title": "Property StrikethroughPosition | SharpVectors Documentation",
    "keywords": "Property StrikethroughPosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. public override double StrikethroughPosition { get; } Property Value double A double that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.StrikethroughThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.StrikethroughThickness.html",
    "title": "Property StrikethroughThickness | SharpVectors Documentation",
    "keywords": "Property StrikethroughThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. public override double StrikethroughThickness { get; } Property Value double A double that indicates the strikethrough thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.UnderlinePosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.UnderlinePosition.html",
    "title": "Property UnderlinePosition | SharpVectors Documentation",
    "keywords": "Property UnderlinePosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. public override double UnderlinePosition { get; } Property Value double A double that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.UnderlineThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.UnderlineThickness.html",
    "title": "Property UnderlineThickness | SharpVectors Documentation",
    "keywords": "Property UnderlineThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. public override double UnderlineThickness { get; } Property Value double A double that indicates the underline thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.Width.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Width public override double Width { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.XHeight.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.XHeight.html",
    "title": "Property XHeight | SharpVectors Documentation",
    "keywords": "Property XHeight Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. public override double XHeight { get; } Property Value double A double that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfFontTextBuilder.html",
    "title": "Class WpfFontTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfFontTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfFontTextBuilder : WpfTextBuilder Inheritance object WpfTextBuilder WpfFontTextBuilder Inherited Members WpfTextBuilder.Create(FontFamily, CultureInfo, double) WpfTextBuilder.Create(FontFamily, FontStyle, FontWeight, CultureInfo, double) WpfTextBuilder.Create(string, CultureInfo, double) WpfTextBuilder.Create(WpfFontFamilyInfo, CultureInfo, double) WpfTextBuilder.Culture WpfTextBuilder.XmlLang WpfTextBuilder.FontName WpfTextBuilder.FontSize WpfTextBuilder.FontSizeInPoints WpfTextBuilder.FontUri WpfTextBuilder.PixelsPerInchX WpfTextBuilder.PixelsPerInchY WpfTextBuilder.DpiScaleX WpfTextBuilder.DpiScaleY WpfTextBuilder.PixelsPerDip WpfTextBuilder.BuildPathGeometry WpfTextBuilder.Baseline WpfTextBuilder.FlowDirection WpfTextBuilder.TextAlignment WpfTextBuilder.Trimming WpfTextBuilder.TextDecorations object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfFontTextBuilder(WpfFontFamilyInfo, CultureInfo, double) WpfFontTextBuilder(CultureInfo, double) WpfFontTextBuilder(CultureInfo, string, double, Uri) WpfFontTextBuilder(FontFamily, CultureInfo, double) WpfFontTextBuilder(FontFamily, FontStyle, FontWeight, CultureInfo, double) Properties Alphabetic Ascent FontFamilyType IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. Width XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. Methods Build(SvgTextContentElement, string, double, double) MeasureChars(SvgTextContentElement, string, bool) MeasureText(SvgTextContentElement, string, bool)"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.-ctor.html",
    "title": "Constructor WpfGlyphTextBuilder | SharpVectors Documentation",
    "keywords": "Constructor WpfGlyphTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfGlyphTextBuilder(CultureInfo, double) public WpfGlyphTextBuilder(CultureInfo culture, double fontSize) Parameters culture CultureInfo fontSize double WpfGlyphTextBuilder(WpfFontFamilyInfo, CultureInfo, double) public WpfGlyphTextBuilder(WpfFontFamilyInfo familyInfo, CultureInfo culture, double fontSize) Parameters familyInfo WpfFontFamilyInfo culture CultureInfo fontSize double WpfGlyphTextBuilder(FontFamily, CultureInfo, double) public WpfGlyphTextBuilder(FontFamily fontFamily, CultureInfo culture, double fontSize) Parameters fontFamily FontFamily culture CultureInfo fontSize double WpfGlyphTextBuilder(FontFamily, FontStyle, FontWeight, CultureInfo, double) public WpfGlyphTextBuilder(FontFamily fontFamily, FontStyle fontStyle, FontWeight fontWeight, CultureInfo culture, double fontSize) Parameters fontFamily FontFamily fontStyle FontStyle fontWeight FontWeight culture CultureInfo fontSize double WpfGlyphTextBuilder(CultureInfo, string, double, Uri) public WpfGlyphTextBuilder(CultureInfo culture, string fontName, double fontSize, Uri fontUri = null) Parameters culture CultureInfo fontName string fontSize double fontUri Uri"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Alphabetic.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Alphabetic.html",
    "title": "Property Alphabetic | SharpVectors Documentation",
    "keywords": "Property Alphabetic Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Alphabetic public override double Alphabetic { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Ascent.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Ascent.html",
    "title": "Property Ascent | SharpVectors Documentation",
    "keywords": "Property Ascent Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Ascent public override double Ascent { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Baseline.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Baseline.html",
    "title": "Property Baseline | SharpVectors Documentation",
    "keywords": "Property Baseline Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Baseline Gets the distance from the top of the first line to the baseline of the first line of a WpfTextBuilder object. public override double Baseline { get; } Property Value double The distance from the top of the first line to the baseline of the first line, provided in device-independent units (1/96th inch per unit)."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.BidiLevel.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.BidiLevel.html",
    "title": "Property BidiLevel | SharpVectors Documentation",
    "keywords": "Property BidiLevel Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll BidiLevel Gets or sets the bidirectional nesting level of Glyphs. public int BidiLevel { get; set; } Property Value int An int value that represents the bidirectional nesting level."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Build.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Build.html",
    "title": "Method Build | SharpVectors Documentation",
    "keywords": "Method Build Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Build(SvgTextContentElement, string, double, double) public override Geometry Build(SvgTextContentElement element, string text, double x, double y) Parameters element SvgTextContentElement text string x double y double Returns Geometry"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.DeviceFontName.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.DeviceFontName.html",
    "title": "Property DeviceFontName | SharpVectors Documentation",
    "keywords": "Property DeviceFontName Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll DeviceFontName Gets or sets the specific device font for which the Glyphs object has been optimized. public string DeviceFontName { get; set; } Property Value string A string value that represents the name of the device font."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.FontFamilyType.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.FontFamilyType.html",
    "title": "Property FontFamilyType | SharpVectors Documentation",
    "keywords": "Property FontFamilyType Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontFamilyType public override WpfFontFamilyType FontFamilyType { get; } Property Value WpfFontFamilyType"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.IsBoldSimulated.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.IsBoldSimulated.html",
    "title": "Property IsBoldSimulated | SharpVectors Documentation",
    "keywords": "Property IsBoldSimulated Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. public override bool IsBoldSimulated { get; } Property Value bool true if bold simulation is used for glyphs; otherwise, false."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.IsObliqueSimulated.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.IsObliqueSimulated.html",
    "title": "Property IsObliqueSimulated | SharpVectors Documentation",
    "keywords": "Property IsObliqueSimulated Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. public override bool IsObliqueSimulated { get; } Property Value bool true if italic simulation is used for glyphs; otherwise, false."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.IsSideways.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.IsSideways.html",
    "title": "Property IsSideways | SharpVectors Documentation",
    "keywords": "Property IsSideways Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsSideways public bool IsSideways { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.MeasureChars.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.MeasureChars.html",
    "title": "Method MeasureChars | SharpVectors Documentation",
    "keywords": "Method MeasureChars Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll MeasureChars(SvgTextContentElement, string, bool) public override IList<Rect> MeasureChars(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters element SvgTextContentElement text string canBeWhitespace bool Returns IList<Rect>"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.MeasureText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.MeasureText.html",
    "title": "Method MeasureText | SharpVectors Documentation",
    "keywords": "Method MeasureText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll MeasureText(SvgTextContentElement, string, bool) public override Size MeasureText(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters element SvgTextContentElement text string canBeWhitespace bool Returns Size"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.OverlinePosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.OverlinePosition.html",
    "title": "Property OverlinePosition | SharpVectors Documentation",
    "keywords": "Property OverlinePosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. public override double OverlinePosition { get; } Property Value double A double that indicates the overline position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.OverlineThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.OverlineThickness.html",
    "title": "Property OverlineThickness | SharpVectors Documentation",
    "keywords": "Property OverlineThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. public override double OverlineThickness { get; } Property Value double A double that indicates the overline thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.StrikethroughPosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.StrikethroughPosition.html",
    "title": "Property StrikethroughPosition | SharpVectors Documentation",
    "keywords": "Property StrikethroughPosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. public override double StrikethroughPosition { get; } Property Value double A double that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.StrikethroughThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.StrikethroughThickness.html",
    "title": "Property StrikethroughThickness | SharpVectors Documentation",
    "keywords": "Property StrikethroughThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. public override double StrikethroughThickness { get; } Property Value double A double that indicates the strikethrough thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.UnderlinePosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.UnderlinePosition.html",
    "title": "Property UnderlinePosition | SharpVectors Documentation",
    "keywords": "Property UnderlinePosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. public override double UnderlinePosition { get; } Property Value double A double that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.UnderlineThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.UnderlineThickness.html",
    "title": "Property UnderlineThickness | SharpVectors Documentation",
    "keywords": "Property UnderlineThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. public override double UnderlineThickness { get; } Property Value double A double that indicates the underline thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Width.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Width public override double Width { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.XHeight.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.XHeight.html",
    "title": "Property XHeight | SharpVectors Documentation",
    "keywords": "Property XHeight Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. public override double XHeight { get; } Property Value double A double that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfGlyphTextBuilder.html",
    "title": "Class WpfGlyphTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfGlyphTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfGlyphTextBuilder : WpfTextBuilder Inheritance object WpfTextBuilder WpfGlyphTextBuilder Inherited Members WpfTextBuilder.Create(FontFamily, CultureInfo, double) WpfTextBuilder.Create(FontFamily, FontStyle, FontWeight, CultureInfo, double) WpfTextBuilder.Create(string, CultureInfo, double) WpfTextBuilder.Create(WpfFontFamilyInfo, CultureInfo, double) WpfTextBuilder.Culture WpfTextBuilder.XmlLang WpfTextBuilder.FontName WpfTextBuilder.FontSize WpfTextBuilder.FontSizeInPoints WpfTextBuilder.FontUri WpfTextBuilder.PixelsPerInchX WpfTextBuilder.PixelsPerInchY WpfTextBuilder.DpiScaleX WpfTextBuilder.DpiScaleY WpfTextBuilder.PixelsPerDip WpfTextBuilder.BuildPathGeometry WpfTextBuilder.FlowDirection WpfTextBuilder.TextAlignment WpfTextBuilder.Trimming WpfTextBuilder.TextDecorations object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfGlyphTextBuilder(WpfFontFamilyInfo, CultureInfo, double) WpfGlyphTextBuilder(CultureInfo, double) WpfGlyphTextBuilder(CultureInfo, string, double, Uri) WpfGlyphTextBuilder(FontFamily, CultureInfo, double) WpfGlyphTextBuilder(FontFamily, FontStyle, FontWeight, CultureInfo, double) Properties Alphabetic Ascent Baseline Gets the distance from the top of the first line to the baseline of the first line of a WpfTextBuilder object. BidiLevel Gets or sets the bidirectional nesting level of Glyphs. DeviceFontName Gets or sets the specific device font for which the Glyphs object has been optimized. FontFamilyType IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. IsSideways OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. Width XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. Methods Build(SvgTextContentElement, string, double, double) MeasureChars(SvgTextContentElement, string, bool) MeasureText(SvgTextContentElement, string, bool)"
  },
  "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.-ctor.html",
    "title": "Constructor WpfHorzTextRenderer | SharpVectors Documentation",
    "keywords": "Constructor WpfHorzTextRenderer Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfHorzTextRenderer(SvgTextBaseElement, WpfTextRendering) public WpfHorzTextRenderer(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters textElement SvgTextBaseElement textRendering WpfTextRendering"
  },
  "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.RenderText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.RenderText.html",
    "title": "Method RenderText | SharpVectors Documentation",
    "keywords": "Method RenderText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderText(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) public override void RenderText(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters element SvgTextContentElement ctp Point text string rotate double placement WpfTextPlacement"
  },
  "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.RenderTextRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.RenderTextRun.html",
    "title": "Method RenderTextRun | SharpVectors Documentation",
    "keywords": "Method RenderTextRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderTextRun(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) public override void RenderTextRun(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters element SvgTextContentElement ctp Point text string rotate double placement WpfTextPlacement"
  },
  "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfHorzTextRenderer.html",
    "title": "Class WpfHorzTextRenderer | SharpVectors Documentation",
    "keywords": "Class WpfHorzTextRenderer Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfHorzTextRenderer : WpfTextRenderer, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfTextRenderer WpfHorzTextRenderer Implements IDisposable Inherited Members WpfTextRenderer.IsInitialized WpfTextRenderer.DrawContext WpfTextRenderer.TextElement WpfTextRenderer.SetElement(SvgTextBaseElement) WpfTextRenderer.Initialize(DrawingContext, WpfDrawingContext) WpfTextRenderer.Uninitialize() WpfTextRenderer.TrimText(SvgTextContentElement, string) WpfTextRenderer.GetText(SvgTextContentElement, XmlNode, XmlNode) WpfTextRenderer.GetText(SvgTRefElement) WpfTextRenderer.GetText(SvgAltGlyphElement) WpfTextRenderer.GetComputedFontSize(SvgTextContentElement) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfHorzTextRenderer(SvgTextBaseElement, WpfTextRendering) Methods RenderText(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) RenderTextRun(SvgTextContentElement, ref Point, string, double, WpfTextPlacement)"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.-ctor.html",
    "title": "Constructor WpfPathTextBuilder | SharpVectors Documentation",
    "keywords": "Constructor WpfPathTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfPathTextBuilder(SvgTextBaseElement) public WpfPathTextBuilder(SvgTextBaseElement textElement) Parameters textElement SvgTextBaseElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.AddTextRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.AddTextRun.html",
    "title": "Method AddTextRun | SharpVectors Documentation",
    "keywords": "Method AddTextRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll AddTextRun(WpfPathTextRun, string, Point, Brush, Pen) public void AddTextRun(WpfPathTextRun pathTextRun, string text, Point textPos, Brush textBrush, Pen textPen) Parameters pathTextRun WpfPathTextRun text string textPos Point textBrush Brush textPen Pen"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.BeginTextPath.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.BeginTextPath.html",
    "title": "Method BeginTextPath | SharpVectors Documentation",
    "keywords": "Method BeginTextPath Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll BeginTextPath(SvgTextPathElement) public void BeginTextPath(SvgTextPathElement svgElement) Parameters svgElement SvgTextPathElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.EndTextPath.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.EndTextPath.html",
    "title": "Method EndTextPath | SharpVectors Documentation",
    "keywords": "Method EndTextPath Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll EndTextPath() public void EndTextPath()"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.RenderTextPath.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.RenderTextPath.html",
    "title": "Method RenderTextPath | SharpVectors Documentation",
    "keywords": "Method RenderTextPath Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderTextPath(DrawingContext, PathGeometry, TextAlignment) public void RenderTextPath(DrawingContext dc, PathGeometry pathGeometry, TextAlignment pathAlignment) Parameters dc DrawingContext pathGeometry PathGeometry pathAlignment TextAlignment"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextBuilder.html",
    "title": "Class WpfPathTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfPathTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll This is the text-path builder, which handles the rendering using the text-builder objects, WpfTextBuilder, to convert the text characters to geometric representations. public sealed class WpfPathTextBuilder Inheritance object WpfPathTextBuilder Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfPathTextBuilder(SvgTextBaseElement) Methods AddTextRun(WpfPathTextRun, string, Point, Brush, Pen) BeginTextPath(SvgTextPathElement) EndTextPath() RenderTextPath(DrawingContext, PathGeometry, TextAlignment)"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.-ctor.html",
    "title": "Constructor WpfPathTextRenderer | SharpVectors Documentation",
    "keywords": "Constructor WpfPathTextRenderer Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfPathTextRenderer(SvgTextBaseElement, WpfTextRendering) public WpfPathTextRenderer(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters textElement SvgTextBaseElement textRendering WpfTextRendering"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.RenderText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.RenderText.html",
    "title": "Method RenderText | SharpVectors Documentation",
    "keywords": "Method RenderText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderText(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) public override void RenderText(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters element SvgTextContentElement ctp Point text string rotate double placement WpfTextPlacement"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.RenderTextRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.RenderTextRun.html",
    "title": "Method RenderTextRun | SharpVectors Documentation",
    "keywords": "Method RenderTextRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderTextRun(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) public override void RenderTextRun(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters element SvgTextContentElement ctp Point text string rotate double placement WpfTextPlacement"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRenderer.html",
    "title": "Class WpfPathTextRenderer | SharpVectors Documentation",
    "keywords": "Class WpfPathTextRenderer Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfPathTextRenderer : WpfTextRenderer, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfTextRenderer WpfPathTextRenderer Implements IDisposable Inherited Members WpfTextRenderer.IsInitialized WpfTextRenderer.DrawContext WpfTextRenderer.TextElement WpfTextRenderer.SetElement(SvgTextBaseElement) WpfTextRenderer.Initialize(DrawingContext, WpfDrawingContext) WpfTextRenderer.Uninitialize() WpfTextRenderer.TrimText(SvgTextContentElement, string) WpfTextRenderer.GetText(SvgTextContentElement, XmlNode, XmlNode) WpfTextRenderer.GetText(SvgTRefElement) WpfTextRenderer.GetText(SvgAltGlyphElement) WpfTextRenderer.GetComputedFontSize(SvgTextContentElement) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfPathTextRenderer(SvgTextBaseElement, WpfTextRendering) Methods RenderText(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) RenderTextRun(SvgTextContentElement, ref Point, string, double, WpfTextPlacement)"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.-ctor.html",
    "title": "Constructor WpfPathTextRun | SharpVectors Documentation",
    "keywords": "Constructor WpfPathTextRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfPathTextRun(SvgTextContentElement, WpfTextBuilder) public WpfPathTextRun(SvgTextContentElement textElement, WpfTextBuilder textBuilder) Parameters textElement SvgTextContentElement textBuilder WpfTextBuilder"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.AddRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.AddRun.html",
    "title": "Method AddRun | SharpVectors Documentation",
    "keywords": "Method AddRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll AddRun(Geometry) public void AddRun(Geometry textPath) Parameters textPath Geometry"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Brush.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Brush.html",
    "title": "Property Brush | SharpVectors Documentation",
    "keywords": "Property Brush Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Brush public Brush Brush { get; } Property Value Brush"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Builder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Builder.html",
    "title": "Property Builder | SharpVectors Documentation",
    "keywords": "Property Builder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Builder public WpfTextBuilder Builder { get; } Property Value WpfTextBuilder"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Element.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Element.html",
    "title": "Property Element | SharpVectors Documentation",
    "keywords": "Property Element Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Element public SvgTextContentElement Element { get; } Property Value SvgTextContentElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Initialize(string, Brush, Pen) public void Initialize(string text, Brush brush, Pen pen) Parameters text string brush Brush pen Pen"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Pen.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Pen.html",
    "title": "Property Pen | SharpVectors Documentation",
    "keywords": "Property Pen Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Pen public Pen Pen { get; } Property Value Pen"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Position.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Position.html",
    "title": "Property Position | SharpVectors Documentation",
    "keywords": "Property Position Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Position public Point Position { get; } Property Value Point"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.RenderRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.RenderRun.html",
    "title": "Method RenderRun | SharpVectors Documentation",
    "keywords": "Method RenderRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderRun(DrawingContext) public void RenderRun(DrawingContext context) Parameters context DrawingContext"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.SetPosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.SetPosition.html",
    "title": "Method SetPosition | SharpVectors Documentation",
    "keywords": "Method SetPosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll SetPosition(Point, SvgTextPathElement, SvgTextBaseElement) public void SetPosition(Point pos, SvgTextPathElement pathElement, SvgTextBaseElement textElement) Parameters pos Point pathElement SvgTextPathElement textElement SvgTextBaseElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.StartOffset.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.StartOffset.html",
    "title": "Property StartOffset | SharpVectors Documentation",
    "keywords": "Property StartOffset Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll StartOffset public ISvgAnimatedLength StartOffset { get; } Property Value ISvgAnimatedLength"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Text.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.Text.html",
    "title": "Property Text | SharpVectors Documentation",
    "keywords": "Property Text Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Text public string Text { get; } Property Value string"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.UnInitialize.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.UnInitialize.html",
    "title": "Method UnInitialize | SharpVectors Documentation",
    "keywords": "Method UnInitialize Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UnInitialize() public void UnInitialize()"
  },
  "api/SharpVectors.Renderers.Texts.WpfPathTextRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfPathTextRun.html",
    "title": "Class WpfPathTextRun | SharpVectors Documentation",
    "keywords": "Class WpfPathTextRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll This defines the information required to render a text-run on a path. public sealed class WpfPathTextRun Inheritance object WpfPathTextRun Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfPathTextRun(SvgTextContentElement, WpfTextBuilder) Properties Brush Builder Element Pen Position StartOffset Text Methods AddRun(Geometry) Initialize(string, Brush, Pen) RenderRun(DrawingContext) SetPosition(Point, SvgTextPathElement, SvgTextBaseElement) UnInitialize()"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.-ctor.html",
    "title": "Constructor WpfSvgTextBuilder | SharpVectors Documentation",
    "keywords": "Constructor WpfSvgTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfSvgTextBuilder(CultureInfo, SvgFontElement, double) public WpfSvgTextBuilder(CultureInfo culture, SvgFontElement font, double fontSize) Parameters culture CultureInfo font SvgFontElement fontSize double WpfSvgTextBuilder(SvgFontElement, CultureInfo, string, double, Uri) public WpfSvgTextBuilder(SvgFontElement font, CultureInfo culture, string fontName, double fontSize, Uri fontUri = null) Parameters font SvgFontElement culture CultureInfo fontName string fontSize double fontUri Uri"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.Alphabetic.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.Alphabetic.html",
    "title": "Property Alphabetic | SharpVectors Documentation",
    "keywords": "Property Alphabetic Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Alphabetic public override double Alphabetic { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.Ascent.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.Ascent.html",
    "title": "Property Ascent | SharpVectors Documentation",
    "keywords": "Property Ascent Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Ascent public override double Ascent { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.Build.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.Build.html",
    "title": "Method Build | SharpVectors Documentation",
    "keywords": "Method Build Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Build(SvgTextContentElement, string, double, double) public override Geometry Build(SvgTextContentElement element, string text, double x, double y) Parameters element SvgTextContentElement text string x double y double Returns Geometry"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontFamily.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontFamily.html",
    "title": "Property FontFamily | SharpVectors Documentation",
    "keywords": "Property FontFamily Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontFamily public FontFamily FontFamily { get; set; } Property Value FontFamily"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontFamilyType.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontFamilyType.html",
    "title": "Property FontFamilyType | SharpVectors Documentation",
    "keywords": "Property FontFamilyType Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontFamilyType public override WpfFontFamilyType FontFamilyType { get; } Property Value WpfFontFamilyType"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontStyle.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontStyle.html",
    "title": "Property FontStyle | SharpVectors Documentation",
    "keywords": "Property FontStyle Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontStyle public FontStyle FontStyle { get; set; } Property Value FontStyle"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontVariant.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontVariant.html",
    "title": "Property FontVariant | SharpVectors Documentation",
    "keywords": "Property FontVariant Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontVariant public string FontVariant { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontWeight.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.FontWeight.html",
    "title": "Property FontWeight | SharpVectors Documentation",
    "keywords": "Property FontWeight Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontWeight public FontWeight FontWeight { get; set; } Property Value FontWeight"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.HasUnicodeRange.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.HasUnicodeRange.html",
    "title": "Property HasUnicodeRange | SharpVectors Documentation",
    "keywords": "Property HasUnicodeRange Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll HasUnicodeRange public bool HasUnicodeRange { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.IsBoldSimulated.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.IsBoldSimulated.html",
    "title": "Property IsBoldSimulated | SharpVectors Documentation",
    "keywords": "Property IsBoldSimulated Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. public override bool IsBoldSimulated { get; } Property Value bool true if bold simulation is used for glyphs; otherwise, false."
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.IsObliqueSimulated.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.IsObliqueSimulated.html",
    "title": "Property IsObliqueSimulated | SharpVectors Documentation",
    "keywords": "Property IsObliqueSimulated Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. public override bool IsObliqueSimulated { get; } Property Value bool true if italic simulation is used for glyphs; otherwise, false."
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.IsStyleMatched.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.IsStyleMatched.html",
    "title": "Method IsStyleMatched | SharpVectors Documentation",
    "keywords": "Method IsStyleMatched Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsStyleMatched() public bool IsStyleMatched() Returns bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.MeasureChars.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.MeasureChars.html",
    "title": "Method MeasureChars | SharpVectors Documentation",
    "keywords": "Method MeasureChars Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll MeasureChars(SvgTextContentElement, string, bool) public override IList<Rect> MeasureChars(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters element SvgTextContentElement text string canBeWhitespace bool Returns IList<Rect>"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.MeasureText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.MeasureText.html",
    "title": "Method MeasureText | SharpVectors Documentation",
    "keywords": "Method MeasureText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll MeasureText(SvgTextContentElement, string, bool) public override Size MeasureText(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters element SvgTextContentElement text string canBeWhitespace bool Returns Size"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.OverlinePosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.OverlinePosition.html",
    "title": "Property OverlinePosition | SharpVectors Documentation",
    "keywords": "Property OverlinePosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. public override double OverlinePosition { get; } Property Value double A float that indicates the overline position, measured from the baseline and expressed as a fraction of the font em size. Remarks attribute name = \"overline-position\" {number}"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.OverlineThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.OverlineThickness.html",
    "title": "Property OverlineThickness | SharpVectors Documentation",
    "keywords": "Property OverlineThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. public override double OverlineThickness { get; } Property Value double A float that indicates the overline thickness, expressed as a fraction of the font em size. Remarks attribute name = \"overline-thickness\" {number}"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.StrikethroughPosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.StrikethroughPosition.html",
    "title": "Property StrikethroughPosition | SharpVectors Documentation",
    "keywords": "Property StrikethroughPosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. public override double StrikethroughPosition { get; } Property Value double A double that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.StrikethroughThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.StrikethroughThickness.html",
    "title": "Property StrikethroughThickness | SharpVectors Documentation",
    "keywords": "Property StrikethroughThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. public override double StrikethroughThickness { get; } Property Value double A double that indicates the strikethrough thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.UnderlinePosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.UnderlinePosition.html",
    "title": "Property UnderlinePosition | SharpVectors Documentation",
    "keywords": "Property UnderlinePosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. public override double UnderlinePosition { get; } Property Value double A double that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.UnderlineThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.UnderlineThickness.html",
    "title": "Property UnderlineThickness | SharpVectors Documentation",
    "keywords": "Property UnderlineThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. public override double UnderlineThickness { get; } Property Value double A double that indicates the underline thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.Width.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Width public override double Width { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.XHeight.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.XHeight.html",
    "title": "Property XHeight | SharpVectors Documentation",
    "keywords": "Property XHeight Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. public override double XHeight { get; } Property Value double A double that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfSvgTextBuilder.html",
    "title": "Class WpfSvgTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfSvgTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfSvgTextBuilder : WpfTextBuilder Inheritance object WpfTextBuilder WpfSvgTextBuilder Inherited Members WpfTextBuilder.Create(FontFamily, CultureInfo, double) WpfTextBuilder.Create(FontFamily, FontStyle, FontWeight, CultureInfo, double) WpfTextBuilder.Create(string, CultureInfo, double) WpfTextBuilder.Create(WpfFontFamilyInfo, CultureInfo, double) WpfTextBuilder.Culture WpfTextBuilder.XmlLang WpfTextBuilder.FontName WpfTextBuilder.FontSize WpfTextBuilder.FontSizeInPoints WpfTextBuilder.FontUri WpfTextBuilder.PixelsPerInchX WpfTextBuilder.PixelsPerInchY WpfTextBuilder.DpiScaleX WpfTextBuilder.DpiScaleY WpfTextBuilder.PixelsPerDip WpfTextBuilder.BuildPathGeometry WpfTextBuilder.Baseline WpfTextBuilder.FlowDirection WpfTextBuilder.TextAlignment WpfTextBuilder.Trimming WpfTextBuilder.TextDecorations object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfSvgTextBuilder(SvgFontElement, CultureInfo, string, double, Uri) WpfSvgTextBuilder(CultureInfo, SvgFontElement, double) Properties Alphabetic Ascent FontFamily FontFamilyType FontStyle FontVariant FontWeight HasUnicodeRange IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. Width XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. Methods Build(SvgTextContentElement, string, double, double) IsStyleMatched() MeasureChars(SvgTextContentElement, string, bool) MeasureText(SvgTextContentElement, string, bool)"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextAnchor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextAnchor.html",
    "title": "Enum WpfTextAnchor | SharpVectors Documentation",
    "keywords": "Enum WpfTextAnchor Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public enum WpfTextAnchor Fields None = 0 Start = 1 Middle = 2 End = 3"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.-ctor.html",
    "title": "Constructor WpfTextBuilder | SharpVectors Documentation",
    "keywords": "Constructor WpfTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfTextBuilder(CultureInfo, double) protected WpfTextBuilder(CultureInfo culture, double fontSize) Parameters culture CultureInfo fontSize double WpfTextBuilder(CultureInfo, string, double, Uri) protected WpfTextBuilder(CultureInfo culture, string fontName, double fontSize, Uri fontUri = null) Parameters culture CultureInfo fontName string fontSize double fontUri Uri"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Alphabetic.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Alphabetic.html",
    "title": "Property Alphabetic | SharpVectors Documentation",
    "keywords": "Property Alphabetic Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Alphabetic public abstract double Alphabetic { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Ascent.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Ascent.html",
    "title": "Property Ascent | SharpVectors Documentation",
    "keywords": "Property Ascent Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Ascent public abstract double Ascent { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Baseline.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Baseline.html",
    "title": "Property Baseline | SharpVectors Documentation",
    "keywords": "Property Baseline Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Baseline Gets the distance from the top of the first line to the baseline of the first line of a WpfTextBuilder object. public virtual double Baseline { get; } Property Value double The distance from the top of the first line to the baseline of the first line, provided in device-independent units (1/96th inch per unit)."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Build.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Build.html",
    "title": "Method Build | SharpVectors Documentation",
    "keywords": "Method Build Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Build(SvgTextContentElement, string, double, double) public abstract Geometry Build(SvgTextContentElement element, string text, double x, double y) Parameters element SvgTextContentElement text string x double y double Returns Geometry"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.BuildPathGeometry.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.BuildPathGeometry.html",
    "title": "Property BuildPathGeometry | SharpVectors Documentation",
    "keywords": "Property BuildPathGeometry Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll BuildPathGeometry public bool BuildPathGeometry { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Create.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Create.html",
    "title": "Method Create | SharpVectors Documentation",
    "keywords": "Method Create Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Create(FontFamily, CultureInfo, double) public static WpfTextBuilder Create(FontFamily fontFamily, CultureInfo culture, double fontSize) Parameters fontFamily FontFamily culture CultureInfo fontSize double Returns WpfTextBuilder Create(FontFamily, FontStyle, FontWeight, CultureInfo, double) public static WpfTextBuilder Create(FontFamily fontFamily, FontStyle fontStyle, FontWeight fontWeight, CultureInfo culture, double fontSize) Parameters fontFamily FontFamily fontStyle FontStyle fontWeight FontWeight culture CultureInfo fontSize double Returns WpfTextBuilder Create(string, CultureInfo, double) public static WpfTextBuilder Create(string familyInfo, CultureInfo culture, double fontSize) Parameters familyInfo string culture CultureInfo fontSize double Returns WpfTextBuilder Create(WpfFontFamilyInfo, CultureInfo, double) public static WpfTextBuilder Create(WpfFontFamilyInfo familyInfo, CultureInfo culture, double fontSize) Parameters familyInfo WpfFontFamilyInfo culture CultureInfo fontSize double Returns WpfTextBuilder"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Culture.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Culture.html",
    "title": "Property Culture | SharpVectors Documentation",
    "keywords": "Property Culture Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Culture public CultureInfo Culture { get; } Property Value CultureInfo"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.DpiScaleX.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.DpiScaleX.html",
    "title": "Property DpiScaleX | SharpVectors Documentation",
    "keywords": "Property DpiScaleX Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll DpiScaleX Gets the DPI scale on the X axis. public double DpiScaleX { get; } Property Value double The DPI scale for the X axis."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.DpiScaleY.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.DpiScaleY.html",
    "title": "Property DpiScaleY | SharpVectors Documentation",
    "keywords": "Property DpiScaleY Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll DpiScaleY Gets the DPI scale on the Yaxis. public double DpiScaleY { get; } Property Value double The DPI scale for the Y axis."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FlowDirection.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FlowDirection.html",
    "title": "Property FlowDirection | SharpVectors Documentation",
    "keywords": "Property FlowDirection Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FlowDirection Gets or sets the System.Windows.FlowDirection of a WpfTextBuilder object. public FlowDirection FlowDirection { get; set; } Property Value FlowDirection The System.Windows.FlowDirection of the formatted text."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontFamilyType.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontFamilyType.html",
    "title": "Property FontFamilyType | SharpVectors Documentation",
    "keywords": "Property FontFamilyType Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontFamilyType public abstract WpfFontFamilyType FontFamilyType { get; } Property Value WpfFontFamilyType"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontName.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontName.html",
    "title": "Property FontName | SharpVectors Documentation",
    "keywords": "Property FontName Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontName public string FontName { get; } Property Value string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontSize.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontSize.html",
    "title": "Property FontSize | SharpVectors Documentation",
    "keywords": "Property FontSize Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontSize public double FontSize { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontSizeInPoints.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontSizeInPoints.html",
    "title": "Property FontSizeInPoints | SharpVectors Documentation",
    "keywords": "Property FontSizeInPoints Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontSizeInPoints public double FontSizeInPoints { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontUri.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.FontUri.html",
    "title": "Property FontUri | SharpVectors Documentation",
    "keywords": "Property FontUri Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll FontUri public Uri FontUri { get; } Property Value Uri"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.IsBoldSimulated.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.IsBoldSimulated.html",
    "title": "Property IsBoldSimulated | SharpVectors Documentation",
    "keywords": "Property IsBoldSimulated Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. public abstract bool IsBoldSimulated { get; } Property Value bool true if bold simulation is used for glyphs; otherwise, false."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.IsObliqueSimulated.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.IsObliqueSimulated.html",
    "title": "Property IsObliqueSimulated | SharpVectors Documentation",
    "keywords": "Property IsObliqueSimulated Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. public abstract bool IsObliqueSimulated { get; } Property Value bool true if italic simulation is used for glyphs; otherwise, false."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.MeasureChars.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.MeasureChars.html",
    "title": "Method MeasureChars | SharpVectors Documentation",
    "keywords": "Method MeasureChars Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll MeasureChars(SvgTextContentElement, string, bool) public abstract IList<Rect> MeasureChars(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters element SvgTextContentElement text string canBeWhitespace bool Returns IList<Rect>"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.MeasureText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.MeasureText.html",
    "title": "Method MeasureText | SharpVectors Documentation",
    "keywords": "Method MeasureText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll MeasureText(SvgTextContentElement, string, bool) public abstract Size MeasureText(SvgTextContentElement element, string text, bool canBeWhitespace = true) Parameters element SvgTextContentElement text string canBeWhitespace bool Returns Size"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.OverlinePosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.OverlinePosition.html",
    "title": "Property OverlinePosition | SharpVectors Documentation",
    "keywords": "Property OverlinePosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. public abstract double OverlinePosition { get; } Property Value double A double that indicates the overline position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.OverlineThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.OverlineThickness.html",
    "title": "Property OverlineThickness | SharpVectors Documentation",
    "keywords": "Property OverlineThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. public abstract double OverlineThickness { get; } Property Value double A double that indicates the overline thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.PixelsPerDip.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.PixelsPerDip.html",
    "title": "Property PixelsPerDip | SharpVectors Documentation",
    "keywords": "Property PixelsPerDip Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll PixelsPerDip Get or sets the PixelsPerDip at which the text should be rendered. public double PixelsPerDip { get; } Property Value double The current PixelsPerDip value."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.PixelsPerInchX.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.PixelsPerInchX.html",
    "title": "Property PixelsPerInchX | SharpVectors Documentation",
    "keywords": "Property PixelsPerInchX Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll PixelsPerInchX Gets the DPI along X axis. public double PixelsPerInchX { get; } Property Value double The DPI along the X axis."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.PixelsPerInchY.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.PixelsPerInchY.html",
    "title": "Property PixelsPerInchY | SharpVectors Documentation",
    "keywords": "Property PixelsPerInchY Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll PixelsPerInchY Gets the DPI along Y axis. public double PixelsPerInchY { get; } Property Value double The DPI along the Y axis."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.StrikethroughPosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.StrikethroughPosition.html",
    "title": "Property StrikethroughPosition | SharpVectors Documentation",
    "keywords": "Property StrikethroughPosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. public abstract double StrikethroughPosition { get; } Property Value double A double that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.StrikethroughThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.StrikethroughThickness.html",
    "title": "Property StrikethroughThickness | SharpVectors Documentation",
    "keywords": "Property StrikethroughThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. public abstract double StrikethroughThickness { get; } Property Value double A double that indicates the strikethrough thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.TextAlignment.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.TextAlignment.html",
    "title": "Property TextAlignment | SharpVectors Documentation",
    "keywords": "Property TextAlignment Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll TextAlignment Gets or sets the alignment of text within a WpfTextBuilder object. public TextAlignment TextAlignment { get; set; } Property Value TextAlignment One of the System.Windows.TextAlignment values that specifies the alignment of text within a WpfTextBuilder object."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.TextDecorations.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.TextDecorations.html",
    "title": "Property TextDecorations | SharpVectors Documentation",
    "keywords": "Property TextDecorations Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll TextDecorations Sets the System.Windows.TextDecorationCollection for the entire set of characters in the WpfTextBuilder object. public TextDecorationCollection TextDecorations { get; set; } Property Value TextDecorationCollection The System.Windows.TextDecorationCollection to apply to the text."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Trimming.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Trimming.html",
    "title": "Property Trimming | SharpVectors Documentation",
    "keywords": "Property Trimming Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Trimming Gets or sets the means by which the omission of text is indicated. public TextTrimming Trimming { get; set; } Property Value TextTrimming One of the System.Windows.TextTrimming values that specifies how the omission of text is indicated. The default is System.Windows.TextTrimming.WordEllipsis."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.UnderlinePosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.UnderlinePosition.html",
    "title": "Property UnderlinePosition | SharpVectors Documentation",
    "keywords": "Property UnderlinePosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. public abstract double UnderlinePosition { get; } Property Value double A double that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.UnderlineThickness.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.UnderlineThickness.html",
    "title": "Property UnderlineThickness | SharpVectors Documentation",
    "keywords": "Property UnderlineThickness Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. public abstract double UnderlineThickness { get; } Property Value double A double that indicates the underline thickness, expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Width.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.Width.html",
    "title": "Property Width | SharpVectors Documentation",
    "keywords": "Property Width Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Width public abstract double Width { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.XHeight.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.XHeight.html",
    "title": "Property XHeight | SharpVectors Documentation",
    "keywords": "Property XHeight Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. public abstract double XHeight { get; } Property Value double A double that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size."
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.XmlLang.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.XmlLang.html",
    "title": "Property XmlLang | SharpVectors Documentation",
    "keywords": "Property XmlLang Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll XmlLang public string XmlLang { get; } Property Value string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder._buildPathGeometry.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder._buildPathGeometry.html",
    "title": "Field _buildPathGeometry | SharpVectors Documentation",
    "keywords": "Field _buildPathGeometry Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected bool _buildPathGeometry Returns bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder._culture.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder._culture.html",
    "title": "Field _culture | SharpVectors Documentation",
    "keywords": "Field _culture Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected CultureInfo _culture Returns CultureInfo"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder._dpiX.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder._dpiX.html",
    "title": "Field _dpiX | SharpVectors Documentation",
    "keywords": "Field _dpiX Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected readonly double _dpiX Returns double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder._dpiY.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder._dpiY.html",
    "title": "Field _dpiY | SharpVectors Documentation",
    "keywords": "Field _dpiY Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected readonly double _dpiY Returns double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder._fontName.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder._fontName.html",
    "title": "Field _fontName | SharpVectors Documentation",
    "keywords": "Field _fontName Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected readonly string _fontName Returns string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder._fontSize.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder._fontSize.html",
    "title": "Field _fontSize | SharpVectors Documentation",
    "keywords": "Field _fontSize Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected readonly double _fontSize Returns double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder._fontUri.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder._fontUri.html",
    "title": "Field _fontUri | SharpVectors Documentation",
    "keywords": "Field _fontUri Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected readonly Uri _fontUri Returns Uri"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder._textDecorations.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder._textDecorations.html",
    "title": "Field _textDecorations | SharpVectors Documentation",
    "keywords": "Field _textDecorations Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected TextDecorationCollection _textDecorations Returns TextDecorationCollection"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextBuilder.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextBuilder.html",
    "title": "Class WpfTextBuilder | SharpVectors Documentation",
    "keywords": "Class WpfTextBuilder Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfTextBuilder Inheritance object WpfTextBuilder Derived WpfFontTextBuilder WpfGlyphTextBuilder WpfSvgTextBuilder Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WpfTextBuilder(CultureInfo, double) WpfTextBuilder(CultureInfo, string, double, Uri) Fields _buildPathGeometry _culture _dpiX _dpiY _fontName _fontSize _fontUri _textDecorations Properties Alphabetic Ascent Baseline Gets the distance from the top of the first line to the baseline of the first line of a WpfTextBuilder object. BuildPathGeometry Culture DpiScaleX Gets the DPI scale on the X axis. DpiScaleY Gets the DPI scale on the Yaxis. FlowDirection Gets or sets the System.Windows.FlowDirection of a WpfTextBuilder object. FontFamilyType FontName FontSize FontSizeInPoints FontUri IsBoldSimulated Gets a value that determines whether to simulate a bold weight for the glyphs represented by the typeface. IsObliqueSimulated Gets a value that determines whether to simulate an italic style for the glyphs represented by the typeface. OverlinePosition Gets a value that indicates the distance of the overline from the baseline for the typeface. OverlineThickness Gets a value that indicates the thickness of the overline relative to the font em size for the typeface. PixelsPerDip Get or sets the PixelsPerDip at which the text should be rendered. PixelsPerInchX Gets the DPI along X axis. PixelsPerInchY Gets the DPI along Y axis. StrikethroughPosition Gets a value that indicates the distance from the baseline to the strikethrough for the typeface. StrikethroughThickness Gets a value that indicates the thickness of the strikethrough relative to the font em size. TextAlignment Gets or sets the alignment of text within a WpfTextBuilder object. TextDecorations Sets the System.Windows.TextDecorationCollection for the entire set of characters in the WpfTextBuilder object. Trimming Gets or sets the means by which the omission of text is indicated. UnderlinePosition Gets a value that indicates the distance of the underline from the baseline for the typeface. UnderlineThickness Gets a value that indicates the thickness of the underline relative to the font em size for the typeface. Width XHeight Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders. XmlLang Methods Build(SvgTextContentElement, string, double, double) Create(WpfFontFamilyInfo, CultureInfo, double) Create(string, CultureInfo, double) Create(FontFamily, CultureInfo, double) Create(FontFamily, FontStyle, FontWeight, CultureInfo, double) MeasureChars(SvgTextContentElement, string, bool) MeasureText(SvgTextContentElement, string, bool)"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.-ctor.html",
    "title": "Constructor WpfTextContext | SharpVectors Documentation",
    "keywords": "Constructor WpfTextContext Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfTextContext(SvgTextBaseElement, WpfTextRendering) public WpfTextContext(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters textElement SvgTextBaseElement textRendering WpfTextRendering"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.AddTextSize.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.AddTextSize.html",
    "title": "Method AddTextSize | SharpVectors Documentation",
    "keywords": "Method AddTextSize Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll AddTextSize(Point, double) public void AddTextSize(Point point, double size) Parameters point Point size double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.BeginMeasure.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.BeginMeasure.html",
    "title": "Method BeginMeasure | SharpVectors Documentation",
    "keywords": "Method BeginMeasure Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll BeginMeasure(int) public void BeginMeasure(int count) Parameters count int"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.Culture.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.Culture.html",
    "title": "Property Culture | SharpVectors Documentation",
    "keywords": "Property Culture Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Culture public CultureInfo Culture { get; } Property Value CultureInfo"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.EndMeasure.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.EndMeasure.html",
    "title": "Method EndMeasure | SharpVectors Documentation",
    "keywords": "Method EndMeasure Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll EndMeasure() public void EndMeasure()"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.IsPositionChanged.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.IsPositionChanged.html",
    "title": "Method IsPositionChanged | SharpVectors Documentation",
    "keywords": "Method IsPositionChanged Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsPositionChanged(SvgTextContentElement) public bool IsPositionChanged(SvgTextContentElement element) Parameters element SvgTextContentElement Returns bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.IsSingleLine.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.IsSingleLine.html",
    "title": "Property IsSingleLine | SharpVectors Documentation",
    "keywords": "Property IsSingleLine Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsSingleLine public bool IsSingleLine { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.IsSingleText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.IsSingleText.html",
    "title": "Property IsSingleText | SharpVectors Documentation",
    "keywords": "Property IsSingleText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsSingleText public bool IsSingleText { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.IsTextPath.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.IsTextPath.html",
    "title": "Property IsTextPath | SharpVectors Documentation",
    "keywords": "Property IsTextPath Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsTextPath public bool IsTextPath { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.IsVertical.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.IsVertical.html",
    "title": "Property IsVertical | SharpVectors Documentation",
    "keywords": "Property IsVertical Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsVertical public bool IsVertical { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.PositioningElement.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.PositioningElement.html",
    "title": "Property PositioningElement | SharpVectors Documentation",
    "keywords": "Property PositioningElement Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll PositioningElement public SvgTextContentElement PositioningElement { get; set; } Property Value SvgTextContentElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.PositioningEnd.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.PositioningEnd.html",
    "title": "Property PositioningEnd | SharpVectors Documentation",
    "keywords": "Property PositioningEnd Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll PositioningEnd public Point PositioningEnd { get; set; } Property Value Point"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.PositioningStart.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.PositioningStart.html",
    "title": "Property PositioningStart | SharpVectors Documentation",
    "keywords": "Property PositioningStart Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll PositioningStart public Point PositioningStart { get; set; } Property Value Point"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.SetElement.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.SetElement.html",
    "title": "Method SetElement | SharpVectors Documentation",
    "keywords": "Method SetElement Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll SetElement(SvgTextBaseElement) public void SetElement(SvgTextBaseElement textElement) Parameters textElement SvgTextBaseElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.Squiggly.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.Squiggly.html",
    "title": "Method Squiggly | SharpVectors Documentation",
    "keywords": "Method Squiggly Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Squiggly(Color, TextDecorationLocation) public static TextDecoration Squiggly(Color color, TextDecorationLocation location = TextDecorationLocation.Underline) Parameters color Color location TextDecorationLocation Returns TextDecoration"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.TextElement.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.TextElement.html",
    "title": "Property TextElement | SharpVectors Documentation",
    "keywords": "Property TextElement Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll TextElement public SvgTextBaseElement TextElement { get; } Property Value SvgTextBaseElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextContext.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextContext.html",
    "title": "Class WpfTextContext | SharpVectors Documentation",
    "keywords": "Class WpfTextContext Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfTextContext Inheritance object WpfTextContext Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfTextContext(SvgTextBaseElement, WpfTextRendering) Properties Culture IsSingleLine IsSingleText IsTextPath IsVertical PositioningElement PositioningEnd PositioningStart TextElement Methods AddTextSize(Point, double) BeginMeasure(int) EndMeasure() IsPositionChanged(SvgTextContentElement) SetElement(SvgTextBaseElement) Squiggly(Color, TextDecorationLocation)"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.-ctor.html",
    "title": "Constructor WpfTextPlacement | SharpVectors Documentation",
    "keywords": "Constructor WpfTextPlacement Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfTextPlacement() public WpfTextPlacement() WpfTextPlacement(Point, double) public WpfTextPlacement(Point location, double rotation) Parameters location Point rotation double WpfTextPlacement(Point, double, IList<WpfTextPosition>, bool) public WpfTextPlacement(Point location, double rotation, IList<WpfTextPosition> positions, bool isRotateOnly) Parameters location Point rotation double positions IList<WpfTextPosition> isRotateOnly bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.Create.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.Create.html",
    "title": "Method Create | SharpVectors Documentation",
    "keywords": "Method Create Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Create(SvgTextPositioningElement, Point, bool) public static WpfTextPlacement Create(SvgTextPositioningElement posElement, Point p, bool isTextPath = false) Parameters posElement SvgTextPositioningElement p Point isTextPath bool Returns WpfTextPlacement"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.HasPositions.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.HasPositions.html",
    "title": "Property HasPositions | SharpVectors Documentation",
    "keywords": "Property HasPositions Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll HasPositions public bool HasPositions { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.IsRotateOnly.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.IsRotateOnly.html",
    "title": "Property IsRotateOnly | SharpVectors Documentation",
    "keywords": "Property IsRotateOnly Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsRotateOnly public bool IsRotateOnly { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.Location.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.Location.html",
    "title": "Property Location | SharpVectors Documentation",
    "keywords": "Property Location Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Location public Point Location { get; } Property Value Point"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.Positions.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.Positions.html",
    "title": "Property Positions | SharpVectors Documentation",
    "keywords": "Property Positions Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Positions public IList<WpfTextPosition> Positions { get; } Property Value IList<WpfTextPosition>"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.Rotation.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.Rotation.html",
    "title": "Property Rotation | SharpVectors Documentation",
    "keywords": "Property Rotation Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Rotation public double Rotation { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.UpdatePositions.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.UpdatePositions.html",
    "title": "Method UpdatePositions | SharpVectors Documentation",
    "keywords": "Method UpdatePositions Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll UpdatePositions(string) public void UpdatePositions(string targetText) Parameters targetText string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPlacement.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPlacement.html",
    "title": "Class WpfTextPlacement | SharpVectors Documentation",
    "keywords": "Class WpfTextPlacement Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfTextPlacement Inheritance object WpfTextPlacement Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfTextPlacement() WpfTextPlacement(Point, double) WpfTextPlacement(Point, double, IList<WpfTextPosition>, bool) Properties HasPositions IsRotateOnly Location Positions Rotation Methods Create(SvgTextPositioningElement, Point, bool) UpdatePositions(string)"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPosition.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPosition.-ctor.html",
    "title": "Constructor WpfTextPosition | SharpVectors Documentation",
    "keywords": "Constructor WpfTextPosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfTextPosition(Point, double) public WpfTextPosition(Point location, double rotation) Parameters location Point rotation double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPosition.Location.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPosition.Location.html",
    "title": "Property Location | SharpVectors Documentation",
    "keywords": "Property Location Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Location public Point Location { get; set; } Property Value Point"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPosition.Rotation.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPosition.Rotation.html",
    "title": "Property Rotation | SharpVectors Documentation",
    "keywords": "Property Rotation Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Rotation public double Rotation { get; set; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextPosition.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextPosition.html",
    "title": "Struct WpfTextPosition | SharpVectors Documentation",
    "keywords": "Struct WpfTextPosition Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public struct WpfTextPosition Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfTextPosition(Point, double) Properties Location Rotation"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.-ctor.html",
    "title": "Constructor WpfTextRenderer | SharpVectors Documentation",
    "keywords": "Constructor WpfTextRenderer Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfTextRenderer(SvgTextBaseElement, WpfTextRendering) protected WpfTextRenderer(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters textElement SvgTextBaseElement textRendering WpfTextRendering"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.AddTextWidth.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.AddTextWidth.html",
    "title": "Method AddTextWidth | SharpVectors Documentation",
    "keywords": "Method AddTextWidth Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll AddTextWidth(Point, double) protected void AddTextWidth(Point location, double textWidth) Parameters location Point textWidth double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.Dispose.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.Dispose.html",
    "title": "Method Dispose | SharpVectors Documentation",
    "keywords": "Method Dispose Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.DrawContext.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.DrawContext.html",
    "title": "Property DrawContext | SharpVectors Documentation",
    "keywords": "Property DrawContext Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll DrawContext public DrawingContext DrawContext { get; } Property Value DrawingContext"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.ExtractTextPathGeometry.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.ExtractTextPathGeometry.html",
    "title": "Method ExtractTextPathGeometry | SharpVectors Documentation",
    "keywords": "Method ExtractTextPathGeometry Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll ExtractTextPathGeometry(Geometry) This will extract a PathGeometry that is nested into GeometryGroup, which is normally created by the FormattedText.BuildGeometry() method. protected static Geometry ExtractTextPathGeometry(Geometry sourceGeometry) Parameters sourceGeometry Geometry Returns Geometry"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetBolderFontWeight.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetBolderFontWeight.html",
    "title": "Method GetBolderFontWeight | SharpVectors Documentation",
    "keywords": "Method GetBolderFontWeight Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetBolderFontWeight(string) protected FontWeight GetBolderFontWeight(string fontWeight) Parameters fontWeight string Returns FontWeight"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetBrush.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetBrush.html",
    "title": "Method GetBrush | SharpVectors Documentation",
    "keywords": "Method GetBrush Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetBrush() protected Brush GetBrush() Returns Brush"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetComputedFontSize.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetComputedFontSize.html",
    "title": "Method GetComputedFontSize | SharpVectors Documentation",
    "keywords": "Method GetComputedFontSize Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetComputedFontSize(SvgTextContentElement) public static double GetComputedFontSize(SvgTextContentElement element) Parameters element SvgTextContentElement Returns double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetLighterFontWeight.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetLighterFontWeight.html",
    "title": "Method GetLighterFontWeight | SharpVectors Documentation",
    "keywords": "Method GetLighterFontWeight Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetLighterFontWeight(string) protected FontWeight GetLighterFontWeight(string fontWeight) Parameters fontWeight string Returns FontWeight"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetPen.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetPen.html",
    "title": "Method GetPen | SharpVectors Documentation",
    "keywords": "Method GetPen Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetPen() protected Pen GetPen() Returns Pen"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetText.html",
    "title": "Method GetText | SharpVectors Documentation",
    "keywords": "Method GetText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetText(SvgTextContentElement, XmlNode, XmlNode) public static string GetText(SvgTextContentElement element, XmlNode child, XmlNode spaceNode = null) Parameters element SvgTextContentElement child XmlNode spaceNode XmlNode Returns string GetText(SvgTRefElement) public static string GetText(SvgTRefElement element) Parameters element SvgTRefElement Returns string GetText(SvgAltGlyphElement) public static string GetText(SvgAltGlyphElement element) Parameters element SvgAltGlyphElement Returns string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextDecoration.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextDecoration.html",
    "title": "Method GetTextDecoration | SharpVectors Documentation",
    "keywords": "Method GetTextDecoration Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetTextDecoration(SvgTextContentElement) protected TextDecorationCollection GetTextDecoration(SvgTextContentElement element) Parameters element SvgTextContentElement Returns TextDecorationCollection"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontFamily.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontFamily.html",
    "title": "Method GetTextFontFamily | SharpVectors Documentation",
    "keywords": "Method GetTextFontFamily Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetTextFontFamily(SvgTextContentElement) protected FontFamily GetTextFontFamily(SvgTextContentElement element) Parameters element SvgTextContentElement Returns FontFamily"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontFamilyInfo.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontFamilyInfo.html",
    "title": "Method GetTextFontFamilyInfo | SharpVectors Documentation",
    "keywords": "Method GetTextFontFamilyInfo Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetTextFontFamilyInfo(SvgTextContentElement) protected WpfFontFamilyInfo GetTextFontFamilyInfo(SvgTextContentElement element) Parameters element SvgTextContentElement Returns WpfFontFamilyInfo"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontStretch.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontStretch.html",
    "title": "Method GetTextFontStretch | SharpVectors Documentation",
    "keywords": "Method GetTextFontStretch Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetTextFontStretch(SvgTextContentElement) protected FontStretch GetTextFontStretch(SvgTextContentElement element) Parameters element SvgTextContentElement Returns FontStretch"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontStyle.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontStyle.html",
    "title": "Method GetTextFontStyle | SharpVectors Documentation",
    "keywords": "Method GetTextFontStyle Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetTextFontStyle(SvgTextContentElement) protected FontStyle GetTextFontStyle(SvgTextContentElement element) Parameters element SvgTextContentElement Returns FontStyle GetTextFontStyle(string) protected FontStyle GetTextFontStyle(string fontStyle) Parameters fontStyle string Returns FontStyle"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontWeight.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextFontWeight.html",
    "title": "Method GetTextFontWeight | SharpVectors Documentation",
    "keywords": "Method GetTextFontWeight Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetTextFontWeight(string) protected FontWeight GetTextFontWeight(string fontWeight) Parameters fontWeight string Returns FontWeight GetTextFontWeight(SvgTextContentElement) protected FontWeight GetTextFontWeight(SvgTextContentElement element) Parameters element SvgTextContentElement Returns FontWeight"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextStringFormat.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.GetTextStringFormat.html",
    "title": "Method GetTextStringFormat | SharpVectors Documentation",
    "keywords": "Method GetTextStringFormat Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll GetTextStringFormat(SvgTextContentElement) protected WpfTextStringFormat GetTextStringFormat(SvgTextContentElement element) Parameters element SvgTextContentElement Returns WpfTextStringFormat"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Initialize(DrawingContext, WpfDrawingContext) public virtual void Initialize(DrawingContext textContext, WpfDrawingContext drawContext) Parameters textContext DrawingContext drawContext WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.IsInitialized.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.IsInitialized.html",
    "title": "Property IsInitialized | SharpVectors Documentation",
    "keywords": "Property IsInitialized Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsInitialized public override bool IsInitialized { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.IsMeasuring.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.IsMeasuring.html",
    "title": "Property IsMeasuring | SharpVectors Documentation",
    "keywords": "Property IsMeasuring Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsMeasuring protected bool IsMeasuring { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.IsTextPath.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.IsTextPath.html",
    "title": "Property IsTextPath | SharpVectors Documentation",
    "keywords": "Property IsTextPath Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsTextPath protected bool IsTextPath { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.NonBreaking.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.NonBreaking.html",
    "title": "Field NonBreaking | SharpVectors Documentation",
    "keywords": "Field NonBreaking Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected static readonly string NonBreaking Returns string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.NonBreakingChar.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.NonBreakingChar.html",
    "title": "Field NonBreakingChar | SharpVectors Documentation",
    "keywords": "Field NonBreakingChar Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected const char NonBreakingChar = ' ' Returns char"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.RenderText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.RenderText.html",
    "title": "Method RenderText | SharpVectors Documentation",
    "keywords": "Method RenderText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderText(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) public abstract void RenderText(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters element SvgTextContentElement ctp Point text string rotate double placement WpfTextPlacement"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.RenderTextRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.RenderTextRun.html",
    "title": "Method RenderTextRun | SharpVectors Documentation",
    "keywords": "Method RenderTextRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderTextRun(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) public abstract void RenderTextRun(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters element SvgTextContentElement ctp Point text string rotate double placement WpfTextPlacement"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.SetElement.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.SetElement.html",
    "title": "Method SetElement | SharpVectors Documentation",
    "keywords": "Method SetElement Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll SetElement(SvgTextBaseElement) public virtual void SetElement(SvgTextBaseElement textElement) Parameters textElement SvgTextBaseElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.SetTextWidth.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.SetTextWidth.html",
    "title": "Method SetTextWidth | SharpVectors Documentation",
    "keywords": "Method SetTextWidth Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll SetTextWidth(double) protected void SetTextWidth(double textWidth) Parameters textWidth double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TextContext.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TextContext.html",
    "title": "Property TextContext | SharpVectors Documentation",
    "keywords": "Property TextContext Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll TextContext protected WpfTextContext TextContext { get; } Property Value WpfTextContext"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TextCulture.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TextCulture.html",
    "title": "Property TextCulture | SharpVectors Documentation",
    "keywords": "Property TextCulture Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll TextCulture protected CultureInfo TextCulture { get; } Property Value CultureInfo"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TextElement.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TextElement.html",
    "title": "Property TextElement | SharpVectors Documentation",
    "keywords": "Property TextElement Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll TextElement public SvgTextBaseElement TextElement { get; } Property Value SvgTextBaseElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TextWidth.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TextWidth.html",
    "title": "Property TextWidth | SharpVectors Documentation",
    "keywords": "Property TextWidth Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll TextWidth protected double TextWidth { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TrimText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.TrimText.html",
    "title": "Method TrimText | SharpVectors Documentation",
    "keywords": "Method TrimText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll TrimText(SvgTextContentElement, string) public static string TrimText(SvgTextContentElement element, string val) Parameters element SvgTextContentElement val string Returns string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.Uninitialize.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.Uninitialize.html",
    "title": "Method Uninitialize | SharpVectors Documentation",
    "keywords": "Method Uninitialize Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Uninitialize() public virtual void Uninitialize()"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.Whitespace.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.Whitespace.html",
    "title": "Field Whitespace | SharpVectors Documentation",
    "keywords": "Field Whitespace Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected const string Whitespace = \" \" Returns string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer._actualFontName.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer._actualFontName.html",
    "title": "Field _actualFontName | SharpVectors Documentation",
    "keywords": "Field _actualFontName Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected string _actualFontName Returns string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer._decimalNumber.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer._decimalNumber.html",
    "title": "Field _decimalNumber | SharpVectors Documentation",
    "keywords": "Field _decimalNumber Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected static readonly Regex _decimalNumber Returns Regex"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer._drawContext.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer._drawContext.html",
    "title": "Field _drawContext | SharpVectors Documentation",
    "keywords": "Field _drawContext Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected DrawingContext _drawContext Returns DrawingContext"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer._multipleSpaces.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer._multipleSpaces.html",
    "title": "Field _multipleSpaces | SharpVectors Documentation",
    "keywords": "Field _multipleSpaces Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected static readonly Regex _multipleSpaces Returns Regex"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer._tabNewline.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer._tabNewline.html",
    "title": "Field _tabNewline | SharpVectors Documentation",
    "keywords": "Field _tabNewline Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected static readonly Regex _tabNewline Returns Regex"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer._textElement.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer._textElement.html",
    "title": "Field _textElement | SharpVectors Documentation",
    "keywords": "Field _textElement Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected SvgTextBaseElement _textElement Returns SvgTextBaseElement"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer._textRendering.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer._textRendering.html",
    "title": "Field _textRendering | SharpVectors Documentation",
    "keywords": "Field _textRendering Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll protected WpfTextRendering _textRendering Returns WpfTextRendering"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRenderer.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRenderer.html",
    "title": "Class WpfTextRenderer | SharpVectors Documentation",
    "keywords": "Class WpfTextRenderer Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfTextRenderer : WpfRendererObject, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfTextRenderer Implements IDisposable Derived WpfHorzTextRenderer WpfPathTextRenderer WpfVertTextRenderer Inherited Members WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfTextRenderer(SvgTextBaseElement, WpfTextRendering) Fields NonBreaking NonBreakingChar Whitespace _actualFontName _decimalNumber _drawContext _multipleSpaces _tabNewline _textElement _textRendering Properties DrawContext IsInitialized IsMeasuring IsTextPath TextContext TextCulture TextElement TextWidth Methods AddTextWidth(Point, double) Dispose(bool) ExtractTextPathGeometry(Geometry) This will extract a PathGeometry that is nested into GeometryGroup, which is normally created by the FormattedText.BuildGeometry() method. GetBolderFontWeight(string) GetBrush() GetComputedFontSize(SvgTextContentElement) GetLighterFontWeight(string) GetPen() GetText(SvgAltGlyphElement) GetText(SvgTRefElement) GetText(SvgTextContentElement, XmlNode, XmlNode) GetTextDecoration(SvgTextContentElement) GetTextFontFamily(SvgTextContentElement) GetTextFontFamilyInfo(SvgTextContentElement) GetTextFontStretch(SvgTextContentElement) GetTextFontStyle(SvgTextContentElement) GetTextFontStyle(string) GetTextFontWeight(SvgTextContentElement) GetTextFontWeight(string) GetTextStringFormat(SvgTextContentElement) Initialize(DrawingContext, WpfDrawingContext) RenderText(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) RenderTextRun(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) SetElement(SvgTextBaseElement) SetTextWidth(double) TrimText(SvgTextContentElement, string) Uninitialize()"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.-ctor.html",
    "title": "Constructor WpfTextRun | SharpVectors Documentation",
    "keywords": "Constructor WpfTextRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfTextRun() public WpfTextRun() WpfTextRun(string, bool, int, int) public WpfTextRun(string text, bool isLatin, int vertOrientation, int horzOrientation) Parameters text string isLatin bool vertOrientation int horzOrientation int"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.BreakWords.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.BreakWords.html",
    "title": "Method BreakWords | SharpVectors Documentation",
    "keywords": "Method BreakWords Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll BreakWords(string) public static IList<WpfTextRun> BreakWords(string text) Parameters text string Returns IList<WpfTextRun> BreakWords(string, int, int) public static IList<WpfTextRun> BreakWords(string text, int vertOrientation, int horzOrientation) Parameters text string vertOrientation int horzOrientation int Returns IList<WpfTextRun>"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.HorizontalOrientation.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.HorizontalOrientation.html",
    "title": "Property HorizontalOrientation | SharpVectors Documentation",
    "keywords": "Property HorizontalOrientation Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll HorizontalOrientation public int HorizontalOrientation { get; set; } Property Value int"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.IsEmpty.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.IsEmpty.html",
    "title": "Property IsEmpty | SharpVectors Documentation",
    "keywords": "Property IsEmpty Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsEmpty public bool IsEmpty { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.IsLatin.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.IsLatin.html",
    "title": "Property IsLatin | SharpVectors Documentation",
    "keywords": "Property IsLatin Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsLatin public bool IsLatin { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.IsLatinGlyph.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.IsLatinGlyph.html",
    "title": "Method IsLatinGlyph | SharpVectors Documentation",
    "keywords": "Method IsLatinGlyph Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll IsLatinGlyph(char) public static bool IsLatinGlyph(char ch) Parameters ch char Returns bool"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.Text.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.Text.html",
    "title": "Property Text | SharpVectors Documentation",
    "keywords": "Property Text Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Text public string Text { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.VerticalOrientation.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.VerticalOrientation.html",
    "title": "Property VerticalOrientation | SharpVectors Documentation",
    "keywords": "Property VerticalOrientation Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll VerticalOrientation public int VerticalOrientation { get; set; } Property Value int"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextRun.html",
    "title": "Class WpfTextRun | SharpVectors Documentation",
    "keywords": "Class WpfTextRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfTextRun Inheritance object WpfTextRun Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfTextRun() WpfTextRun(string, bool, int, int) Properties HorizontalOrientation IsEmpty IsLatin Text VerticalOrientation Methods BreakWords(string) BreakWords(string, int, int) IsLatinGlyph(char)"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.-ctor.html",
    "title": "Constructor WpfTextStringFormat | SharpVectors Documentation",
    "keywords": "Constructor WpfTextStringFormat Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfTextStringFormat(FlowDirection, TextTrimming, WpfTextAnchor) public WpfTextStringFormat(FlowDirection direction, TextTrimming trimming, WpfTextAnchor anchor) Parameters direction FlowDirection trimming TextTrimming anchor WpfTextAnchor"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Alignment.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Alignment.html",
    "title": "Property Alignment | SharpVectors Documentation",
    "keywords": "Property Alignment Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Alignment public TextAlignment Alignment { get; } Property Value TextAlignment"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Anchor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Anchor.html",
    "title": "Field Anchor | SharpVectors Documentation",
    "keywords": "Field Anchor Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public WpfTextAnchor Anchor Returns WpfTextAnchor"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Default.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Default.html",
    "title": "Property Default | SharpVectors Documentation",
    "keywords": "Property Default Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll Default public static WpfTextStringFormat Default { get; } Property Value WpfTextStringFormat"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Direction.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Direction.html",
    "title": "Field Direction | SharpVectors Documentation",
    "keywords": "Field Direction Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public FlowDirection Direction Returns FlowDirection"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Trimming.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.Trimming.html",
    "title": "Field Trimming | SharpVectors Documentation",
    "keywords": "Field Trimming Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public TextTrimming Trimming Returns TextTrimming"
  },
  "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfTextStringFormat.html",
    "title": "Struct WpfTextStringFormat | SharpVectors Documentation",
    "keywords": "Struct WpfTextStringFormat Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public struct WpfTextStringFormat Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfTextStringFormat(FlowDirection, TextTrimming, WpfTextAnchor) Fields Anchor Direction Trimming Properties Alignment Default"
  },
  "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.-ctor.html",
    "title": "Constructor WpfVertTextRenderer | SharpVectors Documentation",
    "keywords": "Constructor WpfVertTextRenderer Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll WpfVertTextRenderer(SvgTextBaseElement, WpfTextRendering) public WpfVertTextRenderer(SvgTextBaseElement textElement, WpfTextRendering textRendering) Parameters textElement SvgTextBaseElement textRendering WpfTextRendering"
  },
  "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.RenderText.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.RenderText.html",
    "title": "Method RenderText | SharpVectors Documentation",
    "keywords": "Method RenderText Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderText(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) public override void RenderText(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters element SvgTextContentElement ctp Point text string rotate double placement WpfTextPlacement"
  },
  "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.RenderTextRun.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.RenderTextRun.html",
    "title": "Method RenderTextRun | SharpVectors Documentation",
    "keywords": "Method RenderTextRun Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll RenderTextRun(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) public override void RenderTextRun(SvgTextContentElement element, ref Point ctp, string text, double rotate, WpfTextPlacement placement) Parameters element SvgTextContentElement ctp Point text string rotate double placement WpfTextPlacement"
  },
  "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.html": {
    "href": "api/SharpVectors.Renderers.Texts.WpfVertTextRenderer.html",
    "title": "Class WpfVertTextRenderer | SharpVectors Documentation",
    "keywords": "Class WpfVertTextRenderer Namespace SharpVectors.Renderers.Texts Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfVertTextRenderer : WpfTextRenderer, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfTextRenderer WpfVertTextRenderer Implements IDisposable Inherited Members WpfTextRenderer.IsInitialized WpfTextRenderer.DrawContext WpfTextRenderer.TextElement WpfTextRenderer.SetElement(SvgTextBaseElement) WpfTextRenderer.Initialize(DrawingContext, WpfDrawingContext) WpfTextRenderer.Uninitialize() WpfTextRenderer.TrimText(SvgTextContentElement, string) WpfTextRenderer.GetText(SvgTextContentElement, XmlNode, XmlNode) WpfTextRenderer.GetText(SvgTRefElement) WpfTextRenderer.GetText(SvgAltGlyphElement) WpfTextRenderer.GetComputedFontSize(SvgTextContentElement) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfVertTextRenderer(SvgTextBaseElement, WpfTextRendering) Methods RenderText(SvgTextContentElement, ref Point, string, double, WpfTextPlacement) RenderTextRun(SvgTextContentElement, ref Point, string, double, WpfTextPlacement)"
  },
  "api/SharpVectors.Renderers.Texts.html": {
    "href": "api/SharpVectors.Renderers.Texts.html",
    "title": "Namespace SharpVectors.Renderers.Texts | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Renderers.Texts The SharpVectors.Renderers.Texts namespace contains a bunch of classes and interfaces. Classes WpfFontTextBuilder WpfGlyphTextBuilder WpfHorzTextRenderer WpfPathTextBuilder This is the text-path builder, which handles the rendering using the text-builder objects, WpfTextBuilder, to convert the text characters to geometric representations. WpfPathTextRenderer WpfPathTextRun This defines the information required to render a text-run on a path. WpfSvgTextBuilder WpfTextBuilder WpfTextContext WpfTextPlacement WpfTextRenderer WpfTextRun WpfVertTextRenderer Structs WpfTextPosition WpfTextStringFormat Enums WpfTextAnchor"
  },
  "api/SharpVectors.Renderers.Utils.WpfConvert.Equals.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfConvert.Equals.html",
    "title": "Method Equals | SharpVectors Documentation",
    "keywords": "Method Equals Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll Equals(Size, Size) public static bool Equals(Size size1, Size size2) Parameters size1 Size size2 Size Returns bool"
  },
  "api/SharpVectors.Renderers.Utils.WpfConvert.GetPathFigureLength.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfConvert.GetPathFigureLength.html",
    "title": "Method GetPathFigureLength | SharpVectors Documentation",
    "keywords": "Method GetPathFigureLength Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll GetPathFigureLength(PathFigure) public static double GetPathFigureLength(PathFigure pathFigure) Parameters pathFigure PathFigure Returns double"
  },
  "api/SharpVectors.Renderers.Utils.WpfConvert.GetTransform.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfConvert.GetTransform.html",
    "title": "Method GetTransform | SharpVectors Documentation",
    "keywords": "Method GetTransform Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll GetTransform(SvgElement, bool) public static Transform GetTransform(SvgElement svgElement, bool _combineTransforms = true) Parameters svgElement SvgElement _combineTransforms bool Returns Transform"
  },
  "api/SharpVectors.Renderers.Utils.WpfConvert.ToColor.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfConvert.ToColor.html",
    "title": "Method ToColor | SharpVectors Documentation",
    "keywords": "Method ToColor Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll ToColor(ICssColor) A WPF Color representation of the RgbColor. public static Color? ToColor(ICssColor color) Parameters color ICssColor Returns Color?"
  },
  "api/SharpVectors.Renderers.Utils.WpfConvert.ToPath.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfConvert.ToPath.html",
    "title": "Method ToPath | SharpVectors Documentation",
    "keywords": "Method ToPath Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll ToPath(SvgRectF) public static PathGeometry ToPath(SvgRectF rect) Parameters rect SvgRectF Returns PathGeometry ToPath(Rect) public static PathGeometry ToPath(Rect rect) Parameters rect Rect Returns PathGeometry ToPath(RectangleGeometry) public static PathGeometry ToPath(RectangleGeometry rect) Parameters rect RectangleGeometry Returns PathGeometry ToPath(EllipseGeometry) public static PathGeometry ToPath(EllipseGeometry ellipse) Parameters ellipse EllipseGeometry Returns PathGeometry ToPath(LineGeometry) public static PathGeometry ToPath(LineGeometry line) Parameters line LineGeometry Returns PathGeometry"
  },
  "api/SharpVectors.Renderers.Utils.WpfConvert.ToRect.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfConvert.ToRect.html",
    "title": "Method ToRect | SharpVectors Documentation",
    "keywords": "Method ToRect Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll ToRect(ICssRect) public static Rect ToRect(ICssRect rect) Parameters rect ICssRect Returns Rect ToRect(SvgRectF) This converts the specified Rect structure to a SvgRectF structure. public static Rect ToRect(SvgRectF rect) Parameters rect SvgRectF The Rect structure to convert. Returns Rect The SvgRectF structure that is converted from the specified Rect structure. ToRect(ISvgRect) public static Rect ToRect(ISvgRect rect) Parameters rect ISvgRect Returns Rect"
  },
  "api/SharpVectors.Renderers.Utils.WpfConvert.ToSpreadMethod.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfConvert.ToSpreadMethod.html",
    "title": "Method ToSpreadMethod | SharpVectors Documentation",
    "keywords": "Method ToSpreadMethod Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll ToSpreadMethod(SvgSpreadMethod) public static GradientSpreadMethod ToSpreadMethod(SvgSpreadMethod sm) Parameters sm SvgSpreadMethod Returns GradientSpreadMethod"
  },
  "api/SharpVectors.Renderers.Utils.WpfConvert.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfConvert.html",
    "title": "Class WpfConvert | SharpVectors Documentation",
    "keywords": "Class WpfConvert Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll public static class WpfConvert Inheritance object WpfConvert Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Equals(Size, Size) GetPathFigureLength(PathFigure) GetTransform(SvgElement, bool) ToColor(ICssColor) A WPF Color representation of the RgbColor. ToPath(SvgRectF) ToPath(EllipseGeometry) ToPath(LineGeometry) ToPath(RectangleGeometry) ToPath(Rect) ToRect(ICssRect) ToRect(ISvgRect) ToRect(SvgRectF) This converts the specified Rect structure to a SvgRectF structure. ToSpreadMethod(SvgSpreadMethod)"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.-ctor.html",
    "title": "Constructor WpfSvgWindow | SharpVectors Documentation",
    "keywords": "Constructor WpfSvgWindow Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll WpfSvgWindow(long, long, ISvgRenderer) public WpfSvgWindow(long innerWidth, long innerHeight, ISvgRenderer renderer) Parameters innerWidth long innerHeight long renderer ISvgRenderer WpfSvgWindow(SvgWindow, long, long) public WpfSvgWindow(SvgWindow parentWindow, long innerWidth, long innerHeight) Parameters parentWindow SvgWindow innerWidth long innerHeight long WpfSvgWindow(ISvgControl, ISvgRenderer) public WpfSvgWindow(ISvgControl control, ISvgRenderer renderer) Parameters control ISvgControl renderer ISvgRenderer"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.Alert.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.Alert.html",
    "title": "Method Alert | SharpVectors Documentation",
    "keywords": "Method Alert Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll Alert(string) public override void Alert(string message) Parameters message string"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.CreateOwnedWindow.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.CreateOwnedWindow.html",
    "title": "Method CreateOwnedWindow | SharpVectors Documentation",
    "keywords": "Method CreateOwnedWindow Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll CreateOwnedWindow(long, long) public override SvgWindow CreateOwnedWindow(long innerWidth, long innerHeight) Parameters innerWidth long innerHeight long Returns SvgWindow"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.CustomSettings.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.CustomSettings.html",
    "title": "Property CustomSettings | SharpVectors Documentation",
    "keywords": "Property CustomSettings Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll CustomSettings public XmlReaderSettings CustomSettings { get; set; } Property Value XmlReaderSettings"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.InnerHeight.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.InnerHeight.html",
    "title": "Property InnerHeight | SharpVectors Documentation",
    "keywords": "Property InnerHeight Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll InnerHeight public override long InnerHeight { get; set; } Property Value long"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.InnerWidth.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.InnerWidth.html",
    "title": "Property InnerWidth | SharpVectors Documentation",
    "keywords": "Property InnerWidth Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll InnerWidth public override long InnerWidth { get; set; } Property Value long"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.LoadDocument.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.LoadDocument.html",
    "title": "Method LoadDocument | SharpVectors Documentation",
    "keywords": "Method LoadDocument Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll LoadDocument(Uri, WpfDrawingSettings) public void LoadDocument(Uri documentUri, WpfDrawingSettings drawingSettings) Parameters documentUri Uri drawingSettings WpfDrawingSettings LoadDocument(string, WpfDrawingSettings) public void LoadDocument(string documentSource, WpfDrawingSettings drawingSettings) Parameters documentSource string drawingSettings WpfDrawingSettings LoadDocument(Stream, WpfDrawingSettings) public void LoadDocument(Stream documentStream, WpfDrawingSettings drawingSettings) Parameters documentStream Stream drawingSettings WpfDrawingSettings LoadDocument(TextReader, WpfDrawingSettings) public void LoadDocument(TextReader textReader, WpfDrawingSettings drawingSettings) Parameters textReader TextReader drawingSettings WpfDrawingSettings LoadDocument(XmlReader, WpfDrawingSettings) public void LoadDocument(XmlReader xmlReader, WpfDrawingSettings drawingSettings) Parameters xmlReader XmlReader drawingSettings WpfDrawingSettings"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.PreferUserSize.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.PreferUserSize.html",
    "title": "Property PreferUserSize | SharpVectors Documentation",
    "keywords": "Property PreferUserSize Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll PreferUserSize public bool PreferUserSize { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.SetupStyleSheets.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.SetupStyleSheets.html",
    "title": "Method SetupStyleSheets | SharpVectors Documentation",
    "keywords": "Method SetupStyleSheets Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll SetupStyleSheets(WpfDrawingSettings) public virtual void SetupStyleSheets(WpfDrawingSettings drawingSettings) Parameters drawingSettings WpfDrawingSettings"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.Source.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.Source.html",
    "title": "Property Source | SharpVectors Documentation",
    "keywords": "Property Source Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll Source public override string Source { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.WorkingDir.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.WorkingDir.html",
    "title": "Property WorkingDir | SharpVectors Documentation",
    "keywords": "Property WorkingDir Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll WorkingDir public override DirectoryInfo WorkingDir { get; } Property Value DirectoryInfo"
  },
  "api/SharpVectors.Renderers.Utils.WpfSvgWindow.html": {
    "href": "api/SharpVectors.Renderers.Utils.WpfSvgWindow.html",
    "title": "Class WpfSvgWindow | SharpVectors Documentation",
    "keywords": "Class WpfSvgWindow Namespace SharpVectors.Renderers.Utils Assembly SharpVectors.Rendering.Wpf.dll public class WpfSvgWindow : SvgWindow, ISvgWindow Inheritance object SvgWindow WpfSvgWindow Implements ISvgWindow Inherited Members SvgWindow._mappedTasks SvgWindow.ParentWindow SvgWindow.Renderer SvgWindow.BaseUrls SvgWindow.CreateEmptySvgDocument() SvgWindow.AddTask(string, Task) SvgWindow.AwaitTasks(string) SvgWindow.ParseXML(string, XmlDocument) SvgWindow.PrintNode(XmlNode) SvgWindow.DefaultStyleSheet SvgWindow.Document SvgWindow.CreateOwnedWindow() SvgWindow.CreateSvgRenderer() SvgWindow.Resize(int, int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WpfSvgWindow(ISvgControl, ISvgRenderer) WpfSvgWindow(SvgWindow, long, long) WpfSvgWindow(long, long, ISvgRenderer) Properties CustomSettings InnerHeight InnerWidth PreferUserSize Source WorkingDir Methods Alert(string) CreateOwnedWindow(long, long) LoadDocument(Stream, WpfDrawingSettings) LoadDocument(TextReader, WpfDrawingSettings) LoadDocument(string, WpfDrawingSettings) LoadDocument(Uri, WpfDrawingSettings) LoadDocument(XmlReader, WpfDrawingSettings) SetupStyleSheets(WpfDrawingSettings)"
  },
  "api/SharpVectors.Renderers.Utils.html": {
    "href": "api/SharpVectors.Renderers.Utils.html",
    "title": "Namespace SharpVectors.Renderers.Utils | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Renderers.Utils The SharpVectors.Renderers.Utils namespace contains a bunch of classes and interfaces. Classes WpfConvert WpfSvgWindow"
  },
  "api/SharpVectors.Renderers.Wpf.WpfARendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfARendering.-ctor.html",
    "title": "Constructor WpfARendering | SharpVectors Documentation",
    "keywords": "Constructor WpfARendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfARendering(SvgElement) public WpfARendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfARendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfARendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfARendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfARendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfARendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfARendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfARendering.IsRecursive.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfARendering.IsRecursive.html",
    "title": "Property IsRecursive | SharpVectors Documentation",
    "keywords": "Property IsRecursive Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsRecursive public override bool IsRecursive { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfARendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfARendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfARendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfARendering.html",
    "title": "Class WpfARendering | SharpVectors Documentation",
    "keywords": "Class WpfARendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfARendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfARendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfARendering(SvgElement) Properties IsRecursive Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfClassVisitor.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfClassVisitor.-ctor.html",
    "title": "Constructor WpfClassVisitor | SharpVectors Documentation",
    "keywords": "Constructor WpfClassVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfClassVisitor() protected WpfClassVisitor()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfClassVisitor.Visit.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfClassVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Visit(SvgElement, WpfDrawingContext) public abstract string Visit(SvgElement element, WpfDrawingContext context) Parameters element SvgElement context WpfDrawingContext Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfClassVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfClassVisitor.html",
    "title": "Class WpfClassVisitor | SharpVectors Documentation",
    "keywords": "Class WpfClassVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfClassVisitor : WpfVisitor, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfClassVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(bool) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfClassVisitor() Methods Visit(SvgElement, WpfDrawingContext)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.-ctor.html",
    "title": "Constructor WpfDrawingContext | SharpVectors Documentation",
    "keywords": "Constructor WpfDrawingContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfDrawingContext() public WpfDrawingContext() WpfDrawingContext(bool, WpfDrawingSettings) public WpfDrawingContext(bool isFragment, WpfDrawingSettings settings) Parameters isFragment bool settings WpfDrawingSettings"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.AddResources.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.AddResources.html",
    "title": "Method AddResources | SharpVectors Documentation",
    "keywords": "Method AddResources Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddResources(Brush) public void AddResources(Brush brush) Parameters brush Brush AddResources(SolidColorBrush) public void AddResources(SolidColorBrush brush) Parameters brush SolidColorBrush AddResources(Pen) public void AddResources(Pen pen) Parameters pen Pen"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.AddUrl.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.AddUrl.html",
    "title": "Method AddUrl | SharpVectors Documentation",
    "keywords": "Method AddUrl Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddUrl(string) public void AddUrl(string baseUrl) Parameters baseUrl string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.BaseUrls.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.BaseUrls.html",
    "title": "Property BaseUrls | SharpVectors Documentation",
    "keywords": "Property BaseUrls Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BaseUrls public ISet<string> BaseUrls { get; } Property Value ISet<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.BeginDrawing.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.BeginDrawing.html",
    "title": "Method BeginDrawing | SharpVectors Documentation",
    "keywords": "Method BeginDrawing Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeginDrawing(WpfDrawingDocument) public void BeginDrawing(WpfDrawingDocument drawingDocument) Parameters drawingDocument WpfDrawingDocument"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Bounds.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Bounds.html",
    "title": "Property Bounds | SharpVectors Documentation",
    "keywords": "Property Bounds Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Bounds public Rect Bounds { get; } Property Value Rect"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.ClassVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.ClassVisitor.html",
    "title": "Property ClassVisitor | SharpVectors Documentation",
    "keywords": "Property ClassVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ClassVisitor public WpfClassVisitor ClassVisitor { get; set; } Property Value WpfClassVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Clear.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Clear.html",
    "title": "Method Clear | SharpVectors Documentation",
    "keywords": "Method Clear Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Clear() Removes all objects from the drawing stack. public void Clear()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Contains.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Contains.html",
    "title": "Method Contains | SharpVectors Documentation",
    "keywords": "Method Contains Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Contains(DrawingGroup) Determines whether an element is in the drawing stack. public bool Contains(DrawingGroup item) Parameters item DrawingGroup The object to locate in the drawing stack. The value can be null for reference types. Returns bool true if item is found in the drawing stack; otherwise, false."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.ContainsUrl.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.ContainsUrl.html",
    "title": "Method ContainsUrl | SharpVectors Documentation",
    "keywords": "Method ContainsUrl Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ContainsUrl(string) public bool ContainsUrl(string baseUrl) Parameters baseUrl string Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.CopyTo.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.CopyTo.html",
    "title": "Method CopyTo | SharpVectors Documentation",
    "keywords": "Method CopyTo Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CopyTo(DrawingGroup[], int) Copies the drawing stack to an existing one-dimensional array, starting at the specified array index. public void CopyTo(DrawingGroup[] array, int arrayIndex) Parameters array DrawingGroup[] The one-dimensional System.Array that is the destination of the elements copied from drawing stack. The array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException If array is null. ArgumentOutOfRangeException arrayIndex is less than zero. ArgumentException arrayIndex is equal to or greater than the length of array. -or- The number of elements in the source drawing stack is greater than the available space from arrayIndex to the end of the destination array."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Count.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Count.html",
    "title": "Property Count | SharpVectors Documentation",
    "keywords": "Property Count Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Count Gets the number of elements contained in the drawing stack. public int Count { get; } Property Value int The number of elements contained in the drawing stack."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.DpiScaleX.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.DpiScaleX.html",
    "title": "Property DpiScaleX | SharpVectors Documentation",
    "keywords": "Property DpiScaleX Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll DpiScaleX Gets the DPI scale on the X axis. public double DpiScaleX { get; } Property Value double The DPI scale for the X axis."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.DpiScaleY.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.DpiScaleY.html",
    "title": "Property DpiScaleY | SharpVectors Documentation",
    "keywords": "Property DpiScaleY Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll DpiScaleY Gets the DPI scale on the Yaxis. public double DpiScaleY { get; } Property Value double The DPI scale for the Y axis."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.EndDrawing.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.EndDrawing.html",
    "title": "Method EndDrawing | SharpVectors Documentation",
    "keywords": "Method EndDrawing Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll EndDrawing() public void EndDrawing()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.FontFamilyVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.FontFamilyVisitor.html",
    "title": "Property FontFamilyVisitor | SharpVectors Documentation",
    "keywords": "Property FontFamilyVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FontFamilyVisitor public WpfFontFamilyVisitor FontFamilyVisitor { get; set; } Property Value WpfFontFamilyVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.GetEnumerator.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.GetEnumerator.html",
    "title": "Method GetEnumerator | SharpVectors Documentation",
    "keywords": "Method GetEnumerator Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<DrawingGroup> GetEnumerator() Returns IEnumerator<DrawingGroup> A IEnumerator<T> that can be used to iterate through the collection."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.GetPaintContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.GetPaintContext.html",
    "title": "Method GetPaintContext | SharpVectors Documentation",
    "keywords": "Method GetPaintContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetPaintContext(string) public WpfSvgPaintContext GetPaintContext(string guidId) Parameters guidId string Returns WpfSvgPaintContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IDVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IDVisitor.html",
    "title": "Property IDVisitor | SharpVectors Documentation",
    "keywords": "Property IDVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IDVisitor public WpfIDVisitor IDVisitor { get; set; } Property Value WpfIDVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.ImageVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.ImageVisitor.html",
    "title": "Property ImageVisitor | SharpVectors Documentation",
    "keywords": "Property ImageVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ImageVisitor public WpfEmbeddedImageVisitor ImageVisitor { get; set; } Property Value WpfEmbeddedImageVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(WpfLinkVisitor, WpfFontFamilyVisitor, WpfEmbeddedImageVisitor) public void Initialize(WpfLinkVisitor linkVisitor, WpfFontFamilyVisitor fontFamilyVisitor, WpfEmbeddedImageVisitor imageVisitor) Parameters linkVisitor WpfLinkVisitor fontFamilyVisitor WpfFontFamilyVisitor imageVisitor WpfEmbeddedImageVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.InteractiveMode.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.InteractiveMode.html",
    "title": "Property InteractiveMode | SharpVectors Documentation",
    "keywords": "Property InteractiveMode Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll InteractiveMode public SvgInteractiveModes InteractiveMode { get; } Property Value SvgInteractiveModes"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IsFragment.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IsFragment.html",
    "title": "Property IsFragment | SharpVectors Documentation",
    "keywords": "Property IsFragment Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsFragment public bool IsFragment { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IsPaintContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IsPaintContext.html",
    "title": "Method IsPaintContext | SharpVectors Documentation",
    "keywords": "Method IsPaintContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsPaintContext(string) public bool IsPaintContext(string guidId) Parameters guidId string Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IsRegisteredId.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IsRegisteredId.html",
    "title": "Method IsRegisteredId | SharpVectors Documentation",
    "keywords": "Method IsRegisteredId Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsRegisteredId(string) public bool IsRegisteredId(string elementId) Parameters elementId string Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IsResourceDictionary.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.IsResourceDictionary.html",
    "title": "Property IsResourceDictionary | SharpVectors Documentation",
    "keywords": "Property IsResourceDictionary Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsResourceDictionary public bool IsResourceDictionary { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.LinkVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.LinkVisitor.html",
    "title": "Property LinkVisitor | SharpVectors Documentation",
    "keywords": "Property LinkVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll LinkVisitor public WpfLinkVisitor LinkVisitor { get; set; } Property Value WpfLinkVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Links.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Links.html",
    "title": "Property Links | SharpVectors Documentation",
    "keywords": "Property Links Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Links public DrawingGroup Links { get; } Property Value DrawingGroup"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Name.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Name public string Name { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Peek.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Peek.html",
    "title": "Method Peek | SharpVectors Documentation",
    "keywords": "Method Peek Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Peek() Returns the object at the top of the drawing stack without removing it. public DrawingGroup Peek() Returns DrawingGroup The object at the top of the drawing stack. Exceptions InvalidOperationException The drawing stack is empty."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.PixelsPerDip.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.PixelsPerDip.html",
    "title": "Property PixelsPerDip | SharpVectors Documentation",
    "keywords": "Property PixelsPerDip Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PixelsPerDip Get or sets the PixelsPerDip at which the text should be rendered. public double PixelsPerDip { get; } Property Value double The current PixelsPerDip value."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.PixelsPerInchX.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.PixelsPerInchX.html",
    "title": "Property PixelsPerInchX | SharpVectors Documentation",
    "keywords": "Property PixelsPerInchX Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PixelsPerInchX Gets the DPI along X axis. public double PixelsPerInchX { get; } Property Value double The DPI along the X axis."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.PixelsPerInchY.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.PixelsPerInchY.html",
    "title": "Property PixelsPerInchY | SharpVectors Documentation",
    "keywords": "Property PixelsPerInchY Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PixelsPerInchY Gets the DPI along Y axis. public double PixelsPerInchY { get; } Property Value double The DPI along the Y axis."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Pop.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Pop.html",
    "title": "Method Pop | SharpVectors Documentation",
    "keywords": "Method Pop Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Pop() Removes and returns the object at the top of the drawing stack. public DrawingGroup Pop() Returns DrawingGroup The object removed from the top of the drawing stack. Exceptions InvalidOperationException The drawing stack is empty."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Push.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Push.html",
    "title": "Method Push | SharpVectors Documentation",
    "keywords": "Method Push Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Push(DrawingGroup) Inserts an object at the top of the drawing stack. public void Push(DrawingGroup item) Parameters item DrawingGroup The object to push onto the drawing stack. The value can be null for reference types."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RegisterDrawing.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RegisterDrawing.html",
    "title": "Method RegisterDrawing | SharpVectors Documentation",
    "keywords": "Method RegisterDrawing Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RegisterDrawing(string, string, Drawing) public void RegisterDrawing(string elementId, string uniqueId, Drawing drawing) Parameters elementId string uniqueId string drawing Drawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RegisterId.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RegisterId.html",
    "title": "Method RegisterId | SharpVectors Documentation",
    "keywords": "Method RegisterId Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RegisterId(string) public void RegisterId(string elementId) Parameters elementId string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RegisterPaintContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RegisterPaintContext.html",
    "title": "Method RegisterPaintContext | SharpVectors Documentation",
    "keywords": "Method RegisterPaintContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RegisterPaintContext(WpfSvgPaintContext) public void RegisterPaintContext(WpfSvgPaintContext paintContext) Parameters paintContext WpfSvgPaintContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RemoveUrl.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RemoveUrl.html",
    "title": "Method RemoveUrl | SharpVectors Documentation",
    "keywords": "Method RemoveUrl Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RemoveUrl(string) public void RemoveUrl(string baseUrl) Parameters baseUrl string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RenderingClipRegion.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.RenderingClipRegion.html",
    "title": "Property RenderingClipRegion | SharpVectors Documentation",
    "keywords": "Property RenderingClipRegion Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RenderingClipRegion public bool RenderingClipRegion { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Root.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Root.html",
    "title": "Property Root | SharpVectors Documentation",
    "keywords": "Property Root Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Root public DrawingGroup Root { get; } Property Value DrawingGroup"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Settings.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Settings.html",
    "title": "Property Settings | SharpVectors Documentation",
    "keywords": "Property Settings Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Settings public WpfDrawingSettings Settings { get; set; } Property Value WpfDrawingSettings"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Tag.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Tag.html",
    "title": "Property Tag | SharpVectors Documentation",
    "keywords": "Property Tag Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Tag public object Tag { get; set; } Property Value object"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.ToArray.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.ToArray.html",
    "title": "Method ToArray | SharpVectors Documentation",
    "keywords": "Method ToArray Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ToArray() Copies the drawing stack to a new array. public DrawingGroup[] ToArray() Returns DrawingGroup[] A new array containing copies of the elements of the drawing stack."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.TrimExcess.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.TrimExcess.html",
    "title": "Method TrimExcess | SharpVectors Documentation",
    "keywords": "Method TrimExcess Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll TrimExcess() Sets the capacity to the actual number of elements in the drawing stack, if that number is less than 90 percent of current capacity. public void TrimExcess()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.UnRegisterId.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.UnRegisterId.html",
    "title": "Method UnRegisterId | SharpVectors Documentation",
    "keywords": "Method UnRegisterId Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll UnRegisterId(string) public void UnRegisterId(string elementId) Parameters elementId string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.UnRegisterPaintContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.UnRegisterPaintContext.html",
    "title": "Method UnRegisterPaintContext | SharpVectors Documentation",
    "keywords": "Method UnRegisterPaintContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll UnRegisterPaintContext(string) public void UnRegisterPaintContext(string guidId) Parameters guidId string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Uninitialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.Uninitialize.html",
    "title": "Method Uninitialize | SharpVectors Documentation",
    "keywords": "Method Uninitialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Uninitialize() public void Uninitialize()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.UpdateBounds.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.UpdateBounds.html",
    "title": "Method UpdateBounds | SharpVectors Documentation",
    "keywords": "Method UpdateBounds Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll UpdateBounds(Rect) public void UpdateBounds(Rect bounds) Parameters bounds Rect"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingContext.html",
    "title": "Class WpfDrawingContext | SharpVectors Documentation",
    "keywords": "Class WpfDrawingContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfDrawingContext : DependencyObject, IEnumerable<DrawingGroup>, IEnumerable Inheritance object DispatcherObject DependencyObject WpfDrawingContext Implements IEnumerable<DrawingGroup> IEnumerable Inherited Members DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfDrawingContext() WpfDrawingContext(bool, WpfDrawingSettings) Properties BaseUrls Bounds ClassVisitor Count Gets the number of elements contained in the drawing stack. DpiScaleX Gets the DPI scale on the X axis. DpiScaleY Gets the DPI scale on the Yaxis. FontFamilyVisitor IDVisitor ImageVisitor InteractiveMode IsFragment IsResourceDictionary LinkVisitor Links Name PixelsPerDip Get or sets the PixelsPerDip at which the text should be rendered. PixelsPerInchX Gets the DPI along X axis. PixelsPerInchY Gets the DPI along Y axis. RenderingClipRegion Root Settings Tag Methods AddResources(Brush) AddResources(Pen) AddResources(SolidColorBrush) AddUrl(string) BeginDrawing(WpfDrawingDocument) Clear() Removes all objects from the drawing stack. Contains(DrawingGroup) Determines whether an element is in the drawing stack. ContainsUrl(string) CopyTo(DrawingGroup[], int) Copies the drawing stack to an existing one-dimensional array, starting at the specified array index. EndDrawing() GetEnumerator() Returns an enumerator that iterates through the collection. GetPaintContext(string) Initialize(WpfLinkVisitor, WpfFontFamilyVisitor, WpfEmbeddedImageVisitor) IsPaintContext(string) IsRegisteredId(string) Peek() Returns the object at the top of the drawing stack without removing it. Pop() Removes and returns the object at the top of the drawing stack. Push(DrawingGroup) Inserts an object at the top of the drawing stack. RegisterDrawing(string, string, Drawing) RegisterId(string) RegisterPaintContext(WpfSvgPaintContext) RemoveUrl(string) ToArray() Copies the drawing stack to a new array. TrimExcess() Sets the capacity to the actual number of elements in the drawing stack, if that number is less than 90 percent of current capacity. UnRegisterId(string) UnRegisterPaintContext(string) Uninitialize() UpdateBounds(Rect)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.-ctor.html",
    "title": "Constructor WpfDrawingDocument | SharpVectors Documentation",
    "keywords": "Constructor WpfDrawingDocument Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfDrawingDocument() public WpfDrawingDocument()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Add.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Add.html",
    "title": "Method Add | SharpVectors Documentation",
    "keywords": "Method Add Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Add(string, string, Drawing) public void Add(string elementId, string uniqueId, Drawing drawing) Parameters elementId string uniqueId string drawing Drawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.AddById.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.AddById.html",
    "title": "Method AddById | SharpVectors Documentation",
    "keywords": "Method AddById Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddById(string, Drawing) public void AddById(string elementId, Drawing drawing) Parameters elementId string drawing Drawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.AddByUniqueId.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.AddByUniqueId.html",
    "title": "Method AddByUniqueId | SharpVectors Documentation",
    "keywords": "Method AddByUniqueId Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddByUniqueId(Guid, Drawing) public void AddByUniqueId(Guid uniqueId, Drawing drawing) Parameters uniqueId Guid drawing Drawing AddByUniqueId(string, Drawing) public void AddByUniqueId(string uniqueId, Drawing drawing) Parameters uniqueId string drawing Drawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.DisplayTransform.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.DisplayTransform.html",
    "title": "Property DisplayTransform | SharpVectors Documentation",
    "keywords": "Property DisplayTransform Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll DisplayTransform public GeneralTransform DisplayTransform { get; set; } Property Value GeneralTransform"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Document.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Document.html",
    "title": "Property Document | SharpVectors Documentation",
    "keywords": "Property Document Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Document public SvgDocument Document { get; } Property Value SvgDocument"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Drawing.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Drawing.html",
    "title": "Property Drawing | SharpVectors Documentation",
    "keywords": "Property Drawing Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Drawing public DrawingGroup Drawing { get; } Property Value DrawingGroup"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.DrawingNames.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.DrawingNames.html",
    "title": "Property DrawingNames | SharpVectors Documentation",
    "keywords": "Property DrawingNames Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll DrawingNames public ICollection<string> DrawingNames { get; } Property Value ICollection<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.DrawingUniqueNames.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.DrawingUniqueNames.html",
    "title": "Property DrawingUniqueNames | SharpVectors Documentation",
    "keywords": "Property DrawingUniqueNames Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll DrawingUniqueNames public ICollection<string> DrawingUniqueNames { get; } Property Value ICollection<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.ElementNames.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.ElementNames.html",
    "title": "Property ElementNames | SharpVectors Documentation",
    "keywords": "Property ElementNames Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ElementNames public ICollection<string> ElementNames { get; } Property Value ICollection<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.ElementUniqueNames.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.ElementUniqueNames.html",
    "title": "Property ElementUniqueNames | SharpVectors Documentation",
    "keywords": "Property ElementUniqueNames Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ElementUniqueNames public ICollection<string> ElementUniqueNames { get; } Property Value ICollection<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.EnumerateDrawing.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.EnumerateDrawing.html",
    "title": "Method EnumerateDrawing | SharpVectors Documentation",
    "keywords": "Method EnumerateDrawing Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll EnumerateDrawing(DrawingGroup) public void EnumerateDrawing(DrawingGroup drawing) Parameters drawing DrawingGroup"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Get.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Get.html",
    "title": "Method Get | SharpVectors Documentation",
    "keywords": "Method Get Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Get(string) public Tuple<SvgElement, Drawing> Get(string elementId) Parameters elementId string Returns Tuple<SvgElement, Drawing>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetById.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetById.html",
    "title": "Method GetById | SharpVectors Documentation",
    "keywords": "Method GetById Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetById(string) public Drawing GetById(string elementId) Parameters elementId string Returns Drawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetByUniqueId.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetByUniqueId.html",
    "title": "Method GetByUniqueId | SharpVectors Documentation",
    "keywords": "Method GetByUniqueId Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetByUniqueId(Guid) public Drawing GetByUniqueId(Guid uniqueId) Parameters uniqueId Guid Returns Drawing GetByUniqueId(string) public Drawing GetByUniqueId(string uniqueId) Parameters uniqueId string Returns Drawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetDrawingLayer.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetDrawingLayer.html",
    "title": "Method GetDrawingLayer | SharpVectors Documentation",
    "keywords": "Method GetDrawingLayer Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetDrawingLayer() public DrawingGroup GetDrawingLayer() Returns DrawingGroup"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetSvgById.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetSvgById.html",
    "title": "Method GetSvgById | SharpVectors Documentation",
    "keywords": "Method GetSvgById Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetSvgById(string) public SvgElement GetSvgById(string elementId) Parameters elementId string Returns SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetSvgByUniqueId.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.GetSvgByUniqueId.html",
    "title": "Method GetSvgByUniqueId | SharpVectors Documentation",
    "keywords": "Method GetSvgByUniqueId Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetSvgByUniqueId(Guid) public SvgElement GetSvgByUniqueId(Guid uniqueId) Parameters uniqueId Guid Returns SvgElement GetSvgByUniqueId(string) public SvgElement GetSvgByUniqueId(string uniqueId) Parameters uniqueId string Returns SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.HitList.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.HitList.html",
    "title": "Property HitList | SharpVectors Documentation",
    "keywords": "Property HitList Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll HitList public IList<Drawing> HitList { get; } Property Value IList<Drawing>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.HitPaths.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.HitPaths.html",
    "title": "Property HitPaths | SharpVectors Documentation",
    "keywords": "Property HitPaths Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll HitPaths public IList<WpfHitPath> HitPaths { get; } Property Value IList<WpfHitPath>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.HitTest.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.HitTest.html",
    "title": "Method HitTest | SharpVectors Documentation",
    "keywords": "Method HitTest Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll HitTest(Point) public WpfHitTestResult HitTest(Point point) Parameters point Point Returns WpfHitTestResult HitTest(Rect, IntersectionDetail) public WpfHitTestResult HitTest(Rect rect, IntersectionDetail detail) Parameters rect Rect detail IntersectionDetail Returns WpfHitTestResult"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgDocument, DrawingGroup) public void Initialize(SvgDocument svgDocument, DrawingGroup svgDrawing) Parameters svgDocument SvgDocument svgDrawing DrawingGroup"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.TextLevel.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.TextLevel.html",
    "title": "Property TextLevel | SharpVectors Documentation",
    "keywords": "Property TextLevel Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll TextLevel public WpfHitTextLevel TextLevel { get; set; } Property Value WpfHitTextLevel"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingDocument.html",
    "title": "Class WpfDrawingDocument | SharpVectors Documentation",
    "keywords": "Class WpfDrawingDocument Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfDrawingDocument : DependencyObject Inheritance object DispatcherObject DependencyObject WpfDrawingDocument Inherited Members DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfDrawingDocument() Properties DisplayTransform Document Drawing DrawingNames DrawingUniqueNames ElementNames ElementUniqueNames HitList HitPaths TextLevel Methods Add(string, string, Drawing) AddById(string, Drawing) AddByUniqueId(Guid, Drawing) AddByUniqueId(string, Drawing) EnumerateDrawing(DrawingGroup) Get(string) GetById(string) GetByUniqueId(Guid) GetByUniqueId(string) GetDrawingLayer() GetSvgById(string) GetSvgByUniqueId(Guid) GetSvgByUniqueId(string) HitTest(Point) HitTest(Rect, IntersectionDetail) Initialize(SvgDocument, DrawingGroup)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.-ctor.html",
    "title": "Constructor WpfDrawingRenderer | SharpVectors Documentation",
    "keywords": "Constructor WpfDrawingRenderer Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfDrawingRenderer() public WpfDrawingRenderer() WpfDrawingRenderer(WpfDrawingSettings) public WpfDrawingRenderer(WpfDrawingSettings settings) Parameters settings WpfDrawingSettings WpfDrawingRenderer(WpfDrawingSettings, bool) public WpfDrawingRenderer(WpfDrawingSettings settings, bool isEmbedded) Parameters settings WpfDrawingSettings isEmbedded bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.BeginRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.BeginRender.html",
    "title": "Method BeginRender | SharpVectors Documentation",
    "keywords": "Method BeginRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeginRender(WpfDrawingDocument) public void BeginRender(WpfDrawingDocument drawingDocument) Parameters drawingDocument WpfDrawingDocument"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.Dispose.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.Dispose.html",
    "title": "Method Dispose | SharpVectors Documentation",
    "keywords": "Method Dispose Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.Drawing.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.Drawing.html",
    "title": "Property Drawing | SharpVectors Documentation",
    "keywords": "Property Drawing Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Drawing public DrawingGroup Drawing { get; } Property Value DrawingGroup"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.EndRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.EndRender.html",
    "title": "Method EndRender | SharpVectors Documentation",
    "keywords": "Method EndRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll EndRender() public void EndRender()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.FontFamilyVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.FontFamilyVisitor.html",
    "title": "Property FontFamilyVisitor | SharpVectors Documentation",
    "keywords": "Property FontFamilyVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FontFamilyVisitor public WpfFontFamilyVisitor FontFamilyVisitor { get; set; } Property Value WpfFontFamilyVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.GetRenderedBounds.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.GetRenderedBounds.html",
    "title": "Method GetRenderedBounds | SharpVectors Documentation",
    "keywords": "Method GetRenderedBounds Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetRenderedBounds(ISvgElement, float) public ISvgRect GetRenderedBounds(ISvgElement element, float margin) Parameters element ISvgElement margin float Returns ISvgRect"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.ImageVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.ImageVisitor.html",
    "title": "Property ImageVisitor | SharpVectors Documentation",
    "keywords": "Property ImageVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ImageVisitor public WpfEmbeddedImageVisitor ImageVisitor { get; set; } Property Value WpfEmbeddedImageVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.InteractiveMode.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.InteractiveMode.html",
    "title": "Property InteractiveMode | SharpVectors Documentation",
    "keywords": "Property InteractiveMode Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll InteractiveMode public SvgInteractiveModes InteractiveMode { get; } Property Value SvgInteractiveModes"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.InvalidRect.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.InvalidRect.html",
    "title": "Property InvalidRect | SharpVectors Documentation",
    "keywords": "Property InvalidRect Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll InvalidRect Controls the rendering of the document. public SvgRectF InvalidRect { get; set; } Property Value SvgRectF"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.InvalidateRect.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.InvalidateRect.html",
    "title": "Method InvalidateRect | SharpVectors Documentation",
    "keywords": "Method InvalidateRect Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll InvalidateRect(SvgRectF) Allows you to establish or add to the existing invalidation rectangle public void InvalidateRect(SvgRectF rect) Parameters rect SvgRectF"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.LinkVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.LinkVisitor.html",
    "title": "Property LinkVisitor | SharpVectors Documentation",
    "keywords": "Property LinkVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll LinkVisitor public WpfLinkVisitor LinkVisitor { get; set; } Property Value WpfLinkVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.OnRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.OnRender.html",
    "title": "Property OnRender | SharpVectors Documentation",
    "keywords": "Property OnRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll OnRender Event Delegate to report when the SVG renderer does it's work. public RenderEvent OnRender { get; set; } Property Value RenderEvent"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(ISvgElement) Renders an SvgElement object onto a bitmap and returns that bitmap. public void Render(ISvgElement node) Parameters node ISvgElement The SvgElement object to be rendered. Render(ISvgElement, WpfDrawingContext) public void Render(ISvgElement node, WpfDrawingContext context) Parameters node ISvgElement context WpfDrawingContext Render(ISvgDocument) Renders an SvgDocument object onto a bitmap and returns that bitmap. public void Render(ISvgDocument node) Parameters node ISvgDocument The SvgDocument object to be rendered."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.RenderAs.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.RenderAs.html",
    "title": "Method RenderAs | SharpVectors Documentation",
    "keywords": "Method RenderAs Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RenderAs(SvgElement, WpfDrawingContext) public void RenderAs(SvgElement node, WpfDrawingContext context) Parameters node SvgElement context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.RenderChildren.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.RenderChildren.html",
    "title": "Method RenderChildren | SharpVectors Documentation",
    "keywords": "Method RenderChildren Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RenderChildren(ISvgElement) public void RenderChildren(ISvgElement node) Parameters node ISvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.RenderMask.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.RenderMask.html",
    "title": "Method RenderMask | SharpVectors Documentation",
    "keywords": "Method RenderMask Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RenderMask(ISvgElement, WpfDrawingContext) public void RenderMask(ISvgElement node, WpfDrawingContext context) Parameters node ISvgElement context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.Window.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.Window.html",
    "title": "Property Window | SharpVectors Documentation",
    "keywords": "Property Window Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Window The window that is being rendered to. public ISvgWindow Window { get; set; } Property Value ISvgWindow"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingRenderer.html",
    "title": "Class WpfDrawingRenderer | SharpVectors Documentation",
    "keywords": "Class WpfDrawingRenderer Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfDrawingRenderer : WpfRendererObject, IDisposable, ISvgRenderer Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfDrawingRenderer Implements IDisposable ISvgRenderer Inherited Members WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Remarks Rename: WpfRendererSession Constructors WpfDrawingRenderer() WpfDrawingRenderer(WpfDrawingSettings) WpfDrawingRenderer(WpfDrawingSettings, bool) Properties Drawing FontFamilyVisitor ImageVisitor InteractiveMode InvalidRect Controls the rendering of the document. LinkVisitor OnRender Event Delegate to report when the SVG renderer does it's work. Window The window that is being rendered to. Methods BeginRender(WpfDrawingDocument) Dispose(bool) EndRender() GetRenderedBounds(ISvgElement, float) InvalidateRect(SvgRectF) Allows you to establish or add to the existing invalidation rectangle Render(ISvgDocument) Renders an SvgDocument object onto a bitmap and returns that bitmap. Render(ISvgElement) Renders an SvgElement object onto a bitmap and returns that bitmap. Render(ISvgElement, WpfDrawingContext) RenderAs(SvgElement, WpfDrawingContext) RenderChildren(ISvgElement) RenderMask(ISvgElement, WpfDrawingContext)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.-ctor.html",
    "title": "Constructor WpfDrawingResources | SharpVectors Documentation",
    "keywords": "Constructor WpfDrawingResources Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfDrawingResources() public WpfDrawingResources()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.AddResource.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.AddResource.html",
    "title": "Method AddResource | SharpVectors Documentation",
    "keywords": "Method AddResource Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddResource(Brush) public void AddResource(Brush brush) Parameters brush Brush AddResource(SolidColorBrush) public void AddResource(SolidColorBrush brush) Parameters brush SolidColorBrush AddResource(Color) public void AddResource(Color color) Parameters color Color AddResource(Pen) public void AddResource(Pen pen) Parameters pen Pen"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BindPenToBrushes.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BindPenToBrushes.html",
    "title": "Property BindPenToBrushes | SharpVectors Documentation",
    "keywords": "Property BindPenToBrushes Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BindPenToBrushes public bool BindPenToBrushes { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BindToColors.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BindToColors.html",
    "title": "Property BindToColors | SharpVectors Documentation",
    "keywords": "Property BindToColors Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BindToColors public bool BindToColors { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BindToResources.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BindToResources.html",
    "title": "Property BindToResources | SharpVectors Documentation",
    "keywords": "Property BindToResources Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BindToResources public bool BindToResources { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BrushComparer.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BrushComparer.html",
    "title": "Property BrushComparer | SharpVectors Documentation",
    "keywords": "Property BrushComparer Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BrushComparer public static IEqualityComparer<SolidColorBrush> BrushComparer { get; } Property Value IEqualityComparer<SolidColorBrush>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BrushKeys.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BrushKeys.html",
    "title": "Property BrushKeys | SharpVectors Documentation",
    "keywords": "Property BrushKeys Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BrushKeys public ICollection<string> BrushKeys { get; } Property Value ICollection<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BrushNameFormat.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.BrushNameFormat.html",
    "title": "Property BrushNameFormat | SharpVectors Documentation",
    "keywords": "Property BrushNameFormat Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BrushNameFormat public string BrushNameFormat { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ColorComparer.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ColorComparer.html",
    "title": "Property ColorComparer | SharpVectors Documentation",
    "keywords": "Property ColorComparer Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ColorComparer public static IEqualityComparer<Color> ColorComparer { get; } Property Value IEqualityComparer<Color>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ColorKeys.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ColorKeys.html",
    "title": "Property ColorKeys | SharpVectors Documentation",
    "keywords": "Property ColorKeys Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ColorKeys public ICollection<string> ColorKeys { get; } Property Value ICollection<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ColorNameFormat.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ColorNameFormat.html",
    "title": "Property ColorNameFormat | SharpVectors Documentation",
    "keywords": "Property ColorNameFormat Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ColorNameFormat public string ColorNameFormat { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ColorPalette.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ColorPalette.html",
    "title": "Property ColorPalette | SharpVectors Documentation",
    "keywords": "Property ColorPalette Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ColorPalette public IDictionary<Color, string> ColorPalette { get; set; } Property Value IDictionary<Color, string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.Contains.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.Contains.html",
    "title": "Method Contains | SharpVectors Documentation",
    "keywords": "Method Contains Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Contains(string) public bool Contains(string resourceKey) Parameters resourceKey string Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.GetResourceKey.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.GetResourceKey.html",
    "title": "Method GetResourceKey | SharpVectors Documentation",
    "keywords": "Method GetResourceKey Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetResourceKey(Pen) public string GetResourceKey(Pen pen) Parameters pen Pen Returns string GetResourceKey(Color) public string GetResourceKey(Color color) Parameters color Color Returns string GetResourceKey(Brush) public string GetResourceKey(Brush brush) Parameters brush Brush Returns string GetResourceKey(SolidColorBrush) public string GetResourceKey(SolidColorBrush brush) Parameters brush SolidColorBrush Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.HasResource.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.HasResource.html",
    "title": "Method HasResource | SharpVectors Documentation",
    "keywords": "Method HasResource Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll HasResource(Pen) public bool HasResource(Pen pen) Parameters pen Pen Returns bool HasResource(Color) public bool HasResource(Color color) Parameters color Color Returns bool HasResource(string, out Color) public bool HasResource(string colorText, out Color color) Parameters colorText string color Color Returns bool HasResource(Brush) public bool HasResource(Brush brush) Parameters brush Brush Returns bool HasResource(SolidColorBrush) public bool HasResource(SolidColorBrush brush) Parameters brush SolidColorBrush Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.InitialiseKeys.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.InitialiseKeys.html",
    "title": "Method InitialiseKeys | SharpVectors Documentation",
    "keywords": "Method InitialiseKeys Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll InitialiseKeys() public void InitialiseKeys()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.IsInitialized.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.IsInitialized.html",
    "title": "Property IsInitialized | SharpVectors Documentation",
    "keywords": "Property IsInitialized Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsInitialized public bool IsInitialized { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.IsReady.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.IsReady.html",
    "title": "Property IsReady | SharpVectors Documentation",
    "keywords": "Property IsReady Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsReady public bool IsReady { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.Item.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll this[string] public object this[string key] { get; } Parameters key string Property Value object"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.Keys.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.Keys.html",
    "title": "Property Keys | SharpVectors Documentation",
    "keywords": "Property Keys Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Keys public IList<string> Keys { get; } Property Value IList<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.PenComparer.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.PenComparer.html",
    "title": "Property PenComparer | SharpVectors Documentation",
    "keywords": "Property PenComparer Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PenComparer public static IEqualityComparer<Pen> PenComparer { get; } Property Value IEqualityComparer<Pen>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.PenKeys.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.PenKeys.html",
    "title": "Property PenKeys | SharpVectors Documentation",
    "keywords": "Property PenKeys Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PenKeys public ICollection<string> PenKeys { get; } Property Value ICollection<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.PenNameFormat.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.PenNameFormat.html",
    "title": "Property PenNameFormat | SharpVectors Documentation",
    "keywords": "Property PenNameFormat Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PenNameFormat public string PenNameFormat { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ResourceAccess.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ResourceAccess.html",
    "title": "Property ResourceAccess | SharpVectors Documentation",
    "keywords": "Property ResourceAccess Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ResourceAccess public ResourceAccessType ResourceAccess { get; set; } Property Value ResourceAccessType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ResourceFreeze.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ResourceFreeze.html",
    "title": "Property ResourceFreeze | SharpVectors Documentation",
    "keywords": "Property ResourceFreeze Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ResourceFreeze public bool ResourceFreeze { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ResourceMode.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.ResourceMode.html",
    "title": "Property ResourceMode | SharpVectors Documentation",
    "keywords": "Property ResourceMode Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ResourceMode public ResourceModeType ResourceMode { get; set; } Property Value ResourceModeType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.TryParseColor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.TryParseColor.html",
    "title": "Method TryParseColor | SharpVectors Documentation",
    "keywords": "Method TryParseColor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll TryParseColor(string, out Color) public static bool TryParseColor(string colorText, out Color color) Parameters colorText string color Color Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.UseResourceIndex.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.UseResourceIndex.html",
    "title": "Property UseResourceIndex | SharpVectors Documentation",
    "keywords": "Property UseResourceIndex Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll UseResourceIndex public bool UseResourceIndex { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingResources.html",
    "title": "Class WpfDrawingResources | SharpVectors Documentation",
    "keywords": "Class WpfDrawingResources Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfDrawingResources Inheritance object WpfDrawingResources Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfDrawingResources() Properties BindPenToBrushes BindToColors BindToResources BrushComparer BrushKeys BrushNameFormat ColorComparer ColorKeys ColorNameFormat ColorPalette IsInitialized IsReady this[string] Keys PenComparer PenKeys PenNameFormat ResourceAccess ResourceFreeze ResourceMode UseResourceIndex Methods AddResource(Brush) AddResource(Color) AddResource(Pen) AddResource(SolidColorBrush) Contains(string) GetResourceKey(Brush) GetResourceKey(Color) GetResourceKey(Pen) GetResourceKey(SolidColorBrush) HasResource(string, out Color) HasResource(Brush) HasResource(Color) HasResource(Pen) HasResource(SolidColorBrush) InitialiseKeys() TryParseColor(string, out Color)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.-ctor.html",
    "title": "Constructor WpfDrawingSettings | SharpVectors Documentation",
    "keywords": "Constructor WpfDrawingSettings Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfDrawingSettings() Initializes a new instance of the WpfDrawingSettings class with the default parameters and settings. public WpfDrawingSettings() WpfDrawingSettings(WpfDrawingSettings) Initializes a new instance of the WpfDrawingSettings class with the specified initial drawing or rendering settings, a copy constructor. public WpfDrawingSettings(WpfDrawingSettings settings) Parameters settings WpfDrawingSettings This specifies the initial options for the rendering or drawing engine."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.AddFontFamilyName.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.AddFontFamilyName.html",
    "title": "Method AddFontFamilyName | SharpVectors Documentation",
    "keywords": "Method AddFontFamilyName Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddFontFamilyName(string, string) This adds a mapped font family name. A mapped name can be a localized name of a font family or an alternative font family name. public void AddFontFamilyName(string mappedName, string fontName) Parameters mappedName string The mapped or alternative font family name. fontName string The target font family name. Remarks The font family name mapping applies to both system and private fonts. Both the mappedName and the fontName values must not be null or empty string."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.AddFontLocation.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.AddFontLocation.html",
    "title": "Method AddFontLocation | SharpVectors Documentation",
    "keywords": "Method AddFontLocation Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddFontLocation(string) This adds the specified local font location (file or directory) to enable the use of private fonts. public void AddFontLocation(string fontLocation) Parameters fontLocation string A string containing the path to a font file. Remarks The fontLocation value cannot be a file path or a directory. If a directory is specified, all the files with the standard font file extensions in the directory will be loaded. The fontLocation must not be null or empty string and the specified location must exists."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.CanUseBitmap.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.CanUseBitmap.html",
    "title": "Property CanUseBitmap | SharpVectors Documentation",
    "keywords": "Property CanUseBitmap Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CanUseBitmap Gets or sets a value indicating if image elements will render bitmaps. public bool CanUseBitmap { get; set; } Property Value bool A value specifying how bitmaps are rendered. If true elements will render bitmaps; otherwise, it is false elements will not render bitmaps. The default is true. See Also CanUseBitmap"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.Clone.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.Clone.html",
    "title": "Method Clone | SharpVectors Documentation",
    "keywords": "Method Clone Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Clone() This creates a new settings object that is a deep copy of the current instance. public override WpfDrawingSettings Clone() Returns WpfDrawingSettings A new settings object that is a deep copy of this instance. Remarks This is deep cloning of the members of this settings object. If you need just a copy, use the copy constructor to create a new instance."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.CssVariables.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.CssVariables.html",
    "title": "Property CssVariables | SharpVectors Documentation",
    "keywords": "Property CssVariables Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CssVariables Gets or sets user-defined CSS custom properties for the rendering. public IDictionary<string, string> CssVariables { get; set; } Property Value IDictionary<string, string> A IDictionary<TKey, TValue> of user-defined styles. This value is never null."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.CultureInfo.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.CultureInfo.html",
    "title": "Property CultureInfo | SharpVectors Documentation",
    "keywords": "Property CultureInfo Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CultureInfo Gets or sets the main culture information used for rendering texts. public CultureInfo CultureInfo { get; set; } Property Value CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.DefaultFontFamily.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.DefaultFontFamily.html",
    "title": "Property DefaultFontFamily | SharpVectors Documentation",
    "keywords": "Property DefaultFontFamily Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll DefaultFontFamily Gets or sets the globally available default font family. public static FontFamily DefaultFontFamily { get; set; } Property Value FontFamily An instance of the FontFamily specifying the globally available font family. The default is Arial font family (since Arial Unicode MS is no longer shipped by MS)."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.DefaultFontName.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.DefaultFontName.html",
    "title": "Property DefaultFontName | SharpVectors Documentation",
    "keywords": "Property DefaultFontName Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll DefaultFontName Gets or sets the default font family name, which is used when a text node does not specify a font family name. public string DefaultFontName { get; set; } Property Value string A string containing the default font family name. The default is the Arial font, for its support of Unicode texts. This value cannot be null or empty."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.DpiScale.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.DpiScale.html",
    "title": "Property DpiScale | SharpVectors Documentation",
    "keywords": "Property DpiScale Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll DpiScale Gets or sets an object that stores DPI information from which an SVG element is rendered. public DpiScale DpiScale { get; set; } Property Value DpiScale An object DpiScale specifying the DPI information for rendering. Setting a null value is ignored."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.DrawingResources.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.DrawingResources.html",
    "title": "Property DrawingResources | SharpVectors Documentation",
    "keywords": "Property DrawingResources Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll DrawingResources Gets or sets an object used to collect extra information used to enhance the output of ResourceDictionary XAML. public WpfDrawingResources DrawingResources { get; set; } Property Value WpfDrawingResources An object WpfDrawingResources specifying the store of the extra information used by resource dictionary output XAML. The default is null. Remarks This is only used if the user-defined property specified by PropertyIsResources is set to true; otherwise, the extra information used by the resource dictionary output are not generation. If the value of PropertyIsResources is set to true, an instance of the WpfDrawingResources is created a associated with this drawing options, if not provided."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.EnsureViewboxPosition.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.EnsureViewboxPosition.html",
    "title": "Property EnsureViewboxPosition | SharpVectors Documentation",
    "keywords": "Property EnsureViewboxPosition Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. public bool EnsureViewboxPosition { get; set; } Property Value bool This determines whether a transformation is applied to the rendered drawing. For drawings where the top-left position of the viewbox is off the screen, due to negative values, this will ensure the drawing is visible. The default value is true. Set this value to false if you wish to apply your own transformations to the drawings."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.EnsureViewboxSize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.EnsureViewboxSize.html",
    "title": "Property EnsureViewboxSize | SharpVectors Documentation",
    "keywords": "Property EnsureViewboxSize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. public bool EnsureViewboxSize { get; set; } Property Value bool For image outputs, this will force the original size to be saved. The default value is false. However, the ImageSvgConverter converted sets this to true by default. Remarks Setting this to true will cause the rendering process to draw a transparent box around the output, if a viewbox is defined. This will ensure that the original image size is saved."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.ExternalResourcesAccessMode.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.ExternalResourcesAccessMode.html",
    "title": "Property ExternalResourcesAccessMode | SharpVectors Documentation",
    "keywords": "Property ExternalResourcesAccessMode Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ExternalResourcesAccessMode Gets or sets a value indicating how to handled external resources. public ExternalResourcesAccessModes ExternalResourcesAccessMode { get; set; } Property Value ExternalResourcesAccessModes An enumeration of the type ExternalResourcesAccessModes specifying the access mode. The default is Allow. See Also ExternalResourcesAccessMode"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.FontFamilies.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.FontFamilies.html",
    "title": "Property FontFamilies | SharpVectors Documentation",
    "keywords": "Property FontFamilies Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FontFamilies Gets the list of a custom font family objects. public IEnumerable<FontFamily> FontFamilies { get; } Property Value IEnumerable<FontFamily> An iterator to the custom font families."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.FontFamilyNames.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.FontFamilyNames.html",
    "title": "Property FontFamilyNames | SharpVectors Documentation",
    "keywords": "Property FontFamilyNames Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FontFamilyNames A dictionary specifying a map of the font family names to their locations. public IDictionary<string, string> FontFamilyNames { get; } Property Value IDictionary<string, string> A dictionary of the font family names to their locations."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.FontLocations.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.FontLocations.html",
    "title": "Property FontLocations | SharpVectors Documentation",
    "keywords": "Property FontLocations Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FontLocations Gets the list of the custom font locations or paths. public IEnumerable<string> FontLocations { get; } Property Value IEnumerable<string> An iterator to the custom font locations or paths."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericCursive.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericCursive.html",
    "title": "Property GenericCursive | SharpVectors Documentation",
    "keywords": "Property GenericCursive Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GenericCursive Gets or set the globally available generic cursive font family. public static FontFamily GenericCursive { get; set; } Property Value FontFamily An instance of FontFamily specifying the generic cursive font family. The default is Comic Sans MS font family."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericFantasy.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericFantasy.html",
    "title": "Property GenericFantasy | SharpVectors Documentation",
    "keywords": "Property GenericFantasy Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GenericFantasy Gets or set the globally available generic fantasy font family. public static FontFamily GenericFantasy { get; set; } Property Value FontFamily An instance of FontFamily specifying the generic fantasy font family. The default is Impact font family."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericMonospace.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericMonospace.html",
    "title": "Property GenericMonospace | SharpVectors Documentation",
    "keywords": "Property GenericMonospace Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GenericMonospace Gets or set the globally available generic Monospace font family. public static FontFamily GenericMonospace { get; set; } Property Value FontFamily An instance of FontFamily specifying the generic Monospace font family. The default is MS Gothic font family."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericSansSerif.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericSansSerif.html",
    "title": "Property GenericSansSerif | SharpVectors Documentation",
    "keywords": "Property GenericSansSerif Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GenericSansSerif Gets or set the globally available generic sans serif font family. public static FontFamily GenericSansSerif { get; set; } Property Value FontFamily An instance of FontFamily specifying the generic sans serif font family. The default is Tahoma font family. Remarks The possible font names are Tahoma, Arial, Verdana, Trebuchet, MS Sans Serif and Helvetica."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericSerif.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.GenericSerif.html",
    "title": "Property GenericSerif | SharpVectors Documentation",
    "keywords": "Property GenericSerif Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GenericSerif Gets or set the globally available generic serif font family. public static FontFamily GenericSerif { get; set; } Property Value FontFamily An instance of FontFamily specifying the generic serif font family. The default is Times New Roman font family."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.HasFontFamilies.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.HasFontFamilies.html",
    "title": "Property HasFontFamilies | SharpVectors Documentation",
    "keywords": "Property HasFontFamilies Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll HasFontFamilies Gets a value specifying whether user-defined font families are associated with the target rendering. public bool HasFontFamilies { get; } Property Value bool This is true if user-defined font families exists; otherwise, it is false."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.HasPixelSize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.HasPixelSize.html",
    "title": "Property HasPixelSize | SharpVectors Documentation",
    "keywords": "Property HasPixelSize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll HasPixelSize Gets a value indicating the dimension or size of the target drawing is specified. public bool HasPixelSize { get; } Property Value bool This is true if the values of both PixelWidth and PixelHeight are positive; otherwise, it is false."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.IgnoreRootViewbox.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.IgnoreRootViewbox.html",
    "title": "Property IgnoreRootViewbox | SharpVectors Documentation",
    "keywords": "Property IgnoreRootViewbox Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IgnoreRootViewbox Gets or sets a value to indicate whether to turn off viewbox at the root of the drawing. public bool IgnoreRootViewbox { get; set; } Property Value bool For image outputs, this will force the original size to be saved. The default value is false. Remarks There are reported cases where are diagrams displayed in Inkscape program, but will not show when converted. These are diagrams on the drawing canvas of Inkspace but outside the svg viewbox. When converted the drawings are also converted but not displayed due to clipping. Setting this property to true will clear the clipping region on conversion."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.IncludeRuntime.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.IncludeRuntime.html",
    "title": "Property IncludeRuntime | SharpVectors Documentation",
    "keywords": "Property IncludeRuntime Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. public bool IncludeRuntime { get; set; } Property Value bool This is true if the SharpVectors.Runtime.dll classes and types are used in the generated output; otherwise, it is false. The default is true. Remarks The use of the SharpVectors.Runtime.dll prevents the hard-coded font path generated by the FormattedText class, support for embedded images etc."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.InteractiveMode.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.InteractiveMode.html",
    "title": "Property InteractiveMode | SharpVectors Documentation",
    "keywords": "Property InteractiveMode Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll InteractiveMode Gets or sets a value specifying the interactive mode of the target rendering. public SvgInteractiveModes InteractiveMode { get; set; } Property Value SvgInteractiveModes An enumeration of the type SvgInteractiveModes specifying the interactive mode. The default is None, no interactivity. Remarks The interactive mode determine whether extra attributes are added to the individual rendered elements to make it easy to select or identity at runtime."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.Item.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.Item.html",
    "title": "Property this | SharpVectors Documentation",
    "keywords": "Property this Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll this[string] Gets or sets a well-known property value. public object this[string name] { get; set; } Parameters name string The well-known name of the property. It can be SharpVectors or user-defined. Only the SharpVectors defined properties are supported by default. A null or empty string names are ignored. Property Value object The value of the well-known or user-defined property. Setting the value of an existing property to null will remove the property."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.LookupFontFamily.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.LookupFontFamily.html",
    "title": "Method LookupFontFamily | SharpVectors Documentation",
    "keywords": "Method LookupFontFamily Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll LookupFontFamily(string, FontWeight, FontStyle, FontStretch) This looks for or matches the specified font family name and attributes. public FontFamily LookupFontFamily(string fontName, FontWeight weight, FontStyle style, FontStretch stretch) Parameters fontName string The font family name to search in the list of defined fonts. weight FontWeight style FontStyle stretch FontStretch Returns FontFamily It returns an FontFamily defining the font family object matched; otherwise, it returns null."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.NeutralCultureInfo.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.NeutralCultureInfo.html",
    "title": "Property NeutralCultureInfo | SharpVectors Documentation",
    "keywords": "Property NeutralCultureInfo Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll NeutralCultureInfo Gets the neutral language for text rendering. public CultureInfo NeutralCultureInfo { get; } Property Value CultureInfo An instance of the CultureInfo specifying the neutral culture information for texts. The default is the English culture. Remarks For vertical text rendering, there is a basic text splitting into Western and other languages. This culture information is used to render the Western language part, and the mains culture information for the other languages."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.OptimizePath.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.OptimizePath.html",
    "title": "Property OptimizePath | SharpVectors Documentation",
    "keywords": "Property OptimizePath Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. public bool OptimizePath { get; set; } Property Value bool This is true if the path geometry is optimized using the StreamGeometry; otherwise, it is false. The default is true."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PixelHeight.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PixelHeight.html",
    "title": "Property PixelHeight | SharpVectors Documentation",
    "keywords": "Property PixelHeight Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PixelHeight Gets or sets the pixel height of the rendered drawing. public int PixelHeight { get; set; } Property Value int The height of the rendered drawing in pixels. The default is -1, not set. Remarks This, together with a valid PixelWidth value, may defined a bounding box around the rendered drawing to constrain its bounds. Only effective where static images are required."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PixelWidth.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PixelWidth.html",
    "title": "Property PixelWidth | SharpVectors Documentation",
    "keywords": "Property PixelWidth Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PixelWidth Gets or sets the pixel width of the rendered drawing. public int PixelWidth { get; set; } Property Value int The width of the rendered drawing in pixels. The default is -1, not set. Remarks This, together with a valid PixelHeight value, may defined a bounding box around the rendered drawing to constrain its bounds. Only effective where static images are required."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PropertyIsResources.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PropertyIsResources.html",
    "title": "Field PropertyIsResources | SharpVectors Documentation",
    "keywords": "Field PropertyIsResources Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll A well-known property name, a Boolean value specifying the target output of the rendering is resource dictionary XAML. If set to true, operations required to enhance the output of ResourceDictionary XAML are enabled. The default value is false. public const string PropertyIsResources = \"_IsResources\" Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PropertyNoneBrush.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PropertyNoneBrush.html",
    "title": "Field PropertyNoneBrush | SharpVectors Documentation",
    "keywords": "Field PropertyNoneBrush Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll A well-known property name, specifies the Brush object to be used for an SVG element, which is defined with display styling none, but no fill styling options. The default value is null. public const string PropertyNoneBrush = \"_NoneBrush\" Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PropertyNonePen.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.PropertyNonePen.html",
    "title": "Field PropertyNonePen | SharpVectors Documentation",
    "keywords": "Field PropertyNonePen Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll A well-known property name, specifies the Pen object to be used for an SVG element, which is defined with display styling none, but no stroke styling options. The default value is null. public const string PropertyNonePen = \"_NonePen\" Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.ReadXml.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.ReadXml.html",
    "title": "Method ReadXml | SharpVectors Documentation",
    "keywords": "Method ReadXml Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. public override void ReadXml(XmlReader reader) Parameters reader XmlReader The reader with which the XML attributes of this object are accessed. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.TextAsGeometry.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.TextAsGeometry.html",
    "title": "Property TextAsGeometry | SharpVectors Documentation",
    "keywords": "Property TextAsGeometry Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. public bool TextAsGeometry { get; set; } Property Value bool This is true if texts are rendered as path geometries; otherwise, this is false. The default is false."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.UserAgentCssFilePath.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.UserAgentCssFilePath.html",
    "title": "Property UserAgentCssFilePath | SharpVectors Documentation",
    "keywords": "Property UserAgentCssFilePath Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll UserAgentCssFilePath Gets or sets the basic style sheet that give default styles to any SVG document, similar to the user-agent or browsers styles. public string UserAgentCssFilePath { get; set; } Property Value string A string containing the path to the user-agent stylesheet file. The default is null. Remarks These style sheets are named user-agent stylesheets in browsers. Most browsers use actual stylesheets for this purpose, while others simulate them in code. The end result is the same. Some browsers let users modify the user-agent stylesheet, but this is rare and is the approach used by the SharpVectors. See Also UserCssFilePath"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.UserCssFilePath.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.UserCssFilePath.html",
    "title": "Property UserCssFilePath | SharpVectors Documentation",
    "keywords": "Property UserCssFilePath Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll UserCssFilePath Gets or sets a stylesheet to override the styles in SVG documents using a custom user stylesheet, similar to that in browsers. public string UserCssFilePath { get; set; } Property Value string A string containing the path to the user stylesheet file. The default is null. Remarks In most browsers, the user (or reader) of the web site can choose to override styles using a custom user stylesheet designed to tailor the experience to the user's wishes. Depending on the user agent, user styles can be configured directly or added via browser extensions. See Also UserAgentCssFilePath"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.Visitors.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.Visitors.html",
    "title": "Property Visitors | SharpVectors Documentation",
    "keywords": "Property Visitors Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Visitors Gets the list of custom rendering visitor implementation objects to be used by the SharpVectors. public WpfVisitors Visitors { get; } Property Value WpfVisitors An object WpfVisitors specifying the list of the visitor objects."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.WriteXml.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.WriteXml.html",
    "title": "Method WriteXml | SharpVectors Documentation",
    "keywords": "Method WriteXml Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. public override void WriteXml(XmlWriter writer) Parameters writer XmlWriter The XML writer with which the XML format of this object's state is written. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.XmlTagName.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.XmlTagName.html",
    "title": "Field XmlTagName | SharpVectors Documentation",
    "keywords": "Field XmlTagName Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll The name of the XML tag name, under which this object is stored. public const string XmlTagName = \"drawingSettings\" Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.XmlVersion.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.XmlVersion.html",
    "title": "Field XmlVersion | SharpVectors Documentation",
    "keywords": "Field XmlVersion Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll The version of the file format, under which this object is stored. public const string XmlVersion = \"1.0.0\" Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfDrawingSettings.html",
    "title": "Class WpfDrawingSettings | SharpVectors Documentation",
    "keywords": "Class WpfDrawingSettings Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll This provides the settings or options for the drawing/rendering engine of the WPF. [Serializable] public sealed class WpfDrawingSettings : WpfSettings<WpfDrawingSettings>, ICloneable, IXmlSerializable Inheritance object DispatcherObject DependencyObject WpfObject WpfSettings<WpfDrawingSettings> WpfDrawingSettings Implements ICloneable IXmlSerializable Inherited Members WpfObject.NotNull(object, string) WpfObject.NotNull(string, string) WpfObject.NotEmpty(string, string) WpfObject.NotNullNotEmpty(string, string) WpfObject.NotNullNotEmpty<E>(IList<E>, string) WpfObject.PathMustExist(string, string) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfDrawingSettings() Initializes a new instance of the WpfDrawingSettings class with the default parameters and settings. WpfDrawingSettings(WpfDrawingSettings) Initializes a new instance of the WpfDrawingSettings class with the specified initial drawing or rendering settings, a copy constructor. Fields PropertyIsResources A well-known property name, a Boolean value specifying the target output of the rendering is resource dictionary XAML. If set to true, operations required to enhance the output of ResourceDictionary XAML are enabled. The default value is false. PropertyNoneBrush A well-known property name, specifies the Brush object to be used for an SVG element, which is defined with display styling none, but no fill styling options. The default value is null. PropertyNonePen A well-known property name, specifies the Pen object to be used for an SVG element, which is defined with display styling none, but no stroke styling options. The default value is null. XmlTagName The name of the XML tag name, under which this object is stored. XmlVersion The version of the file format, under which this object is stored. Properties CanUseBitmap Gets or sets a value indicating if image elements will render bitmaps. CssVariables Gets or sets user-defined CSS custom properties for the rendering. CultureInfo Gets or sets the main culture information used for rendering texts. DefaultFontFamily Gets or sets the globally available default font family. DefaultFontName Gets or sets the default font family name, which is used when a text node does not specify a font family name. DpiScale Gets or sets an object that stores DPI information from which an SVG element is rendered. DrawingResources Gets or sets an object used to collect extra information used to enhance the output of ResourceDictionary XAML. EnsureViewboxPosition Gets or sets a value to indicate applying a translate transform to the viewbox to ensure it is visible when rendered. EnsureViewboxSize Gets or sets a value to indicate preserving the original viewbox size when saving images. ExternalResourcesAccessMode Gets or sets a value indicating how to handled external resources. FontFamilies Gets the list of a custom font family objects. FontFamilyNames A dictionary specifying a map of the font family names to their locations. FontLocations Gets the list of the custom font locations or paths. GenericCursive Gets or set the globally available generic cursive font family. GenericFantasy Gets or set the globally available generic fantasy font family. GenericMonospace Gets or set the globally available generic Monospace font family. GenericSansSerif Gets or set the globally available generic sans serif font family. GenericSerif Gets or set the globally available generic serif font family. HasFontFamilies Gets a value specifying whether user-defined font families are associated with the target rendering. HasPixelSize Gets a value indicating the dimension or size of the target drawing is specified. IgnoreRootViewbox Gets or sets a value to indicate whether to turn off viewbox at the root of the drawing. IncludeRuntime Gets or sets a value indicating whether the SharpVectors.Runtime.dll classes are used in the generated output. InteractiveMode Gets or sets a value specifying the interactive mode of the target rendering. this[string] Gets or sets a well-known property value. NeutralCultureInfo Gets the neutral language for text rendering. OptimizePath Gets or sets a value indicating whether the path geometry is optimized using the StreamGeometry. PixelHeight Gets or sets the pixel height of the rendered drawing. PixelWidth Gets or sets the pixel width of the rendered drawing. TextAsGeometry Gets or sets a value indicating whether the texts are rendered as path geometry. UserAgentCssFilePath Gets or sets the basic style sheet that give default styles to any SVG document, similar to the user-agent or browsers styles. UserCssFilePath Gets or sets a stylesheet to override the styles in SVG documents using a custom user stylesheet, similar to that in browsers. Visitors Gets the list of custom rendering visitor implementation objects to be used by the SharpVectors. Methods AddFontFamilyName(string, string) This adds a mapped font family name. A mapped name can be a localized name of a font family or an alternative font family name. AddFontLocation(string) This adds the specified local font location (file or directory) to enable the use of private fonts. Clone() This creates a new settings object that is a deep copy of the current instance. LookupFontFamily(string, FontWeight, FontStyle, FontStretch) This looks for or matches the specified font family name and attributes. ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer."
  },
  "api/SharpVectors.Renderers.Wpf.WpfEmbeddedImageVisitor.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfEmbeddedImageVisitor.-ctor.html",
    "title": "Constructor WpfEmbeddedImageVisitor | SharpVectors Documentation",
    "keywords": "Constructor WpfEmbeddedImageVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfEmbeddedImageVisitor() protected WpfEmbeddedImageVisitor()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfEmbeddedImageVisitor.Visit.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfEmbeddedImageVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Visit(SvgImageElement, WpfDrawingContext) public abstract ImageSource Visit(SvgImageElement element, WpfDrawingContext context) Parameters element SvgImageElement context WpfDrawingContext Returns ImageSource"
  },
  "api/SharpVectors.Renderers.Wpf.WpfEmbeddedImageVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfEmbeddedImageVisitor.html",
    "title": "Class WpfEmbeddedImageVisitor | SharpVectors Documentation",
    "keywords": "Class WpfEmbeddedImageVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfEmbeddedImageVisitor : WpfVisitor, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfEmbeddedImageVisitor Implements IDisposable Derived EmbeddedImageSerializerVisitor EmbeddedImageVisitor Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(bool) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfEmbeddedImageVisitor() Methods Visit(SvgImageElement, WpfDrawingContext)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFill.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFill.-ctor.html",
    "title": "Constructor WpfFill | SharpVectors Documentation",
    "keywords": "Constructor WpfFill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfFill() protected WpfFill()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFill.CreateFill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFill.CreateFill.html",
    "title": "Method CreateFill | SharpVectors Documentation",
    "keywords": "Method CreateFill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CreateFill(SvgDocument, string) public static WpfFill CreateFill(SvgDocument document, string absoluteUri) Parameters document SvgDocument absoluteUri string Returns WpfFill"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFill.CreateViewportBrush.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFill.CreateViewportBrush.html",
    "title": "Method CreateViewportBrush | SharpVectors Documentation",
    "keywords": "Method CreateViewportBrush Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CreateViewportBrush(SvgStyleableElement) public static Brush CreateViewportBrush(SvgStyleableElement svgElm) Parameters svgElm SvgStyleableElement Returns Brush"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFill.FillType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFill.FillType.html",
    "title": "Property FillType | SharpVectors Documentation",
    "keywords": "Property FillType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FillType public abstract WpfFillType FillType { get; } Property Value WpfFillType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFill.GetBrush.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFill.GetBrush.html",
    "title": "Method GetBrush | SharpVectors Documentation",
    "keywords": "Method GetBrush Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetBrush(Rect, WpfDrawingContext, Transform) public abstract Brush GetBrush(Rect elementBounds, WpfDrawingContext context, Transform viewTransform) Parameters elementBounds Rect context WpfDrawingContext viewTransform Transform Returns Brush"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFill.IsUserSpace.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFill.IsUserSpace.html",
    "title": "Property IsUserSpace | SharpVectors Documentation",
    "keywords": "Property IsUserSpace Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsUserSpace public abstract bool IsUserSpace { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFill.html",
    "title": "Class WpfFill | SharpVectors Documentation",
    "keywords": "Class WpfFill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfFill : DependencyObject Inheritance object DispatcherObject DependencyObject WpfFill Derived WpfGradientFill WpfPatternFill WpfSolidColorFill Inherited Members DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfFill() Properties FillType IsUserSpace Methods CreateFill(SvgDocument, string) CreateViewportBrush(SvgStyleableElement) GetBrush(Rect, WpfDrawingContext, Transform)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFillType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFillType.html",
    "title": "Enum WpfFillType | SharpVectors Documentation",
    "keywords": "Enum WpfFillType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public enum WpfFillType Fields None = 0 Solid = 1 Gradient = 2 Pattern = 3"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.-ctor.html",
    "title": "Constructor WpfFontFamilyInfo | SharpVectors Documentation",
    "keywords": "Constructor WpfFontFamilyInfo Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfFontFamilyInfo(FontFamily, FontWeight, FontStyle, FontStretch) public WpfFontFamilyInfo(FontFamily family, FontWeight weight, FontStyle style, FontStretch stretch) Parameters family FontFamily weight FontWeight style FontStyle stretch FontStretch WpfFontFamilyInfo(WpfFontFamilyType, FontFamily, FontWeight, FontStyle, FontStretch) public WpfFontFamilyInfo(WpfFontFamilyType familyType, FontFamily family, FontWeight weight, FontStyle style, FontStretch stretch) Parameters familyType WpfFontFamilyType family FontFamily weight FontWeight style FontStyle stretch FontStretch WpfFontFamilyInfo(WpfFontFamilyType, string, FontFamily, FontWeight, FontStyle, FontStretch) public WpfFontFamilyInfo(WpfFontFamilyType familyType, string fontName, FontFamily family, FontWeight weight, FontStyle style, FontStretch stretch) Parameters familyType WpfFontFamilyType fontName string family FontFamily weight FontWeight style FontStyle stretch FontStretch WpfFontFamilyInfo(string, SvgFontElement, FontWeight, FontStyle, FontStretch) public WpfFontFamilyInfo(string fontName, SvgFontElement fontElement, FontWeight weight, FontStyle style, FontStretch stretch) Parameters fontName string fontElement SvgFontElement weight FontWeight style FontStyle stretch FontStretch"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Empty.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Empty.html",
    "title": "Field Empty | SharpVectors Documentation",
    "keywords": "Field Empty Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public static readonly WpfFontFamilyInfo Empty Returns WpfFontFamilyInfo"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Family.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Family.html",
    "title": "Property Family | SharpVectors Documentation",
    "keywords": "Property Family Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Family public FontFamily Family { get; } Property Value FontFamily"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.FontElement.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.FontElement.html",
    "title": "Property FontElement | SharpVectors Documentation",
    "keywords": "Property FontElement Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FontElement public SvgFontElement FontElement { get; } Property Value SvgFontElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.FontFamilyType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.FontFamilyType.html",
    "title": "Property FontFamilyType | SharpVectors Documentation",
    "keywords": "Property FontFamilyType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FontFamilyType public WpfFontFamilyType FontFamilyType { get; } Property Value WpfFontFamilyType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.IsEmpty.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.IsEmpty.html",
    "title": "Property IsEmpty | SharpVectors Documentation",
    "keywords": "Property IsEmpty Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsEmpty public bool IsEmpty { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Name.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Name public string Name { get; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Stretch.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Stretch.html",
    "title": "Property Stretch | SharpVectors Documentation",
    "keywords": "Property Stretch Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Stretch public FontStretch Stretch { get; } Property Value FontStretch"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Style.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Style public FontStyle Style { get; } Property Value FontStyle"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Variant.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Variant.html",
    "title": "Property Variant | SharpVectors Documentation",
    "keywords": "Property Variant Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Variant public string Variant { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Weight.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.Weight.html",
    "title": "Property Weight | SharpVectors Documentation",
    "keywords": "Property Weight Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Weight public FontWeight Weight { get; } Property Value FontWeight"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyInfo.html",
    "title": "Class WpfFontFamilyInfo | SharpVectors Documentation",
    "keywords": "Class WpfFontFamilyInfo Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public class WpfFontFamilyInfo Inheritance object WpfFontFamilyInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WpfFontFamilyInfo(WpfFontFamilyType, string, FontFamily, FontWeight, FontStyle, FontStretch) WpfFontFamilyInfo(WpfFontFamilyType, FontFamily, FontWeight, FontStyle, FontStretch) WpfFontFamilyInfo(string, SvgFontElement, FontWeight, FontStyle, FontStretch) WpfFontFamilyInfo(FontFamily, FontWeight, FontStyle, FontStretch) Fields Empty Properties Family FontElement FontFamilyType IsEmpty Name Stretch Style Variant Weight"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyType.html",
    "title": "Enum WpfFontFamilyType | SharpVectors Documentation",
    "keywords": "Enum WpfFontFamilyType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public enum WpfFontFamilyType Fields None = 0 Generic = 1 System = 2 Private = 3 Svg = 4 OpenType = 5 Woff = 6"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyVisitor.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyVisitor.-ctor.html",
    "title": "Constructor WpfFontFamilyVisitor | SharpVectors Documentation",
    "keywords": "Constructor WpfFontFamilyVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfFontFamilyVisitor() protected WpfFontFamilyVisitor()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyVisitor.Visit.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Visit(string, WpfFontFamilyInfo, WpfDrawingContext) public abstract WpfFontFamilyInfo Visit(string fontName, WpfFontFamilyInfo familyInfo, WpfDrawingContext context) Parameters fontName string familyInfo WpfFontFamilyInfo context WpfDrawingContext Returns WpfFontFamilyInfo"
  },
  "api/SharpVectors.Renderers.Wpf.WpfFontFamilyVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfFontFamilyVisitor.html",
    "title": "Class WpfFontFamilyVisitor | SharpVectors Documentation",
    "keywords": "Class WpfFontFamilyVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfFontFamilyVisitor : WpfVisitor, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfFontFamilyVisitor Implements IDisposable Derived FontFamilyVisitor Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(bool) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfFontFamilyVisitor() Methods Visit(string, WpfFontFamilyInfo, WpfDrawingContext)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGradientFill.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGradientFill.-ctor.html",
    "title": "Constructor WpfGradientFill | SharpVectors Documentation",
    "keywords": "Constructor WpfGradientFill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfGradientFill(SvgGradientElement) public WpfGradientFill(SvgGradientElement gradientElement) Parameters gradientElement SvgGradientElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGradientFill.FillType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGradientFill.FillType.html",
    "title": "Property FillType | SharpVectors Documentation",
    "keywords": "Property FillType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FillType public override WpfFillType FillType { get; } Property Value WpfFillType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGradientFill.GetBrush.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGradientFill.GetBrush.html",
    "title": "Method GetBrush | SharpVectors Documentation",
    "keywords": "Method GetBrush Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetBrush(Rect, WpfDrawingContext, Transform) public override Brush GetBrush(Rect elementBounds, WpfDrawingContext context, Transform viewTransform) Parameters elementBounds Rect context WpfDrawingContext viewTransform Transform Returns Brush"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGradientFill.IsUserSpace.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGradientFill.IsUserSpace.html",
    "title": "Property IsUserSpace | SharpVectors Documentation",
    "keywords": "Property IsUserSpace Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsUserSpace public override bool IsUserSpace { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGradientFill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGradientFill.html",
    "title": "Class WpfGradientFill | SharpVectors Documentation",
    "keywords": "Class WpfGradientFill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfGradientFill : WpfFill Inheritance object DispatcherObject DependencyObject WpfFill WpfGradientFill Inherited Members WpfFill.CreateFill(SvgDocument, string) WpfFill.CreateViewportBrush(SvgStyleableElement) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfGradientFill(SvgGradientElement) Properties FillType IsUserSpace Methods GetBrush(Rect, WpfDrawingContext, Transform)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.-ctor.html",
    "title": "Constructor WpfGroupRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfGroupRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfGroupRendering(SvgElement) public WpfGroupRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfGroupRendering.html",
    "title": "Class WpfGroupRendering | SharpVectors Documentation",
    "keywords": "Class WpfGroupRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfGroupRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfGroupRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfGroupRendering(SvgElement) Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.-ctor.html",
    "title": "Constructor WpfHitPath | SharpVectors Documentation",
    "keywords": "Constructor WpfHitPath Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfHitPath() public WpfHitPath() WpfHitPath(string) public WpfHitPath(string value) Parameters value string WpfHitPath(WpfHitPath, string) public WpfHitPath(WpfHitPath parent, string value) Parameters parent WpfHitPath value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.AddChild.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.AddChild.html",
    "title": "Method AddChild | SharpVectors Documentation",
    "keywords": "Method AddChild Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddChild(string) public WpfHitPath AddChild(string value) Parameters value string Returns WpfHitPath AddChild(WpfHitPath) public WpfHitPath AddChild(WpfHitPath child) Parameters child WpfHitPath Returns WpfHitPath"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.Children.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.Children.html",
    "title": "Property Children | SharpVectors Documentation",
    "keywords": "Property Children Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Children public WpfHitPath[] Children { get; } Property Value WpfHitPath[]"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.Equals.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.Equals.html",
    "title": "Method Equals | SharpVectors Documentation",
    "keywords": "Method Equals Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. Equals(WpfHitPath) Indicates whether the current object is equal to another object of the same type. public bool Equals(WpfHitPath other) Parameters other WpfHitPath An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(WpfHitPath, WpfHitPath) public static bool Equals(WpfHitPath path1, WpfHitPath path2) Parameters path1 WpfHitPath path2 WpfHitPath Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.FirstChild.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.FirstChild.html",
    "title": "Property FirstChild | SharpVectors Documentation",
    "keywords": "Property FirstChild Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FirstChild public WpfHitPath FirstChild { get; } Property Value WpfHitPath"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.GetHashCode.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.GetHashCode.html",
    "title": "Method GetHashCode | SharpVectors Documentation",
    "keywords": "Method GetHashCode Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetHashCode() Serves as a hash function for a particular type. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.GetTransform.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.GetTransform.html",
    "title": "Method GetTransform | SharpVectors Documentation",
    "keywords": "Method GetTransform Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetTransform(WpfDrawingDocument, Drawing) public Transform GetTransform(WpfDrawingDocument document, Drawing hitDrawing) Parameters document WpfDrawingDocument hitDrawing Drawing Returns Transform"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.HasChild.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.HasChild.html",
    "title": "Property HasChild | SharpVectors Documentation",
    "keywords": "Property HasChild Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll HasChild public bool HasChild { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.IsRoot.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.IsRoot.html",
    "title": "Property IsRoot | SharpVectors Documentation",
    "keywords": "Property IsRoot Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsRoot public bool IsRoot { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.LastChild.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.LastChild.html",
    "title": "Property LastChild | SharpVectors Documentation",
    "keywords": "Property LastChild Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll LastChild public WpfHitPath LastChild { get; } Property Value WpfHitPath"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.Parent.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.Parent.html",
    "title": "Property Parent | SharpVectors Documentation",
    "keywords": "Property Parent Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Parent public WpfHitPath Parent { get; set; } Property Value WpfHitPath"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.Path.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.Path.html",
    "title": "Property Path | SharpVectors Documentation",
    "keywords": "Property Path Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Path public string Path { get; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.Root.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.Root.html",
    "title": "Property Root | SharpVectors Documentation",
    "keywords": "Property Root Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Root public WpfHitPath Root { get; } Property Value WpfHitPath"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.RootValue.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.RootValue.html",
    "title": "Field RootValue | SharpVectors Documentation",
    "keywords": "Field RootValue Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public const string RootValue = \"(Root)\" Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.Separator.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.Separator.html",
    "title": "Field Separator | SharpVectors Documentation",
    "keywords": "Field Separator Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public const string Separator = \"/\" Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.SplitPath.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.SplitPath.html",
    "title": "Property SplitPath | SharpVectors Documentation",
    "keywords": "Property SplitPath Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll SplitPath public string[] SplitPath { get; } Property Value string[]"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.Splitter.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.Splitter.html",
    "title": "Field Splitter | SharpVectors Documentation",
    "keywords": "Field Splitter Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public static readonly char[] Splitter Returns char[]"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.ToString.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.ToString.html",
    "title": "Method ToString | SharpVectors Documentation",
    "keywords": "Method ToString Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.Value.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.Value.html",
    "title": "Property Value | SharpVectors Documentation",
    "keywords": "Property Value Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Value public string Value { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.html",
    "title": "Class WpfHitPath | SharpVectors Documentation",
    "keywords": "Class WpfHitPath Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfHitPath : IEquatable<WpfHitPath> Inheritance object WpfHitPath Implements IEquatable<WpfHitPath> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfHitPath() WpfHitPath(WpfHitPath, string) WpfHitPath(string) Fields RootValue Separator Splitter Properties Children FirstChild HasChild IsRoot LastChild Parent Path Root SplitPath Value Methods AddChild(WpfHitPath) AddChild(string) Equals(WpfHitPath) Indicates whether the current object is equal to another object of the same type. Equals(WpfHitPath, WpfHitPath) Equals(object) Determines whether the specified object is equal to the current object. GetHashCode() Serves as a hash function for a particular type. GetTransform(WpfDrawingDocument, Drawing) ToString() Returns a string that represents the current object. Operators operator ==(WpfHitPath, WpfHitPath) operator !=(WpfHitPath, WpfHitPath)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.op_Equality.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.op_Equality.html",
    "title": "Operator operator == | SharpVectors Documentation",
    "keywords": "Operator operator == Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll operator ==(WpfHitPath, WpfHitPath) public static bool operator ==(WpfHitPath path1, WpfHitPath path2) Parameters path1 WpfHitPath path2 WpfHitPath Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitPath.op_Inequality.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitPath.op_Inequality.html",
    "title": "Operator operator != | SharpVectors Documentation",
    "keywords": "Operator operator != Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll operator !=(WpfHitPath, WpfHitPath) public static bool operator !=(WpfHitPath path1, WpfHitPath path2) Parameters path1 WpfHitPath path2 WpfHitPath Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.-ctor.html",
    "title": "Constructor WpfHitTestResult | SharpVectors Documentation",
    "keywords": "Constructor WpfHitTestResult Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfHitTestResult(int, int, SvgElement, Drawing) public WpfHitTestResult(int pointX, int pointY, SvgElement element, Drawing drawing) Parameters pointX int pointY int element SvgElement drawing Drawing WpfHitTestResult(Point, SvgElement, Drawing) public WpfHitTestResult(Point point, SvgElement element, Drawing drawing) Parameters point Point element SvgElement drawing Drawing WpfHitTestResult(Rect, SvgElement, Drawing) public WpfHitTestResult(Rect rect, SvgElement element, Drawing drawing) Parameters rect Rect element SvgElement drawing Drawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Drawing.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Drawing.html",
    "title": "Property Drawing | SharpVectors Documentation",
    "keywords": "Property Drawing Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Drawing public Drawing Drawing { get; } Property Value Drawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Element.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Element.html",
    "title": "Property Element | SharpVectors Documentation",
    "keywords": "Property Element Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Element Gets the SVG object that was hit. public SvgElement Element { get; } Property Value SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Empty.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Empty.html",
    "title": "Field Empty | SharpVectors Documentation",
    "keywords": "Field Empty Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public static readonly WpfHitTestResult Empty Returns WpfHitTestResult"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.IsHit.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.IsHit.html",
    "title": "Property IsHit | SharpVectors Documentation",
    "keywords": "Property IsHit Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsHit public bool IsHit { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Point.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Point.html",
    "title": "Property Point | SharpVectors Documentation",
    "keywords": "Property Point Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Point The point value to hit test against. public Point? Point { get; } Property Value Point?"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Rect.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.Rect.html",
    "title": "Property Rect | SharpVectors Documentation",
    "keywords": "Property Rect Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Rect public Rect? Rect { get; } Property Value Rect?"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTestResult.html",
    "title": "Class WpfHitTestResult | SharpVectors Documentation",
    "keywords": "Class WpfHitTestResult Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public class WpfHitTestResult Inheritance object WpfHitTestResult Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WpfHitTestResult(int, int, SvgElement, Drawing) WpfHitTestResult(Point, SvgElement, Drawing) WpfHitTestResult(Rect, SvgElement, Drawing) Fields Empty Properties Drawing Element Gets the SVG object that was hit. IsHit Point The point value to hit test against. Rect"
  },
  "api/SharpVectors.Renderers.Wpf.WpfHitTextLevel.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfHitTextLevel.html",
    "title": "Enum WpfHitTextLevel | SharpVectors Documentation",
    "keywords": "Enum WpfHitTextLevel Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Hit-test options for text elements. public enum WpfHitTextLevel Fields Bounds = 0 Test only the bounds of the rendered text. Glyphs = 1 Test the bounds and glyph geometris in the rendered text."
  },
  "api/SharpVectors.Renderers.Wpf.WpfIDVisitor.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfIDVisitor.-ctor.html",
    "title": "Constructor WpfIDVisitor | SharpVectors Documentation",
    "keywords": "Constructor WpfIDVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfIDVisitor() protected WpfIDVisitor()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfIDVisitor.Visit.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfIDVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Visit(SvgElement, WpfDrawingContext) public abstract string Visit(SvgElement element, WpfDrawingContext context) Parameters element SvgElement context WpfDrawingContext Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfIDVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfIDVisitor.html",
    "title": "Class WpfIDVisitor | SharpVectors Documentation",
    "keywords": "Class WpfIDVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfIDVisitor : WpfVisitor, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfIDVisitor Implements IDisposable Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(bool) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfIDVisitor() Methods Visit(SvgElement, WpfDrawingContext)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfImageRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfImageRendering.-ctor.html",
    "title": "Constructor WpfImageRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfImageRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfImageRendering(SvgElement) public WpfImageRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfImageRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfImageRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfImageRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfImageRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfImageRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfImageRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfImageRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfImageRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfImageRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfImageRendering.html",
    "title": "Class WpfImageRendering | SharpVectors Documentation",
    "keywords": "Class WpfImageRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfImageRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfImageRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfImageRendering(SvgElement) Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.-ctor.html",
    "title": "Constructor WpfLinkVisitor | SharpVectors Documentation",
    "keywords": "Constructor WpfLinkVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfLinkVisitor() protected WpfLinkVisitor()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.AggregatedLayerName.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.AggregatedLayerName.html",
    "title": "Property AggregatedLayerName | SharpVectors Documentation",
    "keywords": "Property AggregatedLayerName Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AggregatedLayerName public abstract string AggregatedLayerName { get; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.Aggregates.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.Aggregates.html",
    "title": "Property Aggregates | SharpVectors Documentation",
    "keywords": "Property Aggregates Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Aggregates public abstract bool Aggregates { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.Exists.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.Exists.html",
    "title": "Method Exists | SharpVectors Documentation",
    "keywords": "Method Exists Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Exists(string) public abstract bool Exists(string linkId) Parameters linkId string Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(DrawingGroup, WpfDrawingContext) public abstract void Initialize(DrawingGroup linkGroup, WpfDrawingContext context) Parameters linkGroup DrawingGroup context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.IsAggregate.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.IsAggregate.html",
    "title": "Property IsAggregate | SharpVectors Documentation",
    "keywords": "Property IsAggregate Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsAggregate public abstract bool IsAggregate { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.Visit.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.Visit.html",
    "title": "Method Visit | SharpVectors Documentation",
    "keywords": "Method Visit Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Visit(DrawingGroup, SvgAElement, WpfDrawingContext, float) public abstract void Visit(DrawingGroup group, SvgAElement element, WpfDrawingContext context, float opacity) Parameters group DrawingGroup element SvgAElement context WpfDrawingContext opacity float"
  },
  "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfLinkVisitor.html",
    "title": "Class WpfLinkVisitor | SharpVectors Documentation",
    "keywords": "Class WpfLinkVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfLinkVisitor : WpfVisitor, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor WpfLinkVisitor Implements IDisposable Derived LinkVisitor Inherited Members WpfVisitor._isInitialized WpfVisitor.IsInitialized WpfVisitor.Initialize(WpfDrawingContext) WpfVisitor.Uninitialize() WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(bool) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfLinkVisitor() Properties AggregatedLayerName Aggregates IsAggregate Methods Exists(string) Initialize(DrawingGroup, WpfDrawingContext) Visit(DrawingGroup, SvgAElement, WpfDrawingContext, float)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.-ctor.html",
    "title": "Constructor WpfMarkerRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfMarkerRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfMarkerRendering(SvgElement) public WpfMarkerRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.RenderMarker.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.RenderMarker.html",
    "title": "Method RenderMarker | SharpVectors Documentation",
    "keywords": "Method RenderMarker Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RenderMarker(WpfDrawingRenderer, WpfDrawingContext, SvgMarkerPosition, SvgStyleableElement) public void RenderMarker(WpfDrawingRenderer renderer, WpfDrawingContext gr, SvgMarkerPosition markerPos, SvgStyleableElement refElement) Parameters renderer WpfDrawingRenderer gr WpfDrawingContext markerPos SvgMarkerPosition refElement SvgStyleableElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfMarkerRendering.html",
    "title": "Class WpfMarkerRendering | SharpVectors Documentation",
    "keywords": "Class WpfMarkerRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfMarkerRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfMarkerRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfMarkerRendering(SvgElement) Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer) RenderMarker(WpfDrawingRenderer, WpfDrawingContext, SvgMarkerPosition, SvgStyleableElement)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPathRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPathRendering.-ctor.html",
    "title": "Constructor WpfPathRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfPathRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfPathRendering(SvgElement) public WpfPathRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPathRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPathRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPathRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPathRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPathRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPathRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPathRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPathRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPathRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPathRendering.html",
    "title": "Class WpfPathRendering | SharpVectors Documentation",
    "keywords": "Class WpfPathRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfPathRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfPathRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfPathRendering(SvgElement) Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternFill.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternFill.-ctor.html",
    "title": "Constructor WpfPatternFill | SharpVectors Documentation",
    "keywords": "Constructor WpfPatternFill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfPatternFill(SvgPatternElement) public WpfPatternFill(SvgPatternElement patternElement) Parameters patternElement SvgPatternElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternFill.FillType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternFill.FillType.html",
    "title": "Property FillType | SharpVectors Documentation",
    "keywords": "Property FillType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FillType public override WpfFillType FillType { get; } Property Value WpfFillType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternFill.GetBrush.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternFill.GetBrush.html",
    "title": "Method GetBrush | SharpVectors Documentation",
    "keywords": "Method GetBrush Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetBrush(Rect, WpfDrawingContext, Transform) public override Brush GetBrush(Rect elementBounds, WpfDrawingContext context, Transform viewTransform) Parameters elementBounds Rect context WpfDrawingContext viewTransform Transform Returns Brush"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternFill.IsUserSpace.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternFill.IsUserSpace.html",
    "title": "Property IsUserSpace | SharpVectors Documentation",
    "keywords": "Property IsUserSpace Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsUserSpace public override bool IsUserSpace { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternFill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternFill.html",
    "title": "Class WpfPatternFill | SharpVectors Documentation",
    "keywords": "Class WpfPatternFill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfPatternFill : WpfFill Inheritance object DispatcherObject DependencyObject WpfFill WpfPatternFill Inherited Members WpfFill.CreateFill(SvgDocument, string) WpfFill.CreateViewportBrush(SvgStyleableElement) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfPatternFill(SvgPatternElement) Properties FillType IsUserSpace Methods GetBrush(Rect, WpfDrawingContext, Transform)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.-ctor.html",
    "title": "Constructor WpfPatternRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfPatternRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfPatternRendering(SvgElement) public WpfPatternRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.IsRecursive.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.IsRecursive.html",
    "title": "Property IsRecursive | SharpVectors Documentation",
    "keywords": "Property IsRecursive Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsRecursive public override bool IsRecursive { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfPatternRendering.html",
    "title": "Class WpfPatternRendering | SharpVectors Documentation",
    "keywords": "Class WpfPatternRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfPatternRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfPatternRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfPatternRendering(SvgElement) Properties IsRecursive Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.-ctor.html",
    "title": "Constructor WpfRendererObject | SharpVectors Documentation",
    "keywords": "Constructor WpfRendererObject Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfRendererObject() protected WpfRendererObject() WpfRendererObject(WpfDrawingContext) protected WpfRendererObject(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.Combine.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.Combine.html",
    "title": "Method Combine | SharpVectors Documentation",
    "keywords": "Method Combine Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Combine(Transform, Transform, bool, bool) public static Transform Combine(Transform first, Transform second, bool groupedFormat, bool checkEquality = true) Parameters first Transform second Transform groupedFormat bool checkEquality bool Returns Transform"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.Context.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.Context.html",
    "title": "Property Context | SharpVectors Documentation",
    "keywords": "Property Context Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Context public virtual WpfDrawingContext Context { get; } Property Value WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.CreateGeometry.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.CreateGeometry.html",
    "title": "Method CreateGeometry | SharpVectors Documentation",
    "keywords": "Method CreateGeometry Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CreateGeometry(ISvgElement, bool) public Geometry CreateGeometry(ISvgElement element, bool optimizePath) Parameters element ISvgElement optimizePath bool Returns Geometry CreateGeometry(SvgEllipseElement) public Geometry CreateGeometry(SvgEllipseElement element) Parameters element SvgEllipseElement Returns Geometry CreateGeometry(SvgRectElement) public Geometry CreateGeometry(SvgRectElement element) Parameters element SvgRectElement Returns Geometry CreateGeometry(SvgLineElement) public Geometry CreateGeometry(SvgLineElement element) Parameters element SvgLineElement Returns Geometry CreateGeometry(SvgPathElement) public Geometry CreateGeometry(SvgPathElement element) Parameters element SvgPathElement Returns Geometry CreateGeometry(SvgCircleElement) public Geometry CreateGeometry(SvgCircleElement element) Parameters element SvgCircleElement Returns Geometry CreateGeometry(SvgPolylineElement) public Geometry CreateGeometry(SvgPolylineElement element) Parameters element SvgPolylineElement Returns Geometry CreateGeometry(SvgPolygonElement) public Geometry CreateGeometry(SvgPolygonElement element) Parameters element SvgPolygonElement Returns Geometry"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.CreateGeometryEx.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.CreateGeometryEx.html",
    "title": "Method CreateGeometryEx | SharpVectors Documentation",
    "keywords": "Method CreateGeometryEx Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CreateGeometryEx(SvgPathElement) public Geometry CreateGeometryEx(SvgPathElement element) Parameters element SvgPathElement Returns Geometry"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.Dispose.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.Dispose.html",
    "title": "Method Dispose | SharpVectors Documentation",
    "keywords": "Method Dispose Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.Finalize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.Finalize.html",
    "title": "Method ~WpfRendererObject | SharpVectors Documentation",
    "keywords": "Method ~WpfRendererObject Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ~WpfRendererObject() protected ~WpfRendererObject()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.GetElementClassName.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.GetElementClassName.html",
    "title": "Method GetElementClassName | SharpVectors Documentation",
    "keywords": "Method GetElementClassName Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetElementClassName(SvgElement, WpfDrawingContext) public static string GetElementClassName(SvgElement element, WpfDrawingContext context = null) Parameters element SvgElement context WpfDrawingContext Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.GetElementName.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.GetElementName.html",
    "title": "Method GetElementName | SharpVectors Documentation",
    "keywords": "Method GetElementName Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetElementName(SvgElement, WpfDrawingContext) public static string GetElementName(SvgElement element, WpfDrawingContext context = null) Parameters element SvgElement context WpfDrawingContext Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsDisposed.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsDisposed.html",
    "title": "Property IsDisposed | SharpVectors Documentation",
    "keywords": "Property IsDisposed Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsDisposed public bool IsDisposed { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsIdentifierPart.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsIdentifierPart.html",
    "title": "Method IsIdentifierPart | SharpVectors Documentation",
    "keywords": "Method IsIdentifierPart Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsIdentifierPart(char) public static bool IsIdentifierPart(char c) Parameters c char Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsIdentifierStart.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsIdentifierStart.html",
    "title": "Method IsIdentifierStart | SharpVectors Documentation",
    "keywords": "Method IsIdentifierStart Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsIdentifierStart(char) public static bool IsIdentifierStart(char c) Parameters c char Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsInitialized.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsInitialized.html",
    "title": "Property IsInitialized | SharpVectors Documentation",
    "keywords": "Property IsInitialized Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsInitialized public virtual bool IsInitialized { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsNullOrIdentity.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsNullOrIdentity.html",
    "title": "Method IsNullOrIdentity | SharpVectors Documentation",
    "keywords": "Method IsNullOrIdentity Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsNullOrIdentity(Transform) public static bool IsNullOrIdentity(Transform transform) Parameters transform Transform Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsValidIdentifier.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.IsValidIdentifier.html",
    "title": "Method IsValidIdentifier | SharpVectors Documentation",
    "keywords": "Method IsValidIdentifier Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsValidIdentifier(string) public static bool IsValidIdentifier(string identifier) Parameters identifier string Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.SplitByCaps.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.SplitByCaps.html",
    "title": "Method SplitByCaps | SharpVectors Documentation",
    "keywords": "Method SplitByCaps Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll SplitByCaps(string, out string) public static bool SplitByCaps(string input, out string output) Parameters input string output string Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject._context.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject._context.html",
    "title": "Field _context | SharpVectors Documentation",
    "keywords": "Field _context Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected WpfDrawingContext _context Returns WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject._flattenClosedPath.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject._flattenClosedPath.html",
    "title": "Field _flattenClosedPath | SharpVectors Documentation",
    "keywords": "Field _flattenClosedPath Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected bool _flattenClosedPath Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject._flattenTolerance.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject._flattenTolerance.html",
    "title": "Field _flattenTolerance | SharpVectors Documentation",
    "keywords": "Field _flattenTolerance Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected double _flattenTolerance Returns double"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject._flattenToleranceType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject._flattenToleranceType.html",
    "title": "Field _flattenToleranceType | SharpVectors Documentation",
    "keywords": "Field _flattenToleranceType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected ToleranceType _flattenToleranceType Returns ToleranceType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject._isDisposed.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject._isDisposed.html",
    "title": "Field _isDisposed | SharpVectors Documentation",
    "keywords": "Field _isDisposed Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected bool _isDisposed Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendererObject.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendererObject.html",
    "title": "Class WpfRendererObject | SharpVectors Documentation",
    "keywords": "Class WpfRendererObject Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfRendererObject : DependencyObject, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject Implements IDisposable Derived WpfTextRenderer WpfDrawingRenderer WpfRenderingBase WpfVisitor Inherited Members DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfRendererObject() WpfRendererObject(WpfDrawingContext) Fields _context _flattenClosedPath _flattenTolerance _flattenToleranceType _isDisposed Properties Context IsDisposed IsInitialized Methods Combine(Transform, Transform, bool, bool) CreateGeometry(ISvgElement, bool) CreateGeometry(SvgCircleElement) CreateGeometry(SvgEllipseElement) CreateGeometry(SvgLineElement) CreateGeometry(SvgPathElement) CreateGeometry(SvgPolygonElement) CreateGeometry(SvgPolylineElement) CreateGeometry(SvgRectElement) CreateGeometryEx(SvgPathElement) Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Dispose(bool) ~WpfRendererObject() GetElementClassName(SvgElement, WpfDrawingContext) GetElementName(SvgElement, WpfDrawingContext) IsIdentifierPart(char) IsIdentifierStart(char) IsNullOrIdentity(Transform) IsValidIdentifier(string) SplitByCaps(string, out string)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.-ctor.html",
    "title": "Constructor WpfRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfRendering(SvgElement) public WpfRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.CalcLengthUnit.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.CalcLengthUnit.html",
    "title": "Method CalcLengthUnit | SharpVectors Documentation",
    "keywords": "Method CalcLengthUnit Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) protected double CalcLengthUnit(SvgLength length, SvgLengthDirection dir, Rect bounds) Parameters length SvgLength dir SvgLengthDirection bounds Rect Returns double"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.ClipGeometry.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.ClipGeometry.html",
    "title": "Property ClipGeometry | SharpVectors Documentation",
    "keywords": "Property ClipGeometry Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ClipGeometry public Geometry ClipGeometry { get; set; } Property Value Geometry"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.ClipUnits.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.ClipUnits.html",
    "title": "Property ClipUnits | SharpVectors Documentation",
    "keywords": "Property ClipUnits Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ClipUnits public SvgUnitType ClipUnits { get; } Property Value SvgUnitType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.CombineTransforms.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.CombineTransforms.html",
    "title": "Property CombineTransforms | SharpVectors Documentation",
    "keywords": "Property CombineTransforms Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CombineTransforms public bool CombineTransforms { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.Create.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.Create.html",
    "title": "Method Create | SharpVectors Documentation",
    "keywords": "Method Create Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Create(ISvgElement) public static WpfRendering Create(ISvgElement element) Parameters element ISvgElement Returns WpfRendering"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.CreateByUri.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.CreateByUri.html",
    "title": "Method CreateByUri | SharpVectors Documentation",
    "keywords": "Method CreateByUri Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CreateByUri(SvgDocument, string, string) Generates a new WpfRendering that corresponds to the given Uri. public static WpfRendering CreateByUri(SvgDocument document, string baseUri, string url) Parameters document SvgDocument baseUri string The base Uri. url string The url. Returns WpfRendering The generated WpfRendering that corresponds to the given Uri."
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.Dispose.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.Dispose.html",
    "title": "Method Dispose | SharpVectors Documentation",
    "keywords": "Method Dispose Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.ExtractMarkerUrl.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.ExtractMarkerUrl.html",
    "title": "Method ExtractMarkerUrl | SharpVectors Documentation",
    "keywords": "Method ExtractMarkerUrl Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ExtractMarkerUrl(string) protected static string ExtractMarkerUrl(string propValue) Parameters propValue string Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.FitToViewbox.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.FitToViewbox.html",
    "title": "Method FitToViewbox | SharpVectors Documentation",
    "keywords": "Method FitToViewbox Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FitToViewbox(WpfDrawingContext, Rect) protected void FitToViewbox(WpfDrawingContext context, Rect elementBounds) Parameters context WpfDrawingContext elementBounds Rect FitToViewbox(WpfDrawingContext, SvgElement, Rect) protected void FitToViewbox(WpfDrawingContext context, SvgElement svgElement, Rect elementBounds) Parameters context WpfDrawingContext svgElement SvgElement elementBounds Rect"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.GetTitleElement.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.GetTitleElement.html",
    "title": "Method GetTitleElement | SharpVectors Documentation",
    "keywords": "Method GetTitleElement Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetTitleElement() protected SvgTitleElement GetTitleElement() Returns SvgTitleElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.IsPresentationMarker.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.IsPresentationMarker.html",
    "title": "Method IsPresentationMarker | SharpVectors Documentation",
    "keywords": "Method IsPresentationMarker Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsPresentationMarker(SvgStyleableElement) protected static bool IsPresentationMarker(SvgStyleableElement styleElm) Parameters styleElm SvgStyleableElement Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.MaskContentUnits.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.MaskContentUnits.html",
    "title": "Property MaskContentUnits | SharpVectors Documentation",
    "keywords": "Property MaskContentUnits Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll MaskContentUnits public SvgUnitType MaskContentUnits { get; } Property Value SvgUnitType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.MaskUnits.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.MaskUnits.html",
    "title": "Property MaskUnits | SharpVectors Documentation",
    "keywords": "Property MaskUnits Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll MaskUnits public SvgUnitType MaskUnits { get; } Property Value SvgUnitType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.Masking.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.Masking.html",
    "title": "Property Masking | SharpVectors Documentation",
    "keywords": "Property Masking Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Masking public Brush Masking { get; set; } Property Value Brush"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.RenderMarkers.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.RenderMarkers.html",
    "title": "Method RenderMarkers | SharpVectors Documentation",
    "keywords": "Method RenderMarkers Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) protected static void RenderMarkers(WpfDrawingRenderer renderer, SvgStyleableElement styleElm, WpfDrawingContext gr) Parameters renderer WpfDrawingRenderer styleElm SvgStyleableElement gr WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.SetClip.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.SetClip.html",
    "title": "Method SetClip | SharpVectors Documentation",
    "keywords": "Method SetClip Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll SetClip(WpfDrawingContext) protected void SetClip(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.SetMask.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.SetMask.html",
    "title": "Method SetMask | SharpVectors Documentation",
    "keywords": "Method SetMask Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll SetMask(WpfDrawingContext) protected void SetMask(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.SetQuality.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.SetQuality.html",
    "title": "Method SetQuality | SharpVectors Documentation",
    "keywords": "Method SetQuality Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll SetQuality(WpfDrawingContext) protected void SetQuality(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.SetTransform.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.SetTransform.html",
    "title": "Method SetTransform | SharpVectors Documentation",
    "keywords": "Method SetTransform Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll SetTransform(WpfDrawingContext) protected void SetTransform(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.Transform.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.Transform.html",
    "title": "Property Transform | SharpVectors Documentation",
    "keywords": "Property Transform Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Transform public Transform Transform { get; set; } Property Value Transform"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRendering.html",
    "title": "Class WpfRendering | SharpVectors Documentation",
    "keywords": "Class WpfRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public class WpfRendering : WpfRenderingBase, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering Implements IDisposable Derived WpfARendering WpfGroupRendering WpfImageRendering WpfMarkerRendering WpfPathRendering WpfPatternRendering WpfSvgRendering WpfSwitchRendering WpfSymbolRendering WpfTextRendering WpfUseRendering Inherited Members WpfRenderingBase._isReady WpfRenderingBase._elementId WpfRenderingBase._uniqueId WpfRenderingBase._svgElement WpfRenderingBase._paintContext WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRenderingBase.Render(WpfDrawingRenderer) WpfRenderingBase.GetElementName() WpfRenderingBase.GetElementClass() WpfRenderingBase.Rendered(Drawing) WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfRendering(SvgElement) Properties ClipGeometry ClipUnits CombineTransforms MaskContentUnits MaskUnits Masking Transform Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) CalcLengthUnit(SvgLength, SvgLengthDirection, Rect) Create(ISvgElement) CreateByUri(SvgDocument, string, string) Generates a new WpfRendering that corresponds to the given Uri. Dispose(bool) ExtractMarkerUrl(string) FitToViewbox(WpfDrawingContext, SvgElement, Rect) FitToViewbox(WpfDrawingContext, Rect) GetTitleElement() Initialize(SvgElement) IsPresentationMarker(SvgStyleableElement) RenderMarkers(WpfDrawingRenderer, SvgStyleableElement, WpfDrawingContext) SetClip(WpfDrawingContext) SetMask(WpfDrawingContext) SetQuality(WpfDrawingContext) SetTransform(WpfDrawingContext)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.-ctor.html",
    "title": "Constructor WpfRenderingBase | SharpVectors Documentation",
    "keywords": "Constructor WpfRenderingBase Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfRenderingBase(SvgElement) protected WpfRenderingBase(SvgElement element) Parameters element SvgElement WpfRenderingBase(SvgElement, WpfDrawingContext) protected WpfRenderingBase(SvgElement element, WpfDrawingContext context) Parameters element SvgElement context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public virtual void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public virtual void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Dispose.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Dispose.html",
    "title": "Method Dispose | SharpVectors Documentation",
    "keywords": "Method Dispose Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Element.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Element.html",
    "title": "Property Element | SharpVectors Documentation",
    "keywords": "Property Element Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Element public SvgElement Element { get; } Property Value SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.GetElementClass.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.GetElementClass.html",
    "title": "Method GetElementClass | SharpVectors Documentation",
    "keywords": "Method GetElementClass Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetElementClass() protected string GetElementClass() Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.GetElementName.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.GetElementName.html",
    "title": "Method GetElementName | SharpVectors Documentation",
    "keywords": "Method GetElementName Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetElementName() protected string GetElementName() Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected virtual void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.IsReady.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.IsReady.html",
    "title": "Property IsReady | SharpVectors Documentation",
    "keywords": "Property IsReady Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsReady public bool IsReady { get; protected set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.IsRecursive.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.IsRecursive.html",
    "title": "Property IsRecursive | SharpVectors Documentation",
    "keywords": "Property IsRecursive Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsRecursive public virtual bool IsRecursive { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.NeedRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.NeedRender.html",
    "title": "Method NeedRender | SharpVectors Documentation",
    "keywords": "Method NeedRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll NeedRender(WpfDrawingRenderer) public virtual bool NeedRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.PaintContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.PaintContext.html",
    "title": "Property PaintContext | SharpVectors Documentation",
    "keywords": "Property PaintContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PaintContext public WpfSvgPaintContext PaintContext { get; } Property Value WpfSvgPaintContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public virtual void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Rendered.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.Rendered.html",
    "title": "Method Rendered | SharpVectors Documentation",
    "keywords": "Method Rendered Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Rendered(Drawing) protected void Rendered(Drawing drawing) Parameters drawing Drawing"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._elementId.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._elementId.html",
    "title": "Field _elementId | SharpVectors Documentation",
    "keywords": "Field _elementId Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected string _elementId Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._isReady.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._isReady.html",
    "title": "Field _isReady | SharpVectors Documentation",
    "keywords": "Field _isReady Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected bool _isReady Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._paintContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._paintContext.html",
    "title": "Field _paintContext | SharpVectors Documentation",
    "keywords": "Field _paintContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected WpfSvgPaintContext _paintContext Returns WpfSvgPaintContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._svgElement.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._svgElement.html",
    "title": "Field _svgElement | SharpVectors Documentation",
    "keywords": "Field _svgElement Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected SvgElement _svgElement Returns SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._uniqueId.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase._uniqueId.html",
    "title": "Field _uniqueId | SharpVectors Documentation",
    "keywords": "Field _uniqueId Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected string _uniqueId Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingBase.html",
    "title": "Class WpfRenderingBase | SharpVectors Documentation",
    "keywords": "Class WpfRenderingBase Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Defines the interface required for a rendering node to interact with the renderer and the SVG DOM public abstract class WpfRenderingBase : WpfRendererObject, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase Implements IDisposable Derived WpfRendering Inherited Members WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Remarks Rename: WpfElementRenderer, WpfRenderingObject Constructors WpfRenderingBase(SvgElement) WpfRenderingBase(SvgElement, WpfDrawingContext) Fields _elementId _isReady _paintContext _svgElement _uniqueId Properties Element IsReady IsRecursive PaintContext Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Dispose(bool) GetElementClass() GetElementName() Initialize(SvgElement) NeedRender(WpfDrawingRenderer) Render(WpfDrawingRenderer) Rendered(Drawing)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.-ctor.html",
    "title": "Constructor WpfRenderingHelper | SharpVectors Documentation",
    "keywords": "Constructor WpfRenderingHelper Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfRenderingHelper(WpfDrawingRenderer) public WpfRenderingHelper(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(ISvgDocument) public void Render(ISvgDocument docElement) Parameters docElement ISvgDocument Render(SvgDocument) public void Render(SvgDocument docElement) Parameters docElement SvgDocument Render(ISvgElement) public void Render(ISvgElement svgElement) Parameters svgElement ISvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.RenderAs.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.RenderAs.html",
    "title": "Method RenderAs | SharpVectors Documentation",
    "keywords": "Method RenderAs Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RenderAs(SvgElement) public void RenderAs(SvgElement svgElement) Parameters svgElement SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.RenderChildren.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.RenderChildren.html",
    "title": "Method RenderChildren | SharpVectors Documentation",
    "keywords": "Method RenderChildren Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RenderChildren(ISvgElement) public void RenderChildren(ISvgElement svgElement) Parameters svgElement ISvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.RenderMask.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.RenderMask.html",
    "title": "Method RenderMask | SharpVectors Documentation",
    "keywords": "Method RenderMask Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RenderMask(ISvgElement) public void RenderMask(ISvgElement svgElement) Parameters svgElement ISvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfRenderingHelper.html",
    "title": "Class WpfRenderingHelper | SharpVectors Documentation",
    "keywords": "Class WpfRenderingHelper Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfRenderingHelper : DependencyObject Inheritance object DispatcherObject DependencyObject WpfRenderingHelper Inherited Members DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Remarks Rename: WpfDocumentRenderer Constructors WpfRenderingHelper(WpfDrawingRenderer) Methods Render(ISvgDocument) Render(ISvgElement) Render(SvgDocument) RenderAs(SvgElement) RenderChildren(ISvgElement) RenderMask(ISvgElement)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.-ctor.html",
    "title": "Constructor WpfResourceSettings | SharpVectors Documentation",
    "keywords": "Constructor WpfResourceSettings Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfResourceSettings() public WpfResourceSettings() WpfResourceSettings(WpfResourceSettings) public WpfResourceSettings(WpfResourceSettings source) Parameters source WpfResourceSettings"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.AddSource.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.AddSource.html",
    "title": "Method AddSource | SharpVectors Documentation",
    "keywords": "Method AddSource Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddSource(string) public bool AddSource(string sourcePath) Parameters sourcePath string Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.BindPenToBrushes.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.BindPenToBrushes.html",
    "title": "Property BindPenToBrushes | SharpVectors Documentation",
    "keywords": "Property BindPenToBrushes Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BindPenToBrushes public bool BindPenToBrushes { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.BindToColors.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.BindToColors.html",
    "title": "Property BindToColors | SharpVectors Documentation",
    "keywords": "Property BindToColors Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BindToColors public bool BindToColors { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.BindToResources.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.BindToResources.html",
    "title": "Property BindToResources | SharpVectors Documentation",
    "keywords": "Property BindToResources Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BindToResources public bool BindToResources { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.BrushNameFormat.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.BrushNameFormat.html",
    "title": "Property BrushNameFormat | SharpVectors Documentation",
    "keywords": "Property BrushNameFormat Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BrushNameFormat public string BrushNameFormat { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ClearSources.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ClearSources.html",
    "title": "Method ClearSources | SharpVectors Documentation",
    "keywords": "Method ClearSources Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ClearSources() public void ClearSources()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.Clone.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.Clone.html",
    "title": "Method Clone | SharpVectors Documentation",
    "keywords": "Method Clone Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Clone() This creates a new build object that is a deep copy of the current instance. public override WpfResourceSettings Clone() Returns WpfResourceSettings A new build object that is a deep copy of this instance. Remarks This is deep cloning of the members of this build object. If you need just a copy, use the copy constructor to create a new instance."
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ColorNameFormat.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ColorNameFormat.html",
    "title": "Property ColorNameFormat | SharpVectors Documentation",
    "keywords": "Property ColorNameFormat Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ColorNameFormat public string ColorNameFormat { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ColorPalette.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ColorPalette.html",
    "title": "Property ColorPalette | SharpVectors Documentation",
    "keywords": "Property ColorPalette Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ColorPalette public IDictionary<Color, string> ColorPalette { get; set; } Property Value IDictionary<Color, string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.CopyTo.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.CopyTo.html",
    "title": "Method CopyTo | SharpVectors Documentation",
    "keywords": "Method CopyTo Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll CopyTo(WpfDrawingResources) public void CopyTo(WpfDrawingResources resources) Parameters resources WpfDrawingResources"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.IndentSpaces.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.IndentSpaces.html",
    "title": "Property IndentSpaces | SharpVectors Documentation",
    "keywords": "Property IndentSpaces Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IndentSpaces public int IndentSpaces { get; set; } Property Value int"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.IsResolverRegistered.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.IsResolverRegistered.html",
    "title": "Method IsResolverRegistered | SharpVectors Documentation",
    "keywords": "Method IsResolverRegistered Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsResolverRegistered() public bool IsResolverRegistered() Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.Load.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.Load.html",
    "title": "Method Load | SharpVectors Documentation",
    "keywords": "Method Load Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Load(string) public void Load(string contentFile) Parameters contentFile string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.NumericPrecision.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.NumericPrecision.html",
    "title": "Property NumericPrecision | SharpVectors Documentation",
    "keywords": "Property NumericPrecision Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll NumericPrecision public int NumericPrecision { get; set; } Property Value int"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.PenNameFormat.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.PenNameFormat.html",
    "title": "Property PenNameFormat | SharpVectors Documentation",
    "keywords": "Property PenNameFormat Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PenNameFormat public string PenNameFormat { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ReadXml.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ReadXml.html",
    "title": "Method ReadXml | SharpVectors Documentation",
    "keywords": "Method ReadXml Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. public override void ReadXml(XmlReader reader) Parameters reader XmlReader The reader with which the XML attributes of this object are accessed. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.RegisterResolver.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.RegisterResolver.html",
    "title": "Method RegisterResolver | SharpVectors Documentation",
    "keywords": "Method RegisterResolver Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RegisterResolver(IResourceKeyResolver) public void RegisterResolver(IResourceKeyResolver keyResolver) Parameters keyResolver IResourceKeyResolver RegisterResolver(Func<IResourceKeyResolver>) public void RegisterResolver(Func<IResourceKeyResolver> keyResolver) Parameters keyResolver Func<IResourceKeyResolver>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.RemoveSource.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.RemoveSource.html",
    "title": "Method RemoveSource | SharpVectors Documentation",
    "keywords": "Method RemoveSource Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RemoveSource(string) public bool RemoveSource(string sourcePath) Parameters sourcePath string Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ResourceAccess.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ResourceAccess.html",
    "title": "Property ResourceAccess | SharpVectors Documentation",
    "keywords": "Property ResourceAccess Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ResourceAccess public ResourceAccessType ResourceAccess { get; set; } Property Value ResourceAccessType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ResourceFreeze.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ResourceFreeze.html",
    "title": "Property ResourceFreeze | SharpVectors Documentation",
    "keywords": "Property ResourceFreeze Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ResourceFreeze public bool ResourceFreeze { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ResourceMode.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ResourceMode.html",
    "title": "Property ResourceMode | SharpVectors Documentation",
    "keywords": "Property ResourceMode Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ResourceMode public ResourceModeType ResourceMode { get; set; } Property Value ResourceModeType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ResourceResolverType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.ResourceResolverType.html",
    "title": "Property ResourceResolverType | SharpVectors Documentation",
    "keywords": "Property ResourceResolverType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ResourceResolverType public ResourceKeyResolverType ResourceResolverType { get; } Property Value ResourceKeyResolverType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.RetrieveResolver.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.RetrieveResolver.html",
    "title": "Method RetrieveResolver | SharpVectors Documentation",
    "keywords": "Method RetrieveResolver Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll RetrieveResolver() public IResourceKeyResolver RetrieveResolver() Returns IResourceKeyResolver"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.Save.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.Save.html",
    "title": "Method Save | SharpVectors Documentation",
    "keywords": "Method Save Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Save() public string Save() Returns string Save(string) public void Save(string contentFile) Parameters contentFile string Save(TextWriter) public void Save(TextWriter textWriter) Parameters textWriter TextWriter Save(Stream) public void Save(Stream stream) Parameters stream Stream"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.SourceCount.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.SourceCount.html",
    "title": "Property SourceCount | SharpVectors Documentation",
    "keywords": "Property SourceCount Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll SourceCount public int SourceCount { get; } Property Value int"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.Sources.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.Sources.html",
    "title": "Property Sources | SharpVectors Documentation",
    "keywords": "Property Sources Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Sources public IEnumerable<string> Sources { get; } Property Value IEnumerable<string>"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.UseResourceIndex.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.UseResourceIndex.html",
    "title": "Property UseResourceIndex | SharpVectors Documentation",
    "keywords": "Property UseResourceIndex Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll UseResourceIndex public bool UseResourceIndex { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.WriteXml.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.WriteXml.html",
    "title": "Method WriteXml | SharpVectors Documentation",
    "keywords": "Method WriteXml Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. public override void WriteXml(XmlWriter writer) Parameters writer XmlWriter The XML writer with which the XML format of this object's state is written. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.XmlTagName.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.XmlTagName.html",
    "title": "Field XmlTagName | SharpVectors Documentation",
    "keywords": "Field XmlTagName Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Gets the name of the XML tag name, under which this object is stored. public const string XmlTagName = \"resourceSettings\" Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.XmlVersion.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.XmlVersion.html",
    "title": "Field XmlVersion | SharpVectors Documentation",
    "keywords": "Field XmlVersion Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public const string XmlVersion = \"1.0.0\" Returns string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfResourceSettings.html",
    "title": "Class WpfResourceSettings | SharpVectors Documentation",
    "keywords": "Class WpfResourceSettings Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll [Serializable] public sealed class WpfResourceSettings : WpfSettings<WpfResourceSettings>, ICloneable, IXmlSerializable Inheritance object DispatcherObject DependencyObject WpfObject WpfSettings<WpfResourceSettings> WpfResourceSettings Implements ICloneable IXmlSerializable Inherited Members WpfObject.NotNull(object, string) WpfObject.NotNull(string, string) WpfObject.NotEmpty(string, string) WpfObject.NotNullNotEmpty(string, string) WpfObject.NotNullNotEmpty<E>(IList<E>, string) WpfObject.PathMustExist(string, string) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfResourceSettings() WpfResourceSettings(WpfResourceSettings) Fields XmlTagName Gets the name of the XML tag name, under which this object is stored. XmlVersion Properties BindPenToBrushes BindToColors BindToResources BrushNameFormat ColorNameFormat ColorPalette IndentSpaces NumericPrecision PenNameFormat ResourceAccess ResourceFreeze ResourceMode ResourceResolverType SourceCount Sources UseResourceIndex Methods AddSource(string) ClearSources() Clone() This creates a new build object that is a deep copy of the current instance. CopyTo(WpfDrawingResources) IsResolverRegistered() Load(string) ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. RegisterResolver(IResourceKeyResolver) RegisterResolver(Func<IResourceKeyResolver>) RemoveSource(string) RetrieveResolver() Save() Save(Stream) Save(TextWriter) Save(string) WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer."
  },
  "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.-ctor.html",
    "title": "Constructor WpfSolidColorFill | SharpVectors Documentation",
    "keywords": "Constructor WpfSolidColorFill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfSolidColorFill(SvgSolidColorElement) public WpfSolidColorFill(SvgSolidColorElement gradientElement) Parameters gradientElement SvgSolidColorElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.FillType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.FillType.html",
    "title": "Property FillType | SharpVectors Documentation",
    "keywords": "Property FillType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FillType public override WpfFillType FillType { get; } Property Value WpfFillType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.GetBrush.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.GetBrush.html",
    "title": "Method GetBrush | SharpVectors Documentation",
    "keywords": "Method GetBrush Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetBrush(Rect, WpfDrawingContext, Transform) public override Brush GetBrush(Rect elementBounds, WpfDrawingContext context, Transform viewTransform) Parameters elementBounds Rect context WpfDrawingContext viewTransform Transform Returns Brush"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.IsUserSpace.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.IsUserSpace.html",
    "title": "Property IsUserSpace | SharpVectors Documentation",
    "keywords": "Property IsUserSpace Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsUserSpace public override bool IsUserSpace { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSolidColorFill.html",
    "title": "Class WpfSolidColorFill | SharpVectors Documentation",
    "keywords": "Class WpfSolidColorFill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfSolidColorFill : WpfFill Inheritance object DispatcherObject DependencyObject WpfFill WpfSolidColorFill Inherited Members WpfFill.CreateFill(SvgDocument, string) WpfFill.CreateViewportBrush(SvgStyleableElement) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfSolidColorFill(SvgSolidColorElement) Properties FillType IsUserSpace Methods GetBrush(Rect, WpfDrawingContext, Transform)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgColor.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgColor.-ctor.html",
    "title": "Constructor WpfSvgColor | SharpVectors Documentation",
    "keywords": "Constructor WpfSvgColor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfSvgColor(SvgStyleableElement, string) public WpfSvgColor(SvgStyleableElement elm, string propertyName) Parameters elm SvgStyleableElement propertyName string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgColor.Alpha.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgColor.Alpha.html",
    "title": "Property Alpha | SharpVectors Documentation",
    "keywords": "Property Alpha Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Alpha public int Alpha { get; } Property Value int"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgColor.Color.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgColor.Color.html",
    "title": "Property Color | SharpVectors Documentation",
    "keywords": "Property Color Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Color public Color Color { get; } Property Value Color"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgColor.Name.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgColor.Name.html",
    "title": "Property Name | SharpVectors Documentation",
    "keywords": "Property Name Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Name public string Name { get; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgColor.Opacity.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgColor.Opacity.html",
    "title": "Property Opacity | SharpVectors Documentation",
    "keywords": "Property Opacity Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Opacity public double Opacity { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgColor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgColor.html",
    "title": "Class WpfSvgColor | SharpVectors Documentation",
    "keywords": "Class WpfSvgColor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfSvgColor : SvgColor, ISvgColor, ICssValue Inheritance object CssValue SvgColor WpfSvgColor Implements ISvgColor ICssValue Inherited Members SvgColor.CssText SvgColor.ColorType SvgColor.RgbColor SvgColor.IccColor SvgColor.SetRgbColor(string) SvgColor.SetRgbColorIccColor(string, string) SvgColor.SetColor(SvgColorType, string, string) CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue.GetAbsoluteValue(string, XmlElement) CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfSvgColor(SvgStyleableElement, string) Properties Alpha Color Name Opacity"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.-ctor.html",
    "title": "Constructor WpfSvgPaint | SharpVectors Documentation",
    "keywords": "Constructor WpfSvgPaint Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfSvgPaint(WpfDrawingContext, SvgStyleableElement, string) public WpfSvgPaint(WpfDrawingContext context, SvgStyleableElement elm, string propName) Parameters context WpfDrawingContext elm SvgStyleableElement propName string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.FillType.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.FillType.html",
    "title": "Property FillType | SharpVectors Documentation",
    "keywords": "Property FillType Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FillType public WpfFillType FillType { get; } Property Value WpfFillType"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.GetBrush.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.GetBrush.html",
    "title": "Method GetBrush | SharpVectors Documentation",
    "keywords": "Method GetBrush Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetBrush() public Brush GetBrush() Returns Brush GetBrush(bool) public Brush GetBrush(bool setOpacity) Parameters setOpacity bool Returns Brush GetBrush(Geometry) public Brush GetBrush(Geometry geometry) Parameters geometry Geometry Returns Brush GetBrush(Geometry, bool) public Brush GetBrush(Geometry geometry, bool setOpacity) Parameters geometry Geometry setOpacity bool Returns Brush"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.GetPen.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.GetPen.html",
    "title": "Method GetPen | SharpVectors Documentation",
    "keywords": "Method GetPen Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetPen(bool) public Pen GetPen(bool setOpacity = true) Parameters setOpacity bool Returns Pen GetPen(Geometry, bool) public Pen GetPen(Geometry geometry, bool setOpacity = true) Parameters geometry Geometry setOpacity bool Returns Pen"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.GetScopeStroke.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.GetScopeStroke.html",
    "title": "Method GetScopeStroke | SharpVectors Documentation",
    "keywords": "Method GetScopeStroke Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll GetScopeStroke() public WpfSvgPaint GetScopeStroke() Returns WpfSvgPaint"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.IsEqual.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.IsEqual.html",
    "title": "Method IsEqual | SharpVectors Documentation",
    "keywords": "Method IsEqual Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsEqual(Brush, Brush) public static bool IsEqual(Brush brush1, Brush brush2) Parameters brush1 Brush brush2 Brush Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.IsFillTransformable.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.IsFillTransformable.html",
    "title": "Property IsFillTransformable | SharpVectors Documentation",
    "keywords": "Property IsFillTransformable Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsFillTransformable public bool IsFillTransformable { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.IsUserSpace.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.IsUserSpace.html",
    "title": "Property IsUserSpace | SharpVectors Documentation",
    "keywords": "Property IsUserSpace Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsUserSpace public bool IsUserSpace { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.PaintServer.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.PaintServer.html",
    "title": "Property PaintServer | SharpVectors Documentation",
    "keywords": "Property PaintServer Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll PaintServer public WpfFill PaintServer { get; } Property Value WpfFill"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.WpfFallback.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.WpfFallback.html",
    "title": "Property WpfFallback | SharpVectors Documentation",
    "keywords": "Property WpfFallback Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfFallback public WpfSvgPaint WpfFallback { get; } Property Value WpfSvgPaint"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaint.html",
    "title": "Class WpfSvgPaint | SharpVectors Documentation",
    "keywords": "Class WpfSvgPaint Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfSvgPaint : SvgPaint, ISvgPaint, ISvgColor, ICssValue Inheritance object CssValue SvgColor SvgPaint WpfSvgPaint Implements ISvgPaint ISvgColor ICssValue Inherited Members SvgPaint.Fallback SvgPaint.CssText SvgPaint.PaintType SvgPaint.Uri SvgPaint.SetUri(string) SvgPaint.SetPaint(SvgPaintType, string, string, string) SvgColor.ColorType SvgColor.RgbColor SvgColor.IccColor SvgColor.SetRgbColor(string) SvgColor.SetRgbColorIccColor(string, string) SvgColor.SetColor(SvgColorType, string, string) CssValue.LengthUnitPattern CssValue.AngleUnitPattern CssValue.LengthPattern CssValue.AnglePattern CssValue.GetAbsoluteValue(string, XmlElement) CssValue.GetCssValue(string, bool) CssValue.ReadOnly CssValue.CssValueType CssValue.IsAbsolute CssValue.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfSvgPaint(WpfDrawingContext, SvgStyleableElement, string) Properties FillType IsFillTransformable IsUserSpace PaintServer WpfFallback Methods GetBrush() GetBrush(bool) GetBrush(Geometry) GetBrush(Geometry, bool) GetPen(bool) GetPen(Geometry, bool) GetScopeStroke() IsEqual(Brush, Brush)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.-ctor.html",
    "title": "Constructor WpfSvgPaintContext | SharpVectors Documentation",
    "keywords": "Constructor WpfSvgPaintContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfSvgPaintContext(string) public WpfSvgPaintContext(string id) Parameters id string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.Fill.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.Fill.html",
    "title": "Property Fill | SharpVectors Documentation",
    "keywords": "Property Fill Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Fill public WpfSvgPaint Fill { get; set; } Property Value WpfSvgPaint"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.HasTarget.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.HasTarget.html",
    "title": "Property HasTarget | SharpVectors Documentation",
    "keywords": "Property HasTarget Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll HasTarget public bool HasTarget { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.Id.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.Id.html",
    "title": "Property Id | SharpVectors Documentation",
    "keywords": "Property Id Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Id public string Id { get; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.Stroke.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.Stroke.html",
    "title": "Property Stroke | SharpVectors Documentation",
    "keywords": "Property Stroke Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Stroke public WpfSvgPaint Stroke { get; set; } Property Value WpfSvgPaint"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.Tag.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.Tag.html",
    "title": "Property Tag | SharpVectors Documentation",
    "keywords": "Property Tag Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Tag public object Tag { get; set; } Property Value object"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.TargetId.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.TargetId.html",
    "title": "Property TargetId | SharpVectors Documentation",
    "keywords": "Property TargetId Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll TargetId public string TargetId { get; set; } Property Value string"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgPaintContext.html",
    "title": "Class WpfSvgPaintContext | SharpVectors Documentation",
    "keywords": "Class WpfSvgPaintContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfSvgPaintContext Inheritance object WpfSvgPaintContext Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfSvgPaintContext(string) Properties Fill HasTarget Id Stroke Tag TargetId"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.-ctor.html",
    "title": "Constructor WpfSvgRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfSvgRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfSvgRendering(SvgElement) public WpfSvgRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.IsRecursive.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.IsRecursive.html",
    "title": "Property IsRecursive | SharpVectors Documentation",
    "keywords": "Property IsRecursive Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsRecursive public override bool IsRecursive { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSvgRendering.html",
    "title": "Class WpfSvgRendering | SharpVectors Documentation",
    "keywords": "Class WpfSvgRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfSvgRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfSvgRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfSvgRendering(SvgElement) Properties IsRecursive Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.-ctor.html",
    "title": "Constructor WpfSwitchRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfSwitchRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfSwitchRendering(SvgElement) public WpfSwitchRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSwitchRendering.html",
    "title": "Class WpfSwitchRendering | SharpVectors Documentation",
    "keywords": "Class WpfSwitchRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfSwitchRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfSwitchRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfSwitchRendering(SvgElement) Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.-ctor.html",
    "title": "Constructor WpfSymbolRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfSymbolRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfSymbolRendering(SvgElement) public WpfSymbolRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.IsRecursive.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.IsRecursive.html",
    "title": "Property IsRecursive | SharpVectors Documentation",
    "keywords": "Property IsRecursive Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsRecursive public override bool IsRecursive { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfSymbolRendering.html",
    "title": "Class WpfSymbolRendering | SharpVectors Documentation",
    "keywords": "Class WpfSymbolRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfSymbolRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfSymbolRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfSymbolRendering(SvgElement) Properties IsRecursive Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.-ctor.html",
    "title": "Constructor WpfTextRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfTextRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfTextRendering(SvgElement) public WpfTextRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.AddTextWidth.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.AddTextWidth.html",
    "title": "Method AddTextWidth | SharpVectors Documentation",
    "keywords": "Method AddTextWidth Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AddTextWidth(double) public void AddTextWidth(double textWidth) Parameters textWidth double"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.IsMeasuring.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.IsMeasuring.html",
    "title": "Property IsMeasuring | SharpVectors Documentation",
    "keywords": "Property IsMeasuring Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsMeasuring public bool IsMeasuring { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.IsRecursive.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.IsRecursive.html",
    "title": "Property IsRecursive | SharpVectors Documentation",
    "keywords": "Property IsRecursive Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsRecursive public override bool IsRecursive { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.IsTextPath.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.IsTextPath.html",
    "title": "Property IsTextPath | SharpVectors Documentation",
    "keywords": "Property IsTextPath Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsTextPath public bool IsTextPath { get; set; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.SetTextWidth.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.SetTextWidth.html",
    "title": "Method SetTextWidth | SharpVectors Documentation",
    "keywords": "Method SetTextWidth Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll SetTextWidth(double) public void SetTextWidth(double textWidth) Parameters textWidth double"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.TextContext.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.TextContext.html",
    "title": "Property TextContext | SharpVectors Documentation",
    "keywords": "Property TextContext Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll TextContext public WpfTextContext TextContext { get; } Property Value WpfTextContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.TextWidth.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.TextWidth.html",
    "title": "Property TextWidth | SharpVectors Documentation",
    "keywords": "Property TextWidth Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll TextWidth public double TextWidth { get; } Property Value double"
  },
  "api/SharpVectors.Renderers.Wpf.WpfTextRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfTextRendering.html",
    "title": "Class WpfTextRendering | SharpVectors Documentation",
    "keywords": "Class WpfTextRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfTextRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfTextRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfTextRendering(SvgElement) Properties IsMeasuring IsRecursive IsTextPath TextContext TextWidth Methods AddTextWidth(double) AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer) SetTextWidth(double)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfUseRendering.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfUseRendering.-ctor.html",
    "title": "Constructor WpfUseRendering | SharpVectors Documentation",
    "keywords": "Constructor WpfUseRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfUseRendering(SvgElement) public WpfUseRendering(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfUseRendering.AfterRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfUseRendering.AfterRender.html",
    "title": "Method AfterRender | SharpVectors Documentation",
    "keywords": "Method AfterRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll AfterRender(WpfDrawingRenderer) public override void AfterRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfUseRendering.BeforeRender.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfUseRendering.BeforeRender.html",
    "title": "Method BeforeRender | SharpVectors Documentation",
    "keywords": "Method BeforeRender Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll BeforeRender(WpfDrawingRenderer) public override void BeforeRender(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfUseRendering.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfUseRendering.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(SvgElement) protected override void Initialize(SvgElement element) Parameters element SvgElement"
  },
  "api/SharpVectors.Renderers.Wpf.WpfUseRendering.Render.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfUseRendering.Render.html",
    "title": "Method Render | SharpVectors Documentation",
    "keywords": "Method Render Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Render(WpfDrawingRenderer) public override void Render(WpfDrawingRenderer renderer) Parameters renderer WpfDrawingRenderer"
  },
  "api/SharpVectors.Renderers.Wpf.WpfUseRendering.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfUseRendering.html",
    "title": "Class WpfUseRendering | SharpVectors Documentation",
    "keywords": "Class WpfUseRendering Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfUseRendering : WpfRendering, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfRenderingBase WpfRendering WpfUseRendering Implements IDisposable Inherited Members WpfRendering.Transform WpfRendering.ClipGeometry WpfRendering.ClipUnits WpfRendering.Masking WpfRendering.MaskUnits WpfRendering.MaskContentUnits WpfRendering.CombineTransforms WpfRendering.Create(ISvgElement) WpfRendering.CreateByUri(SvgDocument, string, string) WpfRenderingBase.Element WpfRenderingBase.IsRecursive WpfRenderingBase.IsReady WpfRenderingBase.PaintContext WpfRenderingBase.NeedRender(WpfDrawingRenderer) WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsInitialized WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors WpfUseRendering(SvgElement) Methods AfterRender(WpfDrawingRenderer) BeforeRender(WpfDrawingRenderer) Initialize(SvgElement) Render(WpfDrawingRenderer)"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitor.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitor.-ctor.html",
    "title": "Constructor WpfVisitor | SharpVectors Documentation",
    "keywords": "Constructor WpfVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfVisitor() protected WpfVisitor() WpfVisitor(WpfDrawingContext) protected WpfVisitor(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitor.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitor.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(WpfDrawingContext) public virtual void Initialize(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitor.IsInitialized.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitor.IsInitialized.html",
    "title": "Property IsInitialized | SharpVectors Documentation",
    "keywords": "Property IsInitialized Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IsInitialized public override bool IsInitialized { get; } Property Value bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitor.Uninitialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitor.Uninitialize.html",
    "title": "Method Uninitialize | SharpVectors Documentation",
    "keywords": "Method Uninitialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Uninitialize() public virtual void Uninitialize()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitor._isInitialized.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitor._isInitialized.html",
    "title": "Field _isInitialized | SharpVectors Documentation",
    "keywords": "Field _isInitialized Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll protected bool _isInitialized Returns bool"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitor.html",
    "title": "Class WpfVisitor | SharpVectors Documentation",
    "keywords": "Class WpfVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfVisitor : WpfRendererObject, IDisposable Inheritance object DispatcherObject DependencyObject WpfRendererObject WpfVisitor Implements IDisposable Derived WpfClassVisitor WpfEmbeddedImageVisitor WpfFontFamilyVisitor WpfIDVisitor WpfLinkVisitor Inherited Members WpfRendererObject._isDisposed WpfRendererObject._context WpfRendererObject._flattenClosedPath WpfRendererObject._flattenTolerance WpfRendererObject._flattenToleranceType WpfRendererObject.IsDisposed WpfRendererObject.Context WpfRendererObject.IsNullOrIdentity(Transform) WpfRendererObject.SplitByCaps(string, out string) WpfRendererObject.GetElementName(SvgElement, WpfDrawingContext) WpfRendererObject.GetElementClassName(SvgElement, WpfDrawingContext) WpfRendererObject.IsValidIdentifier(string) WpfRendererObject.IsIdentifierStart(char) WpfRendererObject.IsIdentifierPart(char) WpfRendererObject.Combine(Transform, Transform, bool, bool) WpfRendererObject.CreateGeometry(ISvgElement, bool) WpfRendererObject.CreateGeometry(SvgEllipseElement) WpfRendererObject.CreateGeometry(SvgRectElement) WpfRendererObject.CreateGeometry(SvgLineElement) WpfRendererObject.CreateGeometryEx(SvgPathElement) WpfRendererObject.CreateGeometry(SvgPathElement) WpfRendererObject.CreateGeometry(SvgCircleElement) WpfRendererObject.CreateGeometry(SvgPolylineElement) WpfRendererObject.CreateGeometry(SvgPolygonElement) WpfRendererObject.Dispose() WpfRendererObject.Dispose(bool) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfVisitor() WpfVisitor(WpfDrawingContext) Fields _isInitialized Properties IsInitialized Methods Initialize(WpfDrawingContext) Uninitialize()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.-ctor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.-ctor.html",
    "title": "Constructor WpfVisitors | SharpVectors Documentation",
    "keywords": "Constructor WpfVisitors Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll WpfVisitors() public WpfVisitors()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.ClassVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.ClassVisitor.html",
    "title": "Property ClassVisitor | SharpVectors Documentation",
    "keywords": "Property ClassVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ClassVisitor public WpfClassVisitor ClassVisitor { get; set; } Property Value WpfClassVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.FontFamilyVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.FontFamilyVisitor.html",
    "title": "Property FontFamilyVisitor | SharpVectors Documentation",
    "keywords": "Property FontFamilyVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll FontFamilyVisitor public WpfFontFamilyVisitor FontFamilyVisitor { get; set; } Property Value WpfFontFamilyVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.IDVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.IDVisitor.html",
    "title": "Property IDVisitor | SharpVectors Documentation",
    "keywords": "Property IDVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll IDVisitor public WpfIDVisitor IDVisitor { get; set; } Property Value WpfIDVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.ImageVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.ImageVisitor.html",
    "title": "Property ImageVisitor | SharpVectors Documentation",
    "keywords": "Property ImageVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll ImageVisitor public WpfEmbeddedImageVisitor ImageVisitor { get; set; } Property Value WpfEmbeddedImageVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.Initialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.Initialize.html",
    "title": "Method Initialize | SharpVectors Documentation",
    "keywords": "Method Initialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Initialize(WpfDrawingContext) public void Initialize(WpfDrawingContext context) Parameters context WpfDrawingContext"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.LinkVisitor.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.LinkVisitor.html",
    "title": "Property LinkVisitor | SharpVectors Documentation",
    "keywords": "Property LinkVisitor Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll LinkVisitor public WpfLinkVisitor LinkVisitor { get; set; } Property Value WpfLinkVisitor"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.Uninitialize.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.Uninitialize.html",
    "title": "Method Uninitialize | SharpVectors Documentation",
    "keywords": "Method Uninitialize Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll Uninitialize() public void Uninitialize()"
  },
  "api/SharpVectors.Renderers.Wpf.WpfVisitors.html": {
    "href": "api/SharpVectors.Renderers.Wpf.WpfVisitors.html",
    "title": "Class WpfVisitors | SharpVectors Documentation",
    "keywords": "Class WpfVisitors Namespace SharpVectors.Renderers.Wpf Assembly SharpVectors.Rendering.Wpf.dll public sealed class WpfVisitors Inheritance object WpfVisitors Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors WpfVisitors() Properties ClassVisitor FontFamilyVisitor IDVisitor ImageVisitor LinkVisitor Methods Initialize(WpfDrawingContext) Uninitialize()"
  },
  "api/SharpVectors.Renderers.Wpf.html": {
    "href": "api/SharpVectors.Renderers.Wpf.html",
    "title": "Namespace SharpVectors.Renderers.Wpf | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Renderers.Wpf The SharpVectors.Renderers.Wpf namespace contains a bunch of classes and interfaces. Classes WpfARendering WpfClassVisitor WpfDrawingContext WpfDrawingDocument WpfDrawingRenderer WpfDrawingResources WpfDrawingSettings This provides the settings or options for the drawing/rendering engine of the WPF. WpfEmbeddedImageVisitor WpfFill WpfFontFamilyInfo WpfFontFamilyVisitor WpfGradientFill WpfGroupRendering WpfHitPath WpfHitTestResult WpfIDVisitor WpfImageRendering WpfLinkVisitor WpfMarkerRendering WpfPathRendering WpfPatternFill WpfPatternRendering WpfRendererObject WpfRendering WpfRenderingBase Defines the interface required for a rendering node to interact with the renderer and the SVG DOM WpfRenderingHelper WpfResourceSettings WpfSolidColorFill WpfSvgColor WpfSvgPaint WpfSvgPaintContext WpfSvgRendering WpfSwitchRendering WpfSymbolRendering WpfTextRendering WpfUseRendering WpfVisitor WpfVisitors Enums WpfFillType WpfFontFamilyType WpfHitTextLevel Hit-test options for text elements."
  },
  "api/SharpVectors.Renderers.WpfObject.-ctor.html": {
    "href": "api/SharpVectors.Renderers.WpfObject.-ctor.html",
    "title": "Constructor WpfObject | SharpVectors Documentation",
    "keywords": "Constructor WpfObject Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll WpfObject() protected WpfObject()"
  },
  "api/SharpVectors.Renderers.WpfObject.NotEmpty.html": {
    "href": "api/SharpVectors.Renderers.WpfObject.NotEmpty.html",
    "title": "Method NotEmpty | SharpVectors Documentation",
    "keywords": "Method NotEmpty Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll NotEmpty(string, string) public static void NotEmpty(string argObject, string argName) Parameters argObject string argName string"
  },
  "api/SharpVectors.Renderers.WpfObject.NotNull.html": {
    "href": "api/SharpVectors.Renderers.WpfObject.NotNull.html",
    "title": "Method NotNull | SharpVectors Documentation",
    "keywords": "Method NotNull Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll NotNull(object, string) public static void NotNull(object argObject, string argName) Parameters argObject object argName string NotNull(string, string) public static void NotNull(string argObject, string argName) Parameters argObject string argName string"
  },
  "api/SharpVectors.Renderers.WpfObject.NotNullNotEmpty.html": {
    "href": "api/SharpVectors.Renderers.WpfObject.NotNullNotEmpty.html",
    "title": "Method NotNullNotEmpty | SharpVectors Documentation",
    "keywords": "Method NotNullNotEmpty Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll NotNullNotEmpty(string, string) public static void NotNullNotEmpty(string argObject, string argName) Parameters argObject string argName string NotNullNotEmpty<E>(IList<E>, string) public static void NotNullNotEmpty<E>(IList<E> argObject, string argName) Parameters argObject IList<E> argName string Type Parameters E"
  },
  "api/SharpVectors.Renderers.WpfObject.PathMustExist.html": {
    "href": "api/SharpVectors.Renderers.WpfObject.PathMustExist.html",
    "title": "Method PathMustExist | SharpVectors Documentation",
    "keywords": "Method PathMustExist Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll PathMustExist(string, string) public static void PathMustExist(string argObject, string argName) Parameters argObject string argName string"
  },
  "api/SharpVectors.Renderers.WpfObject.html": {
    "href": "api/SharpVectors.Renderers.WpfObject.html",
    "title": "Class WpfObject | SharpVectors Documentation",
    "keywords": "Class WpfObject Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll public abstract class WpfObject : DependencyObject Inheritance object DispatcherObject DependencyObject WpfObject Derived WpfSettings<T> Inherited Members DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors WpfObject() Methods NotEmpty(string, string) NotNull(object, string) NotNull(string, string) NotNullNotEmpty(string, string) NotNullNotEmpty<E>(IList<E>, string) PathMustExist(string, string)"
  },
  "api/SharpVectors.Renderers.WpfSettings-1.-ctor.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1.-ctor.html",
    "title": "Constructor WpfSettings | SharpVectors Documentation",
    "keywords": "Constructor WpfSettings Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll WpfSettings() Initializes a new instance of the WpfSettings<T> class to the default properties or values. protected WpfSettings() WpfSettings(WpfSettings<T>) Initializes a new instance of the WpfSettings<T> class with initial parameters copied from the specified instance of the specified WpfSettings<T> class, a copy constructor. protected WpfSettings(WpfSettings<T> source) Parameters source WpfSettings<T> An instance of the WpfSettings<T> class from which the initialization parameters or values will be copied. Exceptions ArgumentNullException If the parameter source is null."
  },
  "api/SharpVectors.Renderers.WpfSettings-1.Clone.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1.Clone.html",
    "title": "Method Clone | SharpVectors Documentation",
    "keywords": "Method Clone Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll Clone() This creates a new build object that is a deep copy of the current instance. public abstract T Clone() Returns T A new build object that is a deep copy of this instance. Remarks This is deep cloning of the members of this build object. If you need just a copy, use the copy constructor to create a new instance."
  },
  "api/SharpVectors.Renderers.WpfSettings-1.ReadXml.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1.ReadXml.html",
    "title": "Method ReadXml | SharpVectors Documentation",
    "keywords": "Method ReadXml Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. public virtual void ReadXml(XmlReader reader) Parameters reader XmlReader The reader with which the XML attributes of this object are accessed. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.WpfSettings-1.WriteCData.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1.WriteCData.html",
    "title": "Method WriteCData | SharpVectors Documentation",
    "keywords": "Method WriteCData Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll WriteCData(XmlWriter, string, string) protected static void WriteCData(XmlWriter writer, string name, string value) Parameters writer XmlWriter name string value string WriteCData(XmlWriter, string, string, string) protected static void WriteCData(XmlWriter writer, string name, string value, string content) Parameters writer XmlWriter name string value string content string"
  },
  "api/SharpVectors.Renderers.WpfSettings-1.WriteEnum.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1.WriteEnum.html",
    "title": "Method WriteEnum | SharpVectors Documentation",
    "keywords": "Method WriteEnum Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll WriteEnum(XmlWriter, string, string) protected static void WriteEnum(XmlWriter writer, string name, string value) Parameters writer XmlWriter name string value string WriteEnum(XmlWriter, string, string, string) protected static void WriteEnum(XmlWriter writer, string name, string value, string content) Parameters writer XmlWriter name string value string content string"
  },
  "api/SharpVectors.Renderers.WpfSettings-1.WriteProperty.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1.WriteProperty.html",
    "title": "Method WriteProperty | SharpVectors Documentation",
    "keywords": "Method WriteProperty Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll WriteProperty(XmlWriter, string, string) protected static void WriteProperty(XmlWriter writer, string name, string value) Parameters writer XmlWriter name string value string WriteProperty(XmlWriter, string, string, string) protected static void WriteProperty(XmlWriter writer, string name, string value, string content) Parameters writer XmlWriter name string value string content string WriteProperty(XmlWriter, string, object) protected static void WriteProperty(XmlWriter writer, string name, object value) Parameters writer XmlWriter name string value object WriteProperty(XmlWriter, string, bool) protected static void WriteProperty(XmlWriter writer, string name, bool value) Parameters writer XmlWriter name string value bool WriteProperty(XmlWriter, string, int) protected static void WriteProperty(XmlWriter writer, string name, int value) Parameters writer XmlWriter name string value int"
  },
  "api/SharpVectors.Renderers.WpfSettings-1.WriteXml.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1.WriteXml.html",
    "title": "Method WriteXml | SharpVectors Documentation",
    "keywords": "Method WriteXml Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer. public virtual void WriteXml(XmlWriter writer) Parameters writer XmlWriter The XML writer with which the XML format of this object's state is written. Exceptions ArgumentNullException If the reader is null."
  },
  "api/SharpVectors.Renderers.WpfSettings-1._comparer.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1._comparer.html",
    "title": "Field _comparer | SharpVectors Documentation",
    "keywords": "Field _comparer Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll protected StringComparison _comparer Returns StringComparison"
  },
  "api/SharpVectors.Renderers.WpfSettings-1.html": {
    "href": "api/SharpVectors.Renderers.WpfSettings-1.html",
    "title": "Class WpfSettings<T> | SharpVectors Documentation",
    "keywords": "Class WpfSettings<T> Namespace SharpVectors.Renderers Assembly SharpVectors.Rendering.Wpf.dll This is the typed or generic abstract base class for most objects in this build library, and it defines the basic cloneable and serialization interfaces. This is used as the base object to create components object hierarchy. [Serializable] public abstract class WpfSettings<T> : WpfObject, ICloneable, IXmlSerializable where T : WpfSettings<T> Type Parameters T The underlying value type of the WpfSettings<T> generic type. Inheritance object DispatcherObject DependencyObject WpfObject WpfSettings<T> Implements ICloneable IXmlSerializable Derived CodeSnippetKeyResolver DictionaryKeyResolver ResourceKeyResolver WpfDrawingSettings WpfResourceSettings Inherited Members WpfObject.NotNull(object, string) WpfObject.NotNull(string, string) WpfObject.NotEmpty(string, string) WpfObject.NotNullNotEmpty(string, string) WpfObject.NotNullNotEmpty<E>(IList<E>, string) WpfObject.PathMustExist(string, string) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Remarks This also provides a base class for component object hierarchy whose state can be serialized to an XML format. Constructors WpfSettings() Initializes a new instance of the WpfSettings<T> class to the default properties or values. WpfSettings(WpfSettings<T>) Initializes a new instance of the WpfSettings<T> class with initial parameters copied from the specified instance of the specified WpfSettings<T> class, a copy constructor. Fields _comparer Methods Clone() This creates a new build object that is a deep copy of the current instance. ReadXml(XmlReader) This reads and sets its state or attributes stored in a XML format with the given reader. WriteCData(XmlWriter, string, string) WriteCData(XmlWriter, string, string, string) WriteEnum(XmlWriter, string, string) WriteEnum(XmlWriter, string, string, string) WriteProperty(XmlWriter, string, bool) WriteProperty(XmlWriter, string, int) WriteProperty(XmlWriter, string, object) WriteProperty(XmlWriter, string, string) WriteProperty(XmlWriter, string, string, string) WriteXml(XmlWriter) This writes the current state or attributes of this object, in the XML format, to the media or storage accessible by the given writer."
  },
  "api/SharpVectors.Renderers.html": {
    "href": "api/SharpVectors.Renderers.html",
    "title": "Namespace SharpVectors.Renderers | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Renderers The SharpVectors.Renderers namespace contains a bunch of classes and interfaces. Classes CodeSnippetKeyResolver DictionaryKeyResolver ResourceKeyResolver The default implememation of the IResourceKeyResolver interface. It implementations the default method of resolving the resource key; either by the unmodified SVG file name, or a formatted name using the file name and/or resource index if a format string is provided. WpfObject WpfSettings<T> This is the typed or generic abstract base class for most objects in this build library, and it defines the basic cloneable and serialization interfaces. This is used as the base object to create components object hierarchy. Interfaces IResourceKeyResolver An interface for resolving the resource key of a resource object (DrawingGroup, DrawingImage) generated by the resource dictionary converter. Enums ResourceAccessType A value specifying the referencing or access resource dictionary (DynamicResource, StaticResource). ResourceKeyResolverType A value specifiying the resource key resolver type. ResourceModeType A value specifying the root resource element (DrawingGroup, DrawingImage)."
  },
  "api/SharpVectors.Runtime.DpiScale.-ctor.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.-ctor.html",
    "title": "Constructor DpiScale | SharpVectors Documentation",
    "keywords": "Constructor DpiScale Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DpiScale() Initializes a new instance of the DpiScale class. public DpiScale() DpiScale(double) Initializes a new instance of the DpiScale class. public DpiScale(double value) Parameters value double DpiScale(double, double) Initializes a new instance of the DpiScale class. public DpiScale(double dpiScaleX, double dpiScaleY) Parameters dpiScaleX double DPI scale on X-axis dpiScaleY double DPI scale on Y-axis"
  },
  "api/SharpVectors.Runtime.DpiScale.Clone.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.Clone.html",
    "title": "Method Clone | SharpVectors Documentation",
    "keywords": "Method Clone Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Clone() public DpiScale Clone() Returns DpiScale"
  },
  "api/SharpVectors.Runtime.DpiScale.DpiScaleX.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.DpiScaleX.html",
    "title": "Property DpiScaleX | SharpVectors Documentation",
    "keywords": "Property DpiScaleX Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DpiScaleX Gets the DPI scale on the X axis.When DPI is 96, DpiScaleX is 1. public double DpiScaleX { get; } Property Value double Remarks On Windows Desktop, this value is the same as DpiScaleY"
  },
  "api/SharpVectors.Runtime.DpiScale.DpiScaleY.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.DpiScaleY.html",
    "title": "Property DpiScaleY | SharpVectors Documentation",
    "keywords": "Property DpiScaleY Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DpiScaleY Gets the DPI scale on the Y axis. When DPI is 96, DpiScaleY is 1. public double DpiScaleY { get; } Property Value double Remarks On Windows Desktop, this value is the same as DpiScaleX"
  },
  "api/SharpVectors.Runtime.DpiScale.Equals.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.Equals.html",
    "title": "Method Equals | SharpVectors Documentation",
    "keywords": "Method Equals Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Equals(object) Equality test public override sealed bool Equals(object obj) Parameters obj object The object being compared against Returns bool True if the objects are equal, False otherwise Equals(DpiScale) Equality test against a DpiScale object. public bool Equals(DpiScale other) Parameters other DpiScale Returns bool True if the objects are equal, False otherwise Remarks Two DPI scale values are equal if they are equal after rounding up to hundredths place. Common PPI values in use are: PPI DPI(%) DPI(Ratio) 96 100% 1.00 120 125% 1.25 144 150% 1.50 192 200% 2.00"
  },
  "api/SharpVectors.Runtime.DpiScale.GetHashCode.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.GetHashCode.html",
    "title": "Method GetHashCode | SharpVectors Documentation",
    "keywords": "Method GetHashCode Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetHashCode() Returns the hash code of the current object public override int GetHashCode() Returns int The hash code of the object"
  },
  "api/SharpVectors.Runtime.DpiScale.PixelsPerDip.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.PixelsPerDip.html",
    "title": "Property PixelsPerDip | SharpVectors Documentation",
    "keywords": "Property PixelsPerDip Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll PixelsPerDip Get or sets the PixelsPerDip at which the text should be rendered. public double PixelsPerDip { get; } Property Value double"
  },
  "api/SharpVectors.Runtime.DpiScale.PixelsPerInchX.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.PixelsPerInchX.html",
    "title": "Property PixelsPerInchX | SharpVectors Documentation",
    "keywords": "Property PixelsPerInchX Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll PixelsPerInchX Gets the PPI along X axis. public double PixelsPerInchX { get; } Property Value double Remarks On Windows Desktop, this value is the same as PixelsPerInchY"
  },
  "api/SharpVectors.Runtime.DpiScale.PixelsPerInchY.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.PixelsPerInchY.html",
    "title": "Property PixelsPerInchY | SharpVectors Documentation",
    "keywords": "Property PixelsPerInchY Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll PixelsPerInchY Gets the PPI along Y axis. public double PixelsPerInchY { get; } Property Value double Remarks On Windows Desktop, this value is the same as PixelsPerInchX"
  },
  "api/SharpVectors.Runtime.DpiScale.ToString.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.ToString.html",
    "title": "Method ToString | SharpVectors Documentation",
    "keywords": "Method ToString Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/SharpVectors.Runtime.DpiScale.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.html",
    "title": "Class DpiScale | SharpVectors Documentation",
    "keywords": "Class DpiScale Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Stores DPI information from which a Visual or UIElement is rendered. [Serializable] public class DpiScale : IEquatable<DpiScale>, ICloneable Inheritance object DpiScale Implements IEquatable<DpiScale> ICloneable Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors DpiScale() Initializes a new instance of the DpiScale class. DpiScale(double) Initializes a new instance of the DpiScale class. DpiScale(double, double) Initializes a new instance of the DpiScale class. Properties DpiScaleX Gets the DPI scale on the X axis.When DPI is 96, DpiScaleX is 1. DpiScaleY Gets the DPI scale on the Y axis. When DPI is 96, DpiScaleY is 1. PixelsPerDip Get or sets the PixelsPerDip at which the text should be rendered. PixelsPerInchX Gets the PPI along X axis. PixelsPerInchY Gets the PPI along Y axis. Methods Clone() Equals(DpiScale) Equality test against a DpiScale object. Equals(object) Equality test GetHashCode() Returns the hash code of the current object ToString() Returns a string that represents the current object. Operators operator ==(DpiScale, DpiScale) Checks for equality between two DpiScale instances. operator !=(DpiScale, DpiScale) Checks to inequality between two DpiScale instances."
  },
  "api/SharpVectors.Runtime.DpiScale.op_Equality.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.op_Equality.html",
    "title": "Operator operator == | SharpVectors Documentation",
    "keywords": "Operator operator == Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll operator ==(DpiScale, DpiScale) Checks for equality between two DpiScale instances. public static bool operator ==(DpiScale dpiScaleA, DpiScale dpiScaleB) Parameters dpiScaleA DpiScale The first object being compared dpiScaleB DpiScale The second object being compared Returns bool True if the two objects are equal, otherwise False"
  },
  "api/SharpVectors.Runtime.DpiScale.op_Inequality.html": {
    "href": "api/SharpVectors.Runtime.DpiScale.op_Inequality.html",
    "title": "Operator operator != | SharpVectors Documentation",
    "keywords": "Operator operator != Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll operator !=(DpiScale, DpiScale) Checks to inequality between two DpiScale instances. public static bool operator !=(DpiScale dpiScaleA, DpiScale dpiScaleB) Parameters dpiScaleA DpiScale The first object being compared dpiScaleB DpiScale The second object being compared Returns bool True if the objects are not equal, otherwise False"
  },
  "api/SharpVectors.Runtime.DpiUtilities.CalculateScale.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.CalculateScale.html",
    "title": "Method CalculateScale | SharpVectors Documentation",
    "keywords": "Method CalculateScale Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CalculateScale(uint, uint, double, double) public static DpiScale CalculateScale(uint dpi1X, uint dpi1Y, double dpi2X, double dpi2Y) Parameters dpi1X uint dpi1Y uint dpi2X double dpi2Y double Returns DpiScale"
  },
  "api/SharpVectors.Runtime.DpiUtilities.DefaultPixelsPerInch.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.DefaultPixelsPerInch.html",
    "title": "Field DefaultPixelsPerInch | SharpVectors Documentation",
    "keywords": "Field DefaultPixelsPerInch Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll This is the default PPI value used in WPF and Windows. public const double DefaultPixelsPerInch = 96 Returns double"
  },
  "api/SharpVectors.Runtime.DpiUtilities.DpiAwareness.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.DpiAwareness.html",
    "title": "Property DpiAwareness | SharpVectors Documentation",
    "keywords": "Property DpiAwareness Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DpiAwareness public static ProcessDpiAwareness DpiAwareness { get; } Property Value ProcessDpiAwareness"
  },
  "api/SharpVectors.Runtime.DpiUtilities.GetMonitorEffectiveDpi.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.GetMonitorEffectiveDpi.html",
    "title": "Method GetMonitorEffectiveDpi | SharpVectors Documentation",
    "keywords": "Method GetMonitorEffectiveDpi Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetMonitorEffectiveDpi(IntPtr, out uint, out uint) Get the Effective DPI of a monitor after a user's accessibility preferences have been applied. public static void GetMonitorEffectiveDpi(IntPtr hMonitor, out uint dpiX, out uint dpiY) Parameters hMonitor IntPtr The monitor. dpiX uint The dpi x. dpiY uint The dpi y."
  },
  "api/SharpVectors.Runtime.DpiUtilities.GetScreenScalingFactor.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.GetScreenScalingFactor.html",
    "title": "Method GetScreenScalingFactor | SharpVectors Documentation",
    "keywords": "Method GetScreenScalingFactor Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetScreenScalingFactor(string) Gets scaling factor for a monitor This is defined as current pixel size relative to effective DPI public static double GetScreenScalingFactor(string deviceName = null) Parameters deviceName string Monitor device name or null for the primary monitor Returns double"
  },
  "api/SharpVectors.Runtime.DpiUtilities.GetSystemEffectiveDpi.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.GetSystemEffectiveDpi.html",
    "title": "Method GetSystemEffectiveDpi | SharpVectors Documentation",
    "keywords": "Method GetSystemEffectiveDpi Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetSystemEffectiveDpi(out uint, out uint) Get the System Effective DPI. public static void GetSystemEffectiveDpi(out uint dpiX, out uint dpiY) Parameters dpiX uint The dpi x. dpiY uint The dpi y. Remarks The System Effective DPI is derived by the operating system by looking across all monitors and determining an \"Effective DPI\" that works well across all the screens for applications that do not support per-monitor DPI."
  },
  "api/SharpVectors.Runtime.DpiUtilities.GetSystemScale.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.GetSystemScale.html",
    "title": "Method GetSystemScale | SharpVectors Documentation",
    "keywords": "Method GetSystemScale Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetSystemScale() public static DpiScale GetSystemScale() Returns DpiScale"
  },
  "api/SharpVectors.Runtime.DpiUtilities.GetVirtualPixelScale.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.GetVirtualPixelScale.html",
    "title": "Method GetVirtualPixelScale | SharpVectors Documentation",
    "keywords": "Method GetVirtualPixelScale Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetVirtualPixelScale(Window) Gets the virtual pixel scale for a window. This is essentially the Effective DPI of the monitor versus a standard 96 DPI. public static DpiScale GetVirtualPixelScale(Window window) Parameters window Window The window. Returns DpiScale GetVirtualPixelScale(IntPtr) Gets the virtual pixel scale for a window. This is essentially the Effective DPI of the monitor versus a standard 96 DPI. public static DpiScale GetVirtualPixelScale(IntPtr hwnd) Parameters hwnd IntPtr The HWND. Returns DpiScale"
  },
  "api/SharpVectors.Runtime.DpiUtilities.GetVirtualPixelScaleByMonitor.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.GetVirtualPixelScaleByMonitor.html",
    "title": "Method GetVirtualPixelScaleByMonitor | SharpVectors Documentation",
    "keywords": "Method GetVirtualPixelScaleByMonitor Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetVirtualPixelScaleByMonitor(IntPtr) Gets the virtual pixel scale for a monitor. This is essentially the Effective DPI of the monitor versus a standard 96 DPI. public static DpiScale GetVirtualPixelScaleByMonitor(IntPtr hMonitor) Parameters hMonitor IntPtr The h monitor. Returns DpiScale"
  },
  "api/SharpVectors.Runtime.DpiUtilities.GetWindowEffectiveDpi.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.GetWindowEffectiveDpi.html",
    "title": "Method GetWindowEffectiveDpi | SharpVectors Documentation",
    "keywords": "Method GetWindowEffectiveDpi Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetWindowEffectiveDpi(Window, out uint, out uint) Get the Effective DPI of a windows (monitor) after a user's accessibility preferences have been applied. public static void GetWindowEffectiveDpi(Window window, out uint dpiX, out uint dpiY) Parameters window Window The window. dpiX uint The dpi x. dpiY uint The dpi y. GetWindowEffectiveDpi(IntPtr, out uint, out uint) Get the Effective DPI of a windows (monitor) after a user's accessibility preferences have been applied. public static void GetWindowEffectiveDpi(IntPtr hwnd, out uint dpiX, out uint dpiY) Parameters hwnd IntPtr The window. dpiX uint The dpi x. dpiY uint The dpi y."
  },
  "api/SharpVectors.Runtime.DpiUtilities.GetWindowScale.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.GetWindowScale.html",
    "title": "Method GetWindowScale | SharpVectors Documentation",
    "keywords": "Method GetWindowScale Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetWindowScale(Window) Gets the window (monitor) scale versus System DPI. public static DpiScale GetWindowScale(Window window) Parameters window Window The window. Returns DpiScale Remarks When developing a DPI-aware application, this is useful for applying a ScaleTransform to your window so all fonts and graphics are scaled and rendered beautifully based on the physical capabilities of the display and the accessibility settings of the user. GetWindowScale(Visual) Gets the window (monitor) scale versus System DPI. public static DpiScale GetWindowScale(Visual visual) Parameters visual Visual The window. Returns DpiScale Remarks When developing a DPI-aware application, this is useful for applying a ScaleTransform to your window so all fonts and graphics are scaled and rendered beautifully based on the physical capabilities of the display and the accessibility settings of the user. GetWindowScale(IntPtr) Gets the window (monitor) scale versus System DPI. public static DpiScale GetWindowScale(IntPtr hwnd) Parameters hwnd IntPtr The window. Returns DpiScale Remarks When developing a DPI-aware application, this is useful for applying a ScaleTransform to your window so all fonts and graphics are scaled and rendered beautifully based on the physical capabilities of the display and the accessibility settings of the user."
  },
  "api/SharpVectors.Runtime.DpiUtilities.html": {
    "href": "api/SharpVectors.Runtime.DpiUtilities.html",
    "title": "Class DpiUtilities | SharpVectors Documentation",
    "keywords": "Class DpiUtilities Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static class DpiUtilities Inheritance object DpiUtilities Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields DefaultPixelsPerInch This is the default PPI value used in WPF and Windows. Properties DpiAwareness Methods CalculateScale(uint, uint, double, double) GetMonitorEffectiveDpi(IntPtr, out uint, out uint) Get the Effective DPI of a monitor after a user's accessibility preferences have been applied. GetScreenScalingFactor(string) Gets scaling factor for a monitor This is defined as current pixel size relative to effective DPI GetSystemEffectiveDpi(out uint, out uint) Get the System Effective DPI. GetSystemScale() GetVirtualPixelScale(IntPtr) Gets the virtual pixel scale for a window. This is essentially the Effective DPI of the monitor versus a standard 96 DPI. GetVirtualPixelScale(Window) Gets the virtual pixel scale for a window. This is essentially the Effective DPI of the monitor versus a standard 96 DPI. GetVirtualPixelScaleByMonitor(IntPtr) Gets the virtual pixel scale for a monitor. This is essentially the Effective DPI of the monitor versus a standard 96 DPI. GetWindowEffectiveDpi(IntPtr, out uint, out uint) Get the Effective DPI of a windows (monitor) after a user's accessibility preferences have been applied. GetWindowEffectiveDpi(Window, out uint, out uint) Get the Effective DPI of a windows (monitor) after a user's accessibility preferences have been applied. GetWindowScale(IntPtr) Gets the window (monitor) scale versus System DPI. GetWindowScale(Visual) Gets the window (monitor) scale versus System DPI. GetWindowScale(Window) Gets the window (monitor) scale versus System DPI."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapData.-ctor.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapData.-ctor.html",
    "title": "Constructor EmbeddedBitmapData | SharpVectors Documentation",
    "keywords": "Constructor EmbeddedBitmapData Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll EmbeddedBitmapData(MemoryStream) public EmbeddedBitmapData(MemoryStream stream) Parameters stream MemoryStream"
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapData.Stream.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapData.Stream.html",
    "title": "Property Stream | SharpVectors Documentation",
    "keywords": "Property Stream Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Stream public MemoryStream Stream { get; set; } Property Value MemoryStream"
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapData.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapData.html",
    "title": "Struct EmbeddedBitmapData | SharpVectors Documentation",
    "keywords": "Struct EmbeddedBitmapData Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll [Serializable] [TypeConverter(typeof(EmbeddedBitmapDataConverter))] public struct EmbeddedBitmapData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors EmbeddedBitmapData(MemoryStream) Properties Stream"
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.-ctor.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.-ctor.html",
    "title": "Constructor EmbeddedBitmapDataConverter | SharpVectors Documentation",
    "keywords": "Constructor EmbeddedBitmapDataConverter Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll EmbeddedBitmapDataConverter() public EmbeddedBitmapDataConverter()"
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.CanConvertFrom.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.CanConvertFrom.html",
    "title": "Method CanConvertFrom | SharpVectors Documentation",
    "keywords": "Method CanConvertFrom Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CanConvertFrom(ITypeDescriptorContext, Type) Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context. public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. sourceType Type A Type that represents the type you want to convert from. Returns bool true if this converter can perform the conversion; otherwise, false."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.CanConvertTo.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.CanConvertTo.html",
    "title": "Method CanConvertTo | SharpVectors Documentation",
    "keywords": "Method CanConvertTo Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CanConvertTo(ITypeDescriptorContext, Type) Returns whether this converter can convert the object to the specified type, using the specified context. public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. destinationType Type A Type that represents the type you want to convert to. Returns bool true if this converter can perform the conversion; otherwise, false."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.ConvertFrom.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.ConvertFrom.html",
    "title": "Method ConvertFrom | SharpVectors Documentation",
    "keywords": "Method ConvertFrom Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ConvertFrom(ITypeDescriptorContext, CultureInfo, object) Converts the given object to the type of this converter, using the specified context and culture information. public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. culture CultureInfo The CultureInfo to use as the current culture. value object The object to convert. Returns object An object that represents the converted value. Exceptions NotSupportedException The conversion cannot be performed."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.ConvertTo.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.ConvertTo.html",
    "title": "Method ConvertTo | SharpVectors Documentation",
    "keywords": "Method ConvertTo Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) Converts the given value object to the specified type, using the specified context and culture information. public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that provides a format context. culture CultureInfo A CultureInfo. If null is passed, the current culture is assumed. value object The object to convert. destinationType Type The Type to convert the value parameter to. Returns object An object that represents the converted value. Exceptions ArgumentNullException The destinationType parameter is null. NotSupportedException The conversion cannot be performed."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapDataConverter.html",
    "title": "Class EmbeddedBitmapDataConverter | SharpVectors Documentation",
    "keywords": "Class EmbeddedBitmapDataConverter Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public sealed class EmbeddedBitmapDataConverter : TypeConverter Inheritance object TypeConverter EmbeddedBitmapDataConverter Inherited Members TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(object) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(object) TypeConverter.IsValid(ITypeDescriptorContext, object) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors EmbeddedBitmapDataConverter() Methods CanConvertFrom(ITypeDescriptorContext, Type) Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context. CanConvertTo(ITypeDescriptorContext, Type) Returns whether this converter can convert the object to the specified type, using the specified context. ConvertFrom(ITypeDescriptorContext, CultureInfo, object) Converts the given object to the type of this converter, using the specified context and culture information. ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) Converts the given value object to the specified type, using the specified context and culture information."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.-ctor.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.-ctor.html",
    "title": "Constructor EmbeddedBitmapSource | SharpVectors Documentation",
    "keywords": "Constructor EmbeddedBitmapSource Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll EmbeddedBitmapSource() public EmbeddedBitmapSource() EmbeddedBitmapSource(MemoryStream) public EmbeddedBitmapSource(MemoryStream stream) Parameters stream MemoryStream EmbeddedBitmapSource(MemoryStream, BitmapImage) public EmbeddedBitmapSource(MemoryStream stream, BitmapImage image) Parameters stream MemoryStream image BitmapImage"
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.CloneCore.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.CloneCore.html",
    "title": "Method CloneCore | SharpVectors Documentation",
    "keywords": "Method CloneCore Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CloneCore(Freezable) Makes this instance a deep copy of the specified BitmapSource. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. protected override void CloneCore(Freezable sourceFreezable) Parameters sourceFreezable Freezable The BitmapSource to clone.."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.CloneCurrentValueCore.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.CloneCurrentValueCore.html",
    "title": "Method CloneCurrentValueCore | SharpVectors Documentation",
    "keywords": "Method CloneCurrentValueCore Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CloneCurrentValueCore(Freezable) Makes this instance a modifiable deep copy of the specified BitmapSource using current property values. Resource references, data bindings, and animations are not copied, but their current values are. protected override void CloneCurrentValueCore(Freezable sourceFreezable) Parameters sourceFreezable Freezable The BitmapSource to clone."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.CopyPixels.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.CopyPixels.html",
    "title": "Method CopyPixels | SharpVectors Documentation",
    "keywords": "Method CopyPixels Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CopyPixels(Int32Rect, IntPtr, int, int) Copies the bitmap pixel data within the specified rectangle public override void CopyPixels(Int32Rect sourceRect, IntPtr buffer, int bufferSize, int stride) Parameters sourceRect Int32Rect The source rectangle to copy. An Empty value specifies the entire bitmap. buffer IntPtr A pointer to the buffer. bufferSize int The size of the buffer. stride int The stride of the bitmap."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.CreateInstanceCore.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.CreateInstanceCore.html",
    "title": "Method CreateInstanceCore | SharpVectors Documentation",
    "keywords": "Method CreateInstanceCore Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CreateInstanceCore() When implemented in a derived class, creates a new instance of the Freezable derived class. protected override Freezable CreateInstanceCore() Returns Freezable The new instance."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.Data.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.Data.html",
    "title": "Property Data | SharpVectors Documentation",
    "keywords": "Property Data Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Data public EmbeddedBitmapData Data { get; set; } Property Value EmbeddedBitmapData"
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.DpiX.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.DpiX.html",
    "title": "Property DpiX | SharpVectors Documentation",
    "keywords": "Property DpiX Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DpiX Gets the horizontal dots per inch (dpi) of the image. public override double DpiX { get; } Property Value double The horizontal dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the x-axis."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.DpiY.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.DpiY.html",
    "title": "Property DpiY | SharpVectors Documentation",
    "keywords": "Property DpiY Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DpiY Gets the vertical dots per inch (dpi) of the image. public override double DpiY { get; } Property Value double The vertical dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the y-axis."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.Format.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.Format.html",
    "title": "Property Format | SharpVectors Documentation",
    "keywords": "Property Format Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Format Gets the native PixelFormat of the bitmap data. public override PixelFormat Format { get; } Property Value PixelFormat The pixel format of the bitmap data."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.GetAsFrozenCore.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.GetAsFrozenCore.html",
    "title": "Method GetAsFrozenCore | SharpVectors Documentation",
    "keywords": "Method GetAsFrozenCore Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetAsFrozenCore(Freezable) Makes this instance a clone of the specified BitmapSource object. protected override void GetAsFrozenCore(Freezable sourceFreezable) Parameters sourceFreezable Freezable The BitmapSource object to clone and freeze."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.GetCurrentValueAsFrozenCore.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.GetCurrentValueAsFrozenCore.html",
    "title": "Method GetCurrentValueAsFrozenCore | SharpVectors Documentation",
    "keywords": "Method GetCurrentValueAsFrozenCore Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetCurrentValueAsFrozenCore(Freezable) Makes this instance a frozen clone of the specified BitmapSource. Resource references, data bindings, and animations are not copied, but their current values are. protected override void GetCurrentValueAsFrozenCore(Freezable sourceFreezable) Parameters sourceFreezable Freezable The BitmapSource to copy and freeze."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.MimeType.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.MimeType.html",
    "title": "Property MimeType | SharpVectors Documentation",
    "keywords": "Property MimeType Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MimeType public string MimeType { get; set; } Property Value string"
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.Palette.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.Palette.html",
    "title": "Property Palette | SharpVectors Documentation",
    "keywords": "Property Palette Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Palette Gets the color palette of the bitmap, if one is specified. public override BitmapPalette Palette { get; } Property Value BitmapPalette The color palette of the bitmap."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.PixelHeight.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.PixelHeight.html",
    "title": "Property PixelHeight | SharpVectors Documentation",
    "keywords": "Property PixelHeight Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll PixelHeight Gets the height of the bitmap in pixels. public override int PixelHeight { get; } Property Value int The height of the bitmap in pixels."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.PixelWidth.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.PixelWidth.html",
    "title": "Property PixelWidth | SharpVectors Documentation",
    "keywords": "Property PixelWidth Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll PixelWidth Gets the width of the bitmap in pixels. public override int PixelWidth { get; } Property Value int The width of the bitmap in pixels."
  },
  "api/SharpVectors.Runtime.EmbeddedBitmapSource.html": {
    "href": "api/SharpVectors.Runtime.EmbeddedBitmapSource.html",
    "title": "Class EmbeddedBitmapSource | SharpVectors Documentation",
    "keywords": "Class EmbeddedBitmapSource Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public class EmbeddedBitmapSource : BitmapSource, IAnimatable, IFormattable Inheritance object DispatcherObject DependencyObject Freezable Animatable ImageSource BitmapSource EmbeddedBitmapSource Implements IAnimatable IFormattable Inherited Members BitmapSource.Create(int, int, double, double, PixelFormat, BitmapPalette, Array, int) BitmapSource.Create(int, int, double, double, PixelFormat, BitmapPalette, IntPtr, int, int) BitmapSource.Clone() BitmapSource.CloneCurrentValue() BitmapSource.CopyPixels(Int32Rect, Array, int, int) BitmapSource.CopyPixels(Array, int, int) BitmapSource.CheckIfSiteOfOrigin() BitmapSource.FreezeCore(bool) BitmapSource.IsDownloading BitmapSource.Width BitmapSource.Height BitmapSource.Metadata BitmapSource.DownloadCompleted BitmapSource.DownloadProgress BitmapSource.DownloadFailed BitmapSource.DecodeFailed ImageSource.ToString() ImageSource.ToString(IFormatProvider) ImageSource.PixelsToDIPs(double, int) Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock) Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) Animatable.BeginAnimation(DependencyProperty, AnimationTimeline) Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) Animatable.GetAnimationBaseValue(DependencyProperty) Animatable.HasAnimatedProperties Freezable.GetAsFrozen() Freezable.GetCurrentValueAsFrozen() Freezable.Freeze() Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs) Freezable.CreateInstance() Freezable.OnChanged() Freezable.ReadPreamble() Freezable.WritePreamble() Freezable.WritePostscript() Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject) Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty) Freezable.Freeze(Freezable, bool) Freezable.CanFreeze Freezable.IsFrozen Freezable.Changed DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors EmbeddedBitmapSource() EmbeddedBitmapSource(MemoryStream) EmbeddedBitmapSource(MemoryStream, BitmapImage) Properties Data DpiX Gets the horizontal dots per inch (dpi) of the image. DpiY Gets the vertical dots per inch (dpi) of the image. Format Gets the native PixelFormat of the bitmap data. MimeType Palette Gets the color palette of the bitmap, if one is specified. PixelHeight Gets the height of the bitmap in pixels. PixelWidth Gets the width of the bitmap in pixels. Methods CloneCore(Freezable) Makes this instance a deep copy of the specified BitmapSource. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. CloneCurrentValueCore(Freezable) Makes this instance a modifiable deep copy of the specified BitmapSource using current property values. Resource references, data bindings, and animations are not copied, but their current values are. CopyPixels(Int32Rect, IntPtr, int, int) Copies the bitmap pixel data within the specified rectangle CreateInstanceCore() When implemented in a derived class, creates a new instance of the Freezable derived class. GetAsFrozenCore(Freezable) Makes this instance a clone of the specified BitmapSource object. GetCurrentValueAsFrozenCore(Freezable) Makes this instance a frozen clone of the specified BitmapSource. Resource references, data bindings, and animations are not copied, but their current values are."
  },
  "api/SharpVectors.Runtime.ProcessDpiAwareness.html": {
    "href": "api/SharpVectors.Runtime.ProcessDpiAwareness.html",
    "title": "Enum ProcessDpiAwareness | SharpVectors Documentation",
    "keywords": "Enum ProcessDpiAwareness Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public enum ProcessDpiAwareness Fields DpiUnaware = 0 SystemDpiAware = 1 PerMonitorDpiAware = 2"
  },
  "api/SharpVectors.Runtime.SvgAlertArgs.-ctor.html": {
    "href": "api/SharpVectors.Runtime.SvgAlertArgs.-ctor.html",
    "title": "Constructor SvgAlertArgs | SharpVectors Documentation",
    "keywords": "Constructor SvgAlertArgs Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SvgAlertArgs(string) public SvgAlertArgs(string message) Parameters message string"
  },
  "api/SharpVectors.Runtime.SvgAlertArgs.Handled.html": {
    "href": "api/SharpVectors.Runtime.SvgAlertArgs.Handled.html",
    "title": "Property Handled | SharpVectors Documentation",
    "keywords": "Property Handled Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Handled public bool Handled { get; set; } Property Value bool"
  },
  "api/SharpVectors.Runtime.SvgAlertArgs.Message.html": {
    "href": "api/SharpVectors.Runtime.SvgAlertArgs.Message.html",
    "title": "Property Message | SharpVectors Documentation",
    "keywords": "Property Message Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Message public string Message { get; } Property Value string"
  },
  "api/SharpVectors.Runtime.SvgAlertArgs.html": {
    "href": "api/SharpVectors.Runtime.SvgAlertArgs.html",
    "title": "Class SvgAlertArgs | SharpVectors Documentation",
    "keywords": "Class SvgAlertArgs Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public sealed class SvgAlertArgs : EventArgs Inheritance object EventArgs SvgAlertArgs Inherited Members EventArgs.Empty object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgAlertArgs(string) Properties Handled Message"
  },
  "api/SharpVectors.Runtime.SvgAnimationLayer.-ctor.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimationLayer.-ctor.html",
    "title": "Constructor SvgAnimationLayer | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimationLayer Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SvgAnimationLayer(SvgDrawingCanvas) public SvgAnimationLayer(SvgDrawingCanvas drawingCanvas) Parameters drawingCanvas SvgDrawingCanvas"
  },
  "api/SharpVectors.Runtime.SvgAnimationLayer.DisplayTransform.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimationLayer.DisplayTransform.html",
    "title": "Property DisplayTransform | SharpVectors Documentation",
    "keywords": "Property DisplayTransform Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DisplayTransform public Transform DisplayTransform { get; set; } Property Value Transform"
  },
  "api/SharpVectors.Runtime.SvgAnimationLayer.HandleMouseDown.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimationLayer.HandleMouseDown.html",
    "title": "Method HandleMouseDown | SharpVectors Documentation",
    "keywords": "Method HandleMouseDown Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll HandleMouseDown(MouseButtonEventArgs) public bool HandleMouseDown(MouseButtonEventArgs e) Parameters e MouseButtonEventArgs Returns bool"
  },
  "api/SharpVectors.Runtime.SvgAnimationLayer.HandleMouseLeave.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimationLayer.HandleMouseLeave.html",
    "title": "Method HandleMouseLeave | SharpVectors Documentation",
    "keywords": "Method HandleMouseLeave Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll HandleMouseLeave() public bool HandleMouseLeave() Returns bool"
  },
  "api/SharpVectors.Runtime.SvgAnimationLayer.HandleMouseMove.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimationLayer.HandleMouseMove.html",
    "title": "Method HandleMouseMove | SharpVectors Documentation",
    "keywords": "Method HandleMouseMove Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll HandleMouseMove(MouseEventArgs) public bool HandleMouseMove(MouseEventArgs e) Parameters e MouseEventArgs Returns bool"
  },
  "api/SharpVectors.Runtime.SvgAnimationLayer.LoadDiagrams.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimationLayer.LoadDiagrams.html",
    "title": "Method LoadDiagrams | SharpVectors Documentation",
    "keywords": "Method LoadDiagrams Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll LoadDiagrams(DrawingGroup, DrawingGroup) public void LoadDiagrams(DrawingGroup linkGroups, DrawingGroup wholeGroup) Parameters linkGroups DrawingGroup wholeGroup DrawingGroup"
  },
  "api/SharpVectors.Runtime.SvgAnimationLayer.UnloadDiagrams.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimationLayer.UnloadDiagrams.html",
    "title": "Method UnloadDiagrams | SharpVectors Documentation",
    "keywords": "Method UnloadDiagrams Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll UnloadDiagrams() public void UnloadDiagrams()"
  },
  "api/SharpVectors.Runtime.SvgAnimationLayer.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimationLayer.html",
    "title": "Class SvgAnimationLayer | SharpVectors Documentation",
    "keywords": "Class SvgAnimationLayer Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll This creates a host for visuals derived from the Canvas class. public sealed class SvgAnimationLayer : DependencyObject Inheritance object DispatcherObject DependencyObject SvgAnimationLayer Inherited Members DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Remarks This class provides layout, event handling, and container support for the child visual objects. Constructors SvgAnimationLayer(SvgDrawingCanvas) Properties DisplayTransform Methods HandleMouseDown(MouseButtonEventArgs) HandleMouseLeave() HandleMouseMove(MouseEventArgs) LoadDiagrams(DrawingGroup, DrawingGroup) UnloadDiagrams()"
  },
  "api/SharpVectors.Runtime.SvgAnimator.-ctor.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimator.-ctor.html",
    "title": "Constructor SvgAnimator | SharpVectors Documentation",
    "keywords": "Constructor SvgAnimator Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SvgAnimator() public SvgAnimator()"
  },
  "api/SharpVectors.Runtime.SvgAnimator.IsAnimating.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimator.IsAnimating.html",
    "title": "Property IsAnimating | SharpVectors Documentation",
    "keywords": "Property IsAnimating Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll IsAnimating public bool IsAnimating { get; } Property Value bool"
  },
  "api/SharpVectors.Runtime.SvgAnimator.Start.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimator.Start.html",
    "title": "Method Start | SharpVectors Documentation",
    "keywords": "Method Start Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Start(string, object) public void Start(string targetName, object scopedElement) Parameters targetName string scopedElement object"
  },
  "api/SharpVectors.Runtime.SvgAnimator.Stop.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimator.Stop.html",
    "title": "Method Stop | SharpVectors Documentation",
    "keywords": "Method Stop Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Stop() public void Stop()"
  },
  "api/SharpVectors.Runtime.SvgAnimator.TargetName.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimator.TargetName.html",
    "title": "Property TargetName | SharpVectors Documentation",
    "keywords": "Property TargetName Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll TargetName public string TargetName { get; } Property Value string"
  },
  "api/SharpVectors.Runtime.SvgAnimator.html": {
    "href": "api/SharpVectors.Runtime.SvgAnimator.html",
    "title": "Class SvgAnimator | SharpVectors Documentation",
    "keywords": "Class SvgAnimator Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll This provides a wrapper for the Scoreboard, which is used for opacity animation. public sealed class SvgAnimator : FrameworkElement, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement SvgAnimator Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient Inherited Members FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors SvgAnimator() Properties IsAnimating TargetName Methods Start(string, object) Stop()"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.-ctor.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.-ctor.html",
    "title": "Constructor SvgDrawingCanvas | SharpVectors Documentation",
    "keywords": "Constructor SvgDrawingCanvas Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SvgDrawingCanvas() public SvgDrawingCanvas()"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.Alert.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.Alert.html",
    "title": "Event Alert | SharpVectors Documentation",
    "keywords": "Event Alert Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public event EventHandler<SvgAlertArgs> Alert Returns EventHandler<SvgAlertArgs>"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.AnimationCanvas.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.AnimationCanvas.html",
    "title": "Property AnimationCanvas | SharpVectors Documentation",
    "keywords": "Property AnimationCanvas Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll AnimationCanvas public SvgAnimationLayer AnimationCanvas { get; } Property Value SvgAnimationLayer"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.AppTitle.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.AppTitle.html",
    "title": "Property AppTitle | SharpVectors Documentation",
    "keywords": "Property AppTitle Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll AppTitle Gets or sets the application title, which is used to display the alert and error messages not handled by the user. public string AppTitle { get; set; } Property Value string A string containg the application title. This cannot be null or empty. The default is SharpVectors."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.Bounds.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.Bounds.html",
    "title": "Property Bounds | SharpVectors Documentation",
    "keywords": "Property Bounds Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Bounds public Rect Bounds { get; } Property Value Rect"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.DesignMode.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.DesignMode.html",
    "title": "Property DesignMode | SharpVectors Documentation",
    "keywords": "Property DesignMode Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DesignMode Gets a value specifying whether the viewer control is in design-mode. public bool DesignMode { get; } Property Value bool This is true if the viewer control is in design-mode, otherwise; it is false."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.DisplayOffset.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.DisplayOffset.html",
    "title": "Property DisplayOffset | SharpVectors Documentation",
    "keywords": "Property DisplayOffset Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DisplayOffset public Point DisplayOffset { get; } Property Value Point"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.DisplayTransform.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.DisplayTransform.html",
    "title": "Property DisplayTransform | SharpVectors Documentation",
    "keywords": "Property DisplayTransform Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DisplayTransform public Transform DisplayTransform { get; } Property Value Transform"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.DrawObjects.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.DrawObjects.html",
    "title": "Property DrawObjects | SharpVectors Documentation",
    "keywords": "Property DrawObjects Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll DrawObjects public IList<Drawing> DrawObjects { get; } Property Value IList<Drawing>"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.Error.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.Error.html",
    "title": "Event Error | SharpVectors Documentation",
    "keywords": "Event Error Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public event EventHandler<SvgErrorArgs> Error Returns EventHandler<SvgErrorArgs>"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.GetVisualChild.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.GetVisualChild.html",
    "title": "Method GetVisualChild | SharpVectors Documentation",
    "keywords": "Method GetVisualChild Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetVisualChild(int) Gets a Visual child of this Panel at the specified index position. protected override Visual GetVisualChild(int index) Parameters index int The index position of the Visual child. Returns Visual A Visual child of the parent Panel element."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.HostVisual.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.HostVisual.html",
    "title": "Property HostVisual | SharpVectors Documentation",
    "keywords": "Property HostVisual Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll HostVisual public DrawingVisual HostVisual { get; } Property Value DrawingVisual"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.InteractiveMode.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.InteractiveMode.html",
    "title": "Property InteractiveMode | SharpVectors Documentation",
    "keywords": "Property InteractiveMode Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll InteractiveMode Gets or sets a value specifying the interactive mode, which controls the level of information attached to the generated drawing. public SvgInteractiveModes InteractiveMode { get; set; } Property Value SvgInteractiveModes An enumeration of the type SvgInteractiveModes specifying the interactive mode. The default is None; no interactivity and may change in the future."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.LinkObjects.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.LinkObjects.html",
    "title": "Property LinkObjects | SharpVectors Documentation",
    "keywords": "Property LinkObjects Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll LinkObjects public IList<Drawing> LinkObjects { get; } Property Value IList<Drawing>"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.LoadDiagrams.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.LoadDiagrams.html",
    "title": "Method LoadDiagrams | SharpVectors Documentation",
    "keywords": "Method LoadDiagrams Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll LoadDiagrams(string) public void LoadDiagrams(string fileName) Parameters fileName string LoadDiagrams(DrawingGroup, DrawingGroup, DrawingGroup) public void LoadDiagrams(DrawingGroup whole, DrawingGroup links, DrawingGroup main) Parameters whole DrawingGroup links DrawingGroup main DrawingGroup"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.MeasureOverride.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.MeasureOverride.html",
    "title": "Method MeasureOverride | SharpVectors Documentation",
    "keywords": "Method MeasureOverride Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MeasureOverride(Size) Measures the child elements of a Canvas in anticipation of arranging them during the ArrangeOverride(Size) pass. protected override Size MeasureOverride(Size constraint) Parameters constraint Size An upper limit Size that should not be exceeded. Returns Size A Size that represents the size that is required to arrange child content."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.OnHandleAlert.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.OnHandleAlert.html",
    "title": "Method OnHandleAlert | SharpVectors Documentation",
    "keywords": "Method OnHandleAlert Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll OnHandleAlert(string) protected virtual void OnHandleAlert(string message) Parameters message string"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.OnHandleError.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.OnHandleError.html",
    "title": "Method OnHandleError | SharpVectors Documentation",
    "keywords": "Method OnHandleError Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll OnHandleError(string, Exception) protected virtual void OnHandleError(string message, Exception exception) Parameters message string exception Exception"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.OnMouseDown.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.OnMouseDown.html",
    "title": "Method OnMouseDown | SharpVectors Documentation",
    "keywords": "Method OnMouseDown Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll OnMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. protected override void OnMouseDown(MouseButtonEventArgs e) Parameters e MouseButtonEventArgs The MouseButtonEventArgs that contains the event data. This event data reports details about the mouse button that was pressed and the handled state."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.OnMouseLeave.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.OnMouseLeave.html",
    "title": "Method OnMouseLeave | SharpVectors Documentation",
    "keywords": "Method OnMouseLeave Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll OnMouseLeave(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseLeave attached event is raised on this element. Implement this method to add class handling for this event. protected override void OnMouseLeave(MouseEventArgs e) Parameters e MouseEventArgs The MouseEventArgs that contains the event data."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.OnMouseMove.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.OnMouseMove.html",
    "title": "Method OnMouseMove | SharpVectors Documentation",
    "keywords": "Method OnMouseMove Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll OnMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. protected override void OnMouseMove(MouseEventArgs e) Parameters e MouseEventArgs The MouseEventArgs that contains the event data."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.OnMouseUp.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.OnMouseUp.html",
    "title": "Method OnMouseUp | SharpVectors Documentation",
    "keywords": "Method OnMouseUp Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll OnMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. protected override void OnMouseUp(MouseButtonEventArgs e) Parameters e MouseButtonEventArgs The MouseButtonEventArgs that contains the event data. The event data reports that the mouse button was released."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.RenderDiagrams.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.RenderDiagrams.html",
    "title": "Method RenderDiagrams | SharpVectors Documentation",
    "keywords": "Method RenderDiagrams Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll RenderDiagrams(SvgImageNameScope) public void RenderDiagrams(SvgImageNameScope image) Parameters image SvgImageNameScope RenderDiagrams(DrawingGroup) public void RenderDiagrams(DrawingGroup renderedGroup) Parameters renderedGroup DrawingGroup"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.UnloadDiagrams.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.UnloadDiagrams.html",
    "title": "Method UnloadDiagrams | SharpVectors Documentation",
    "keywords": "Method UnloadDiagrams Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll UnloadDiagrams() public void UnloadDiagrams()"
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.VisualChildrenCount.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.VisualChildrenCount.html",
    "title": "Property VisualChildrenCount | SharpVectors Documentation",
    "keywords": "Property VisualChildrenCount Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll VisualChildrenCount Gets the number of child Visual objects in this instance of Panel. protected override int VisualChildrenCount { get; } Property Value int The number of child Visual objects."
  },
  "api/SharpVectors.Runtime.SvgDrawingCanvas.html": {
    "href": "api/SharpVectors.Runtime.SvgDrawingCanvas.html",
    "title": "Class SvgDrawingCanvas | SharpVectors Documentation",
    "keywords": "Class SvgDrawingCanvas Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll This is the main drawing canvas for the rendered SVG diagrams. public class SvgDrawingCanvas : Canvas, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Panel Canvas SvgDrawingCanvas Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild Derived SvgCanvas Inherited Members Canvas.LeftProperty Canvas.TopProperty Canvas.RightProperty Canvas.BottomProperty Canvas.GetLeft(UIElement) Canvas.SetLeft(UIElement, double) Canvas.GetTop(UIElement) Canvas.SetTop(UIElement, double) Canvas.GetRight(UIElement) Canvas.SetRight(UIElement, double) Canvas.GetBottom(UIElement) Canvas.SetBottom(UIElement, double) Canvas.ArrangeOverride(Size) Canvas.GetLayoutClip(Size) Panel.BackgroundProperty Panel.IsItemsHostProperty Panel.ZIndexProperty Panel.OnRender(DrawingContext) Panel.OnIsItemsHostChanged(bool, bool) Panel.CreateUIElementCollection(FrameworkElement) Panel.OnVisualChildrenChanged(DependencyObject, DependencyObject) Panel.SetZIndex(UIElement, int) Panel.GetZIndex(UIElement) Panel.Background Panel.LogicalChildren Panel.Children Panel.IsItemsHost Panel.LogicalOrientation Panel.HasLogicalOrientation Panel.InternalChildren FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors SvgDrawingCanvas() Properties AnimationCanvas AppTitle Gets or sets the application title, which is used to display the alert and error messages not handled by the user. Bounds DesignMode Gets a value specifying whether the viewer control is in design-mode. DisplayOffset DisplayTransform DrawObjects HostVisual InteractiveMode Gets or sets a value specifying the interactive mode, which controls the level of information attached to the generated drawing. LinkObjects VisualChildrenCount Gets the number of child Visual objects in this instance of Panel. Methods GetVisualChild(int) Gets a Visual child of this Panel at the specified index position. LoadDiagrams(string) LoadDiagrams(DrawingGroup, DrawingGroup, DrawingGroup) MeasureOverride(Size) Measures the child elements of a Canvas in anticipation of arranging them during the ArrangeOverride(Size) pass. OnHandleAlert(string) OnHandleError(string, Exception) OnMouseDown(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. OnMouseLeave(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseLeave attached event is raised on this element. Implement this method to add class handling for this event. OnMouseMove(MouseEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseMove attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. OnMouseUp(MouseButtonEventArgs) Invoked when an unhandled System.Windows.Input.Mouse.MouseUp routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. RenderDiagrams(SvgImageNameScope) RenderDiagrams(DrawingGroup) UnloadDiagrams() Events Alert Error"
  },
  "api/SharpVectors.Runtime.SvgErrorArgs.-ctor.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorArgs.-ctor.html",
    "title": "Constructor SvgErrorArgs | SharpVectors Documentation",
    "keywords": "Constructor SvgErrorArgs Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SvgErrorArgs(string) public SvgErrorArgs(string message) Parameters message string SvgErrorArgs(Exception) public SvgErrorArgs(Exception exception) Parameters exception Exception SvgErrorArgs(string, Exception) public SvgErrorArgs(string message, Exception exception) Parameters message string exception Exception"
  },
  "api/SharpVectors.Runtime.SvgErrorArgs.Exception.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorArgs.Exception.html",
    "title": "Property Exception | SharpVectors Documentation",
    "keywords": "Property Exception Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Exception public Exception Exception { get; } Property Value Exception"
  },
  "api/SharpVectors.Runtime.SvgErrorArgs.Handled.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorArgs.Handled.html",
    "title": "Property Handled | SharpVectors Documentation",
    "keywords": "Property Handled Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Handled public bool Handled { get; set; } Property Value bool"
  },
  "api/SharpVectors.Runtime.SvgErrorArgs.IsException.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorArgs.IsException.html",
    "title": "Property IsException | SharpVectors Documentation",
    "keywords": "Property IsException Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll IsException public bool IsException { get; } Property Value bool"
  },
  "api/SharpVectors.Runtime.SvgErrorArgs.Message.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorArgs.Message.html",
    "title": "Property Message | SharpVectors Documentation",
    "keywords": "Property Message Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Message public string Message { get; } Property Value string"
  },
  "api/SharpVectors.Runtime.SvgErrorArgs.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorArgs.html",
    "title": "Class SvgErrorArgs | SharpVectors Documentation",
    "keywords": "Class SvgErrorArgs Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public sealed class SvgErrorArgs : EventArgs Inheritance object EventArgs SvgErrorArgs Inherited Members EventArgs.Empty object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgErrorArgs(Exception) SvgErrorArgs(string) SvgErrorArgs(string, Exception) Properties Exception Handled IsException Message"
  },
  "api/SharpVectors.Runtime.SvgErrorException.-ctor.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorException.-ctor.html",
    "title": "Constructor SvgErrorException | SharpVectors Documentation",
    "keywords": "Constructor SvgErrorException Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SvgErrorException(string) public SvgErrorException(string msg) Parameters msg string SvgErrorException(string, Exception) public SvgErrorException(string msg, Exception innerException) Parameters msg string innerException Exception SvgErrorException(SvgErrorArgs) public SvgErrorException(SvgErrorArgs errorArgs) Parameters errorArgs SvgErrorArgs SvgErrorException(SerializationInfo, StreamingContext) protected SvgErrorException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext"
  },
  "api/SharpVectors.Runtime.SvgErrorException.html": {
    "href": "api/SharpVectors.Runtime.SvgErrorException.html",
    "title": "Class SvgErrorException | SharpVectors Documentation",
    "keywords": "Class SvgErrorException Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll [Serializable] public class SvgErrorException : Exception, ISerializable, _Exception Inheritance object Exception SvgErrorException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors SvgErrorException(SvgErrorArgs) SvgErrorException(SerializationInfo, StreamingContext) SvgErrorException(string) SvgErrorException(string, Exception)"
  },
  "api/SharpVectors.Runtime.SvgFontUriExtension.-ctor.html": {
    "href": "api/SharpVectors.Runtime.SvgFontUriExtension.-ctor.html",
    "title": "Constructor SvgFontUriExtension | SharpVectors Documentation",
    "keywords": "Constructor SvgFontUriExtension Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SvgFontUriExtension(string) public SvgFontUriExtension(string inputUri) Parameters inputUri string"
  },
  "api/SharpVectors.Runtime.SvgFontUriExtension.ProvideValue.html": {
    "href": "api/SharpVectors.Runtime.SvgFontUriExtension.ProvideValue.html",
    "title": "Method ProvideValue | SharpVectors Documentation",
    "keywords": "Method ProvideValue Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ProvideValue(IServiceProvider) When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension. public override object ProvideValue(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider A service provider helper that can provide services for the markup extension. Returns object The object value to set on the property where the extension is applied."
  },
  "api/SharpVectors.Runtime.SvgFontUriExtension.html": {
    "href": "api/SharpVectors.Runtime.SvgFontUriExtension.html",
    "title": "Class SvgFontUriExtension | SharpVectors Documentation",
    "keywords": "Class SvgFontUriExtension Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public sealed class SvgFontUriExtension : MarkupExtension Inheritance object MarkupExtension SvgFontUriExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SvgFontUriExtension(string) Methods ProvideValue(IServiceProvider) When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension."
  },
  "api/SharpVectors.Runtime.SvgImageNameScope.-ctor.html": {
    "href": "api/SharpVectors.Runtime.SvgImageNameScope.-ctor.html",
    "title": "Constructor SvgImageNameScope | SharpVectors Documentation",
    "keywords": "Constructor SvgImageNameScope Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SvgImageNameScope() public SvgImageNameScope()"
  },
  "api/SharpVectors.Runtime.SvgImageNameScope.html": {
    "href": "api/SharpVectors.Runtime.SvgImageNameScope.html",
    "title": "Class SvgImageNameScope | SharpVectors Documentation",
    "keywords": "Class SvgImageNameScope Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll This class, if placed at the root of a XAML file which is loaded by XamlReader.Load() will end up having all named elements contained in its nameTable automatically. If you want to get that list, it is now in your power. public sealed class SvgImageNameScope : Image, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IUriContext, INameScope Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Image SvgImageNameScope Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IUriContext INameScope Inherited Members Image.SourceProperty Image.StretchProperty Image.StretchDirectionProperty Image.ImageFailedEvent Image.Source Image.Stretch Image.StretchDirection Image.ImageFailed FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.Resources FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Remarks This class is based on the discussion, which can be found here http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/5c226430-c54d-45b8-a8a2-7e4a79e3692a Constructors SvgImageNameScope()"
  },
  "api/SharpVectors.Runtime.SvgInteractiveModes.html": {
    "href": "api/SharpVectors.Runtime.SvgInteractiveModes.html",
    "title": "Enum SvgInteractiveModes | SharpVectors Documentation",
    "keywords": "Enum SvgInteractiveModes Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll A value specifying the type of interactivity to be supported by the conversion process and controls. In the conversion process, more information are added to make the interactivity defined possible, and might be unnecessary overhead where no interactivity is needed. In the rendering process at the control level, keyboard and mouse operations are monitored to support interactivities. public enum SvgInteractiveModes Fields None = 0 A value specifying no interactivity. Standard = 1 A value specifying the default or standard interactivity per the SVG specifications. Advanced = 2 A value specifying extra or custom interactivity features."
  },
  "api/SharpVectors.Runtime.SvgLink.ActionProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.ActionProperty.html",
    "title": "Field ActionProperty | SharpVectors Documentation",
    "keywords": "Field ActionProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ActionProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgLink.ColorProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.ColorProperty.html",
    "title": "Field ColorProperty | SharpVectors Documentation",
    "keywords": "Field ColorProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ColorProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgLink.GetAction.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.GetAction.html",
    "title": "Method GetAction | SharpVectors Documentation",
    "keywords": "Method GetAction Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetAction(DependencyObject) public static SvgLinkAction GetAction(DependencyObject element) Parameters element DependencyObject Returns SvgLinkAction"
  },
  "api/SharpVectors.Runtime.SvgLink.GetColor.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.GetColor.html",
    "title": "Method GetColor | SharpVectors Documentation",
    "keywords": "Method GetColor Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetColor(DependencyObject) public static string GetColor(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgLink.GetKey.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.GetKey.html",
    "title": "Method GetKey | SharpVectors Documentation",
    "keywords": "Method GetKey Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetKey(DependencyObject) public static string GetKey(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgLink.GetLineId.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.GetLineId.html",
    "title": "Method GetLineId | SharpVectors Documentation",
    "keywords": "Method GetLineId Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetLineId(DependencyObject) public static string GetLineId(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgLink.GetLocation.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.GetLocation.html",
    "title": "Method GetLocation | SharpVectors Documentation",
    "keywords": "Method GetLocation Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetLocation(DependencyObject) public static string GetLocation(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgLink.GetNumber.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.GetNumber.html",
    "title": "Method GetNumber | SharpVectors Documentation",
    "keywords": "Method GetNumber Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetNumber(DependencyObject) public static string GetNumber(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgLink.GetPartsId.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.GetPartsId.html",
    "title": "Method GetPartsId | SharpVectors Documentation",
    "keywords": "Method GetPartsId Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetPartsId(DependencyObject) public static string GetPartsId(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgLink.GetPin.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.GetPin.html",
    "title": "Method GetPin | SharpVectors Documentation",
    "keywords": "Method GetPin Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetPin(DependencyObject) public static string GetPin(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgLink.GetType.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.GetType.html",
    "title": "Method GetType | SharpVectors Documentation",
    "keywords": "Method GetType Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetType(DependencyObject) public static string GetType(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgLink.KeyProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.KeyProperty.html",
    "title": "Field KeyProperty | SharpVectors Documentation",
    "keywords": "Field KeyProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty KeyProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgLink.LineIdProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.LineIdProperty.html",
    "title": "Field LineIdProperty | SharpVectors Documentation",
    "keywords": "Field LineIdProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty LineIdProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgLink.LocationProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.LocationProperty.html",
    "title": "Field LocationProperty | SharpVectors Documentation",
    "keywords": "Field LocationProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty LocationProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgLink.NumberProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.NumberProperty.html",
    "title": "Field NumberProperty | SharpVectors Documentation",
    "keywords": "Field NumberProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty NumberProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgLink.PartsIdProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.PartsIdProperty.html",
    "title": "Field PartsIdProperty | SharpVectors Documentation",
    "keywords": "Field PartsIdProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty PartsIdProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgLink.PinProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.PinProperty.html",
    "title": "Field PinProperty | SharpVectors Documentation",
    "keywords": "Field PinProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty PinProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgLink.SetAction.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.SetAction.html",
    "title": "Method SetAction | SharpVectors Documentation",
    "keywords": "Method SetAction Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetAction(DependencyObject, SvgLinkAction) public static void SetAction(DependencyObject element, SvgLinkAction value) Parameters element DependencyObject value SvgLinkAction"
  },
  "api/SharpVectors.Runtime.SvgLink.SetColor.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.SetColor.html",
    "title": "Method SetColor | SharpVectors Documentation",
    "keywords": "Method SetColor Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetColor(DependencyObject, string) public static void SetColor(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgLink.SetKey.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.SetKey.html",
    "title": "Method SetKey | SharpVectors Documentation",
    "keywords": "Method SetKey Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetKey(DependencyObject, string) public static void SetKey(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgLink.SetLineId.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.SetLineId.html",
    "title": "Method SetLineId | SharpVectors Documentation",
    "keywords": "Method SetLineId Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetLineId(DependencyObject, string) public static void SetLineId(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgLink.SetLocation.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.SetLocation.html",
    "title": "Method SetLocation | SharpVectors Documentation",
    "keywords": "Method SetLocation Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetLocation(DependencyObject, string) public static void SetLocation(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgLink.SetNumber.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.SetNumber.html",
    "title": "Method SetNumber | SharpVectors Documentation",
    "keywords": "Method SetNumber Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetNumber(DependencyObject, string) public static void SetNumber(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgLink.SetPartsId.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.SetPartsId.html",
    "title": "Method SetPartsId | SharpVectors Documentation",
    "keywords": "Method SetPartsId Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetPartsId(DependencyObject, string) public static void SetPartsId(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgLink.SetPin.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.SetPin.html",
    "title": "Method SetPin | SharpVectors Documentation",
    "keywords": "Method SetPin Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetPin(DependencyObject, string) public static void SetPin(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgLink.SetType.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.SetType.html",
    "title": "Method SetType | SharpVectors Documentation",
    "keywords": "Method SetType Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetType(DependencyObject, string) public static void SetType(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgLink.TypeProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.TypeProperty.html",
    "title": "Field TypeProperty | SharpVectors Documentation",
    "keywords": "Field TypeProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty TypeProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgLink.html": {
    "href": "api/SharpVectors.Runtime.SvgLink.html",
    "title": "Class SvgLink | SharpVectors Documentation",
    "keywords": "Class SvgLink Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public sealed class SvgLink : DependencyObject Inheritance object DispatcherObject DependencyObject SvgLink Inherited Members DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields ActionProperty ColorProperty KeyProperty LineIdProperty LocationProperty NumberProperty PartsIdProperty PinProperty TypeProperty Methods GetAction(DependencyObject) GetColor(DependencyObject) GetKey(DependencyObject) GetLineId(DependencyObject) GetLocation(DependencyObject) GetNumber(DependencyObject) GetPartsId(DependencyObject) GetPin(DependencyObject) GetType(DependencyObject) SetAction(DependencyObject, SvgLinkAction) SetColor(DependencyObject, string) SetKey(DependencyObject, string) SetLineId(DependencyObject, string) SetLocation(DependencyObject, string) SetNumber(DependencyObject, string) SetPartsId(DependencyObject, string) SetPin(DependencyObject, string) SetType(DependencyObject, string)"
  },
  "api/SharpVectors.Runtime.SvgLinkAction.html": {
    "href": "api/SharpVectors.Runtime.SvgLinkAction.html",
    "title": "Enum SvgLinkAction | SharpVectors Documentation",
    "keywords": "Enum SvgLinkAction Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public enum SvgLinkAction Fields LinkNone = 0 LinkPage = 1 LinkHtml = 2 LinkTooltip = 3"
  },
  "api/SharpVectors.Runtime.SvgObject.ClassProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.ClassProperty.html",
    "title": "Field ClassProperty | SharpVectors Documentation",
    "keywords": "Field ClassProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ClassProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgObject.DrawLayer.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.DrawLayer.html",
    "title": "Field DrawLayer | SharpVectors Documentation",
    "keywords": "Field DrawLayer Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public const string DrawLayer = \"_SvgDrawingLayer\" Returns string"
  },
  "api/SharpVectors.Runtime.SvgObject.GetClass.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.GetClass.html",
    "title": "Method GetClass | SharpVectors Documentation",
    "keywords": "Method GetClass Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetClass(DependencyObject) public static string GetClass(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgObject.GetId.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.GetId.html",
    "title": "Method GetId | SharpVectors Documentation",
    "keywords": "Method GetId Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetId(DependencyObject) public static string GetId(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgObject.GetName.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.GetName.html",
    "title": "Method GetName | SharpVectors Documentation",
    "keywords": "Method GetName Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetName(DependencyObject) public static string GetName(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgObject.GetOrder.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.GetOrder.html",
    "title": "Method GetOrder | SharpVectors Documentation",
    "keywords": "Method GetOrder Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetOrder(DependencyObject) public static int GetOrder(DependencyObject element) Parameters element DependencyObject Returns int"
  },
  "api/SharpVectors.Runtime.SvgObject.GetTitle.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.GetTitle.html",
    "title": "Method GetTitle | SharpVectors Documentation",
    "keywords": "Method GetTitle Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetTitle(DependencyObject) public static string GetTitle(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgObject.GetType.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.GetType.html",
    "title": "Method GetType | SharpVectors Documentation",
    "keywords": "Method GetType Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetType(DependencyObject) public static SvgObjectType GetType(DependencyObject element) Parameters element DependencyObject Returns SvgObjectType"
  },
  "api/SharpVectors.Runtime.SvgObject.GetUniqueId.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.GetUniqueId.html",
    "title": "Method GetUniqueId | SharpVectors Documentation",
    "keywords": "Method GetUniqueId Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll GetUniqueId(DependencyObject) public static string GetUniqueId(DependencyObject element) Parameters element DependencyObject Returns string"
  },
  "api/SharpVectors.Runtime.SvgObject.IdProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.IdProperty.html",
    "title": "Field IdProperty | SharpVectors Documentation",
    "keywords": "Field IdProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty IdProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgObject.IsEqual.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.IsEqual.html",
    "title": "Method IsEqual | SharpVectors Documentation",
    "keywords": "Method IsEqual Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll IsEqual(double, double) public static bool IsEqual(double value1, double value2) Parameters value1 double value2 double Returns bool"
  },
  "api/SharpVectors.Runtime.SvgObject.IsValid.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.IsValid.html",
    "title": "Method IsValid | SharpVectors Documentation",
    "keywords": "Method IsValid Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll IsValid(double) public static bool IsValid(double value) Parameters value double Returns bool IsValid(float) public static bool IsValid(float value) Parameters value float Returns bool"
  },
  "api/SharpVectors.Runtime.SvgObject.LinksLayer.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.LinksLayer.html",
    "title": "Field LinksLayer | SharpVectors Documentation",
    "keywords": "Field LinksLayer Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public const string LinksLayer = \"_SvgAnimationLayer\" Returns string"
  },
  "api/SharpVectors.Runtime.SvgObject.OrderProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.OrderProperty.html",
    "title": "Field OrderProperty | SharpVectors Documentation",
    "keywords": "Field OrderProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty OrderProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgObject.RemoveWhitespace.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.RemoveWhitespace.html",
    "title": "Method RemoveWhitespace | SharpVectors Documentation",
    "keywords": "Method RemoveWhitespace Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll RemoveWhitespace(string) public static string RemoveWhitespace(string str) Parameters str string Returns string"
  },
  "api/SharpVectors.Runtime.SvgObject.SetClass.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.SetClass.html",
    "title": "Method SetClass | SharpVectors Documentation",
    "keywords": "Method SetClass Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetClass(DependencyObject, string) public static void SetClass(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgObject.SetId.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.SetId.html",
    "title": "Method SetId | SharpVectors Documentation",
    "keywords": "Method SetId Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetId(DependencyObject, string) public static void SetId(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgObject.SetName.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.SetName.html",
    "title": "Method SetName | SharpVectors Documentation",
    "keywords": "Method SetName Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetName(DependencyObject, string) public static void SetName(DependencyObject element, string name) Parameters element DependencyObject name string SetName(DrawingGroup, string) public static void SetName(DrawingGroup element, string name) Parameters element DrawingGroup name string"
  },
  "api/SharpVectors.Runtime.SvgObject.SetOrder.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.SetOrder.html",
    "title": "Method SetOrder | SharpVectors Documentation",
    "keywords": "Method SetOrder Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetOrder(DependencyObject, int) public static void SetOrder(DependencyObject element, int value) Parameters element DependencyObject value int"
  },
  "api/SharpVectors.Runtime.SvgObject.SetTitle.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.SetTitle.html",
    "title": "Method SetTitle | SharpVectors Documentation",
    "keywords": "Method SetTitle Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetTitle(DependencyObject, string) public static void SetTitle(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgObject.SetType.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.SetType.html",
    "title": "Method SetType | SharpVectors Documentation",
    "keywords": "Method SetType Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetType(DependencyObject, SvgObjectType) public static void SetType(DependencyObject element, SvgObjectType value) Parameters element DependencyObject value SvgObjectType"
  },
  "api/SharpVectors.Runtime.SvgObject.SetUniqueId.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.SetUniqueId.html",
    "title": "Method SetUniqueId | SharpVectors Documentation",
    "keywords": "Method SetUniqueId Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetUniqueId(DependencyObject, string) public static void SetUniqueId(DependencyObject element, string value) Parameters element DependencyObject value string"
  },
  "api/SharpVectors.Runtime.SvgObject.TitleProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.TitleProperty.html",
    "title": "Field TitleProperty | SharpVectors Documentation",
    "keywords": "Field TitleProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty TitleProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgObject.TypeProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.TypeProperty.html",
    "title": "Field TypeProperty | SharpVectors Documentation",
    "keywords": "Field TypeProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty TypeProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgObject.UniqueIdProperty.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.UniqueIdProperty.html",
    "title": "Field UniqueIdProperty | SharpVectors Documentation",
    "keywords": "Field UniqueIdProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty UniqueIdProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.SvgObject.html": {
    "href": "api/SharpVectors.Runtime.SvgObject.html",
    "title": "Class SvgObject | SharpVectors Documentation",
    "keywords": "Class SvgObject Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static class SvgObject Inheritance object SvgObject Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields ClassProperty DrawLayer IdProperty LinksLayer OrderProperty TitleProperty TypeProperty UniqueIdProperty Methods GetClass(DependencyObject) GetId(DependencyObject) GetName(DependencyObject) GetOrder(DependencyObject) GetTitle(DependencyObject) GetType(DependencyObject) GetUniqueId(DependencyObject) IsEqual(double, double) IsValid(double) IsValid(float) RemoveWhitespace(string) SetClass(DependencyObject, string) SetId(DependencyObject, string) SetName(DependencyObject, string) SetName(DrawingGroup, string) SetOrder(DependencyObject, int) SetTitle(DependencyObject, string) SetType(DependencyObject, SvgObjectType) SetUniqueId(DependencyObject, string)"
  },
  "api/SharpVectors.Runtime.SvgObjectType.html": {
    "href": "api/SharpVectors.Runtime.SvgObjectType.html",
    "title": "Enum SvgObjectType | SharpVectors Documentation",
    "keywords": "Enum SvgObjectType Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public enum SvgObjectType Fields None = 0 Link = 1 Text = 2 Circle = 3 Ellipse = 4 Rect = 5 Polyline = 6 Polygon = 7 Marker = 8 Path = 9 Image = 10 Group = 11"
  },
  "api/SharpVectors.Runtime.ZoomPanAnimationHelper.CancelAnimation.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanAnimationHelper.CancelAnimation.html",
    "title": "Method CancelAnimation | SharpVectors Documentation",
    "keywords": "Method CancelAnimation Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CancelAnimation(UIElement, DependencyProperty) Cancel any animations that are running on the specified dependency property. public static void CancelAnimation(UIElement animatableElement, DependencyProperty dependencyProperty) Parameters animatableElement UIElement dependencyProperty DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanAnimationHelper.StartAnimation.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanAnimationHelper.StartAnimation.html",
    "title": "Method StartAnimation | SharpVectors Documentation",
    "keywords": "Method StartAnimation Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll StartAnimation(UIElement, DependencyProperty, double, double, bool) Starts an animation to a particular value on the specified dependency property. public static void StartAnimation(UIElement animatableElement, DependencyProperty dependencyProperty, double toValue, double animationDurationSeconds, bool useAnimations) Parameters animatableElement UIElement dependencyProperty DependencyProperty toValue double animationDurationSeconds double useAnimations bool StartAnimation(UIElement, DependencyProperty, double, double, EventHandler, bool) Starts an animation to a particular value on the specified dependency property. You can pass in an event handler to call when the animation has completed. public static void StartAnimation(UIElement animatableElement, DependencyProperty dependencyProperty, double toValue, double animationDurationSeconds, EventHandler completedEvent, bool useAnimations) Parameters animatableElement UIElement dependencyProperty DependencyProperty toValue double animationDurationSeconds double completedEvent EventHandler useAnimations bool StartAnimation(UIElement, DependencyProperty, double, double) Starts an animation to a particular value on the specified dependency property. public static void StartAnimation(UIElement animatableElement, DependencyProperty dependencyProperty, double toValue, double animationDurationSeconds) Parameters animatableElement UIElement dependencyProperty DependencyProperty toValue double animationDurationSeconds double StartAnimation(UIElement, DependencyProperty, double, double, EventHandler) Starts an animation to a particular value on the specified dependency property. You can pass in an event handler to call when the animation has completed. public static void StartAnimation(UIElement animatableElement, DependencyProperty dependencyProperty, double toValue, double animationDurationSeconds, EventHandler completedEvent) Parameters animatableElement UIElement dependencyProperty DependencyProperty toValue double animationDurationSeconds double completedEvent EventHandler"
  },
  "api/SharpVectors.Runtime.ZoomPanAnimationHelper.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanAnimationHelper.html",
    "title": "Class ZoomPanAnimationHelper | SharpVectors Documentation",
    "keywords": "Class ZoomPanAnimationHelper Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll A helper class to simplify animation. public static class ZoomPanAnimationHelper Inheritance object ZoomPanAnimationHelper Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CancelAnimation(UIElement, DependencyProperty) Cancel any animations that are running on the specified dependency property. StartAnimation(UIElement, DependencyProperty, double, double) Starts an animation to a particular value on the specified dependency property. StartAnimation(UIElement, DependencyProperty, double, double, bool) Starts an animation to a particular value on the specified dependency property. StartAnimation(UIElement, DependencyProperty, double, double, EventHandler) Starts an animation to a particular value on the specified dependency property. You can pass in an event handler to call when the animation has completed. StartAnimation(UIElement, DependencyProperty, double, double, EventHandler, bool) Starts an animation to a particular value on the specified dependency property. You can pass in an event handler to call when the animation has completed."
  },
  "api/SharpVectors.Runtime.ZoomPanControl.-ctor.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.-ctor.html",
    "title": "Constructor ZoomPanControl | SharpVectors Documentation",
    "keywords": "Constructor ZoomPanControl Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ZoomPanControl() public ZoomPanControl()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.AnimatedScaleToFit.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.AnimatedScaleToFit.html",
    "title": "Method AnimatedScaleToFit | SharpVectors Documentation",
    "keywords": "Method AnimatedScaleToFit Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll AnimatedScaleToFit() Do animation that scales the content so that it fits completely in the control. public void AnimatedScaleToFit()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.AnimatedSnapTo.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.AnimatedSnapTo.html",
    "title": "Method AnimatedSnapTo | SharpVectors Documentation",
    "keywords": "Method AnimatedSnapTo Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll AnimatedSnapTo(Point) Use animation to center the view on the specified point (in content coordinates). public void AnimatedSnapTo(Point contentPoint) Parameters contentPoint Point"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.AnimatedZoomAboutPoint.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.AnimatedZoomAboutPoint.html",
    "title": "Method AnimatedZoomAboutPoint | SharpVectors Documentation",
    "keywords": "Method AnimatedZoomAboutPoint Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll AnimatedZoomAboutPoint(double, Point) Zoom in/out centered on the specified point (in content coordinates). The focus point is kept locked to it's on screen position (ala google maps). public void AnimatedZoomAboutPoint(double newContentScale, Point contentZoomFocus) Parameters newContentScale double contentZoomFocus Point"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.AnimatedZoomTo.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.AnimatedZoomTo.html",
    "title": "Method AnimatedZoomTo | SharpVectors Documentation",
    "keywords": "Method AnimatedZoomTo Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll AnimatedZoomTo(double, Rect) Do an animated zoom to view a specific scale and rectangle (in content coordinates). public void AnimatedZoomTo(double newScale, Rect contentRect) Parameters newScale double contentRect Rect AnimatedZoomTo(Rect) Do an animated zoom to the specified rectangle (in content coordinates). public void AnimatedZoomTo(Rect contentRect) Parameters contentRect Rect AnimatedZoomTo(double) Zoom in/out centered on the viewport center. public void AnimatedZoomTo(double contentScale) Parameters contentScale double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.AnimationDuration.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.AnimationDuration.html",
    "title": "Property AnimationDuration | SharpVectors Documentation",
    "keywords": "Property AnimationDuration Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll AnimationDuration The duration of the animations (in seconds) started by calling AnimatedZoomTo and the other animation methods. public double AnimationDuration { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.AnimationDurationProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.AnimationDurationProperty.html",
    "title": "Field AnimationDurationProperty | SharpVectors Documentation",
    "keywords": "Field AnimationDurationProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty AnimationDurationProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ArrangeOverride.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ArrangeOverride.html",
    "title": "Method ArrangeOverride | SharpVectors Documentation",
    "keywords": "Method ArrangeOverride Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ArrangeOverride(Size) Arrange the control and it's children. protected override Size ArrangeOverride(Size arrangeBounds) Parameters arrangeBounds Size Returns Size"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.CanHorizontallyScroll.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.CanHorizontallyScroll.html",
    "title": "Property CanHorizontallyScroll | SharpVectors Documentation",
    "keywords": "Property CanHorizontallyScroll Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CanHorizontallyScroll Set to 'true' when the vertical scrollbar is enabled. public bool CanHorizontallyScroll { get; set; } Property Value bool"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.CanVerticallyScroll.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.CanVerticallyScroll.html",
    "title": "Property CanVerticallyScroll | SharpVectors Documentation",
    "keywords": "Property CanVerticallyScroll Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll CanVerticallyScroll Set to 'true' when the vertical scrollbar is enabled. public bool CanVerticallyScroll { get; set; } Property Value bool"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentElement.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentElement.html",
    "title": "Property ContentElement | SharpVectors Documentation",
    "keywords": "Property ContentElement Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ContentElement public FrameworkElement ContentElement { get; } Property Value FrameworkElement"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetX.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetX.html",
    "title": "Property ContentOffsetX | SharpVectors Documentation",
    "keywords": "Property ContentOffsetX Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ContentOffsetX Get/set the X offset (in content coordinates) of the view on the content. public double ContentOffsetX { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetXChanged.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetXChanged.html",
    "title": "Event ContentOffsetXChanged | SharpVectors Documentation",
    "keywords": "Event ContentOffsetXChanged Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Event raised when the ContentOffsetX property has changed. public event EventHandler ContentOffsetXChanged Returns EventHandler"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetXProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetXProperty.html",
    "title": "Field ContentOffsetXProperty | SharpVectors Documentation",
    "keywords": "Field ContentOffsetXProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ContentOffsetXProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetY.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetY.html",
    "title": "Property ContentOffsetY | SharpVectors Documentation",
    "keywords": "Property ContentOffsetY Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ContentOffsetY Get/set the Y offset (in content coordinates) of the view on the content. public double ContentOffsetY { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetYChanged.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetYChanged.html",
    "title": "Event ContentOffsetYChanged | SharpVectors Documentation",
    "keywords": "Event ContentOffsetYChanged Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Event raised when the ContentOffsetY property has changed. public event EventHandler ContentOffsetYChanged Returns EventHandler"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetYProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentOffsetYProperty.html",
    "title": "Field ContentOffsetYProperty | SharpVectors Documentation",
    "keywords": "Field ContentOffsetYProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ContentOffsetYProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentScale.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentScale.html",
    "title": "Property ContentScale | SharpVectors Documentation",
    "keywords": "Property ContentScale Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ContentScale Get/set the current scale (or zoom factor) of the content. public double ContentScale { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentScaleChanged.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentScaleChanged.html",
    "title": "Event ContentScaleChanged | SharpVectors Documentation",
    "keywords": "Event ContentScaleChanged Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll Event raised when the ContentScale property has changed. public event EventHandler ContentScaleChanged Returns EventHandler"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentScaleProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentScaleProperty.html",
    "title": "Field ContentScaleProperty | SharpVectors Documentation",
    "keywords": "Field ContentScaleProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ContentScaleProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentViewportHeight.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentViewportHeight.html",
    "title": "Property ContentViewportHeight | SharpVectors Documentation",
    "keywords": "Property ContentViewportHeight Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ContentViewportHeight Get the viewport height, in content coordinates. public double ContentViewportHeight { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentViewportHeightProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentViewportHeightProperty.html",
    "title": "Field ContentViewportHeightProperty | SharpVectors Documentation",
    "keywords": "Field ContentViewportHeightProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ContentViewportHeightProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentViewportWidth.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentViewportWidth.html",
    "title": "Property ContentViewportWidth | SharpVectors Documentation",
    "keywords": "Property ContentViewportWidth Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ContentViewportWidth Get the viewport width, in content coordinates. public double ContentViewportWidth { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentViewportWidthProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentViewportWidthProperty.html",
    "title": "Field ContentViewportWidthProperty | SharpVectors Documentation",
    "keywords": "Field ContentViewportWidthProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ContentViewportWidthProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusX.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusX.html",
    "title": "Property ContentZoomFocusX | SharpVectors Documentation",
    "keywords": "Property ContentZoomFocusX Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ContentZoomFocusX The X coordinate of the content focus, this is the point that we are focusing on when zooming. public double ContentZoomFocusX { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusXProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusXProperty.html",
    "title": "Field ContentZoomFocusXProperty | SharpVectors Documentation",
    "keywords": "Field ContentZoomFocusXProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ContentZoomFocusXProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusY.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusY.html",
    "title": "Property ContentZoomFocusY | SharpVectors Documentation",
    "keywords": "Property ContentZoomFocusY Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ContentZoomFocusY The Y coordinate of the content focus, this is the point that we are focusing on when zooming. public double ContentZoomFocusY { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusYProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusYProperty.html",
    "title": "Field ContentZoomFocusYProperty | SharpVectors Documentation",
    "keywords": "Field ContentZoomFocusYProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ContentZoomFocusYProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ExtentHeight.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ExtentHeight.html",
    "title": "Property ExtentHeight | SharpVectors Documentation",
    "keywords": "Property ExtentHeight Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ExtentHeight The height of the content (with 'ContentScale' applied). public double ExtentHeight { get; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ExtentWidth.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ExtentWidth.html",
    "title": "Property ExtentWidth | SharpVectors Documentation",
    "keywords": "Property ExtentWidth Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ExtentWidth The width of the content (with 'ContentScale' applied). public double ExtentWidth { get; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.HorizontalOffset.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.HorizontalOffset.html",
    "title": "Property HorizontalOffset | SharpVectors Documentation",
    "keywords": "Property HorizontalOffset Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll HorizontalOffset The offset of the horizontal scrollbar. public double HorizontalOffset { get; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.IsMouseWheelScrollingEnabled.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.IsMouseWheelScrollingEnabled.html",
    "title": "Property IsMouseWheelScrollingEnabled | SharpVectors Documentation",
    "keywords": "Property IsMouseWheelScrollingEnabled Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll IsMouseWheelScrollingEnabled Set to 'true' to enable the mouse wheel to scroll the zoom and pan control. This is set to 'false' by default. public bool IsMouseWheelScrollingEnabled { get; set; } Property Value bool"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.IsMouseWheelScrollingEnabledProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.IsMouseWheelScrollingEnabledProperty.html",
    "title": "Field IsMouseWheelScrollingEnabledProperty | SharpVectors Documentation",
    "keywords": "Field IsMouseWheelScrollingEnabledProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty IsMouseWheelScrollingEnabledProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.LineDown.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.LineDown.html",
    "title": "Method LineDown | SharpVectors Documentation",
    "keywords": "Method LineDown Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll LineDown() Shift the content offset one line down. public void LineDown()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.LineLeft.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.LineLeft.html",
    "title": "Method LineLeft | SharpVectors Documentation",
    "keywords": "Method LineLeft Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll LineLeft() Shift the content offset one line left. public void LineLeft()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.LineRight.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.LineRight.html",
    "title": "Method LineRight | SharpVectors Documentation",
    "keywords": "Method LineRight Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll LineRight() Shift the content offset one line right. public void LineRight()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.LineUp.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.LineUp.html",
    "title": "Method LineUp | SharpVectors Documentation",
    "keywords": "Method LineUp Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll LineUp() Shift the content offset one line up. public void LineUp()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MakeVisible.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MakeVisible.html",
    "title": "Method MakeVisible | SharpVectors Documentation",
    "keywords": "Method MakeVisible Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MakeVisible(Visual, Rect) Bring the specified rectangle to view. public Rect MakeVisible(Visual visual, Rect rectangle) Parameters visual Visual rectangle Rect Returns Rect"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MaxContentScale.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MaxContentScale.html",
    "title": "Property MaxContentScale | SharpVectors Documentation",
    "keywords": "Property MaxContentScale Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MaxContentScale Get/set the maximum value for 'ContentScale'. public double MaxContentScale { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MaxContentScaleProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MaxContentScaleProperty.html",
    "title": "Field MaxContentScaleProperty | SharpVectors Documentation",
    "keywords": "Field MaxContentScaleProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty MaxContentScaleProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MeasureOverride.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MeasureOverride.html",
    "title": "Method MeasureOverride | SharpVectors Documentation",
    "keywords": "Method MeasureOverride Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MeasureOverride(Size) Measure the control and it's children. protected override Size MeasureOverride(Size constraint) Parameters constraint Size Returns Size"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MinContentScale.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MinContentScale.html",
    "title": "Property MinContentScale | SharpVectors Documentation",
    "keywords": "Property MinContentScale Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MinContentScale Get/set the minimum value for 'ContentScale'. public double MinContentScale { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MinContentScaleProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MinContentScaleProperty.html",
    "title": "Field MinContentScaleProperty | SharpVectors Documentation",
    "keywords": "Field MinContentScaleProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty MinContentScaleProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MouseWheelDown.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MouseWheelDown.html",
    "title": "Method MouseWheelDown | SharpVectors Documentation",
    "keywords": "Method MouseWheelDown Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MouseWheelDown() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. public void MouseWheelDown()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MouseWheelLeft.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MouseWheelLeft.html",
    "title": "Method MouseWheelLeft | SharpVectors Documentation",
    "keywords": "Method MouseWheelLeft Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MouseWheelLeft() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. public void MouseWheelLeft()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MouseWheelRight.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MouseWheelRight.html",
    "title": "Method MouseWheelRight | SharpVectors Documentation",
    "keywords": "Method MouseWheelRight Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MouseWheelRight() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. public void MouseWheelRight()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.MouseWheelUp.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.MouseWheelUp.html",
    "title": "Method MouseWheelUp | SharpVectors Documentation",
    "keywords": "Method MouseWheelUp Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll MouseWheelUp() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. public void MouseWheelUp()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.OnApplyTemplate.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.OnApplyTemplate.html",
    "title": "Method OnApplyTemplate | SharpVectors Documentation",
    "keywords": "Method OnApplyTemplate Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll OnApplyTemplate() Called when a template has been applied to the control. public override void OnApplyTemplate()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.PageDown.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.PageDown.html",
    "title": "Method PageDown | SharpVectors Documentation",
    "keywords": "Method PageDown Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll PageDown() Shift the content offset one page down. public void PageDown()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.PageLeft.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.PageLeft.html",
    "title": "Method PageLeft | SharpVectors Documentation",
    "keywords": "Method PageLeft Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll PageLeft() Shift the content offset one page left. public void PageLeft()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.PageRight.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.PageRight.html",
    "title": "Method PageRight | SharpVectors Documentation",
    "keywords": "Method PageRight Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll PageRight() Shift the content offset one page right. public void PageRight()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.PageUp.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.PageUp.html",
    "title": "Method PageUp | SharpVectors Documentation",
    "keywords": "Method PageUp Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll PageUp() Shift the content offset one page up. public void PageUp()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ScaleToFit.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ScaleToFit.html",
    "title": "Method ScaleToFit | SharpVectors Documentation",
    "keywords": "Method ScaleToFit Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ScaleToFit() Instantly scale the content so that it fits completely in the control. public void ScaleToFit()"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ScrollOwner.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ScrollOwner.html",
    "title": "Property ScrollOwner | SharpVectors Documentation",
    "keywords": "Property ScrollOwner Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ScrollOwner Reference to the ScrollViewer that is wrapped (in XAML) around the ZoomPanControl. Or set to null if there is no ScrollViewer. public ScrollViewer ScrollOwner { get; set; } Property Value ScrollViewer"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.SetHorizontalOffset.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.SetHorizontalOffset.html",
    "title": "Method SetHorizontalOffset | SharpVectors Documentation",
    "keywords": "Method SetHorizontalOffset Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetHorizontalOffset(double) Called when the offset of the horizontal scrollbar has been set. public void SetHorizontalOffset(double offset) Parameters offset double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.SetVerticalOffset.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.SetVerticalOffset.html",
    "title": "Method SetVerticalOffset | SharpVectors Documentation",
    "keywords": "Method SetVerticalOffset Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SetVerticalOffset(double) Called when the offset of the vertical scrollbar has been set. public void SetVerticalOffset(double offset) Parameters offset double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.SnapContentOffsetTo.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.SnapContentOffsetTo.html",
    "title": "Method SnapContentOffsetTo | SharpVectors Documentation",
    "keywords": "Method SnapContentOffsetTo Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SnapContentOffsetTo(Point) Instantly center the view on the specified point (in content coordinates). public void SnapContentOffsetTo(Point contentOffset) Parameters contentOffset Point"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.SnapTo.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.SnapTo.html",
    "title": "Method SnapTo | SharpVectors Documentation",
    "keywords": "Method SnapTo Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll SnapTo(Point) Instantly center the view on the specified point (in content coordinates). public void SnapTo(Point contentPoint) Parameters contentPoint Point"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.VerticalOffset.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.VerticalOffset.html",
    "title": "Property VerticalOffset | SharpVectors Documentation",
    "keywords": "Property VerticalOffset Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll VerticalOffset The offset of the vertical scrollbar. public double VerticalOffset { get; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ViewportHeight.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ViewportHeight.html",
    "title": "Property ViewportHeight | SharpVectors Documentation",
    "keywords": "Property ViewportHeight Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ViewportHeight Get the height of the viewport onto the content. public double ViewportHeight { get; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ViewportWidth.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ViewportWidth.html",
    "title": "Property ViewportWidth | SharpVectors Documentation",
    "keywords": "Property ViewportWidth Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ViewportWidth Get the width of the viewport onto the content. public double ViewportWidth { get; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusX.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusX.html",
    "title": "Property ViewportZoomFocusX | SharpVectors Documentation",
    "keywords": "Property ViewportZoomFocusX Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ViewportZoomFocusX The X coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) that the content focus point is locked to while zooming in. public double ViewportZoomFocusX { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusXProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusXProperty.html",
    "title": "Field ViewportZoomFocusXProperty | SharpVectors Documentation",
    "keywords": "Field ViewportZoomFocusXProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ViewportZoomFocusXProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusY.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusY.html",
    "title": "Property ViewportZoomFocusY | SharpVectors Documentation",
    "keywords": "Property ViewportZoomFocusY Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ViewportZoomFocusY The Y coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) that the content focus point is locked to while zooming in. public double ViewportZoomFocusY { get; set; } Property Value double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusYProperty.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusYProperty.html",
    "title": "Field ViewportZoomFocusYProperty | SharpVectors Documentation",
    "keywords": "Field ViewportZoomFocusYProperty Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll public static readonly DependencyProperty ViewportZoomFocusYProperty Returns DependencyProperty"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ZoomAboutPoint.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ZoomAboutPoint.html",
    "title": "Method ZoomAboutPoint | SharpVectors Documentation",
    "keywords": "Method ZoomAboutPoint Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ZoomAboutPoint(double, Point) Zoom in/out centered on the specified point (in content coordinates). The focus point is kept locked to it's on screen position (ala google maps). public void ZoomAboutPoint(double newContentScale, Point contentZoomFocus) Parameters newContentScale double contentZoomFocus Point"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.ZoomTo.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.ZoomTo.html",
    "title": "Method ZoomTo | SharpVectors Documentation",
    "keywords": "Method ZoomTo Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll ZoomTo(Rect) Instantly zoom to the specified rectangle (in content coordinates). public void ZoomTo(Rect contentRect) Parameters contentRect Rect ZoomTo(double) Zoom in/out centered on the viewport center. public void ZoomTo(double contentScale) Parameters contentScale double"
  },
  "api/SharpVectors.Runtime.ZoomPanControl.html": {
    "href": "api/SharpVectors.Runtime.ZoomPanControl.html",
    "title": "Class ZoomPanControl | SharpVectors Documentation",
    "keywords": "Class ZoomPanControl Namespace SharpVectors.Runtime Assembly SharpVectors.Runtime.Wpf.dll A class that wraps up zooming and panning of it's content. public class ZoomPanControl : ContentControl, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IAddChild, IScrollInfo Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ContentControl ZoomPanControl Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IAddChild IScrollInfo Inherited Members ContentControl.ContentProperty ContentControl.HasContentProperty ContentControl.ContentTemplateProperty ContentControl.ContentTemplateSelectorProperty ContentControl.ContentStringFormatProperty ContentControl.AddChild(object) ContentControl.AddText(string) ContentControl.OnContentChanged(object, object) ContentControl.OnContentTemplateChanged(DataTemplate, DataTemplate) ContentControl.OnContentTemplateSelectorChanged(DataTemplateSelector, DataTemplateSelector) ContentControl.OnContentStringFormatChanged(string, string) ContentControl.LogicalChildren ContentControl.Content ContentControl.HasContent ContentControl.ContentTemplate ContentControl.ContentTemplateSelector ContentControl.ContentStringFormat Control.BorderBrushProperty Control.BorderThicknessProperty Control.BackgroundProperty Control.ForegroundProperty Control.FontFamilyProperty Control.FontSizeProperty Control.FontStretchProperty Control.FontStyleProperty Control.FontWeightProperty Control.HorizontalContentAlignmentProperty Control.VerticalContentAlignmentProperty Control.TabIndexProperty Control.IsTabStopProperty Control.PaddingProperty Control.TemplateProperty Control.PreviewMouseDoubleClickEvent Control.MouseDoubleClickEvent Control.OnTemplateChanged(ControlTemplate, ControlTemplate) Control.ToString() Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs) Control.OnMouseDoubleClick(MouseButtonEventArgs) Control.BorderBrush Control.BorderThickness Control.Background Control.Foreground Control.FontFamily Control.FontSize Control.FontStretch Control.FontStyle Control.FontWeight Control.HorizontalContentAlignment Control.VerticalContentAlignment Control.TabIndex Control.IsTabStop Control.Padding Control.Template Control.HandlesScrolling Control.PreviewMouseDoubleClick Control.MouseDoubleClick FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetVisualChild(int) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.OnRender(DrawingContext) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors ZoomPanControl() Fields AnimationDurationProperty ContentOffsetXProperty ContentOffsetYProperty ContentScaleProperty ContentViewportHeightProperty ContentViewportWidthProperty ContentZoomFocusXProperty ContentZoomFocusYProperty IsMouseWheelScrollingEnabledProperty MaxContentScaleProperty MinContentScaleProperty ViewportZoomFocusXProperty ViewportZoomFocusYProperty Properties AnimationDuration The duration of the animations (in seconds) started by calling AnimatedZoomTo and the other animation methods. CanHorizontallyScroll Set to 'true' when the vertical scrollbar is enabled. CanVerticallyScroll Set to 'true' when the vertical scrollbar is enabled. ContentElement ContentOffsetX Get/set the X offset (in content coordinates) of the view on the content. ContentOffsetY Get/set the Y offset (in content coordinates) of the view on the content. ContentScale Get/set the current scale (or zoom factor) of the content. ContentViewportHeight Get the viewport height, in content coordinates. ContentViewportWidth Get the viewport width, in content coordinates. ContentZoomFocusX The X coordinate of the content focus, this is the point that we are focusing on when zooming. ContentZoomFocusY The Y coordinate of the content focus, this is the point that we are focusing on when zooming. ExtentHeight The height of the content (with 'ContentScale' applied). ExtentWidth The width of the content (with 'ContentScale' applied). HorizontalOffset The offset of the horizontal scrollbar. IsMouseWheelScrollingEnabled Set to 'true' to enable the mouse wheel to scroll the zoom and pan control. This is set to 'false' by default. MaxContentScale Get/set the maximum value for 'ContentScale'. MinContentScale Get/set the minimum value for 'ContentScale'. ScrollOwner Reference to the ScrollViewer that is wrapped (in XAML) around the ZoomPanControl. Or set to null if there is no ScrollViewer. VerticalOffset The offset of the vertical scrollbar. ViewportHeight Get the height of the viewport onto the content. ViewportWidth Get the width of the viewport onto the content. ViewportZoomFocusX The X coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) that the content focus point is locked to while zooming in. ViewportZoomFocusY The Y coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) that the content focus point is locked to while zooming in. Methods AnimatedScaleToFit() Do animation that scales the content so that it fits completely in the control. AnimatedSnapTo(Point) Use animation to center the view on the specified point (in content coordinates). AnimatedZoomAboutPoint(double, Point) Zoom in/out centered on the specified point (in content coordinates). The focus point is kept locked to it's on screen position (ala google maps). AnimatedZoomTo(double) Zoom in/out centered on the viewport center. AnimatedZoomTo(double, Rect) Do an animated zoom to view a specific scale and rectangle (in content coordinates). AnimatedZoomTo(Rect) Do an animated zoom to the specified rectangle (in content coordinates). ArrangeOverride(Size) Arrange the control and it's children. LineDown() Shift the content offset one line down. LineLeft() Shift the content offset one line left. LineRight() Shift the content offset one line right. LineUp() Shift the content offset one line up. MakeVisible(Visual, Rect) Bring the specified rectangle to view. MeasureOverride(Size) Measure the control and it's children. MouseWheelDown() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. MouseWheelLeft() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. MouseWheelRight() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. MouseWheelUp() Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is used for zooming in and out, not for manipulating the scrollbars. OnApplyTemplate() Called when a template has been applied to the control. PageDown() Shift the content offset one page down. PageLeft() Shift the content offset one page left. PageRight() Shift the content offset one page right. PageUp() Shift the content offset one page up. ScaleToFit() Instantly scale the content so that it fits completely in the control. SetHorizontalOffset(double) Called when the offset of the horizontal scrollbar has been set. SetVerticalOffset(double) Called when the offset of the vertical scrollbar has been set. SnapContentOffsetTo(Point) Instantly center the view on the specified point (in content coordinates). SnapTo(Point) Instantly center the view on the specified point (in content coordinates). ZoomAboutPoint(double, Point) Zoom in/out centered on the specified point (in content coordinates). The focus point is kept locked to it's on screen position (ala google maps). ZoomTo(double) Zoom in/out centered on the viewport center. ZoomTo(Rect) Instantly zoom to the specified rectangle (in content coordinates). Events ContentOffsetXChanged Event raised when the ContentOffsetX property has changed. ContentOffsetYChanged Event raised when the ContentOffsetY property has changed. ContentScaleChanged Event raised when the ContentScale property has changed."
  },
  "api/SharpVectors.Runtime.html": {
    "href": "api/SharpVectors.Runtime.html",
    "title": "Namespace SharpVectors.Runtime | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Runtime The SharpVectors.Runtime namespace contains a bunch of classes and interfaces. Classes DpiScale Stores DPI information from which a Visual or UIElement is rendered. DpiUtilities EmbeddedBitmapDataConverter EmbeddedBitmapSource SvgAlertArgs SvgAnimationLayer This creates a host for visuals derived from the Canvas class. SvgAnimator This provides a wrapper for the Scoreboard, which is used for opacity animation. SvgDrawingCanvas This is the main drawing canvas for the rendered SVG diagrams. SvgErrorArgs SvgErrorException SvgFontUriExtension SvgImageNameScope This class, if placed at the root of a XAML file which is loaded by XamlReader.Load() will end up having all named elements contained in its nameTable automatically. If you want to get that list, it is now in your power. SvgLink SvgObject ZoomPanAnimationHelper A helper class to simplify animation. ZoomPanControl A class that wraps up zooming and panning of it's content. Structs EmbeddedBitmapData Enums ProcessDpiAwareness SvgInteractiveModes A value specifying the type of interactivity to be supported by the conversion process and controls. In the conversion process, more information are added to make the interactivity defined possible, and might be unnecessary overhead where no interactivity is needed. In the rendering process at the control level, keyboard and mouse operations are monitored to support interactivities. SvgLinkAction SvgObjectType"
  },
  "api/SharpVectors.Xml.DynamicXmlNamespaceManager.-ctor.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlNamespaceManager.-ctor.html",
    "title": "Constructor DynamicXmlNamespaceManager | SharpVectors Documentation",
    "keywords": "Constructor DynamicXmlNamespaceManager Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll DynamicXmlNamespaceManager() Initializes a new instance of the DynamicXmlNamespaceManager class. public DynamicXmlNamespaceManager() DynamicXmlNamespaceManager(XmlNameTable) Initializes a new instance of the DynamicXmlNamespaceManager class. public DynamicXmlNamespaceManager(XmlNameTable xmlNameTable) Parameters xmlNameTable XmlNameTable The XML name table."
  },
  "api/SharpVectors.Xml.DynamicXmlNamespaceManager.LookupNamespace.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlNamespaceManager.LookupNamespace.html",
    "title": "Method LookupNamespace | SharpVectors Documentation",
    "keywords": "Method LookupNamespace Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll LookupNamespace(string) Gets the namespace URI for the specified prefix. public override string LookupNamespace(string prefix) Parameters prefix string The prefix whose namespace URI you want to resolve. To match the default namespace, pass Empty. Returns string Returns the namespace URI for prefix or null if there is no mapped namespace. The returned string is atomized. For more information on atomized strings, see XmlNameTable."
  },
  "api/SharpVectors.Xml.DynamicXmlNamespaceManager.Resolve.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlNamespaceManager.Resolve.html",
    "title": "Event Resolve | SharpVectors Documentation",
    "keywords": "Event Resolve Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Occurs when trying to resolve an unknown namespace. public event DynamicXmlNamespaceManager.ResolveEventHandler Resolve Returns DynamicXmlNamespaceManager.ResolveEventHandler"
  },
  "api/SharpVectors.Xml.DynamicXmlNamespaceManager.ResolveEventHandler.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlNamespaceManager.ResolveEventHandler.html",
    "title": "Delegate DynamicXmlNamespaceManager.ResolveEventHandler | SharpVectors Documentation",
    "keywords": "Delegate DynamicXmlNamespaceManager.ResolveEventHandler Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Event handler type public delegate string DynamicXmlNamespaceManager.ResolveEventHandler(string prefix) Parameters prefix string Returns string"
  },
  "api/SharpVectors.Xml.DynamicXmlNamespaceManager.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlNamespaceManager.html",
    "title": "Class DynamicXmlNamespaceManager | SharpVectors Documentation",
    "keywords": "Class DynamicXmlNamespaceManager Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll XML namespace manager allowing to fire events when namespace is not found public sealed class DynamicXmlNamespaceManager : XmlNamespaceManager, IXmlNamespaceResolver, IEnumerable Inheritance object XmlNamespaceManager DynamicXmlNamespaceManager Implements IXmlNamespaceResolver IEnumerable Inherited Members XmlNamespaceManager.PushScope() XmlNamespaceManager.PopScope() XmlNamespaceManager.AddNamespace(string, string) XmlNamespaceManager.RemoveNamespace(string, string) XmlNamespaceManager.GetEnumerator() XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope) XmlNamespaceManager.LookupPrefix(string) XmlNamespaceManager.HasNamespace(string) XmlNamespaceManager.NameTable XmlNamespaceManager.DefaultNamespace object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors DynamicXmlNamespaceManager() Initializes a new instance of the DynamicXmlNamespaceManager class. DynamicXmlNamespaceManager(XmlNameTable) Initializes a new instance of the DynamicXmlNamespaceManager class. Methods LookupNamespace(string) Gets the namespace URI for the specified prefix. Events Resolve Occurs when trying to resolve an unknown namespace."
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.-ctor.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.-ctor.html",
    "title": "Constructor DynamicXmlUrlResolver | SharpVectors Documentation",
    "keywords": "Constructor DynamicXmlUrlResolver Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll DynamicXmlUrlResolver() public DynamicXmlUrlResolver()"
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.GetEntity.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.GetEntity.html",
    "title": "Method GetEntity | SharpVectors Documentation",
    "keywords": "Method GetEntity Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll GetEntity(Uri, string, Type) Maps a URI to an object that contains the actual resource. public override object GetEntity(Uri absoluteUri, string role, Type ofObjectToReturn) Parameters absoluteUri Uri The URI returned from ResolveUri(Uri, string). role string Currently not used. ofObjectToReturn Type The type of object to return. The current implementation only returns Stream objects. Returns object A stream object or null if a type other than stream is specified."
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.GettingEntity.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.GettingEntity.html",
    "title": "Event GettingEntity | SharpVectors Documentation",
    "keywords": "Event GettingEntity Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Occurs when getting entity. public event DynamicXmlUrlResolver.GettingEntityEventHandler GettingEntity Returns DynamicXmlUrlResolver.GettingEntityEventHandler"
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.GettingEntityEventHandler.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.GettingEntityEventHandler.html",
    "title": "Delegate DynamicXmlUrlResolver.GettingEntityEventHandler | SharpVectors Documentation",
    "keywords": "Delegate DynamicXmlUrlResolver.GettingEntityEventHandler Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Fires when GetEntity is called public delegate object DynamicXmlUrlResolver.GettingEntityEventHandler(Uri absoluteUri, string role, Type ofObjectToReturn) Parameters absoluteUri Uri role string ofObjectToReturn Type Returns object"
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.ResolveEventHandler.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.ResolveEventHandler.html",
    "title": "Delegate DynamicXmlUrlResolver.ResolveEventHandler | SharpVectors Documentation",
    "keywords": "Delegate DynamicXmlUrlResolver.ResolveEventHandler Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Event handler type public delegate string DynamicXmlUrlResolver.ResolveEventHandler(string relativeUri) Parameters relativeUri string Returns string"
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.ResolveUri.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.ResolveUri.html",
    "title": "Method ResolveUri | SharpVectors Documentation",
    "keywords": "Method ResolveUri Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll ResolveUri(Uri, string) Resolves the absolute URI from the base and relative URIs. public override Uri ResolveUri(Uri baseUri, string relativeUri) Parameters baseUri Uri The base URI used to resolve the relative URI. relativeUri string The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the baseUri value. If relative, it combines with the baseUri to make an absolute URI. Returns Uri A Uri representing the absolute URI, or null if the relative URI cannot be resolved. Exceptions ArgumentNullException baseUriis null or relativeUri is null"
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.Resolving.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.Resolving.html",
    "title": "Event Resolving | SharpVectors Documentation",
    "keywords": "Event Resolving Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Occurs when trying to resolve an Uri. public event DynamicXmlUrlResolver.ResolveEventHandler Resolving Returns DynamicXmlUrlResolver.ResolveEventHandler"
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.UrlDefaultPolicy.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.UrlDefaultPolicy.html",
    "title": "Field UrlDefaultPolicy | SharpVectors Documentation",
    "keywords": "Field UrlDefaultPolicy Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll public static readonly UrlResolvePolicy UrlDefaultPolicy Returns UrlResolvePolicy"
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.UrlPolicy.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.UrlPolicy.html",
    "title": "Property UrlPolicy | SharpVectors Documentation",
    "keywords": "Property UrlPolicy Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll UrlPolicy public static UrlResolvePolicy UrlPolicy { get; set; } Property Value UrlResolvePolicy"
  },
  "api/SharpVectors.Xml.DynamicXmlUrlResolver.html": {
    "href": "api/SharpVectors.Xml.DynamicXmlUrlResolver.html",
    "title": "Class DynamicXmlUrlResolver | SharpVectors Documentation",
    "keywords": "Class DynamicXmlUrlResolver Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Provides event-based interface to resolve external XML resources named by a Uniform Resource Identifier (URI). public sealed class DynamicXmlUrlResolver : XmlUrlResolver Inheritance object XmlResolver XmlUrlResolver DynamicXmlUrlResolver Inherited Members XmlUrlResolver.Credentials XmlUrlResolver.Proxy XmlUrlResolver.CachePolicy XmlResolver.SupportsType(Uri, Type) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors DynamicXmlUrlResolver() Fields UrlDefaultPolicy Properties UrlPolicy Methods GetEntity(Uri, string, Type) Maps a URI to an object that contains the actual resource. ResolveUri(Uri, string) Resolves the absolute URI from the base and relative URIs. Events GettingEntity Occurs when getting entity. Resolving Occurs when trying to resolve an Uri."
  },
  "api/SharpVectors.Xml.UrlResolveArgs.-ctor.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.-ctor.html",
    "title": "Constructor UrlResolveArgs | SharpVectors Documentation",
    "keywords": "Constructor UrlResolveArgs Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll UrlResolveArgs(DtdProcessing) public UrlResolveArgs(DtdProcessing processing) Parameters processing DtdProcessing UrlResolveArgs(DtdProcessing, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes) public UrlResolveArgs(DtdProcessing processing, UrlResolveTypes entity, UrlResolveTypes element, UrlResolveTypes document, UrlResolveTypes font, UrlResolveTypes image, UrlResolveTypes style, UrlResolveTypes script) Parameters processing DtdProcessing entity UrlResolveTypes element UrlResolveTypes document UrlResolveTypes font UrlResolveTypes image UrlResolveTypes style UrlResolveTypes script UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolveArgs.Document.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.Document.html",
    "title": "Property Document | SharpVectors Documentation",
    "keywords": "Property Document Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Document public UrlResolveTypes Document { get; set; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolveArgs.Element.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.Element.html",
    "title": "Property Element | SharpVectors Documentation",
    "keywords": "Property Element Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Element public UrlResolveTypes Element { get; set; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolveArgs.Entity.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.Entity.html",
    "title": "Property Entity | SharpVectors Documentation",
    "keywords": "Property Entity Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Entity public UrlResolveTypes Entity { get; set; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolveArgs.Font.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.Font.html",
    "title": "Property Font | SharpVectors Documentation",
    "keywords": "Property Font Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Font public UrlResolveTypes Font { get; set; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolveArgs.Image.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.Image.html",
    "title": "Property Image | SharpVectors Documentation",
    "keywords": "Property Image Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Image public UrlResolveTypes Image { get; set; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolveArgs.Processing.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.Processing.html",
    "title": "Property Processing | SharpVectors Documentation",
    "keywords": "Property Processing Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Processing public DtdProcessing Processing { get; set; } Property Value DtdProcessing"
  },
  "api/SharpVectors.Xml.UrlResolveArgs.Script.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.Script.html",
    "title": "Property Script | SharpVectors Documentation",
    "keywords": "Property Script Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Script public UrlResolveTypes Script { get; set; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolveArgs.Style.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Style public UrlResolveTypes Style { get; set; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolveArgs.html": {
    "href": "api/SharpVectors.Xml.UrlResolveArgs.html",
    "title": "Struct UrlResolveArgs | SharpVectors Documentation",
    "keywords": "Struct UrlResolveArgs Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll public struct UrlResolveArgs Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors UrlResolveArgs(DtdProcessing) UrlResolveArgs(DtdProcessing, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes, UrlResolveTypes) Properties Document Element Entity Font Image Processing Script Style"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.-ctor.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.-ctor.html",
    "title": "Constructor UrlResolvePolicy | SharpVectors Documentation",
    "keywords": "Constructor UrlResolvePolicy Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll UrlResolvePolicy(DtdProcessing) public UrlResolvePolicy(DtdProcessing processing) Parameters processing DtdProcessing UrlResolvePolicy(UrlResolveArgs) public UrlResolvePolicy(UrlResolveArgs args) Parameters args UrlResolveArgs"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.Document.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.Document.html",
    "title": "Property Document | SharpVectors Documentation",
    "keywords": "Property Document Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Document public UrlResolveTypes Document { get; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.Element.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.Element.html",
    "title": "Property Element | SharpVectors Documentation",
    "keywords": "Property Element Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Element public UrlResolveTypes Element { get; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.Entity.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.Entity.html",
    "title": "Property Entity | SharpVectors Documentation",
    "keywords": "Property Entity Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Entity public UrlResolveTypes Entity { get; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.Font.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.Font.html",
    "title": "Property Font | SharpVectors Documentation",
    "keywords": "Property Font Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Font public UrlResolveTypes Font { get; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.GetEntity.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.GetEntity.html",
    "title": "Method GetEntity | SharpVectors Documentation",
    "keywords": "Method GetEntity Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll GetEntity(Uri, string, Type) Maps a URI to an object that contains the actual resource. public virtual object GetEntity(Uri absoluteUri, string role, Type ofObjectToReturn) Parameters absoluteUri Uri The URI returned from ResolveUri(Uri, string). role string Currently not used. ofObjectToReturn Type The type of object to return. The current implementation only returns Stream objects. Returns object A stream object or null if a type other than stream is specified."
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.GetSource.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.GetSource.html",
    "title": "Method GetSource | SharpVectors Documentation",
    "keywords": "Method GetSource Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll GetSource(string) public static UrlResolveSource GetSource(string name) Parameters name string Returns UrlResolveSource"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.Image.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.Image.html",
    "title": "Property Image | SharpVectors Documentation",
    "keywords": "Property Image Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Image public UrlResolveTypes Image { get; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.Processing.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.Processing.html",
    "title": "Property Processing | SharpVectors Documentation",
    "keywords": "Property Processing Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Processing public DtdProcessing Processing { get; } Property Value DtdProcessing"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.ResolveUri.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.ResolveUri.html",
    "title": "Method ResolveUri | SharpVectors Documentation",
    "keywords": "Method ResolveUri Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll ResolveUri(Uri, string) Resolves the absolute URI from the base and relative URIs. public virtual Uri ResolveUri(Uri baseUri, string relativeUri) Parameters baseUri Uri The base URI used to resolve the relative URI. relativeUri string The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the baseUri value. If relative, it combines with the baseUri to make an absolute URI. Returns Uri A Uri representing the absolute URI, or null if the relative URI cannot be resolved. Exceptions ArgumentNullException baseUriis null or relativeUri is null"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.Script.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.Script.html",
    "title": "Property Script | SharpVectors Documentation",
    "keywords": "Property Script Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Script public UrlResolveTypes Script { get; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.Style.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.Style.html",
    "title": "Property Style | SharpVectors Documentation",
    "keywords": "Property Style Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Style public UrlResolveTypes Style { get; } Property Value UrlResolveTypes"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.Supports.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.Supports.html",
    "title": "Method Supports | SharpVectors Documentation",
    "keywords": "Method Supports Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll Supports(string) public static bool Supports(string uriScheme) Parameters uriScheme string Returns bool Supports(Uri, UrlResolveSource) public virtual bool Supports(Uri uri, UrlResolveSource source) Parameters uri Uri source UrlResolveSource Returns bool"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.UriSchemePack.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.UriSchemePack.html",
    "title": "Field UriSchemePack | SharpVectors Documentation",
    "keywords": "Field UriSchemePack Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll public static readonly string UriSchemePack Returns string"
  },
  "api/SharpVectors.Xml.UrlResolvePolicy.html": {
    "href": "api/SharpVectors.Xml.UrlResolvePolicy.html",
    "title": "Class UrlResolvePolicy | SharpVectors Documentation",
    "keywords": "Class UrlResolvePolicy Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll public class UrlResolvePolicy Inheritance object UrlResolvePolicy Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UrlResolvePolicy(UrlResolveArgs) UrlResolvePolicy(DtdProcessing) Fields UriSchemePack Properties Document Element Entity Font Image Processing Script Style Methods GetEntity(Uri, string, Type) Maps a URI to an object that contains the actual resource. GetSource(string) ResolveUri(Uri, string) Resolves the absolute URI from the base and relative URIs. Supports(string) Supports(Uri, UrlResolveSource)"
  },
  "api/SharpVectors.Xml.UrlResolveSource.html": {
    "href": "api/SharpVectors.Xml.UrlResolveSource.html",
    "title": "Enum UrlResolveSource | SharpVectors Documentation",
    "keywords": "Enum UrlResolveSource Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll public enum UrlResolveSource Fields None = 0 Entity = 1 Element = 2 Document = 3 Font = 4 Image = 5 Style = 6 Script = 7"
  },
  "api/SharpVectors.Xml.UrlResolveTypes.html": {
    "href": "api/SharpVectors.Xml.UrlResolveTypes.html",
    "title": "Enum UrlResolveTypes | SharpVectors Documentation",
    "keywords": "Enum UrlResolveTypes Namespace SharpVectors.Xml Assembly SharpVectors.Core.dll [Flags] public enum UrlResolveTypes Fields None = 0 Local = 1 Remote = 2 Resource = 4"
  },
  "api/SharpVectors.Xml.html": {
    "href": "api/SharpVectors.Xml.html",
    "title": "Namespace SharpVectors.Xml | SharpVectors Documentation",
    "keywords": "Namespace SharpVectors.Xml Classes DynamicXmlNamespaceManager XML namespace manager allowing to fire events when namespace is not found DynamicXmlUrlResolver Provides event-based interface to resolve external XML resources named by a Uniform Resource Identifier (URI). UrlResolvePolicy Structs UrlResolveArgs Enums UrlResolveSource UrlResolveTypes Delegates DynamicXmlNamespaceManager.ResolveEventHandler Event handler type DynamicXmlUrlResolver.GettingEntityEventHandler Fires when GetEntity is called DynamicXmlUrlResolver.ResolveEventHandler Event handler type"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "SharpVectors API Reference | SharpVectors Documentation",
    "keywords": "SharpVectors API Reference Namespaces SharpVectors.Converters The SharpVectors.Converters namespace contains a bunch of classes and interfaces. SharpVectors.Dom The SharpVectors.Dom namespace contains a bunch of classes and interfaces. SharpVectors.Dom.Css The SharpVectors.Dom.Css namespace contains a bunch of classes and interfaces. SharpVectors.Dom.Events The SharpVectors.Dom.Events namespace contains a bunch of classes and interfaces. SharpVectors.Dom.Stylesheets The SharpVectors.Dom.Stylesheets namespace contains a bunch of classes and interfaces. SharpVectors.Dom.Svg The SharpVectors.Dom.Svg namespace contains a bunch of classes and interfaces. SharpVectors.Dom.Views The SharpVectors.Dom.Views namespace contains a bunch of classes and interfaces. SharpVectors.IoC The SharpVectors.IoC namespace contains a bunch of classes and interfaces. SharpVectors.Renderers The SharpVectors.Renderers namespace contains a bunch of classes and interfaces. SharpVectors.Renderers.Texts The SharpVectors.Renderers.Texts namespace contains a bunch of classes and interfaces. SharpVectors.Renderers.Utils The SharpVectors.Renderers.Utils namespace contains a bunch of classes and interfaces. SharpVectors.Renderers.Wpf The SharpVectors.Renderers.Wpf namespace contains a bunch of classes and interfaces. SharpVectors.Runtime The SharpVectors.Runtime namespace contains a bunch of classes and interfaces."
  },
  "articles/Applications.html": {
    "href": "articles/Applications.html",
    "title": "SVG Applications | SharpVectors Documentation",
    "keywords": "Applications The SVG# Reloaded comes with one main end-user application, an SVG Viewer or Browser. The viewer is named Squiggle.NET or simply Squiggle, after a similar viewer in the Batik SVG Toolkit (since the target is to produce something similar to the Batik Squiggle)."
  },
  "articles/Samples.html": {
    "href": "articles/Samples.html",
    "title": "SVG Samples | SharpVectors Documentation",
    "keywords": "Samples and Test Applications The SVG# Reloaded is packaged with a number of illustrative and test samples or applications. In this section, we provide an overview of these sample applications."
  },
  "articles/controls.html": {
    "href": "articles/controls.html",
    "title": "SVG Controls | SharpVectors Documentation",
    "keywords": "SVG Controls These are WPF controls for directly viewing the SVG documents in the WPF applications. The class diagrams are shown below: classDiagram direction RL class Viewbox class Canvas Canvas <|-- SvgDrawingCanvas Viewbox <|-- SvgViewbox SvgViewbox *-- SvgDrawingCanvas SvgDrawingCanvas <|-- SvgCanvas IUriContext <|-- SvgCanvas IUriContext <|-- SvgViewbox class IUriContext { <<interface>> +Uri BaseUri } class SvgDrawingCanvas{ +string AppTitle +bool DesignMode +Rect Bounds +Transform DisplayTransform +Point DisplayOffset +DrawingVisual HostVisual +SvgInteractiveModes InteractiveMode #int VisualChildrenCount +LoadDiagrams(string) void +UnloadDiagrams() void +RenderDiagrams(DrawingGroup) void } class SvgCanvas{ +string AppName +Uri Source +Uri UriSource +string SvgSource +Stream StreamSource +bool AutoSize +bool OptimizePath +bool TextAsGeometry +bool IncludeRuntime +CultureInfo CultureInfo +bool IgnoreRootViewbox +bool EnsureViewboxSize +bool EnsureViewboxPosition +DrawingGroup Drawings +FontFamily MessageFontFamily +double MessageFontSize +double MessageOpacity +string MessageText +Brush MessageBackground +Brush MessageFillBrush +Brush MessageStrokeBrush +Load(Uri, bool) bool +Load(string, bool) bool +Load(Stream, bool, bool) bool +LoadAsync(Uri) Task~bool~ +LoadAsync(string) Task~bool~ +LoadAsync(Stream, bool) Task~bool~ +Unload(bool, string) void } class SvgViewbox{ +string AppName +Uri Source +Uri UriSource +string SvgSource +Stream StreamSource +bool AutoSize +bool OptimizePath +bool TextAsGeometry +bool IncludeRuntime +CultureInfo CultureInfo +bool IgnoreRootViewbox +bool EnsureViewboxSize +bool EnsureViewboxPosition +DrawingGroup Drawings +FontFamily MessageFontFamily +double MessageFontSize +double MessageOpacity +string MessageText +Brush MessageBackground +Brush MessageFillBrush +Brush MessageStrokeBrush +Load(Uri, bool) bool +Load(string, bool) bool +Load(Stream, bool, bool) bool +LoadAsync(Uri) Task~bool~ +LoadAsync(string) Task~bool~ +LoadAsync(Stream, bool) Task~bool~ +Unload(bool, string) void } Common Drawing Control - SvgDrawingCanvas The SvgDrawingCanvas control is a generic canvas that extends the WPF Canvas control to provide rendering of drawing objects or DrawingGroup created from SVG documents. The SvgDrawingCanvas is specilized for rendering drawings generated by the SharpVectors, and therefore will not be useful for rendering other WPF drawings. The SvgDrawingCanvas.RenderDiagrams methods takes the WPF drawing generated from the conversion of the SVG documents and render it for viewing. The SvgDrawingCanvas itself does not handle the processing or conversion of the SVG documents to the WPF drawings. This is generic so that the serialized XAML format of the generated drawings can also be reloaded or deserialized and rendered by the SvgDrawingCanvas class. The SvgDrawingCanvas.LoadDiagrams method takes the serialized XAML file, deserialized it to the corresponding WPF drawing and renders it. The SvgCanvas and SvgViewbox controls extends and embeds SvgDrawingCanvas respectively. These controls handle the conversion of the SVG documents to WPF drawings and uses the SvgDrawingCanvas to render. Controls deriving from the SvgDrawingCanvas class instead of the WPF canvas control will support interactivity when added to future release of the drawing canvas. Common Drawing Properties The SVG drawing controls either extending or embedding as child the SvgDrawingCanvas control have similar properties. In this section, we discuss these similar properties for simplification and avoid repeations. SVG Document Sources These are the SVG document source properties of the SVG controls. The SVG controls provide three properties to be used as SVG document sources as explained below. These are WPF dependency properties and therefore supports data binding. UriSource or Source This property (type: Uri) provides access to the SVG documents in the form of local files, assembly resource files (Pack URIs) and remote files (supporting HTTP and HTTPS protocols, FTP protocol is not supported). The Source property is the original name, and may be removed in the future. StreamSource This property (type: Stream) provides SVG documents through .NET stream object, which is a generic view of a sequence of bytes. The allows access to local documents, assembly resource documents, memory documents and network documents or basically any SVG document source to the .NET stream object instance is available. Note The SVG controls take ownership of the stream since it is stored as dependency property. Therefore, a copy of the specified stream is created and kept in memory. If you do not desire a copy of the specified stream to be created, use the available load method that provides an option to skip the copy process. SvgSource This property (type: String) provides the SVG documents as plain text. This is provided for cases where the SVG content is desired as part of the XAML content. SVG Settings or Options The SVG controls convert SVG documents to WPF drawings and controls the settings or options (WpfDrawingSettings) used by the conversion process. Therefore, the controls expose the conversion settings or options through properties for customization. The current settings or options are shown below: WpfDrawingSettings.OptimizePath This property (type: Boolean) indicates whether the path geometry is optimized using StreamGeometry. WpfDrawingSettings.TextAsGeometry This property (type: Boolean) indicates whether the text elements are rendered as path geometry. WpfDrawingSettings.IncludeRuntime This property (type: Boolean) indicates whether to include SharpVectors specific markup extensions in the generated WPF objects. WpfDrawingSettings.IgnoreRootViewbox This property (type: Boolean) indicates whether to turn off viewbox at the root of the drawing. WpfDrawingSettings.EnsureViewboxSize This property (type: Boolean) indicates whether to preserve the original viewbox size when saving images. WpfDrawingSettings.EnsureViewboxPosition This property (type: Boolean) indicates whether to apply a translate transform to the viewbox to ensure it is visible when rendered. SVG Progress Message Options Loading and rendering a large SVG documents requires seconds to few minutes. The SVG controls provide a means to display a progress message to the user to indicate a long process in progress. The text of the progress message and its styling is controlled by the following properties: MessageFontFamily This property (type: FontFamily) specifies the font family used to render the progress message text. The default is Loading.... MessageFontSize This property (type: Double) specifies the size of the font used to render the progress message text. MessageOpacity This property (type: Double) specifies the opacity of the progress message. MessageText This property (type: String) specifies the text of the progress message. MessageBackground This property (type: Brush) specifies the background brush of the progress message text. MessageFillBrush This property (type: Brush) specifies the fill of the progress message text. MessageStrokeBrush This property (type: Brush) specifies the stroke of the progress message text. The default progress message text and styling are shown below: Canvas Control - SvgCanvas The WPF Canvas defines an area within which you can explicitly position child elements by using coordinates that are relative to the Canvas area. The SvgCanvas control is a WPF Canvas derived control for viewing the SVG files in WPF applications, and allowing you to use all the known features and behavior of the WPF canvas controls. In particular, it extends the SvgDrawingCanvas control and uses it to render any converted SVG drawing. The following XAML codes from the SvgCanvasSample sample illustrates the uses of the SvgCanvas control. <Window x:Class=\"SvgCanvasSample.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" Title=\"SharpVectors: SvgCanvas Sample - C#\" Height=\"720\" Width=\"960\" Background=\"White\" WindowStartupLocation=\"CenterScreen\" Icon=\"SvgCanvasSample.ico\"> <DockPanel Margin=\"3\"> <TabControl SelectedIndex=\"0\" OverridesDefaultStyle=\"False\" FontSize=\"14\" TabStripPlacement=\"Left\"> <TabItem> <TabItem.Header>Web File (Uri)</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" Background=\"White\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 1. Load Web SVG file --> <svgc:SvgCanvas Source=\"https://dev.w3.org/SVG/tools/svgweb/samples/svg-files/rg1024_green_grapes.svg\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Local File 1 (Uri)</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" Background=\"White\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 2. Load local SVG file --> <svgc:SvgCanvas Source=\"../../Test1.svg\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Local File 2 (Uri)</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" Background=\"White\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 3. Load local SVG file --> <svgc:SvgCanvas Source=\"../Test2.svg\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Sub-Folder File (Uri)</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" Background=\"White\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 4. Load local sub-folder SVG file --> <svgc:SvgCanvas Source=\"..\\SubFolder\\Test3.svg\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Resource File (Uri)</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" Background=\"White\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 5. Load Resource SVG file --> <svgc:SvgCanvas Source=\"/Resources/Test.svg\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Web File (Stream)</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" Background=\"White\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 6. Load Web SVG file (Stream) --> <svgc:SvgCanvas x:Name=\"webSvgCanvas\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Resource File (Stream)</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" Background=\"White\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 7. Load Resource SVG file (Stream) --> <svgc:SvgCanvas x:Name=\"resourceSvgCanvas\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/> </ScrollViewer> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Embedded SVG</TabItem.Header> <TabItem.Content> <ScrollViewer CanContentScroll=\"False\" Background=\"White\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- 8. Load local SVG file --> <svgc:SvgCanvas HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"> <svgc:SvgCanvas.SvgSource> <![CDATA[ <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"> <circle fill=\"#009\" r=\"45\" cx=\"50\" cy=\"50\"/> <path d=\"M33,26H78A37,37,0,0,1,33,83V57H59V43H33Z\" fill=\"#FFF\"/> </svg> ]]> </svgc:SvgCanvas.SvgSource> </svgc:SvgCanvas> </ScrollViewer> </TabItem.Content> </TabItem> </TabControl> </DockPanel> </Window> The image of the SvgCanvasSample sample is shown below: Viewbox Control - SvgViewbox The WPF Viewbox control defines a content decorator that can stretch and scale a single child to fill the available space. The SvgViewbox control is a WPF Viewbox derived control for viewing the SVG files in WPF applications, and allowing you to use all the Viewbox decorator properties. The single child control in the SvgViewbox control is an instance of the SvgDrawingCanvas control, which it utitilizes to provide the rendering of the converted SVG documents. The following XAML codes from the SvgViewboxSample sample illustrates the uses of the SvgViewbox control. <Window x:Class=\"SvgViewboxSample.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" Title=\"SharpVectors: SvgViewbox Sample - C#\" Height=\"720\" Width=\"960\" Background=\"White\" Icon=\"SvgViewboxSample.ico\" WindowStartupLocation=\"CenterScreen\"> <DockPanel Margin=\"3\"> <TabControl SelectedIndex=\"0\" OverridesDefaultStyle=\"False\" FontSize=\"14\" TabStripPlacement=\"Left\"> <TabItem> <TabItem.Header>Web File (Uri)</TabItem.Header> <TabItem.Content> <!-- 1. Load Web SVG file --> <svgc:SvgViewbox Source=\"https://dev.w3.org/SVG/tools/svgweb/samples/svg-files/rg1024_green_grapes.svg\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Local File 1 (Uri)</TabItem.Header> <TabItem.Content> <!-- 2. Load local SVG file --> <svgc:SvgViewbox Source=\"../../Test1.svg\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Local File 2 (Uri)</TabItem.Header> <TabItem.Content> <!-- 3. Load local SVG file --> <svgc:SvgViewbox Source=\"../Test2.svg\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Sub-Folder File (Uri)</TabItem.Header> <TabItem.Content> <!-- 4. Load local sub-folder SVG file --> <svgc:SvgViewbox Source=\"..\\SubFolder\\Test3.svg\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Resource File (Uri)</TabItem.Header> <TabItem.Content> <!-- 5. Load Resource SVG file --> <svgc:SvgViewbox Source=\"/Resources/Test.svg\" Stretch=\"Uniform\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Web File (Stream)</TabItem.Header> <TabItem.Content> <!-- 6. Load Web SVG file (Stream) --> <svgc:SvgViewbox x:Name=\"webSvgViewbox\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Resource File (Stream)</TabItem.Header> <TabItem.Content> <!-- 7. Load Resource SVG file (Stream) --> <svgc:SvgViewbox x:Name=\"resourceSvgViewbox\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/> </TabItem.Content> </TabItem> <TabItem> <TabItem.Header>Embedded SVG</TabItem.Header> <TabItem.Content> <!-- 8. Load local SVG file --> <svgc:SvgViewbox x:Name=\"embeddedSvgViewbox\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"> <svgc:SvgViewbox.SvgSource> <![CDATA[ <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"> <circle fill=\"#009\" r=\"45\" cx=\"50\" cy=\"50\"/> <path d=\"M33,26H78A37,37,0,0,1,33,83V57H59V43H33Z\" fill=\"#FFF\"/> </svg> ]]> </svgc:SvgViewbox.SvgSource> </svgc:SvgViewbox> </TabItem.Content> </TabItem> </TabControl> </DockPanel> </Window> The image of the SvgCanvasSample sample is shown below:"
  },
  "articles/converters.html": {
    "href": "articles/converters.html",
    "title": "SVG Converters | SharpVectors Documentation",
    "keywords": "SVG Converters The SVG to WPF conversion is the main use of this SharpVectors library currently. The other uses will be improved with time. The following is a diagram showing all the available converters. FileSvgConverter: This converts the SVG file to the corresponding XAML file, which can be viewed in WPF application. The root object in the converted file is DrawingGroup. FileSvgReader: This converts the SVG file to DrawingGroup and can optionally save the result to a file as XAML. ImageSvgConverter: This converts the SVG file to static or bitmap image, which can be saved to a file. StreamSvgConverter: This converts the SVG file or stream to static or bitmap image, which can be saved to a stream. This can be used for ASP.NET pages. DirectorySvgConverter: This converts a directory (and optionally the sub-directories) of SVG files to XAML files in a specified directory, maintaining the original directory structure. ResourceSvgConverter: This converts multiple directories (without the sub-directories) of SVG files and SVG files a DrawingGroup XAML. Now, as shown SvgConverter is the base class for the converters and defines the following common properties: DrawingSettings: This is the rendering options class, WpfDrawingSettings. SaveXaml: Determines whether to save conversion output to XAML format. SaveZaml: Determines whether to save conversion output to ZAML format, which is a G-zip compression of the XAML format, and similar to the SVGZ (for SVG). UseFrameXamlWriter: Determines whether the use the .NET Framework version of the XAML writer when saving the output to the XAML format. The default is false, and a customized XAML writer is used."
  },
  "articles/directory_converter.html": {
    "href": "articles/directory_converter.html",
    "title": "DirectorySvgConverter | SharpVectors Documentation",
    "keywords": "Directory SVG Converter - DirectorySvgConverter The DirectorySvgConverter converter class converts a directory (and optionally the subdirectories) of SVG input files to directory of XAML or static image files. It uses FileSvgReader: If the requested output is XAML file, or ImageSvgConverter: If the requested output is static image. Sample Code The following codes illustrate how to recursively convert a directory of SVG to a directory of XAML files (the default), maintaining the order of the subdirectories. SVG to XAML C# SVG to XAML VB.NET using System; using System.IO; using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class DirectorySvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public DirectorySvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public void Convert(DirectoryInfo svgDir, DirectoryInfo xamlDir) { // Create an directory converter var converter = new DirectorySvgConverter(_wpfSettings); converter.Recursive = true; // Converts SVG files in the source directory, save the output to the specified directory converter.Convert(svgDir, xamlDir); } } } Imports System.IO Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class DirectorySvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Sub Convert(ByVal svgDir As DirectoryInfo, ByVal xamlDir As DirectoryInfo) ' Create an directory converter Dim converter = New DirectorySvgConverter(_wpfSettings) converter.Recursive = True ' Converts SVG files in the source directory, save the output to the specified directory converter.Convert(svgDir, xamlDir) End Sub End Class End Namespace"
  },
  "articles/drawing_converter.html": {
    "href": "articles/drawing_converter.html",
    "title": "FileSvgReader | SharpVectors Documentation",
    "keywords": "Drawing SVG Converter - FileSvgReader The FileSvgReader converter class takes SVG file as input and outputs DrawingGroup object. The SVG input can also be one of the following Uri: A representation of a resource available to your application locally, on the intranet or internet Stream: A stream object providing access to the SVG input content. TextReader: A text reader file providing access to the SVG input content. XmlReader: An XML reader providing access to the SVG input content. Note With the Uri as input, FileSvgReader provides a wider access to SVG files. It can optionally save the output to XAML file, which is odd as is its naming. This was the first and initial SVG to XAML handler. User demands gave rise to the multiple SVG converters forcing this object to be considered as a converter for simplicity. This converter will be renamed DrawingSvgConverter in SharpVectors 2.x and stripped of some of its shared features (a breaking change). Sample Code SVG to XAML C# SVG to XAML VB.NET using System; using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; using DrawingSvgConverter = SharpVectors.Converters.FileSvgReader; namespace SharpVectors.Test.Sample { public class DrawingSvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public DrawingSvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public DrawingGroup Convert(string svgFile) { // Create the drawing converter var converter = new DrawingSvgConverter(_wpfSettings); // Perform the conversion to DrawingGroup return converter.Read(svgFile); } public DrawingGroup Convert(Uri svgFile) { // Create the drawing converter var converter = new DrawingSvgConverter(_wpfSettings); // Perform the conversion to DrawingGroup return converter.Read(svgFile); } } } Imports System Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Imports DrawingSvgConverter = SharpVectors.Converters.FileSvgReader Namespace SharpVectors.Test.Sample Public Class DrawingSvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Function Convert(ByVal svgFile As String) As DrawingGroup ' Create the drawing converter Dim converter = New SharpVectors.Converters.FileSvgReader(_wpfSettings) ' Perform the conversion to DrawingGroup Return converter.Read(svgFile) End Function Public Function Convert(ByVal svgFile As Uri) As DrawingGroup ' Create the drawing converter Dim converter = New SharpVectors.Converters.FileSvgReader(_wpfSettings) ' Perform the conversion to DrawingGroup Return converter.Read(svgFile) End Function End Class End Namespace"
  },
  "articles/faq.html": {
    "href": "articles/faq.html",
    "title": "FAQ | SharpVectors Documentation",
    "keywords": "FAQ - Q&A In this article, we will provide answers to known questions, how to work around known issues, etc WPF Component Threading Issues GDI+ Component"
  },
  "articles/file_converter.html": {
    "href": "articles/file_converter.html",
    "title": "FileSvgConverter | SharpVectors Documentation",
    "keywords": "File SVG Converter - FileSvgConverter The FileSvgConverter converter class takes SVG file as input and outputs XAML file. The SVG input can also be one of the following Stream: A stream object providing access to the SVG input content. TextReader: A text reader file providing access to the SVG input content. XmlReader: An XML reader providing access to the SVG input content. Note The output is always to a local file or a network file. It does not provide a backup of existing file. Sample Code The following illustrate a simple case of using the file SVG converter. SVG to XAML C# SVG to XAML VB.NET using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class FileSvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public FileSvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public void Convert(string svgFile, string xamlFile) { // Create a file converter var converter = new FileSvgConverter(_wpfSettings); // Perform the conversion to XAML converter.Convert(svgFile, xamlFile); } } } Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class FileSvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Sub Convert(ByVal svgFile As String, ByVal xamlFile As String) ' Create a file converter Dim converter = New FileSvgConverter(_wpfSettings) ' Perform the conversion to XAML converter.Convert(svgFile, xamlFile) End Sub End Class End Namespace"
  },
  "articles/getting_started.html": {
    "href": "articles/getting_started.html",
    "title": "Getting Started | SharpVectors Documentation",
    "keywords": "Getting Started The SharpVectors library provides three main uses of the SVG files in WPF applications. In this section, we will provide information to get you started with these uses. For the WPF application, the rendering of the SVG files are provided through classes shown in the diagram below: In some cases, the listed classes are entry points to the actual implementations as shown below for the text rendering. For the GDI+ application, the rendering classes are shown in the diagram below: Options and Settings A class WpfDrawingSettings in the SharpVectors.Rendering.Wpf assembly provides the currently available user-defined options for the rendering. The other options class shown below is the WpfResourceSettings class, ResourceDictionary specific output options that will be discussed later: All the properties of this class are well documented. The most important properties are CultureInfo: This is the culture information used for the text rendering, and it is passed to the FormattedText class. The default is the English culture. IncludeRuntime: This determines whether the application using the output of the conversion will link to the SharpVectors.Runtime.dll. The default is true, set this to false if you do not intend to use the runtime assembly. TextAsGeometry: This determines whether the texts are rendered as path geometry. The default is false. The vertical text does not currently support this option. Set this to true if do not want to use the runtime assembly, so that font path will not be included in the output. Note The TextAsGeometry property is marked as deprecated in this version, and will be removed in version 2.0 of the SharpVectors library. Rendering Process For the WPF system, the rendering process is managed by various classes listed below: named WpfSvgWindow: An class implementing an abstraction of browser window object. WpfDrawingRenderer: The controlling class used by the WPF implementation. WpfDrawingDocument:: This is used to collect rendered drawing information such as a mapping of an SVG ID to the rendered drawing object, WpfDrawingContext: The rendering context, which is not directly accessed by the user. The following code illustrate the basic code required to render an SVG file to a WPF drawing object: Rendering C# Sample Rendering VB.NET Sample using System; using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class TestRendering { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; // The browser window object abstraction. private WpfSvgWindow _wpfWindow; // The main rendering controller. private WpfDrawingRenderer _wpfRenderer; public TestRendering() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); // Set the options to the rendering controller _wpfRenderer = new WpfDrawingRenderer(_wpfSettings); // Create a drawing area of 500x500 pixels and set the rending object to it. _wpfWindow = new WpfSvgWindow(500, 500, _wpfRenderer); } public void Render(string svgFile) { // Create an instance of the rendered document var drawingDocument = new WpfDrawingDocument(); // Signal the start of the rendering process, the drawing context is created. _wpfRenderer.BeginRender(drawingDocument); // Open the specified SVG file for drawin, the SVG DOM is created as SvgDocument _wpfWindow.LoadDocument(svgFile, _wpfSettings); // Get the created SVG document var svgDocument = _wpfWindow.Document as SvgDocument; // Render the SVG document _wpfRenderer.Render(svgDocument); // Retrived the rendered drawing, and do something with it DrawingGroup drawing = _wpfRenderer.Drawing; // Signal an end to the rendering process _wpfRenderer.EndRender(); } } } Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class TestRendering ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings ' The browser window object abstraction. Private _wpfWindow As WpfSvgWindow ' The main rendering controller. Private _wpfRenderer As WpfDrawingRenderer Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() ' Set the options to the rendering controller _wpfRenderer = New WpfDrawingRenderer(_wpfSettings) ' Create a drawing area of 500x500 pixels and set the rending object to it. _wpfWindow = New WpfSvgWindow(500, 500, _wpfRenderer) End Sub Public Sub Render(ByVal svgFile As String) ' Create an instance of the rendered document Dim drawingDocument = New WpfDrawingDocument() ' Signal the start of the rendering process, the drawing context is created. _wpfRenderer.BeginRender(drawingDocument) ' Open the specified SVG file for drawin, the SVG DOM is created as SvgDocument _wpfWindow.LoadDocument(svgFile, _wpfSettings) ' Get the created SVG document Dim svgDocument = TryCast(_wpfWindow.Document, SvgDocument) ' Render the SVG document _wpfRenderer.Render(svgDocument) ' Retrived the rendered drawing, and do something with it Dim drawing As DrawingGroup = _wpfRenderer.Drawing ' Signal an end to the rendering process _wpfRenderer.EndRender() End Sub End Class End Namespace Note The specified dimensions to the window object is not necessarily applied, since the conversion to WPF is a vector-to-vector conversion. This enables the rendered to be scaled in the displaying control, such as the Image or Canvas. To explicitly apply the dimension, set the PixelWidth and PixelHeight properties in the settings object. This is mainly useful for the generation of static images. In order to simplify the above codes and avoid repetitions, utility classes (named: Converters) are provided to handle specific needs such as converting a whole directory or converting a set of SVG files into a ResourceDictionary object. XAML Support - Namespaces SharpVectors defines two XmlnsPrefixAttribute and XmlnsDefinitionAttribute values to simplify the use of the SVG controls and markup extensions in XAML files. The following are the available Xmlns prefix and definitions: For Generic Controls - SharpVectors.Runtime.dll Assembly XmlnsPrefix(\"http://sharpvectors.codeplex.com/runtime/\", \"svg\") XmlnsDefinition(\"http://sharpvectors.codeplex.com/runtime/\", \"SharpVectors.Runtime\") For SVG Controls - SharpVectors.Converters.dll Assembly XmlnsPrefix(\"http://sharpvectors.codeplex.com/svgc/\", \"svgc\") XmlnsDefinition(\"http://sharpvectors.codeplex.com/svgc/\", \"SharpVectors.Converters\") Note The supports of the above XAML namespaces will change in the SharpVectors 2.0+ as the various WPF assemblies are merged. A sample XAML code, from the WpfSvgTestBox test application, illustrating the uses of these XAML namespaces is shown below: <Page x:Class=\"WpfSvgTestBox.SvgPage\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" xmlns:svg=\"http://sharpvectors.codeplex.com/runtime/\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" xmlns:local=\"clr-namespace:WpfSvgTestBox\" mc:Ignorable=\"d\" Title=\"SvgPage\" Background=\"White\" d:DesignHeight=\"450\" d:DesignWidth=\"800\"> <Grid x:Name=\"rightGrid\"> <Grid.RowDefinitions> <RowDefinition Height=\"*\"/> <RowDefinition Height=\"16\"/> <RowDefinition Height=\"220\"/> </Grid.RowDefinitions> <DockPanel LastChildFill=\"True\" Grid.Row=\"0\"> <ToolBar DockPanel.Dock=\"Top\" Height=\"36\"> <Button Click=\"OnOpenFileClick\" ToolTip=\"Open Svg File\"> <Image Source=\"{svgc:SvgImage Source=/Images/Open.svg, AppName=WpfSvgTestBox}\"/> </Button> <Button Click=\"OnSaveFileClick\" ToolTip=\"Save Svg File\"> <Image Source=\"{svgc:SvgImage Source=/Images/Save.svg, AppName=WpfSvgTestBox}\"/> </Button> <Separator/> <Button Command=\"Cut\" ToolTip=\"Cut To Clipboard\"> <Image Source=\"{svgc:SvgImage Source=/Images/Cut.svg, AppName=WpfSvgTestBox}\"/> </Button> </ToolBar> </DockPanel> <local:GridExpander x:Name=\"rightSplitter\" Grid.Row=\"1\"/> <DockPanel x:Name=\"viewerFrame\" LastChildFill=\"True\" Grid.Row=\"2\"> <ScrollViewer x:Name=\"canvasScroller\" CanContentScroll=\"True\" Padding=\"4\" VerticalScrollBarVisibility=\"Auto\" HorizontalScrollBarVisibility=\"Auto\"> <!-- This is the control that handles zooming and panning. --> <svg:ZoomPanControl x:Name=\"zoomPanControl\"> <!-- This Canvas is the content that is displayed by the ZoomPanControl. Width and Height determine the size of the content. --> <svg:SvgDrawingCanvas x:Name=\"svgDrawing\" Background=\"Transparent\"/> </svg:ZoomPanControl> </ScrollViewer> </DockPanel> </Grid> </Page> XAML Output - XmlXamlWriter The WPF framework provides an XAML writer to convert framework objects to XAML format. However, the SharpVectors library provides a similar class, named XmlXamlWriter, for the same purpose but specifically for SharpVectors rendered objects. Also, the system XamlWriter.Save method has a number of limitations, some of which we hope to resolved with our custom implementations: Run-Time, Not Design-Time Representation Serialization is Self-Contained Extension References are Dereferenced Event Handling is Not Preserved The XmlXamlWriter class makes it possible to control and customize the XAML outputs, and it is particularly useful for the ResourceDictionary XAML output. We will create a simple application for illustration, using the following sample SVG file below: <svg width=\"6cm\" height=\"5cm\" viewBox=\"0 0 600 500\" xmlns=\"http://www.w3.org/2000/svg\"> <rect x=\"1\" y=\"1\" width=\"598\" height=\"498\" fill=\"none\" stroke=\"blue\"/> <circle cx=\"300\" cy=\"225\" r=\"100\" fill=\"red\"/> <text x=\"300\" y=\"480\" font-family=\"Verdana\" font-size=\"35\" text-anchor=\"middle\"> Sample Text </text> </svg> A modified version of the previous codes to output XAML is shown below: XAML C# Sample XAML VB.NET Sample using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class TestXamlOutput { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; // The browser window object abstraction. private WpfSvgWindow _wpfWindow; // The main rendering controller. private WpfDrawingRenderer _wpfRenderer; public TestXamlOutput() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); // Set the options to the rendering controller _wpfRenderer = new WpfDrawingRenderer(_wpfSettings); // Create a drawing area of 500x500 pixels and set the rending object to it. _wpfWindow = new WpfSvgWindow(500, 500, _wpfRenderer); } public string SvgToXaml(string svgFile) { // Create an instance of the rendered document var drawingDocument = new WpfDrawingDocument(); // Signal the start of the rendering process, the drawing context is created. _wpfRenderer.BeginRender(drawingDocument); // Open the specified SVG file for drawin, the SVG DOM is created as SvgDocument _wpfWindow.LoadDocument(svgFile, _wpfSettings); // Get the created SVG document var svgDocument = _wpfWindow.Document as SvgDocument; // Render the SVG document _wpfRenderer.Render(svgDocument); // Retrived the rendered drawing, and do something with it DrawingGroup drawing = _wpfRenderer.Drawing; // Signal an end to the rendering process _wpfRenderer.EndRender(); // Create an instance of the XAML writer, and return XAML output var xamlWriter = new XmlXamlWriter(); return xamlWriter.Save(drawing); } } } Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class TestXamlOutput ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings ' The browser window object abstraction. Private _wpfWindow As WpfSvgWindow ' The main rendering controller. Private _wpfRenderer As WpfDrawingRenderer Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() ' Set the options to the rendering controller _wpfRenderer = New WpfDrawingRenderer(_wpfSettings) ' Create a drawing area of 500x500 pixels and set the rending object to it. _wpfWindow = New WpfSvgWindow(500, 500, _wpfRenderer) End Sub Public Function SvgToXaml(ByVal svgFile As String) As String ' Create an instance of the rendered document Dim drawingDocument = New WpfDrawingDocument() ' Signal the start of the rendering process, the drawing context is created. _wpfRenderer.BeginRender(drawingDocument) ' Open the specified SVG file for drawin, the SVG DOM is created as SvgDocument _wpfWindow.LoadDocument(svgFile, _wpfSettings) ' Get the created SVG document Dim svgDocument = TryCast(_wpfWindow.Document, SvgDocument) ' Render the SVG document _wpfRenderer.Render(svgDocument) ' Retrived the rendered drawing, and do something with it Dim drawing As DrawingGroup = _wpfRenderer.Drawing ' Signal an end to the rendering process _wpfRenderer.EndRender() ' Create an instance of the XAML writer, and return XAML output Dim xamlWriter = New XmlXamlWriter() Return xamlWriter.Save(drawing) End Function End Class End Namespace For the given SVG sample, the output XAML is shown below: <DrawingGroup xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:svg=\"http://sharpvectors.codeplex.com/runtime/\"> <DrawingGroup svg:SvgLink.Key=\"_SvgDrawingLayer\"> <DrawingGroup.ClipGeometry> <RectangleGeometry Rect=\"0,0,600,500\" /> </DrawingGroup.ClipGeometry> <GeometryDrawing svg:SvgObject.UniqueId=\"4f9c747c-3c2a-4ce3-976f-4538181b17b1\"> <GeometryDrawing.Pen> <Pen Brush=\"#FF0000FF\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\"/> </GeometryDrawing.Pen> <GeometryDrawing.Geometry> <RectangleGeometry RadiusX=\"0\" RadiusY=\"0\" Rect=\"1,1,598,498\" /> </GeometryDrawing.Geometry> </GeometryDrawing> <GeometryDrawing Brush=\"#FFFF0000\" svg:SvgObject.UniqueId=\"914b46d1-987f-4e04-9fb8-0609cefd5cf3\"> <GeometryDrawing.Geometry> <EllipseGeometry RadiusX=\"100\" RadiusY=\"100\" Center=\"300,225\" /> </GeometryDrawing.Geometry> </GeometryDrawing> <DrawingGroup svg:SvgObject.UniqueId=\"268b85e1-d9bc-4cc3-9b61-01423f096cf5\" svg:SvgObject.Type=\"Text\"> <GlyphRunDrawing ForegroundBrush=\"#FF000000\"> <GlyphRunDrawing.GlyphRun> <GlyphRun PixelsPerDip=\"1\" BaselineOrigin=\"191.643333333333,480\" FontRenderingEmSize=\"35\" BidiLevel=\"0\" Language=\"en-us\" IsSideways=\"False\" ClusterMap=\"0 1 2 3 4 5 6 7 8 9 10\" Characters=\"Sample Text\" GlyphIndices=\"54 68 80 83 79 72 3 55 72 91 87\" AdvanceWidths=\"23.94 21.035 34.055 21.805 9.59 20.86 12.32 17.815 20.86 20.72 13.79\" GlyphOffsets=\"0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0\"> <GlyphRun.GlyphTypeface> <GlyphTypeface FontUri=\"{svg:SvgFontUri k:/win10/fonts/verdana.ttf}\" StyleSimulations=\"None\" /> </GlyphRun.GlyphTypeface> </GlyphRun> </GlyphRunDrawing.GlyphRun> </GlyphRunDrawing> </DrawingGroup> </DrawingGroup> </DrawingGroup> You will observe the following extra information from the XAML output svg:SvgObject.UniqueId: This is added to uniquely identity the rendered object since not all SVG elements will have identifier (ID) specified. This is only useful if you wish to interact with the rendered drawing. GlyphTypeface FontUri: This uses a SharpVectors extension to output the font URI. This is useful to correctly resolve the font path on the deployment user PC, since the font directory may not be the same. This can be eliminated by setting the TextAsGeometry property to true. The extra information can be turned off by setting the IncludeRuntime property to false."
  },
  "articles/image_controls.html": {
    "href": "articles/image_controls.html",
    "title": "SVG Image Controls | SharpVectors Documentation",
    "keywords": "SVG Image Controls The image controls provide SVG-based static images for use in WPF applications by extending the Image control class. Currently, the following two controls are provided: SvgBitmap, a basic SVG image control class. SvgIcon, a specialization of the basic SVG image control class to handle monochrome SVG images. Currently, the rendering options or settings are not exposed through the properties of these control controls. However, this may change based on demand or user feedback. The class diagrams are shown below: classDiagram class Image Image <|-- SvgBitmap SvgBitmap <|-- SvgIcon class SvgBitmap{ +Uri UriSource +string SvgSource +string AppName #OnLoadDrawing(DrawingGroup) void #OnUnloadDiagram() void #GetDrawingSettings() WpfDrawingSettings #CreateDrawing() DrawingGroup #CreateDrawing(Uri, WpfDrawingSettings) DrawingGroup #CreateDrawing(string, WpfDrawingSettings) DrawingGroup } class SvgIcon{ <<sealed>> +Brush Fill +Brush Stroke #OnLoadDrawing(DrawingGroup) void #OnUnloadDiagram() void } SvgBitmap Control The SvgBitmap control extends the WPF Image control class, and provides the following additional properties: SvgBitmap.UriSource is used to set the Uri of the SVG document to be converted to the image source. SvgBitmap.SvgSource is used to set the SVG document in plain text to be converted to the image source. SvgBitmap.AppName is used to specify the name of the source assembly in cases where the SVG document is a resource in a .NET assembly. This provides a hint to the system when resolving the URI to the resource file, especially in the design-mode. The following is XAML code, from the WpfTestResourceSvg sample, illustrating how to use the SvgBitmap control. <Window x:Class=\"WpfTestResourceSvg.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" xmlns:local=\"clr-namespace:WpfTestResourceSvg\" mc:Ignorable=\"d\" Title=\"SharpVector - Design Mode Tests\" Height=\"720\" Width=\"960\" Icon=\"App.ico\" WindowStartupLocation=\"CenterScreen\"> <DockPanel LastChildFill=\"True\" Margin=\"3\"> <TabControl> <TabItem x:Name=\"tabBitmap\"> <TabItem.Header> <StackPanel Orientation=\"Horizontal\"> <Image Height=\"24px\" Width=\"24px\" Source=\"{svgc:SvgImage Source=/Images/SvgLogoBasic.svg, AppName=WpfTestResourceSvg}\" /> <TextBlock Text=\"SvgBitmap\" Margin=\"3\" VerticalAlignment=\"Center\" MinWidth=\"70\"/> </StackPanel> </TabItem.Header> <UniformGrid Rows=\"2\" Columns=\"2\"> <svgc:SvgBitmap UriSource=\"/Resources/autum_leaf.svg\"/> <svgc:SvgBitmap UriSource=\"/Resources/kite.svg\"/> <svgc:SvgBitmap UriSource=\"/Resources/basket.svg\"/> <svgc:SvgBitmap UriSource=\"/Resources/beach_ball.svg\"/> </UniformGrid> </TabItem> </TabControl> </DockPanel> </Window> The output of the above code is shown below: SvgIcon Control The SvgIcon control is a specialization of the SvgBitmap control for monochrome SVG documents, and provides the following additional properties: SvgIcon.Fill defines the Uri be used to fill any element that has a fill style. SvgIcon.Stroke defines the Uri be used to stroke any element that has a stroke style. The brushes of the fill and/or stroke styles in the rendereded drawing are automatically bind to the above properties, so that any change in these properties will automatically change the corresponding element style. Note Currently, we have not found any practical uses of the SvgIcon.Stroke property, but it is maintained per user request. The demonstration of the SvgIcon.Fill property is given below. The following are XAML and C# codes, from the WpfTestResourceSvg sample, illustrating how to use the SvgIcon control. XAML C# <Window x:Class=\"WpfTestResourceSvg.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" xmlns:local=\"clr-namespace:WpfTestResourceSvg\" mc:Ignorable=\"d\" Title=\"SharpVector - Design Mode Tests\" Height=\"720\" Width=\"960\" Icon=\"App.ico\" WindowStartupLocation=\"CenterScreen\"> <DockPanel LastChildFill=\"True\" Margin=\"3\"> <TabItem x:Name=\"tabSvgIcon\"> <TabItem.Header> <StackPanel Orientation=\"Horizontal\"> <Image Height=\"24px\" Width=\"24px\" Source=\"{svgc:SvgImage Source=/Images/SvgLogoBasic.svg, AppName=WpfTestResourceSvg}\" /> <TextBlock Text=\"SvgIcon\" Margin=\"3\" VerticalAlignment=\"Center\" MinWidth=\"70\"/> </StackPanel> </TabItem.Header> <DockPanel LastChildFill=\"True\"> <StackPanel Orientation=\"Horizontal\" DockPanel.Dock=\"Top\" Margin=\"10\" HorizontalAlignment=\"Center\"> <TextBlock Text=\"Select Fill Brush\" FontSize=\"16\" VerticalAlignment=\"Center\" Margin=\"6\"/> <ComboBox x:Name=\"cboColors\" ItemsSource=\"{Binding Path=KnownColors}\" Margin=\"3\" Height=\"32\" VerticalAlignment=\"Top\" VerticalContentAlignment=\"Center\" HorizontalAlignment=\"Left\" Width=\"200\" BorderBrush=\"Transparent\" SelectionChanged=\"OnColorChanged\"> <ComboBox.ItemTemplate> <DataTemplate> <StackPanel Orientation=\"Horizontal\"> <Border Width=\"32\" Height=\"Auto\" Margin=\"5,0\" BorderThickness=\"1\" BorderBrush=\"Black\" > <Border.Background> <SolidColorBrush Color=\"{Binding Color}\"/> </Border.Background> </Border> <TextBlock Text=\"{Binding Name}\" FontSize=\"12\"/> </StackPanel> </DataTemplate> </ComboBox.ItemTemplate> </ComboBox> </StackPanel> <UniformGrid Rows=\"2\" Columns=\"2\"> <svgc:SvgIcon Fill=\"{Binding Path=FillBrush, FallbackValue=Gold}\"> <svgc:SvgIcon.SvgSource> <![CDATA[ <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M2 6C2 4.34315 3.34315 3 5 3H6.5C7.05228 3 7.5 3.44772 7.5 4C7.5 4.55228 7.05228 5 6.5 5H5C4.44772 5 4 5.44772 4 6V7.5C4 8.05228 3.55228 8.5 3 8.5C2.44772 8.5 2 8.05228 2 7.5V6ZM16.5 4C16.5 3.44772 16.9477 3 17.5 3H19C20.6569 3 22 4.34315 22 6V7.5C22 8.05228 21.5523 8.5 21 8.5C20.4477 8.5 20 8.05228 20 7.5V6C20 5.44772 19.5523 5 19 5H17.5C16.9477 5 16.5 4.55228 16.5 4ZM3 15.5C3.55228 15.5 4 15.9477 4 16.5V18C4 18.5523 4.44772 19 5 19H6.5C7.05228 19 7.5 19.4477 7.5 20C7.5 20.5523 7.05228 21 6.5 21H5C3.34315 21 2 19.6569 2 18V16.5C2 15.9477 2.44772 15.5 3 15.5ZM21 15.5C21.5523 15.5 22 15.9477 22 16.5V18C22 19.6569 20.6569 21 19 21H17.5C16.9477 21 16.5 20.5523 16.5 20C16.5 19.4477 16.9477 19 17.5 19H19C19.5523 19 20 18.5523 20 18V16.5C20 15.9477 20.4477 15.5 21 15.5ZM6 6.75C6.55228 6.75 7 7.19772 7 7.75V16.25C7 16.8023 6.55228 17.25 6 17.25C5.44772 17.25 5 16.8023 5 16.25V7.75C5 7.19772 5.44772 6.75 6 6.75ZM11 7.75C11 7.19772 10.5523 6.75 10 6.75C9.44772 6.75 9 7.19772 9 7.75V16.25C9 16.8023 9.44772 17.25 10 17.25C10.5523 17.25 11 16.8023 11 16.25V7.75ZM14 6.75C14.5523 6.75 15 7.19772 15 7.75V16.25C15 16.8023 14.5523 17.25 14 17.25C13.4477 17.25 13 16.8023 13 16.25V7.75C13 7.19772 13.4477 6.75 14 6.75ZM19 7.75C19 7.19772 18.5523 6.75 18 6.75C17.4477 6.75 17 7.19772 17 7.75V16.25C17 16.8023 17.4477 17.25 18 17.25C18.5523 17.25 19 16.8023 19 16.25V7.75Z\" fill=\"#212121\" /> </svg> ]]> </svgc:SvgIcon.SvgSource> </svgc:SvgIcon> <svgc:SvgIcon Fill=\"{Binding Path=FillBrush, FallbackValue=Red}\"> <svgc:SvgIcon.SvgSource> <![CDATA[ <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 221.692 221.692\" style=\"enable-background:new 0 0 221.692 221.692;\" xml:space=\"preserve\"> <path d=\"M179.339,0H42.353C31.521,0,22.708,8.813,22.708,19.645v182.403c0,10.832,8.813,19.645,19.645,19.645h136.987 c10.833,0,19.645-8.813,19.645-19.645V19.645C198.984,8.813,190.172,0,179.339,0z M185.513,195.125 c0,7.015-5.707,12.722-12.721,12.722H48.901c-7.015,0-12.721-5.707-12.721-12.722V26.567c0-7.015,5.707-12.721,12.721-12.721 h123.891c7.015,0,12.721,5.706,12.721,12.721V195.125z M172.792,23.847H48.901c-1.5,0-2.721,1.221-2.721,2.721v168.558 c0,1.501,1.221,2.722,2.721,2.722h123.891c1.5,0,2.721-1.221,2.721-2.722V26.567C175.513,25.067,174.292,23.847,172.792,23.847z M149.293,120.847c0,2.762-2.239,5-5,5h-17v18.446c0,2.762-2.239,5-5,5h-20c-2.761,0-5-2.238-5-5v-18.446H77.399 c-2.761,0-5-2.238-5-5v-20c0-2.762,2.239-5,5-5h19.895V77.399c0-2.762,2.239-5,5-5h20c2.761,0,5,2.238,5,5v18.447h17 c2.761,0,5,2.238,5,5V120.847z M165.521,183.125c0,2.762-2.239,5-5,5s-5-2.238-5-5v-27.667c0-2.762,2.239-5,5-5s5,2.238,5,5V183.125 z\"/> </svg> ]]> </svgc:SvgIcon.SvgSource> </svgc:SvgIcon> <svgc:SvgIcon Fill=\"{Binding Path=FillBrush, FallbackValue=Blue}\"> <svgc:SvgIcon.SvgSource> <![CDATA[ <svg version=\"1.2\" baseProfile=\"tiny\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"-63 65 128 128\" xml:space=\"preserve\"> <g> <rect x=\"-16.9\" y=\"130.3\" width=\"71.8\" height=\"5.8\"/> <circle cx=\"-17.2\" cy=\"78.8\" r=\"12.8\"/> <path d=\"M1,141.7c-1.5-1.5-3.3-2.3-5.1-2.3h-21.6v-16.1l-11.2-19.1c-0.4-0.7-0.1-1.8,0.5-2.2c0.7-0.4,1.8-0.1,2.2,0.5l12.8,22.1 c0.9,1.7,2.7,2.8,4.8,2.8H5.6c3.1,0,5.6-2.6,5.6-5.6c0-3.1-2.6-5.6-5.6-5.6l-18.5,0.2l-14.7-24.8c-1-2-3.2-3-5.8-3 c-0.3,0-1.1,0.1-1.6,0.2c-0.3,0.1-0.8,0.2-1.1,0.3c-10.8,3.5-19.4,20.6-19.4,38.3c-0.1,5.3,0,9.8,0.3,14.1 c-0.4,5.1,2.6,10.1,7.6,12c1.4,0.4,2.6,0.7,4,0.7h32.2v30.1c0,4.2,3.2,7.3,7.3,7.3c4.2,0,7.3-3.2,7.3-7.3v-37.5 C3.2,145,2.5,143,1,141.7z\"/> <path d=\"M61.8,98.9v-5.6h-3.1c-0.2-1-0.6-2-1.1-2.8l2.2-2.2l-4-4l-2.2,2.2c-0.9-0.5-1.9-0.9-2.8-1.1v-3.1h-5.5v3.1 c-1,0.2-2,0.6-2.8,1.1l-2.2-2.2l-4,4l2.1,2.2c-0.5,0.9-0.9,1.9-1.1,2.8h-3.1v5.5h3.1c0.2,1,0.6,2,1.1,2.8l-2.2,2.2l4,4l2.2-2.2 c0.9,0.5,1.9,0.9,2.8,1.1v3.1h5.5v-3.1c1-0.2,2-0.6,2.8-1.1l2.2,2.2l4-4l-2.2-2.2c0.5-0.9,0.9-1.9,1.1-2.8h3.2V98.9z M48,103.6 c-4.2,0-7.5-3.3-7.5-7.5s3.3-7.5,7.5-7.5s7.5,3.3,7.5,7.5C55.4,100.2,52,103.6,48,103.6z\"/> <path d=\"M38.2,109.8v3c-0.1,0-0.2,0.1-0.4,0.2c-0.1,0-0.2,0.1-0.2,0.1l-2.1-2.1l-2.7,2.7l2.1,2.1c-0.1,0.2-0.2,0.4-0.2,0.6h-3v3.8 h3c0.1,0.2,0.2,0.4,0.2,0.5l-2.2,2.2l2.7,2.7l2.2-2.2c0.2,0.1,0.3,0.1,0.5,0.2v3.1h3.8v-3.1c0.1,0,0.2-0.1,0.3-0.1 c0.1,0,0.1,0,0.2-0.1l2.2,2.2l2.7-2.7l-2.2-2.2c0.1-0.2,0.2-0.3,0.2-0.5h3.1v-3.8h-3c-0.1-0.2-0.1-0.4-0.2-0.5l2.2-2.1l-2.7-2.7 l-2.1,2.1c-0.2-0.1-0.4-0.2-0.6-0.2v-3L38.2,109.8z M42.1,119.4c-0.6,1.1-2.1,1.6-3.2,0.9c-1.1-0.6-1.6-2.1-0.9-3.2 c0.6-1.1,2.1-1.6,3.2-0.9C42.4,116.8,42.9,118.3,42.1,119.4z\"/> <path d=\"M12.7,107.1l-3.6,3.6l4.4,4.5l3.6-3.6c0.2,0.1,0.3,0.1,0.4,0.2c0.1,0,0.2,0.1,0.3,0.1v5.2h6.3V112c0.3-0.1,0.5-0.2,0.8-0.3 l3.6,3.6l4.5-4.4l-3.5-3.5c0.1-0.3,0.3-0.6,0.4-0.9h5v-6.3h-5c-0.1-0.3-0.2-0.6-0.4-0.9l3.6-3.6l-4.4-4.5l-3.5,3.5 c-0.2-0.1-0.4-0.2-0.6-0.2c-0.1,0-0.2-0.1-0.4-0.2v-4.9h-6.3v4.9c-0.3,0.1-0.6,0.2-0.9,0.4l-3.4-3.5l-4.5,4.4l3.5,3.5 c-0.1,0.3-0.3,0.6-0.4,0.9h-5v6.3h5.1C12.4,106.6,12.5,106.9,12.7,107.1z M19.6,97.4c3.1-0.8,6.5,1,7.3,4.2c0.8,3.1-1,6.5-4.2,7.3 c-3.1,0.8-6.5-1-7.3-4.2C14.5,101.6,16.4,98.3,19.6,97.4z\"/> </g> </svg> ]]> </svgc:SvgIcon.SvgSource> </svgc:SvgIcon> <svgc:SvgIcon Fill=\"{Binding Path=FillBrush, FallbackValue=Magenta}\"> <svgc:SvgIcon.SvgSource> <![CDATA[ <svg width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" style=\"enable-background:new 0 0 64 64;\" version=\"1.1\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <g> <path d=\"M51.186,45.583L55,44.82v-9.64l-3.814-0.763c-0.408-1.406-0.968-2.759-1.671-4.038l2.157-3.235l-6.817-6.816l-3.235,2.157 c-1.277-0.703-2.631-1.263-4.037-1.671L36.82,17H27.18l-0.762,3.814c-1.395,0.405-2.737,0.958-4.004,1.652l-3.275-2.131 l-6.804,6.803l2.131,3.277c-0.688,1.256-1.237,2.585-1.641,3.965L9,35.189v9.621l3.825,0.81c0.403,1.38,0.953,2.709,1.641,3.965 l-2.131,3.277l6.804,6.803l3.275-2.131c1.256,0.687,2.585,1.237,3.965,1.641L27.189,63h9.621l0.811-3.825 c1.392-0.407,2.732-0.964,3.998-1.66l3.235,2.157l6.817-6.816l-2.157-3.235C50.218,48.342,50.777,46.988,51.186,45.583z M49.098,52.601l-4.497,4.498l-2.909-1.939l-0.541,0.321c-1.442,0.854-3.001,1.502-4.633,1.925l-0.599,0.155L35.189,61h-6.379 l-0.729-3.44l-0.599-0.155c-1.618-0.419-3.164-1.059-4.596-1.902l-0.534-0.314l-2.946,1.916l-4.511-4.511l1.916-2.947l-0.314-0.534 c-0.843-1.431-1.482-2.977-1.901-4.595l-0.154-0.6L11,43.189v-6.379l3.441-0.729l0.154-0.6c0.419-1.618,1.059-3.164,1.901-4.595 l0.314-0.534l-1.916-2.947l4.511-4.511l2.946,1.916l0.534-0.314c1.443-0.851,3.004-1.494,4.639-1.913l0.609-0.156L28.82,19h6.359 l0.686,3.428l0.609,0.156c1.647,0.422,3.221,1.073,4.676,1.936l0.541,0.321l2.909-1.939l4.497,4.498l-1.938,2.909l0.32,0.541 c0.862,1.456,1.514,3.029,1.936,4.676l0.156,0.609L53,36.82v6.36l-3.429,0.686l-0.156,0.609c-0.422,1.647-1.073,3.22-1.936,4.676 l-0.32,0.541L49.098,52.601z\" /> <rect height=\"2\" width=\"2\" x=\"31\" y=\"21\" /> <rect height=\"2\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -13.6394 21.6155)\" width=\"2\" x=\"18.273\" y=\"26.272\" /> <rect height=\"2\" width=\"2\" x=\"13\" y=\"39\" /> <rect height=\"2\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -31.6396 29.0714)\" width=\"2\" x=\"18.273\" y=\"51.728\" /> <rect height=\"2\" width=\"2\" x=\"31\" y=\"57\" /> <rect height=\"2\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -24.184 47.0708)\" width=\"2\" x=\"43.728\" y=\"51.728\" /> <rect height=\"2\" width=\"2\" x=\"49\" y=\"39\" /> <rect height=\"2\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -6.1838 39.6149)\" width=\"2\" x=\"43.728\" y=\"26.272\" /> <path d=\"M32,27c-7.168,0-13,5.832-13,13s5.832,13,13,13s13-5.832,13-13S39.168,27,32,27z M32,51c-6.065,0-11-4.935-11-11 s4.935-11,11-11s11,4.935,11,11S38.065,51,32,51z\" /> <path d=\"M32,33c-3.859,0-7,3.14-7,7s3.141,7,7,7s7-3.14,7-7S35.859,33,32,33z M32,45c-2.757,0-5-2.243-5-5s2.243-5,5-5s5,2.243,5,5 S34.757,45,32,45z\" /> <rect height=\"2\" width=\"2\" x=\"55\" y=\"53\" /> <rect height=\"2\" width=\"2\" x=\"55\" y=\"57\" /> <rect height=\"2\" width=\"2\" x=\"57\" y=\"55\" /> <rect height=\"2\" width=\"2\" x=\"53\" y=\"55\" /> <rect height=\"2\" width=\"2\" x=\"3\" y=\"55\" /> <rect height=\"2\" width=\"2\" x=\"3\" y=\"59\" /> <rect height=\"2\" width=\"2\" x=\"5\" y=\"57\" /> <rect height=\"2\" width=\"2\" x=\"1\" y=\"57\" /> <rect height=\"2\" width=\"2\" x=\"59\" y=\"21\" /> <rect height=\"2\" width=\"2\" x=\"59\" y=\"25\" /> <rect height=\"2\" width=\"2\" x=\"61\" y=\"23\" /> <rect height=\"2\" width=\"2\" x=\"57\" y=\"23\" /> <rect height=\"2\" width=\"2\" x=\"5\" y=\"23\" /> <rect height=\"2\" width=\"2\" x=\"5\" y=\"27\" /> <rect height=\"2\" width=\"2\" x=\"7\" y=\"25\" /> <rect height=\"2\" width=\"2\" x=\"3\" y=\"25\" /> <path d=\"M10,19c2.999,0,5.812-1.519,7.475-4h29.051c1.663,2.481,4.476,4,7.475,4c2.064,0,4.011-0.689,5.628-1.992l0.372-0.3V13 h-4.382l-1.5-3l1.5-3H60V3.292l-0.372-0.3C58.011,1.689,56.064,1,54,1c-2.999,0-5.812,1.519-7.475,4H17.475 C15.812,2.519,12.999,1,10,1C7.936,1,5.989,1.689,4.372,2.992L4,3.292V7h4.382l1.5,3l-1.5,3H4v3.708l0.372,0.3 C5.989,18.311,7.936,19,10,19z M6,15h3.618l2.5-5l-2.5-5H6V4.268C7.179,3.437,8.552,3,10,3c2.484,0,4.805,1.342,6.056,3.501 L16.345,7h31.311l0.289-0.499C49.195,4.342,51.516,3,54,3c1.448,0,2.821,0.437,4,1.268V5h-3.618l-2.5,5l2.5,5H58v0.732 C56.821,16.563,55.448,17,54,17c-2.484,0-4.805-1.342-6.056-3.501L47.655,13H16.345l-0.289,0.499C14.805,15.658,12.484,17,10,17 c-1.448,0-2.821-0.437-4-1.268V15z\" /> </g> </svg> ]]> </svgc:SvgIcon.SvgSource> </svgc:SvgIcon> </UniformGrid> </DockPanel> </TabItem> </TabControl> </DockPanel> </Window> using System; using System.Collections.Generic; using System.Linq; using System.Reflection; using System.ComponentModel; using System.Windows; using System.Windows.Controls; using System.Windows.Media; namespace WpfTestResourceSvg { /// <summary> /// Interaction logic for MainWindow.xaml /// </summary> public partial class MainWindow : Window, INotifyPropertyChanged { public class KnownColor { public Color Color { get; set; } public string Name { get; set; } } private Brush _fillBrush; private IList<KnownColor> _knownColors; public event PropertyChangedEventHandler PropertyChanged; public MainWindow() { InitializeComponent(); _fillBrush = Brushes.Green; _knownColors = typeof(Colors).GetProperties(BindingFlags.Public | BindingFlags.Static) .Select(i => new KnownColor() { Color = (Color)i.GetValue(null, null), Name = i.Name }).ToList(); this.DataContext = this; } public Brush FillBrush { get { return _fillBrush; } } public IList<KnownColor> KnownColors { get { return _knownColors; } } private void OnColorChanged(object sender, SelectionChangedEventArgs e) { if (cboColors.SelectedIndex < 0) { return; } _fillBrush = new SolidColorBrush(_knownColors[cboColors.SelectedIndex].Color); this.NotifyPropertyChanged(\"FillBrush\"); } private void NotifyPropertyChanged(string propertyName) { PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName)); } } } The output of the above codes is shown below:"
  },
  "articles/image_converter.html": {
    "href": "articles/image_converter.html",
    "title": "ImageSvgConverter | SharpVectors Documentation",
    "keywords": "File SVG Converter - ImageSvgConverter The ImageSvgConverter converter class takes SVG file as input and outputs XAML file. The SVG input can also be one of the following Stream: A stream object providing access to the SVG input content. TextReader: A text reader file providing access to the SVG input content. XmlReader: An XML reader providing access to the SVG input content. Note The output is always to a local file or a network file. It does not provide a backup of existing file. Sample Code The following illustrate a simple case of using the static image SVG converter. SVG to XAML C# SVG to XAML VB.NET using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class ImageSvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public ImageSvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public void Convert(string svgFile, string pngFile) { // Create an image converter var converter = new ImageSvgConverter(_wpfSettings); // Perform the conversion to static image converter.Convert(svgFile, pngFile); } } } Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class ImageSvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Sub Convert(ByVal svgFile As String, ByVal pngFile As String) ' Create an image converter Dim converter = New ImageSvgConverter(_wpfSettings) ' Perform the conversion to static image converter.Convert(svgFile, pngFile) End Sub End Class End Namespace"
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "SharpVectors | SharpVectors Documentation",
    "keywords": "Overview The SharpVectors is packaged in several .NET assemblies. Here is the complete list of available assemblies to get you started on developing and using the library. SharpVectors.Core: This the core library defining all the required interfaces in the W3C SVG specifications, including the events and the style sheets interfaces. There is no official W3C interfaces defined for the .NET framework (like the Java, JavaScript and IDL interfaces), therefore the interfaces defined in this component are .NET specific, and not compactible in naming standards to the W3C interfaces. SharpVectors.Dom: This is an extension to the .NET Framework implementation of the XML DOM (XmlDocument) to support the SVG. The .NET XmlDocument class is extended to support the SVG interfaces defined in the SharpVectors.Core. SharpVectors.Css: This is the implmentation of the style sheets interfaces defined in the SharpVectors.Core, and it is implemented as an extension to the XML DOM of the .NET framework. SharpVectors.Model: This is the main implementation of the SVG DOM and interfaces. In includes the parser of the SVG documents, reducing the SVG file or stream to memory model of .NET objects. Note that this and the above assemblies do not depend on the GDI+ or WPF graphical primitives or objects. SharpVectors.Runtime.Wpf: This is an optional WPF library providing SVG object specific information at the runtime. This includes conversion classes to handle GlyphTypeface.FontUri, which will otherwise be hard-coded with the full path information that may not work on the user's machine, classes to handle embedded images etc. SharpVectors.Rendering.Wpf: This is WPF library, which handles the rendering of the SVG object to the WPF drawing objects. SharpVectors.Converters.Wpf: This is WPF library, which uses the SharpVectors.Rendering.Wpf library to perform actual conversion for viewing. SharpVectors.Rendering.Gdi: This is GDI+ library, which handles the rendering of the SVG object to the System.Drawing objects. This is less complete compared with the WPF renderer. For the WPF components or assemblies, the dependencies are shown in the diagram below: graph LR B[SharpVectors.Dom] --> A[SharpVectors.Core] C[SharpVectors.Css] --> A D[SharpVectors.Model] --> A E[SharpVectors.Rendering.Wpf] --> A F[SharpVectors.Converters] --> A E --> G[SharpVectors.Runtime] E --> B E --> C E --> D F --> G F --> E F --> D F --> C F --> B D --> C D --> B C --> B For the GDI+ components or assemblies, the dependencies are shown in the diagram below: graph LR B[SharpVectors.Dom] --> A[SharpVectors.Core] C[SharpVectors.Css] --> A D[SharpVectors.Model] --> A E[SharpVectors.Rendering.Gdi] --> A E --> B E --> C E --> D D --> C D --> B C --> B History We believe understanding the beginning of this library or its initial goals will make it easy to understand why some features are implemented as it is currently. Years ago, Adobe decided to retired the only the most reliable SVG plugin for the Internet Explorer 6+. With no clear plans to implement native SVG support in browsers, a company using these features to create an interactive car wiring manual for repairing shops, decided to evaluate other options. With only one month to evaluate and present the options, we decided on WPF to take advantage of its flowdocument and animation features, combined with ClickOnce deployments. We needed to convert the SVG diagrams, but the only commercial option available was not rendering valid outputs, no options for user-defined fonts and it was obfuscated - it cannot be extended for our customized needs. Looking for a better solution, we decided to add WPF support to the abandoned SVG library SharpVectorGraphics (aka SVG#). We removed the scripting features (based on depreciated library), and separated the rendering component from the parsing component. Now, since the shipped product will dynamically load the flowdocuments with the coverted SVG diagrams in XAML format: We provided an independent SharpVectors.Runtime.Wpf for viewing the XAML diagrams in the client environment. We also provided SvgDrawingCanvas to display the diagrams, SvgAnimator and SvgAnimationLayer (now modified) for animation. We created the ZAML format, a G-zip compression of the XAML files just like the SVGZ files, to reduce the download size and improve speed. Well, we were disappointed with the results of the evaluation, the speed of WPF 3.5 on the expected basic specs PC in the repair shops, could not match the HTML/SVG rendering speed in the browsers. We released the updated library on CodePlex for other developers to use - the effort could not be wasted! With the quick adoption by the community, some of the design flaws stayed to avoid breaking changes. The SharpVectors.Converters.Wpf library was later added due to increased demand for specialized converters and controls. In the Version 2.0, we will finally make some breaking changes, including The SharpVectors.Converters.Wpf, SharpVectors.Runtime.Wpf and SharpVectors.Rendering.Wpf will be combined. SharpVectors.Runtime.Wpf namespace will be removed. .NET 4.0 (and maybe .NET 4.5) supports will be dropped. It makes no sense, since there is no feature change in WPF, but we can take advantage of C# improvements. Further Information For further information, click the documentation links below: Getting Started SVG Converters SVG Type Converters or Markup Extensions SVG Controls and Viewers Samples and Test Applications WPF Test Sample WPF W3C Test Suite GDI+ Control Test Sample GDI+ Test Viewer Sample Applications"
  },
  "articles/licenses.html": {
    "href": "articles/licenses.html",
    "title": "Licenses | SharpVectors Documentation",
    "keywords": "SharpVectors Licenses SharpVectors License Third-Party Licenses"
  },
  "articles/markup_extensions.html": {
    "href": "articles/markup_extensions.html",
    "title": "SVG Markup Extensions | SharpVectors Documentation",
    "keywords": "SVG Markup Extensions These are WPF markup extensions or type converters for handling the SVG files in WPF applications. Currently, SharpVectors provides two markup extensions, SvgImageExtension and SvgImageConverterExtension, which convert an SVG source document to a DrawingImage. These classes derived from SvgImageBase class, which extents the WPF markup extension base class MarkupExtension as shown below. Markup extensions in WPF are not dependency objects, and cannot support data binding. The SvgImageConverterExtension class implements the IValueConverter interface to enable data binding supports on the markup extension. Use this where data binding is required or the SVG Image Controls (SvgBitmap, SvgIcon), which also provide static images. classDiagram class MarkupExtension class IValueConverter <<abstract>> MarkupExtension <<interface>> IValueConverter MarkupExtension <|-- SvgImageBase SvgImageBase <|-- SvgImageExtension SvgImageBase <|-- SvgImageConverterExtension IValueConverter <|-- SvgImageConverterExtension MarkupExtension: +ProvideValue(IServiceProvider)* object IValueConverter: +Convert(object, Type, object, CultureInfo)* object class SvgImageBase{ <<abstract>> +bool OptimizePath +bool TextAsGeometry +bool IncludeRuntime +string AppName #GetDrawing(Uri) DrawingGroup #GetImage(Uri) DrawingImage #GetAppName() void #GetEntryAssembly() Assembly #GetExecutingAssembly() Assembly #IsDesignMode(IServiceProvider) bool } class SvgImageExtension{ <<sealed>> +string Source +ProvideValue(IServiceProvider) object } class SvgImageConverterExtension{ <<sealed>> +ProvideValue(IServiceProvider) object +Convert(object, Type, object, CultureInfo) object } As shown in the diagram above of the SvgImageBase class, the relevant rendering settings or options are available on these markup extensions as properties. The additional property, SvgImageBase.AppName, is used to specify the name of the source assembly in cases where the SVG document is a resource in a .NET assembly. This provides a hint to the system when resolving the URI to the resource file, especially in the design-mode. The main property here is the SvgImageExtension.Source, which is the path to the SVG file, and the file itself can be located in the following: Web/Internet: The path in this case is the HTTP, FTP, etc scheme URI of the file. Local Computer Disk: The path is the absolute or the relative URI to the SVG file. Resources: The path is the Microsoft Pack URI of the SVG resource file. Note The SVG Markup Extensions are lightweight objects, and unlike the SVG Image Controls, these are not WPF controls. However, if the target use is within image control, then the SVG image controls are preferred. SvgImageExtension Markup Extension This is the basic SVG markup extension to provide SVG static images, and as stated above does not support data binding. The source codes of the WpfTestResourceSvg sample is used for illustration. The XAML source is shown below: SVG resource files are also used as toolbar images. <Window x:Class=\"WpfTestResourceSvg.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" xmlns:local=\"clr-namespace:WpfTestResourceSvg\" mc:Ignorable=\"d\" Title=\"SharpVector - Design Mode Tests\" Height=\"720\" Width=\"960\" Icon=\"App.ico\" WindowStartupLocation=\"CenterScreen\"> <DockPanel LastChildFill=\"True\" Margin=\"3\"> <TabControl> <TabItem x:Name=\"tabSvgImage\"> <TabItem.Header> <StackPanel Orientation=\"Horizontal\"> <Image Height=\"24px\" Width=\"24px\" Source=\"{svgc:SvgImage Source=/Images/SvgLogoBasic.svg, AppName=WpfTestResourceSvg}\" /> <TextBlock Text=\"SvgImage\" Margin=\"3\" VerticalAlignment=\"Center\" MinWidth=\"70\"/> </StackPanel> </TabItem.Header> <DockPanel LastChildFill=\"True\"> <ToolBar DockPanel.Dock=\"Top\" Height=\"36\"> <ToolBar.Resources> <Style TargetType=\"{x:Type Image}\"> <Style.Triggers> <DataTrigger Binding=\"{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}\" Value=\"False\"> <Setter Property=\"Opacity\" Value=\"0.30\" /> </DataTrigger> </Style.Triggers> </Style> </ToolBar.Resources> <Button> <Image Source=\"{svgc:SvgImage Source=/Images/Open.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </Button> <Button> <Image Source=\"{svgc:SvgImage Source=/Images/Save.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </Button> <Separator/> <Button Command=\"Cut\" ToolTip=\"Cut To Clipboard\"> <Image Source=\"{svgc:SvgImage Source=/Images/Cut.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </Button> <Button Command=\"Copy\" ToolTip=\"Copy To Clipboard\"> <Image Source=\"{svgc:SvgImage Source=/Images/Copy.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </Button> <Button Command=\"Paste\" ToolTip=\"Paste From Clipboard\"> <Image Source=\"{svgc:SvgImage Source=/Images/Paste.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </Button> <Button Command=\"Delete\" ToolTip=\"Delete Selection\"> <Image Source=\"{svgc:SvgImage Source=/Images/Delete.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </Button> <Separator/> <Button Command=\"Undo\" ToolTip=\"Undo\"> <Image Source=\"{svgc:SvgImage Source=/Images/Undo.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </Button> <Button Command=\"Redo\" ToolTip=\"Redo\"> <Image Source=\"{svgc:SvgImage Source=/Images/Redo.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </Button> <Separator/> <CheckBox IsChecked=\"{Binding ElementName=textEditor,Path=WordWrap}\" ToolTip=\"Word Wrap\"> <Image Source=\"{svgc:SvgImage Source=/Images/WordWrap.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </CheckBox> <CheckBox IsChecked=\"{Binding ElementName=textEditor,Path=ShowLineNumbers}\" ToolTip=\"Show Line Numbers\"> <Image Source=\"{svgc:SvgImage Source=/Images/Number.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </CheckBox> <CheckBox IsChecked=\"{Binding ElementName=textEditor,Path=Options.ShowEndOfLine}\" ToolTip=\"Show End Of Line\"> <Image Source=\"{svgc:SvgImage Source=/Images/Space.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </CheckBox> <TextBox x:Name=\"searchTextBox\" Width=\"200\" /> <Button> <Image Source=\"{svgc:SvgImage Source=/Images/Find.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> </Button> <Separator/> <Button x:Name=\"formatInput\" ToolTip=\"Format Document\"> <StackPanel Orientation=\"Horizontal\"> <Image Source=\"{svgc:SvgImage Source=/Images/Format.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> <TextBlock Margin=\"3,0,0,0\" VerticalAlignment=\"Center\">Format</TextBlock> </StackPanel> </Button> <Separator/> <Button x:Name=\"convertInput\" ToolTip=\"Convert Document\"> <StackPanel Orientation=\"Horizontal\"> <Image Source=\"{svgc:SvgImage Source=/Images/Run.svg, AppName=WpfTestResourceSvg}\" Height=\"24\" Width=\"24\"/> <TextBlock Margin=\"3,0,0,0\" VerticalAlignment=\"Center\">Convert</TextBlock> </StackPanel> </Button> </ToolBar> <UniformGrid Rows=\"2\" Columns=\"2\"> <Image Source=\"{svgc:SvgImage Source=/Resources/autum_leaf.svg, AppName=WpfTestResourceSvg}\" Stretch=\"Uniform\"/> <Image Source=\"{svgc:SvgImage Source=/Resources/basket.svg, AppName=WpfTestResourceSvg}\" Stretch=\"Uniform\"/> <Image Source=\"{svgc:SvgImage Source=/Resources/kite.svg, AppName=WpfTestResourceSvg}\" Stretch=\"Uniform\"/> <Image Source=\"{svgc:SvgImage Source=/Resources/beach_ball.svg, AppName=WpfTestResourceSvg}\" Stretch=\"Uniform\"/> </UniformGrid> </DockPanel> </TabItem> </TabControl> </DockPanel> </Window> The following image shows the result of the above uses of the SvgImageExtension class: Note For more extensive illustration of the SvgImageExtension class in both C# and VB.NET, see the SvgImageSample and SvgImageSampleVB samples in the TutorialSamples/ControlSamplesWpf directory. SvgImageConverterExtension Markup Extension This is an extended implementation of the SVG markup extension to support data binding through the converter interface. As above, the source codes of the WpfTestResourceSvg sample is used for illustration. The XAML source is shown below: <Window x:Class=\"WpfTestResourceSvg.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:svgc=\"http://sharpvectors.codeplex.com/svgc/\" xmlns:local=\"clr-namespace:WpfTestResourceSvg\" mc:Ignorable=\"d\" Title=\"SharpVector - Design Mode Tests\" Height=\"720\" Width=\"960\" Icon=\"App.ico\" WindowStartupLocation=\"CenterScreen\"> <DockPanel LastChildFill=\"True\" Margin=\"3\"> <TabControl> <TabItem x:Name=\"tabSvgImageConverter\"> <TabItem.Header> <StackPanel Orientation=\"Horizontal\"> <Image Height=\"24px\" Width=\"24px\" Source=\"{svgc:SvgImage Source=/Images/Output.svg, AppName=WpfTestResourceSvg}\" /> <TextBlock Text=\"SvgImageConverter\" Margin=\"3\" VerticalAlignment=\"Center\" MinWidth=\"70\"/> </StackPanel> </TabItem.Header> <UniformGrid Rows=\"2\" Columns=\"2\"> <Image Source=\"{Binding Converter={svgc:SvgImageConverter}, ConverterParameter=https://dev.w3.org/SVG/tools/svgweb/samples/svg-files/compass.svg, Mode=OneWay}\"/> <Image Source=\"{Binding Converter={svgc:SvgImageConverter}, ConverterParameter=/Resources/autum_leaf.svg, Mode=OneWay}\"/> <Image Source=\"{Binding Converter={svgc:SvgImageConverter}, ConverterParameter=/Resources/basket.svg, Mode=OneWay}\"/> <Image Source=\"{Binding Converter={svgc:SvgImageConverter}, ConverterParameter=/Resources/beach_ball.svg, Mode=OneWay}\"/> </UniformGrid> </TabItem> </TabControl> </DockPanel> </Window> The following image shows the result of the above uses of the SvgImageConverterExtension class: Note For more extensive illustration of the SvgImageConverterExtension class in both C# and VB.NET, see the SvgImageBindingSample and SvgImageBindingSampleVB samples in the TutorialSamples/ControlSamplesWpf directory."
  },
  "articles/resource_converter.html": {
    "href": "articles/resource_converter.html",
    "title": "ResourceSvgConverter | SharpVectors Documentation",
    "keywords": "Resource SVG Converter - ResourceSvgConverter The ResourceSvgConverter converter class takes multiple files and directories as input and outputs a ResourceDictionary in XAML format. This is useful for vector icons, but required supports in the rendering process to track brushes and pens, and an extension to the XmlXamlWriter class to format a compact XAML output. It is the most recent SharpVector SVG converter and adds extension features that will be supported in the other converters. Note Currently, the input is restricted to local or network files and directories. The output is string or local or network file or one of the following Stream: A stream object created by the user. TextWriter: A text writer object created by the user. XmlWriter: An XML writer object created by the user Resource Options This converter offers extra settings or options in the form of WpfResourceSettings class. The following are the properties exposed by the resource options to customize the output resource dictionary XAML: ResourceMode: An enumeration specifying the type of the resource object; DrawingGroup or DrawingImage. DrawingGroup Resource DrawingImage Resource <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:po=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation/options\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"po\"> <DrawingGroup x:Key=\"shapes-rect-01-t\" po:Freeze=\"True\" ClipGeometry=\"F0M0,0L480,0L480,360L0,360z\"> </DrawingGroup> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:po=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation/options\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"po\"> <DrawingImage x:Key=\"shapes-rect-01-t\" po:Freeze=\"True\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L480,0L480,360L0,360z\"> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> ResourceFreeze: Makes the freezable resource object unmodifiable and sets its IsFrozen property to true. To freeze a resource object declared in markup, the PresentationOptions:Freeze attribute is used, as shown above as po.Freeze, and the xmlns:po=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation/options\" namespace is added. Note If this property is set to true, it is admisable to set the ResourceAccessType type below to Static. IndentSpaces: This specifies the number of spaces used for the indentation of the XAML output. It is honored with the XmlReaderSettings. The default is 2 spaces. NumericPrecision: This specifies numeric precision or number of decimal places for the floating number. The default is 4, in complaince to the SVG specifications. Setting this to -1 will disable this property. ColorNameFormat: This determines the key name of color objects, if both BindToResources and BindToColors properties are enabled. The default is Color{0}. BrushNameFormat: This determines the key name of brush objects, if the BindToResources property is enabled. The default is Brush{0}. Note Only solid color brushes are supported and extracted from the drawings. PenNameFormat: This determines the key name of pen or stroke objects, if the BindToResources property is enabled. The default is Pen{0} BindToResources: This determines whether the media basic objects; color, brush and stroke/pen are extracted and the drawing objects bind to them. The default is true. BindToResources == true BindToResources == false <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"#FF000000\"> <GeometryDrawing.Pen> <Pen Brush=\"#FF008000\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> </GeometryDrawing.Pen> <GeometryDrawing.Geometry> <PathGeometry FillRule=\"Nonzero\" Figures=\"M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </GeometryDrawing.Geometry> </GeometryDrawing> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> BindToColors: This determines if the color object of brushes is extracted. The default is true. BindToColors == true BindToColors == false <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <SolidColorBrush x:Key=\"Brush1\" Color=\"#FF000000\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"#FF008000\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> BindPenToBrushes: This determines if solid color brushes of pen/stroke is extracted. The default is true. BindPenToBrushes == true BindPenToBrushes == false <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <Pen x:Key=\"Pen1\" Brush=\"#FF008000\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> Note If BindToResources property is set to false, then BindToColors and BindPenToBrushes values have no effect. UseResourceIndex: This specifies whether a zero-based numbering is applied to the key names. The default is false. UseResourceIndex == true UseResourceIndex == false <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color0\">#FF000000</Color> <Color x:Key=\"Color1\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush0\" Color=\"{DynamicResource Color0}\" /> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <Pen x:Key=\"Pen0\" Brush=\"{DynamicResource Brush1}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush0}\" Pen=\"{DynamicResource Pen0}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> ColorPalette: This is a dictionary of color to resource key, specifying a predefined resource keys for the colors. Color Palette C# Color Palette VB.NET XAML Output // Create the resource settings or options var resourceSettings = new WpfResourceSettings() { ColorPalette = new Dictionary<Color, string>(WpfDrawingResources.ColorComparer) { { (Color)ColorConverter.ConvertFromString(\"#FF000000\"), \"IconFill\" }, { (Color)ColorConverter.ConvertFromString(\"#FF008000\"), \"IconBorder\" }, } }; // Add a directory as SVG source resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(resourceSettings); // Perform the conversion to ResourceDictionary XAML var xamlText = converter.Convert(); ' Create the resource settings or options Dim resourceSettings = New WpfResourceSettings() With { .ColorPalette = New Dictionary(Of Color, String)(WpfDrawingResources.ColorComparer) From { {CType(ColorConverter.ConvertFromString(\"#FF000000\"), Color), \"IconFill\"}, {CType(ColorConverter.ConvertFromString(\"#FF008000\"), Color), \"IconBorder\"} } } ' Add a directory as SVG source resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(resourceSettings) ' Perform the conversion to ResourceDictionary XAML Dim xamlText = converter.Convert() <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"IconFill\">#FF000000</Color> <Color x:Key=\"IconBorder\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource IconFill}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource IconBorder}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> Sources: Gets an enumeration of all the SVG sources to be converted to the resource dictionary. SourceCount: Gets the count of the SVG sources to be converted to the resource dictionary. ResourceAccess: This specifies the type of the resource access, DynamicResource or StaticResource, to be applied to the resource objects. ResourceAccessType.Dynamic ResourceAccessType.Static <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{DynamicResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Pen=\"{DynamicResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF000000</Color> <Color x:Key=\"Color2\">#FF008000</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{StaticResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{StaticResource Color2}\" /> <Pen x:Key=\"Pen1\" Brush=\"{StaticResource Brush2}\" Thickness=\"1\" StartLineCap=\"Flat\" EndLineCap=\"Flat\" LineJoin=\"Miter\" /> <DrawingImage x:Key=\"simple-path\"> <DrawingImage.Drawing> <DrawingGroup ClipGeometry=\"F0M0,0L110,0L110,110L0,110z\"> <GeometryDrawing Brush=\"{StaticResource Brush1}\" Pen=\"{StaticResource Pen1}\" Geometry=\"F1M10,30A20,20,0,0,1,50,30A20,20,0,0,1,90,30Q90,60 50,90 10,60 10,30z\" /> </DrawingGroup> </DrawingImage.Drawing> </DrawingImage> </ResourceDictionary> ResourceResolverType: Get a value specifying the current type of the resource object key resolver, which is implemented through the IResourceKeyResolver interface. This applies to the main resource objects; DrawingGroup or DrawingImage (and not the color, brush or pen objects). It returns None, if no resource key resolver is attached, in which case the default resolver will be used. ResourceKeyResolverType - Default For the illustration of the resource key resolvers, we will assume a directory containing the following three SVG files about.svg area_chart.svg crystal_oscillator.svg The following sample code uses the default resource key resolver, or ResourceKeyResolver, to resolve the keys. If not specified, the keys are simply the SVG file names without the file extension. C# VB.NET XAML using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"area_chart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> <DrawingGroup x:Key=\"about\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7,7.7,6,11,6L37, 6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24,17C22.8954, 17,22,16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> <DrawingGroup x:Key=\"crystal_oscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43,37C44.1,37,45,36.1, 45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1,39,22,38.1, 22,37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> </ResourceDictionary> The default resource key resolver supports simple string substitution template to customize the resource keys with the following two tags ${name}: Representing the SVG file name without the extension. ${number}: Representing the resource number or index, depending on the value of the UseResourceIndex property. For instance, using a key format of icon_${name}, an SVG file with the name about.svg will be have a resource key: icon_about. The following sample code illustrates how the customized resource key format is applied with the default resolver, and the resulting XAML output: C# VB.NET XAML using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Initialize the default key resolver and register it var resolver = new ResourceKeyResolver(\"icon_${name}\"); _resourceSettings.RegisterResolver(resolver); } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Initialize the default key resolver and register it Dim resolver = New ResourceKeyResolver(\"icon_${name}\") _resourceSettings.RegisterResolver(resolver) End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"icon_area_chart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> <DrawingGroup x:Key=\"icon_crystal_oscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43,37C44.1,37,45,36.1, 45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1,39,22,38.1,22, 37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> <DrawingGroup x:Key=\"icon_about\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7,7.7,6,11,6L37, 6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24,17C22.8954,17,22, 16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> </ResourceDictionary> ResourceKeyResolverType - Dictionary For the cases where the resource keys are already defined, you can use the dictionary resolver, or DictionaryKeyResolver, which maps the SVG file names without the extension to the predefined keys. The following sample code uses the dictionary resource key resolver, or DictionaryKeyResolver, to resolve the keys of the previous SVG sample files. C# VB.NET XAML using System; using System.Collections.Generic; using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Create a dictionary of SVG file name to predefined names var dictionaryKeys = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase) { { \"about\", \"About\" }, { \"area_chart\", \"AreaChart\" }, { \"crystal_oscillator\", \"CrystalOscillator\" } }; // Initialize the dictionary key resolver and register it var resolver = new DictionaryKeyResolver(dictionaryKeys); _resourceSettings.RegisterResolver(resolver); } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System Imports System.Collections.Generic Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Create a dictionary of SVG file name to predefined names Dim dictionaryKeys = New Dictionary(Of String, String)(StringComparer.OrdinalIgnoreCase) From { {\"about\", \"About\"}, {\"area_chart\", \"AreaChart\"}, {\"crystal_oscillator\", \"CrystalOscillator\"} } ' Initialize the dictionary key resolver and register it Dim resolver = New DictionaryKeyResolver(dictionaryKeys) _resourceSettings.RegisterResolver(resolver) End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"CrystalOscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43,37C44.1,37, 45,36.1,45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1,39,22, 38.1,22,37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> <DrawingGroup x:Key=\"About\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7,7.7,6, 11,6L37,6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24,17C22.8954, 17,22,16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> <DrawingGroup x:Key=\"AreaChart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> </ResourceDictionary> ResourceKeyResolverType - CodeSnippet In applications you need to use a code snippet to implement the IResourceKeyResolver interface, we provider the code snippet resolver, or CodeSnippetKeyResolver, which uses @System.CodeDom.Compiler.CodeDomProvider to compile the implementation in memory and use it to resolve the keys. This is used to reduce dependencies but limits the lanagauge feature supports to .NET 4.0. For the code snippet, the following conditions are required The namespace must be SharpVectors.Renderers. The class name must be SnippetKeyResolver. The following sample code uses the snippet resource key resolver, or CodeSnippetKeyResolver, to resolve the keys. To reduce the code length for the screen, we will assume the snippet is stored in a file, and load it from the file. using System; using System.Xml; using System.Windows; namespace SharpVectors.Renderers { public sealed class SnippetKeyResolver : WpfSettings<SnippetKeyResolver>, IResourceKeyResolver { public SnippetKeyResolver() { } public ResourceKeyResolverType ResolverType { get { return ResourceKeyResolverType.Custom; } } public bool IsValid { get { return true; } } public void BeginResolve() { } public void EndResolve() { } public override SnippetKeyResolver Clone() { return new SnippetKeyResolver(); } public override void ReadXml(XmlReader reader) { } public override void WriteXml(XmlWriter writer) { } public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) { if (index < 0) { throw new ArgumentException(\"The specified index is invalid\", \"index\"); } NotNullNotEmpty(fileName, \"fileName\"); var keyValue = ToLowerCamelCase(fileName.ToUpper()); if (!string.IsNullOrWhiteSpace(keyValue) && keyValue.Length >= 3 && keyValue.Length < 255) { return keyValue; } return fileName; } private static string ToLowerCamelCase(string fileName) { if (string.IsNullOrWhiteSpace(fileName)) { return string.Empty; } string camelCaseStr = char.ToLower(fileName[0]).ToString(); if (fileName.Length > 1) { bool isStartOfWord = false; for (int i = 1; i < fileName.Length; i++) { char currChar = fileName[i]; if (currChar == '_' || currChar == '-') { isStartOfWord = true; } else if (char.IsUpper(currChar)) { if (isStartOfWord) { camelCaseStr += currChar; } else { camelCaseStr += char.ToLower(currChar); } isStartOfWord = false; } else { camelCaseStr += currChar; isStartOfWord = false; } } } return camelCaseStr; } } } The test code snippet (C# code) will convert the specified SVG file name to the lower camel case naming format as the resource key. C# VB.NET XAML using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample(string snippetFile) { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Get the code snippet, here assumed from a file string codeSnippet = string.Empty; using (var reader = new System.IO.StreamReader(snippetFile)) { codeSnippet = reader.ReadToEnd(); } // Initialize the code snippet key resolver and register it var resolver = new CodeSnippetKeyResolver(codeSnippet, \"cs\"); _resourceSettings.RegisterResolver(resolver); } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New(ByVal snippetFile As String) ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Get the code snippet, here assumed from a file Dim codeSnippet = String.Empty Using reader = New StreamReader(snippetFile) codeSnippet = reader.ReadToEnd() End Using ' Initialize the code snippet key resolver and register it Dim resolver = New CodeSnippetKeyResolver(codeSnippet, \"cs\") _resourceSettings.RegisterResolver(resolver) End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"crystalOscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43,37C44.1,37, 45,36.1,45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1,39,22, 38.1,22,37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> <DrawingGroup x:Key=\"about\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7,7.7,6,11, 6L37,6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24, 17C22.8954,17,22,16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> <DrawingGroup x:Key=\"areaChart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> </ResourceDictionary> ResourceKeyResolverType - Custom You can create a custom resource key resolver by implementing the IResourceKeyResolver interface. The following sample code implements a resource key resolver that will convert the specified SVG file name to the upper camel case naming format as the resource key. using System; using System.Xml; using System.Windows; using SharpVectors.Renderers; namespace SharpVectors.Test.Sample { internal sealed class CustomResourceKeyResolver : WpfSettings<CustomResourceKeyResolver>, IResourceKeyResolver { public CustomResourceKeyResolver() { } public override CustomResourceKeyResolver Clone() { return new CustomResourceKeyResolver(); } public override void ReadXml(XmlReader reader) { NotNull(reader, nameof(reader)); } public override void WriteXml(XmlWriter writer) { NotNull(writer, nameof(writer)); } public ResourceKeyResolverType ResolverType { get { return ResourceKeyResolverType.Custom; } } public bool IsValid { get { return true; } } public void BeginResolve() { } public void EndResolve() { } public string Resolve(DependencyObject resource, int index, string fileName, string fileSource) { if (index < 0) { throw new ArgumentException(\"The specified index is invalid\", \"index\"); } NotNullNotEmpty(fileName, \"fileName\"); var keyValue = ToUpperCamelCase(fileName.ToUpper()); if (!string.IsNullOrWhiteSpace(keyValue) && keyValue.Length >= 3 && keyValue.Length < 255) { return keyValue; } return fileName; } internal static string ToUpperCamelCase(string fileName) { if (string.IsNullOrWhiteSpace(fileName)) { return string.Empty; } string camelCaseStr = fileName[0].ToString(); if (fileName.Length > 1) { bool isStartOfWord = false; for (int i = 1; i < fileName.Length; i++) { char currChar = fileName[i]; if (currChar == '_' || currChar == '-') { isStartOfWord = true; } else if (char.IsUpper(currChar)) { if (isStartOfWord) { camelCaseStr += currChar; } else { camelCaseStr += char.ToLower(currChar); } isStartOfWord = false; } else { camelCaseStr += currChar; isStartOfWord = false; } } } return camelCaseStr; } } } The following illustrate how to use the custom resource key resolver. C# VB.NET XAML using System.Windows; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Initialize the custom key resolver and register it var resolver = new CustomResourceKeyResolver(); _resourceSettings.RegisterResolver(resolver); } public string Convert(string svgDir) { // Add a directory as SVG source _resourceSettings.AddSource(svgDir); // Create the resource converter var converter = new ResourceSvgConverter(_resourceSettings); // Perform the conversion to ResourceDictionary XAML return converter.Convert(); } } } Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Initialize the custom key resolver and register it Dim resolver = New CustomResourceKeyResolver() _resourceSettings.RegisterResolver(resolver) End Sub Public Function Convert(ByVal svgDir As String) As String ' Add a directory as SVG source _resourceSettings.AddSource(svgDir) ' Create the resource converter Dim converter = New ResourceSvgConverter(_resourceSettings) ' Perform the conversion to ResourceDictionary XAML Return converter.Convert() End Function End Class End Namespace <ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"> <Color x:Key=\"Color1\">#FF2196F3</Color> <Color x:Key=\"Color2\">#FFFFFFFF</Color> <Color x:Key=\"Color3\">#FF3F51B5</Color> <Color x:Key=\"Color4\">#FF00BCD4</Color> <Color x:Key=\"Color5\">#FFFF9800</Color> <Color x:Key=\"Color6\">#FF64B5F6</Color> <SolidColorBrush x:Key=\"Brush1\" Color=\"{DynamicResource Color1}\" /> <SolidColorBrush x:Key=\"Brush2\" Color=\"{DynamicResource Color2}\" /> <SolidColorBrush x:Key=\"Brush3\" Color=\"{DynamicResource Color3}\" /> <SolidColorBrush x:Key=\"Brush4\" Color=\"{DynamicResource Color4}\" /> <SolidColorBrush x:Key=\"Brush5\" Color=\"{DynamicResource Color5}\" /> <SolidColorBrush x:Key=\"Brush6\" Color=\"{DynamicResource Color6}\" /> <DrawingGroup x:Key=\"CrystalOscillator\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,28L29,28 29,32 3,32z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush5}\" Geometry=\"F0M3,16L29,16 29,20 3,20z\" /> </DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M43,11L20,11 20,37 43, 37C44.1,37,45,36.1,45,35L45,13C45,11.9,44.1,11,43,11z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush6}\" Geometry=\"F1M20,9L18,9 18,39 20,39C21.1, 39,22,38.1,22,37L22,11C22,9.9,21.1,9,20,9z\" /> </DrawingGroup> <DrawingGroup x:Key=\"About\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush1}\" Geometry=\"F1M37,40L11,40 5,46 5,12C5,8.7, 7.7,6,11,6L37,6C40.3,6,43,8.7,43,12L43,34C43,37.3,40.3,40,37,40z\" /> <DrawingGroup> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M22,20L26,20 26,31 22,31z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush2}\" Geometry=\"F0M26,15C26,16.1046,25.1046,17,24, 17C22.8954,17,22,16.1046,22,15C22,13.8954,22.8954,13,24,13C25.1046,13,26,13.8954,26,15z\" /> </DrawingGroup> </DrawingGroup> <DrawingGroup x:Key=\"AreaChart\" ClipGeometry=\"F0M0,0L48,0L48,48L0,48z\"> <GeometryDrawing Brush=\"{DynamicResource Brush3}\" Geometry=\"F1M42,37L42,37 6,37 6,25 16,10 30,17 42,6z\" /> <GeometryDrawing Brush=\"{DynamicResource Brush4}\" Geometry=\"F1M42,42L42,42 6,42 6,32 16,24 30,26 42,17z\" /> </DrawingGroup> </ResourceDictionary> Options XML Serialization The resource settings, WpfResourceSettings object can be saved to file in an XML format, or initialized from an XML format file. You can, therefore, create a resource dictionary converter options for a project and share with other developers or projects. The following code defines a sample resource dictionary converter options and serializes WpfResourceSettings object to XML. C# VB.NET XAML using System.Collections.Generic; using System.Windows.Media; using SharpVectors.Renderers; using SharpVectors.Renderers.Wpf; namespace SharpVectors.Test.Sample { public class ResourceSvgConverterSample { private WpfResourceSettings _resourceSettings; public ResourceSvgConverterSample() { // Create the resource settings or options _resourceSettings = new WpfResourceSettings(); _resourceSettings.ResourceFreeze = false; // Do not freeze // Initialize the default key resolver and register it var resolver = new ResourceKeyResolver(\"icon_${name}\"); _resourceSettings.RegisterResolver(resolver); // Add predefined color palette _resourceSettings.ColorPalette = new Dictionary<Color, string>(WpfDrawingResources.ColorComparer) { {(Color)ColorConverter.ConvertFromString(\"#FF008000\"), \"SvgColor01\"}, {(Color)ColorConverter.ConvertFromString(\"#FF000000\"), \"SvgColor02\"}, {(Color)ColorConverter.ConvertFromString(\"#FFFFFF00\"), \"SvgColor03\"}, {(Color)ColorConverter.ConvertFromString(\"#FF0000FF\"), \"SvgColor04\"}, {(Color)ColorConverter.ConvertFromString(\"#FF00FF00\"), \"SvgColor05\"}, {(Color)ColorConverter.ConvertFromString(\"#FF339966\"), \"SvgColor06\"}, {(Color)ColorConverter.ConvertFromString(\"#FFFF00FF\"), \"SvgColor07\"}, {(Color)ColorConverter.ConvertFromString(\"#FFFFA500\"), \"SvgColor08\"}, {(Color)ColorConverter.ConvertFromString(\"#FF007700\"), \"SvgColor09\"}, {(Color)ColorConverter.ConvertFromString(\"#FF33CC66\"), \"SvgColor10\"} }; // Add directories as SVG source _resourceSettings.AddSource(@\"C:\\Abc-Project\\Icons1\"); _resourceSettings.AddSource(@\"C:\\Abc-Project\\Icons2\"); } public string Save() { // Serialize the resource settings to XML return _resourceSettings.Save(); } } } Imports System.Collections.Generic Imports System.Windows.Media Imports SharpVectors.Renderers Imports SharpVectors.Renderers.Wpf Namespace SharpVectors.Test.Sample Public Class ResourceSvgConverterSample Private _resourceSettings As WpfResourceSettings Public Sub New() ' Create the resource settings or options _resourceSettings = New WpfResourceSettings() _resourceSettings.ResourceFreeze = False ' Do not freeze ' Initialize the default key resolver and register it Dim resolver = New ResourceKeyResolver(\"icon_${name}\") _resourceSettings.RegisterResolver(resolver) ' Add predefined color palette _resourceSettings.ColorPalette = New Dictionary(Of Color, String)(WpfDrawingResources.ColorComparer) From { {CType(ColorConverter.ConvertFromString(\"#FF008000\"), Color), \"SvgColor01\"}, {CType(ColorConverter.ConvertFromString(\"#FF000000\"), Color), \"SvgColor02\"}, {CType(ColorConverter.ConvertFromString(\"#FFFFFF00\"), Color), \"SvgColor03\"}, {CType(ColorConverter.ConvertFromString(\"#FF0000FF\"), Color), \"SvgColor04\"}, {CType(ColorConverter.ConvertFromString(\"#FF00FF00\"), Color), \"SvgColor05\"}, {CType(ColorConverter.ConvertFromString(\"#FF339966\"), Color), \"SvgColor06\"}, {CType(ColorConverter.ConvertFromString(\"#FFFF00FF\"), Color), \"SvgColor07\"}, {CType(ColorConverter.ConvertFromString(\"#FFFFA500\"), Color), \"SvgColor08\"}, {CType(ColorConverter.ConvertFromString(\"#FF007700\"), Color), \"SvgColor09\"}, {CType(ColorConverter.ConvertFromString(\"#FF33CC66\"), Color), \"SvgColor10\"} } ' Add directories as SVG source _resourceSettings.AddSource(\"C:\\Abc-Project\\Icons1\") _resourceSettings.AddSource(\"C:\\Abc-Project\\Icons2\") End Sub Public Function Save() As String ' Serialize the resource settings to XML Return _resourceSettings.Save() End Function End Class End Namespace <?xml version=\"1.0\" encoding=\"utf-16\"?> <resourceSettings version=\"1.0.0\"> <properties> <property name=\"ResourceFreeze\" type=\"bool\" value=\"false\" /> <property name=\"UseResourceIndex\" type=\"bool\" value=\"false\" /> <property name=\"ResourceMode\" type=\"enum\" value=\"Drawing\" /> <property name=\"ResourceAccess\" type=\"enum\" value=\"Dynamic\" /> <property name=\"IndentSpaces\" type=\"int\" value=\"2\" /> <property name=\"NumericPrecision\" type=\"int\" value=\"4\" /> </properties> <naming> <property name=\"PenNameFormat\" type=\"string\" value=\"Pen{0}\" /> <property name=\"ColorNameFormat\" type=\"string\" value=\"Color{0}\" /> <property name=\"BrushNameFormat\" type=\"string\" value=\"Brush{0}\" /> <resolver type=\"Default\"> <property name=\"ResourceNameFormat\" type=\"string\" value=\"icon_${name}\" /> </resolver> </naming> <binding> <property name=\"BindToResources\" type=\"bool\" value=\"true\" /> <property name=\"BindPenToBrushes\" type=\"bool\" value=\"true\" /> <property name=\"BindToColors\" type=\"bool\" value=\"true\" /> </binding> <palettes> <palette color=\"#FF008000\" name=\"SvgColor01\" /> <palette color=\"#FF000000\" name=\"SvgColor02\" /> <palette color=\"#FFFFFF00\" name=\"SvgColor03\" /> <palette color=\"#FF0000FF\" name=\"SvgColor04\" /> <palette color=\"#FF00FF00\" name=\"SvgColor05\" /> <palette color=\"#FF339966\" name=\"SvgColor06\" /> <palette color=\"#FFFF00FF\" name=\"SvgColor07\" /> <palette color=\"#FFFFA500\" name=\"SvgColor08\" /> <palette color=\"#FF007700\" name=\"SvgColor09\" /> <palette color=\"#FF33CC66\" name=\"SvgColor10\" /> </palettes> <sources> <source>C:/Abc-Project/Icons1</source> <source>C:/Abc-Project/Icons2</source> </sources> </resourceSettings>"
  },
  "articles/stream_converter.html": {
    "href": "articles/stream_converter.html",
    "title": "StreamSvgConverter | SharpVectors Documentation",
    "keywords": "Stream SVG Converter - StreamSvgConverter The StreamSvgConverter converter class takes SVG file as input and outputs XAML file. The SVG input can also be one of the following Stream: A stream object providing access to the SVG input content. TextReader: A text reader file providing access to the SVG input content. XmlReader: An XML reader providing access to the SVG input content. Note This strictly converts the input SVG source to Stream, which is created by the user. Sample Code The following illustrate a simple case of using the stream SVG converter. SVG to XAML C# SVG to XAML VB.NET using System.IO; using System.Windows; using System.Windows.Media; using System.Windows.Media.Imaging; using SharpVectors.Dom.Svg; using SharpVectors.Converters; using SharpVectors.Renderers.Wpf; using SharpVectors.Renderers.Utils; namespace SharpVectors.Test.Sample { public class StreamSvgConverterSample { // The drawing settings or options. private WpfDrawingSettings _wpfSettings; public StreamSvgConverterSample() { // Initialize the options _wpfSettings = new WpfDrawingSettings(); _wpfSettings.IncludeRuntime = false; _wpfSettings.TextAsGeometry = false; } public void Convert(string svgFile, Stream outputStream) { // Create an image converter var converter = new StreamSvgConverter(_wpfSettings); // Perform the conversion to static image converter.Convert(svgFile, outputStream); } } } Imports System.IO Imports System.Windows.Media Imports System.Windows.Media.Imaging Imports SharpVectors.Dom.Svg Imports SharpVectors.Converters Imports SharpVectors.Renderers.Wpf Imports SharpVectors.Renderers.Utils Namespace SharpVectors.Test.Sample Public Class StreamSvgConverterSample ' The drawing settings or options. Private _wpfSettings As WpfDrawingSettings Public Sub New() ' Initialize the options _wpfSettings = New WpfDrawingSettings() _wpfSettings.IncludeRuntime = False _wpfSettings.TextAsGeometry = False End Sub Public Sub Convert(ByVal svgFile As String, ByVal outputStream As Stream) ' Create an image converter Dim converter = New StreamSvgConverter(_wpfSettings) ' Perform the conversion XAML and save to the specified stream converter.Convert(svgFile, outputStream) End Sub End Class End Namespace"
  },
  "articles/test_tools.html": {
    "href": "articles/test_tools.html",
    "title": "SharpVectors Test Tools | SharpVectors Documentation",
    "keywords": "SharpVectors Test Tools and Applications"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction | SharpVectors Documentation",
    "keywords": "Introduction The Scalable Vector Graphics (SVG) is a well-known graphics format developed and maintained by the W3C SVG Working Group. The SVG is designed to be used on the web, but the format is flexible enough for applications outside the web. Moreover, the format is exported and imported by most image editing applications, making it the ideal format for image file exchanges. SVG is a markup language (an XML format) for describing two-dimensional graphics applications and images, and a set of related graphics script interfaces. With the script interfaces, it can be created and manipulated through JavaScript scripts. The SharpVectors project aims to provide libraries and tools to parse, convert and view the SVG on Windows, especially on the Windows Presentation Foundation (WPF) platform. Installation The SharpVectors library currently targets the following .NET frameworks .NET Framework, Version 4.0 .NET Framework, Version 4.5 .NET Framework, Version 4.6 .NET Framework, Version 4.7 .NET Framework, Version 4.8 .NET Standard, Version 2.1 .NET Core, Version 3.1 .NET 5.0 .NET 6.0 .NET 7.0 The library consists of a number of shared or common components and rendering implementations for Windows Presentation Foundation (WPF) and Windows Forms applications. For the Libraries The library can be downloaded from the following sources NuGet (Full Package - WPF/GDI+), Version 1.8.2 - SharpVectors. NuGet (Full Package - WPF/GDI+), Version 1.8.2 - SharpVectors.Reloaded. NuGet (WPF Only), Version 1.8.2 - SharpVectors.Wpf. GitHub Releases Page, Version 1.8.2. Note The SharpVectors.Reloaded package is the same as the SharpVectors, which is the recommended package if you need the full package. The SharpVectors.Reloaded name was used for the Nuget package at the time the SharpVectors package name was not available. The SharpVectors.Reloaded package name will be retired in Version 2.0. The SharpVectors.Wpf is the recommended package, for WPF only application. As outlined in the roadmap, other packages such as the SharpVectors.Gdi for the GDI+, will be available as the renderers mature. For the Applications The following are related SharpVectors application repositories SvgXaml : SharpVectors based SVG to XAML converter application. SvgViewer : SharpVectors based SVG viewer application. Getting Started This section provides Getting Start information to help you get started. Credits SharpVectors uses source codes from articles and other open source projects. We wish to acknowledge and thank the authors of these great articles and projects SharpVectorGraphics (aka SVG#) by SVG# Team of Developers (SourceForge) WPF Zooming and Panning Control by Ashley Davis (CodeProject) Render Text On A Path With WPF by Charles Petzold (MSDN Magazine - December 2008) MinIoC by Microsoft (Single-file minimal C# IoC container) .NET ZLib Implementation by Alberto M (CodeProject) Brotli compression format by Google (C# Decoder) Links to Resources Overview About SVG Scalable Vector Graphics (SVG) Specifications SVG 1.1 (First Edition) - This version is outdated! SVG 1.1 (Second Edition) Libraries and Frameworks Batik SVG Toolkit, the most complete SVG toolkit available (Java)."
  }
}